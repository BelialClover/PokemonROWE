@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 AgbLibFlashVersion,object
	.size	 AgbLibFlashVersion,13
AgbLibFlashVersion:
	.ascii	"FLASH1M_V103\000"
	.globl	sSetupInfos
	.align	2, 0
	.type	 sSetupInfos,object
sSetupInfos:
	.word	MX29L010
	.word	LE26FV10N1TS
	.word	DefaultFlash
	.size	 sSetupInfos,12
	.align	2, 0
.LC0:
	.word	sSetupInfos
	.align	2, 0
.LC1:
	.word	ProgramFlashByte
	.align	2, 0
.LC2:
	.word	ProgramFlashSector
	.align	2, 0
.LC3:
	.word	EraseFlashChip
	.align	2, 0
.LC4:
	.word	EraseFlashSector
	.align	2, 0
.LC5:
	.word	WaitForFlashWrite
	.align	2, 0
.LC6:
	.word	gFlashMaxTime
	.align	2, 0
.LC7:
	.word	gFlash
.text
	.align	2, 0
	.globl	IdentifyFlash
	.type	 IdentifyFlash,function
	.thumb_func
IdentifyFlash:
	push	{r4, lr}
	ldr	r2, .L10
	ldrh	r0, [r2]
	ldr	r1, .L10+4
	and	r0, r0, r1
	mov	r1, #3
	orr	r0, r0, r1
	strh	r0, [r2]
	bl	ReadFlashId
	lsl	r0, r0, #16
	lsr	r3, r0, #16
	ldr	r2, .L10+8
	mov	r4, #1
	b	.L9
.L11:
	.align	2, 0
.L10:
	.word	67109380
	.word	65532
	.word	sSetupInfos
.L7:
	add	r2, r2, #4
.L9:
	ldr	r1, [r2]
	add	r0, r1, #0
	add	r0, r0, #44
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldrh	r0, [r1, #44]
	cmp	r3, r0
	bne	.L7	@cond_branch
	mov	r4, #0
.L4:
	ldr	r1, .L12
	ldr	r0, [r2]
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r1, .L12+4
	ldr	r0, [r2]
	ldr	r0, [r0, #4]
	str	r0, [r1]
	ldr	r1, .L12+8
	ldr	r0, [r2]
	ldr	r0, [r0, #8]
	str	r0, [r1]
	ldr	r1, .L12+12
	ldr	r0, [r2]
	ldr	r0, [r0, #12]
	str	r0, [r1]
	ldr	r1, .L12+16
	ldr	r0, [r2]
	ldr	r0, [r0, #16]
	str	r0, [r1]
	ldr	r1, .L12+20
	ldr	r0, [r2]
	ldr	r0, [r0, #20]
	str	r0, [r1]
	ldr	r1, .L12+24
	ldr	r0, [r2]
	add	r0, r0, #24
	str	r0, [r1]
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L13:
	.align	2, 0
.L12:
	.word	ProgramFlashByte
	.word	ProgramFlashSector
	.word	EraseFlashChip
	.word	EraseFlashSector
	.word	WaitForFlashWrite
	.word	gFlashMaxTime
	.word	gFlash
.Lfe1:
	.size	 IdentifyFlash,.Lfe1-IdentifyFlash
	.section .rodata
	.align	2, 0
.LC8:
	.word	PollFlashStatus
	.align	2, 0
.LC9:
	.word	gFlashTimeoutFlag
.text
	.align	2, 0
	.globl	WaitForFlashWrite_Common
	.type	 WaitForFlashWrite_Common,function
	.thumb_func
WaitForFlashWrite_Common:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r4, r1, #0
	lsl	r0, r0, #24
	lsr	r7, r0, #24
	lsl	r2, r2, #24
	lsr	r5, r2, #24
	mov	r0, #0
	mov	r8, r0
	add	r0, r7, #0
	bl	StartFlashTimer
	ldr	r6, .L24
	ldr	r1, .L24+4
	mov	r9, r1
	b	.L15
.L25:
	.align	2, 0
.L24:
	.word	PollFlashStatus
	.word	234902869
.L19:
	mov	r0, #240
	mov	r1, r9
	strb	r0, [r1]
	mov	r0, #160
	lsl	r0, r0, #8
	b	.L23
.L18:
	ldr	r0, .L26
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L15	@cond_branch
	ldr	r1, [r6]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, r5
	beq	.L16	@cond_branch
	mov	r0, #240
	mov	r1, r9
	strb	r0, [r1]
	mov	r0, #192
	lsl	r0, r0, #8
.L23:
	orr	r7, r7, r0
	mov	r8, r7
	b	.L16
.L27:
	.align	2, 0
.L26:
	.word	gFlashTimeoutFlag
.L15:
	ldr	r1, [r6]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #24
	lsr	r1, r0, #24
	cmp	r1, r5
	beq	.L16	@cond_branch
	mov	r0, #32
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L18	@cond_branch
	ldr	r1, [r6]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, r5
	bne	.L19	@cond_branch
.L16:
	bl	StopFlashTimer
	mov	r0, r8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 WaitForFlashWrite_Common,.Lfe2-WaitForFlashWrite_Common
.text
	.align	2, 0

