@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gBattle_BG0_X
	.section ewram_data,"aw"
	.align	1, 0
	.type	 gBattle_BG0_X,object
	.size	 gBattle_BG0_X,2
gBattle_BG0_X:
	.short	0x0
	.globl	gBattle_BG0_Y
	.align	1, 0
	.type	 gBattle_BG0_Y,object
	.size	 gBattle_BG0_Y,2
gBattle_BG0_Y:
	.short	0x0
	.globl	gBattle_BG1_X
	.align	1, 0
	.type	 gBattle_BG1_X,object
	.size	 gBattle_BG1_X,2
gBattle_BG1_X:
	.short	0x0
	.globl	gBattle_BG1_Y
	.align	1, 0
	.type	 gBattle_BG1_Y,object
	.size	 gBattle_BG1_Y,2
gBattle_BG1_Y:
	.short	0x0
	.globl	gBattle_BG2_X
	.align	1, 0
	.type	 gBattle_BG2_X,object
	.size	 gBattle_BG2_X,2
gBattle_BG2_X:
	.short	0x0
	.globl	gBattle_BG2_Y
	.align	1, 0
	.type	 gBattle_BG2_Y,object
	.size	 gBattle_BG2_Y,2
gBattle_BG2_Y:
	.short	0x0
	.globl	gBattle_BG3_X
	.align	1, 0
	.type	 gBattle_BG3_X,object
	.size	 gBattle_BG3_X,2
gBattle_BG3_X:
	.short	0x0
	.globl	gBattle_BG3_Y
	.align	1, 0
	.type	 gBattle_BG3_Y,object
	.size	 gBattle_BG3_Y,2
gBattle_BG3_Y:
	.short	0x0
	.globl	gBattle_WIN0H
	.align	1, 0
	.type	 gBattle_WIN0H,object
	.size	 gBattle_WIN0H,2
gBattle_WIN0H:
	.short	0x0
	.globl	gBattle_WIN0V
	.align	1, 0
	.type	 gBattle_WIN0V,object
	.size	 gBattle_WIN0V,2
gBattle_WIN0V:
	.short	0x0
	.globl	gBattle_WIN1H
	.align	1, 0
	.type	 gBattle_WIN1H,object
	.size	 gBattle_WIN1H,2
gBattle_WIN1H:
	.short	0x0
	.globl	gBattle_WIN1V
	.align	1, 0
	.type	 gBattle_WIN1V,object
	.size	 gBattle_WIN1V,2
gBattle_WIN1V:
	.short	0x0
	.globl	gDisplayedStringBattle
	.type	 gDisplayedStringBattle,object
	.size	 gDisplayedStringBattle,400
gDisplayedStringBattle:
	.byte	0x0
	.space	399
	.globl	gBattleTextBuff1
	.type	 gBattleTextBuff1,object
	.size	 gBattleTextBuff1,18
gBattleTextBuff1:
	.byte	0x0
	.space	17
	.globl	gBattleTextBuff2
	.type	 gBattleTextBuff2,object
	.size	 gBattleTextBuff2,18
gBattleTextBuff2:
	.byte	0x0
	.space	17
	.globl	gBattleTextBuff3
	.type	 gBattleTextBuff3,object
	.size	 gBattleTextBuff3,18
gBattleTextBuff3:
	.byte	0x0
	.space	17
	.globl	gBattleTypeFlags
	.align	2, 0
	.type	 gBattleTypeFlags,object
	.size	 gBattleTypeFlags,4
gBattleTypeFlags:
	.word	0x0
	.globl	gBattleTerrain
	.type	 gBattleTerrain,object
	.size	 gBattleTerrain,1
gBattleTerrain:
	.byte	0x0
	.globl	gUnknown_02022FF4
	.align	2, 0
	.type	 gUnknown_02022FF4,object
	.size	 gUnknown_02022FF4,4
gUnknown_02022FF4:
	.word	0x0
	.globl	gMultiPartnerParty
	.align	2, 0
	.type	 gMultiPartnerParty,object
	.size	 gMultiPartnerParty,96
gMultiPartnerParty:
	.byte	0x0
	.byte	0x0
	.space	30
	.space	64
	.align	2, 0
	.type	 sMultiPartnerPartyBuffer,object
	.size	 sMultiPartnerPartyBuffer,4
sMultiPartnerPartyBuffer:
	.word	0x0
	.globl	gUnknown_0202305C
	.align	2, 0
	.type	 gUnknown_0202305C,object
	.size	 gUnknown_0202305C,4
gUnknown_0202305C:
	.word	0x0
	.globl	gUnknown_02023060
	.align	2, 0
	.type	 gUnknown_02023060,object
	.size	 gUnknown_02023060,4
gUnknown_02023060:
	.word	0x0
	.globl	gActiveBattler
	.type	 gActiveBattler,object
	.size	 gActiveBattler,1
gActiveBattler:
	.byte	0x0
	.globl	gBattleControllerExecFlags
	.align	2, 0
	.type	 gBattleControllerExecFlags,object
	.size	 gBattleControllerExecFlags,4
gBattleControllerExecFlags:
	.word	0x0
	.globl	gBattlersCount
	.type	 gBattlersCount,object
	.size	 gBattlersCount,1
gBattlersCount:
	.byte	0x0
	.globl	gBattlerPartyIndexes
	.align	1, 0
	.type	 gBattlerPartyIndexes,object
	.size	 gBattlerPartyIndexes,8
gBattlerPartyIndexes:
	.short	0x0
	.space	6
	.globl	gBattlerPositions
	.type	 gBattlerPositions,object
	.size	 gBattlerPositions,4
gBattlerPositions:
	.byte	0x0
	.space	3
	.globl	gActionsByTurnOrder
	.type	 gActionsByTurnOrder,object
	.size	 gActionsByTurnOrder,4
gActionsByTurnOrder:
	.byte	0x0
	.space	3
	.globl	gBattlerByTurnOrder
	.type	 gBattlerByTurnOrder,object
	.size	 gBattlerByTurnOrder,4
gBattlerByTurnOrder:
	.byte	0x0
	.space	3
	.globl	gCurrentTurnActionNumber
	.type	 gCurrentTurnActionNumber,object
	.size	 gCurrentTurnActionNumber,1
gCurrentTurnActionNumber:
	.byte	0x0
	.globl	gCurrentActionFuncId
	.type	 gCurrentActionFuncId,object
	.size	 gCurrentActionFuncId,1
gCurrentActionFuncId:
	.byte	0x0
	.globl	gBattleMons
	.align	2, 0
	.type	 gBattleMons,object
	.size	 gBattleMons,368
gBattleMons:
	.byte	0x0
	.byte	0x0
	.space	90
	.space	276
	.globl	gBattlerSpriteIds
	.type	 gBattlerSpriteIds,object
	.size	 gBattlerSpriteIds,4
gBattlerSpriteIds:
	.byte	0x0
	.space	3
	.globl	gCurrMovePos
	.type	 gCurrMovePos,object
	.size	 gCurrMovePos,1
gCurrMovePos:
	.byte	0x0
	.globl	gChosenMovePos
	.type	 gChosenMovePos,object
	.size	 gChosenMovePos,1
gChosenMovePos:
	.byte	0x0
	.globl	gCurrentMove
	.align	1, 0
	.type	 gCurrentMove,object
	.size	 gCurrentMove,2
gCurrentMove:
	.short	0x0
	.globl	gChosenMove
	.align	1, 0
	.type	 gChosenMove,object
	.size	 gChosenMove,2
gChosenMove:
	.short	0x0
	.globl	gCalledMove
	.align	1, 0
	.type	 gCalledMove,object
	.size	 gCalledMove,2
gCalledMove:
	.short	0x0
	.globl	gBattleMoveDamage
	.align	2, 0
	.type	 gBattleMoveDamage,object
	.size	 gBattleMoveDamage,4
gBattleMoveDamage:
	.word	0x0
	.globl	gHpDealt
	.align	2, 0
	.type	 gHpDealt,object
	.size	 gHpDealt,4
gHpDealt:
	.word	0x0
	.globl	gTakenDmg
	.align	2, 0
	.type	 gTakenDmg,object
	.size	 gTakenDmg,16
gTakenDmg:
	.word	0x0
	.space	12
	.globl	gLastUsedItem
	.align	1, 0
	.type	 gLastUsedItem,object
	.size	 gLastUsedItem,2
gLastUsedItem:
	.short	0x0
	.globl	gLastUsedAbility
	.align	1, 0
	.type	 gLastUsedAbility,object
	.size	 gLastUsedAbility,2
gLastUsedAbility:
	.short	0x0
	.globl	gBattlerAttacker
	.type	 gBattlerAttacker,object
	.size	 gBattlerAttacker,1
gBattlerAttacker:
	.byte	0x0
	.globl	gBattlerTarget
	.type	 gBattlerTarget,object
	.size	 gBattlerTarget,1
gBattlerTarget:
	.byte	0x0
	.globl	gBattlerFainted
	.type	 gBattlerFainted,object
	.size	 gBattlerFainted,1
gBattlerFainted:
	.byte	0x0
	.globl	gEffectBattler
	.type	 gEffectBattler,object
	.size	 gEffectBattler,1
gEffectBattler:
	.byte	0x0
	.globl	gPotentialItemEffectBattler
	.type	 gPotentialItemEffectBattler,object
	.size	 gPotentialItemEffectBattler,1
gPotentialItemEffectBattler:
	.byte	0x0
	.globl	gAbsentBattlerFlags
	.type	 gAbsentBattlerFlags,object
	.size	 gAbsentBattlerFlags,1
gAbsentBattlerFlags:
	.byte	0x0
	.globl	gIsCriticalHit
	.type	 gIsCriticalHit,object
	.size	 gIsCriticalHit,1
gIsCriticalHit:
	.byte	0x0
	.globl	gMultiHitCounter
	.type	 gMultiHitCounter,object
	.size	 gMultiHitCounter,1
gMultiHitCounter:
	.byte	0x0
	.globl	gBattlescriptCurrInstr
	.align	2, 0
	.type	 gBattlescriptCurrInstr,object
	.size	 gBattlescriptCurrInstr,4
gBattlescriptCurrInstr:
	.word	0x0
	.globl	gChosenActionByBattler
	.type	 gChosenActionByBattler,object
	.size	 gChosenActionByBattler,4
gChosenActionByBattler:
	.byte	0x0
	.space	3
	.globl	gSelectionBattleScripts
	.align	2, 0
	.type	 gSelectionBattleScripts,object
	.size	 gSelectionBattleScripts,16
gSelectionBattleScripts:
	.word	0x0
	.space	12
	.globl	gPalaceSelectionBattleScripts
	.align	2, 0
	.type	 gPalaceSelectionBattleScripts,object
	.size	 gPalaceSelectionBattleScripts,16
gPalaceSelectionBattleScripts:
	.word	0x0
	.space	12
	.globl	gLastPrintedMoves
	.align	1, 0
	.type	 gLastPrintedMoves,object
	.size	 gLastPrintedMoves,8
gLastPrintedMoves:
	.short	0x0
	.space	6
	.globl	gLastMoves
	.align	1, 0
	.type	 gLastMoves,object
	.size	 gLastMoves,8
gLastMoves:
	.short	0x0
	.space	6
	.globl	gLastLandedMoves
	.align	1, 0
	.type	 gLastLandedMoves,object
	.size	 gLastLandedMoves,8
gLastLandedMoves:
	.short	0x0
	.space	6
	.globl	gLastHitByType
	.align	1, 0
	.type	 gLastHitByType,object
	.size	 gLastHitByType,8
gLastHitByType:
	.short	0x0
	.space	6
	.globl	gLastResultingMoves
	.align	1, 0
	.type	 gLastResultingMoves,object
	.size	 gLastResultingMoves,8
gLastResultingMoves:
	.short	0x0
	.space	6
	.globl	gLockedMoves
	.align	1, 0
	.type	 gLockedMoves,object
	.size	 gLockedMoves,8
gLockedMoves:
	.short	0x0
	.space	6
	.globl	gLastUsedMove
	.align	1, 0
	.type	 gLastUsedMove,object
	.size	 gLastUsedMove,2
gLastUsedMove:
	.short	0x0
	.globl	gLastHitBy
	.type	 gLastHitBy,object
	.size	 gLastHitBy,4
gLastHitBy:
	.byte	0x0
	.space	3
	.globl	gChosenMoveByBattler
	.align	1, 0
	.type	 gChosenMoveByBattler,object
	.size	 gChosenMoveByBattler,8
gChosenMoveByBattler:
	.short	0x0
	.space	6
	.globl	gMoveResultFlags
	.align	1, 0
	.type	 gMoveResultFlags,object
	.size	 gMoveResultFlags,2
gMoveResultFlags:
	.short	0x0
	.globl	gHitMarker
	.align	2, 0
	.type	 gHitMarker,object
	.size	 gHitMarker,4
gHitMarker:
	.word	0x0
	.globl	gTakenDmgByBattler
	.type	 gTakenDmgByBattler,object
	.size	 gTakenDmgByBattler,4
gTakenDmgByBattler:
	.byte	0x0
	.space	3
	.globl	gUnknown_0202428C
	.type	 gUnknown_0202428C,object
	.size	 gUnknown_0202428C,1
gUnknown_0202428C:
	.byte	0x0
	.globl	gSideStatuses
	.align	2, 0
	.type	 gSideStatuses,object
	.size	 gSideStatuses,8
gSideStatuses:
	.word	0x0
	.space	4
	.globl	gSideTimers
	.align	2, 0
	.type	 gSideTimers,object
	.size	 gSideTimers,40
gSideTimers:
	.byte	0x0
	.space	19
	.space	20
	.globl	gStatuses3
	.align	2, 0
	.type	 gStatuses3,object
	.size	 gStatuses3,16
gStatuses3:
	.word	0x0
	.space	12
	.globl	gDisableStructs
	.align	2, 0
	.type	 gDisableStructs,object
	.size	 gDisableStructs,160
gDisableStructs:
	.word	0x0
	.space	36
	.space	120
	.globl	gPauseCounterBattle
	.align	1, 0
	.type	 gPauseCounterBattle,object
	.size	 gPauseCounterBattle,2
gPauseCounterBattle:
	.short	0x0
	.globl	gPaydayMoney
	.align	1, 0
	.type	 gPaydayMoney,object
	.size	 gPaydayMoney,2
gPaydayMoney:
	.short	0x0
	.globl	gRandomTurnNumber
	.align	1, 0
	.type	 gRandomTurnNumber,object
	.size	 gRandomTurnNumber,2
gRandomTurnNumber:
	.short	0x0
	.globl	gBattleCommunication
	.type	 gBattleCommunication,object
	.size	 gBattleCommunication,8
gBattleCommunication:
	.byte	0x0
	.space	7
	.globl	gBattleOutcome
	.type	 gBattleOutcome,object
	.size	 gBattleOutcome,1
gBattleOutcome:
	.byte	0x0
	.globl	gProtectStructs
	.align	2, 0
	.type	 gProtectStructs,object
	.size	 gProtectStructs,64
gProtectStructs:
	.byte	0x0
	.space	15
	.space	48
	.globl	gSpecialStatuses
	.align	2, 0
	.type	 gSpecialStatuses,object
	.size	 gSpecialStatuses,96
gSpecialStatuses:
	.byte	0x0
	.space	23
	.space	72
	.globl	gBattleWeather
	.align	1, 0
	.type	 gBattleWeather,object
	.size	 gBattleWeather,2
gBattleWeather:
	.short	0x0
	.globl	gWishFutureKnock
	.align	2, 0
	.type	 gWishFutureKnock,object
	.size	 gWishFutureKnock,28
gWishFutureKnock:
	.byte	0x0
	.space	3
	.space	24
	.globl	gIntroSlideFlags
	.align	1, 0
	.type	 gIntroSlideFlags,object
	.size	 gIntroSlideFlags,2
gIntroSlideFlags:
	.short	0x0
	.globl	gSentPokesToOpponent
	.type	 gSentPokesToOpponent,object
	.size	 gSentPokesToOpponent,2
gSentPokesToOpponent:
	.byte	0x0
	.space	1
	.globl	gExpShareExp
	.align	1, 0
	.type	 gExpShareExp,object
	.size	 gExpShareExp,2
gExpShareExp:
	.short	0x0
	.globl	gEnigmaBerries
	.align	2, 0
	.type	 gEnigmaBerries,object
	.size	 gEnigmaBerries,112
gEnigmaBerries:
	.byte	0x0
	.space	6
	.space	21
	.space	84
	.globl	gBattleScripting
	.align	2, 0
	.type	 gBattleScripting,object
	.size	 gBattleScripting,52
gBattleScripting:
	.word	0x0
	.space	48
	.globl	gBattleStruct
	.align	2, 0
	.type	 gBattleStruct,object
	.size	 gBattleStruct,4
gBattleStruct:
	.word	0x0
	.globl	gLinkBattleSendBuffer
	.align	2, 0
	.type	 gLinkBattleSendBuffer,object
	.size	 gLinkBattleSendBuffer,4
gLinkBattleSendBuffer:
	.word	0x0
	.globl	gLinkBattleRecvBuffer
	.align	2, 0
	.type	 gLinkBattleRecvBuffer,object
	.size	 gLinkBattleRecvBuffer,4
gLinkBattleRecvBuffer:
	.word	0x0
	.globl	gBattleResources
	.align	2, 0
	.type	 gBattleResources,object
	.size	 gBattleResources,4
gBattleResources:
	.word	0x0
	.globl	gActionSelectionCursor
	.type	 gActionSelectionCursor,object
	.size	 gActionSelectionCursor,4
gActionSelectionCursor:
	.byte	0x0
	.space	3
	.globl	gMoveSelectionCursor
	.type	 gMoveSelectionCursor,object
	.size	 gMoveSelectionCursor,4
gMoveSelectionCursor:
	.byte	0x0
	.space	3
	.globl	gBattlerStatusSummaryTaskId
	.type	 gBattlerStatusSummaryTaskId,object
	.size	 gBattlerStatusSummaryTaskId,4
gBattlerStatusSummaryTaskId:
	.byte	0x0
	.space	3
	.globl	gBattlerInMenuId
	.type	 gBattlerInMenuId,object
	.size	 gBattlerInMenuId,1
gBattlerInMenuId:
	.byte	0x0
	.globl	gDoingBattleAnim
	.type	 gDoingBattleAnim,object
	.size	 gDoingBattleAnim,1
gDoingBattleAnim:
	.byte	0x0
	.globl	gTransformedPersonalities
	.align	2, 0
	.type	 gTransformedPersonalities,object
	.size	 gTransformedPersonalities,16
gTransformedPersonalities:
	.word	0x0
	.space	12
	.globl	gPlayerDpadHoldFrames
	.type	 gPlayerDpadHoldFrames,object
	.size	 gPlayerDpadHoldFrames,1
gPlayerDpadHoldFrames:
	.byte	0x0
	.globl	gBattleSpritesDataPtr
	.align	2, 0
	.type	 gBattleSpritesDataPtr,object
	.size	 gBattleSpritesDataPtr,4
gBattleSpritesDataPtr:
	.word	0x0
	.globl	gMonSpritesGfxPtr
	.align	2, 0
	.type	 gMonSpritesGfxPtr,object
	.size	 gMonSpritesGfxPtr,4
gMonSpritesGfxPtr:
	.word	0x0
	.globl	gUnknown_020244D8
	.align	2, 0
	.type	 gUnknown_020244D8,object
	.size	 gUnknown_020244D8,4
gUnknown_020244D8:
	.word	0x0
	.globl	gUnknown_020244DC
	.align	2, 0
	.type	 gUnknown_020244DC,object
	.size	 gUnknown_020244DC,4
gUnknown_020244DC:
	.word	0x0
	.globl	gBattleMovePower
	.align	1, 0
	.type	 gBattleMovePower,object
	.size	 gBattleMovePower,2
gBattleMovePower:
	.short	0x0
	.globl	gMoveToLearn
	.align	1, 0
	.type	 gMoveToLearn,object
	.size	 gMoveToLearn,2
gMoveToLearn:
	.short	0x0
	.globl	gBattleMonForms
	.type	 gBattleMonForms,object
	.size	 gBattleMonForms,4
gBattleMonForms:
	.byte	0x0
	.space	3
	.globl	gFieldStatuses
	.align	2, 0
	.type	 gFieldStatuses,object
	.size	 gFieldStatuses,4
gFieldStatuses:
	.word	0x0
	.globl	gFieldTimers
	.align	2, 0
	.type	 gFieldTimers,object
	.size	 gFieldTimers,12
gFieldTimers:
	.byte	0x0
	.space	11
	.globl	gBattlerAbility
	.type	 gBattlerAbility,object
	.size	 gBattlerAbility,1
gBattlerAbility:
	.byte	0x0
	.globl	gPartnerSpriteId
	.align	1, 0
	.type	 gPartnerSpriteId,object
	.size	 gPartnerSpriteId,2
gPartnerSpriteId:
	.short	0x0
	.globl	gMaxPartyLevel
	.type	 gMaxPartyLevel,object
	.size	 gMaxPartyLevel,1
gMaxPartyLevel:
	.byte	0x1
	.section .rodata
	.align	2, 0
	.type	 sIntroScanlineParams16Bit,object
	.size	 sIntroScanlineParams16Bit,12
sIntroScanlineParams16Bit:
	.word	0x400001c
	.word	-0x5d9fffff
	.byte	0x1
	.space	3
	.align	2, 0
	.type	 sIntroScanlineParams32Bit,object
	.size	 sIntroScanlineParams32Bit,12
sIntroScanlineParams32Bit:
	.word	0x400001c
	.word	-0x599fffff
	.byte	0x1
	.space	3
	.globl	gUnknown_0831AC88
	.align	2, 0
	.type	 gUnknown_0831AC88,object
	.size	 gUnknown_0831AC88,24
gUnknown_0831AC88:
	.short	0x0
	.short	0x0
	.word	gDummyOamData
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8038528
	.type	 sText_ShedinjaJpnName,object
sText_ShedinjaJpnName:
	.byte	0x67
	.byte	0x59
	.byte	0x66
	.byte	0x7e
	.byte	0xff
	.size	 sText_ShedinjaJpnName,5
	.globl	gOamData_831ACA8
	.align	2, 0
	.type	 gOamData_831ACA8,object
	.size	 gOamData_831ACA8,8
gOamData_831ACA8:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.short	0x0
	.globl	gOamData_831ACB0
	.align	2, 0
	.type	 gOamData_831ACB0,object
	.size	 gOamData_831ACB0,8
gOamData_831ACB0:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x28
	.short	0x0
	.type	 gUnknown_0831ACE0,object
gUnknown_0831ACE0:
	.byte	-0x20
	.byte	-0x10
	.byte	-0x10
	.byte	-0x20
	.byte	-0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0831ACE0,8
	.globl	gTypeNames
	.type	 gTypeNames,object
	.size	 gTypeNames,133
gTypeNames:
	.byte	0xc8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe0
	.byte	0xff
	.byte	0xc0
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xc0
	.byte	0xe0
	.byte	0xed
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xff
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xff
	.byte	0xc1
	.byte	0xe6
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0xff
	.byte	0xcc
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xff
	.space	2
	.byte	0xbc
	.byte	0xe9
	.byte	0xdb
	.byte	0xff
	.space	3
	.byte	0xc1
	.byte	0xdc
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xac
	.byte	0xac
	.byte	0xac
	.byte	0xff
	.space	3
	.byte	0xc0
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xff
	.space	1
	.byte	0xbf
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xff
	.byte	0xca
	.byte	0xe7
	.byte	0xed
	.byte	0xd7
	.byte	0xdc
	.byte	0xd7
	.byte	0xff
	.byte	0xc3
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.space	3
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xdb
	.byte	0xe3
	.byte	0xe2
	.byte	0xff
	.byte	0xbe
	.byte	0xd5
	.byte	0xe6
	.byte	0xdf
	.byte	0xff
	.space	2
	.byte	0xc0
	.byte	0xd5
	.byte	0xdd
	.byte	0xe6
	.byte	0xed
	.byte	0xff
	.space	1
	.globl	gTrainerMoneyTable
	.align	2, 0
	.type	 gTrainerMoneyTable,object
gTrainerMoneyTable:
	.byte	0x3
	.byte	0x5
	.space	2
	.byte	0xb
	.byte	0xa
	.space	2
	.byte	0xd
	.byte	0x14
	.space	2
	.byte	0xf
	.byte	0xa
	.space	2
	.byte	0x10
	.byte	0xf
	.space	2
	.byte	0x11
	.byte	0xc
	.space	2
	.byte	0x12
	.byte	0x1
	.space	2
	.byte	0x13
	.byte	0x1
	.space	2
	.byte	0x39
	.byte	0x3
	.space	2
	.byte	0x5
	.byte	0xc
	.space	2
	.byte	0xe
	.byte	0x6
	.space	2
	.byte	0x14
	.byte	0x32
	.space	2
	.byte	0x15
	.byte	0x14
	.space	2
	.byte	0x16
	.byte	0x32
	.space	2
	.byte	0x17
	.byte	0xf
	.space	2
	.byte	0x8
	.byte	0x2
	.space	2
	.byte	0xc
	.byte	0x8
	.space	2
	.byte	0x18
	.byte	0x8
	.space	2
	.byte	0x19
	.byte	0x8
	.space	2
	.byte	0x1a
	.byte	0x4
	.space	2
	.byte	0x38
	.byte	0xa
	.space	2
	.byte	0x1c
	.byte	0xf
	.space	2
	.byte	0x1d
	.byte	0x6
	.space	2
	.byte	0x1e
	.byte	0x14
	.space	2
	.byte	0x1f
	.byte	0x19
	.space	2
	.byte	0x20
	.byte	0x19
	.space	2
	.byte	0x21
	.byte	0x5
	.space	2
	.byte	0x22
	.byte	0x4
	.space	2
	.byte	0x24
	.byte	0x14
	.space	2
	.byte	0xa
	.byte	0xa
	.space	2
	.byte	0x25
	.byte	0x4
	.space	2
	.byte	0x26
	.byte	0x32
	.space	2
	.byte	0x27
	.byte	0xa
	.space	2
	.byte	0x28
	.byte	0xa
	.space	2
	.byte	0x29
	.byte	0xc
	.space	2
	.byte	0x6
	.byte	0x8
	.space	2
	.byte	0x2a
	.byte	0x3
	.space	2
	.byte	0x2b
	.byte	0x6
	.space	2
	.byte	0x2c
	.byte	0xa
	.space	2
	.byte	0x2d
	.byte	0x2
	.space	2
	.byte	0x1b
	.byte	0x4
	.space	2
	.byte	0x2e
	.byte	0x3
	.space	2
	.byte	0x2f
	.byte	0x8
	.space	2
	.byte	0x7
	.byte	0xf
	.space	2
	.byte	0x32
	.byte	0xf
	.space	2
	.byte	0x4
	.byte	0xa
	.space	2
	.byte	0x34
	.byte	0xc
	.space	2
	.byte	0x9
	.byte	0x5
	.space	2
	.byte	0x31
	.byte	0xa
	.space	2
	.byte	0x35
	.byte	0x14
	.space	2
	.byte	0x36
	.byte	0x4
	.space	2
	.byte	0x33
	.byte	0x4
	.space	2
	.byte	0x2
	.byte	0xa
	.space	2
	.byte	0x37
	.byte	0x8
	.space	2
	.byte	0x23
	.byte	0xa
	.space	2
	.byte	0xff
	.byte	0x5
	.space	2
	.size	 gTrainerMoneyTable,224
	.type	 sNoneDescription,object
sNoneDescription:
	.byte	0xc8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe4
	.byte	0xd9
	.byte	0xd7
	.byte	0xdd
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sNoneDescription,20
	.type	 sStenchDescription,object
sStenchDescription:
	.byte	0xc2
	.byte	0xd9
	.byte	0xe0
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe4
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sStenchDescription,26
	.type	 sDrizzleDescription,object
sDrizzleDescription:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sDrizzleDescription,24
	.type	 sSpeedBoostDescription,object
sSpeedBoostDescription:
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xe9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sSpeedBoostDescription,24
	.type	 sBattleArmorDescription,object
sBattleArmorDescription:
	.byte	0xbc
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sBattleArmorDescription,22
	.type	 sSturdyDescription,object
sSturdyDescription:
	.byte	0xc8
	.byte	0xd9
	.byte	0xdb
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xa2
	.byte	0xae
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xc5
	.byte	0xc9
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSturdyDescription,26
	.type	 sDampDescription,object
sDampDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe0
	.byte	0xda
	.byte	0xae
	.byte	0xd8
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xe9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sDampDescription,27
	.type	 sLimberDescription,object
sLimberDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xd5
	.byte	0xe0
	.byte	0xed
	.byte	0xe7
	.byte	0xdd
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sLimberDescription,20
	.type	 sSandVeilDescription,object
sSandVeilDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xea
	.byte	0xd5
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.size	 sSandVeilDescription,28
	.type	 sStaticDescription,object
sStaticDescription:
	.byte	0xca
	.byte	0xd5
	.byte	0xe6
	.byte	0xd5
	.byte	0xe0
	.byte	0xed
	.byte	0xee
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sStaticDescription,22
	.type	 sVoltAbsorbDescription,object
sVoltAbsorbDescription:
	.byte	0xce
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xdd
	.byte	0xd7
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sVoltAbsorbDescription,27
	.type	 sWaterAbsorbDescription,object
sWaterAbsorbDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sWaterAbsorbDescription,23
	.type	 sObliviousDescription,object
sObliviousDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sObliviousDescription,21
	.type	 sCloudNineDescription,object
sCloudNineDescription:
	.byte	0xc8
	.byte	0xd9
	.byte	0xdb
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sCloudNineDescription,25
	.type	 sCompoundEyesDescription,object
sCompoundEyesDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xd7
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sCompoundEyesDescription,17
	.type	 sInsomniaDescription,object
sInsomniaDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe4
	.byte	0xad
	.byte	0xff
	.size	 sInsomniaDescription,16
	.type	 sColorChangeDescription,object
sColorChangeDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sColorChangeDescription,28
	.type	 sImmunityDescription,object
sImmunityDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sImmunityDescription,20
	.type	 sFlashFireDescription,object
sFlashFireDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sFlashFireDescription,26
	.type	 sShieldDustDescription,object
sShieldDustDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xd8
	.byte	0xd8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sShieldDustDescription,24
	.type	 sOwnTempoDescription,object
sOwnTempoDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xda
	.byte	0xe9
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sOwnTempoDescription,20
	.type	 sSuctionCupsDescription,object
sSuctionCupsDescription:
	.byte	0xc0
	.byte	0xdd
	.byte	0xe6
	.byte	0xe1
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sSuctionCupsDescription,25
	.type	 sIntimidateDescription,object
sIntimidateDescription:
	.byte	0xc6
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sIntimidateDescription,25
	.type	 sShadowTagDescription,object
sShadowTagDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xe7
	.byte	0xd7
	.byte	0xd5
	.byte	0xe4
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sShadowTagDescription,27
	.type	 sRoughSkinDescription,object
sRoughSkinDescription:
	.byte	0xc2
	.byte	0xe9
	.byte	0xe6
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xe9
	.byte	0xd7
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sRoughSkinDescription,16
	.type	 sWonderGuardDescription,object
sWonderGuardDescription:
	.byte	0xb1
	.byte	0xcd
	.byte	0xe9
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xb2
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sWonderGuardDescription,23
	.type	 sLevitateDescription,object
sLevitateDescription:
	.byte	0xc8
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0x0
	.byte	0xc1
	.byte	0xe6
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sLevitateDescription,27
	.type	 sEffectSporeDescription,object
sEffectSporeDescription:
	.byte	0xc6
	.byte	0xd9
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe4
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sEffectSporeDescription,26
	.type	 sSynchronizeDescription,object
sSynchronizeDescription:
	.byte	0xca
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe1
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSynchronizeDescription,27
	.type	 sClearBodyDescription,object
sClearBodyDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xe9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sClearBodyDescription,28
	.type	 sNaturalCureDescription,object
sNaturalCureDescription:
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sNaturalCureDescription,26
	.type	 sLightningRodDescription,object
sLightningRodDescription:
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xeb
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sLightningRodDescription,24
	.type	 sSereneGraceDescription,object
sSereneGraceDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xd8
	.byte	0xd8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSereneGraceDescription,24
	.type	 sSwiftSwimDescription,object
sSwiftSwimDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sSwiftSwimDescription,22
	.type	 sChlorophyllDescription,object
sChlorophyllDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xe2
	.byte	0xe7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sChlorophyllDescription,26
	.type	 sIlluminateDescription,object
sIlluminateDescription:
	.byte	0xbf
	.byte	0xe2
	.byte	0xd7
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sIlluminateDescription,26
	.type	 sTraceDescription,object
sTraceDescription:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe4
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe4
	.byte	0xd9
	.byte	0xd7
	.byte	0xdd
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sTraceDescription,24
	.type	 sHugePowerDescription,object
sHugePowerDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sHugePowerDescription,15
	.type	 sPoisonPointDescription,object
sPoisonPointDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sPoisonPointDescription,24
	.type	 sInnerFocusDescription,object
sInnerFocusDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sInnerFocusDescription,20
	.type	 sMagmaArmorDescription,object
sMagmaArmorDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xd9
	.byte	0xd9
	.byte	0xee
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sMagmaArmorDescription,19
	.type	 sWaterVeilDescription,object
sWaterVeilDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sWaterVeilDescription,16
	.type	 sMagnetPullDescription,object
sMagnetPullDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0xae
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sMagnetPullDescription,26
	.type	 sSoundproofDescription,object
sSoundproofDescription:
	.byte	0xbb
	.byte	0xea
	.byte	0xe3
	.byte	0xdd
	.byte	0xd8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0xae
	.byte	0xd6
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSoundproofDescription,26
	.type	 sRainDishDescription,object
sRainDishDescription:
	.byte	0xcd
	.byte	0xe0
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sRainDishDescription,28
	.type	 sSandStreamDescription,object
sSandStreamDescription:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.size	 sSandStreamDescription,21
	.type	 sPressureDescription,object
sPressureDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xca
	.byte	0xca
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sPressureDescription,23
	.type	 sThickFatDescription,object
sThickFatDescription:
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xae
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xae
	.byte	0xd7
	.byte	0xe3
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sThickFatDescription,26
	.type	 sEarlyBirdDescription,object
sEarlyBirdDescription:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xe5
	.byte	0xe9
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe7
	.byte	0xe0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe4
	.byte	0xad
	.byte	0xff
	.size	 sEarlyBirdDescription,28
	.type	 sFlameBodyDescription,object
sFlameBodyDescription:
	.byte	0xbc
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sFlameBodyDescription,26
	.type	 sRunAwayDescription,object
sRunAwayDescription:
	.byte	0xc7
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xe7
	.byte	0xd7
	.byte	0xd5
	.byte	0xe4
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xdd
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sRunAwayDescription,23
	.type	 sKeenEyeDescription,object
sKeenEyeDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xd7
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sKeenEyeDescription,27
	.type	 sHyperCutterDescription,object
sHyperCutterDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xe9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sHyperCutterDescription,27
	.type	 sPickupDescription,object
sPickupDescription:
	.byte	0xc7
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xe4
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sPickupDescription,19
	.type	 sTruantDescription,object
sTruantDescription:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xe8
	.byte	0xeb
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sTruantDescription,28
	.type	 sHustleDescription,object
sHustleDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xd7
	.byte	0xed
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sHustleDescription,27
	.type	 sCuteCharmDescription,object
sCuteCharmDescription:
	.byte	0xc3
	.byte	0xe2
	.byte	0xda
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sCuteCharmDescription,23
	.type	 sPlusDescription,object
sPlusDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xc7
	.byte	0xdd
	.byte	0xe2
	.byte	0xe9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sPlusDescription,22
	.type	 sMinusDescription,object
sMinusDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xca
	.byte	0xe0
	.byte	0xe9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sMinusDescription,21
	.type	 sForecastDescription,object
sForecastDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sForecastDescription,26
	.type	 sStickyHoldDescription,object
sStickyHoldDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xda
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sStickyHoldDescription,21
	.type	 sShedSkinDescription,object
sShedSkinDescription:
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xd9
	.byte	0xd8
	.byte	0xd8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sShedSkinDescription,28
	.type	 sGutsDescription,object
sGutsDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sGutsDescription,25
	.type	 sMarvelScaleDescription,object
sMarvelScaleDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sMarvelScaleDescription,26
	.type	 sLiquidOozeDescription,object
sLiquidOozeDescription:
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xde
	.byte	0xe9
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sLiquidOozeDescription,24
	.type	 sOvergrowDescription,object
sOvergrowDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe4
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sOvergrowDescription,28
	.type	 sBlazeDescription,object
sBlazeDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xc0
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe4
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sBlazeDescription,27
	.type	 sTorrentDescription,object
sTorrentDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe4
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sTorrentDescription,28
	.type	 sSwarmDescription,object
sSwarmDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbc
	.byte	0xe9
	.byte	0xdb
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe4
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sSwarmDescription,26
	.type	 sRockHeadDescription,object
sRockHeadDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xdd
	.byte	0xe0
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sRockHeadDescription,24
	.type	 sDroughtDescription,object
sDroughtDescription:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xe2
	.byte	0xe0
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sDroughtDescription,28
	.type	 sArenaTrapDescription,object
sArenaTrapDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe0
	.byte	0xd9
	.byte	0xd9
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sArenaTrapDescription,18
	.type	 sVitalSpiritDescription,object
sVitalSpiritDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe4
	.byte	0xad
	.byte	0xff
	.size	 sVitalSpiritDescription,16
	.type	 sWhiteSmokeDescription,object
sWhiteSmokeDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xe9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sWhiteSmokeDescription,28
	.type	 sPurePowerDescription,object
sPurePowerDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sPurePowerDescription,15
	.type	 sShellArmorDescription,object
sShellArmorDescription:
	.byte	0xbc
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sShellArmorDescription,22
	.type	 sAirLockDescription,object
sAirLockDescription:
	.byte	0xc8
	.byte	0xd9
	.byte	0xdb
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sAirLockDescription,25
	.type	 sTangledFeetDescription,object
sTangledFeetDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xea
	.byte	0xd5
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xda
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sTangledFeetDescription,25
	.type	 sMotorDriveDescription,object
sMotorDriveDescription:
	.byte	0xbf
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xdd
	.byte	0xd7
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sMotorDriveDescription,26
	.type	 sRivalryDescription,object
sRivalryDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xd5
	.byte	0xdb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xea
	.byte	0xd5
	.byte	0xe0
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sRivalryDescription,26
	.type	 sSteadfastDescription,object
sSteadfastDescription:
	.byte	0xc0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sSteadfastDescription,24
	.type	 sSnowCloakDescription,object
sSnowCloakDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xea
	.byte	0xd5
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xc2
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xad
	.byte	0xff
	.size	 sSnowCloakDescription,21
	.type	 sGluttonyDescription,object
sGluttonyDescription:
	.byte	0xbf
	.byte	0xd5
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sGluttonyDescription,20
	.type	 sAngerPointDescription,object
sAngerPointDescription:
	.byte	0xbd
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sAngerPointDescription,28
	.type	 sUnburdenDescription,object
sUnburdenDescription:
	.byte	0xcf
	.byte	0xe7
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xdc
	.byte	0xe3
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sUnburdenDescription,29
	.type	 sHeatproofDescription,object
sHeatproofDescription:
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sHeatproofDescription,26
	.type	 sSimpleDescription,object
sSimpleDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSimpleDescription,28
	.type	 sDrySkinDescription,object
sDrySkinDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdc
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sDrySkinDescription,26
	.type	 sDownloadDescription,object
sDownloadDescription:
	.byte	0xbb
	.byte	0xd8
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xda
	.byte	0xd5
	.byte	0xea
	.byte	0xe3
	.byte	0xe6
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sDownloadDescription,25
	.type	 sIronFistDescription,object
sIronFistDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sIronFistDescription,23
	.type	 sPoisonHealDescription,object
sPoisonHealDescription:
	.byte	0xcc
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sPoisonHealDescription,25
	.type	 sAdaptabilityDescription,object
sAdaptabilityDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sAdaptabilityDescription,26
	.type	 sSkillLinkDescription,object
sSkillLinkDescription:
	.byte	0xc7
	.byte	0xe9
	.byte	0xe0
	.byte	0xe8
	.byte	0xdd
	.byte	0xae
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xa6
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSkillLinkDescription,29
	.type	 sHydrationDescription,object
sHydrationDescription:
	.byte	0xbd
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sHydrationDescription,22
	.type	 sSolarPowerDescription,object
sSolarPowerDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xe2
	.byte	0xe7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sSolarPowerDescription,23
	.type	 sQuickFeetDescription,object
sQuickFeetDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sQuickFeetDescription,24
	.type	 sNormalizeDescription,object
sNormalizeDescription:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xc8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe0
	.byte	0xae
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sNormalizeDescription,26
	.type	 sSniperDescription,object
sSniperDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSniperDescription,22
	.type	 sMagicGuardDescription,object
sMagicGuardDescription:
	.byte	0xc9
	.byte	0xe2
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sMagicGuardDescription,25
	.type	 sNoGuardDescription,object
sNoGuardDescription:
	.byte	0xbf
	.byte	0xe2
	.byte	0xe7
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sNoGuardDescription,28
	.type	 sStallDescription,object
sStallDescription:
	.byte	0xbb
	.byte	0xe0
	.byte	0xeb
	.byte	0xd5
	.byte	0xed
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sStallDescription,19
	.type	 sTechnicianDescription,object
sTechnicianDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sTechnicianDescription,21
	.type	 sLeafGuardDescription,object
sLeafGuardDescription:
	.byte	0xbc
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xe2
	.byte	0xe7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sLeafGuardDescription,27
	.type	 sKlutzDescription,object
sKlutzDescription:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xe3
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sKlutzDescription,22
	.type	 sMoldBreakerDescription,object
sMoldBreakerDescription:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xe6
	.byte	0xe3
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sMoldBreakerDescription,29
	.type	 sSuperLuckDescription,object
sSuperLuckDescription:
	.byte	0xbd
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xe8
	.byte	0xd9
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sSuperLuckDescription,26
	.type	 sAftermathDescription,object
sAftermathDescription:
	.byte	0xc0
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sAftermathDescription,26
	.type	 sAnticipationDescription,object
sAnticipationDescription:
	.byte	0xcd
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe3
	.byte	0xe9
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sAnticipationDescription,24
	.type	 sForewarnDescription,object
sForewarnDescription:
	.byte	0xbe
	.byte	0xd9
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sForewarnDescription,25
	.type	 sUnawareDescription,object
sUnawareDescription:
	.byte	0xc3
	.byte	0xdb
	.byte	0xe2
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sUnawareDescription,22
	.type	 sTintedLensDescription,object
sTintedLensDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xb1
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xb2
	.byte	0xad
	.byte	0xff
	.size	 sTintedLensDescription,26
	.type	 sFilterDescription,object
sFilterDescription:
	.byte	0xd1
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xb1
	.byte	0xe7
	.byte	0xe9
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xb2
	.byte	0xad
	.byte	0xff
	.size	 sFilterDescription,26
	.type	 sSlowStartDescription,object
sSlowStartDescription:
	.byte	0xce
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sSlowStartDescription,28
	.type	 sScrappyDescription,object
sScrappyDescription:
	.byte	0xc2
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xc1
	.byte	0xdc
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xae
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sScrappyDescription,25
	.type	 sStormDrainDescription,object
sStormDrainDescription:
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xeb
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sStormDrainDescription,22
	.type	 sIceBodyDescription,object
sIceBodyDescription:
	.byte	0xcd
	.byte	0xe0
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xc2
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xad
	.byte	0xff
	.size	 sIceBodyDescription,28
	.type	 sSnowWarningDescription,object
sSnowWarningDescription:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.size	 sSnowWarningDescription,21
	.type	 sHoneyGatherDescription,object
sHoneyGatherDescription:
	.byte	0xc7
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xdb
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc2
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sHoneyGatherDescription,18
	.type	 sFriskDescription,object
sFriskDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.size	 sFriskDescription,21
	.type	 sRecklessDescription,object
sRecklessDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xdd
	.byte	0xe0
	.byte	0xad
	.byte	0xff
	.size	 sRecklessDescription,26
	.type	 sMultitypeDescription,object
sMultitypeDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xca
	.byte	0xe0
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sMultitypeDescription,27
	.type	 sFlowerGiftDescription,object
sFlowerGiftDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xe7
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xe2
	.byte	0xe7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sFlowerGiftDescription,24
	.type	 sBadDreamsDescription,object
sBadDreamsDescription:
	.byte	0xbe
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe4
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sBadDreamsDescription,26
	.type	 sPickpocketDescription,object
sPickpocketDescription:
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdc
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.size	 sPickpocketDescription,28
	.type	 sSheerForceDescription,object
sSheerForceDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sSheerForceDescription,26
	.type	 sContraryDescription,object
sContraryDescription:
	.byte	0xc3
	.byte	0xe2
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sContraryDescription,22
	.type	 sUnnerveDescription,object
sUnnerveDescription:
	.byte	0xc0
	.byte	0xe3
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sUnnerveDescription,24
	.type	 sDefiantDescription,object
sDefiantDescription:
	.byte	0xc6
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sDefiantDescription,25
	.type	 sDefeatistDescription,object
sDefeatistDescription:
	.byte	0xc1
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe0
	.byte	0xda
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sDefeatistDescription,21
	.type	 sCursedBodyDescription,object
sCursedBodyDescription:
	.byte	0xbe
	.byte	0xdd
	.byte	0xe7
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sCursedBodyDescription,27
	.type	 sHealerDescription,object
sHealerDescription:
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sHealerDescription,23
	.type	 sFriendGuardDescription,object
sFriendGuardDescription:
	.byte	0xc6
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sFriendGuardDescription,26
	.type	 sWeakArmorDescription,object
sWeakArmorDescription:
	.byte	0xc3
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sWeakArmorDescription,27
	.type	 sHeavyMetalDescription,object
sHeavyMetalDescription:
	.byte	0xbe
	.byte	0xe3
	.byte	0xe9
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sHeavyMetalDescription,16
	.type	 sLightMetalDescription,object
sLightMetalDescription:
	.byte	0xc2
	.byte	0xd5
	.byte	0xe0
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sLightMetalDescription,15
	.type	 sMultiscaleDescription,object
sMultiscaleDescription:
	.byte	0xc2
	.byte	0xd5
	.byte	0xe0
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sMultiscaleDescription,26
	.type	 sToxicBoostDescription,object
sToxicBoostDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sToxicBoostDescription,24
	.type	 sFlareBoostDescription,object
sFlareBoostDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xdf
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sFlareBoostDescription,23
	.type	 sHarvestDescription,object
sHarvestDescription:
	.byte	0xc7
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xed
	.byte	0xd7
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sHarvestDescription,26
	.type	 sTelepathyDescription,object
sTelepathyDescription:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sTelepathyDescription,29
	.type	 sMoodyDescription,object
sMoodyDescription:
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xdb
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xe9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sMoodyDescription,24
	.type	 sOvercoatDescription,object
sOvercoatDescription:
	.byte	0xbc
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xeb
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sOvercoatDescription,27
	.type	 sBigPecksDescription,object
sBigPecksDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xe7
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sBigPecksDescription,23
	.type	 sSandRushDescription,object
sSandRushDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.size	 sSandRushDescription,26
	.type	 sWonderSkinDescription,object
sWonderSkinDescription:
	.byte	0xc7
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xea
	.byte	0xe3
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe1
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sWonderSkinDescription,27
	.type	 sAnalyticDescription,object
sAnalyticDescription:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sAnalyticDescription,26
	.type	 sIllusionDescription,object
sIllusionDescription:
	.byte	0xbb
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sIllusionDescription,22
	.type	 sImposterDescription,object
sImposterDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xe7
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sImposterDescription,25
	.type	 sInfiltratorDescription,object
sInfiltratorDescription:
	.byte	0xca
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xe6
	.byte	0xe3
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sInfiltratorDescription,25
	.type	 sMummyDescription,object
sMummyDescription:
	.byte	0xcd
	.byte	0xe4
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sMummyDescription,22
	.type	 sMoxieDescription,object
sMoxieDescription:
	.byte	0xc5
	.byte	0xc9
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sMoxieDescription,18
	.type	 sJustifiedDescription,object
sJustifiedDescription:
	.byte	0xbe
	.byte	0xd5
	.byte	0xe6
	.byte	0xdf
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sJustifiedDescription,24
	.type	 sRattledDescription,object
sRattledDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xd7
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sRattledDescription,26
	.type	 sMagicBounceDescription,object
sMagicBounceDescription:
	.byte	0xcc
	.byte	0xd9
	.byte	0xda
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sMagicBounceDescription,23
	.type	 sSapSipperDescription,object
sSapSipperDescription:
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xd7
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sSapSipperDescription,24
	.type	 sPranksterDescription,object
sPranksterDescription:
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe6
	.byte	0xe7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sPranksterDescription,23
	.type	 sSandForceDescription,object
sSandForceDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.size	 sSandForceDescription,26
	.type	 sZenModeDescription,object
sZenModeDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xe7
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe0
	.byte	0xda
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sZenModeDescription,23
	.type	 sVictoryStarDescription,object
sVictoryStarDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xd7
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sVictoryStarDescription,23
	.type	 sAromaVeilDescription,object
sAromaVeilDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe1
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sAromaVeilDescription,28
	.type	 sFlowerVeilDescription,object
sFlowerVeilDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xae
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sFlowerVeilDescription,22
	.type	 sCheekPouchDescription,object
sCheekPouchDescription:
	.byte	0xbf
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sCheekPouchDescription,28
	.type	 sProteanDescription,object
sProteanDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sProteanDescription,27
	.type	 sFurCoatDescription,object
sFurCoatDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sFurCoatDescription,16
	.type	 sBulletproofDescription,object
sBulletproofDescription:
	.byte	0xbb
	.byte	0xea
	.byte	0xe3
	.byte	0xdd
	.byte	0xd8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xde
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sBulletproofDescription,25
	.type	 sCompetitiveDescription,object
sCompetitiveDescription:
	.byte	0xc6
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sCompetitiveDescription,26
	.type	 sStrongJawDescription,object
sStrongJawDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sStrongJawDescription,21
	.type	 sRefrigerateDescription,object
sRefrigerateDescription:
	.byte	0xc8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xc3
	.byte	0xd7
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sRefrigerateDescription,25
	.type	 sSweetVeilDescription,object
sSweetVeilDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe7
	.byte	0xe0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe4
	.byte	0xad
	.byte	0xff
	.size	 sSweetVeilDescription,27
	.type	 sStanceChangeDescription,object
sStanceChangeDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xe7
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sStanceChangeDescription,26
	.type	 sGaleWingsDescription,object
sGaleWingsDescription:
	.byte	0xc0
	.byte	0xe0
	.byte	0xed
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe6
	.byte	0xe7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sGaleWingsDescription,23
	.type	 sMegaLauncherDescription,object
sMegaLauncherDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe0
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sMegaLauncherDescription,20
	.type	 sGrassPeltDescription,object
sGrassPeltDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xdb
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sGrassPeltDescription,22
	.type	 sSymbiosisDescription,object
sSymbiosisDescription:
	.byte	0xca
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sSymbiosisDescription,28
	.type	 sToughClawsDescription,object
sToughClawsDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sToughClawsDescription,22
	.type	 sPixilateDescription,object
sPixilateDescription:
	.byte	0xc8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xc0
	.byte	0xd5
	.byte	0xdd
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sPixilateDescription,27
	.type	 sGooeyDescription,object
sGooeyDescription:
	.byte	0xc6
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sGooeyDescription,25
	.type	 sAerilateDescription,object
sAerilateDescription:
	.byte	0xc8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xc0
	.byte	0xe0
	.byte	0xed
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sAerilateDescription,28
	.type	 sParentalBondDescription,object
sParentalBondDescription:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xeb
	.byte	0xdd
	.byte	0xd7
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sParentalBondDescription,17
	.type	 sDarkAuraDescription,object
sDarkAuraDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd5
	.byte	0xe6
	.byte	0xdf
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sDarkAuraDescription,19
	.type	 sFairyAuraDescription,object
sFairyAuraDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xc0
	.byte	0xd5
	.byte	0xdd
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sFairyAuraDescription,20
	.type	 sAuraBreakDescription,object
sAuraBreakDescription:
	.byte	0xcc
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sAuraBreakDescription,24
	.type	 sPrimordialSeaDescription,object
sPrimordialSeaDescription:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xdc
	.byte	0xd9
	.byte	0xd5
	.byte	0xea
	.byte	0xed
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sPrimordialSeaDescription,20
	.type	 sDesolateLandDescription,object
sDesolateLandDescription:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xe2
	.byte	0xe0
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sDesolateLandDescription,26
	.type	 sDeltaStreamDescription,object
sDeltaStreamDescription:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe2
	.byte	0xd8
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sDeltaStreamDescription,22
	.type	 sStaminaDescription,object
sStaminaDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sStaminaDescription,25
	.type	 sWimpOutDescription,object
sWimpOutDescription:
	.byte	0xc0
	.byte	0xe0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe0
	.byte	0xda
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sWimpOutDescription,18
	.type	 sWaterCompactionDescription,object
sWaterCompactionDescription:
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sWaterCompactionDescription,22
	.type	 sMercilessDescription,object
sMercilessDescription:
	.byte	0xbd
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sMercilessDescription,25
	.type	 sShieldsDownDescription,object
sShieldsDownDescription:
	.byte	0xcd
	.byte	0xdc
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xd6
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe0
	.byte	0xda
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sShieldsDownDescription,25
	.type	 sStakeoutDescription,object
sStakeoutDescription:
	.byte	0xcd
	.byte	0xe8
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sStakeoutDescription,28
	.type	 sWaterBubbleDescription,object
sWaterBubbleDescription:
	.byte	0xc1
	.byte	0xe9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sWaterBubbleDescription,28
	.type	 sSteelworkerDescription,object
sSteelworkerDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSteelworkerDescription,23
	.type	 sBerserkDescription,object
sBerserkDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xdf
	.byte	0x0
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xad
	.byte	0xff
	.size	 sBerserkDescription,26
	.type	 sSlushRushDescription,object
sSlushRushDescription:
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xad
	.byte	0xff
	.size	 sSlushRushDescription,22
	.type	 sLongReachDescription,object
sLongReachDescription:
	.byte	0xc8
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sLongReachDescription,21
	.type	 sLiquidVoiceDescription,object
sLiquidVoiceDescription:
	.byte	0xc7
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sLiquidVoiceDescription,25
	.type	 sTriageDescription,object
sTriageDescription:
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe6
	.byte	0xe7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sTriageDescription,24
	.type	 sGalvanizeDescription,object
sGalvanizeDescription:
	.byte	0xc8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0x0
	.byte	0xbf
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xdd
	.byte	0xd7
	.byte	0xad
	.byte	0xff
	.size	 sGalvanizeDescription,28
	.type	 sSurgeSurferDescription,object
sSurgeSurferDescription:
	.byte	0xc0
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xdd
	.byte	0xd7
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sSurgeSurferDescription,23
	.type	 sSchoolingDescription,object
sSchoolingDescription:
	.byte	0xc0
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe0
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sSchoolingDescription,28
	.type	 sDisguiseDescription,object
sDisguiseDescription:
	.byte	0xbe
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xed
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sDisguiseDescription,24
	.type	 sBattleBondDescription,object
sBattleBondDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0x0
	.byte	0xd5
	.byte	0xda
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xc5
	.byte	0xc9
	.byte	0xad
	.byte	0xff
	.size	 sBattleBondDescription,25
	.type	 sPowerConstructDescription,object
sPowerConstructDescription:
	.byte	0xbd
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sPowerConstructDescription,28
	.type	 sCorrosionDescription,object
sCorrosionDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sCorrosionDescription,18
	.type	 sComatoseDescription,object
sComatoseDescription:
	.byte	0xbb
	.byte	0xe0
	.byte	0xeb
	.byte	0xd5
	.byte	0xed
	.byte	0xe7
	.byte	0x0
	.byte	0xd8
	.byte	0xe6
	.byte	0xe3
	.byte	0xeb
	.byte	0xe7
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sComatoseDescription,17
	.type	 sQueenlyMajestyDescription,object
sQueenlyMajestyDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xdd
	.byte	0xe3
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sQueenlyMajestyDescription,24
	.type	 sInnardsOutDescription,object
sInnardsOutDescription:
	.byte	0xc2
	.byte	0xe9
	.byte	0xe6
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd8
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sInnardsOutDescription,25
	.type	 sDancerDescription,object
sDancerDescription:
	.byte	0xbe
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sDancerDescription,26
	.type	 sBatteryDescription,object
sBatteryDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sBatteryDescription,23
	.type	 sFluffyDescription,object
sFluffyDescription:
	.byte	0xce
	.byte	0xe3
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xe0
	.byte	0xd5
	.byte	0xe1
	.byte	0xe1
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sFluffyDescription,23
	.type	 sSoulHeartDescription,object
sSoulHeartDescription:
	.byte	0xc5
	.byte	0xc9
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xdf
	.byte	0xad
	.byte	0xff
	.size	 sSoulHeartDescription,19
	.type	 sTanglingHairDescription,object
sTanglingHairDescription:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sTanglingHairDescription,22
	.type	 sReceiverDescription,object
sReceiverDescription:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe4
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sReceiverDescription,23
	.type	 sBeastBoostDescription,object
sBeastBoostDescription:
	.byte	0xc5
	.byte	0xc9
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sBeastBoostDescription,21
	.type	 sRKSSystemDescription,object
sRKSSystemDescription:
	.byte	0xc7
	.byte	0xd9
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sRKSSystemDescription,26
	.type	 sElectricSurgeDescription,object
sElectricSurgeDescription:
	.byte	0xc0
	.byte	0xdd
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xbf
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xdd
	.byte	0xd7
	.byte	0xad
	.byte	0xff
	.size	 sElectricSurgeDescription,24
	.type	 sPsychicSurgeDescription,object
sPsychicSurgeDescription:
	.byte	0xc0
	.byte	0xdd
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xdd
	.byte	0xe6
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sPsychicSurgeDescription,21
	.type	 sMistySurgeDescription,object
sMistySurgeDescription:
	.byte	0xc0
	.byte	0xdd
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sMistySurgeDescription,21
	.type	 sGrassySurgeDescription,object
sGrassySurgeDescription:
	.byte	0xc0
	.byte	0xdd
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sGrassySurgeDescription,22
	.type	 sFullMetalBodyDescription,object
sFullMetalBodyDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xe9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sFullMetalBodyDescription,25
	.type	 sNeuroforceDescription,object
sNeuroforceDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xb1
	.byte	0xe7
	.byte	0xe9
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xb2
	.byte	0xad
	.byte	0xff
	.size	 sNeuroforceDescription,22
	.type	 sIntrepidSwordDescription,object
sIntrepidSwordDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sIntrepidSwordDescription,21
	.type	 sDauntlessShieldDescription,object
sDauntlessShieldDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sDauntlessShieldDescription,22
	.type	 sLiberoDescription,object
sLiberoDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sLiberoDescription,24
	.type	 sBallFetchDescription,object
sBallFetchDescription:
	.byte	0xc0
	.byte	0xd9
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0x0
	.byte	0xbc
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xad
	.byte	0xff
	.size	 sBallFetchDescription,26
	.type	 sCottonDownDescription,object
sCottonDownDescription:
	.byte	0xc6
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sCottonDownDescription,29
	.type	 sPropellerTailDescription,object
sPropellerTailDescription:
	.byte	0xc3
	.byte	0xdb
	.byte	0xe2
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sPropellerTailDescription,27
	.type	 sMirrorArmorDescription,object
sMirrorArmorDescription:
	.byte	0xcc
	.byte	0xd9
	.byte	0xda
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sMirrorArmorDescription,24
	.type	 sGulpMissileDescription,object
sGulpMissileDescription:
	.byte	0xc3
	.byte	0xda
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xb8
	.byte	0x0
	.byte	0xe7
	.byte	0xe4
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xd9
	.byte	0xed
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xd5
	.byte	0xad
	.byte	0xff
	.size	 sGulpMissileDescription,29
	.type	 sStalwartDescription,object
sStalwartDescription:
	.byte	0xc3
	.byte	0xdb
	.byte	0xe2
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sStalwartDescription,27
	.type	 sSteamEngineDescription,object
sSteamEngineDescription:
	.byte	0xc0
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sSteamEngineDescription,29
	.type	 sPunkRockDescription,object
sPunkRockDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sPunkRockDescription,23
	.type	 sSandSpitDescription,object
sSandSpitDescription:
	.byte	0xbd
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sSandSpitDescription,28
	.type	 sIceScalesDescription,object
sIceScalesDescription:
	.byte	0xc2
	.byte	0xd5
	.byte	0xe0
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe4
	.byte	0xd9
	.byte	0xd7
	.byte	0xdd
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xe1
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sIceScalesDescription,23
	.type	 sRipenDescription,object
sRipenDescription:
	.byte	0xbe
	.byte	0xe3
	.byte	0xe9
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sRipenDescription,27
	.type	 sIceFaceDescription,object
sIceFaceDescription:
	.byte	0xce
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xd9
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0x0
	.byte	0xc2
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xd9
	.byte	0xeb
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sIceFaceDescription,30
	.type	 sPowerSpotDescription,object
sPowerSpotDescription:
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sPowerSpotDescription,22
	.type	 sMimicryDescription,object
sMimicryDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sMimicryDescription,25
	.type	 sScreenCleanerDescription,object
sScreenCleanerDescription:
	.byte	0xcc
	.byte	0xd9
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sScreenCleanerDescription,24
	.type	 sSteelySpiritDescription,object
sSteelySpiritDescription:
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sSteelySpiritDescription,27
	.type	 sPerishBodyDescription,object
sPerishBodyDescription:
	.byte	0xc0
	.byte	0xe3
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xa4
	.byte	0x0
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xda
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sPerishBodyDescription,30
	.type	 sWanderingSpiritDescription,object
sWanderingSpiritDescription:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sWanderingSpiritDescription,28
	.type	 sGorillaTacticsDescription,object
sGorillaTacticsDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sGorillaTacticsDescription,27
	.type	 sNeutralizingGasDescription,object
sNeutralizingGasDescription:
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xbb
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xdd
	.byte	0xda
	.byte	0xdd
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sNeutralizingGasDescription,29
	.type	 sPastelVeilDescription,object
sPastelVeilDescription:
	.byte	0xca
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xd9
	.byte	0xd5
	.byte	0xe1
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sPastelVeilDescription,27
	.type	 sHungerSwitchDescription,object
sHungerSwitchDescription:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0x0
	.byte	0xd9
	.byte	0xd5
	.byte	0xd7
	.byte	0xdc
	.byte	0x0
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sHungerSwitchDescription,24
	.type	 sQuickDrawDescription,object
sQuickDrawDescription:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe6
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xd7
	.byte	0xd7
	.byte	0xd5
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sQuickDrawDescription,26
	.type	 sUnseenFistDescription,object
sUnseenFistDescription:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xd9
	.byte	0xea
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.size	 sUnseenFistDescription,27
	.type	 sCuriousMedicineDescription,object
sCuriousMedicineDescription:
	.byte	0xcc
	.byte	0xd9
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sCuriousMedicineDescription,28
	.type	 sTransistorDescription,object
sTransistorDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbf
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xe6
	.byte	0xdd
	.byte	0xd7
	.byte	0xae
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sTransistorDescription,25
	.type	 sDragonsMawDescription,object
sDragonsMawDescription:
	.byte	0xcf
	.byte	0xe4
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xdb
	.byte	0xe3
	.byte	0xe2
	.byte	0xae
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sDragonsMawDescription,23
	.type	 sChillingNeighDescription,object
sChillingNeighDescription:
	.byte	0xc5
	.byte	0xc9
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sChillingNeighDescription,23
	.type	 sGrimNeighDescription,object
sGrimNeighDescription:
	.byte	0xc5
	.byte	0xc9
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xdf
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sGrimNeighDescription,24
	.type	 sAsOneIceRiderDescription,object
sAsOneIceRiderDescription:
	.byte	0xcf
	.byte	0xe2
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xbd
	.byte	0xdc
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xc8
	.byte	0xd9
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sAsOneIceRiderDescription,28
	.type	 sAsOneShadowRiderDescription,object
sAsOneShadowRiderDescription:
	.byte	0xcf
	.byte	0xe2
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xc1
	.byte	0xe6
	.byte	0xdd
	.byte	0xe1
	.byte	0x0
	.byte	0xc8
	.byte	0xd9
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sAsOneShadowRiderDescription,24
	.globl	gAbilityNames
	.type	 gAbilityNames,object
	.size	 gAbilityNames,3484
gAbilityNames:
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xff
	.space	5
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xff
	.space	6
	.byte	0xbe
	.byte	0xe6
	.byte	0xdd
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xd9
	.byte	0xff
	.space	5
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xbc
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xbb
	.byte	0xe6
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.byte	0xcd
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xd8
	.byte	0xed
	.byte	0xff
	.space	6
	.byte	0xbe
	.byte	0xd5
	.byte	0xe1
	.byte	0xe4
	.byte	0xff
	.space	8
	.byte	0xc6
	.byte	0xdd
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	6
	.byte	0xcd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd0
	.byte	0xd9
	.byte	0xdd
	.byte	0xe0
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xff
	.space	6
	.byte	0xd0
	.byte	0xe3
	.byte	0xe0
	.byte	0xe8
	.byte	0x0
	.byte	0xbb
	.byte	0xd6
	.byte	0xe7
	.byte	0xe3
	.byte	0xe6
	.byte	0xd6
	.byte	0xff
	.space	1
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xbb
	.byte	0xd6
	.byte	0xe7
	.byte	0xe3
	.byte	0xe6
	.byte	0xd6
	.byte	0xff
	.byte	0xc9
	.byte	0xd6
	.byte	0xe0
	.byte	0xdd
	.byte	0xea
	.byte	0xdd
	.byte	0xe3
	.byte	0xe9
	.byte	0xe7
	.byte	0xff
	.space	3
	.byte	0xbd
	.byte	0xe0
	.byte	0xe3
	.byte	0xe9
	.byte	0xd8
	.byte	0x0
	.byte	0xc8
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe4
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0xbf
	.byte	0xed
	.byte	0xd9
	.byte	0xe7
	.byte	0xff
	.byte	0xc3
	.byte	0xe2
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xe2
	.byte	0xdd
	.byte	0xd5
	.byte	0xff
	.space	4
	.byte	0xbd
	.byte	0xe3
	.byte	0xe0
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xff
	.byte	0xc3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xff
	.space	4
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe7
	.byte	0xdc
	.byte	0x0
	.byte	0xc0
	.byte	0xdd
	.byte	0xe6
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xdc
	.byte	0xdd
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xbe
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xc9
	.byte	0xeb
	.byte	0xe2
	.byte	0x0
	.byte	0xce
	.byte	0xd9
	.byte	0xe1
	.byte	0xe4
	.byte	0xe3
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xe9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xbd
	.byte	0xe9
	.byte	0xe4
	.byte	0xe7
	.byte	0xff
	.byte	0xc3
	.byte	0xe2
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xdd
	.byte	0xd8
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xdc
	.byte	0xd5
	.byte	0xd8
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xce
	.byte	0xd5
	.byte	0xdb
	.byte	0xff
	.space	2
	.byte	0xcc
	.byte	0xe3
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0x0
	.byte	0xcd
	.byte	0xdf
	.byte	0xdd
	.byte	0xe2
	.byte	0xff
	.space	2
	.byte	0xd1
	.byte	0xe3
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc1
	.byte	0xe9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xff
	.byte	0xc6
	.byte	0xd9
	.byte	0xea
	.byte	0xdd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xbf
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xff
	.byte	0xcd
	.byte	0xed
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0xdd
	.byte	0xee
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xbd
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0xff
	.space	2
	.byte	0xc8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xbd
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xff
	.byte	0xc6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xe2
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xe6
	.byte	0xe3
	.byte	0xd8
	.byte	0xff
	.byte	0xcd
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xd9
	.byte	0x0
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.byte	0xcd
	.byte	0xeb
	.byte	0xdd
	.byte	0xda
	.byte	0xe8
	.byte	0x0
	.byte	0xcd
	.byte	0xeb
	.byte	0xdd
	.byte	0xe1
	.byte	0xff
	.space	2
	.byte	0xbd
	.byte	0xdc
	.byte	0xe0
	.byte	0xe3
	.byte	0xe6
	.byte	0xe3
	.byte	0xe4
	.byte	0xdc
	.byte	0xed
	.byte	0xe0
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xc3
	.byte	0xe0
	.byte	0xe0
	.byte	0xe9
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.space	7
	.byte	0xc2
	.byte	0xe9
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	2
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xff
	.byte	0xc3
	.byte	0xe2
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc0
	.byte	0xe3
	.byte	0xd7
	.byte	0xe9
	.byte	0xe7
	.byte	0xff
	.space	1
	.byte	0xc7
	.byte	0xd5
	.byte	0xdb
	.byte	0xe1
	.byte	0xd5
	.byte	0x0
	.byte	0xbb
	.byte	0xe6
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd0
	.byte	0xd9
	.byte	0xdd
	.byte	0xe0
	.byte	0xff
	.space	2
	.byte	0xc7
	.byte	0xd5
	.byte	0xdb
	.byte	0xe2
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xca
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xcd
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xe3
	.byte	0xda
	.byte	0xff
	.space	2
	.byte	0xcc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xbe
	.byte	0xdd
	.byte	0xe7
	.byte	0xdc
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xcd
	.byte	0xe8
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe1
	.byte	0xff
	.space	1
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe7
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xce
	.byte	0xdc
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xc0
	.byte	0xd5
	.byte	0xe8
	.byte	0xff
	.space	3
	.byte	0xbf
	.byte	0xd5
	.byte	0xe6
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xbc
	.byte	0xdd
	.byte	0xe6
	.byte	0xd8
	.byte	0xff
	.space	2
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0xff
	.space	2
	.byte	0xcc
	.byte	0xe9
	.byte	0xe2
	.byte	0x0
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xed
	.byte	0xff
	.space	4
	.byte	0xc5
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xbf
	.byte	0xed
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xc2
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xbd
	.byte	0xe9
	.byte	0xe8
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.byte	0xca
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0xe9
	.byte	0xe4
	.byte	0xff
	.space	6
	.byte	0xce
	.byte	0xe6
	.byte	0xe9
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xff
	.space	6
	.byte	0xc2
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xff
	.space	6
	.byte	0xbd
	.byte	0xe9
	.byte	0xe8
	.byte	0xd9
	.byte	0x0
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe6
	.byte	0xe1
	.byte	0xff
	.space	2
	.byte	0xca
	.byte	0xe0
	.byte	0xe9
	.byte	0xe7
	.byte	0xff
	.space	8
	.byte	0xc7
	.byte	0xdd
	.byte	0xe2
	.byte	0xe9
	.byte	0xe7
	.byte	0xff
	.space	7
	.byte	0xc0
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	4
	.byte	0xcd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0xed
	.byte	0x0
	.byte	0xc2
	.byte	0xe3
	.byte	0xe0
	.byte	0xd8
	.byte	0xff
	.space	1
	.byte	0xcd
	.byte	0xdc
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xcd
	.byte	0xdf
	.byte	0xdd
	.byte	0xe2
	.byte	0xff
	.space	3
	.byte	0xc1
	.byte	0xe9
	.byte	0xe8
	.byte	0xe7
	.byte	0xff
	.space	8
	.byte	0xc7
	.byte	0xd5
	.byte	0xe6
	.byte	0xea
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xcd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0xd9
	.byte	0xff
	.byte	0xc6
	.byte	0xdd
	.byte	0xe5
	.byte	0xe9
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xc9
	.byte	0xe3
	.byte	0xee
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xc9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xdb
	.byte	0xe6
	.byte	0xe3
	.byte	0xeb
	.byte	0xff
	.space	4
	.byte	0xbc
	.byte	0xe0
	.byte	0xd5
	.byte	0xee
	.byte	0xd9
	.byte	0xff
	.space	7
	.byte	0xce
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xff
	.space	5
	.byte	0xcd
	.byte	0xeb
	.byte	0xd5
	.byte	0xe6
	.byte	0xe1
	.byte	0xff
	.space	7
	.byte	0xcc
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xff
	.space	3
	.byte	0xbe
	.byte	0xe6
	.byte	0xe3
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xff
	.space	5
	.byte	0xbb
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xd5
	.byte	0x0
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xe4
	.byte	0xff
	.space	2
	.byte	0xd0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xdd
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xff
	.byte	0xd1
	.byte	0xdc
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0x0
	.byte	0xcd
	.byte	0xe1
	.byte	0xe3
	.byte	0xdf
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xca
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xdc
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xbb
	.byte	0xe6
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xbb
	.byte	0xdd
	.byte	0xe6
	.byte	0x0
	.byte	0xc6
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xff
	.space	4
	.byte	0xce
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xc0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0xff
	.byte	0xc7
	.byte	0xe3
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xbe
	.byte	0xe6
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xcc
	.byte	0xdd
	.byte	0xea
	.byte	0xd5
	.byte	0xe0
	.byte	0xe6
	.byte	0xed
	.byte	0xff
	.space	5
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xda
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xbd
	.byte	0xe0
	.byte	0xe3
	.byte	0xd5
	.byte	0xdf
	.byte	0xff
	.space	2
	.byte	0xc1
	.byte	0xe0
	.byte	0xe9
	.byte	0xe8
	.byte	0xe8
	.byte	0xe3
	.byte	0xe2
	.byte	0xed
	.byte	0xff
	.space	4
	.byte	0xbb
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xcf
	.byte	0xe2
	.byte	0xd6
	.byte	0xe9
	.byte	0xe6
	.byte	0xd8
	.byte	0xd9
	.byte	0xe2
	.byte	0xff
	.space	4
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xe3
	.byte	0xda
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xdd
	.byte	0xe1
	.byte	0xe4
	.byte	0xe0
	.byte	0xd9
	.byte	0xff
	.space	6
	.byte	0xbe
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xcd
	.byte	0xdf
	.byte	0xdd
	.byte	0xe2
	.byte	0xff
	.space	4
	.byte	0xbe
	.byte	0xe3
	.byte	0xeb
	.byte	0xe2
	.byte	0xe0
	.byte	0xe3
	.byte	0xd5
	.byte	0xd8
	.byte	0xff
	.space	4
	.byte	0xc3
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xc0
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	3
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xbb
	.byte	0xd8
	.byte	0xd5
	.byte	0xe4
	.byte	0xe8
	.byte	0xd5
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xff
	.byte	0xcd
	.byte	0xdf
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xc6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0xff
	.space	2
	.byte	0xc2
	.byte	0xed
	.byte	0xd8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xe3
	.byte	0xe0
	.byte	0xd5
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xcb
	.byte	0xe9
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xc0
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0xff
	.space	2
	.byte	0xc8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe0
	.byte	0xdd
	.byte	0xee
	.byte	0xd9
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xe2
	.byte	0xdd
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	6
	.byte	0xc7
	.byte	0xd5
	.byte	0xdb
	.byte	0xdd
	.byte	0xd7
	.byte	0x0
	.byte	0xc1
	.byte	0xe9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xff
	.space	1
	.byte	0xc8
	.byte	0xe3
	.byte	0x0
	.byte	0xc1
	.byte	0xe9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xff
	.space	4
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xff
	.space	7
	.byte	0xce
	.byte	0xd9
	.byte	0xd7
	.byte	0xdc
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xdd
	.byte	0xd5
	.byte	0xe2
	.byte	0xff
	.space	2
	.byte	0xc6
	.byte	0xd9
	.byte	0xd5
	.byte	0xda
	.byte	0x0
	.byte	0xc1
	.byte	0xe9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xff
	.space	2
	.byte	0xc5
	.byte	0xe0
	.byte	0xe9
	.byte	0xe8
	.byte	0xee
	.byte	0xff
	.space	7
	.byte	0xc7
	.byte	0xe3
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xbc
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.byte	0xcd
	.byte	0xe9
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc6
	.byte	0xe9
	.byte	0xd7
	.byte	0xdf
	.byte	0xff
	.space	2
	.byte	0xbb
	.byte	0xda
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xe1
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xff
	.space	3
	.byte	0xbb
	.byte	0xe2
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xdd
	.byte	0xe4
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xff
	.byte	0xc0
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xeb
	.byte	0xd5
	.byte	0xe6
	.byte	0xe2
	.byte	0xff
	.space	4
	.byte	0xcf
	.byte	0xe2
	.byte	0xd5
	.byte	0xeb
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0xff
	.space	5
	.byte	0xce
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xc6
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xff
	.space	1
	.byte	0xc0
	.byte	0xdd
	.byte	0xe0
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	6
	.byte	0xcd
	.byte	0xe0
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xd7
	.byte	0xe6
	.byte	0xd5
	.byte	0xe4
	.byte	0xe4
	.byte	0xed
	.byte	0xff
	.space	5
	.byte	0xcd
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xe1
	.byte	0x0
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xff
	.space	1
	.byte	0xc3
	.byte	0xd7
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0xff
	.space	4
	.byte	0xcd
	.byte	0xe3
	.byte	0xe0
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xcc
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe6
	.byte	0xe2
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xff
	.byte	0xc2
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0xed
	.byte	0x0
	.byte	0xc1
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.byte	0xc0
	.byte	0xe6
	.byte	0xdd
	.byte	0xe7
	.byte	0xdf
	.byte	0xff
	.space	7
	.byte	0xcc
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0xe7
	.byte	0xff
	.space	4
	.byte	0xc7
	.byte	0xe9
	.byte	0xe0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0xff
	.space	3
	.byte	0xc0
	.byte	0xe0
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc1
	.byte	0xdd
	.byte	0xda
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xbc
	.byte	0xd5
	.byte	0xd8
	.byte	0x0
	.byte	0xbe
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe1
	.byte	0xe7
	.byte	0xff
	.space	2
	.byte	0xca
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0xe4
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xd9
	.byte	0xe8
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xdc
	.byte	0xd9
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc0
	.byte	0xe3
	.byte	0xe6
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xbd
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe6
	.byte	0xed
	.byte	0xff
	.space	4
	.byte	0xcf
	.byte	0xe2
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xea
	.byte	0xd9
	.byte	0xff
	.space	5
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xdd
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xff
	.space	5
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	3
	.byte	0xbd
	.byte	0xe9
	.byte	0xe6
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0xff
	.space	1
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	6
	.byte	0xc0
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xc1
	.byte	0xe9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xff
	.byte	0xd1
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0x0
	.byte	0xbb
	.byte	0xe6
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.space	2
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xea
	.byte	0xed
	.byte	0x0
	.byte	0xc7
	.byte	0xd9
	.byte	0xe8
	.byte	0xd5
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xc6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xc7
	.byte	0xd9
	.byte	0xe8
	.byte	0xd5
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xc7
	.byte	0xe9
	.byte	0xe0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe7
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xce
	.byte	0xe3
	.byte	0xec
	.byte	0xdd
	.byte	0xd7
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xc2
	.byte	0xd5
	.byte	0xe6
	.byte	0xea
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	5
	.byte	0xce
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xe4
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xed
	.byte	0xff
	.space	3
	.byte	0xc7
	.byte	0xe3
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0xff
	.space	7
	.byte	0xc9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xd7
	.byte	0xe3
	.byte	0xd5
	.byte	0xe8
	.byte	0xff
	.space	4
	.byte	0xca
	.byte	0xe3
	.byte	0xdd
	.byte	0xe7
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xce
	.byte	0xe3
	.byte	0xe9
	.byte	0xd7
	.byte	0xdc
	.byte	0xff
	.byte	0xcc
	.byte	0xd9
	.byte	0xdb
	.byte	0xd9
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xbc
	.byte	0xdd
	.byte	0xdb
	.byte	0x0
	.byte	0xca
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0xe7
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xcc
	.byte	0xe9
	.byte	0xe7
	.byte	0xdc
	.byte	0xff
	.space	3
	.byte	0xd1
	.byte	0xe3
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xcd
	.byte	0xdf
	.byte	0xdd
	.byte	0xe2
	.byte	0xff
	.space	1
	.byte	0xbb
	.byte	0xe2
	.byte	0xd5
	.byte	0xe0
	.byte	0xed
	.byte	0xe8
	.byte	0xdd
	.byte	0xd7
	.byte	0xff
	.space	4
	.byte	0xc3
	.byte	0xe0
	.byte	0xe0
	.byte	0xe9
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xff
	.space	4
	.byte	0xc3
	.byte	0xe1
	.byte	0xe4
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	4
	.byte	0xc3
	.byte	0xe2
	.byte	0xda
	.byte	0xdd
	.byte	0xe0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xc7
	.byte	0xe9
	.byte	0xe1
	.byte	0xe1
	.byte	0xed
	.byte	0xff
	.space	7
	.byte	0xc7
	.byte	0xe3
	.byte	0xec
	.byte	0xdd
	.byte	0xd9
	.byte	0xff
	.space	7
	.byte	0xc4
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0xdd
	.byte	0xda
	.byte	0xdd
	.byte	0xd9
	.byte	0xd8
	.byte	0xff
	.space	3
	.byte	0xcc
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0xff
	.space	5
	.byte	0xc7
	.byte	0xd5
	.byte	0xdb
	.byte	0xdd
	.byte	0xd7
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.byte	0xcd
	.byte	0xd5
	.byte	0xe4
	.byte	0x0
	.byte	0xcd
	.byte	0xdd
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	2
	.byte	0xca
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xdf
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xc0
	.byte	0xe3
	.byte	0xe6
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xc3
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xbc
	.byte	0xd5
	.byte	0xe6
	.byte	0xd6
	.byte	0xe7
	.byte	0xff
	.space	2
	.byte	0xd4
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xc7
	.byte	0xe3
	.byte	0xd8
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xd0
	.byte	0xdd
	.byte	0xd7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xff
	.byte	0xce
	.byte	0xe9
	.byte	0xe6
	.byte	0xd6
	.byte	0xe3
	.byte	0xd6
	.byte	0xe0
	.byte	0xd5
	.byte	0xee
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xce
	.byte	0xd9
	.byte	0xe6
	.byte	0xd5
	.byte	0xea
	.byte	0xe3
	.byte	0xe0
	.byte	0xe8
	.byte	0xff
	.space	4
	.byte	0xbb
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0xd5
	.byte	0x0
	.byte	0xd0
	.byte	0xd9
	.byte	0xdd
	.byte	0xe0
	.byte	0xff
	.space	2
	.byte	0xc0
	.byte	0xe0
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd0
	.byte	0xd9
	.byte	0xdd
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xbd
	.byte	0xdc
	.byte	0xd9
	.byte	0xd9
	.byte	0xdf
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xe9
	.byte	0xd7
	.byte	0xdc
	.byte	0xff
	.space	1
	.byte	0xca
	.byte	0xe6
	.byte	0xe3
	.byte	0xe8
	.byte	0xd9
	.byte	0xd5
	.byte	0xe2
	.byte	0xff
	.space	5
	.byte	0xc0
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xbd
	.byte	0xe3
	.byte	0xd5
	.byte	0xe8
	.byte	0xff
	.space	4
	.byte	0xc7
	.byte	0xd5
	.byte	0xdb
	.byte	0xdd
	.byte	0xd7
	.byte	0xdd
	.byte	0xd5
	.byte	0xe2
	.byte	0xff
	.space	4
	.byte	0xbc
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xd9
	.byte	0xe8
	.byte	0xe4
	.byte	0xe6
	.byte	0xe3
	.byte	0xe3
	.byte	0xda
	.byte	0xff
	.space	1
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe4
	.byte	0xd9
	.byte	0xe8
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xcd
	.byte	0xe8
	.byte	0xe6
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xc4
	.byte	0xd5
	.byte	0xeb
	.byte	0xff
	.space	2
	.byte	0xcc
	.byte	0xd9
	.byte	0xda
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xd9
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xcd
	.byte	0xeb
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xd0
	.byte	0xd9
	.byte	0xdd
	.byte	0xe0
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xbd
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xff
	.byte	0xc1
	.byte	0xd5
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xd1
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xe7
	.byte	0xff
	.space	2
	.byte	0xc7
	.byte	0xd9
	.byte	0xdb
	.byte	0xd5
	.byte	0xc6
	.byte	0xd5
	.byte	0xe9
	.byte	0xe2
	.byte	0xd7
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xca
	.byte	0xd9
	.byte	0xe0
	.byte	0xe8
	.byte	0xff
	.space	2
	.byte	0xcd
	.byte	0xed
	.byte	0xe1
	.byte	0xd6
	.byte	0xdd
	.byte	0xe3
	.byte	0xe7
	.byte	0xdd
	.byte	0xe7
	.byte	0xff
	.space	3
	.byte	0xce
	.byte	0xe3
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0x0
	.byte	0xbd
	.byte	0xe0
	.byte	0xd5
	.byte	0xeb
	.byte	0xe7
	.byte	0xff
	.space	1
	.byte	0xca
	.byte	0xdd
	.byte	0xec
	.byte	0xdd
	.byte	0xe0
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xc1
	.byte	0xe3
	.byte	0xe3
	.byte	0xd9
	.byte	0xed
	.byte	0xff
	.space	7
	.byte	0xbb
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe0
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xca
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xe0
	.byte	0xbc
	.byte	0xe3
	.byte	0xe2
	.byte	0xd8
	.byte	0xff
	.byte	0xbe
	.byte	0xd5
	.byte	0xe6
	.byte	0xdf
	.byte	0x0
	.byte	0xbb
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xff
	.space	3
	.byte	0xc0
	.byte	0xd5
	.byte	0xdd
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xbb
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xff
	.space	2
	.byte	0xbb
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0x0
	.byte	0xbc
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0xff
	.space	2
	.byte	0xca
	.byte	0xe6
	.byte	0xdd
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xd8
	.byte	0xdd
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xcd
	.byte	0xff
	.byte	0xbe
	.byte	0xd9
	.byte	0xe7
	.byte	0xe3
	.byte	0xe0
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xc6
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xff
	.byte	0xbe
	.byte	0xd9
	.byte	0xe0
	.byte	0xe8
	.byte	0xd5
	.byte	0x0
	.byte	0xcd
	.byte	0xe8
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe1
	.byte	0xff
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xd5
	.byte	0xff
	.space	5
	.byte	0xd1
	.byte	0xdd
	.byte	0xe1
	.byte	0xe4
	.byte	0x0
	.byte	0xc9
	.byte	0xe9
	.byte	0xe8
	.byte	0xff
	.space	4
	.byte	0xbf
	.byte	0xe1
	.byte	0xd9
	.byte	0xe6
	.byte	0xdb
	.byte	0xd9
	.byte	0xe2
	.byte	0xd7
	.byte	0xed
	.byte	0x0
	.byte	0xbf
	.byte	0xec
	.byte	0xff
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe4
	.byte	0xd5
	.byte	0xd7
	.byte	0xff
	.byte	0xc7
	.byte	0xd9
	.byte	0xe6
	.byte	0xd7
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0xe7
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xdc
	.byte	0xdd
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0xe7
	.byte	0x0
	.byte	0xbe
	.byte	0xe3
	.byte	0xeb
	.byte	0xe2
	.byte	0xff
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0xff
	.space	4
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xbc
	.byte	0xe9
	.byte	0xd6
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xff
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0xeb
	.byte	0xe3
	.byte	0xe6
	.byte	0xdf
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xd9
	.byte	0xe6
	.byte	0xdf
	.byte	0xff
	.space	5
	.byte	0xcd
	.byte	0xe0
	.byte	0xe9
	.byte	0xe7
	.byte	0xdc
	.byte	0x0
	.byte	0xcc
	.byte	0xe9
	.byte	0xe7
	.byte	0xdc
	.byte	0xff
	.space	2
	.byte	0xc6
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xcc
	.byte	0xd9
	.byte	0xd5
	.byte	0xd7
	.byte	0xdc
	.byte	0xff
	.space	2
	.byte	0xc6
	.byte	0xdd
	.byte	0xe5
	.byte	0xe9
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xd0
	.byte	0xe3
	.byte	0xdd
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.byte	0xce
	.byte	0xe6
	.byte	0xdd
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0xff
	.space	6
	.byte	0xc1
	.byte	0xd5
	.byte	0xe0
	.byte	0xea
	.byte	0xd5
	.byte	0xe2
	.byte	0xdd
	.byte	0xee
	.byte	0xd9
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.byte	0xcd
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xff
	.space	3
	.byte	0xbe
	.byte	0xdd
	.byte	0xe7
	.byte	0xdb
	.byte	0xe9
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xbc
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xe2
	.byte	0xd8
	.byte	0xff
	.space	1
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xbd
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xff
	.byte	0xbd
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xe3
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xff
	.space	3
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xd5
	.byte	0xe8
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xcb
	.byte	0xe9
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0xc7
	.byte	0xd5
	.byte	0xde
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xed
	.byte	0xff
	.byte	0xc3
	.byte	0xe2
	.byte	0xe2
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xe7
	.byte	0x0
	.byte	0xc9
	.byte	0xe9
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xbe
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	6
	.byte	0xbc
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xed
	.byte	0xff
	.space	5
	.byte	0xc0
	.byte	0xe0
	.byte	0xe9
	.byte	0xda
	.byte	0xda
	.byte	0xed
	.byte	0xff
	.space	6
	.byte	0xbe
	.byte	0xd5
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xff
	.space	4
	.byte	0xcd
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xae
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xff
	.space	2
	.byte	0xce
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xc2
	.byte	0xd5
	.byte	0xdd
	.byte	0xe6
	.byte	0xff
	.byte	0xcc
	.byte	0xd9
	.byte	0xd7
	.byte	0xd9
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.space	4
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc9
	.byte	0xda
	.byte	0x0
	.byte	0xbb
	.byte	0xe0
	.byte	0xd7
	.byte	0xff
	.byte	0xbc
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xcc
	.byte	0xc5
	.byte	0xcd
	.byte	0x0
	.byte	0xcd
	.byte	0xed
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0xff
	.space	2
	.byte	0xbf
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0x0
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xdb
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xca
	.byte	0xe7
	.byte	0xed
	.byte	0x0
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xdb
	.byte	0xd9
	.byte	0xff
	.space	3
	.byte	0xc7
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xdb
	.byte	0xd9
	.byte	0xff
	.space	1
	.byte	0xc1
	.byte	0xe6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xed
	.byte	0x0
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xdb
	.byte	0xd9
	.byte	0xff
	.byte	0xc0
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xc7
	.byte	0xd9
	.byte	0xe8
	.byte	0xd5
	.byte	0xe0
	.byte	0xbc
	.byte	0xe3
	.byte	0xd8
	.byte	0xff
	.byte	0xcd
	.byte	0xdc
	.byte	0xd5
	.byte	0xd8
	.byte	0xe3
	.byte	0xeb
	.byte	0xcd
	.byte	0xdc
	.byte	0xdd
	.byte	0xd9
	.byte	0xe0
	.byte	0xd8
	.byte	0xff
	.byte	0xca
	.byte	0xe6
	.byte	0xdd
	.byte	0xe7
	.byte	0xe1
	.byte	0x0
	.byte	0xbb
	.byte	0xe6
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.space	1
	.byte	0xc8
	.byte	0xd9
	.byte	0xe9
	.byte	0xe6
	.byte	0xe3
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.space	2
	.byte	0xc3
	.byte	0xe2
	.byte	0xe8
	.byte	0xe6
	.byte	0xd9
	.byte	0xe4
	.byte	0xdd
	.byte	0xd8
	.byte	0xcd
	.byte	0xeb
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.byte	0xbe
	.byte	0xd5
	.byte	0xe9
	.byte	0xe2
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0xe7
	.byte	0xcd
	.byte	0xdc
	.byte	0xdd
	.byte	0xff
	.byte	0xc6
	.byte	0xdd
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xe3
	.byte	0xff
	.space	6
	.byte	0xbc
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xc0
	.byte	0xd9
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0xff
	.space	2
	.byte	0xbd
	.byte	0xe3
	.byte	0xe8
	.byte	0xe8
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xbe
	.byte	0xe3
	.byte	0xeb
	.byte	0xe2
	.byte	0xff
	.space	1
	.byte	0xca
	.byte	0xe6
	.byte	0xe3
	.byte	0xe4
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0xd9
	.byte	0xe6
	.byte	0xce
	.byte	0xd5
	.byte	0xdd
	.byte	0xff
	.byte	0xc7
	.byte	0xdd
	.byte	0xe6
	.byte	0xe6
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xbb
	.byte	0xe6
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.byte	0xc1
	.byte	0xe9
	.byte	0xe0
	.byte	0xe4
	.byte	0x0
	.byte	0xc7
	.byte	0xdd
	.byte	0xe7
	.byte	0xe7
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0xff
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xff
	.space	4
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd5
	.byte	0xe1
	.byte	0x0
	.byte	0xbf
	.byte	0xe2
	.byte	0xdb
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xff
	.byte	0xca
	.byte	0xe9
	.byte	0xe2
	.byte	0xdf
	.byte	0x0
	.byte	0xcc
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xff
	.space	3
	.byte	0xcd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xdd
	.byte	0xe8
	.byte	0xff
	.space	3
	.byte	0xc3
	.byte	0xd7
	.byte	0xd9
	.byte	0x0
	.byte	0xcd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0xff
	.space	2
	.byte	0xcc
	.byte	0xdd
	.byte	0xe4
	.byte	0xd9
	.byte	0xe2
	.byte	0xff
	.space	7
	.byte	0xc3
	.byte	0xd7
	.byte	0xd9
	.byte	0x0
	.byte	0xc0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.space	4
	.byte	0xca
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xe3
	.byte	0xe8
	.byte	0xff
	.space	2
	.byte	0xc7
	.byte	0xdd
	.byte	0xe1
	.byte	0xdd
	.byte	0xd7
	.byte	0xe6
	.byte	0xed
	.byte	0xff
	.space	5
	.byte	0xcd
	.byte	0xd7
	.byte	0xe6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0xbd
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe2
	.byte	0xd9
	.byte	0xff
	.byte	0xcd
	.byte	0xe8
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0xed
	.byte	0xcd
	.byte	0xe4
	.byte	0xdd
	.byte	0xe6
	.byte	0xdd
	.byte	0xe8
	.byte	0xff
	.byte	0xca
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe7
	.byte	0xdc
	.byte	0x0
	.byte	0xbc
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0xff
	.space	1
	.byte	0xd1
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xcd
	.byte	0xe4
	.byte	0xdd
	.byte	0xff
	.byte	0xc1
	.byte	0xe3
	.byte	0xe6
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0xd5
	.byte	0xce
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xff
	.byte	0xc8
	.byte	0xd9
	.byte	0xe9
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe0
	.byte	0xdd
	.byte	0xee
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xff
	.byte	0xca
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xd0
	.byte	0xd9
	.byte	0xdd
	.byte	0xe0
	.byte	0xff
	.space	1
	.byte	0xc2
	.byte	0xe9
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe6
	.byte	0xcd
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0xff
	.byte	0xcb
	.byte	0xe9
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xeb
	.byte	0xff
	.space	2
	.byte	0xcf
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xc0
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xff
	.space	1
	.byte	0xbd
	.byte	0xe9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe3
	.byte	0xe9
	.byte	0xe7
	.byte	0xc7
	.byte	0xd9
	.byte	0xd8
	.byte	0xdd
	.byte	0xd7
	.byte	0xff
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xe7
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xff
	.space	2
	.byte	0xbe
	.byte	0xe6
	.byte	0xd5
	.byte	0xdb
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xc7
	.byte	0xd5
	.byte	0xeb
	.byte	0xff
	.byte	0xbd
	.byte	0xdc
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xc8
	.byte	0xd9
	.byte	0xdd
	.byte	0xdb
	.byte	0xff
	.byte	0xc1
	.byte	0xe6
	.byte	0xdd
	.byte	0xe1
	.byte	0x0
	.byte	0xc8
	.byte	0xd9
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xff
	.space	2
	.byte	0xbb
	.byte	0xe7
	.byte	0x0
	.byte	0xc9
	.byte	0xe2
	.byte	0xd9
	.byte	0xff
	.space	6
	.byte	0xbb
	.byte	0xe7
	.byte	0x0
	.byte	0xc9
	.byte	0xe2
	.byte	0xd9
	.byte	0xff
	.space	6
	.globl	gAbilityDescriptionPointers
	.align	2, 0
	.type	 gAbilityDescriptionPointers,object
	.size	 gAbilityDescriptionPointers,1072
gAbilityDescriptionPointers:
	.word	sNoneDescription
	.word	sStenchDescription
	.word	sDrizzleDescription
	.word	sSpeedBoostDescription
	.word	sBattleArmorDescription
	.word	sSturdyDescription
	.word	sDampDescription
	.word	sLimberDescription
	.word	sSandVeilDescription
	.word	sStaticDescription
	.word	sVoltAbsorbDescription
	.word	sWaterAbsorbDescription
	.word	sObliviousDescription
	.word	sCloudNineDescription
	.word	sCompoundEyesDescription
	.word	sInsomniaDescription
	.word	sColorChangeDescription
	.word	sImmunityDescription
	.word	sFlashFireDescription
	.word	sShieldDustDescription
	.word	sOwnTempoDescription
	.word	sSuctionCupsDescription
	.word	sIntimidateDescription
	.word	sShadowTagDescription
	.word	sRoughSkinDescription
	.word	sWonderGuardDescription
	.word	sLevitateDescription
	.word	sEffectSporeDescription
	.word	sSynchronizeDescription
	.word	sClearBodyDescription
	.word	sNaturalCureDescription
	.word	sLightningRodDescription
	.word	sSereneGraceDescription
	.word	sSwiftSwimDescription
	.word	sChlorophyllDescription
	.word	sIlluminateDescription
	.word	sTraceDescription
	.word	sHugePowerDescription
	.word	sPoisonPointDescription
	.word	sInnerFocusDescription
	.word	sMagmaArmorDescription
	.word	sWaterVeilDescription
	.word	sMagnetPullDescription
	.word	sSoundproofDescription
	.word	sRainDishDescription
	.word	sSandStreamDescription
	.word	sPressureDescription
	.word	sThickFatDescription
	.word	sEarlyBirdDescription
	.word	sFlameBodyDescription
	.word	sRunAwayDescription
	.word	sKeenEyeDescription
	.word	sHyperCutterDescription
	.word	sPickupDescription
	.word	sTruantDescription
	.word	sHustleDescription
	.word	sCuteCharmDescription
	.word	sPlusDescription
	.word	sMinusDescription
	.word	sForecastDescription
	.word	sStickyHoldDescription
	.word	sShedSkinDescription
	.word	sGutsDescription
	.word	sMarvelScaleDescription
	.word	sLiquidOozeDescription
	.word	sOvergrowDescription
	.word	sBlazeDescription
	.word	sTorrentDescription
	.word	sSwarmDescription
	.word	sRockHeadDescription
	.word	sDroughtDescription
	.word	sArenaTrapDescription
	.word	sVitalSpiritDescription
	.word	sWhiteSmokeDescription
	.word	sPurePowerDescription
	.word	sShellArmorDescription
	.word	sAirLockDescription
	.word	sTangledFeetDescription
	.word	sMotorDriveDescription
	.word	sRivalryDescription
	.word	sSteadfastDescription
	.word	sSnowCloakDescription
	.word	sGluttonyDescription
	.word	sAngerPointDescription
	.word	sUnburdenDescription
	.word	sHeatproofDescription
	.word	sSimpleDescription
	.word	sDrySkinDescription
	.word	sDownloadDescription
	.word	sIronFistDescription
	.word	sPoisonHealDescription
	.word	sAdaptabilityDescription
	.word	sSkillLinkDescription
	.word	sHydrationDescription
	.word	sSolarPowerDescription
	.word	sQuickFeetDescription
	.word	sNormalizeDescription
	.word	sSniperDescription
	.word	sMagicGuardDescription
	.word	sNoGuardDescription
	.word	sStallDescription
	.word	sTechnicianDescription
	.word	sLeafGuardDescription
	.word	sKlutzDescription
	.word	sMoldBreakerDescription
	.word	sSuperLuckDescription
	.word	sAftermathDescription
	.word	sAnticipationDescription
	.word	sForewarnDescription
	.word	sUnawareDescription
	.word	sTintedLensDescription
	.word	sFilterDescription
	.word	sSlowStartDescription
	.word	sScrappyDescription
	.word	sStormDrainDescription
	.word	sIceBodyDescription
	.word	sFilterDescription
	.word	sSnowWarningDescription
	.word	sHoneyGatherDescription
	.word	sFriskDescription
	.word	sRecklessDescription
	.word	sMultitypeDescription
	.word	sFlowerGiftDescription
	.word	sBadDreamsDescription
	.word	sPickpocketDescription
	.word	sSheerForceDescription
	.word	sContraryDescription
	.word	sUnnerveDescription
	.word	sDefiantDescription
	.word	sDefeatistDescription
	.word	sCursedBodyDescription
	.word	sHealerDescription
	.word	sFriendGuardDescription
	.word	sWeakArmorDescription
	.word	sHeavyMetalDescription
	.word	sLightMetalDescription
	.word	sMultiscaleDescription
	.word	sToxicBoostDescription
	.word	sFlareBoostDescription
	.word	sHarvestDescription
	.word	sTelepathyDescription
	.word	sMoodyDescription
	.word	sOvercoatDescription
	.word	sPoisonPointDescription
	.word	sNaturalCureDescription
	.word	sBigPecksDescription
	.word	sSandRushDescription
	.word	sWonderSkinDescription
	.word	sAnalyticDescription
	.word	sIllusionDescription
	.word	sImposterDescription
	.word	sInfiltratorDescription
	.word	sMummyDescription
	.word	sMoxieDescription
	.word	sJustifiedDescription
	.word	sRattledDescription
	.word	sMagicBounceDescription
	.word	sSapSipperDescription
	.word	sPranksterDescription
	.word	sSandForceDescription
	.word	sRoughSkinDescription
	.word	sZenModeDescription
	.word	sVictoryStarDescription
	.word	sMoldBreakerDescription
	.word	sMoldBreakerDescription
	.word	sAromaVeilDescription
	.word	sFlowerVeilDescription
	.word	sCheekPouchDescription
	.word	sProteanDescription
	.word	sFurCoatDescription
	.word	sPickpocketDescription
	.word	sBulletproofDescription
	.word	sCompetitiveDescription
	.word	sStrongJawDescription
	.word	sRefrigerateDescription
	.word	sSweetVeilDescription
	.word	sStanceChangeDescription
	.word	sGaleWingsDescription
	.word	sMegaLauncherDescription
	.word	sGrassPeltDescription
	.word	sSymbiosisDescription
	.word	sToughClawsDescription
	.word	sPixilateDescription
	.word	sGooeyDescription
	.word	sAerilateDescription
	.word	sParentalBondDescription
	.word	sDarkAuraDescription
	.word	sFairyAuraDescription
	.word	sAuraBreakDescription
	.word	sPrimordialSeaDescription
	.word	sDesolateLandDescription
	.word	sDeltaStreamDescription
	.word	sStaminaDescription
	.word	sWimpOutDescription
	.word	sWimpOutDescription
	.word	sWaterCompactionDescription
	.word	sMercilessDescription
	.word	sShieldsDownDescription
	.word	sStakeoutDescription
	.word	sWaterBubbleDescription
	.word	sSteelworkerDescription
	.word	sBerserkDescription
	.word	sSlushRushDescription
	.word	sLongReachDescription
	.word	sLiquidVoiceDescription
	.word	sTriageDescription
	.word	sGalvanizeDescription
	.word	sSurgeSurferDescription
	.word	sSchoolingDescription
	.word	sDisguiseDescription
	.word	sBattleBondDescription
	.word	sPowerConstructDescription
	.word	sCorrosionDescription
	.word	sComatoseDescription
	.word	sQueenlyMajestyDescription
	.word	sInnardsOutDescription
	.word	sDancerDescription
	.word	sBatteryDescription
	.word	sFluffyDescription
	.word	sQueenlyMajestyDescription
	.word	sSoulHeartDescription
	.word	sGooeyDescription
	.word	sReceiverDescription
	.word	sReceiverDescription
	.word	sBeastBoostDescription
	.word	sRKSSystemDescription
	.word	sElectricSurgeDescription
	.word	sPsychicSurgeDescription
	.word	sMistySurgeDescription
	.word	sGrassySurgeDescription
	.word	sFullMetalBodyDescription
	.word	sMultiscaleDescription
	.word	sFilterDescription
	.word	sNeuroforceDescription
	.word	sIntrepidSwordDescription
	.word	sDauntlessShieldDescription
	.word	sLiberoDescription
	.word	sBallFetchDescription
	.word	sCottonDownDescription
	.word	sPropellerTailDescription
	.word	sMirrorArmorDescription
	.word	sGulpMissileDescription
	.word	sStalwartDescription
	.word	sSteamEngineDescription
	.word	sPunkRockDescription
	.word	sSandSpitDescription
	.word	sIceScalesDescription
	.word	sRipenDescription
	.word	sIceFaceDescription
	.word	sPowerSpotDescription
	.word	sMimicryDescription
	.word	sScreenCleanerDescription
	.word	sSteelySpiritDescription
	.word	sPerishBodyDescription
	.word	sWanderingSpiritDescription
	.word	sGorillaTacticsDescription
	.word	sNeutralizingGasDescription
	.word	sPastelVeilDescription
	.word	sHungerSwitchDescription
	.word	sQuickDrawDescription
	.word	sUnseenFistDescription
	.word	sCuriousMedicineDescription
	.word	sTransistorDescription
	.word	sDragonsMawDescription
	.word	sChillingNeighDescription
	.word	sGrimNeighDescription
	.word	sAsOneIceRiderDescription
	.word	sAsOneShadowRiderDescription
	.align	2, 0
	.type	 sTurnActionsFuncsTable,object
sTurnActionsFuncsTable:
	.word	HandleAction_UseMove
	.word	HandleAction_UseItem
	.word	HandleAction_Switch
	.word	HandleAction_Run
	.word	HandleAction_WatchesCarefully
	.word	HandleAction_SafariZoneBallThrow
	.word	HandleAction_ThrowPokeblock
	.word	HandleAction_GoNear
	.word	HandleAction_SafariZoneRun
	.word	HandleAction_WallyBallThrow
	.word	HandleAction_RunBattleScript
	.word	HandleAction_TryFinish
	.word	HandleAction_ActionFinished
	.word	HandleAction_NothingIsFainted
	.size	 sTurnActionsFuncsTable,56
	.align	2, 0
	.type	 sEndTurnFuncsTable,object
sEndTurnFuncsTable:
	.word	HandleEndTurn_ContinueBattle
	.word	HandleEndTurn_BattleWon
	.word	HandleEndTurn_BattleLost
	.word	HandleEndTurn_BattleLost
	.word	HandleEndTurn_RanFromBattle
	.word	HandleEndTurn_FinishBattle
	.word	HandleEndTurn_MonFled
	.word	HandleEndTurn_FinishBattle
	.word	HandleEndTurn_FinishBattle
	.word	HandleEndTurn_FinishBattle
	.word	HandleEndTurn_FinishBattle
	.size	 sEndTurnFuncsTable,44
	.globl	gStatusConditionString_PoisonJpn
	.type	 gStatusConditionString_PoisonJpn,object
	.size	 gStatusConditionString_PoisonJpn,8
gStatusConditionString_PoisonJpn:
	.byte	0x45
	.byte	0x8
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.globl	gStatusConditionString_SleepJpn
	.type	 gStatusConditionString_SleepJpn,object
	.size	 gStatusConditionString_SleepJpn,8
gStatusConditionString_SleepJpn:
	.byte	0x18
	.byte	0x21
	.byte	0x28
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.globl	gStatusConditionString_ParalysisJpn
	.type	 gStatusConditionString_ParalysisJpn,object
	.size	 gStatusConditionString_ParalysisJpn,8
gStatusConditionString_ParalysisJpn:
	.byte	0x1f
	.byte	0x1b
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.globl	gStatusConditionString_BurnJpn
	.type	 gStatusConditionString_BurnJpn,object
	.size	 gStatusConditionString_BurnJpn,8
gStatusConditionString_BurnJpn:
	.byte	0x24
	.byte	0x9
	.byte	0x45
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.globl	gStatusConditionString_IceJpn
	.type	 gStatusConditionString_IceJpn,object
	.size	 gStatusConditionString_IceJpn,8
gStatusConditionString_IceJpn:
	.byte	0xa
	.byte	0x5
	.byte	0x28
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.globl	gStatusConditionString_ConfusionJpn
	.type	 gStatusConditionString_ConfusionJpn,object
	.size	 gStatusConditionString_ConfusionJpn,8
gStatusConditionString_ConfusionJpn:
	.byte	0xa
	.byte	0x2e
	.byte	0x27
	.byte	0x2e
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.globl	gStatusConditionString_LoveJpn
	.type	 gStatusConditionString_LoveJpn,object
	.size	 gStatusConditionString_LoveJpn,8
gStatusConditionString_LoveJpn:
	.byte	0x72
	.byte	0x7b
	.byte	0x72
	.byte	0x7b
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.globl	gStatusConditionStringsTable
	.align	2, 0
	.type	 gStatusConditionStringsTable,object
	.size	 gStatusConditionStringsTable,56
gStatusConditionStringsTable:
	.word	gStatusConditionString_PoisonJpn
	.word	gText_Poison
	.word	gStatusConditionString_SleepJpn
	.word	gText_Sleep
	.word	gStatusConditionString_ParalysisJpn
	.word	gText_Paralysis
	.word	gStatusConditionString_BurnJpn
	.word	gText_Burn
	.word	gStatusConditionString_IceJpn
	.word	gText_Ice
	.word	gStatusConditionString_ConfusionJpn
	.word	gText_Confusion
	.word	gStatusConditionString_LoveJpn
	.word	gText_Love
.text
	.align	2, 0
	.globl	CB2_InitBattle
	.type	 CB2_InitBattle,function
	.thumb_func
CB2_InitBattle:
	push	{lr}
	bl	MoveSaveBlocks_ResetHeap
	bl	AllocateBattleResources
	bl	AllocateBattleSpritesData
	bl	AllocateMonSpritesGfx
	bl	sub_8185F84
	ldr	r0, .L9
	ldr	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L3	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L4	@cond_branch
	bl	CB2_InitBattleInternal
	b	.L5
.L10:
	.align	2, 0
.L9:
	.word	gBattleTypeFlags
.L4:
	mov	r0, #0x80
	lsl	r0, r0, #0xf
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L6	@cond_branch
	bl	HandleLinkBattleSetup
	ldr	r0, .L11
	bl	SetMainCallback2
	b	.L5
.L12:
	.align	2, 0
.L11:
	.word	CB2_PreInitMultiBattle
.L6:
	ldr	r0, .L13
	bl	SetMainCallback2
.L5:
	ldr	r1, .L13+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L8
.L14:
	.align	2, 0
.L13:
	.word	CB2_PreInitIngamePlayerPartnerBattle
	.word	gBattleCommunication
.L3:
	bl	CB2_InitBattleInternal
.L8:
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 CB2_InitBattle,.Lfe1-CB2_InitBattle
	.align	2, 0
	.type	 CB2_InitBattleInternal,function
	.thumb_func
CB2_InitBattleInternal:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	str	r0, [sp]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L43
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x4c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0xf0
	bl	SetGpuReg
	ldr	r1, .L43+0x4
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L43+0x8
	mov	r2, #0xf0
	strh	r2, [r0]
	ldr	r0, .L43+0xc
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L16	@cond_branch
	ldr	r0, .L43+0x10
	ldrh	r0, [r0]
	ldr	r1, .L43+0x14
	cmp	r0, r1
	beq	.L16	@cond_branch
	cmp	r0, r1
	bhi	.L16	@cond_branch
	ldr	r1, .L43+0x18
	mov	r0, #0x9f
	strh	r0, [r1]
	ldr	r0, .L43+0x1c
	strh	r2, [r0]
	ldr	r1, .L43+0x20
	mov	r0, #0x20
	strh	r0, [r1]
	b	.L17
.L44:
	.align	2, 0
.L43:
	.word	0x5006000
	.word	0x5051
	.word	gBattle_WIN0H
	.word	gBattleTypeFlags
	.word	gPartnerTrainerId
	.word	0xc03
	.word	gBattle_WIN0V
	.word	gBattle_WIN1H
	.word	gBattle_WIN1V
.L16:
	ldr	r0, .L45
	ldr	r2, .L45+0x4
	add	r1, r2, #0
	strh	r1, [r0]
	bl	ScanlineEffect_Clear
	ldr	r0, .L45+0x8
	mov	r3, #0xf0
	mov	r5, #0xf0
	lsl	r5, r5, #0x3
	add	r2, r0, r5
	mov	r1, #0x4f
.L20:
	strh	r3, [r0]
	strh	r3, [r2]
	add	r2, r2, #0x2
	add	r0, r0, #0x2
	sub	r1, r1, #0x1
	cmp	r1, #0
	bge	.L20	@cond_branch
	mov	r1, #0x50
	ldr	r4, .L45+0xc
	ldr	r0, .L45+0x8
	ldr	r3, .L45+0x10
	mov	r5, #0x82
	lsl	r5, r5, #0x4
	add	r2, r0, r5
	add	r0, r0, #0xa0
.L24:
	strh	r3, [r0]
	strh	r3, [r2]
	add	r2, r2, #0x2
	add	r0, r0, #0x2
	add	r1, r1, #0x1
	cmp	r1, #0x9f
	ble	.L24	@cond_branch
	ldr	r0, [r4]
	ldr	r1, [r4, #0x4]
	ldr	r2, [r4, #0x8]
	bl	ScanlineEffect_SetParams
.L17:
	bl	ResetPaletteFade
	ldr	r0, .L45+0x14
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L45+0x18
	strh	r1, [r0]
	ldr	r0, .L45+0x1c
	strh	r1, [r0]
	ldr	r0, .L45+0x20
	strh	r1, [r0]
	ldr	r0, .L45+0x24
	strh	r1, [r0]
	ldr	r0, .L45+0x28
	strh	r1, [r0]
	ldr	r0, .L45+0x2c
	strh	r1, [r0]
	ldr	r0, .L45+0x30
	strh	r1, [r0]
	bl	BattleSetup_GetTerrainId
	ldr	r2, .L45+0x34
	strb	r0, [r2]
	ldr	r4, .L45+0x38
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L26	@cond_branch
	mov	r0, #0x8
	strb	r0, [r2]
.L26:
	bl	InitBattleBgsVideo
	bl	LoadBattleTextboxAndBackground
	bl	ResetSpriteData
	bl	ResetTasks
	bl	DrawBattleEntryBackground
	bl	FreeAllSpritePalettes
	ldr	r1, .L45+0x3c
	mov	r0, #0x4
	strb	r0, [r1]
	ldr	r0, .L45+0x40
	bl	SetVBlankCallback
	bl	SetUpBattleVarsAndBirchZigzagoon
	ldr	r2, [r4]
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, r1
	beq	.L42	@cond_branch
	ldr	r1, .L45+0x44
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L29	@cond_branch
.L42:
	ldr	r0, .L45+0x48
	bl	SetMainCallback2
	b	.L28
.L46:
	.align	2, 0
.L45:
	.word	gBattle_WIN0V
	.word	0x5051
	.word	gScanlineEffectRegBuffers
	.word	sIntroScanlineParams16Bit
	.word	0xff10
	.word	gBattle_BG0_X
	.word	gBattle_BG0_Y
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
	.word	gBattle_BG3_X
	.word	gBattle_BG3_Y
	.word	gBattleTerrain
	.word	gBattleTypeFlags
	.word	gReservedSpritePaletteCount
	.word	VBlankCB_Battle
	.word	0x400040
	.word	CB2_HandleStartMultiPartnerBattle
.L29:
	mov	r0, #0x40
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L31	@cond_branch
	ldr	r0, .L47
	bl	SetMainCallback2
	b	.L28
.L48:
	.align	2, 0
.L47:
	.word	CB2_HandleStartMultiBattle
.L31:
	ldr	r0, .L49
	bl	SetMainCallback2
.L28:
	ldr	r4, .L49+0x4
	ldr	r0, [r4]
	ldr	r1, .L49+0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L33	@cond_branch
	ldr	r5, .L49+0xc
	ldr	r0, .L49+0x10
	ldrh	r1, [r0]
	add	r0, r5, #0
	mov	r2, #0x1
	bl	CreateNPCTrainerParty
	ldr	r1, [r4]
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L34	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0xf
	and	r1, r1, r0
	ldr	r2, .L49+0x14
	cmp	r1, #0
	beq	.L35	@cond_branch
	ldrh	r1, [r2]
	ldr	r0, .L49+0x18
	cmp	r1, r0
	beq	.L34	@cond_branch
.L35:
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r0, r5, r1
	ldrh	r1, [r2]
	mov	r2, #0x0
	bl	CreateNPCTrainerParty
.L34:
	bl	SetWildMonHeldItem
.L33:
	ldr	r1, .L49+0x1c
	ldr	r2, .L49+0x20
	add	r1, r1, r2
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, .L49+0x24
	ldr	r1, [r0]
	ldr	r5, .L49+0x28
	add	r1, r1, r5
	ldrb	r2, [r1]
	mov	r0, #0x9
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r4, .L49+0x2c
	mov	r0, #0xfa
	lsl	r0, r0, #0x1
	add	r5, r4, r0
.L39:
	add	r0, r4, #0
	mov	r1, #0x3
	bl	AdjustFriendship
	add	r4, r4, #0x64
	cmp	r4, r5
	ble	.L39	@cond_branch
	mov	r1, #0x0
	ldr	r0, .L49+0x30
	strb	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	CB2_HandleStartBattle
	.word	gBattleTypeFlags
	.word	0x1000002
	.word	gEnemyParty
	.word	gTrainerBattleOpponent_A
	.word	gTrainerBattleOpponent_B
	.word	0xffff
	.word	gMain
	.word	0x439
	.word	gSaveBlock2Ptr
	.word	0xc31
	.word	gPlayerParty
	.word	gBattleCommunication
.Lfe2:
	.size	 CB2_InitBattleInternal,.Lfe2-CB2_InitBattleInternal
	.align	2, 0
	.type	 sub_8036A5C,function
	.thumb_func
sub_8036A5C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r6, #0x0
	mov	r9, r6
	ldr	r0, .L64
	mov	sl, r0
	mov	r8, r6
.L55:
	mov	r0, #0x64
	mov	r4, r9
	mul	r4, r4, r0
	ldr	r0, .L64+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
	add	r1, r0, #0
	cmp	r5, #0
	beq	.L54	@cond_branch
	cmp	r5, sl
	beq	.L57	@cond_branch
	cmp	r7, #0
	beq	.L57	@cond_branch
	cmp	r1, #0
	bne	.L57	@cond_branch
	mov	r0, #0x1
	mov	r2, r8
	lsl	r0, r0, r2
	orr	r6, r6, r0
	lsl	r0, r6, #0x10
	lsr	r6, r0, #0x10
.L57:
	cmp	r5, #0
	beq	.L54	@cond_branch
	cmp	r7, #0
	beq	.L59	@cond_branch
	cmp	r5, sl
	beq	.L60	@cond_branch
	cmp	r1, #0
	beq	.L59	@cond_branch
.L60:
	mov	r0, #0x2
	mov	r1, r8
	lsl	r0, r0, r1
	orr	r6, r6, r0
	lsl	r0, r6, #0x10
	lsr	r6, r0, #0x10
.L59:
	cmp	r5, #0
	beq	.L54	@cond_branch
	cmp	r5, sl
	beq	.L54	@cond_branch
	cmp	r7, #0
	bne	.L54	@cond_branch
	mov	r0, #0x3
	mov	r2, r8
	lsl	r0, r0, r2
	orr	r6, r6, r0
	lsl	r0, r6, #0x10
	lsr	r6, r0, #0x10
.L54:
	mov	r0, #0x2
	add	r8, r8, r0
	mov	r1, #0x1
	add	r9, r9, r1
	mov	r2, r9
	cmp	r2, #0x5
	ble	.L55	@cond_branch
	ldr	r4, .L64+0x8
	ldr	r0, [r4]
	mov	r1, #0xbe
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	strb	r6, [r0]
	ldr	r0, [r4]
	ldr	r5, .L64+0xc
	add	r0, r0, r5
	lsr	r1, r6, #0x8
	strb	r1, [r0]
	ldr	r0, .L64+0x10
	bl	FlagGet
	ldr	r1, [r4]
	add	r1, r1, r5
	lsl	r0, r0, #0x7
	ldrb	r2, [r1]
	orr	r0, r0, r2
	strb	r0, [r1]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	0x4b7
	.word	gPlayerParty
	.word	gBattleStruct
	.word	0x17d
	.word	0x8d2
.Lfe3:
	.size	 sub_8036A5C,.Lfe3-sub_8036A5C
	.align	2, 0
	.type	 SetPlayerBerryDataInBattleStruct,function
	.thumb_func
SetPlayerBerryDataInBattleStruct:
	push	{r4, r5, lr}
	ldr	r0, .L79
	ldr	r5, [r0]
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	add	r4, r5, r0
	bl	IsEnigmaBerryValid
	cmp	r0, #0x1
	beq	.L68	@cond_branch
	mov	r0, #0xcd
	bl	ItemIdToBerryType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBerryInfo
	add	r3, r0, #0
	mov	r2, #0x0
	mov	r0, #0xc4
	lsl	r0, r0, #0x1
	add	r5, r5, r0
.L72:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x5
	ble	.L72	@cond_branch
	add	r1, r4, r2
	mov	r0, #0xff
	strb	r0, [r1]
	add	r0, r5, #0
	mov	r2, #0x0
	add	r1, r0, #0
	add	r1, r1, #0x11
.L77:
	strb	r2, [r1]
	sub	r1, r1, #0x1
	cmp	r1, r0
	bge	.L77	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4, #0x7]
	strb	r0, [r4, #0x1a]
.L68:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L80:
	.align	2, 0
.L79:
	.word	gBattleStruct
.Lfe4:
	.size	 SetPlayerBerryDataInBattleStruct,.Lfe4-SetPlayerBerryDataInBattleStruct
	.align	2, 0
	.type	 SetAllPlayersBerryData,function
	.thumb_func
SetAllPlayersBerryData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L130
	ldr	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L82	@cond_branch
	bl	IsEnigmaBerryValid
	cmp	r0, #0x1
	bne	.LCB693
	b	.L95	@long jump
.LCB693:
	mov	r0, #0xcd
	bl	ItemIdToBerryType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBerryInfo
	add	r4, r0, #0
	mov	r5, #0x0
	ldr	r3, .L130+0x4
	add	r7, r3, #0
	add	r7, r7, #0x38
	add	r6, r3, #0
.L88:
	add	r1, r5, r3
	add	r2, r4, r5
	ldrb	r0, [r2]
	strb	r0, [r1]
	add	r1, r5, r7
	ldrb	r0, [r2]
	strb	r0, [r1]
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L88	@cond_branch
	add	r1, r5, r6
	mov	r0, #0xff
	strb	r0, [r1]
	add	r0, r6, #0
	add	r0, r0, #0x38
	add	r0, r5, r0
	mov	r1, #0x1
	neg	r1, r1
	strb	r1, [r0]
	mov	r5, #0x0
	add	r3, r6, #0
	add	r3, r3, #0x8
	mov	r1, #0x0
	add	r2, r6, #0
	add	r2, r2, #0x40
.L93:
	add	r0, r5, r3
	strb	r1, [r0]
	add	r0, r5, r2
	strb	r1, [r0]
	add	r5, r5, #0x1
	cmp	r5, #0x11
	ble	.L93	@cond_branch
	mov	r1, #0x0
	strb	r1, [r6, #0x7]
	add	r0, r6, #0
	add	r0, r0, #0x3f
	strb	r1, [r0]
	strb	r1, [r6, #0x1a]
	add	r0, r0, #0x13
	strb	r1, [r0]
	b	.L95
.L131:
	.align	2, 0
.L130:
	.word	gBattleTypeFlags
	.word	gEnigmaBerries
.L82:
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L96	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r1, r1, r0
	mov	r0, #0x4
	mov	r8, r0
	cmp	r1, #0
	beq	.L97	@cond_branch
	mov	r1, #0x2
	mov	r8, r1
.L97:
	mov	r5, #0x0
	cmp	r5, r8
	blt	.LCB800
	b	.L95	@long jump
.LCB800:
	ldr	r2, .L132
	mov	ip, r2
	ldr	r6, .L132+0x4
	mov	r4, #0x8
	add	r4, r4, r6
	mov	r9, r4
.L102:
	lsl	r1, r5, #0x8
	ldr	r0, .L132+0x8
	add	r7, r1, r0
	lsl	r0, r5, #0x3
	sub	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r0, r0, ip
	ldrb	r3, [r0, #0x18]
	mov	r4, #0x0
	add	r5, r5, #0x1
	mov	sl, r5
	lsl	r1, r3, #0x3
	sub	r0, r1, r3
	add	r5, r1, #0
	lsl	r0, r0, #0x2
	add	r1, r0, r6
.L106:
	add	r0, r7, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r1, r1, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L106	@cond_branch
	sub	r0, r5, r3
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	add	r1, r1, r6
	mov	r2, #0xff
	strb	r2, [r1]
	mov	r4, #0x0
	mov	r2, r9
	add	r1, r0, r2
	add	r2, r7, #0
	add	r2, r2, #0x8
.L111:
	add	r0, r2, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r1, r1, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x11
	ble	.L111	@cond_branch
	sub	r0, r5, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r7, #0x7]
	strb	r1, [r0, #0x7]
	ldrb	r1, [r7, #0x1a]
	strb	r1, [r0, #0x1a]
	mov	r5, sl
	cmp	r5, r8
	blt	.L102	@cond_branch
	b	.L95
.L133:
	.align	2, 0
.L132:
	.word	gLinkPlayers
	.word	gEnigmaBerries
	.word	gBlockRecvBuffer+0x4
.L96:
	mov	r5, #0x0
	ldr	r4, .L134
	mov	r9, r4
.L118:
	lsl	r0, r5, #0x8
	ldr	r1, .L134+0x4
	add	r7, r0, r1
	mov	r4, #0x0
	add	r2, r5, #0x1
	mov	sl, r2
	lsl	r0, r5, #0x3
	mov	r8, r0
	add	r1, r5, #0x2
	mov	ip, r1
	sub	r1, r0, r5
	mov	r2, ip
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	mov	r2, r9
	add	r3, r0, r2
	lsl	r1, r1, #0x2
	add	r2, r1, r2
.L122:
	add	r0, r7, r4
	ldrb	r1, [r0]
	strb	r1, [r2]
	ldrb	r0, [r0]
	strb	r0, [r3]
	add	r3, r3, #0x1
	add	r2, r2, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L122	@cond_branch
	mov	r0, r8
	sub	r3, r0, r5
	lsl	r3, r3, #0x2
	add	r1, r4, r3
	add	r1, r1, r9
	ldrb	r0, [r1]
	mov	r2, #0xff
	orr	r0, r0, r2
	strb	r0, [r1]
	mov	r0, ip
	lsl	r2, r0, #0x3
	sub	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r1, r4, r2
	add	r1, r1, r9
	ldrb	r0, [r1]
	mov	r4, #0xff
	orr	r0, r0, r4
	strb	r0, [r1]
	mov	r4, #0x0
	ldr	r0, .L134
	add	r0, r0, #0x8
	add	r2, r2, r0
	add	r3, r3, r0
	add	r6, r7, #0
	add	r6, r6, #0x8
.L127:
	add	r0, r6, r4
	ldrb	r1, [r0]
	strb	r1, [r3]
	ldrb	r0, [r0]
	strb	r0, [r2]
	add	r2, r2, #0x1
	add	r3, r3, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x11
	ble	.L127	@cond_branch
	mov	r0, r8
	sub	r2, r0, r5
	lsl	r2, r2, #0x2
	add	r2, r2, r9
	ldrb	r0, [r7, #0x7]
	strb	r0, [r2, #0x7]
	mov	r1, ip
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r1, [r7, #0x7]
	strb	r1, [r0, #0x7]
	ldrb	r1, [r7, #0x1a]
	strb	r1, [r2, #0x1a]
	ldrb	r1, [r7, #0x1a]
	strb	r1, [r0, #0x1a]
	mov	r5, sl
	cmp	r5, #0x1
	ble	.L118	@cond_branch
.L95:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	gEnigmaBerries
	.word	gBlockRecvBuffer+0x4
.Lfe5:
	.size	 SetAllPlayersBerryData,.Lfe5-SetAllPlayersBerryData
	.align	2, 0
	.type	 sub_8036EB8,function
	.thumb_func
sub_8036EB8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	mov	r6, #0x0
	ldr	r0, .L165
	ldrh	r2, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	mov	ip, r0
	cmp	r2, r1
	bne	.L137	@cond_branch
	cmp	r3, #0
	bne	.L138	@cond_branch
	ldr	r0, .L165+0x4
	ldr	r1, [r0]
	mov	r2, #0xc
	b	.L161
.L166:
	.align	2, 0
.L165:
	.word	gBlockRecvBuffer
	.word	gBattleTypeFlags
.L138:
	ldr	r0, .L167
	ldr	r1, [r0]
	mov	r2, #0x8
.L161:
	orr	r1, r1, r2
	str	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L137:
	cmp	r6, #0
	bne	.L140	@cond_branch
	mov	r2, #0x0
	cmp	r2, r4
	bge	.L142	@cond_branch
	ldr	r1, .L167+0x4
	mov	r8, r1
	mov	r5, #0x80
	lsl	r5, r5, #0x1
.L143:
	add	r1, r1, r5
	add	r2, r2, #0x1
	cmp	r2, r4
	bge	.L142	@cond_branch
	mov	r7, r8
	ldrh	r0, [r7]
	ldrh	r7, [r1]
	cmp	r0, r7
	beq	.L143	@cond_branch
.L142:
	cmp	r2, r4
	bne	.L147	@cond_branch
	cmp	r3, #0
	bne	.L148	@cond_branch
	ldr	r0, .L167
	ldr	r1, [r0]
	mov	r2, #0xc
	b	.L162
.L168:
	.align	2, 0
.L167:
	.word	gBattleTypeFlags
	.word	gBlockRecvBuffer
.L148:
	ldr	r0, .L169
	ldr	r1, [r0]
	mov	r2, #0x8
.L162:
	orr	r1, r1, r2
	str	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L147:
	cmp	r6, #0
	bne	.L140	@cond_branch
	mov	r2, #0x0
	ldr	r5, .L169
	cmp	r2, r4
	bge	.L152	@cond_branch
	mov	r0, ip
	ldrh	r1, [r0]
	mov	r0, #0xc0
	lsl	r0, r0, #0x2
	cmp	r1, r0
	beq	.L163	@cond_branch
.L155:
	lsl	r0, r2, #0x8
	add	r0, r0, ip
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x2
	cmp	r0, r1
	bls	.L153	@cond_branch
	cmp	r2, r3
	bne	.L152	@cond_branch
.L153:
	add	r2, r2, #0x1
	cmp	r2, r4
	bge	.L152	@cond_branch
	lsl	r0, r2, #0x8
	add	r0, r0, ip
	ldrh	r0, [r0]
	cmp	r0, r1
	bne	.L155	@cond_branch
.L163:
	cmp	r2, r3
	beq	.L155	@cond_branch
	cmp	r2, r3
	bge	.L155	@cond_branch
.L152:
	cmp	r2, r4
	bne	.L159	@cond_branch
	ldr	r0, [r5]
	mov	r1, #0xc
	b	.L164
.L170:
	.align	2, 0
.L169:
	.word	gBattleTypeFlags
.L159:
	ldr	r0, [r5]
	mov	r1, #0x8
.L164:
	orr	r0, r0, r1
	str	r0, [r5]
.L140:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 sub_8036EB8,.Lfe6-sub_8036EB8
	.align	2, 0
	.type	 CB2_HandleStartBattle,function
	.thumb_func
CB2_HandleStartBattle:
	push	{r4, r5, r6, lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L227
	add	r0, r0, #0x25
	strb	r6, [r0]
	mov	r0, #0x1
	add	r5, r6, #0
	eor	r5, r5, r0
	ldr	r0, .L227+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x12
	bls	.LCB1280
	b	.L172	@long jump
.LCB1280:
	lsl	r0, r0, #0x2
	ldr	r1, .L227+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L228:
	.align	2, 0
.L227:
	.word	gBattleScripting
	.word	gBattleCommunication
	.word	.L224
	.align	2, 0
	.align	2, 0
.L224:
	.word	.L173
	.word	.L176
	.word	.L184
	.word	.L186
	.word	.L188
	.word	.L219
	.word	.L222
	.word	.L190
	.word	.L192
	.word	.L219
	.word	.L222
	.word	.L194
	.word	.L196
	.word	.L219
	.word	.L222
	.word	.L198
	.word	.L209
	.word	.L211
	.word	.L214
.L173:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L174	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	bl	sub_805EF14
	ldr	r1, .L229
	mov	r0, #0x1
	strb	r0, [r1]
.L174:
	ldr	r0, .L229+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB1326
	b	.L172	@long jump
.LCB1326:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	b	.L172
.L230:
	.align	2, 0
.L229:
	.word	gBattleCommunication
	.word	gWirelessCommType
.L176:
	ldr	r2, .L231
	ldr	r1, [r2]
	mov	r6, #0x2
	add	r0, r1, #0
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L177	@cond_branch
	ldr	r0, .L231+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB1351
	b	.L172	@long jump
.LCB1351:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L179	@cond_branch
	ldr	r4, .L231+0x8
	ldr	r0, [r4]
	mov	r5, #0xbd
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r2, .L231+0xc
	add	r1, r0, r2
	mov	r0, #0x3
	strb	r0, [r1]
	bl	sub_8036A5C
	bl	SetPlayerBerryDataInBattleStruct
	ldr	r0, .L231+0x10
	ldrh	r1, [r0]
	mov	r0, #0xc0
	lsl	r0, r0, #0x4
	cmp	r1, r0
	bne	.L180	@cond_branch
	ldr	r0, .L231+0x14
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	mov	r1, #0x1
	strh	r1, [r0, #0x34]
.L180:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, r5
	mov	r2, #0x20
	bl	SendBlock
	ldr	r0, .L231+0x18
	strb	r6, [r0]
.L179:
	ldr	r0, .L231+0x1c
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB1410
	b	.L172	@long jump
.LCB1410:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L172
.L232:
	.align	2, 0
.L231:
	.word	gBattleTypeFlags
	.word	gReceivedRemoteLinkPlayers
	.word	gBattleStruct
	.word	0x17b
	.word	gTrainerBattleOpponent_A
	.word	gLinkPlayers
	.word	gBattleCommunication
	.word	gWirelessCommType
.L177:
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L183	@cond_branch
	mov	r0, #0x4
	orr	r1, r1, r0
	str	r1, [r2]
.L183:
	ldr	r1, .L233
	mov	r0, #0xf
	strb	r0, [r1]
	bl	SetAllPlayersBerryData
	b	.L172
.L234:
	.align	2, 0
.L233:
	.word	gBattleCommunication
.L184:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB1460
	b	.L172	@long jump
.LCB1460:
	bl	ResetBlockReceivedFlags
	mov	r0, #0x2
	add	r1, r6, #0
	bl	sub_8036EB8
	bl	SetAllPlayersBerryData
	ldr	r0, .L235
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L235+0x4
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	add	r2, r2, r1
	mov	r1, #0x0
	mov	r0, #0x87
	lsl	r0, r0, #0x1
	strh	r0, [r2, #0xa]
	mov	r0, #0x5a
	strh	r0, [r2, #0xc]
	strh	r1, [r2, #0x12]
	ldr	r0, .L235+0x8
	ldr	r3, [r0]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	ldrb	r1, [r0]
	add	r4, r4, #0x1
	add	r0, r3, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	strh	r1, [r2, #0xe]
	ldr	r1, .L235+0xc
	lsl	r4, r5, #0x8
	add	r1, r1, #0x2
	add	r4, r4, r1
	ldrh	r0, [r4]
	strh	r0, [r2, #0x10]
	lsl	r0, r6, #0x8
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	sub_8185F90
	ldrh	r0, [r4]
	bl	sub_8185F90
	ldr	r1, .L235+0x10
	b	.L226
.L236:
	.align	2, 0
.L235:
	.word	InitLinkBattleVsScreen
	.word	gTasks
	.word	gBattleStruct
	.word	gBlockRecvBuffer
	.word	gBattleCommunication
.L186:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1534
	b	.L172	@long jump
.LCB1534:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L237
	mov	r2, #0xc8
	bl	SendBlock
	ldr	r1, .L237+0x4
	b	.L226
.L238:
	.align	2, 0
.L237:
	.word	gPlayerParty
	.word	gBattleCommunication
.L188:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB1563
	b	.L172	@long jump
.LCB1563:
	bl	ResetBlockReceivedFlags
	ldr	r0, .L239
	lsl	r1, r5, #0x8
	ldr	r2, .L239+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	memcpy
	ldr	r1, .L239+0x8
	b	.L226
.L240:
	.align	2, 0
.L239:
	.word	gEnemyParty
	.word	gBlockRecvBuffer
	.word	gBattleCommunication
.L190:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1591
	b	.L172	@long jump
.LCB1591:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L241
	mov	r2, #0xc8
	bl	SendBlock
	ldr	r1, .L241+0x4
	b	.L226
.L242:
	.align	2, 0
.L241:
	.word	gPlayerParty+0xc8
	.word	gBattleCommunication
.L192:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB1620
	b	.L172	@long jump
.LCB1620:
	bl	ResetBlockReceivedFlags
	ldr	r0, .L243
	lsl	r1, r5, #0x8
	ldr	r2, .L243+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	memcpy
	ldr	r1, .L243+0x8
	b	.L226
.L244:
	.align	2, 0
.L243:
	.word	gEnemyParty+0xc8
	.word	gBlockRecvBuffer
	.word	gBattleCommunication
.L194:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1648
	b	.L172	@long jump
.LCB1648:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L245
	mov	r2, #0xc8
	bl	SendBlock
	ldr	r1, .L245+0x4
	b	.L226
.L246:
	.align	2, 0
.L245:
	.word	gPlayerParty+0x190
	.word	gBattleCommunication
.L196:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB1677
	b	.L172	@long jump
.LCB1677:
	bl	ResetBlockReceivedFlags
	ldr	r4, .L247
	lsl	r1, r5, #0x8
	ldr	r0, .L247+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0xc8
	bl	memcpy
	ldr	r1, .L247+0x8
	add	r0, r4, r1
	bl	TryCorrectShedinjaLanguage
	ldr	r2, .L247+0xc
	add	r0, r4, r2
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	sub	r0, r0, #0xc8
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	sub	r0, r0, #0x64
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0x64
	bl	TryCorrectShedinjaLanguage
	ldr	r1, .L247+0x10
	b	.L226
.L248:
	.align	2, 0
.L247:
	.word	gEnemyParty+0x190
	.word	gBlockRecvBuffer
	.word	-0x190
	.word	-0x12c
	.word	gBattleCommunication
.L198:
	bl	sub_8032768
	bl	sub_8184E58
	ldr	r2, .L249
	mov	r0, #0x0
	strb	r0, [r2, #0x1]
	strb	r0, [r2, #0x2]
	ldr	r0, .L249+0x4
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L199	@cond_branch
	mov	r3, #0x0
	ldr	r1, .L249+0x8
	ldrb	r0, [r1]
	add	r5, r2, #0
	cmp	r0, #0x3
	bne	.L201	@cond_branch
	mov	r4, #0xff
	add	r2, r1, #0
.L202:
	add	r2, r2, #0x1c
	add	r3, r3, #0x1
	cmp	r3, #0x1
	bgt	.L201	@cond_branch
	ldrh	r1, [r2]
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0x3
	beq	.L202	@cond_branch
.L201:
	cmp	r3, #0x2
	bne	.L206	@cond_branch
	mov	r0, #0x10
	strb	r0, [r5]
	b	.L172
.L250:
	.align	2, 0
.L249:
	.word	gBattleCommunication
	.word	gBattleTypeFlags
	.word	gLinkPlayers
.L206:
	mov	r0, #0x12
	strb	r0, [r5]
	b	.L172
.L199:
	mov	r0, #0x12
	strb	r0, [r2]
	b	.L172
.L209:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L172	@cond_branch
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L251
	mov	r2, #0x4
	bl	SendBlock
	ldr	r1, .L251+0x4
	b	.L226
.L252:
	.align	2, 0
.L251:
	.word	gRecordedBattleRngSeed
	.word	gBattleCommunication
.L211:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	bne	.L172	@cond_branch
	bl	ResetBlockReceivedFlags
	ldr	r0, .L253
	ldr	r0, [r0]
	mov	r1, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L213	@cond_branch
	ldr	r0, .L253+0x4
	lsl	r1, r5, #0x8
	ldr	r2, .L253+0x8
	add	r1, r1, r2
	mov	r2, #0x4
	bl	memcpy
.L213:
	ldr	r1, .L253+0xc
	b	.L226
.L254:
	.align	2, 0
.L253:
	.word	gBattleTypeFlags
	.word	gRecordedBattleRngSeed
	.word	gBlockRecvBuffer
	.word	gBattleCommunication
.L214:
	ldr	r0, .L255
	add	r1, r0, #0x1
	bl	BattleInitAllSprites
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L172	@cond_branch
	ldr	r2, .L255+0x4
	ldr	r1, .L255+0x8
	ldr	r0, [r1]
	str	r0, [r2]
	ldr	r0, .L255+0xc
	str	r0, [r1]
	ldr	r0, .L255+0x10
	bl	SetMainCallback2
	ldr	r2, .L255+0x14
	ldr	r1, [r2]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L172	@cond_branch
	mov	r0, #0x20
	orr	r1, r1, r0
	str	r1, [r2]
	b	.L172
.L256:
	.align	2, 0
.L255:
	.word	gBattleCommunication+0x1
	.word	gPreBattleCallback1
	.word	gMain
	.word	BattleMainCB1
	.word	BattleMainCB2
	.word	gBattleTypeFlags
.L219:
	ldr	r0, .L257
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	mov	r1, #0x1
	strb	r1, [r0, #0x1]
.L222:
	ldr	r1, .L257
	ldrb	r0, [r1, #0x1]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L172	@cond_branch
.L226:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L172:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L258:
	.align	2, 0
.L257:
	.word	gBattleCommunication
.Lfe7:
	.size	 CB2_HandleStartBattle,.Lfe7-CB2_HandleStartBattle
	.align	2, 0
	.type	 CB2_HandleStartMultiPartnerBattle,function
	.thumb_func
CB2_HandleStartMultiPartnerBattle:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L319
	add	r0, r0, #0x25
	strb	r6, [r0]
	mov	r0, #0x1
	add	r7, r6, #0
	eor	r7, r7, r0
	ldr	r0, .L319+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x10
	bls	.LCB1966
	b	.L260	@long jump
.LCB1966:
	lsl	r0, r0, #0x2
	ldr	r1, .L319+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L320:
	.align	2, 0
.L319:
	.word	gBattleScripting
	.word	gBattleCommunication
	.word	.L311
	.align	2, 0
	.align	2, 0
.L311:
	.word	.L261
	.word	.L264
	.word	.L271
	.word	.L273
	.word	.L275
	.word	.L279
	.word	.L281
	.word	.L285
	.word	.L287
	.word	.L290
	.word	.L292
	.word	.L295
	.word	.L297
	.word	.L300
	.word	.L303
	.word	.L305
	.word	.L308
.L261:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L262	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	bl	sub_805EF14
	ldr	r1, .L321
	mov	r0, #0x1
	strb	r0, [r1]
.L262:
	ldr	r0, .L321+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L264	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
.L264:
	ldr	r2, .L321+0x8
	ldr	r1, [r2]
	mov	r3, #0x2
	add	r0, r1, #0
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L265	@cond_branch
	ldr	r0, .L321+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB2029
	b	.L260	@long jump
.LCB2029:
	ldr	r6, .L321+0x10
	mov	r0, #0x0
	strh	r0, [r6, #0x18]
	strh	r3, [r6, #0x34]
	add	r1, r6, #0
	add	r1, r1, #0x50
	mov	r0, #0x1
	strh	r0, [r1]
	add	r1, r1, #0x1c
	mov	r0, #0x3
	strh	r0, [r1]
	add	r0, r6, #0
	add	r0, r0, #0x40
	ldr	r4, .L321+0x14
	ldrh	r1, [r4]
	bl	GetFrontierTrainerName
	add	r0, r6, #0
	add	r0, r0, #0x5c
	ldr	r5, .L321+0x18
	ldrh	r1, [r5]
	bl	GetFrontierTrainerName
	ldrh	r1, [r4]
	mov	r0, sp
	bl	GetBattleTowerTrainerLanguage
	mov	r0, sp
	ldrb	r0, [r0]
	add	r1, r6, #0
	add	r1, r1, #0x52
	strh	r0, [r1]
	ldrh	r1, [r5]
	mov	r0, sp
	bl	GetBattleTowerTrainerLanguage
	mov	r0, sp
	ldrb	r1, [r0]
	add	r0, r6, #0
	add	r0, r0, #0x6e
	strh	r1, [r0]
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L267	@cond_branch
	ldr	r4, .L321+0x1c
	ldr	r0, [r4]
	mov	r5, #0xbd
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r2, .L321+0x20
	add	r1, r0, r2
	mov	r0, #0x3
	strb	r0, [r1]
	bl	sub_8036A5C
	bl	SetPlayerBerryDataInBattleStruct
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, r5
	mov	r2, #0x20
	bl	SendBlock
	ldr	r1, .L321
	mov	r0, #0x2
	strb	r0, [r1]
.L267:
	ldr	r0, .L321+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB2119
	b	.L260	@long jump
.LCB2119:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L260
.L322:
	.align	2, 0
.L321:
	.word	gBattleCommunication
	.word	gWirelessCommType
	.word	gBattleTypeFlags
	.word	gReceivedRemoteLinkPlayers
	.word	gLinkPlayers
	.word	gTrainerBattleOpponent_A
	.word	gTrainerBattleOpponent_B
	.word	gBattleStruct
	.word	0x17b
.L265:
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L270	@cond_branch
	mov	r0, #0x4
	orr	r1, r1, r0
	str	r1, [r2]
.L270:
	ldr	r1, .L323
	mov	r0, #0xd
	strb	r0, [r1]
	bl	SetAllPlayersBerryData
	b	.L260
.L324:
	.align	2, 0
.L323:
	.word	gBattleCommunication
.L271:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB2171
	b	.L260	@long jump
.LCB2171:
	bl	ResetBlockReceivedFlags
	mov	r0, #0x2
	add	r1, r6, #0
	bl	sub_8036EB8
	bl	SetAllPlayersBerryData
	ldr	r0, .L325
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L325+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	mov	r0, #0x87
	lsl	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	mov	r0, #0x5a
	strh	r0, [r1, #0xc]
	strh	r2, [r1, #0x12]
	add	r0, r0, #0xeb
	strh	r0, [r1, #0xe]
	strh	r0, [r1, #0x10]
	b	.L307
.L326:
	.align	2, 0
.L325:
	.word	InitLinkBattleVsScreen
	.word	gTasks
.L273:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2218
	b	.L260	@long jump
.LCB2218:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L327
.L313:
	mov	r2, #0xc8
	bl	SendBlock
	b	.L307
.L328:
	.align	2, 0
.L327:
	.word	gPlayerParty
.L275:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB2246
	b	.L260	@long jump
.LCB2246:
	bl	ResetBlockReceivedFlags
	ldr	r0, .L329
	lsl	r1, r6, #0x3
	sub	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x18]
	cmp	r0, #0
	beq	.L277	@cond_branch
	ldr	r4, .L329+0x4
	lsl	r1, r7, #0x8
	ldr	r5, .L329+0x8
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0xc8
	bl	memcpy
	mov	r0, #0x96
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	lsl	r1, r6, #0x8
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0xc8
	bl	memcpy
	b	.L307
.L330:
	.align	2, 0
.L329:
	.word	gLinkPlayers
	.word	gPlayerParty
	.word	gBlockRecvBuffer
.L277:
	ldr	r4, .L331
	lsl	r1, r6, #0x8
	ldr	r5, .L331+0x4
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0xc8
	bl	memcpy
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r4, r4, r1
	lsl	r1, r7, #0x8
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0xc8
	b	.L315
.L332:
	.align	2, 0
.L331:
	.word	gPlayerParty
	.word	gBlockRecvBuffer
.L279:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2320
	b	.L260	@long jump
.LCB2320:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L333
	mov	r2, #0x64
	bl	SendBlock
	b	.L307
.L334:
	.align	2, 0
.L333:
	.word	gPlayerParty+0xc8
.L281:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB2347
	b	.L260	@long jump
.LCB2347:
	bl	ResetBlockReceivedFlags
	ldr	r0, .L335
	lsl	r1, r6, #0x3
	sub	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x18]
	cmp	r0, #0
	beq	.L283	@cond_branch
	ldr	r4, .L335+0x4
	lsl	r1, r7, #0x8
	ldr	r5, .L335+0x8
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0x64
	bl	memcpy
	mov	r2, #0x96
	lsl	r2, r2, #0x1
	add	r4, r4, r2
	lsl	r1, r6, #0x8
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0x64
	bl	memcpy
	b	.L307
.L336:
	.align	2, 0
.L335:
	.word	gLinkPlayers
	.word	gPlayerParty+0xc8
	.word	gBlockRecvBuffer
.L283:
	ldr	r4, .L337
	lsl	r1, r6, #0x8
	ldr	r5, .L337+0x4
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0x64
	bl	memcpy
	mov	r0, #0x96
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	lsl	r1, r7, #0x8
	add	r1, r1, r5
	add	r0, r4, #0
	mov	r2, #0x64
	b	.L315
.L338:
	.align	2, 0
.L337:
	.word	gPlayerParty+0xc8
	.word	gBlockRecvBuffer
.L285:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2421
	b	.L260	@long jump
.LCB2421:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L339
	b	.L313
.L340:
	.align	2, 0
.L339:
	.word	gEnemyParty
.L287:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB2446
	b	.L260	@long jump
.LCB2446:
	bl	ResetBlockReceivedFlags
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2454
	b	.L307	@long jump
.LCB2454:
	ldr	r0, .L341
	ldr	r1, .L341+0x4
	mov	r2, #0xc8
	b	.L315
.L342:
	.align	2, 0
.L341:
	.word	gEnemyParty
	.word	gBlockRecvBuffer
.L290:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2476
	b	.L260	@long jump
.LCB2476:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L343
	b	.L313
.L344:
	.align	2, 0
.L343:
	.word	gEnemyParty+0xc8
.L292:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB2501
	b	.L260	@long jump
.LCB2501:
	bl	ResetBlockReceivedFlags
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2509
	b	.L307	@long jump
.LCB2509:
	ldr	r0, .L345
	ldr	r1, .L345+0x4
	mov	r2, #0xc8
	b	.L315
.L346:
	.align	2, 0
.L345:
	.word	gEnemyParty+0xc8
	.word	gBlockRecvBuffer
.L295:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2531
	b	.L260	@long jump
.LCB2531:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L347
	b	.L313
.L348:
	.align	2, 0
.L347:
	.word	gEnemyParty+0x190
.L297:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	beq	.LCB2556
	b	.L260	@long jump
.LCB2556:
	bl	ResetBlockReceivedFlags
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L299	@cond_branch
	ldr	r0, .L349
	ldr	r1, .L349+0x4
	mov	r2, #0xc8
	bl	memcpy
.L299:
	ldr	r4, .L349+0x8
	add	r0, r4, #0
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0x64
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0xc8
	bl	TryCorrectShedinjaLanguage
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	TryCorrectShedinjaLanguage
	mov	r2, #0xc8
	lsl	r2, r2, #0x1
	add	r0, r4, r2
	bl	TryCorrectShedinjaLanguage
	mov	r1, #0xfa
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	TryCorrectShedinjaLanguage
	ldr	r4, .L349+0xc
	add	r0, r4, #0
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0x64
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0xc8
	bl	TryCorrectShedinjaLanguage
	mov	r2, #0x96
	lsl	r2, r2, #0x1
	add	r0, r4, r2
	bl	TryCorrectShedinjaLanguage
	mov	r1, #0xc8
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	TryCorrectShedinjaLanguage
	mov	r2, #0xfa
	lsl	r2, r2, #0x1
	add	r0, r4, r2
	bl	TryCorrectShedinjaLanguage
	b	.L307
.L350:
	.align	2, 0
.L349:
	.word	gEnemyParty+0x190
	.word	gBlockRecvBuffer
	.word	gPlayerParty
	.word	gEnemyParty
.L300:
	bl	sub_8032768
	bl	sub_8184E58
	ldr	r2, .L351
	mov	r0, #0x0
	strb	r0, [r2, #0x1]
	strb	r0, [r2, #0x2]
	ldr	r0, .L351+0x4
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L301	@cond_branch
	mov	r0, #0xe
	strb	r0, [r2]
	b	.L260
.L352:
	.align	2, 0
.L351:
	.word	gBattleCommunication
	.word	gBattleTypeFlags
.L301:
	mov	r0, #0x10
	strb	r0, [r2]
	b	.L260
.L303:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L260	@cond_branch
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L353
	mov	r2, #0x4
	bl	SendBlock
	b	.L307
.L354:
	.align	2, 0
.L353:
	.word	gRecordedBattleRngSeed
.L305:
	bl	GetBlockReceivedStatus
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x3
	bne	.L260	@cond_branch
	bl	ResetBlockReceivedFlags
	ldr	r0, .L355
	ldr	r0, [r0]
	mov	r1, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L307	@cond_branch
	ldr	r0, .L355+0x4
	lsl	r1, r7, #0x8
	ldr	r2, .L355+0x8
	add	r1, r1, r2
	mov	r2, #0x4
.L315:
	bl	memcpy
.L307:
	ldr	r1, .L355+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L260
.L356:
	.align	2, 0
.L355:
	.word	gBattleTypeFlags
	.word	gRecordedBattleRngSeed
	.word	gBlockRecvBuffer
	.word	gBattleCommunication
.L308:
	ldr	r0, .L357
	add	r1, r0, #0x1
	bl	BattleInitAllSprites
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L260	@cond_branch
	bl	sub_8166188
	ldr	r2, .L357+0x4
	ldr	r1, .L357+0x8
	ldr	r0, [r1]
	str	r0, [r2]
	ldr	r0, .L357+0xc
	str	r0, [r1]
	ldr	r0, .L357+0x10
	bl	SetMainCallback2
	ldr	r2, .L357+0x14
	ldr	r1, [r2]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L260	@cond_branch
	mov	r0, #0x20
	orr	r1, r1, r0
	str	r1, [r2]
.L260:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L358:
	.align	2, 0
.L357:
	.word	gBattleCommunication+0x1
	.word	gPreBattleCallback1
	.word	gMain
	.word	BattleMainCB1
	.word	BattleMainCB2
	.word	gBattleTypeFlags
.Lfe8:
	.size	 CB2_HandleStartMultiPartnerBattle,.Lfe8-CB2_HandleStartMultiPartnerBattle
	.align	2, 0
	.type	 sub_80379F8,function
	.thumb_func
sub_80379F8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r0, #0x0
	mov	r8, r0
	ldr	r6, .L366
	mov	sl, r6
.L363:
	ldr	r1, [sp]
	add	r1, r1, r8
	mov	r0, #0x64
	mov	r4, r1
	mul	r4, r4, r0
	ldr	r0, .L366+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	mov	r1, r8
	lsl	r5, r1, #0x5
	ldr	r2, .L366+0x8
	add	r1, r2, #0
	and	r0, r0, r1
	ldrh	r1, [r6]
	ldr	r3, .L366+0xc
	add	r2, r3, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strh	r1, [r6]
	add	r0, r4, #0
	mov	r1, #0xc
	bl	GetMonData
	strh	r0, [r6, #0x2]
	mov	r0, #0x4
	add	r0, r0, sl
	mov	r9, r0
	add	r7, r5, r0
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, r7, #0
	bl	GetMonData
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strb	r0, [r6, #0xf]
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	strh	r0, [r6, #0x10]
	add	r0, r4, #0
	mov	r1, #0x3a
	bl	GetMonData
	strh	r0, [r6, #0x12]
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
	mov	r1, sl
	add	r1, r1, #0x14
	add	r5, r5, r1
	str	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r6, #0x18]
	add	r0, r4, #0
	bl	GetMonGender
	strb	r0, [r6, #0x1c]
	add	r0, r7, #0
	bl	StripExtCtrlCodes
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x1
	beq	.L362	@cond_branch
	add	r0, r7, #0
	mov	r1, #0x0
	bl	PadNameString
.L362:
	add	r6, r6, #0x20
	mov	r1, #0x1
	add	r8, r8, r1
	mov	r2, r8
	cmp	r2, #0x2
	ble	.L363	@cond_branch
	ldr	r0, .L366+0x10
	ldr	r0, [r0]
	mov	r1, r9
	sub	r1, r1, #0x4
	mov	r2, #0x60
	bl	memcpy
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L367:
	.align	2, 0
.L366:
	.word	gMultiPartnerParty
	.word	gPlayerParty
	.word	0x7ff
	.word	-0x800
	.word	sMultiPartnerPartyBuffer
.Lfe9:
	.size	 sub_80379F8,.Lfe9-sub_80379F8
	.align	2, 0
	.type	 CB2_PreInitMultiBattle,function
	.thumb_func
CB2_PreInitMultiBattle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r0, #0x4
	mov	r9, r0
	mov	r4, #0xf
	ldr	r6, .L399
	ldr	r0, [r6]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L369	@cond_branch
	mov	r1, #0x2
	mov	r9, r1
	mov	r4, #0x3
.L369:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L399+0x4
	add	r0, r0, #0x25
	mov	r2, #0x0
	mov	r8, r2
	strb	r7, [r0]
	ldr	r0, .L399+0x8
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0xac
	str	r1, [sp]
	add	r0, r0, #0xa0
	mov	sl, r0
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	ldr	r5, .L399+0xc
	ldrb	r0, [r5]
	cmp	r0, #0x1
	beq	.L373	@cond_branch
	cmp	r0, #0x1
	bgt	.L397	@cond_branch
	cmp	r0, #0
	beq	.L371	@cond_branch
	b	.L370
.L400:
	.align	2, 0
.L399:
	.word	gBattleTypeFlags
	.word	gBattleScripting
	.word	gBattleStruct
	.word	gBattleCommunication
.L397:
	cmp	r0, #0x2
	bne	.LCB2981
	b	.L386	@long jump
.LCB2981:
	cmp	r0, #0x3
	bne	.LCB2983
	b	.L390	@long jump
.LCB2983:
	b	.L370
.L371:
	ldr	r0, .L401
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB2994
	b	.L370	@long jump
.LCB2994:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3000
	b	.L370	@long jump
.LCB3000:
	ldr	r4, .L401+0x4
	mov	r0, #0x60
	bl	Alloc
	str	r0, [r4]
	mov	r0, #0x0
	bl	sub_80379F8
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	mov	r2, #0x60
	bl	SendBlock
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L370
.L402:
	.align	2, 0
.L401:
	.word	gReceivedRemoteLinkPlayers
	.word	sMultiPartnerPartyBuffer
.L373:
	bl	GetBlockReceivedStatus
	add	r1, r4, #0
	and	r1, r1, r0
	cmp	r1, r4
	beq	.LCB3039
	b	.L370	@long jump
.LCB3039:
	bl	ResetBlockReceivedFlags
	mov	r5, #0x0
	cmp	r8, r9
	bge	.L376	@cond_branch
	lsl	r0, r7, #0x3
	sub	r0, r0, r7
	lsl	r6, r0, #0x2
	mov	r8, r5
	ldr	r4, .L403
.L378:
	cmp	r5, r7
	beq	.L377	@cond_branch
	mov	r2, r9
	cmp	r2, #0x4
	bne	.L380	@cond_branch
	ldr	r2, .L403+0x4
	mov	r1, r8
	add	r0, r1, r2
	ldrh	r1, [r0, #0x18]
	mov	r3, #0x1
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L398	@cond_branch
	add	r0, r6, r2
	ldrh	r1, [r0, #0x18]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L382	@cond_branch
	b	.L377
.L404:
	.align	2, 0
.L403:
	.word	gBlockRecvBuffer
	.word	gLinkPlayers
.L398:
	add	r0, r6, r2
	ldrh	r1, [r0, #0x18]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L377	@cond_branch
.L382:
	ldr	r0, .L405
	add	r1, r4, #0
	mov	r2, #0x60
	bl	memcpy
	b	.L377
.L406:
	.align	2, 0
.L405:
	.word	gMultiPartnerParty
.L380:
	ldr	r0, .L407
	add	r1, r4, #0
	mov	r2, #0x60
	bl	memcpy
.L377:
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r4, r4, r2
	mov	r0, #0x1c
	add	r8, r8, r0
	add	r5, r5, #0x1
	cmp	r5, r9
	blt	.L378	@cond_branch
.L376:
	ldr	r1, .L407+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L407+0x8
	ldr	r0, [r1, #0x8]
	ldr	r2, [sp]
	str	r0, [r2]
	ldr	r0, .L407+0xc
	ldr	r0, [r0]
	mov	r2, sl
	str	r0, [r2]
	ldr	r0, .L407+0x10
	str	r0, [r1, #0x8]
	bl	ShowPartyMenuToShowcaseMultiBattleParty
	b	.L370
.L408:
	.align	2, 0
.L407:
	.word	gMultiPartnerParty
	.word	gBattleCommunication
	.word	gMain
	.word	gBattleTypeFlags
	.word	CB2_PreInitMultiBattle
.L386:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L370	@cond_branch
	ldr	r0, .L409
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L370	@cond_branch
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	ldr	r0, .L409+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L388	@cond_branch
	bl	SetLinkStandbyCallback
	b	.L370
.L410:
	.align	2, 0
.L409:
	.word	gPaletteFade
	.word	gWirelessCommType
.L388:
	bl	SetCloseLinkCallback
	b	.L370
.L390:
	ldr	r0, .L411
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L391	@cond_branch
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L370	@cond_branch
	mov	r1, sl
	ldr	r0, [r1]
	str	r0, [r6]
	ldr	r1, .L411+0x4
	ldr	r2, [sp]
	ldr	r0, [r2]
	str	r0, [r1, #0x8]
	ldr	r0, .L411+0x8
	bl	SetMainCallback2
	ldr	r4, .L411+0xc
	ldr	r0, [r4]
	bl	Free
	mov	r0, r8
	str	r0, [r4]
	b	.L370
.L412:
	.align	2, 0
.L411:
	.word	gWirelessCommType
	.word	gMain
	.word	CB2_InitBattleInternal
	.word	sMultiPartnerPartyBuffer
.L391:
	ldr	r0, .L413
	ldrb	r5, [r0]
	cmp	r5, #0
	bne	.L370	@cond_branch
	mov	r1, sl
	ldr	r0, [r1]
	str	r0, [r6]
	ldr	r1, .L413+0x4
	ldr	r2, [sp]
	ldr	r0, [r2]
	str	r0, [r1, #0x8]
	ldr	r0, .L413+0x8
	bl	SetMainCallback2
	ldr	r4, .L413+0xc
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
.L370:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L414:
	.align	2, 0
.L413:
	.word	gReceivedRemoteLinkPlayers
	.word	gMain
	.word	CB2_InitBattleInternal
	.word	sMultiPartnerPartyBuffer
.Lfe10:
	.size	 CB2_PreInitMultiBattle,.Lfe10-CB2_PreInitMultiBattle
	.align	2, 0
	.type	 CB2_PreInitIngamePlayerPartnerBattle,function
	.thumb_func
CB2_PreInitIngamePlayerPartnerBattle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L422
	ldr	r0, [r0]
	mov	r1, #0xac
	add	r1, r1, r0
	mov	r8, r1
	add	r7, r0, #0
	add	r7, r7, #0xa0
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	ldr	r5, .L422+0x4
	ldrb	r0, [r5]
	cmp	r0, #0
	beq	.L417	@cond_branch
	cmp	r0, #0x1
	beq	.L418	@cond_branch
	b	.L416
.L423:
	.align	2, 0
.L422:
	.word	gBattleStruct
	.word	gBattleCommunication
.L417:
	ldr	r4, .L424
	mov	r0, #0x60
	bl	Alloc
	str	r0, [r4]
	mov	r0, #0x3
	bl	sub_80379F8
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	ldr	r1, .L424+0x4
	ldr	r0, [r1, #0x8]
	mov	r2, r8
	str	r0, [r2]
	ldr	r0, .L424+0x8
	ldr	r0, [r0]
	str	r0, [r7]
	ldr	r0, .L424+0xc
	str	r0, [r1, #0x8]
	bl	ShowPartyMenuToShowcaseMultiBattleParty
	b	.L416
.L425:
	.align	2, 0
.L424:
	.word	sMultiPartnerPartyBuffer
	.word	gMain
	.word	gBattleTypeFlags
	.word	CB2_PreInitIngamePlayerPartnerBattle
.L418:
	ldr	r0, .L426
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	bne	.L416	@cond_branch
	mov	r0, #0x2
	strb	r0, [r5]
	ldr	r1, .L426+0x4
	ldr	r0, [r7]
	str	r0, [r1]
	ldr	r1, .L426+0x8
	mov	r2, r8
	ldr	r0, [r2]
	str	r0, [r1, #0x8]
	ldr	r0, .L426+0xc
	bl	SetMainCallback2
	ldr	r4, .L426+0x10
	ldr	r0, [r4]
	bl	Free
	str	r6, [r4]
.L416:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L427:
	.align	2, 0
.L426:
	.word	gPaletteFade
	.word	gBattleTypeFlags
	.word	gMain
	.word	CB2_InitBattleInternal
	.word	sMultiPartnerPartyBuffer
.Lfe11:
	.size	 CB2_PreInitIngamePlayerPartnerBattle,.Lfe11-CB2_PreInitIngamePlayerPartnerBattle
	.align	2, 0
	.type	 CB2_HandleStartMultiBattle,function
	.thumb_func
CB2_HandleStartMultiBattle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L566
	add	r0, r0, #0x25
	strb	r7, [r0]
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	ldr	r0, .L566+0x4
	ldrb	r0, [r0]
	cmp	r0, #0xa
	bls	.LCB3416
	b	.L429	@long jump
.LCB3416:
	lsl	r0, r0, #0x2
	ldr	r1, .L566+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L567:
	.align	2, 0
.L566:
	.word	gBattleScripting
	.word	gBattleCommunication
	.word	.L558
	.align	2, 0
	.align	2, 0
.L558:
	.word	.L430
	.word	.L433
	.word	.L440
	.word	.L456
	.word	.L458
	.word	.L495
	.word	.L497
	.word	.L534
	.word	.L545
	.word	.L547
	.word	.L555
.L430:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L431	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	bl	sub_805EF14
	ldr	r1, .L568
	mov	r0, #0x1
	strb	r0, [r1]
.L431:
	ldr	r0, .L568+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB3462
	b	.L429	@long jump
.LCB3462:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	b	.L429
.L569:
	.align	2, 0
.L568:
	.word	gBattleCommunication
	.word	gWirelessCommType
.L433:
	ldr	r2, .L570
	ldr	r1, [r2]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L434	@cond_branch
	ldr	r0, .L570+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB3486
	b	.L429	@long jump
.LCB3486:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L436	@cond_branch
	ldr	r4, .L570+0x8
	ldr	r0, [r4]
	mov	r5, #0xbd
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r2, .L570+0xc
	add	r1, r0, r2
	mov	r0, #0x3
	strb	r0, [r1]
	bl	sub_8036A5C
	bl	SetPlayerBerryDataInBattleStruct
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, r5
	mov	r2, #0x20
	bl	SendBlock
	ldr	r1, .L570+0x10
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L436:
	ldr	r0, .L570+0x14
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB3530
	b	.L429	@long jump
.LCB3530:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L429
.L571:
	.align	2, 0
.L570:
	.word	gBattleTypeFlags
	.word	gReceivedRemoteLinkPlayers
	.word	gBattleStruct
	.word	0x17b
	.word	gBattleCommunication
	.word	gWirelessCommType
.L434:
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L439	@cond_branch
	mov	r0, #0x4
	orr	r1, r1, r0
	str	r1, [r2]
.L439:
	ldr	r1, .L572
	mov	r0, #0x7
	strb	r0, [r1]
	bl	SetAllPlayersBerryData
	b	.L429
.L573:
	.align	2, 0
.L572:
	.word	gBattleCommunication
.L440:
	bl	GetBlockReceivedStatus
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0xf
	beq	.LCB3578
	b	.L429	@long jump
.LCB3578:
	bl	ResetBlockReceivedFlags
	mov	r0, #0x4
	add	r1, r7, #0
	bl	sub_8036EB8
	bl	SetAllPlayersBerryData
	ldr	r0, .L574
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L574+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x0
	mov	r1, #0x87
	lsl	r1, r1, #0x1
	strh	r1, [r0, #0xa]
	mov	r1, #0x5a
	strh	r1, [r0, #0xc]
	strh	r2, [r0, #0x12]
	strh	r2, [r0, #0xe]
	strh	r2, [r0, #0x10]
	ldr	r1, .L574+0x8
	add	r4, r0, #0
	add	r5, r1, #0x2
	mov	r7, #0x3f
	mov	r6, #0x3
.L445:
	ldrh	r0, [r5]
	str	r2, [sp]
	bl	sub_8185F90
	ldr	r0, .L574+0xc
	ldr	r2, [sp]
	add	r0, r2, r0
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x1
	beq	.L448	@cond_branch
	cmp	r0, #0x1
	bgt	.L453	@cond_branch
	cmp	r0, #0
	beq	.L447	@cond_branch
	b	.L444
.L575:
	.align	2, 0
.L574:
	.word	InitLinkBattleVsScreen
	.word	gTasks
	.word	gBlockRecvBuffer
	.word	gLinkPlayers
.L453:
	cmp	r0, #0x2
	beq	.L449	@cond_branch
	cmp	r0, #0x3
	beq	.L450	@cond_branch
	b	.L444
.L447:
	ldrh	r0, [r5]
	add	r1, r7, #0
	and	r1, r1, r0
	b	.L562
.L448:
	ldrh	r0, [r5]
	add	r1, r7, #0
	and	r1, r1, r0
	b	.L563
.L449:
	ldrh	r0, [r5]
	add	r1, r7, #0
	and	r1, r1, r0
	lsl	r1, r1, #0x6
.L562:
	ldrh	r0, [r4, #0xe]
	orr	r1, r1, r0
	strh	r1, [r4, #0xe]
	b	.L444
.L450:
	ldrh	r0, [r5]
	add	r1, r7, #0
	and	r1, r1, r0
	lsl	r1, r1, #0x6
.L563:
	ldrh	r0, [r4, #0x10]
	orr	r1, r1, r0
	strh	r1, [r4, #0x10]
.L444:
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r5, r5, r0
	add	r2, r2, #0x1c
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L445	@cond_branch
	bl	ZeroEnemyPartyMons
	ldr	r1, .L576
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L456:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3713
	b	.L429	@long jump
.LCB3713:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L576+0x4
	mov	r2, #0xc8
	bl	SendBlock
	b	.L550
.L577:
	.align	2, 0
.L576:
	.word	gBattleCommunication
	.word	gPlayerParty
.L458:
	bl	GetBlockReceivedStatus
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0xf
	beq	.LCB3741
	b	.L429	@long jump
.LCB3741:
	bl	ResetBlockReceivedFlags
	mov	r6, #0x0
	lsl	r0, r7, #0x3
	sub	r0, r0, r7
	lsl	r0, r0, #0x2
	mov	r8, r0
	ldr	r4, .L578
	mov	r5, #0x0
.L463:
	cmp	r6, r7
	bne	.L464	@cond_branch
	ldr	r0, .L578+0x4
	add	r0, r5, r0
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bgt	.L472	@cond_branch
	cmp	r0, #0x1
	bge	.L469	@cond_branch
	cmp	r0, #0
	beq	.L467	@cond_branch
	b	.L462
.L579:
	.align	2, 0
.L578:
	.word	gBlockRecvBuffer
	.word	gLinkPlayers
.L472:
	cmp	r0, #0x3
	bne	.L462	@cond_branch
.L467:
	ldr	r0, .L580
	b	.L564
.L581:
	.align	2, 0
.L580:
	.word	gPlayerParty
.L469:
	ldr	r0, .L582
	b	.L564
.L583:
	.align	2, 0
.L582:
	.word	gPlayerParty+0x12c
.L464:
	ldr	r2, .L584
	add	r0, r5, r2
	ldrh	r1, [r0, #0x18]
	mov	r3, #0x1
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L560	@cond_branch
	mov	r1, r8
	add	r0, r1, r2
	ldrh	r1, [r0, #0x18]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L475	@cond_branch
	b	.L474
.L585:
	.align	2, 0
.L584:
	.word	gLinkPlayers
.L560:
	mov	r1, r8
	add	r0, r1, r2
	ldrh	r1, [r0, #0x18]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L474	@cond_branch
.L475:
	add	r0, r5, r2
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bgt	.L484	@cond_branch
	cmp	r0, #0x1
	bge	.L481	@cond_branch
	cmp	r0, #0
	beq	.L479	@cond_branch
	b	.L462
.L484:
	cmp	r0, #0x3
	bne	.L462	@cond_branch
.L479:
	ldr	r0, .L586
	b	.L564
.L587:
	.align	2, 0
.L586:
	.word	gPlayerParty
.L481:
	ldr	r0, .L588
	b	.L564
.L589:
	.align	2, 0
.L588:
	.word	gPlayerParty+0x12c
.L474:
	add	r0, r5, r2
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bgt	.L493	@cond_branch
	cmp	r0, #0x1
	bge	.L490	@cond_branch
	cmp	r0, #0
	beq	.L488	@cond_branch
	b	.L462
.L493:
	cmp	r0, #0x3
	bne	.L462	@cond_branch
.L488:
	ldr	r0, .L590
.L564:
	add	r1, r4, #0
	mov	r2, #0xc8
	bl	memcpy
	b	.L462
.L591:
	.align	2, 0
.L590:
	.word	gEnemyParty
.L490:
	ldr	r0, .L592
	add	r1, r4, #0
	mov	r2, #0xc8
	bl	memcpy
.L462:
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r4, r4, r2
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L463	@cond_branch
	b	.L550
.L593:
	.align	2, 0
.L592:
	.word	gEnemyParty+0x12c
.L495:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3964
	b	.L429	@long jump
.LCB3964:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L594
	mov	r2, #0x64
	bl	SendBlock
	b	.L550
.L595:
	.align	2, 0
.L594:
	.word	gPlayerParty+0xc8
.L497:
	bl	GetBlockReceivedStatus
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0xf
	beq	.LCB3991
	b	.L429	@long jump
.LCB3991:
	bl	ResetBlockReceivedFlags
	mov	r6, #0x0
	lsl	r0, r7, #0x3
	sub	r0, r0, r7
	lsl	r0, r0, #0x2
	mov	r8, r0
	ldr	r4, .L596
	mov	r5, #0x0
.L502:
	cmp	r6, r7
	bne	.L503	@cond_branch
	ldr	r0, .L596+0x4
	add	r0, r5, r0
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bgt	.L511	@cond_branch
	cmp	r0, #0x1
	bge	.L508	@cond_branch
	cmp	r0, #0
	beq	.L506	@cond_branch
	b	.L501
.L597:
	.align	2, 0
.L596:
	.word	gBlockRecvBuffer
	.word	gLinkPlayers
.L511:
	cmp	r0, #0x3
	bne	.L501	@cond_branch
.L506:
	ldr	r0, .L598
	b	.L565
.L599:
	.align	2, 0
.L598:
	.word	gPlayerParty+0xc8
.L508:
	ldr	r0, .L600
	b	.L565
.L601:
	.align	2, 0
.L600:
	.word	gPlayerParty+0x1f4
.L503:
	ldr	r2, .L602
	add	r0, r5, r2
	ldrh	r1, [r0, #0x18]
	mov	r3, #0x1
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L561	@cond_branch
	mov	r1, r8
	add	r0, r1, r2
	ldrh	r1, [r0, #0x18]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L514	@cond_branch
	b	.L513
.L603:
	.align	2, 0
.L602:
	.word	gLinkPlayers
.L561:
	mov	r1, r8
	add	r0, r1, r2
	ldrh	r1, [r0, #0x18]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L513	@cond_branch
.L514:
	add	r0, r5, r2
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bgt	.L523	@cond_branch
	cmp	r0, #0x1
	bge	.L520	@cond_branch
	cmp	r0, #0
	beq	.L518	@cond_branch
	b	.L501
.L523:
	cmp	r0, #0x3
	bne	.L501	@cond_branch
.L518:
	ldr	r0, .L604
	b	.L565
.L605:
	.align	2, 0
.L604:
	.word	gPlayerParty+0xc8
.L520:
	ldr	r0, .L606
	b	.L565
.L607:
	.align	2, 0
.L606:
	.word	gPlayerParty+0x1f4
.L513:
	add	r0, r5, r2
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bgt	.L532	@cond_branch
	cmp	r0, #0x1
	bge	.L529	@cond_branch
	cmp	r0, #0
	beq	.L527	@cond_branch
	b	.L501
.L532:
	cmp	r0, #0x3
	bne	.L501	@cond_branch
.L527:
	ldr	r0, .L608
.L565:
	add	r1, r4, #0
	mov	r2, #0x64
	bl	memcpy
	b	.L501
.L609:
	.align	2, 0
.L608:
	.word	gEnemyParty+0xc8
.L529:
	ldr	r0, .L610
	add	r1, r4, #0
	mov	r2, #0x64
	bl	memcpy
.L501:
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r4, r4, r2
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L502	@cond_branch
	ldr	r4, .L610+0x4
	add	r0, r4, #0
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0x64
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0xc8
	bl	TryCorrectShedinjaLanguage
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	TryCorrectShedinjaLanguage
	mov	r2, #0xc8
	lsl	r2, r2, #0x1
	add	r0, r4, r2
	bl	TryCorrectShedinjaLanguage
	mov	r1, #0xfa
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	TryCorrectShedinjaLanguage
	ldr	r4, .L610+0x8
	add	r0, r4, #0
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0x64
	bl	TryCorrectShedinjaLanguage
	add	r0, r4, #0
	add	r0, r0, #0xc8
	bl	TryCorrectShedinjaLanguage
	mov	r2, #0x96
	lsl	r2, r2, #0x1
	add	r0, r4, r2
	bl	TryCorrectShedinjaLanguage
	mov	r1, #0xc8
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	TryCorrectShedinjaLanguage
	mov	r2, #0xfa
	lsl	r2, r2, #0x1
	add	r0, r4, r2
	bl	TryCorrectShedinjaLanguage
	b	.L550
.L611:
	.align	2, 0
.L610:
	.word	gEnemyParty+0x1f4
	.word	gPlayerParty
	.word	gEnemyParty
.L534:
	bl	sub_8032768
	bl	sub_8184E58
	ldr	r3, .L612
	mov	r0, #0x0
	strb	r0, [r3, #0x1]
	strb	r0, [r3, #0x2]
	ldr	r0, .L612+0x4
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L535	@cond_branch
	mov	r6, #0x0
	ldr	r0, .L612+0x8
	ldrb	r1, [r0]
	add	r4, r3, #0
	add	r2, r0, #0
	cmp	r1, #0x3
	bne	.L537	@cond_branch
	mov	r3, #0xff
.L538:
	add	r2, r2, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	bgt	.L537	@cond_branch
	ldrh	r1, [r2]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0x3
	beq	.L538	@cond_branch
.L537:
	cmp	r6, #0x4
	bne	.L542	@cond_branch
	mov	r0, #0x8
	strb	r0, [r4]
	b	.L429
.L613:
	.align	2, 0
.L612:
	.word	gBattleCommunication
	.word	gBattleTypeFlags
	.word	gLinkPlayers
.L542:
	mov	r0, #0xa
	strb	r0, [r4]
	b	.L429
.L535:
	mov	r0, #0xa
	strb	r0, [r3]
	b	.L429
.L545:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L429	@cond_branch
	ldr	r0, .L614
	ldr	r4, [r0]
	mov	r0, #0xbd
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	ldr	r0, .L614+0x4
	ldr	r0, [r0]
	str	r0, [r4]
	ldr	r0, .L614+0x8
	ldr	r0, [r0]
	str	r0, [r4, #0x4]
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	mov	r2, #0x8
	bl	SendBlock
	b	.L550
.L615:
	.align	2, 0
.L614:
	.word	gBattleStruct
	.word	gBattleTypeFlags
	.word	gRecordedBattleRngSeed
.L547:
	bl	GetBlockReceivedStatus
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0xf
	bne	.L429	@cond_branch
	bl	ResetBlockReceivedFlags
	mov	r2, #0x0
	b	.L549
.L551:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L549:
	cmp	r2, #0x3
	bhi	.L550	@cond_branch
	ldr	r4, .L616
	lsl	r3, r2, #0x8
	add	r0, r3, r4
	ldrh	r0, [r0]
	mov	r1, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L551	@cond_branch
	add	r1, r4, #0x4
	add	r1, r3, r1
	ldr	r0, .L616+0x4
	mov	r2, #0x4
	bl	memcpy
.L550:
	ldr	r1, .L616+0x8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L429
.L617:
	.align	2, 0
.L616:
	.word	gBlockRecvBuffer
	.word	gRecordedBattleRngSeed
	.word	gBattleCommunication
.L555:
	ldr	r0, .L618
	add	r1, r0, #0x1
	bl	BattleInitAllSprites
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L429	@cond_branch
	ldr	r2, .L618+0x4
	ldr	r1, .L618+0x8
	ldr	r0, [r1]
	str	r0, [r2]
	ldr	r0, .L618+0xc
	str	r0, [r1]
	ldr	r0, .L618+0x10
	bl	SetMainCallback2
	ldr	r3, .L618+0x14
	ldr	r2, [r3]
	mov	r0, #0x2
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L429	@cond_branch
	ldr	r0, .L618+0x18
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r1, r4, #0
	strh	r1, [r0]
	mov	r0, #0x20
	orr	r2, r2, r0
	str	r2, [r3]
.L429:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L619:
	.align	2, 0
.L618:
	.word	gBattleCommunication+0x1
	.word	gPreBattleCallback1
	.word	gMain
	.word	BattleMainCB1
	.word	BattleMainCB2
	.word	gBattleTypeFlags
	.word	gTrainerBattleOpponent_A
.Lfe12:
	.size	 CB2_HandleStartMultiBattle,.Lfe12-CB2_HandleStartMultiBattle
	.align	2, 0
	.globl	BattleMainCB2
	.type	 BattleMainCB2,function
	.thumb_func
BattleMainCB2:
	push	{lr}
	add	sp, sp, #-0x4
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	bl	RunTasks
	ldr	r0, .L622
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L621	@cond_branch
	ldr	r0, .L622+0x4
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L621	@cond_branch
	bl	sub_8186450
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L621	@cond_branch
	ldr	r2, .L622+0x8
	ldr	r1, .L622+0xc
	mov	r0, #0x5
	strb	r0, [r1]
	mov	r0, #0x5
	strh	r0, [r2]
	bl	ResetPaletteFadeControl
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L622+0x10
	bl	SetMainCallback2
.L621:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L623:
	.align	2, 0
.L622:
	.word	gMain
	.word	gBattleTypeFlags
	.word	gSpecialVar_Result
	.word	gBattleOutcome
	.word	CB2_QuitRecordedBattle
.Lfe13:
	.size	 BattleMainCB2,.Lfe13-BattleMainCB2
	.align	2, 0
	.type	 FreeRestoreBattleData,function
	.thumb_func
FreeRestoreBattleData:
	push	{lr}
	ldr	r1, .L625
	ldr	r0, .L625+0x4
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r2, .L625+0x8
	mov	r0, #0x3
	strb	r0, [r2, #0x15]
	ldr	r0, .L625+0xc
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	bl	ZeroEnemyPartyMons
	mov	r0, #0x5a
	bl	m4aSongNumStop
	bl	FreeMonSpritesGfx
	bl	FreeBattleSpritesData
	bl	FreeBattleResources
	pop	{r0}
	bx	r0
.L626:
	.align	2, 0
.L625:
	.word	gMain
	.word	gPreBattleCallback1
	.word	gScanlineEffect
	.word	0x439
.Lfe14:
	.size	 FreeRestoreBattleData,.Lfe14-FreeRestoreBattleData
	.align	2, 0
	.globl	CB2_QuitRecordedBattle
	.type	 CB2_QuitRecordedBattle,function
	.thumb_func
CB2_QuitRecordedBattle:
	push	{lr}
	bl	UpdatePaletteFade
	ldr	r0, .L629
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L628	@cond_branch
	ldr	r0, .L629+0x4
	bl	m4aMPlayStop
	ldr	r0, .L629+0x8
	bl	m4aMPlayStop
	bl	FreeRestoreBattleData
	bl	FreeAllWindowBuffers
	ldr	r0, .L629+0xc
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
.L628:
	pop	{r0}
	bx	r0
.L630:
	.align	2, 0
.L629:
	.word	gPaletteFade
	.word	gMPlayInfo_SE1
	.word	gMPlayInfo_SE2
	.word	gMain
.Lfe15:
	.size	 CB2_QuitRecordedBattle,.Lfe15-CB2_QuitRecordedBattle
	.align	2, 0
	.globl	sub_8038528
	.type	 sub_8038528,function
	.thumb_func
sub_8038528:
	mov	r1, #0x0
	strh	r1, [r0, #0x2e]
	ldr	r1, .L632
	str	r1, [r0, #0x1c]
	bx	lr
.L633:
	.align	2, 0
.L632:
	.word	sub_8038538
.Lfe16:
	.size	 sub_8038528,.Lfe16-sub_8038528
	.align	2, 0
	.type	 sub_8038538,function
	.thumb_func
sub_8038538:
	push	{r4, r5, lr}
	add	r3, r0, #0
	ldr	r5, .L650
	mov	r0, #0x2e
	ldrsh	r1, [r3, r0]
	cmp	r1, #0x1
	beq	.L637	@cond_branch
	cmp	r1, #0x1
	bgt	.L649	@cond_branch
	cmp	r1, #0
	beq	.L636	@cond_branch
	b	.L635
.L651:
	.align	2, 0
.L650:
	.word	gDecompressionBuffer
.L649:
	cmp	r1, #0x2
	beq	.L645	@cond_branch
	b	.L635
.L636:
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	strh	r1, [r3, #0x30]
	ldr	r0, .L652
	strh	r0, [r3, #0x32]
	strh	r1, [r3, #0x34]
	mov	r0, #0x1
	strh	r0, [r3, #0x36]
.L637:
	ldrh	r0, [r3, #0x36]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x36]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L635	@cond_branch
	mov	r0, #0x2
	strh	r0, [r3, #0x36]
	mov	r4, #0x30
	ldrsh	r2, [r3, r4]
	mov	r0, #0x34
	ldrsh	r1, [r3, r0]
	lsl	r1, r1, #0x5
	add	r2, r2, r1
	mov	r4, #0x32
	ldrsh	r0, [r3, r4]
	sub	r0, r0, r1
	mov	r4, #0x3d
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	lsl	r2, r2, #0x1
	add	r2, r2, r5
	mov	r1, #0x1c
.L642:
	strh	r4, [r2]
	strh	r4, [r0]
	add	r0, r0, #0x4
	add	r2, r2, #0x4
	sub	r1, r1, #0x2
	cmp	r1, #0
	bge	.L642	@cond_branch
	ldrh	r0, [r3, #0x34]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x34]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x15
	bne	.L635	@cond_branch
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	mov	r0, #0x20
	strh	r0, [r3, #0x30]
	b	.L635
.L653:
	.align	2, 0
.L652:
	.word	0x281
.L645:
	ldrh	r0, [r3, #0x30]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	bne	.L635	@cond_branch
	ldr	r0, .L654
	bl	SetMainCallback2
.L635:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L655:
	.align	2, 0
.L654:
	.word	CB2_InitBattle
.Lfe17:
	.size	 sub_8038538,.Lfe17-sub_8038538
	.section .rodata
.LC215:
	.byte	0x5
	.byte	0x5
	.byte	0x5
	.byte	0x5
	.byte	0x5
	.byte	0x5
.text
	.align	2, 0
	.type	 CreateNPCTrainerParty,function
	.thumb_func
CreateNPCTrainerParty:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x48
	str	r0, [sp, #0x1c]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp, #0x20]
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	mov	r0, #0x0
	str	r0, [sp, #0x24]
	bl	GetNumBadges
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r4, r4, #0x3
	add	r1, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	bl	getTrainerPokemonNum
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	bl	getDoubleTrainerPokemonNum
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	getLeaderPokemonNum
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x2c]
	mov	r0, #0x0
	bl	getTrainerLevel
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x2
	bl	getTrainerLevel
	mov	r0, #0x5
	bl	getTrainerLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x30]
	ldr	r1, .L766
	add	r0, sp, #0x14
	mov	r2, #0x6
	bl	memcpy
	bl	GetNumBadges
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x34]
	ldr	r0, .L766+0x4
	cmp	r0, #0
	bne	.L657	@cond_branch
	mov	r1, #0x0
	str	r1, [sp, #0x34]
.L657:
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	ldr	r2, [sp, #0x20]
	cmp	r2, r0
	bne	.L658	@cond_branch
	mov	r0, #0x0
	b	.L760
.L767:
	.align	2, 0
.L766:
	.word	.LC215
	.word	IsHardMode
.L658:
	ldr	r4, .L768
	ldr	r0, [r4]
	ldr	r1, .L768+0x4
	and	r0, r0, r1
	ldr	r3, [sp, #0x20]
	lsl	r3, r3, #0x2
	str	r3, [sp, #0x38]
	cmp	r0, #0x8
	beq	.LCB4903
	b	.L659	@long jump
.LCB4903:
	cmp	r7, #0x1
	bne	.L660	@cond_branch
	bl	ZeroEnemyPartyMons
.L660:
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L661	@cond_branch
	ldr	r0, .L768+0x8
	ldr	r4, [sp, #0x38]
	ldr	r2, [sp, #0x20]
	add	r1, r4, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	add	r2, r1, #0
	add	r2, r2, #0x20
	ldrb	r1, [r2]
	str	r6, [sp, #0x28]
	add	r4, r0, #0
	cmp	r1, r6
	bhi	.L663	@cond_branch
	add	r2, r1, #0
	str	r2, [sp, #0x28]
.L663:
	mov	r7, #0x0
	ldr	r3, [sp, #0x28]
	cmp	r7, r3
	bgt	.L669	@cond_branch
	mov	r6, r8
	add	r2, r5, r6
.L667:
	mov	r1, sp
	add	r1, r1, r7
	add	r1, r1, #0x14
	add	r0, r2, r7
	strb	r0, [r1]
	add	r7, r7, #0x1
	ldr	r0, [sp, #0x28]
	cmp	r7, r0
	ble	.L667	@cond_branch
	b	.L669
.L769:
	.align	2, 0
.L768:
	.word	gBattleTypeFlags
	.word	0x43f0908
	.word	gTrainers
.L661:
	ldr	r1, .L770
	ldr	r2, [sp, #0x38]
	ldr	r3, [sp, #0x20]
	add	r0, r2, r3
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r2, [r0, #0x1]
	add	r4, r1, #0
	cmp	r2, #0x32
	beq	.L670	@cond_branch
	cmp	r2, #0x1f
	beq	.L670	@cond_branch
	cmp	r2, #0x26
	beq	.L670	@cond_branch
	cmp	r2, #0x20
	beq	.L670	@cond_branch
	add	r1, r0, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	mov	r6, r9
	str	r6, [sp, #0x28]
	cmp	r0, r6
	bhi	.L672	@cond_branch
	add	r1, r0, #0
	str	r1, [sp, #0x28]
.L672:
	mov	r7, #0x0
	ldr	r0, [sp, #0x28]
	cmp	r7, r0
	bgt	.L669	@cond_branch
	mov	r1, r8
	add	r2, r5, r1
.L676:
	mov	r1, sp
	add	r1, r1, r7
	add	r1, r1, #0x14
	add	r0, r2, r7
	strb	r0, [r1]
	add	r7, r7, #0x1
	ldr	r3, [sp, #0x28]
	cmp	r7, r3
	ble	.L676	@cond_branch
	b	.L669
.L771:
	.align	2, 0
.L770:
	.word	gTrainers
.L670:
	ldr	r6, [sp, #0x2c]
	str	r6, [sp, #0x28]
	mov	r7, #0x0
	cmp	r7, r6
	bgt	.L669	@cond_branch
.L682:
	mov	r1, sp
	add	r1, r1, r7
	add	r1, r1, #0x14
	ldr	r2, [sp, #0x30]
	add	r0, r2, r7
	strb	r0, [r1]
	add	r7, r7, #0x1
	ldr	r3, [sp, #0x28]
	cmp	r7, r3
	ble	.L682	@cond_branch
.L669:
	mov	r7, #0x0
	b	.L761
.L687:
	ldr	r1, [sp, #0x38]
	ldr	r2, [sp, #0x20]
	add	r0, r1, r2
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrb	r0, [r1, #0x18]
	cmp	r0, #0x1
	bne	.L688	@cond_branch
	mov	r3, #0x80
	mov	sl, r3
	b	.L689
.L688:
	ldrb	r1, [r1, #0x2]
	mov	r0, #0x80
	and	r0, r0, r1
	mov	r6, #0x88
	mov	sl, r6
	cmp	r0, #0
	beq	.L689	@cond_branch
	mov	r0, #0x78
	mov	sl, r0
.L689:
	mov	r5, #0x0
	ldr	r2, [sp, #0x38]
	ldr	r1, [sp, #0x20]
	add	r0, r2, r1
	lsl	r0, r0, #0x3
	add	r1, r4, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r3, r7, #0x1
	str	r3, [sp, #0x3c]
	cmp	r0, #0xff
	beq	.L693	@cond_branch
	add	r3, r1, #0
.L695:
	ldr	r6, [sp, #0x20]
	add	r1, r2, r6
	lsl	r1, r1, #0x3
	add	r0, r5, r1
	add	r0, r0, r3
	ldrb	r0, [r0]
	ldr	r6, [sp, #0x24]
	add	r6, r6, r0
	str	r6, [sp, #0x24]
	add	r5, r5, #0x1
	add	r1, r5, r1
	add	r1, r1, r3
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L695	@cond_branch
.L693:
	ldr	r1, [sp, #0x38]
	ldr	r2, [sp, #0x20]
	add	r0, r1, r2
	lsl	r1, r0, #0x3
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L704	@cond_branch
	cmp	r0, #0x1
	bgt	.L758	@cond_branch
	cmp	r0, #0
	beq	.L698	@cond_branch
	b	.L686
.L758:
	cmp	r0, #0x2
	bne	.LCB5153
	b	.L720	@long jump
.LCB5153:
	cmp	r0, #0x3
	bne	.LCB5155
	b	.L727	@long jump
.LCB5155:
	b	.L686
.L698:
	add	r0, r4, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r4, [r0]
	mov	r5, #0x0
	lsl	r2, r7, #0x3
	add	r0, r2, r4
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r3, .L772
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r6, sp
	add	r6, r6, r7
	add	r6, r6, #0x14
	mov	r8, r2
	cmp	r0, #0xff
	beq	.L700	@cond_branch
	mov	r0, #0xb
	mov	r9, r0
.L702:
	add	r0, r2, r4
	ldrh	r0, [r0, #0x4]
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r5, r1
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	ip, r0
	ldr	r0, [sp, #0x24]
	add	r0, r0, ip
	str	r0, [sp, #0x24]
	add	r5, r5, #0x1
	add	r1, r5, r1
	add	r1, r1, r3
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L702	@cond_branch
.L700:
	ldr	r1, [sp, #0x24]
	lsl	r0, r1, #0x8
	add	sl, sl, r0
	add	r4, r4, r8
	ldrh	r1, [r4]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	mov	r1, #0xff
	bl	__divsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldrh	r0, [r4, #0x4]
	ldrb	r1, [r6]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x64
	mov	r0, r7
	mul	r0, r0, r2
	ldr	r3, [sp, #0x1c]
	add	r0, r3, r0
	ldrb	r2, [r6]
	mov	r6, #0x1
	str	r6, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r6, #0x2
	str	r6, [sp, #0x8]
	mov	r3, #0x0
	str	r3, [sp, #0xc]
	ldrb	r3, [r4, #0x6]
	str	r3, [sp, #0x10]
	mov	r3, r8
	bl	CreateMon
	b	.L686
.L773:
	.align	2, 0
.L772:
	.word	gSpeciesNames
.L704:
	add	r0, r4, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r0, [r0]
	mov	r9, r0
	mov	r5, #0x0
	lsl	r2, r7, #0x4
	add	r0, r2, r0
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r4, .L774
	add	r0, r0, r4
	ldrb	r0, [r0]
	str	r2, [sp, #0x44]
	cmp	r0, #0xff
	beq	.L706	@cond_branch
	add	r3, r4, #0
	mov	r4, #0xb
.L708:
	mov	r6, r9
	add	r0, r2, r6
	ldrh	r0, [r0, #0x4]
	mov	r1, r0
	mul	r1, r1, r4
	add	r0, r5, r1
	add	r0, r0, r3
	ldrb	r0, [r0]
	ldr	r6, [sp, #0x24]
	add	r6, r6, r0
	str	r6, [sp, #0x24]
	add	r5, r5, #0x1
	add	r1, r5, r1
	add	r1, r1, r3
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L708	@cond_branch
.L706:
	ldr	r1, [sp, #0x24]
	lsl	r0, r1, #0x8
	add	sl, sl, r0
	ldr	r6, [sp, #0x44]
	add	r6, r6, r9
	ldrh	r1, [r6]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	mov	r1, #0xff
	bl	__divsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r2, r9
	ldrb	r5, [r2, #0x2]
	cmp	r5, #0x1
	bne	.L710	@cond_branch
	ldrh	r0, [r6, #0x4]
	mov	r4, sp
	add	r4, r4, r7
	add	r4, r4, #0x14
	ldrb	r1, [r4]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r3, #0x64
	mov	r0, r7
	mul	r0, r0, r3
	ldr	r2, [sp, #0x1c]
	add	r0, r2, r0
	ldrb	r2, [r4]
	str	r5, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r4, #0x2
	str	r4, [sp, #0x8]
	mov	r3, #0x0
	str	r3, [sp, #0xc]
	ldrb	r3, [r6, #0x6]
	str	r3, [sp, #0x10]
	b	.L762
.L775:
	.align	2, 0
.L774:
	.word	gSpeciesNames
.L710:
	cmp	r5, #0x3
	bne	.L712	@cond_branch
	ldrh	r0, [r6, #0x4]
	mov	r1, sp
	add	r1, r1, r7
	add	r1, r1, #0x14
	ldrb	r1, [r1]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r4, #0x64
	mov	r0, r7
	mul	r0, r0, r4
	ldr	r2, [sp, #0x1c]
	add	r0, r2, r0
	ldr	r2, [sp, #0x30]
	sub	r2, r2, #0x2
	lsl	r2, r2, #0x18
	mov	r3, #0x1
	str	r3, [sp]
	mov	r4, sl
	str	r4, [sp, #0x4]
	mov	r3, #0x2
	str	r3, [sp, #0x8]
	mov	r4, #0x0
	str	r4, [sp, #0xc]
	ldrb	r3, [r6, #0x6]
	str	r3, [sp, #0x10]
	lsr	r2, r2, #0x18
.L762:
	mov	r3, r8
	bl	CreateMon
	b	.L711
.L712:
	mov	r1, #0x64
	mov	r0, r7
	mul	r0, r0, r1
	ldr	r2, [sp, #0x1c]
	add	r0, r2, r0
	ldrh	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x2]
	ldr	r3, [sp, #0x34]
	add	r2, r3, r2
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r4, #0x1
	str	r4, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r4, #0x2
	str	r4, [sp, #0x8]
	mov	r3, #0x0
	str	r3, [sp, #0xc]
	ldrb	r3, [r6, #0x6]
	str	r3, [sp, #0x10]
	mov	r3, r8
	bl	CreateMon
.L711:
	mov	r5, #0x0
	ldr	r4, [sp, #0x44]
	add	r4, r4, r9
	mov	r8, r4
	mov	r0, #0x64
	mul	r0, r0, r7
	ldr	r6, [sp, #0x1c]
	add	r7, r6, r0
	mov	r0, r9
	add	r0, r0, #0x8
	ldr	r1, [sp, #0x44]
	add	r6, r1, r0
.L717:
	lsl	r0, r5, #0x1
	mov	r1, r8
	add	r1, r1, #0x8
	add	r4, r1, r0
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L716	@cond_branch
	add	r1, r5, #0
	add	r1, r1, #0xd
	add	r0, r7, #0
	add	r2, r6, #0
	bl	SetMonData
	add	r1, r5, #0
	add	r1, r1, #0x11
	ldrh	r0, [r4]
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L776
	add	r2, r2, r0
	add	r0, r7, #0
	bl	SetMonData
.L716:
	add	r6, r6, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L717	@cond_branch
	b	.L686
.L777:
	.align	2, 0
.L776:
	.word	gBattleMoves+0x5
.L720:
	add	r0, r4, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r2, [r0]
	mov	r5, #0x0
	lsl	r3, r7, #0x1
	add	r0, r3, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r4, .L778
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r6, sp
	add	r6, r6, r7
	add	r6, r6, #0x14
	mov	r8, r3
	cmp	r0, #0xff
	beq	.L722	@cond_branch
	add	r0, r4, #0
	mov	ip, r0
	mov	r1, #0xb
	mov	r9, r1
.L724:
	add	r0, r3, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r0, [r0, #0x4]
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r5, r1
	add	r0, r0, ip
	ldrb	r0, [r0]
	ldr	r4, [sp, #0x24]
	add	r4, r4, r0
	str	r4, [sp, #0x24]
	add	r5, r5, #0x1
	add	r1, r5, r1
	add	r1, r1, ip
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L724	@cond_branch
.L722:
	ldr	r1, [sp, #0x24]
	lsl	r0, r1, #0x8
	add	sl, sl, r0
	mov	r3, r8
	add	r0, r3, r7
	lsl	r0, r0, #0x2
	add	r4, r0, r2
	ldrh	r1, [r4]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	mov	r1, #0xff
	bl	__divsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldrh	r0, [r4, #0x4]
	ldrb	r1, [r6]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x64
	mov	r0, r7
	mul	r0, r0, r2
	ldr	r3, [sp, #0x1c]
	add	r5, r3, r0
	ldrb	r2, [r6]
	mov	r6, #0x1
	str	r6, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	mov	r3, #0x2
	str	r3, [sp, #0x8]
	mov	r6, #0x0
	str	r6, [sp, #0xc]
	ldrb	r0, [r4, #0x6]
	str	r0, [sp, #0x10]
	add	r0, r5, #0
	mov	r3, r8
	bl	CreateMon
	ldrh	r0, [r4, #0x8]
	bl	GetHeldItem
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x99
	bne	.LCB5617
	b	.L686	@long jump
.LCB5617:
	add	r2, r4, #0
	add	r2, r2, #0x8
	add	r0, r5, #0
	mov	r1, #0xc
	bl	SetMonData
	b	.L686
.L779:
	.align	2, 0
.L778:
	.word	gSpeciesNames
.L727:
	add	r0, r4, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r0, [r0]
	mov	r9, r0
	mov	r5, #0x0
	lsl	r2, r7, #0x2
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r1, .L780
	add	r0, r0, r1
	ldrb	r0, [r0]
	str	r2, [sp, #0x40]
	cmp	r0, #0xff
	beq	.L729	@cond_branch
	add	r3, r1, #0
	mov	r4, #0xb
.L731:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrh	r0, [r0, #0x4]
	mov	r1, r0
	mul	r1, r1, r4
	add	r0, r5, r1
	add	r0, r0, r3
	ldrb	r0, [r0]
	ldr	r6, [sp, #0x24]
	add	r6, r6, r0
	str	r6, [sp, #0x24]
	add	r5, r5, #0x1
	add	r1, r5, r1
	add	r1, r1, r3
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L731	@cond_branch
.L729:
	ldr	r1, [sp, #0x24]
	lsl	r0, r1, #0x8
	add	sl, sl, r0
	ldr	r2, [sp, #0x40]
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	mov	r3, r9
	add	r6, r0, r3
	ldrh	r1, [r6]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	mov	r1, #0xff
	bl	__divsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r4, r9
	ldrb	r5, [r4, #0x2]
	cmp	r5, #0x1
	bne	.L733	@cond_branch
	ldrh	r0, [r6, #0x4]
	mov	r4, sp
	add	r4, r4, r7
	add	r4, r4, #0x14
	ldrb	r1, [r4]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x64
	mov	r0, r7
	mul	r0, r0, r2
	ldr	r3, [sp, #0x1c]
	add	r0, r3, r0
	ldrb	r2, [r4]
	str	r5, [sp]
	mov	r4, sl
	str	r4, [sp, #0x4]
	mov	r3, #0x2
	str	r3, [sp, #0x8]
	mov	r4, #0x0
	str	r4, [sp, #0xc]
	b	.L763
.L781:
	.align	2, 0
.L780:
	.word	gSpeciesNames
.L733:
	cmp	r5, #0x2
	bne	.L735	@cond_branch
	ldrh	r0, [r6, #0x4]
	mov	r4, sp
	add	r4, r4, r7
	add	r4, r4, #0x14
	ldrb	r1, [r4]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x64
	mov	r0, r7
	mul	r0, r0, r2
	ldr	r3, [sp, #0x1c]
	add	r0, r3, r0
	ldrb	r2, [r4]
	mov	r4, #0x1
	str	r4, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r4, #0x0
	str	r4, [sp, #0xc]
	b	.L763
.L735:
	cmp	r5, #0x3
	bne	.L737	@cond_branch
	ldrh	r0, [r6, #0x4]
	mov	r1, sp
	add	r1, r1, r7
	add	r1, r1, #0x14
	ldrb	r1, [r1]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x64
	mov	r0, r7
	mul	r0, r0, r2
	ldr	r3, [sp, #0x1c]
	add	r0, r3, r0
	ldr	r2, [sp, #0x30]
	sub	r2, r2, #0x2
	lsl	r2, r2, #0x18
	mov	r4, #0x1
	str	r4, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r4, #0x2
	str	r4, [sp, #0x8]
	mov	r3, #0x0
	str	r3, [sp, #0xc]
	ldrb	r3, [r6, #0x6]
	str	r3, [sp, #0x10]
	lsr	r2, r2, #0x18
	b	.L764
.L737:
	cmp	r5, #0x5
	bne	.L739	@cond_branch
	ldr	r0, [sp, #0x2c]
	sub	r0, r0, #0x1
	cmp	r7, r0
	bne	.L746	@cond_branch
	mov	r0, r9
	add	r0, r0, #0x68
	ldrh	r0, [r0]
	b	.L765
.L739:
	cmp	r5, #0x6
	bne	.L743	@cond_branch
	ldr	r0, [sp, #0x2c]
	sub	r0, r0, #0x1
	cmp	r7, r0
	bne	.L744	@cond_branch
	mov	r0, r9
	add	r0, r0, #0x68
	ldrh	r0, [r0]
	b	.L765
.L744:
	ldr	r0, [sp, #0x2c]
	sub	r0, r0, #0x2
	cmp	r7, r0
	bne	.L746	@cond_branch
	mov	r0, r9
	add	r0, r0, #0x54
	ldrh	r0, [r0]
	b	.L765
.L746:
	ldrh	r0, [r6, #0x4]
.L765:
	mov	r4, sp
	add	r4, r4, r7
	add	r4, r4, #0x14
	ldrb	r1, [r4]
	bl	GetTrainerPokemon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x64
	mov	r0, r7
	mul	r0, r0, r2
	ldr	r3, [sp, #0x1c]
	add	r0, r3, r0
	ldrb	r2, [r4]
	mov	r4, #0x1
	str	r4, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r4, #0x2
	str	r4, [sp, #0x8]
	mov	r3, #0x0
	str	r3, [sp, #0xc]
.L763:
	ldrb	r3, [r6, #0x6]
	str	r3, [sp, #0x10]
.L764:
	mov	r3, r8
	bl	CreateMon
	b	.L734
.L743:
	mov	r4, #0x64
	mov	r0, r7
	mul	r0, r0, r4
	ldr	r1, [sp, #0x1c]
	add	r0, r1, r0
	ldrh	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x2]
	ldr	r3, [sp, #0x34]
	add	r2, r3, r2
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r4, #0x1
	str	r4, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r4, #0x2
	str	r4, [sp, #0x8]
	mov	r3, #0x0
	str	r3, [sp, #0xc]
	ldrb	r3, [r6, #0x6]
	str	r3, [sp, #0x10]
	mov	r3, r8
	bl	CreateMon
.L734:
	ldr	r4, [sp, #0x40]
	add	r0, r4, r7
	lsl	r6, r0, #0x2
	mov	r0, r9
	add	r4, r6, r0
	ldrh	r0, [r4, #0x8]
	bl	GetHeldItem
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x99
	beq	.L749	@cond_branch
	mov	r1, #0x64
	mov	r0, r7
	mul	r0, r0, r1
	ldr	r2, [sp, #0x1c]
	add	r0, r2, r0
	add	r2, r4, #0
	add	r2, r2, #0x8
	mov	r1, #0xc
	bl	SetMonData
.L749:
	mov	r5, #0x0
	mov	r8, r4
	mov	r0, r9
	add	r0, r0, #0xa
	add	r6, r6, r0
	mov	r3, #0x64
	mov	r0, r7
	mul	r0, r0, r3
	ldr	r4, [sp, #0x1c]
	add	r7, r4, r0
.L753:
	lsl	r0, r5, #0x1
	mov	r1, r8
	add	r1, r1, #0xa
	add	r4, r1, r0
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L752	@cond_branch
	add	r1, r5, #0
	add	r1, r1, #0xd
	add	r0, r7, #0
	add	r2, r6, #0
	bl	SetMonData
	add	r1, r5, #0
	add	r1, r1, #0x11
	ldrh	r0, [r4]
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L782
	add	r2, r2, r0
	add	r0, r7, #0
	bl	SetMonData
.L752:
	add	r6, r6, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L753	@cond_branch
.L686:
	ldr	r7, [sp, #0x3c]
	ldr	r4, .L782+0x4
.L761:
	ldr	r6, [sp, #0x28]
	cmp	r7, r6
	bge	.LCB6023
	b	.L687	@long jump
.LCB6023:
	ldr	r2, .L782+0x8
	ldr	r1, .L782+0x4
	ldr	r3, [sp, #0x38]
	ldr	r4, [sp, #0x20]
	add	r0, r3, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r1, [r0, #0x18]
	ldr	r0, [r2]
	orr	r0, r0, r1
	str	r0, [r2]
.L659:
	ldr	r0, .L782+0x4
	ldr	r6, [sp, #0x38]
	ldr	r2, [sp, #0x20]
	add	r1, r6, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
.L760:
	add	sp, sp, #0x48
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L783:
	.align	2, 0
.L782:
	.word	gBattleMoves+0x5
	.word	gTrainers
	.word	gBattleTypeFlags
.Lfe18:
	.size	 CreateNPCTrainerParty,.Lfe18-CreateNPCTrainerParty
	.align	2, 0
	.globl	VBlankCB_Battle
	.type	 VBlankCB_Battle,function
	.thumb_func
VBlankCB_Battle:
	push	{lr}
	ldr	r0, .L786
	ldr	r0, [r0]
	ldr	r1, .L786+0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L785	@cond_branch
	bl	Random
.L785:
	ldr	r0, .L786+0x8
	ldrh	r1, [r0]
	mov	r0, #0x10
	bl	SetGpuReg
	ldr	r0, .L786+0xc
	ldrh	r1, [r0]
	mov	r0, #0x12
	bl	SetGpuReg
	ldr	r0, .L786+0x10
	ldrh	r1, [r0]
	mov	r0, #0x14
	bl	SetGpuReg
	ldr	r0, .L786+0x14
	ldrh	r1, [r0]
	mov	r0, #0x16
	bl	SetGpuReg
	ldr	r0, .L786+0x18
	ldrh	r1, [r0]
	mov	r0, #0x18
	bl	SetGpuReg
	ldr	r0, .L786+0x1c
	ldrh	r1, [r0]
	mov	r0, #0x1a
	bl	SetGpuReg
	ldr	r0, .L786+0x20
	ldrh	r1, [r0]
	mov	r0, #0x1c
	bl	SetGpuReg
	ldr	r0, .L786+0x24
	ldrh	r1, [r0]
	mov	r0, #0x1e
	bl	SetGpuReg
	ldr	r0, .L786+0x28
	ldrh	r1, [r0]
	mov	r0, #0x40
	bl	SetGpuReg
	ldr	r0, .L786+0x2c
	ldrh	r1, [r0]
	mov	r0, #0x44
	bl	SetGpuReg
	ldr	r0, .L786+0x30
	ldrh	r1, [r0]
	mov	r0, #0x42
	bl	SetGpuReg
	ldr	r0, .L786+0x34
	ldrh	r1, [r0]
	mov	r0, #0x46
	bl	SetGpuReg
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	bl	ScanlineEffect_InitHBlankDmaTransfer
	pop	{r0}
	bx	r0
.L787:
	.align	2, 0
.L786:
	.word	gBattleTypeFlags
	.word	0x13f0102
	.word	gBattle_BG0_X
	.word	gBattle_BG0_Y
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
	.word	gBattle_BG3_X
	.word	gBattle_BG3_Y
	.word	gBattle_WIN0H
	.word	gBattle_WIN0V
	.word	gBattle_WIN1H
	.word	gBattle_WIN1V
.Lfe19:
	.size	 VBlankCB_Battle,.Lfe19-VBlankCB_Battle
	.align	2, 0
	.globl	nullsub_17
	.type	 nullsub_17,function
	.thumb_func
nullsub_17:
	bx	lr
.Lfe20:
	.size	 nullsub_17,.Lfe20-nullsub_17
	.align	2, 0
	.type	 sub_8038B04,function
	.thumb_func
sub_8038B04:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L790	@cond_branch
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	lsr	r0, r0, #0x8
	ldrh	r1, [r5, #0x30]
	add	r0, r0, r1
	strh	r0, [r5, #0x20]
	b	.L791
.L790:
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	asr	r0, r0, #0x8
	ldrh	r1, [r5, #0x30]
	sub	r1, r1, r0
	strh	r1, [r5, #0x20]
.L791:
	mov	r1, #0xc0
	lsl	r1, r1, #0x1
	add	r0, r1, #0
	ldrh	r1, [r5, #0x32]
	add	r0, r0, r1
	strh	r0, [r5, #0x32]
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L792	@cond_branch
	ldr	r4, .L793
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	add	r0, r5, #0
	bl	FreeSpriteOamMatrix
	add	r0, r5, #0
	bl	DestroySprite
.L792:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L794:
	.align	2, 0
.L793:
	.word	0x2710
.Lfe21:
	.size	 sub_8038B04,.Lfe21-sub_8038B04
	.align	2, 0
	.globl	sub_8038B74
	.type	 sub_8038B74,function
	.thumb_func
sub_8038B74:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	ldr	r0, .L796
	str	r0, [r4, #0x1c]
	mov	r0, #0x68
	bl	PlaySE
	pop	{r4}
	pop	{r0}
	bx	r0
.L797:
	.align	2, 0
.L796:
	.word	sub_8038B04
.Lfe22:
	.size	 sub_8038B74,.Lfe22-sub_8038B74
	.align	2, 0
	.type	 sub_8038B94,function
	.thumb_func
sub_8038B94:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	ldr	r0, .L833
	add	r0, r0, #0x25
	ldrb	r2, [r0]
	ldr	r0, .L833+0x4
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L799	@cond_branch
	ldr	r1, .L833+0x8
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x1
	beq	.L804	@cond_branch
	cmp	r0, #0x1
	bgt	.L807	@cond_branch
	cmp	r0, #0
	beq	.L799	@cond_branch
	b	.L808
.L834:
	.align	2, 0
.L833:
	.word	gBattleScripting
	.word	gBattleTypeFlags
	.word	gLinkPlayers
.L807:
	cmp	r0, #0x2
	beq	.L799	@cond_branch
	cmp	r0, #0x3
	bne	.L808	@cond_branch
.L804:
	ldr	r0, .L835
	str	r0, [sp, #0x4]
	ldr	r1, .L835+0x4
	str	r1, [sp, #0x8]
	b	.L808
.L836:
	.align	2, 0
.L835:
	.word	gEnemyParty
	.word	gPlayerParty
.L799:
	ldr	r2, .L837
	str	r2, [sp, #0x4]
	ldr	r3, .L837+0x4
	str	r3, [sp, #0x8]
.L808:
	mov	r7, #0x0
	mov	r0, #0x0
	mov	r8, r0
	ldr	r1, [sp]
	lsl	r1, r1, #0x2
	str	r1, [sp, #0xc]
	ldr	r2, .L837+0x8
	mov	sl, r2
	mov	r9, r0
.L812:
	mov	r0, #0x64
	mov	r4, r8
	mul	r4, r4, r0
	ldr	r3, [sp, #0x4]
	add	r4, r3, r4
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
	add	r1, r0, #0
	cmp	r5, #0
	beq	.L811	@cond_branch
	cmp	r5, sl
	beq	.L814	@cond_branch
	cmp	r6, #0
	beq	.L814	@cond_branch
	cmp	r1, #0
	bne	.L814	@cond_branch
	mov	r0, #0x1
	mov	r2, r9
	lsl	r0, r0, r2
	orr	r7, r7, r0
.L814:
	cmp	r5, #0
	beq	.L811	@cond_branch
	cmp	r6, #0
	beq	.L816	@cond_branch
	cmp	r5, sl
	beq	.L817	@cond_branch
	cmp	r1, #0
	beq	.L816	@cond_branch
.L817:
	mov	r0, #0x2
	mov	r3, r9
	lsl	r0, r0, r3
	orr	r7, r7, r0
.L816:
	cmp	r5, #0
	beq	.L811	@cond_branch
	cmp	r5, sl
	beq	.L811	@cond_branch
	cmp	r6, #0
	bne	.L811	@cond_branch
	mov	r0, #0x3
	mov	r1, r9
	lsl	r0, r0, r1
	orr	r7, r7, r0
.L811:
	mov	r2, #0x2
	add	r9, r9, r2
	mov	r3, #0x1
	add	r8, r8, r3
	mov	r0, r8
	cmp	r0, #0x5
	ble	.L812	@cond_branch
	ldr	r1, .L837+0xc
	ldr	r2, [sp, #0xc]
	ldr	r3, [sp]
	add	r0, r2, r3
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r7, [r0, #0xe]
	mov	r7, #0x0
	mov	r0, #0x0
	mov	r8, r0
	ldr	r1, .L837+0x8
	mov	sl, r1
	mov	r9, r0
.L824:
	mov	r0, #0x64
	mov	r4, r8
	mul	r4, r4, r0
	ldr	r2, [sp, #0x8]
	add	r4, r2, r4
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
	add	r1, r0, #0
	cmp	r5, #0
	beq	.L823	@cond_branch
	cmp	r5, sl
	beq	.L826	@cond_branch
	cmp	r6, #0
	beq	.L826	@cond_branch
	cmp	r1, #0
	bne	.L826	@cond_branch
	mov	r0, #0x1
	mov	r3, r9
	lsl	r0, r0, r3
	orr	r7, r7, r0
.L826:
	cmp	r5, #0
	beq	.L823	@cond_branch
	cmp	r6, #0
	beq	.L828	@cond_branch
	cmp	r5, sl
	beq	.L829	@cond_branch
	cmp	r1, #0
	beq	.L828	@cond_branch
.L829:
	mov	r0, #0x2
	mov	r1, r9
	lsl	r0, r0, r1
	orr	r7, r7, r0
.L828:
	cmp	r5, #0
	beq	.L823	@cond_branch
	cmp	r5, sl
	beq	.L823	@cond_branch
	cmp	r6, #0
	bne	.L823	@cond_branch
	mov	r0, #0x3
	mov	r2, r9
	lsl	r0, r0, r2
	orr	r7, r7, r0
.L823:
	mov	r3, #0x2
	add	r9, r9, r3
	mov	r0, #0x1
	add	r8, r8, r0
	mov	r1, r8
	cmp	r1, #0x5
	ble	.L824	@cond_branch
	ldr	r1, .L837+0xc
	ldr	r2, [sp, #0xc]
	ldr	r3, [sp]
	add	r0, r2, r3
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r7, [r0, #0x10]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L838:
	.align	2, 0
.L837:
	.word	gPlayerParty
	.word	gEnemyParty
	.word	0x4b7
	.word	gTasks
.Lfe23:
	.size	 sub_8038B94,.Lfe23-sub_8038B94
	.align	2, 0
	.globl	sub_8038D64
	.type	 sub_8038D64,function
	.thumb_func
sub_8038D64:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L851
	ldr	r1, [r0]
	mov	r2, #0x21
	neg	r2, r2
	and	r1, r1, r2
	str	r1, [r0]
	ldr	r0, .L851+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L840	@cond_branch
	ldr	r0, .L851+0x8
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
	bl	FreeBattleResources
	bl	FreeBattleSpritesData
	bl	FreeMonSpritesGfx
	b	.L841
.L852:
	.align	2, 0
.L851:
	.word	gBattleTypeFlags
	.word	0x3f0100
	.word	gMain
.L840:
	str	r0, [sp]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L853
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x4c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0xf0
	bl	SetGpuReg
	ldr	r4, .L853+0x4
	mov	r0, #0x44
	add	r1, r4, #0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r1, .L853+0x8
	mov	r0, #0xf0
	strh	r0, [r1]
	ldr	r0, .L853+0xc
	strh	r4, [r0]
	bl	ScanlineEffect_Clear
	ldr	r0, .L853+0x10
	mov	r3, #0xf0
	mov	r1, #0xf0
	lsl	r1, r1, #0x3
	add	r2, r0, r1
	mov	r1, #0x4f
.L844:
	strh	r3, [r0]
	strh	r3, [r2]
	add	r2, r2, #0x2
	add	r0, r0, #0x2
	sub	r1, r1, #0x1
	cmp	r1, #0
	bge	.L844	@cond_branch
	mov	r1, #0x50
	ldr	r0, .L853+0x10
	ldr	r3, .L853+0x14
	mov	r4, #0x82
	lsl	r4, r4, #0x4
	add	r2, r0, r4
	add	r0, r0, #0xa0
.L848:
	strh	r3, [r0]
	strh	r3, [r2]
	add	r2, r2, #0x2
	add	r0, r0, #0x2
	add	r1, r1, #0x1
	cmp	r1, #0x9f
	ble	.L848	@cond_branch
	bl	ResetPaletteFade
	ldr	r0, .L853+0x18
	mov	r4, #0x0
	strh	r4, [r0]
	ldr	r0, .L853+0x1c
	strh	r4, [r0]
	ldr	r0, .L853+0x20
	strh	r4, [r0]
	ldr	r0, .L853+0x24
	strh	r4, [r0]
	ldr	r0, .L853+0x28
	strh	r4, [r0]
	ldr	r0, .L853+0x2c
	strh	r4, [r0]
	ldr	r0, .L853+0x30
	strh	r4, [r0]
	ldr	r0, .L853+0x34
	strh	r4, [r0]
	bl	InitBattleBgsVideo
	ldr	r0, .L853+0x38
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadCompressedPalette
	bl	LoadBattleMenuWindowGfx
	bl	ResetSpriteData
	bl	ResetTasks
	bl	DrawBattleEntryBackground
	mov	r0, #0x4a
	mov	r1, #0x37
	bl	SetGpuReg
	bl	FreeAllSpritePalettes
	ldr	r1, .L853+0x3c
	mov	r0, #0x4
	strb	r0, [r1]
	ldr	r0, .L853+0x40
	bl	SetVBlankCallback
	ldr	r0, .L853+0x44
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L853+0x48
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x87
	lsl	r2, r2, #0x1
	strh	r2, [r1, #0xa]
	mov	r2, #0x5a
	strh	r2, [r1, #0xc]
	mov	r2, #0x1
	strh	r2, [r1, #0x12]
	bl	sub_8038B94
	ldr	r0, .L853+0x4c
	bl	SetMainCallback2
	ldr	r0, .L853+0x50
	strb	r4, [r0]
.L841:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L854:
	.align	2, 0
.L853:
	.word	0x5006000
	.word	0x5051
	.word	gBattle_WIN0H
	.word	gBattle_WIN0V
	.word	gScanlineEffectRegBuffers
	.word	0xff10
	.word	gBattle_BG0_X
	.word	gBattle_BG0_Y
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
	.word	gBattle_BG3_X
	.word	gBattle_BG3_Y
	.word	gBattleTextboxPalette
	.word	gReservedSpritePaletteCount
	.word	VBlankCB_Battle
	.word	InitLinkBattleVsScreen
	.word	gTasks
	.word	sub_8038F14
	.word	gBattleCommunication
.Lfe24:
	.size	 sub_8038D64,.Lfe24-sub_8038D64
	.align	2, 0
	.type	 sub_8038F14,function
	.thumb_func
sub_8038F14:
	push	{lr}
	bl	sub_8038F34
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	bl	RunTasks
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 sub_8038F14,.Lfe25-sub_8038F14
	.align	2, 0
	.type	 sub_8038F34,function
	.thumb_func
sub_8038F34:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L904
	ldrb	r1, [r0]
	add	r4, r0, #0
	cmp	r1, #0x9
	bls	.LCB6783
	b	.L857	@long jump
.LCB6783:
	lsl	r0, r1, #0x2
	ldr	r1, .L904+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L905:
	.align	2, 0
.L904:
	.word	gBattleCommunication
	.word	.L899
	.align	2, 0
	.align	2, 0
.L899:
	.word	.L858
	.word	.L859
	.word	.L861
	.word	.L879
	.word	.L885
	.word	.L887
	.word	.L889
	.word	.L891
	.word	.L894
	.word	.L896
.L858:
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	ldr	r1, .L906
	mov	r0, #0xff
	strb	r0, [r1, #0x1]
	b	.L901
.L907:
	.align	2, 0
.L906:
	.word	gBattleCommunication
.L859:
	ldrb	r0, [r4, #0x1]
	sub	r0, r0, #0x1
	strb	r0, [r4, #0x1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.LCB6833
	b	.L857	@long jump
.LCB6833:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L902
.L861:
	ldr	r0, .L908
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB6853
	b	.L857	@long jump
.LCB6853:
	bl	sub_8185FAC
	ldr	r2, .L908+0x4
	ldr	r1, .L908+0x8
	add	r2, r2, r1
	mov	r1, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L908+0xc
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	mov	r3, #0x2
	cmp	r0, #0
	beq	.L863	@cond_branch
	mov	r3, #0x4
.L863:
	mov	r4, #0x0
	ldr	r6, .L908+0x10
	cmp	r4, r3
	bge	.L866	@cond_branch
	ldr	r1, .L908+0x14
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bne	.L866	@cond_branch
	mov	r5, #0xff
	add	r2, r1, #0
.L867:
	add	r2, r2, #0x1c
	add	r4, r4, #0x1
	cmp	r4, r3
	bge	.L866	@cond_branch
	ldrh	r1, [r2]
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0x3
	beq	.L867	@cond_branch
.L866:
	ldr	r0, [r6]
	ldr	r1, .L908+0x18
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L871	@cond_branch
	cmp	r4, r3
	bne	.L871	@cond_branch
	ldr	r0, .L908+0x1c
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L872	@cond_branch
	bl	FreeAllWindowBuffers
	ldr	r0, .L908+0x20
	bl	SetMainCallback2
	b	.L857
.L909:
	.align	2, 0
.L908:
	.word	gPaletteFade
	.word	gMain
	.word	0x439
	.word	gBattleTypeFlags
	.word	gSaveBlock2Ptr
	.word	gLinkPlayers
	.word	0xc31
	.word	0x8d2
	.word	sub_80392A8
.L872:
	ldr	r2, .L910
	ldr	r1, .L910+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L874	@cond_branch
	ldr	r0, [r2, #0x8]
	b	.L903
.L911:
	.align	2, 0
.L910:
	.word	gMain
	.word	0x439
.L874:
	ldr	r0, .L912
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L895	@cond_branch
	ldr	r0, .L912+0x4
	mov	r1, #0x5
	bl	CreateTask
	b	.L895
.L913:
	.align	2, 0
.L912:
	.word	gReceivedRemoteLinkPlayers
	.word	sub_80B3AF8
.L871:
	ldr	r0, .L914
	ldr	r0, [r0, #0x8]
.L903:
	bl	SetMainCallback2
	bl	FreeBattleResources
	bl	FreeBattleSpritesData
	bl	FreeMonSpritesGfx
	b	.L857
.L915:
	.align	2, 0
.L914:
	.word	gMain
.L879:
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L916
	add	r0, sp, #0x4
	bl	CpuSet
	mov	r4, #0x0
.L883:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	LoadChosenBattleElement
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L883	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L895
.L917:
	.align	2, 0
.L916:
	.word	0x5006000
.L885:
	ldr	r0, .L918
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L857	@cond_branch
.L902:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L857
.L919:
	.align	2, 0
.L918:
	.word	gPaletteFade
.L887:
	ldr	r0, .L920
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L857	@cond_branch
	b	.L895
.L921:
	.align	2, 0
.L920:
	.word	sub_80B3AF8
.L889:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L857	@cond_branch
	bl	SetLinkStandbyCallback
	ldr	r0, .L922
	mov	r1, #0x0
	bl	BattlePutTextOnWindow
	b	.L895
.L923:
	.align	2, 0
.L922:
	.word	gText_LinkStandby3
.L891:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L857	@cond_branch
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L857	@cond_branch
	b	.L895
.L894:
	ldr	r0, .L924
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L895	@cond_branch
	bl	SetCloseLinkCallback
.L895:
	ldr	r1, .L924+0x4
.L901:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L857
.L925:
	.align	2, 0
.L924:
	.word	gWirelessCommType
	.word	gBattleCommunication
.L896:
	ldr	r2, .L926
	ldr	r1, .L926+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	add	r3, r2, #0
	cmp	r0, #0
	beq	.L898	@cond_branch
	ldr	r0, .L926+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L898	@cond_branch
	ldr	r0, .L926+0xc
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L857	@cond_branch
.L898:
	ldr	r0, .L926+0x4
	add	r2, r3, r0
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, [r3, #0x8]
	bl	SetMainCallback2
	bl	FreeBattleResources
	bl	FreeBattleSpritesData
	bl	FreeMonSpritesGfx
.L857:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L927:
	.align	2, 0
.L926:
	.word	gMain
	.word	0x439
	.word	gWirelessCommType
	.word	gReceivedRemoteLinkPlayers
.Lfe26:
	.size	 sub_8038F34,.Lfe26-sub_8038F34
	.align	2, 0
	.globl	sub_80391E0
	.type	 sub_80391E0,function
	.thumb_func
sub_80391E0:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	cmp	r1, #0x6
	bhi	.L929	@cond_branch
	lsl	r0, r1, #0x2
	ldr	r1, .L939
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L940:
	.align	2, 0
.L939:
	.word	.L937
	.align	2, 0
	.align	2, 0
.L937:
	.word	.L930
	.word	.L931
	.word	.L932
	.word	.L933
	.word	.L934
	.word	.L935
	.word	.L936
.L930:
	ldr	r0, .L941
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	b	.L929
.L942:
	.align	2, 0
.L941:
	.word	gBattleBgTemplates
.L931:
	ldr	r0, .L943
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	b	.L929
.L944:
	.align	2, 0
.L943:
	.word	gBattleBgTemplates
.L932:
	ldr	r0, .L945
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x1b
	b	.L929
.L946:
	.align	2, 0
.L945:
	.word	gBattleBgTemplates
.L933:
	ldr	r0, .L947
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1e
	b	.L929
.L948:
	.align	2, 0
.L947:
	.word	gBattleBgTemplates
.L934:
	ldr	r0, .L949
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1f
	b	.L929
.L950:
	.align	2, 0
.L949:
	.word	gBattleBgTemplates
.L935:
	ldr	r0, .L951
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	b	.L929
.L952:
	.align	2, 0
.L951:
	.word	gBattleBgTemplates
.L936:
	ldr	r0, .L953
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	lsl	r0, r0, #0x8
	lsr	r0, r0, #0x16
.L929:
	pop	{r1}
	bx	r1
.L954:
	.align	2, 0
.L953:
	.word	gBattleBgTemplates
.Lfe27:
	.size	 sub_80391E0,.Lfe27-sub_80391E0
	.align	2, 0
	.type	 sub_80392A8,function
	.thumb_func
sub_80392A8:
	push	{r4, lr}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L961
	add	r0, sp, #0x4
	bl	CpuSet
	bl	ResetPaletteFade
	ldr	r0, .L961+0x4
	strh	r4, [r0]
	ldr	r0, .L961+0x8
	strh	r4, [r0]
	ldr	r0, .L961+0xc
	strh	r4, [r0]
	ldr	r0, .L961+0x10
	strh	r4, [r0]
	ldr	r0, .L961+0x14
	strh	r4, [r0]
	ldr	r0, .L961+0x18
	strh	r4, [r0]
	ldr	r0, .L961+0x1c
	strh	r4, [r0]
	ldr	r0, .L961+0x20
	strh	r4, [r0]
	bl	InitBattleBgsVideo
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	bl	LoadBattleMenuWindowGfx
.L959:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	LoadChosenBattleElement
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L959	@cond_branch
	bl	ResetSpriteData
	bl	ResetTasks
	bl	FreeAllSpritePalettes
	ldr	r1, .L961+0x24
	mov	r0, #0x4
	strb	r0, [r1]
	ldr	r0, .L961+0x28
	bl	SetVBlankCallback
	ldr	r0, .L961+0x2c
	bl	SetMainCallback2
	mov	r0, #0x1
	neg	r0, r0
	mov	r4, #0x0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L961+0x30
	strb	r4, [r0]
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L962:
	.align	2, 0
.L961:
	.word	0x5006000
	.word	gBattle_BG0_X
	.word	gBattle_BG0_Y
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
	.word	gBattle_BG3_X
	.word	gBattle_BG3_Y
	.word	gReservedSpritePaletteCount
	.word	VBlankCB_Battle
	.word	sub_803937C
	.word	gBattleCommunication
.Lfe28:
	.size	 sub_80392A8,.Lfe28-sub_80392A8
	.align	2, 0
	.type	 sub_803937C,function
	.thumb_func
sub_803937C:
	push	{lr}
	bl	sub_803939C
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	bl	RunTasks
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 sub_803937C,.Lfe29-sub_803937C
	.align	2, 0
	.type	 sub_803939C,function
	.thumb_func
sub_803939C:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L1015
	ldrb	r1, [r0]
	add	r4, r0, #0
	cmp	r1, #0xc
	bls	.LCB7520
	b	.L965	@long jump
.LCB7520:
	lsl	r0, r1, #0x2
	ldr	r1, .L1015+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1016:
	.align	2, 0
.L1015:
	.word	gBattleCommunication
	.word	.L1009
	.align	2, 0
	.align	2, 0
.L1009:
	.word	.L966
	.word	.L967
	.word	.L969
	.word	.L971
	.word	.L973
	.word	.L975
	.word	.L987
	.word	.L1004
	.word	.L990
	.word	.L993
	.word	.L997
	.word	.L1000
	.word	.L1004
.L966:
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	ldr	r1, .L1017
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L1011
.L1018:
	.align	2, 0
.L1017:
	.word	gBattleCommunication
.L967:
	ldr	r0, .L1019
	ldr	r1, .L1019+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L968	@cond_branch
	ldr	r0, .L1019+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L968	@cond_branch
	ldr	r0, .L1019+0xc
	mov	r1, #0x5
	bl	CreateTask
.L968:
	ldr	r1, .L1019+0x10
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L1011
.L1020:
	.align	2, 0
.L1019:
	.word	gMain
	.word	0x439
	.word	gReceivedRemoteLinkPlayers
	.word	sub_80B3AF8
	.word	gBattleCommunication
.L969:
	ldr	r0, .L1021
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7604
	b	.L965	@long jump
.LCB7604:
	ldr	r1, .L1021+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L1011
.L1022:
	.align	2, 0
.L1021:
	.word	sub_80B3AF8
	.word	gBattleCommunication
.L971:
	ldr	r0, .L1023
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB7625
	b	.L965	@long jump
.LCB7625:
	ldr	r0, .L1023+0x4
	mov	r1, #0x0
	bl	BattlePutTextOnWindow
	ldr	r1, .L1023+0x8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L1011
.L1024:
	.align	2, 0
.L1023:
	.word	gPaletteFade
	.word	gText_RecordBattleToPass
	.word	gBattleCommunication
.L973:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	beq	.LCB7651
	b	.L965	@long jump
.LCB7651:
	str	r0, [sp]
	mov	r0, #0x18
	mov	r1, #0x8
	mov	r2, #0x1d
	mov	r3, #0xd
	bl	HandleBattleWindow
	ldr	r0, .L1025
	mov	r1, #0xc
	bl	BattlePutTextOnWindow
	ldr	r4, .L1025+0x4
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	bl	BattleCreateYesNoCursorAt
	b	.L1002
.L1026:
	.align	2, 0
.L1025:
	.word	gText_BattleYesNoChoice
	.word	gBattleCommunication
.L975:
	ldr	r0, .L1027
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L976	@cond_branch
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	bne	.LCB7695
	b	.L965	@long jump
.LCB7695:
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r4, #0x1]
	bl	BattleDestroyYesNoCursorAt
	mov	r0, #0x0
	b	.L1012
.L1028:
	.align	2, 0
.L1027:
	.word	gMain
.L976:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L979	@cond_branch
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	beq	.LCB7728
	b	.L965	@long jump
.LCB7728:
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r4, #0x1]
	bl	BattleDestroyYesNoCursorAt
	mov	r0, #0x1
.L1012:
	strb	r0, [r4, #0x1]
	bl	BattleCreateYesNoCursorAt
	b	.L965
.L979:
	mov	r5, #0x1
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L982	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1029
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	beq	.LCB7761
	b	.L1002	@long jump
.LCB7761:
	str	r5, [sp]
	mov	r0, #0x18
	mov	r1, #0x8
	mov	r2, #0x1d
	mov	r3, #0xd
	bl	HandleBattleWindow
	bl	MoveRecordedBattleToSaveData
	strb	r0, [r4, #0x1]
	mov	r0, #0xa
	strb	r0, [r4]
	b	.L965
.L1030:
	.align	2, 0
.L1029:
	.word	gBattleCommunication
.L982:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB7792
	b	.L965	@long jump
.LCB7792:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L1031
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L1011
.L1032:
	.align	2, 0
.L1031:
	.word	gBattleCommunication
.L987:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.LCB7813
	b	.L965	@long jump
.LCB7813:
	str	r0, [sp]
	mov	r0, #0x18
	mov	r1, #0x8
	mov	r2, #0x1d
	mov	r3, #0xd
	bl	HandleBattleWindow
	ldr	r0, .L1033
	ldr	r1, .L1033+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L989	@cond_branch
	bl	SetLinkStandbyCallback
	ldr	r0, .L1033+0x8
	mov	r1, #0x0
	bl	BattlePutTextOnWindow
.L989:
	ldr	r1, .L1033+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L1011
.L1034:
	.align	2, 0
.L1033:
	.word	gMain
	.word	0x439
	.word	gText_LinkStandby3
	.word	gBattleCommunication
.L990:
	ldrb	r0, [r4, #0x1]
	sub	r0, r0, #0x1
	strb	r0, [r4, #0x1]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7864
	b	.L965	@long jump
.LCB7864:
	ldr	r0, .L1035
	ldr	r1, .L1035+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L992	@cond_branch
	ldr	r0, .L1035+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L992	@cond_branch
	bl	SetCloseLinkCallback
.L992:
	ldr	r1, .L1035+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L1011
.L1036:
	.align	2, 0
.L1035:
	.word	gMain
	.word	0x439
	.word	gWirelessCommType
	.word	gBattleCommunication
.L993:
	ldr	r2, .L1037
	ldr	r1, .L1037+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	add	r3, r2, #0
	cmp	r0, #0
	beq	.L995	@cond_branch
	ldr	r0, .L1037+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L995	@cond_branch
	ldr	r0, .L1037+0xc
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.LCB7924
	b	.L965	@long jump
.LCB7924:
.L995:
	ldr	r0, .L1037+0x4
	add	r2, r3, r0
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L1037+0x10
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB7944
	b	.L965	@long jump
.LCB7944:
	ldr	r0, [r3, #0x8]
	bl	SetMainCallback2
	bl	FreeBattleResources
	bl	FreeBattleSpritesData
	bl	FreeMonSpritesGfx
	b	.L965
.L1038:
	.align	2, 0
.L1037:
	.word	gMain
	.word	0x439
	.word	gWirelessCommType
	.word	gReceivedRemoteLinkPlayers
	.word	gPaletteFade
.L997:
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0x1
	bne	.L998	@cond_branch
	mov	r0, #0x37
	bl	PlaySE
	ldr	r0, .L1039
.L1013:
	bl	BattleStringExpandPlaceholdersToDisplayedString
	ldr	r0, .L1039+0x4
	mov	r1, #0x0
	bl	BattlePutTextOnWindow
	mov	r0, #0x80
	strb	r0, [r4, #0x1]
	b	.L1002
.L1040:
	.align	2, 0
.L1039:
	.word	gText_BattleRecordedOnPass
	.word	gDisplayedStringBattle
.L998:
	ldr	r0, .L1041
	b	.L1013
.L1042:
	.align	2, 0
.L1041:
	.word	BattleFrontier_BattleTowerBattleRoom_Text_RecordCouldntBeSaved
.L1000:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L965	@cond_branch
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L965	@cond_branch
	ldr	r4, .L1043
	ldrb	r0, [r4, #0x1]
	sub	r0, r0, #0x1
	strb	r0, [r4, #0x1]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L965	@cond_branch
	ldr	r0, .L1043+0x4
	ldr	r1, .L1043+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1002	@cond_branch
	bl	SetLinkStandbyCallback
	ldr	r0, .L1043+0xc
	mov	r1, #0x0
	bl	BattlePutTextOnWindow
.L1002:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L965
.L1044:
	.align	2, 0
.L1043:
	.word	gBattleCommunication
	.word	gMain
	.word	0x439
	.word	gText_LinkStandby3
.L1004:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0
	bne	.L965	@cond_branch
	ldr	r0, .L1045
	ldr	r1, .L1045+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1006	@cond_branch
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L965	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	b	.L1014
.L1046:
	.align	2, 0
.L1045:
	.word	gMain
	.word	0x439
.L1006:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
.L1014:
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L1047
	mov	r0, #0x20
	strb	r0, [r1, #0x1]
	mov	r0, #0x8
.L1011:
	strb	r0, [r1]
.L965:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1048:
	.align	2, 0
.L1047:
	.word	gBattleCommunication
.Lfe30:
	.size	 sub_803939C,.Lfe30-sub_803939C
	.align	2, 0
	.type	 TryCorrectShedinjaLanguage,function
	.thumb_func
TryCorrectShedinjaLanguage:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	add	r5, sp, #0xc
	mov	r0, #0x1
	strb	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	mov	r1, #0x92
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bne	.L1050	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetMonData
	ldrb	r1, [r5]
	cmp	r0, r1
	beq	.L1050	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	ldr	r1, .L1052
	mov	r0, sp
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	bne	.L1050	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x3
	add	r2, r5, #0
	bl	SetMonData
.L1050:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1053:
	.align	2, 0
.L1052:
	.word	sText_ShedinjaJpnName
.Lfe31:
	.size	 TryCorrectShedinjaLanguage,.Lfe31-TryCorrectShedinjaLanguage
	.align	2, 0
	.globl	sub_80397C4
	.type	 sub_80397C4,function
	.thumb_func
sub_80397C4:
	ldr	r2, .L1055
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1, #0x3]
	lsl	r0, r0, #0x3
	bx	lr
.L1056:
	.align	2, 0
.L1055:
	.word	gBattleWindowTemplates
.Lfe32:
	.size	 sub_80397C4,.Lfe32-sub_80397C4
	.align	2, 0
	.globl	SpriteCb_WildMon
	.type	 SpriteCb_WildMon,function
	.thumb_func
SpriteCb_WildMon:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldr	r0, .L1062
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x17]
	mov	r0, #0xc
	and	r0, r0, r1
	cmp	r0, #0x4
	bne	.L1058	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x24]
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8076918
	ldr	r1, .L1062+0x4
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	SetHealthboxSpriteVisible
	ldr	r0, .L1062+0x8
	str	r0, [r4, #0x1c]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnimIfDifferent
	b	.L1059
.L1063:
	.align	2, 0
.L1062:
	.word	gSaveBlock2Ptr
	.word	gHealthboxSpriteIds
	.word	SpriteCb_WildMonAnimate
.L1058:
	ldr	r0, .L1064
	str	r0, [r4, #0x1c]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnimIfDifferent
	ldr	r0, .L1064+0x4
	ldr	r0, [r0]
	mov	r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1060	@cond_branch
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	mov	r3, #0x80
	lsl	r3, r3, #0x9
	add	r0, r3, #0
	lsl	r0, r0, r1
	ldrh	r1, [r4, #0x2e]
	mov	r2, #0x2
	eor	r1, r1, r2
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r3, r3, r1
	orr	r0, r0, r3
	ldr	r1, .L1064+0x8
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0xa
	mov	r3, #0xa
	bl	BeginNormalPaletteFade
	b	.L1059
.L1065:
	.align	2, 0
.L1064:
	.word	SpriteCb_MoveWildMonToRight
	.word	gBattleTypeFlags
	.word	0x2108
.L1060:
	mov	r2, #0x2e
	ldrsh	r1, [r4, r2]
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	lsl	r0, r0, r1
	ldr	r1, .L1066
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0xa
	mov	r3, #0xa
	bl	BeginNormalPaletteFade
.L1059:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1067:
	.align	2, 0
.L1066:
	.word	0x2108
.Lfe33:
	.size	 SpriteCb_WildMon,.Lfe33-SpriteCb_WildMon
	.align	2, 0
	.type	 SpriteCb_MoveWildMonToRight,function
	.thumb_func
SpriteCb_MoveWildMonToRight:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1071
	ldrh	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1069	@cond_branch
	ldrh	r0, [r2, #0x24]
	add	r0, r0, #0x2
	strh	r0, [r2, #0x24]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1069	@cond_branch
	ldr	r0, .L1071+0x4
	str	r0, [r2, #0x1c]
.L1069:
	pop	{r0}
	bx	r0
.L1072:
	.align	2, 0
.L1071:
	.word	gIntroSlideFlags
	.word	SpriteCb_WildMonShowHealthbox
.Lfe34:
	.size	 SpriteCb_MoveWildMonToRight,.Lfe34-SpriteCb_MoveWildMonToRight
	.align	2, 0
	.type	 SpriteCb_WildMonShowHealthbox,function
	.thumb_func
SpriteCb_WildMonShowHealthbox:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1074	@cond_branch
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8076918
	ldr	r1, .L1077
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	SetHealthboxSpriteVisible
	ldr	r0, .L1077+0x4
	str	r0, [r4, #0x1c]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnimIfDifferent
	ldr	r0, .L1077+0x8
	ldr	r0, [r0]
	mov	r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1075	@cond_branch
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	mov	r3, #0x80
	lsl	r3, r3, #0x9
	add	r0, r3, #0
	lsl	r0, r0, r1
	ldrh	r1, [r4, #0x2e]
	mov	r2, #0x2
	eor	r1, r1, r2
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r3, r3, r1
	orr	r0, r0, r3
	ldr	r1, .L1077+0xc
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0xa
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L1074
.L1078:
	.align	2, 0
.L1077:
	.word	gHealthboxSpriteIds
	.word	SpriteCb_WildMonAnimate
	.word	gBattleTypeFlags
	.word	0x2108
.L1075:
	mov	r2, #0x2e
	ldrsh	r1, [r4, r2]
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	lsl	r0, r0, r1
	ldr	r1, .L1079
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0xa
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L1074:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1080:
	.align	2, 0
.L1079:
	.word	0x2108
.Lfe35:
	.size	 SpriteCb_WildMonShowHealthbox,.Lfe35-SpriteCb_WildMonShowHealthbox
	.align	2, 0
	.type	 SpriteCb_WildMonAnimate,function
	.thumb_func
SpriteCb_WildMonAnimate:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1083
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1082	@cond_branch
	ldrh	r1, [r2, #0x32]
	add	r0, r2, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	BattleAnimateFrontSprite
.L1082:
	pop	{r0}
	bx	r0
.L1084:
	.align	2, 0
.L1083:
	.word	gPaletteFade
.Lfe36:
	.size	 SpriteCb_WildMonAnimate,.Lfe36-SpriteCb_WildMonAnimate
	.align	2, 0
	.globl	SpriteCallbackDummy_2
	.type	 SpriteCallbackDummy_2,function
	.thumb_func
SpriteCallbackDummy_2:
	bx	lr
.Lfe37:
	.size	 SpriteCallbackDummy_2,.Lfe37-SpriteCallbackDummy_2
	.align	2, 0
	.type	 sub_80398D0,function
	.thumb_func
sub_80398D0:
	push	{r4, lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x36]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x36]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1087	@cond_branch
	mov	r0, #0x8
	strh	r0, [r3, #0x36]
	mov	r0, #0x3e
	add	r0, r0, r3
	mov	ip, r0
	ldrb	r2, [r0]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r4, #0x5
	neg	r4, r4
	add	r0, r4, #0
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	ldrh	r0, [r3, #0x34]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x34]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1087	@cond_branch
	ldrb	r0, [r1]
	add	r1, r4, #0
	and	r1, r1, r0
	mov	r0, ip
	strb	r1, [r0]
	ldr	r0, .L1089
	str	r0, [r3, #0x1c]
.L1087:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1090:
	.align	2, 0
.L1089:
	.word	SpriteCallbackDummy_2
.Lfe38:
	.size	 sub_80398D0,.Lfe38-sub_80398D0
	.align	2, 0
	.globl	SpriteCB_FaintOpponentMon
	.type	 SpriteCB_FaintOpponentMon,function
	.thumb_func
SpriteCB_FaintOpponentMon:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	ldrh	r0, [r6, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L1102
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1102+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	GetMonData
	add	r7, r0, #0
	ldr	r0, .L1102+0x8
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r1, r0, r1
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0
	beq	.L1092	@cond_branch
	add	r4, r0, #0
	b	.L1093
.L1103:
	.align	2, 0
.L1102:
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
	.word	gBattleSpritesDataPtr
.L1092:
	ldrh	r4, [r6, #0x32]
.L1093:
	ldr	r1, .L1104
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1104+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	GetMonData
	cmp	r4, #0xc9
	bne	.L1094	@cond_branch
	add	r0, r7, #0
	bl	GetUnownSpeciesId
	lsl	r0, r0, #0x10
	ldr	r1, .L1104+0x8
	lsr	r0, r0, #0xe
	b	.L1100
.L1105:
	.align	2, 0
.L1104:
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
	.word	gMonFrontPicCoords
.L1094:
	ldr	r0, .L1106
	cmp	r4, r0
	bne	.L1096	@cond_branch
	ldr	r0, .L1106+0x4
	ldr	r1, .L1106+0x8
	add	r1, r5, r1
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1]
	b	.L1095
.L1107:
	.align	2, 0
.L1106:
	.word	0x15f
	.word	gCastformFrontSpriteCoords
	.word	gBattleMonForms
.L1096:
	ldr	r0, .L1108
	cmp	r4, r0
	bls	.L1098	@cond_branch
	ldr	r0, .L1108+0x4
	b	.L1101
.L1109:
	.align	2, 0
.L1108:
	.word	0x4b7
	.word	gMonFrontPicCoords
.L1098:
	ldr	r1, .L1110
	lsl	r0, r4, #0x2
.L1100:
	add	r0, r0, r1
.L1101:
	ldrb	r0, [r0, #0x1]
.L1095:
	lsr	r1, r0, #0x3
	mov	r0, #0x8
	sub	r0, r0, r1
	strh	r0, [r6, #0x34]
	mov	r0, #0x1
	strh	r0, [r6, #0x36]
	ldr	r0, .L1110+0x4
	str	r0, [r6, #0x1c]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1111:
	.align	2, 0
.L1110:
	.word	gMonFrontPicCoords
	.word	SpriteCB_AnimFaintOpponent
.Lfe39:
	.size	 SpriteCB_FaintOpponentMon,.Lfe39-SpriteCB_FaintOpponentMon
	.align	2, 0
	.type	 SpriteCB_AnimFaintOpponent,function
	.thumb_func
SpriteCB_AnimFaintOpponent:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x36]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x36]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1113	@cond_branch
	mov	r0, #0x2
	strh	r0, [r4, #0x36]
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x34]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x34]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L1114	@cond_branch
	add	r0, r4, #0
	bl	FreeSpriteOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	b	.L1113
.L1114:
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerPosition
	ldr	r1, .L1121
	ldr	r1, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r1, r1, #0x4
	add	r1, r1, r0
	ldr	r2, .L1121+0x4
	mov	r3, #0x2e
	ldrsh	r0, [r4, r3]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0xb
	ldr	r1, [r1]
	add	r1, r1, r0
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	mov	r2, #0x0
	mov	r0, #0xff
.L1119:
	strb	r2, [r1]
	add	r1, r1, #0x1
	sub	r0, r0, #0x1
	cmp	r0, #0
	bge	.L1119	@cond_branch
	ldr	r0, .L1121+0x4
	mov	r3, #0x2e
	ldrsh	r1, [r4, r3]
	add	r1, r1, r0
	ldrb	r1, [r1]
	add	r0, r4, #0
	bl	StartSpriteAnim
.L1113:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1122:
	.align	2, 0
.L1121:
	.word	gMonSpritesGfxPtr
	.word	gBattleMonForms
.Lfe40:
	.size	 SpriteCB_AnimFaintOpponent,.Lfe40-SpriteCB_AnimFaintOpponent
	.align	2, 0
	.globl	SpriteCb_ShowAsMoveTarget
	.type	 SpriteCb_ShowAsMoveTarget,function
	.thumb_func
SpriteCb_ShowAsMoveTarget:
	mov	r1, #0x8
	strh	r1, [r0, #0x34]
	add	r1, r0, #0
	add	r1, r1, #0x3e
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1f
	strh	r1, [r0, #0x36]
	ldr	r1, .L1124
	str	r1, [r0, #0x1c]
	bx	lr
.L1125:
	.align	2, 0
.L1124:
	.word	SpriteCb_BlinkVisible
.Lfe41:
	.size	 SpriteCb_ShowAsMoveTarget,.Lfe41-SpriteCb_ShowAsMoveTarget
	.align	2, 0
	.type	 SpriteCb_BlinkVisible,function
	.thumb_func
SpriteCb_BlinkVisible:
	push	{lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x34]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x34]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1127	@cond_branch
	mov	r0, #0x3e
	add	r0, r0, r3
	mov	ip, r0
	ldrb	r2, [r0]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	mov	r0, #0x8
	strh	r0, [r3, #0x34]
.L1127:
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 SpriteCb_BlinkVisible,.Lfe42-SpriteCb_BlinkVisible
	.align	2, 0
	.globl	SpriteCb_HideAsMoveTarget
	.type	 SpriteCb_HideAsMoveTarget,function
	.thumb_func
SpriteCb_HideAsMoveTarget:
	mov	r1, #0x3e
	add	r1, r1, r0
	mov	ip, r1
	mov	r1, #0x1
	ldrh	r2, [r0, #0x36]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	mov	r1, ip
	ldrb	r3, [r1]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	mov	r2, ip
	strb	r1, [r2]
	mov	r1, #0x0
	strh	r1, [r0, #0x36]
	ldr	r1, .L1129
	str	r1, [r0, #0x1c]
	bx	lr
.L1130:
	.align	2, 0
.L1129:
	.word	SpriteCallbackDummy_2
.Lfe43:
	.size	 SpriteCb_HideAsMoveTarget,.Lfe43-SpriteCb_HideAsMoveTarget
	.align	2, 0
	.globl	SpriteCb_OpponentMonFromBall
	.type	 SpriteCb_OpponentMonFromBall,function
	.thumb_func
SpriteCb_OpponentMonFromBall:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1132	@cond_branch
	ldr	r0, .L1136
	ldr	r0, [r0]
	mov	r1, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1134	@cond_branch
	ldr	r0, .L1136+0x4
	ldr	r0, [r0]
	ldr	r1, .L1136+0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1133	@cond_branch
.L1134:
	ldrh	r0, [r4, #0x32]
	bl	HasTwoFramesAnimation
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1133	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
.L1133:
	ldrh	r1, [r4, #0x32]
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x1
	bl	BattleAnimateFrontSprite
.L1132:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1137:
	.align	2, 0
.L1136:
	.word	gHitMarker
	.word	gBattleTypeFlags
	.word	0x2000002
.Lfe44:
	.size	 SpriteCb_OpponentMonFromBall,.Lfe44-SpriteCb_OpponentMonFromBall
	.align	2, 0
	.globl	sub_8039BB4
	.type	 sub_8039BB4,function
	.thumb_func
sub_8039BB4:
	ldr	r1, .L1139
	str	r1, [r0, #0x1c]
	bx	lr
.L1140:
	.align	2, 0
.L1139:
	.word	oac_poke_ally_
.Lfe45:
	.size	 sub_8039BB4,.Lfe45-sub_8039BB4
	.align	2, 0
	.type	 oac_poke_ally_,function
	.thumb_func
oac_poke_ally_:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1144
	ldrh	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1142	@cond_branch
	ldrh	r0, [r2, #0x24]
	sub	r0, r0, #0x2
	strh	r0, [r2, #0x24]
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0
	bne	.L1142	@cond_branch
	ldr	r0, .L1144+0x4
	str	r0, [r2, #0x1c]
	strh	r1, [r2, #0x30]
.L1142:
	pop	{r0}
	bx	r0
.L1145:
	.align	2, 0
.L1144:
	.word	gIntroSlideFlags
	.word	SpriteCallbackDummy_3
.Lfe46:
	.size	 oac_poke_ally_,.Lfe46-oac_poke_ally_
	.align	2, 0
	.globl	sub_80105DC
	.type	 sub_80105DC,function
	.thumb_func
sub_80105DC:
	ldr	r1, .L1147
	str	r1, [r0, #0x1c]
	bx	lr
.L1148:
	.align	2, 0
.L1147:
	.word	SpriteCallbackDummy_3
.Lfe47:
	.size	 sub_80105DC,.Lfe47-sub_80105DC
	.align	2, 0
	.type	 SpriteCallbackDummy_3,function
	.thumb_func
SpriteCallbackDummy_3:
	bx	lr
.Lfe48:
	.size	 SpriteCallbackDummy_3,.Lfe48-SpriteCallbackDummy_3
	.align	2, 0
	.globl	sub_8039C00
	.type	 sub_8039C00,function
	.thumb_func
sub_8039C00:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1152
	ldrh	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1151	@cond_branch
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x24]
	add	r0, r0, r1
	strh	r0, [r2, #0x24]
	ldrh	r0, [r2, #0x32]
	ldrh	r1, [r2, #0x26]
	add	r0, r0, r1
	strh	r0, [r2, #0x26]
.L1151:
	pop	{r0}
	bx	r0
.L1153:
	.align	2, 0
.L1152:
	.word	gIntroSlideFlags
.Lfe49:
	.size	 sub_8039C00,.Lfe49-sub_8039C00
	.align	2, 0
	.globl	DoBounceEffect
	.type	 DoBounceEffect,function
	.thumb_func
DoBounceEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	cmp	r1, #0
	beq	.L1159	@cond_branch
	ldr	r0, .L1166
	ldr	r0, [r0]
	ldr	r1, [r0, #0x4]
	lsl	r2, r6, #0x1
	add	r0, r2, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	b	.L1164
.L1167:
	.align	2, 0
.L1166:
	.word	gBattleSpritesDataPtr
.L1159:
	ldr	r0, .L1168
	ldr	r0, [r0]
	ldr	r1, [r0, #0x4]
	lsl	r2, r6, #0x1
	add	r0, r2, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
.L1164:
	and	r0, r0, r1
	add	r5, r2, #0
	cmp	r0, #0
	bne	.L1154	@cond_branch
	ldr	r0, .L1168+0x4
	bl	CreateInvisibleSpriteWithCallback
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, r8
	cmp	r0, #0x1
	bne	.L1162	@cond_branch
	ldr	r0, .L1168+0x8
	add	r0, r6, r0
	ldrb	r7, [r0]
	ldr	r2, .L1168
	ldr	r0, [r2]
	ldr	r0, [r0, #0x4]
	add	r1, r5, r6
	lsl	r1, r1, #0x2
	add	r0, r1, r0
	strb	r4, [r0, #0x2]
	ldr	r0, [r2]
	ldr	r0, [r0, #0x4]
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r2, .L1168+0xc
	lsl	r3, r4, #0x4
	add	r0, r3, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x80
	b	.L1165
.L1169:
	.align	2, 0
.L1168:
	.word	gBattleSpritesDataPtr
	.word	SpriteCB_BounceEffect
	.word	gHealthboxSpriteIds
	.word	gSprites
.L1162:
	ldr	r0, .L1170
	add	r0, r6, r0
	ldrb	r7, [r0]
	ldr	r2, .L1170+0x4
	ldr	r0, [r2]
	ldr	r0, [r0, #0x4]
	add	r1, r5, r6
	lsl	r1, r1, #0x2
	add	r0, r1, r0
	strb	r4, [r0, #0x3]
	ldr	r0, [r2]
	ldr	r0, [r0, #0x4]
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r2, .L1170+0x8
	lsl	r3, r4, #0x4
	add	r0, r3, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0xc0
.L1165:
	strh	r1, [r0, #0x34]
	add	r5, r2, #0
	add	r1, r3, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r2, r9
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	mov	r2, #0x0
	strh	r0, [r1, #0x36]
	mov	r3, sl
	lsl	r0, r3, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r1, #0x38]
	strh	r7, [r1, #0x3a]
	mov	r0, r8
	strh	r0, [r1, #0x3c]
	strh	r6, [r1, #0x2e]
	lsl	r0, r7, #0x4
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r2, [r0, #0x24]
	strh	r2, [r0, #0x26]
.L1154:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1171:
	.align	2, 0
.L1170:
	.word	gBattlerSpriteIds
	.word	gBattleSpritesDataPtr
	.word	gSprites
.Lfe50:
	.size	 DoBounceEffect,.Lfe50-DoBounceEffect
	.align	2, 0
	.globl	EndBounceEffect
	.type	 EndBounceEffect,function
	.thumb_func
EndBounceEffect:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	bne	.L1173	@cond_branch
	ldr	r6, .L1178
	ldr	r0, [r6]
	ldr	r1, [r0, #0x4]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r5, r0, #0x2
	add	r3, r5, r1
	ldrb	r1, [r3]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1172	@cond_branch
	ldr	r2, .L1178+0x4
	ldrb	r1, [r3, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r0, #0x3a]
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	DestroySprite
	ldr	r0, [r6]
	ldr	r1, [r0, #0x4]
	add	r1, r5, r1
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	b	.L1177
.L1179:
	.align	2, 0
.L1178:
	.word	gBattleSpritesDataPtr
	.word	gSprites
.L1173:
	ldr	r6, .L1180
	ldr	r0, [r6]
	ldr	r1, [r0, #0x4]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r5, r0, #0x2
	add	r3, r5, r1
	ldrb	r1, [r3]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1172	@cond_branch
	ldr	r2, .L1180+0x4
	ldrb	r1, [r3, #0x3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r0, #0x3a]
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	DestroySprite
	ldr	r0, [r6]
	ldr	r1, [r0, #0x4]
	add	r1, r5, r1
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
.L1177:
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, .L1180+0x4
	lsl	r1, r4, #0x4
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0x0
	strh	r0, [r1, #0x24]
	strh	r0, [r1, #0x26]
.L1172:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1181:
	.align	2, 0
.L1180:
	.word	gBattleSpritesDataPtr
	.word	gSprites
.Lfe51:
	.size	 EndBounceEffect,.Lfe51-EndBounceEffect
	.align	2, 0
	.type	 SpriteCB_BounceEffect,function
	.thumb_func
SpriteCB_BounceEffect:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	ldrh	r5, [r4, #0x3a]
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r1, #0x34
	ldrsh	r0, [r4, r1]
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Sin
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	add	r6, r0, r1
	ldr	r7, .L1184
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	strh	r6, [r0, #0x26]
	ldrh	r0, [r4, #0x36]
	ldrh	r1, [r4, #0x34]
	add	r0, r0, r1
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x34]
	mov	r2, #0x3a
	ldrsh	r0, [r4, r2]
	bl	GetMegaIndicatorSpriteId
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1
	bne	.L1183	@cond_branch
	cmp	r1, #0xff
	beq	.L1183	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	strh	r6, [r0, #0x26]
.L1183:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1185:
	.align	2, 0
.L1184:
	.word	gSprites
.Lfe52:
	.size	 SpriteCB_BounceEffect,.Lfe52-SpriteCB_BounceEffect
	.align	2, 0
	.globl	SpriteCb_PlayerMonFromBall
	.type	 SpriteCb_PlayerMonFromBall,function
	.thumb_func
SpriteCb_PlayerMonFromBall:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1187	@cond_branch
	ldrh	r1, [r2, #0x32]
	add	r0, r2, #0
	bl	BattleAnimateBackSprite
.L1187:
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 SpriteCb_PlayerMonFromBall,.Lfe53-SpriteCb_PlayerMonFromBall
	.align	2, 0
	.globl	sub_8039E60
	.type	 sub_8039E60,function
	.thumb_func
sub_8039E60:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_8039E9C
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1189	@cond_branch
	ldr	r0, .L1190
	str	r0, [r4, #0x1c]
.L1189:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1191:
	.align	2, 0
.L1190:
	.word	SpriteCallbackDummy_3
.Lfe54:
	.size	 sub_8039E60,.Lfe54-sub_8039E60
	.align	2, 0
	.globl	SpriteCB_TrainerThrowObject
	.type	 SpriteCB_TrainerThrowObject,function
	.thumb_func
SpriteCB_TrainerThrowObject:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r0, .L1193
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1194:
	.align	2, 0
.L1193:
	.word	sub_8039E60
.Lfe55:
	.size	 SpriteCB_TrainerThrowObject,.Lfe55-SpriteCB_TrainerThrowObject
	.align	2, 0
	.globl	sub_8039E9C
	.type	 sub_8039E9C,function
	.thumb_func
sub_8039E9C:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r0, #0x3f
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1196	@cond_branch
	ldr	r1, .L1197
	add	r0, r2, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x28
	strb	r1, [r0]
.L1196:
	pop	{r0}
	bx	r0
.L1198:
	.align	2, 0
.L1197:
	.word	gUnknown_0831ACE0
.Lfe56:
	.size	 sub_8039E9C,.Lfe56-sub_8039E9C
	.align	2, 0
	.globl	nullsub_20
	.type	 nullsub_20,function
	.thumb_func
nullsub_20:
	bx	lr
.Lfe57:
	.size	 nullsub_20,.Lfe57-nullsub_20
	.align	2, 0
	.globl	BeginBattleIntro
	.type	 BeginBattleIntro,function
	.thumb_func
BeginBattleIntro:
	push	{lr}
	bl	BattleStartClearSetData
	ldr	r0, .L1201
	mov	r1, #0x0
	strb	r1, [r0, #0x1]
	ldr	r0, .L1201+0x4
	ldr	r0, [r0]
	ldr	r2, .L1201+0x8
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r1, .L1201+0xc
	ldr	r0, .L1201+0x10
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L1202:
	.align	2, 0
.L1201:
	.word	gBattleCommunication
	.word	gBattleStruct
	.word	0x2b5
	.word	gBattleMainFunc
	.word	DoBattleIntro
.Lfe58:
	.size	 BeginBattleIntro,.Lfe58-BeginBattleIntro
	.align	2, 0
	.type	 BattleMainCB1,function
	.thumb_func
BattleMainCB1:
	push	{r4, r5, lr}
	ldr	r0, .L1209
	ldr	r0, [r0]
	bl	_call_via_r0
	ldr	r1, .L1209+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L1209+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1205	@cond_branch
	ldr	r5, .L1209+0xc
	add	r4, r1, #0
.L1207:
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r0, [r0]
	bl	_call_via_r0
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	ldr	r1, .L1209+0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L1207	@cond_branch
.L1205:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1210:
	.align	2, 0
.L1209:
	.word	gBattleMainFunc
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gBattlerControllerFuncs
.Lfe59:
	.size	 BattleMainCB1,.Lfe59-BattleMainCB1
	.align	2, 0
	.type	 BattleStartClearSetData,function
	.thumb_func
BattleStartClearSetData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r0, #0x0
	bl	TurnValuesCleanUp
	bl	SpecialStatusesClear
	ldr	r0, .L1227
	mov	r1, #0x0
	mov	r2, #0xa0
	bl	memset
	ldr	r0, .L1227+0x4
	mov	r1, #0x0
	mov	r2, #0xc
	bl	memset
	ldr	r0, .L1227+0x8
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	ldr	r0, .L1227+0xc
	mov	r1, #0x0
	mov	r2, #0x28
	bl	memset
	ldr	r0, .L1227+0x10
	mov	r1, #0x0
	mov	r2, #0x1c
	bl	memset
	ldr	r0, .L1227+0x14
	mov	r1, #0x0
	mov	r2, #0x50
	bl	memset
	mov	r5, #0x0
	mov	r4, #0x0
	mov	r6, #0x0
.L1215:
	ldr	r0, .L1227+0x18
	lsl	r3, r5, #0x2
	add	r0, r3, r0
	str	r4, [r0]
	ldr	r0, .L1227
	add	r0, r6, r0
	mov	r7, #0x2
	strb	r7, [r0, #0x19]
	ldr	r0, .L1227+0x1c
	lsl	r2, r5, #0x1
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r0, .L1227+0x20
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r0, .L1227+0x24
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r0, .L1227+0x28
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r0, .L1227+0x2c
	add	r0, r5, r0
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, .L1227+0x30
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r0, .L1227+0x34
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r0, .L1227+0x38
	ldr	r0, [r0]
	ldr	r0, [r0, #0x4]
	add	r0, r0, r3
	str	r4, [r0]
	ldr	r0, .L1227+0x3c
	add	r3, r3, r0
	str	r4, [r3]
	ldr	r0, .L1227+0x40
	ldr	r3, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x92
	add	r0, r0, r2
	strh	r4, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xb0
	add	r0, r0, r2
	strh	r4, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xc4
	add	r0, r0, r2
	strh	r4, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xcc
	add	r0, r0, r2
	strh	r4, [r0]
	lsl	r1, r5, #0x3
	add	r0, r3, #0
	add	r0, r0, #0xda
	add	r0, r0, r1
	strh	r4, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xdc
	add	r0, r0, r1
	strh	r4, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xde
	add	r0, r0, r1
	strh	r4, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xe0
	add	r0, r0, r1
	strh	r4, [r0]
	mov	r1, #0x9a
	lsl	r1, r1, #0x2
	add	r0, r3, r1
	add	r0, r0, r5
	mov	r1, #0x6
	strb	r1, [r0]
	add	r6, r6, #0x28
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L1215	@cond_branch
	ldr	r0, .L1227+0x44
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L1227+0x48
	mov	r2, #0x0
	str	r2, [r0]
	ldr	r0, .L1227+0x4c
	strb	r1, [r0]
	ldr	r0, .L1227+0x50
	strb	r1, [r0]
	ldr	r0, .L1227+0x54
	strh	r2, [r0]
	ldr	r4, .L1227+0x58
	str	r2, [r4]
	ldr	r0, .L1227+0x5c
	ldr	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1217	@cond_branch
	and	r1, r1, r7
	cmp	r1, #0
	bne	.L1219	@cond_branch
	ldr	r0, .L1227+0x60
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1219	@cond_branch
	mov	r0, #0x80
	b	.L1226
.L1228:
	.align	2, 0
.L1227:
	.word	gDisableStructs
	.word	gFieldTimers
	.word	gSideStatuses
	.word	gSideTimers
	.word	gWishFutureKnock
	.word	gBattleResults
	.word	gStatuses3
	.word	gLastMoves
	.word	gLastLandedMoves
	.word	gLastHitByType
	.word	gLastResultingMoves
	.word	gLastHitBy
	.word	gLockedMoves
	.word	gLastPrintedMoves
	.word	gBattleResources
	.word	gPalaceSelectionBattleScripts
	.word	gBattleStruct
	.word	gLastUsedMove
	.word	gFieldStatuses
	.word	gBattlerAttacker
	.word	gBattlerTarget
	.word	gBattleWeather
	.word	gHitMarker
	.word	gBattleTypeFlags
	.word	gSaveBlock2Ptr
.L1217:
	ldr	r0, .L1229
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L1219	@cond_branch
	bl	GetBattleSceneInRecordedBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1219	@cond_branch
	ldr	r0, [r4]
	mov	r1, #0x80
	orr	r0, r0, r1
.L1226:
	str	r0, [r4]
.L1219:
	ldr	r2, .L1229+0x4
	ldr	r0, .L1229+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x15]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x0
	strb	r0, [r2, #0x1d]
	mov	r0, #0x1
	strb	r0, [r2, #0xe]
	add	r0, r2, #0
	add	r0, r0, #0x27
	strb	r1, [r0]
	ldr	r0, .L1229+0xc
	strb	r1, [r0]
	ldr	r0, .L1229+0x10
	strb	r1, [r0]
	ldr	r0, .L1229+0x14
	str	r1, [r0]
	ldr	r0, .L1229+0x18
	mov	r3, #0x0
	strh	r1, [r0]
	ldr	r1, .L1229+0x1c
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	add	r0, r0, #0x20
	strb	r3, [r0]
	ldr	r0, [r1]
	ldr	r0, [r0, #0xc]
	add	r0, r0, #0x20
	strb	r3, [r0]
	ldr	r6, .L1229+0x20
	ldr	r4, .L1229+0x24
	ldr	r7, .L1229+0x28
	ldr	r0, .L1229+0x2c
	mov	ip, r0
	ldr	r1, .L1229+0x30
	mov	r8, r1
	ldr	r0, .L1229+0x34
	mov	r9, r0
	ldr	r1, .L1229+0x38
	mov	sl, r1
	ldr	r1, .L1229+0x3c
	mov	r3, #0x0
	add	r0, r1, #0x7
.L1224:
	strb	r3, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L1224	@cond_branch
	mov	r5, #0x0
	strh	r5, [r4]
	mov	r0, #0x0
	str	r0, [r7]
	mov	r1, ip
	strh	r0, [r1]
	strb	r5, [r2, #0x18]
	strb	r5, [r2, #0x19]
	mov	r0, r8
	strb	r5, [r0]
	mov	r1, r9
	strb	r5, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x6c
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x78
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x79
	strb	r5, [r0]
	mov	r0, sl
	mov	r1, #0xb
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, sl
	mov	r1, #0x59
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetFormSpeciesId
	ldr	r4, [r6]
	ldr	r2, .L1229+0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r1, [r1, #0x8]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1229+0x44
	bl	__divsi3
	add	r4, r4, #0x7b
	strb	r0, [r4]
	ldr	r0, [r6]
	add	r0, r0, #0x7a
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r0, [r6]
	strb	r5, [r0, #0x11]
	ldr	r0, [r6]
	add	r0, r0, #0x4a
	mov	r4, #0x1
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0xd8
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x8b
	strb	r5, [r0]
	bl	Random
	ldr	r1, .L1229+0x48
	strh	r0, [r1]
	mov	r0, sl
	bl	IsMonShiny
	ldr	r2, .L1229+0x4c
	and	r4, r4, r0
	lsl	r4, r4, #0x6
	ldrb	r1, [r2, #0x5]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r4
	strb	r0, [r2, #0x5]
	ldr	r0, [r6]
	mov	r1, #0x9d
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r1, r1, #0x1
	add	r0, r0, r1
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r1, r1, #0x37
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1230:
	.align	2, 0
.L1229:
	.word	0x2000002
	.word	gBattleScripting
	.word	gSaveBlock2Ptr
	.word	gMultiHitCounter
	.word	gBattleOutcome
	.word	gBattleControllerExecFlags
	.word	gPaydayMoney
	.word	gBattleResources
	.word	gBattleStruct
	.word	gPauseCounterBattle
	.word	gBattleMoveDamage
	.word	gIntroSlideFlags
	.word	gLeveledUpInBattle
	.word	gAbsentBattlerFlags
	.word	gEnemyParty
	.word	gBattleCommunication
	.word	gBaseStats
	.word	0x4fb
	.word	gRandomTurnNumber
	.word	gBattleResults
.Lfe60:
	.size	 BattleStartClearSetData,.Lfe60-BattleStartClearSetData
	.align	2, 0
	.globl	SwitchInClearSetData
	.type	 SwitchInClearSetData,function
	.thumb_func
SwitchInClearSetData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x28
	ldr	r2, .L1269
	ldr	r4, .L1269+0x4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	mov	r1, sp
	add	r0, r0, r2
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	ldrb	r0, [r4]
	bl	ClearIllusionMon
	ldr	r2, .L1269+0x8
	ldr	r3, .L1269+0xc
	ldrh	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r0, [r0]
	cmp	r0, #0x7f
	beq	.L1268	@cond_branch
	mov	r5, #0x0
	mov	ip, r3
	ldr	r3, .L1269+0x10
	mov	r9, r3
	ldr	r4, .L1269+0x14
	mov	sl, r4
	ldr	r6, .L1269+0x4
	mov	r4, #0x5c
	mov	r2, r9
	add	r2, r2, #0x18
	mov	r1, #0x6
.L1236:
	ldrb	r0, [r6]
	mul	r0, r0, r4
	add	r0, r5, r0
	add	r0, r0, r2
	strb	r1, [r0]
	add	r5, r5, #0x1
	cmp	r5, #0x7
	ble	.L1236	@cond_branch
	mov	r5, #0x0
	mov	r7, sl
	ldrb	r7, [r7]
	cmp	r5, r7
	bge	.L1232	@cond_branch
	ldr	r0, .L1269+0x18
	mov	r8, r0
	mov	r6, #0x0
	ldr	r4, .L1269
.L1241:
	mov	r0, #0x5c
	mul	r0, r0, r5
	mov	r1, r8
	add	r2, r0, r1
	ldr	r1, [r2]
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1242	@cond_branch
	ldrb	r0, [r4, #0x17]
	ldr	r3, .L1269+0x4
	ldrb	r3, [r3]
	cmp	r0, r3
	bne	.L1242	@cond_branch
	ldr	r0, .L1269+0x1c
	and	r1, r1, r0
	str	r1, [r2]
.L1242:
	ldr	r7, .L1269+0x20
	add	r2, r6, r7
	ldr	r1, [r2]
	mov	r0, #0x18
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1240	@cond_branch
	ldrb	r0, [r4, #0x18]
	ldr	r3, .L1269+0x4
	ldrb	r3, [r3]
	cmp	r0, r3
	bne	.L1240	@cond_branch
	mov	r0, #0x19
	neg	r0, r0
	and	r1, r1, r0
	str	r1, [r2]
	mov	r0, #0x0
	strb	r0, [r4, #0x18]
.L1240:
	add	r6, r6, #0x4
	add	r4, r4, #0x28
	add	r5, r5, #0x1
	mov	r7, sl
	ldrb	r7, [r7]
	cmp	r5, r7
	blt	.L1241	@cond_branch
.L1232:
	mov	r1, ip
	ldrh	r0, [r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r2, .L1269+0x8
	add	r1, r1, r2
	ldrh	r0, [r1]
	cmp	r0, #0x7f
	bne	.L1245	@cond_branch
.L1268:
	ldr	r1, .L1269+0x10
	ldr	r3, .L1269+0x4
	ldrb	r2, [r3]
	mov	r0, #0x5c
	mul	r2, r2, r0
	add	r1, r1, #0x54
	add	r2, r2, r1
	ldr	r0, [r2]
	ldr	r1, .L1269+0x24
	and	r0, r0, r1
	str	r0, [r2]
	ldr	r0, .L1269+0x20
	ldrb	r1, [r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	ldr	r2, .L1269+0x28
	and	r0, r0, r2
	str	r0, [r1]
	mov	r5, #0x0
	ldr	r0, .L1269+0x14
	mov	sl, r0
	ldrb	r3, [r0]
	cmp	r5, r3
	bge	.L1247	@cond_branch
	ldr	r7, .L1269+0x4
	mov	r6, #0x0
.L1249:
	ldrb	r0, [r7]
	bl	GetBattlerSide
	add	r4, r0, #0
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSide
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.L1248	@cond_branch
	ldr	r1, .L1269+0x20
	lsl	r0, r5, #0x2
	add	r2, r0, r1
	ldr	r1, [r2]
	mov	r0, #0x18
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1248	@cond_branch
	ldr	r0, .L1269
	add	r0, r6, r0
	ldrb	r0, [r0, #0x18]
	ldrb	r4, [r7]
	cmp	r0, r4
	bne	.L1248	@cond_branch
	mov	r0, #0x19
	neg	r0, r0
	and	r1, r1, r0
	mov	r0, #0x10
	orr	r1, r1, r0
	str	r1, [r2]
.L1248:
	add	r6, r6, #0x28
	add	r5, r5, #0x1
	ldr	r0, .L1269+0x14
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1249	@cond_branch
.L1247:
	ldr	r0, .L1269+0x20
	ldr	r5, .L1269+0x4
	ldrb	r4, [r5]
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	cmp	r0, #0
	bge	.L1253	@cond_branch
	ldr	r3, .L1269+0x10
	mov	r2, #0x5c
	mov	r0, r4
	mul	r0, r0, r2
	add	r0, r0, r3
	ldrh	r5, [r0, #0x2]
	ldrh	r1, [r0, #0x4]
	strh	r1, [r0, #0x2]
	ldr	r7, .L1269+0x4
	ldrb	r0, [r7]
	mul	r0, r0, r2
	add	r0, r0, r3
	strh	r5, [r0, #0x4]
	b	.L1253
.L1270:
	.align	2, 0
.L1269:
	.word	gDisableStructs
	.word	gActiveBattler
	.word	gBattleMoves
	.word	gCurrentMove
	.word	gBattleMons
	.word	gBattlersCount
	.word	gBattleMons+0x54
	.word	-0x4000001
	.word	gStatuses3
	.word	0x15100007
	.word	0x43f
.L1245:
	ldr	r0, .L1271
	ldrb	r1, [r0]
	mov	r0, #0x5c
	mul	r0, r0, r1
	mov	r1, r9
	add	r1, r1, #0x54
	add	r0, r0, r1
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r2, .L1271
	ldrb	r0, [r2]
	lsl	r0, r0, #0x2
	ldr	r3, .L1271+0x4
	add	r0, r0, r3
	str	r1, [r0]
.L1253:
	mov	r5, #0x0
	ldr	r4, .L1271+0x8
	mov	r9, r4
	ldr	r7, .L1271+0xc
	mov	ip, r7
	mov	r0, sl
	ldrb	r0, [r0]
	cmp	r5, r0
	bge	.L1255	@cond_branch
	ldr	r1, .L1271+0x10
	mov	r8, r1
	ldr	r7, .L1271+0x14
	ldr	r4, .L1271
	ldr	r6, .L1271+0x18
.L1257:
	mov	r0, #0x5c
	mul	r0, r0, r5
	mov	r2, r8
	add	r3, r0, r2
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r0, [r0]
	lsl	r2, r0, #0x10
	ldr	r1, [r3]
	add	r0, r1, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L1258	@cond_branch
	bic	r1, r1, r2
	str	r1, [r3]
.L1258:
	ldr	r1, [r3]
	mov	r0, #0x80
	lsl	r0, r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1256	@cond_branch
	ldr	r0, [r6]
	add	r0, r5, r0
	ldrb	r0, [r0, #0x13]
	ldrb	r2, [r4]
	cmp	r0, r2
	bne	.L1256	@cond_branch
	ldr	r0, .L1271+0x1c
	and	r1, r1, r0
	str	r1, [r3]
.L1256:
	add	r5, r5, #0x1
	mov	r3, sl
	ldrb	r3, [r3]
	cmp	r5, r3
	blt	.L1257	@cond_branch
.L1255:
	ldr	r6, .L1271
	ldrb	r0, [r6]
	add	r0, r0, ip
	mov	r7, #0x0
	strb	r7, [r0]
	ldrb	r0, [r6]
	ldr	r4, .L1271+0x20
	add	r0, r0, r4
	strb	r7, [r0]
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	mov	r5, r9
	add	r0, r0, r5
	mov	r1, #0x0
	mov	r2, #0x28
	bl	memset
	ldr	r2, .L1271+0x24
	ldr	r0, .L1271+0x28
	ldrh	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r0, [r0]
	cmp	r0, #0x7f
	bne	.L1261	@cond_branch
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	mov	r1, sp
	ldrb	r1, [r1, #0xe]
	strb	r1, [r0, #0xe]
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	mov	r1, sp
	ldrb	r1, [r1, #0x18]
	strb	r1, [r0, #0x18]
	ldrb	r0, [r6]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r5
	mov	r0, sp
	ldrb	r2, [r0, #0x12]
	lsl	r2, r2, #0x1c
	mov	r4, #0xf
	lsr	r2, r2, #0x1c
	ldrb	r3, [r1, #0x12]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x12]
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	mov	r1, sp
	ldrb	r1, [r1, #0x12]
	lsr	r1, r1, #0x4
	lsl	r1, r1, #0x4
	ldrb	r2, [r0, #0x12]
	and	r4, r4, r2
	orr	r4, r4, r1
	strb	r4, [r0, #0x12]
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	mov	r1, sp
	ldrb	r1, [r1, #0x17]
	strb	r1, [r0, #0x17]
.L1261:
	ldr	r0, .L1271+0x2c
	mov	r5, #0x0
	strh	r7, [r0]
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r9
	mov	r1, #0x2
	strb	r1, [r0, #0x19]
	ldrb	r0, [r6]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r9
	mov	r0, sp
	ldrb	r0, [r0, #0x1a]
	mov	r2, #0x2
	and	r2, r2, r0
	ldrb	r3, [r1, #0x1a]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r1, .L1271+0x30
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r7, [r0]
	ldr	r1, .L1271+0x34
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r7, [r0]
	ldr	r1, .L1271+0x38
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r7, [r0]
	ldr	r1, .L1271+0x3c
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r7, [r0]
	ldr	r1, .L1271+0x40
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r7, [r0]
	ldr	r1, .L1271+0x44
	ldrb	r0, [r6]
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r4, .L1271+0x18
	ldr	r2, [r4]
	ldrb	r1, [r6]
	lsl	r1, r1, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x92
	add	r0, r0, r1
	strh	r7, [r0]
	ldr	r0, .L1271+0x48
	add	r2, r2, r0
	ldrb	r1, [r6]
	add	r2, r2, r1
	strb	r5, [r2]
	ldr	r2, [r4]
	ldrb	r1, [r6]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xda
	add	r0, r0, r1
	strh	r7, [r0]
	ldrb	r1, [r6]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xdc
	add	r0, r0, r1
	strh	r7, [r0]
	ldrb	r1, [r6]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xde
	add	r0, r0, r1
	strh	r7, [r0]
	ldrb	r1, [r6]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xe0
	add	r0, r0, r1
	strh	r7, [r0]
	mov	r3, #0xb0
	lsl	r3, r3, #0x2
	add	r2, r2, r3
	ldr	r3, .L1271+0x14
	ldrb	r0, [r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldr	r1, [r0]
	ldrb	r0, [r2]
	bic	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, [r4]
	add	r1, r1, #0x8b
	ldrb	r0, [r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldr	r2, [r0]
	ldrb	r0, [r1]
	bic	r0, r0, r2
	strb	r0, [r1]
	mov	r5, #0x0
	ldr	r0, .L1271+0x4c
	mov	r9, r4
	ldrb	r0, [r0]
	cmp	r5, r0
	bge	.L1263	@cond_branch
	ldr	r6, .L1271
	mov	r8, r9
	mov	r7, #0x0
.L1265:
	ldrb	r4, [r6]
	cmp	r5, r4
	beq	.L1266	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSide
	add	r4, r0, #0
	ldrb	r0, [r6]
	bl	GetBattlerSide
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.L1266	@cond_branch
	mov	r1, r8
	ldr	r0, [r1]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x92
	add	r0, r0, r1
	strh	r7, [r0]
.L1266:
	mov	r3, r8
	ldr	r2, [r3]
	ldrb	r1, [r6]
	lsl	r1, r1, #0x1
	lsl	r0, r5, #0x3
	add	r1, r1, r0
	add	r2, r2, #0xda
	add	r2, r2, r1
	strh	r7, [r2]
	add	r5, r5, #0x1
	ldr	r0, .L1271+0x4c
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1265	@cond_branch
.L1263:
	mov	r4, r9
	ldr	r3, [r4]
	ldr	r5, .L1271
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r1, r3, #0
	add	r1, r1, #0xc4
	add	r1, r1, r0
	mov	r2, #0x0
	strh	r2, [r1]
	ldr	r0, .L1271+0x50
	ldr	r0, [r0]
	ldr	r1, [r0, #0x4]
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	str	r2, [r1]
	ldr	r0, .L1271+0x28
	strh	r2, [r0]
	add	r3, r3, #0xd6
	mov	r0, #0xff
	strb	r0, [r3]
	ldrb	r0, [r5]
	bl	ClearBattlerMoveHistory
	ldrb	r0, [r5]
	bl	ClearBattlerAbilityHistory
	add	sp, sp, #0x28
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1272:
	.align	2, 0
.L1271:
	.word	gActiveBattler
	.word	gStatuses3
	.word	gDisableStructs
	.word	gActionSelectionCursor
	.word	gBattleMons+0x54
	.word	gBitTable
	.word	gBattleStruct
	.word	-0x2001
	.word	gMoveSelectionCursor
	.word	gBattleMoves
	.word	gCurrentMove
	.word	gMoveResultFlags
	.word	gLastMoves
	.word	gLastLandedMoves
	.word	gLastHitByType
	.word	gLastResultingMoves
	.word	gLastPrintedMoves
	.word	gLastHitBy
	.word	0x33f
	.word	gBattlersCount
	.word	gBattleResources
.Lfe61:
	.size	 SwitchInClearSetData,.Lfe61-SwitchInClearSetData
	.align	2, 0
	.globl	FaintClearSetData
	.type	 FaintClearSetData,function
	.thumb_func
FaintClearSetData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r5, #0x0
	ldr	r7, .L1295
	ldr	r4, .L1295+0x4
	ldr	r0, .L1295+0x8
	mov	r9, r0
	ldr	r1, .L1295+0xc
	mov	r8, r1
	ldr	r2, .L1295+0x10
	mov	sl, r2
	ldr	r0, .L1295+0x14
	mov	ip, r0
	add	r6, r4, #0
	mov	r3, #0x5c
	add	r2, r7, #0
	add	r2, r2, #0x18
	mov	r1, #0x6
.L1277:
	ldrb	r0, [r6]
	mul	r0, r0, r3
	add	r0, r5, r0
	add	r0, r0, r2
	strb	r1, [r0]
	add	r5, r5, #0x1
	cmp	r5, #0x7
	ble	.L1277	@cond_branch
	ldrb	r1, [r4]
	mov	r0, #0x5c
	mul	r0, r0, r1
	add	r2, r7, #0
	add	r2, r2, #0x54
	add	r0, r0, r2
	mov	r1, #0x0
	str	r1, [r0]
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	str	r1, [r0]
	mov	r5, #0x0
	mov	r1, r8
	ldrb	r1, [r1]
	cmp	r5, r1
	bge	.L1280	@cond_branch
	ldr	r0, .L1295+0x18
	mov	r9, r0
	add	r3, r2, #0
	mov	r6, #0x0
	ldr	r7, .L1295+0x1c
.L1282:
	ldr	r1, [r3]
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1283	@cond_branch
	ldr	r2, .L1295+0x20
	add	r0, r6, r2
	ldrb	r0, [r0, #0x17]
	ldrb	r2, [r4]
	cmp	r0, r2
	bne	.L1283	@cond_branch
	ldr	r0, .L1295+0x24
	and	r1, r1, r0
	str	r1, [r3]
.L1283:
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r0, [r0]
	lsl	r2, r0, #0x10
	ldr	r1, [r3]
	add	r0, r1, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L1284	@cond_branch
	bic	r1, r1, r2
	str	r1, [r3]
.L1284:
	ldr	r1, [r3]
	mov	r0, #0x80
	lsl	r0, r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1281	@cond_branch
	mov	r2, r9
	ldr	r0, [r2]
	add	r0, r5, r0
	ldrb	r0, [r0, #0x13]
	ldrb	r2, [r4]
	cmp	r0, r2
	bne	.L1281	@cond_branch
	ldr	r0, .L1295+0x28
	and	r1, r1, r0
	str	r1, [r3]
.L1281:
	add	r3, r3, #0x5c
	add	r6, r6, #0x28
	add	r5, r5, #0x1
	mov	r0, r8
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1282	@cond_branch
.L1280:
	ldr	r7, .L1295+0x4
	ldrb	r0, [r7]
	add	r0, r0, sl
	mov	r1, #0x0
	strb	r1, [r0]
	ldrb	r0, [r7]
	add	r0, r0, ip
	strb	r1, [r0]
	ldrb	r1, [r7]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r2, .L1295+0x20
	add	r0, r0, r2
	mov	r1, #0x0
	mov	r2, #0x28
	bl	memset
	ldr	r3, .L1295+0x2c
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r0, #0x2
	neg	r0, r0
	mov	r9, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	mov	sl, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r6, #0x5
	neg	r6, r6
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r0, #0x9
	neg	r0, r0
	mov	r8, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r5, #0x11
	neg	r5, r5
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r0, #0x21
	neg	r0, r0
	mov	ip, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r4, #0x7f
	add	r0, r4, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	mov	r0, sl
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	mov	r0, r8
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	mov	r0, #0x61
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	add	r0, r4, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x2]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1, #0x2]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x2]
	mov	r0, sl
	and	r0, r0, r2
	strb	r0, [r1, #0x2]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x2]
	and	r6, r6, r1
	strb	r6, [r0, #0x2]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x4
	add	r1, r1, r3
	ldrb	r2, [r1, #0x2]
	mov	r0, r8
	and	r0, r0, r2
	strb	r0, [r1, #0x2]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x2]
	and	r5, r5, r1
	strb	r5, [r0, #0x2]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x2]
	mov	r2, ip
	and	r2, r2, r1
	strb	r2, [r0, #0x2]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x3]
	mov	r2, r9
	and	r2, r2, r1
	strb	r2, [r0, #0x3]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x2]
	and	r4, r4, r1
	strb	r4, [r0, #0x2]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x3]
	mov	r2, sl
	and	r2, r2, r1
	strb	r2, [r0, #0x3]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x3]
	mov	r2, r8
	and	r2, r2, r1
	strb	r2, [r0, #0x3]
	ldrb	r1, [r7]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L1295+0x20
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0, #0x19]
	ldr	r1, .L1295+0x30
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r3, #0x0
	strh	r3, [r0]
	ldr	r1, .L1295+0x34
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r3, [r0]
	ldr	r1, .L1295+0x38
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r3, [r0]
	ldr	r1, .L1295+0x3c
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r3, [r0]
	ldr	r1, .L1295+0x40
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r3, [r0]
	ldr	r1, .L1295+0x44
	ldrb	r0, [r7]
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r4, .L1295+0x18
	ldr	r2, [r4]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x1
	add	r0, r2, #0
	add	r0, r0, #0xc4
	add	r0, r0, r1
	strh	r3, [r0]
	ldr	r0, .L1295+0x48
	add	r2, r2, r0
	ldrb	r1, [r7]
	add	r2, r2, r1
	strb	r3, [r2]
	ldr	r2, [r4]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x92
	add	r0, r0, r1
	strh	r3, [r0]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xda
	add	r0, r0, r1
	strh	r3, [r0]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xdc
	add	r0, r0, r1
	strh	r3, [r0]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xde
	add	r0, r0, r1
	strh	r3, [r0]
	ldrb	r1, [r7]
	lsl	r1, r1, #0x3
	add	r0, r2, #0
	add	r0, r0, #0xe0
	add	r0, r0, r1
	strh	r3, [r0]
	add	r2, r2, #0x8b
	ldr	r1, .L1295+0x1c
	ldrb	r0, [r7]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrb	r0, [r2]
	bic	r0, r0, r1
	strb	r0, [r2]
	mov	r5, #0x0
	ldr	r0, .L1295+0xc
	ldrb	r0, [r0]
	cmp	r5, r0
	bge	.L1288	@cond_branch
	add	r6, r7, #0
	mov	r8, r4
	mov	r7, #0x0
.L1290:
	ldrb	r2, [r6]
	cmp	r5, r2
	beq	.L1291	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSide
	add	r4, r0, #0
	ldrb	r0, [r6]
	bl	GetBattlerSide
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.L1291	@cond_branch
	mov	r1, r8
	ldr	r0, [r1]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x92
	add	r0, r0, r1
	strh	r7, [r0]
.L1291:
	mov	r0, r8
	ldr	r2, [r0]
	ldrb	r1, [r6]
	lsl	r1, r1, #0x1
	lsl	r0, r5, #0x3
	add	r1, r1, r0
	add	r2, r2, #0xda
	add	r2, r2, r1
	strh	r7, [r2]
	add	r5, r5, #0x1
	ldr	r0, .L1295+0xc
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1290	@cond_branch
.L1288:
	ldr	r0, .L1295+0x4c
	ldr	r0, [r0]
	ldr	r1, [r0, #0x4]
	ldr	r7, .L1295+0x4
	ldrb	r0, [r7]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r5, .L1295
	ldrb	r0, [r7]
	mov	r4, #0x5c
	mov	r1, r0
	mul	r1, r1, r4
	add	r1, r1, r5
	ldrh	r0, [r1]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	ldrb	r1, [r1, #0x1]
	lsr	r1, r1, #0x3
	bl	GetFormSpeciesId
	ldrb	r1, [r7]
	mov	r2, r1
	mul	r2, r2, r4
	add	r2, r2, r5
	ldr	r6, .L1295+0x50
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r1, #0x6]
	add	r2, r2, #0x22
	strb	r0, [r2]
	ldrb	r0, [r7]
	mov	r1, r0
	mul	r1, r1, r4
	add	r1, r1, r5
	b	.L1294
.L1296:
	.align	2, 0
.L1295:
	.word	gBattleMons
	.word	gActiveBattler
	.word	gStatuses3
	.word	gBattlersCount
	.word	gActionSelectionCursor
	.word	gMoveSelectionCursor
	.word	gBattleStruct
	.word	gBitTable
	.word	gDisableStructs
	.word	-0x4000001
	.word	-0x2001
	.word	gProtectStructs
	.word	gLastMoves
	.word	gLastLandedMoves
	.word	gLastHitByType
	.word	gLastResultingMoves
	.word	gLastPrintedMoves
	.word	gLastHitBy
	.word	0x33f
	.word	gBattleResources
	.word	gBaseStats
.L1294:
	ldrh	r0, [r1]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	ldrb	r1, [r1, #0x1]
	lsr	r1, r1, #0x3
	bl	GetFormSpeciesId
	ldrb	r1, [r7]
	mov	r2, r1
	mul	r2, r2, r4
	add	r2, r2, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r1, #0x7]
	add	r2, r2, #0x23
	strb	r0, [r2]
	ldrb	r0, [r7]
	mul	r0, r0, r4
	add	r0, r0, r5
	add	r0, r0, #0x24
	mov	r1, #0x9
	strb	r1, [r0]
	ldrb	r0, [r7]
	bl	ClearBattlerMoveHistory
	ldrb	r0, [r7]
	bl	ClearBattlerAbilityHistory
	ldr	r5, .L1297
	ldrb	r0, [r7]
	lsl	r1, r0, #0x1
	add	r1, r1, r5
	ldrh	r4, [r1]
	bl	GetBattlerPosition
	mov	r1, #0x1
	and	r1, r1, r0
	add	r0, r4, #0
	bl	UndoFormChange
	ldrb	r0, [r7]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1293	@cond_branch
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	bl	UndoMegaEvolution
.L1293:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1298:
	.align	2, 0
.L1297:
	.word	gBattlerPartyIndexes
.Lfe62:
	.size	 FaintClearSetData,.Lfe62-FaintClearSetData
	.align	2, 0
	.type	 DoBattleIntro,function
	.thumb_func
DoBattleIntro:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x30
	ldr	r0, .L1438
	ldr	r0, [r0]
	ldr	r1, .L1438+0x4
	add	r1, r1, r0
	mov	r8, r1
	ldrb	r0, [r1]
	cmp	r0, #0x14
	bls	.LCB11525
	bl	.L1299	@far jump
.LCB11525:
	lsl	r0, r0, #0x2
	ldr	r1, .L1438+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1439:
	.align	2, 0
.L1438:
	.word	gBattleStruct
	.word	0x2b5
	.word	.L1424
	.align	2, 0
	.align	2, 0
.L1424:
	.word	.L1301
	.word	.L1302
	.word	.L1306
	.word	.L1308
	.word	.L1310
	.word	.L1350
	.word	.L1368
	.word	.L1370
	.word	.L1372
	.word	.L1378
	.word	.L1381
	.word	.L1383
	.word	.L1386
	.word	.L1387
	.word	.L1394
	.word	.L1396
	.word	.L1398
	.word	.L1403
	.word	.L1409
	.word	.L1412
	.word	.L1416
.L1301:
	ldr	r4, .L1440
	ldr	r0, .L1440+0x4
	ldrb	r0, [r0, #0x1]
	strb	r0, [r4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	BtlController_EmitGetMonData
	ldrb	r0, [r4]
	b	.L1426
.L1441:
	.align	2, 0
.L1440:
	.word	gActiveBattler
	.word	gBattleCommunication
.L1302:
	ldr	r0, .L1442
	ldr	r2, [r0]
	cmp	r2, #0
	beq	.LCB11569
	b	.L1299	@long jump
.LCB11569:
	ldr	r0, .L1442+0x4
	ldrb	r1, [r0, #0x1]
	add	r1, r1, #0x1
	strb	r1, [r0, #0x1]
	ldr	r0, .L1442+0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.LCB11585
	b	.L1413	@long jump
.LCB11585:
	mov	r0, r8
	strb	r2, [r0]
	b	.L1299
.L1443:
	.align	2, 0
.L1442:
	.word	gBattleControllerExecFlags
	.word	gBattleCommunication
	.word	gBattlersCount
.L1306:
	ldr	r0, .L1444
	ldr	r5, [r0]
	cmp	r5, #0
	beq	.LCB11602
	b	.L1299	@long jump
.LCB11602:
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	ldr	r4, .L1444+0x4
	strb	r0, [r4]
	ldr	r0, .L1444+0x8
	ldrb	r1, [r0]
	mov	r0, #0x0
	bl	BtlController_EmitIntroSlide
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
	ldr	r0, .L1444+0xc
	strb	r5, [r0]
	strb	r5, [r0, #0x1]
	b	.L1413
.L1445:
	.align	2, 0
.L1444:
	.word	gBattleControllerExecFlags
	.word	gActiveBattler
	.word	gBattleTerrain
	.word	gBattleCommunication
.L1308:
	ldr	r0, .L1446
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.LCB11635
	b	.L1299	@long jump
.LCB11635:
	b	.L1427
.L1447:
	.align	2, 0
.L1446:
	.word	gBattleControllerExecFlags
.L1310:
	ldr	r1, .L1448
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L1448+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB11654
	b	.L1312	@long jump
.LCB11654:
	mov	r0, #0x5c
	mov	r9, r0
	ldr	r2, .L1448+0x8
	mov	sl, r2
	add	r7, r1, #0
.L1314:
	ldr	r1, .L1448+0xc
	ldr	r0, [r1]
	mov	r1, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1315	@cond_branch
	ldr	r4, .L1448
	ldrb	r0, [r4]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1315	@cond_branch
	ldrb	r0, [r4]
	mov	r2, r9
	mul	r2, r2, r0
	add	r0, r2, #0
	add	r0, r0, sl
	mov	r1, #0x0
	mov	r2, #0x5c
	bl	memset
	b	.L1316
.L1449:
	.align	2, 0
.L1448:
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gBattleMons
	.word	gBattleTypeFlags
.L1315:
	ldrb	r1, [r7]
	mov	r0, r9
	mul	r0, r0, r1
	add	r0, r0, sl
	ldr	r2, .L1450
	ldr	r2, [r2]
	lsl	r1, r1, #0x9
	add	r1, r1, r2
	ldr	r2, .L1450+0x4
	add	r1, r1, r2
	mov	r2, #0x5c
	bl	memcpy
	ldrb	r0, [r7]
	mov	r1, r9
	mul	r1, r1, r0
	add	r1, r1, sl
	ldrh	r0, [r1]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	ldrb	r1, [r1, #0x1]
	lsr	r1, r1, #0x3
	bl	GetFormSpeciesId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r7]
	mov	r2, r9
	mul	r2, r2, r1
	add	r2, r2, sl
	ldr	r3, .L1450+0x8
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r1, #0x6]
	add	r2, r2, #0x22
	strb	r0, [r2]
	ldrb	r0, [r7]
	mov	r2, r9
	mul	r2, r2, r0
	add	r0, r2, #0
	add	r0, r0, sl
	ldrb	r1, [r1, #0x7]
	add	r0, r0, #0x23
	strb	r1, [r0]
	ldrb	r0, [r7]
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, sl
	add	r0, r0, #0x24
	mov	r1, #0x9
	strb	r1, [r0]
	ldrb	r0, [r7]
	mov	r2, r9
	mul	r2, r2, r0
	add	r2, r2, sl
	ldrh	r0, [r2]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	ldrb	r1, [r2, #0x17]
	lsr	r1, r1, #0x6
	ldrb	r2, [r2, #0x1]
	lsr	r2, r2, #0x3
	bl	GetAbilityBySpecies
	ldrb	r1, [r7]
	mov	r2, r9
	mul	r2, r2, r1
	add	r1, r2, #0
	add	r1, r1, sl
	strh	r0, [r1, #0x20]
	ldrb	r0, [r7]
	bl	GetBattlerSide
	ldr	r1, .L1450+0xc
	ldr	r1, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r1, r1, #0x9a
	add	r1, r1, r0
	ldrb	r0, [r7]
	mov	r2, r9
	mul	r2, r2, r0
	add	r0, r2, #0
	add	r0, r0, sl
	ldrh	r0, [r0, #0x2a]
	strh	r0, [r1]
	ldrb	r0, [r7]
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r2, .L1450+0x10
	add	r0, r0, r2
	mov	r1, #0x0
	str	r1, [r0]
	mov	r6, #0x0
	ldr	r4, .L1450+0x14
	mov	r3, #0x5c
	ldr	r2, .L1450+0x18
	mov	r1, #0x6
.L1320:
	ldrb	r0, [r4]
	mul	r0, r0, r3
	add	r0, r6, r0
	add	r0, r0, r2
	strb	r1, [r0]
	add	r6, r6, #0x1
	cmp	r6, #0x7
	ble	.L1320	@cond_branch
	mov	r6, #0x0
.L1325:
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L1450+0x1c
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	cmp	r0, #0
	beq	.L1324	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	ldr	r1, .L1450+0x20
	cmp	r0, r1
	beq	.L1324	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	ldr	r5, .L1450+0x24
	ldrb	r2, [r5]
	cmp	r0, r2
	bls	.L1324	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strb	r0, [r5]
.L1324:
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L1325	@cond_branch
.L1316:
	ldr	r4, .L1450+0x14
	ldrb	r0, [r4]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1331	@cond_branch
	cmp	r0, #0x1
	bgt	.L1343	@cond_branch
	cmp	r0, #0
	beq	.L1339	@cond_branch
	b	.L1329
.L1451:
	.align	2, 0
.L1450:
	.word	gBattleResources
	.word	0x824
	.word	gBaseStats
	.word	gBattleStruct
	.word	gBattleMons+0x54
	.word	gActiveBattler
	.word	gBattleMons+0x18
	.word	gPlayerParty
	.word	0x4b7
	.word	gMaxPartyLevel
.L1343:
	cmp	r0, #0x2
	beq	.L1334	@cond_branch
	cmp	r0, #0x3
	beq	.L1336	@cond_branch
	b	.L1329
.L1331:
	ldr	r1, .L1452
	ldr	r0, [r1]
	mov	r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1339	@cond_branch
	b	.L1337
.L1453:
	.align	2, 0
.L1452:
	.word	gBattleTypeFlags
.L1334:
	ldr	r2, .L1454
	ldr	r0, [r2]
	ldr	r1, .L1454+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1329	@cond_branch
	b	.L1339
.L1455:
	.align	2, 0
.L1454:
	.word	gBattleTypeFlags
	.word	0x400040
.L1336:
	ldr	r0, .L1456
	ldr	r1, [r0]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1337	@cond_branch
	ldr	r0, .L1456+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1329	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0xf
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1339	@cond_branch
	ldr	r0, .L1456+0x8
	ldrh	r1, [r0]
	ldr	r0, .L1456+0xc
	cmp	r1, r0
	beq	.L1329	@cond_branch
.L1339:
	mov	r0, #0x0
	bl	BtlController_EmitDrawTrainerPic
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
	b	.L1329
.L1457:
	.align	2, 0
.L1456:
	.word	gBattleTypeFlags
	.word	0x8040
	.word	gTrainerBattleOpponent_B
	.word	0xffff
.L1337:
	mov	r0, #0x0
	bl	BtlController_EmitLoadMonSprite
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
	ldr	r1, .L1458
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1458+0x4
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L1458+0x8
	strh	r0, [r1, #0x20]
.L1329:
	ldr	r1, .L1458+0xc
	ldr	r0, [r1]
	mov	r1, #0x80
	lsl	r1, r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1313	@cond_branch
	bl	BattleArena_InitPoints
.L1313:
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	ldr	r1, .L1458+0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1]
	cmp	r0, r1
	bcs	.LCB12055
	b	.L1314	@long jump
.LCB12055:
.L1312:
	ldr	r0, .L1458+0xc
	ldr	r0, [r0]
	mov	r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB12063
	b	.L1427	@long jump
.LCB12063:
	mov	r0, #0x7
	b	.L1428
.L1459:
	.align	2, 0
.L1458:
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
	.word	gBattleResults
	.word	gBattleTypeFlags
	.word	gBattlersCount
.L1350:
	ldr	r0, .L1460
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.LCB12083
	b	.L1299	@long jump
.LCB12083:
	mov	r6, #0x0
	add	r2, sp, #0x4
	mov	r9, r2
	mov	r7, r9
	mov	r5, sp
.L1355:
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L1460+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	cmp	r0, #0
	beq	.L1357	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	ldr	r1, .L1460+0x8
	cmp	r0, r1
	bne	.L1356	@cond_branch
.L1357:
	ldr	r0, .L1460+0xc
	strh	r0, [r5]
	mov	r0, #0x0
	b	.L1429
.L1461:
	.align	2, 0
.L1460:
	.word	gBattleControllerExecFlags
	.word	gEnemyParty
	.word	0x4b7
	.word	0xffff
.L1356:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	strh	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
.L1429:
	str	r0, [r7]
	add	r7, r7, #0x8
	add	r5, r5, #0x8
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L1355	@cond_branch
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	ldr	r4, .L1462
	strb	r0, [r4]
	mov	r0, #0x0
	mov	r1, sp
	mov	r2, #0x80
	bl	BtlController_EmitDrawPartyStatusSummary
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
	mov	r6, #0x0
	mov	r7, r9
	mov	r5, sp
.L1363:
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L1462+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	cmp	r0, #0
	beq	.L1365	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	ldr	r1, .L1462+0x8
	cmp	r0, r1
	bne	.L1364	@cond_branch
.L1365:
	ldr	r0, .L1462+0xc
	strh	r0, [r5]
	mov	r0, #0x0
	b	.L1430
.L1463:
	.align	2, 0
.L1462:
	.word	gActiveBattler
	.word	gPlayerParty
	.word	0x4b7
	.word	0xffff
.L1364:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	strh	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
.L1430:
	str	r0, [r7]
	add	r7, r7, #0x8
	add	r5, r5, #0x8
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L1363	@cond_branch
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	ldr	r4, .L1464
	strb	r0, [r4]
	mov	r0, #0x0
	mov	r1, sp
	mov	r2, #0x80
	bl	BtlController_EmitDrawPartyStatusSummary
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
	b	.L1413
.L1465:
	.align	2, 0
.L1464:
	.word	gActiveBattler
.L1368:
	ldr	r0, .L1466
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.LCB12260
	b	.L1299	@long jump
.LCB12260:
	b	.L1427
.L1467:
	.align	2, 0
.L1466:
	.word	gBattleControllerExecFlags
.L1370:
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsBattlerMarkedForControllerExec
	cmp	r0, #0
	beq	.LCB12279
	b	.L1299	@long jump
.LCB12279:
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	PrepareStringBattle
	b	.L1413
.L1372:
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsBattlerMarkedForControllerExec
	cmp	r0, #0
	beq	.LCB12301
	b	.L1299	@long jump
.LCB12301:
	ldr	r0, .L1468
	ldr	r0, [r0]
	mov	r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB12308
	b	.L1427	@long jump
.LCB12308:
	mov	r0, #0xf
.L1428:
	mov	r1, r8
	strb	r0, [r1]
	b	.L1299
.L1469:
	.align	2, 0
.L1468:
	.word	gBattleTypeFlags
.L1378:
	ldr	r0, .L1470
	ldr	r0, [r0]
	mov	r1, #0x82
	lsl	r1, r1, #0x18
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	cmp	r0, r1
	bne	.L1379	@cond_branch
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x1
	bl	PrepareStringBattle
	b	.L1427
.L1471:
	.align	2, 0
.L1470:
	.word	gBattleTypeFlags
.L1379:
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x1
	bl	PrepareStringBattle
	b	.L1427
.L1381:
	ldr	r0, .L1472
	ldr	r0, [r0]
.L1434:
	cmp	r0, #0
	beq	.LCB12366
	b	.L1299	@long jump
.LCB12366:
	b	.L1413
.L1473:
	.align	2, 0
.L1472:
	.word	gBattleControllerExecFlags
.L1383:
	ldr	r0, .L1474
	ldr	r0, [r0]
	mov	r1, #0x82
	lsl	r1, r1, #0x18
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	cmp	r0, r1
	bne	.LCB12384
	b	.L1410	@long jump
.LCB12384:
	mov	r0, #0x1
	b	.L1432
.L1475:
	.align	2, 0
.L1474:
	.word	gBattleTypeFlags
.L1386:
	mov	r1, r8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L1387:
	ldr	r0, .L1476
	ldr	r2, [r0]
	ldr	r0, .L1476+0x4
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L1388	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0xf
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L1389	@cond_branch
	ldr	r0, .L1476+0x8
	ldrh	r1, [r0]
	ldr	r0, .L1476+0xc
	cmp	r1, r0
	beq	.L1388	@cond_branch
.L1389:
	mov	r0, #0x82
	lsl	r0, r0, #0x18
	and	r2, r2, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	cmp	r2, r0
	bne	.L1390	@cond_branch
	mov	r0, #0x2
	b	.L1433
.L1477:
	.align	2, 0
.L1476:
	.word	gBattleTypeFlags
	.word	0x8040
	.word	gTrainerBattleOpponent_B
	.word	0xffff
.L1390:
	mov	r0, #0x3
.L1433:
	bl	GetBattlerAtPosition
	ldr	r1, .L1478
	strb	r0, [r1]
	mov	r0, #0x0
	bl	BtlController_EmitIntroTrainerBallThrow
	ldr	r0, .L1478
	ldrb	r0, [r0]
	bl	MarkBattlerForControllerExec
.L1388:
	ldr	r0, .L1478+0x4
	ldr	r0, [r0]
	ldr	r1, .L1478+0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB12465
	b	.L1413	@long jump
.LCB12465:
	mov	r0, #0xf
	mov	r2, r8
	strb	r0, [r2]
	b	.L1299
.L1479:
	.align	2, 0
.L1478:
	.word	gActiveBattler
	.word	gBattleTypeFlags
	.word	-0x7cfffffe
.L1394:
	ldr	r0, .L1480
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.LCB12483
	b	.L1299	@long jump
.LCB12483:
	b	.L1427
.L1481:
	.align	2, 0
.L1480:
	.word	gBattleControllerExecFlags
.L1396:
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsBattlerMarkedForControllerExec
	b	.L1434
.L1398:
	ldr	r0, .L1482
	ldr	r1, [r0]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB12509
	b	.L1427	@long jump
.LCB12509:
	mov	r0, #0x82
	lsl	r0, r0, #0x18
	and	r1, r1, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	cmp	r1, r0
	bne	.L1400	@cond_branch
	mov	r0, #0x1
	b	.L1435
.L1483:
	.align	2, 0
.L1482:
	.word	gBattleTypeFlags
.L1400:
	mov	r0, #0x0
.L1435:
	bl	GetBattlerAtPosition
	ldr	r1, .L1484
	strb	r0, [r1]
	ldr	r0, .L1484+0x4
	ldr	r0, [r0]
	ldr	r1, .L1484+0x8
	and	r0, r0, r1
	ldr	r4, .L1484
	cmp	r0, #0x8
	bne	.L1402	@cond_branch
	ldr	r2, .L1484+0xc
	ldr	r3, .L1484+0x10
	ldrb	r1, [r4]
	mov	r0, #0x1
	eor	r0, r0, r1
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, [r0]
	ldr	r0, .L1484+0x14
	cmp	r1, r0
	bne	.LCB12561
	b	.L1299	@long jump
.LCB12561:
.L1402:
	ldrb	r1, [r4]
	mov	r0, #0x1
	bl	PrepareStringBattle
	b	.L1427
.L1485:
	.align	2, 0
.L1484:
	.word	gActiveBattler
	.word	gBattleTypeFlags
	.word	-0x7cfffff6
	.word	gSprites
	.word	gHealthboxSpriteIds
	.word	SpriteCallbackDummy
.L1403:
	ldr	r0, .L1486
	ldr	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1405	@cond_branch
	ldr	r0, .L1486+0x4
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.LCB12593
	b	.L1299	@long jump
.LCB12593:
.L1405:
	mov	r0, #0x82
	lsl	r0, r0, #0x18
	and	r1, r1, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	cmp	r1, r0
	bne	.L1406	@cond_branch
	mov	r0, #0x1
	b	.L1436
.L1487:
	.align	2, 0
.L1486:
	.word	gBattleTypeFlags
	.word	gBattleControllerExecFlags
.L1406:
	mov	r0, #0x0
.L1436:
	bl	GetBattlerAtPosition
	ldr	r1, .L1488
	strb	r0, [r1]
	ldr	r0, .L1488
	ldrb	r0, [r0]
	bl	IsBattlerMarkedForControllerExec
	b	.L1434
.L1489:
	.align	2, 0
.L1488:
	.word	gActiveBattler
.L1409:
	ldr	r0, .L1490
	ldr	r0, [r0]
	mov	r1, #0x82
	lsl	r1, r1, #0x18
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	cmp	r0, r1
	bne	.L1410	@cond_branch
	mov	r0, #0x1
	b	.L1432
.L1491:
	.align	2, 0
.L1490:
	.word	gBattleTypeFlags
.L1410:
	mov	r0, #0x0
.L1432:
	bl	GetBattlerAtPosition
	ldr	r1, .L1492
	strb	r0, [r1]
	mov	r0, #0x0
	bl	BtlController_EmitIntroTrainerBallThrow
	ldr	r0, .L1492
	ldrb	r0, [r0]
.L1426:
	bl	MarkBattlerForControllerExec
.L1427:
	mov	r2, r8
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L1299
.L1493:
	.align	2, 0
.L1492:
	.word	gActiveBattler
.L1412:
	ldr	r0, .L1494
	ldr	r1, [r0]
	ldr	r0, .L1494+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1413	@cond_branch
	mov	r0, #0x82
	lsl	r0, r0, #0x18
	and	r1, r1, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	cmp	r1, r0
	bne	.L1414	@cond_branch
	mov	r0, #0x3
	b	.L1437
.L1495:
	.align	2, 0
.L1494:
	.word	gBattleTypeFlags
	.word	0x400040
.L1414:
	mov	r0, #0x2
.L1437:
	bl	GetBattlerAtPosition
	ldr	r1, .L1496
	strb	r0, [r1]
	mov	r0, #0x0
	bl	BtlController_EmitIntroTrainerBallThrow
	ldr	r0, .L1496
	ldrb	r0, [r0]
	bl	MarkBattlerForControllerExec
.L1413:
	mov	r1, r8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1299
.L1497:
	.align	2, 0
.L1496:
	.word	gActiveBattler
.L1416:
	ldr	r0, .L1498
	ldr	r1, [r0]
	cmp	r1, #0
	bne	.L1299	@cond_branch
	ldr	r2, .L1498+0x4
	strb	r1, [r2]
	ldr	r0, .L1498+0x8
	ldrb	r0, [r0]
	cmp	r1, r0
	bcs	.L1419	@cond_branch
	add	r4, r2, #0
	ldr	r6, .L1498+0xc
	mov	r5, #0x5c
	add	r7, r6, #0
	add	r7, r7, #0x4c
.L1421:
	ldrb	r0, [r4]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1420	@cond_branch
	ldr	r0, .L1498+0x10
	ldr	r0, [r0]
	ldr	r1, .L1498+0x14
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1420	@cond_branch
	ldrb	r0, [r4]
	mul	r0, r0, r5
	add	r0, r0, r6
	ldrh	r0, [r0]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r4]
	mul	r1, r1, r5
	add	r1, r1, r7
	ldr	r2, [r1]
	mov	r1, #0x2
	bl	HandleSetPokedexFlag
.L1420:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	ldr	r1, .L1498+0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L1421	@cond_branch
.L1419:
	ldr	r2, .L1498+0x18
	ldr	r0, [r2]
	add	r0, r0, #0x4c
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0xd5
	strb	r1, [r0]
	ldr	r0, [r2]
	mov	r2, #0xcf
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r1, .L1498+0x1c
	ldr	r0, .L1498+0x20
	str	r0, [r1]
.L1299:
	add	sp, sp, #0x30
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1499:
	.align	2, 0
.L1498:
	.word	gBattleControllerExecFlags
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gBattleMons
	.word	gBattleTypeFlags
	.word	0x63f0902
	.word	gBattleStruct
	.word	gBattleMainFunc
	.word	TryDoEventsBeforeFirstTurn
.Lfe63:
	.size	 DoBattleIntro,.Lfe63-DoBattleIntro
	.align	2, 0
	.type	 TryDoEventsBeforeFirstTurn,function
	.thumb_func
TryDoEventsBeforeFirstTurn:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L1549
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.LCB12860
	b	.L1500	@long jump
.LCB12860:
	ldr	r0, .L1549+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x4c
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1502	@cond_branch
	mov	r5, #0x0
	ldr	r1, .L1549+0x8
	mov	r9, r1
	ldrb	r0, [r1]
	cmp	r5, r0
	bge	.L1504	@cond_branch
	ldr	r2, .L1549+0xc
.L1506:
	add	r0, r5, r2
	strb	r5, [r0]
	add	r5, r5, #0x1
	ldrb	r3, [r1]
	cmp	r5, r3
	blt	.L1506	@cond_branch
.L1504:
	mov	r5, #0x0
	b	.L1548
.L1550:
	.align	2, 0
.L1549:
	.word	gBattleControllerExecFlags
	.word	gBattleStruct
	.word	gBattlersCount
	.word	gBattlerByTurnOrder
.L1511:
	add	r4, r5, #0x1
	mov	r8, r4
	ldrb	r1, [r1]
	cmp	r8, r1
	bge	.L1510	@cond_branch
	ldr	r6, .L1551
	ldr	r0, .L1551+0x4
	mov	r9, r0
	lsl	r7, r5, #0x18
.L1515:
	add	r0, r5, r6
	ldrb	r0, [r0]
	add	r1, r4, r6
	ldrb	r1, [r1]
	mov	r2, #0x1
	bl	GetWhoStrikesFirst
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1514	@cond_branch
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	lsr	r0, r7, #0x18
	bl	SwapTurnOrder
.L1514:
	add	r4, r4, #0x1
	ldr	r0, .L1551+0x4
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1515	@cond_branch
.L1510:
	mov	r5, r8
.L1548:
	mov	r1, r9
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L1511	@cond_branch
.L1502:
	ldr	r5, .L1551+0x8
	ldr	r0, [r5]
	mov	r4, #0xcf
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1519	@cond_branch
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0xff
	bl	AbilityBattleEffects
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1519	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L1500
.L1552:
	.align	2, 0
.L1551:
	.word	gBattlerByTurnOrder
	.word	gBattlersCount
	.word	gBattleStruct
.L1519:
	ldr	r2, .L1553
	ldr	r0, [r2]
	add	r0, r0, #0x4c
	ldr	r1, .L1553+0x4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcs	.L1521	@cond_branch
	ldr	r5, .L1553+0x8
	ldr	r6, .L1553+0xc
	add	r4, r2, #0
.L1522:
	ldr	r2, [r4]
	add	r2, r2, #0x4c
	ldrb	r0, [r2]
	add	r1, r0, #0x1
	strb	r1, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r6
	ldrb	r0, [r0]
	strb	r0, [r5]
	ldrb	r1, [r5]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	AbilityBattleEffects
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB13042
	b	.L1500	@long jump
.LCB13042:
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	ldr	r1, .L1553+0x4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L1522	@cond_branch
.L1521:
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0xa
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	AbilityBattleEffects
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB13070
	b	.L1500	@long jump
.LCB13070:
	str	r0, [sp]
	mov	r0, #0xc
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	AbilityBattleEffects
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB13081
	b	.L1500	@long jump
.LCB13081:
	ldr	r2, .L1553
	ldr	r0, [r2]
	add	r0, r0, #0xd5
	ldr	r1, .L1553+0x4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcs	.L1528	@cond_branch
	ldr	r5, .L1553+0xc
	add	r4, r2, #0
.L1529:
	ldr	r2, [r4]
	add	r2, r2, #0xd5
	ldrb	r0, [r2]
	add	r1, r0, #0x1
	strb	r1, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r5
	ldrb	r1, [r0]
	mov	r0, #0x0
	mov	r2, #0x0
	bl	ItemBattleEffects
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1500	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0xd5
	ldr	r1, .L1553+0x4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L1529	@cond_branch
.L1528:
	mov	r5, #0x0
	ldr	r1, .L1553
	mov	r8, r1
	mov	r7, #0x6
	ldr	r6, .L1553+0x10
	ldr	r2, .L1553+0x14
	mov	r4, #0xff
	mov	r3, #0x0
.L1535:
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r5, r0
	add	r0, r0, #0x5c
	strb	r7, [r0]
	add	r1, r5, r6
	ldrb	r0, [r1]
	orr	r0, r0, r4
	strb	r0, [r1]
	strh	r3, [r2]
	add	r2, r2, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L1535	@cond_branch
	mov	r0, #0x0
	bl	TurnValuesCleanUp
	bl	SpecialStatusesClear
	ldr	r0, .L1553
	ldr	r0, [r0]
	add	r0, r0, #0x8a
	ldr	r1, .L1553+0x18
	ldrb	r1, [r1]
	strb	r1, [r0]
	ldr	r0, .L1553+0x1c
	mov	r1, #0x0
	bl	BattlePutTextOnWindow
	ldr	r1, .L1553+0x20
	ldr	r0, .L1553+0x24
	str	r0, [r1]
	bl	ResetSentPokesToOpponentValue
	ldr	r1, .L1553+0x28
	mov	r2, #0x0
	add	r0, r1, #0x7
.L1540:
	strb	r2, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L1540	@cond_branch
	mov	r5, #0x0
	ldr	r3, .L1553+0x4
	ldr	r2, .L1553
	ldr	r6, .L1553+0x2c
	ldr	r7, .L1553+0x30
	ldrb	r0, [r3]
	cmp	r5, r0
	bge	.L1543	@cond_branch
	ldr	r0, .L1553+0x34
	mov	r4, #0x9
	neg	r4, r4
	add	r1, r0, #0
	add	r1, r1, #0x54
.L1545:
	ldr	r0, [r1]
	and	r0, r0, r4
	str	r0, [r1]
	add	r1, r1, #0x5c
	add	r5, r5, #0x1
	ldrb	r0, [r3]
	cmp	r5, r0
	blt	.L1545	@cond_branch
.L1543:
	ldr	r0, [r2]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x1]
	ldr	r0, [r2]
	mov	r3, #0xce
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r3, r3, #0x1
	add	r0, r0, r3
	strb	r1, [r0]
	mov	r1, #0x0
	strb	r1, [r6, #0x14]
	ldr	r0, [r2]
	add	r0, r0, #0x4d
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x2]
	strh	r1, [r7]
	bl	Random
	ldr	r1, .L1553+0x38
	strh	r0, [r1]
	ldr	r0, .L1553+0x3c
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1500	@cond_branch
	bl	StopCryAndClearCrySongs
	ldr	r0, .L1553+0x40
	bl	BattleScriptExecute
.L1500:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1554:
	.align	2, 0
.L1553:
	.word	gBattleStruct
	.word	gBattlersCount
	.word	gBattlerAttacker
	.word	gBattlerByTurnOrder
	.word	gChosenActionByBattler
	.word	gChosenMoveByBattler
	.word	gAbsentBattlerFlags
	.word	gText_EmptyString3
	.word	gBattleMainFunc
	.word	HandleTurnActionSelectionState
	.word	gBattleCommunication
	.word	gBattleScripting
	.word	gMoveResultFlags
	.word	gBattleMons
	.word	gRandomTurnNumber
	.word	gBattleTypeFlags
	.word	BattleScript_ArenaTurnBeginning
.Lfe64:
	.size	 TryDoEventsBeforeFirstTurn,.Lfe64-TryDoEventsBeforeFirstTurn
	.align	2, 0
	.type	 HandleEndTurn_ContinueBattle,function
	.thumb_func
HandleEndTurn_ContinueBattle:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1568
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L1556	@cond_branch
	ldr	r1, .L1568+0x4
	ldr	r0, .L1568+0x8
	str	r0, [r1]
	ldr	r3, .L1568+0xc
	ldr	r1, .L1568+0x10
	mov	r2, #0x0
	add	r0, r1, #0x7
.L1560:
	strb	r2, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L1560	@cond_branch
	mov	r4, #0x0
	ldrb	r3, [r3]
	cmp	r4, r3
	bge	.L1563	@cond_branch
	ldr	r5, .L1568+0x14
	add	r6, r5, #0
	add	r6, r6, #0x50
.L1565:
	mov	r0, #0x5c
	mov	r2, r4
	mul	r2, r2, r0
	add	r1, r5, #0
	add	r1, r1, #0x54
	add	r1, r2, r1
	ldr	r3, [r1]
	sub	r0, r0, #0x65
	and	r3, r3, r0
	str	r3, [r1]
	add	r2, r2, r6
	ldr	r0, [r2]
	mov	r1, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1564	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	and	r3, r3, r0
	cmp	r3, #0
	beq	.L1564	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	CancelMultiTurnMoves
.L1564:
	add	r4, r4, #0x1
	ldr	r0, .L1568+0xc
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1565	@cond_branch
.L1563:
	ldr	r2, .L1568+0x18
	ldr	r0, [r2]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x1]
	ldr	r0, [r2]
	mov	r3, #0xce
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r3, r3, #0x1
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x2]
	ldr	r0, .L1568+0x1c
	strh	r1, [r0]
.L1556:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1569:
	.align	2, 0
.L1568:
	.word	gBattleControllerExecFlags
	.word	gBattleMainFunc
	.word	BattleTurnPassed
	.word	gBattlersCount
	.word	gBattleCommunication
	.word	gBattleMons
	.word	gBattleStruct
	.word	gMoveResultFlags
.Lfe65:
	.size	 HandleEndTurn_ContinueBattle,.Lfe65-HandleEndTurn_ContinueBattle
	.align	2, 0
	.globl	BattleTurnPassed
	.type	 BattleTurnPassed,function
	.thumb_func
BattleTurnPassed:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r0, #0x1
	bl	TurnValuesCleanUp
	ldr	r0, .L1598
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1571	@cond_branch
	bl	DoFieldEndTurnEffects
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB13447
	b	.L1570	@long jump
.LCB13447:
	bl	DoBattlerEndTurnEffects
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB13453
	b	.L1570	@long jump
.LCB13453:
.L1571:
	bl	HandleFaintedMonActions
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.LCB13460
	b	.L1570	@long jump
.LCB13460:
	ldr	r0, .L1598+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x4d
	strb	r1, [r0]
	bl	HandleWishPerishSongOnTurnEnd
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.LCB13470
	b	.L1570	@long jump
.LCB13470:
	mov	r0, #0x0
	bl	TurnValuesCleanUp
	ldr	r2, .L1598+0x8
	ldr	r0, [r2]
	ldr	r1, .L1598+0xc
	and	r0, r0, r1
	ldr	r1, .L1598+0x10
	and	r0, r0, r1
	ldr	r1, .L1598+0x14
	and	r0, r0, r1
	ldr	r1, .L1598+0x18
	and	r0, r0, r1
	str	r0, [r2]
	ldr	r0, .L1598+0x1c
	strb	r4, [r0, #0x18]
	strb	r4, [r0, #0x19]
	strb	r4, [r0, #0x14]
	ldr	r0, .L1598+0x20
	str	r4, [r0]
	ldr	r0, .L1598+0x24
	strh	r4, [r0]
	ldr	r1, .L1598+0x28
	mov	r2, #0x0
	add	r0, r1, #0x4
.L1579:
	strb	r2, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L1579	@cond_branch
	ldr	r0, .L1598
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1581	@cond_branch
	ldr	r1, .L1598+0x2c
	mov	r0, #0xc
	strb	r0, [r1]
	ldr	r1, .L1598+0x30
	ldr	r0, .L1598+0x34
	str	r0, [r1]
	b	.L1570
.L1599:
	.align	2, 0
.L1598:
	.word	gBattleOutcome
	.word	gBattleStruct
	.word	gHitMarker
	.word	-0x201
	.word	-0x80001
	.word	-0x400001
	.word	-0x100001
	.word	gBattleScripting
	.word	gBattleMoveDamage
	.word	gMoveResultFlags
	.word	gBattleCommunication
	.word	gCurrentActionFuncId
	.word	gBattleMainFunc
	.word	RunTurnActionsFunctions
.L1581:
	ldr	r1, .L1600
	ldrb	r0, [r1, #0x13]
	ldr	r2, .L1600+0x4
	mov	r8, r2
	cmp	r0, #0xfe
	bhi	.L1582	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r1, #0x13]
	ldr	r1, [r2]
	add	r1, r1, #0xd6
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L1582:
	mov	r2, #0x0
	ldr	r4, .L1600+0x8
	ldr	r0, .L1600+0xc
	mov	ip, r0
	ldr	r1, .L1600+0x10
	mov	r9, r1
	ldrb	r0, [r4]
	cmp	r2, r0
	bge	.L1584	@cond_branch
	ldr	r7, .L1600+0x14
	mov	r6, #0xff
	mov	r5, #0x0
	ldr	r3, .L1600+0x18
.L1586:
	add	r1, r2, r7
	ldrb	r0, [r1]
	orr	r0, r0, r6
	strb	r0, [r1]
	strh	r5, [r3]
	add	r3, r3, #0x2
	add	r2, r2, #0x1
	ldrb	r1, [r4]
	cmp	r2, r1
	blt	.L1586	@cond_branch
.L1584:
	mov	r2, #0x0
	ldr	r3, .L1600+0x4
	mov	r1, #0x6
.L1591:
	ldr	r0, [r3]
	add	r0, r2, r0
	add	r0, r0, #0x5c
	strb	r1, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x3
	ble	.L1591	@cond_branch
	mov	r2, r8
	ldr	r0, [r2]
	add	r0, r0, #0x8a
	mov	r2, ip
	ldrb	r1, [r2]
	strb	r1, [r0]
	mov	r0, r9
	mov	r1, #0x0
	bl	BattlePutTextOnWindow
	ldr	r1, .L1600+0x1c
	ldr	r0, .L1600+0x20
	str	r0, [r1]
	bl	Random
	ldr	r1, .L1600+0x24
	strh	r0, [r1]
	ldr	r0, .L1600+0x28
	ldr	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0xa
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1593	@cond_branch
	ldr	r0, .L1600+0x2c
	bl	BattleScriptExecute
	b	.L1570
.L1601:
	.align	2, 0
.L1600:
	.word	gBattleResults
	.word	gBattleStruct
	.word	gBattlersCount
	.word	gAbsentBattlerFlags
	.word	gText_EmptyString3
	.word	gChosenActionByBattler
	.word	gChosenMoveByBattler
	.word	gBattleMainFunc
	.word	HandleTurnActionSelectionState
	.word	gRandomTurnNumber
	.word	gBattleTypeFlags
	.word	BattleScript_PalacePrintFlavorText
.L1593:
	mov	r0, #0x80
	lsl	r0, r0, #0xb
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1595	@cond_branch
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, #0xd6
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1595	@cond_branch
	ldr	r0, .L1602
	bl	BattleScriptExecute
	b	.L1570
.L1603:
	.align	2, 0
.L1602:
	.word	BattleScript_ArenaTurnBeginning
.L1595:
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1604
	ldrh	r1, [r1]
	mov	r2, #0x1
	bl	ShouldDoTrainerSlide
	cmp	r0, #0
	beq	.L1570	@cond_branch
	ldr	r0, .L1604+0x4
	bl	BattleScriptExecute
.L1570:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1605:
	.align	2, 0
.L1604:
	.word	gTrainerBattleOpponent_A
	.word	BattleScript_TrainerSlideMsgEnd2
.Lfe66:
	.size	 BattleTurnPassed,.Lfe66-BattleTurnPassed
	.align	2, 0
	.globl	IsRunningFromBattleImpossible
	.type	 IsRunningFromBattleImpossible,function
	.thumb_func
IsRunningFromBattleImpossible:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L1619
	ldr	r0, .L1619+0x4
	ldrb	r2, [r0]
	mov	r0, #0x5c
	mul	r0, r0, r2
	add	r1, r0, r1
	ldrh	r0, [r1, #0x30]
	cmp	r0, #0xcd
	bne	.L1607	@cond_branch
	ldr	r1, .L1619+0x8
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r6, [r0, #0x7]
	b	.L1608
.L1620:
	.align	2, 0
.L1619:
	.word	gBattleMons
	.word	gActiveBattler
	.word	gEnigmaBerries
.L1607:
	ldrh	r0, [r1, #0x30]
	bl	ItemId_GetHoldEffect
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L1608:
	ldr	r0, .L1621
	ldr	r2, .L1621+0x4
	ldrb	r1, [r2]
	strb	r1, [r0]
	ldr	r5, .L1621+0x8
	ldr	r4, [r5]
	mov	r0, #0x10
	and	r4, r4, r0
	cmp	r4, #0
	beq	.L1609	@cond_branch
	ldr	r1, .L1621+0xc
	mov	r0, #0x1
	strb	r0, [r1, #0x5]
	b	.L1616
.L1622:
	.align	2, 0
.L1621:
	.word	gPotentialItemEffectBattler
	.word	gActiveBattler
	.word	gBattleTypeFlags
	.word	gBattleCommunication
.L1609:
	ldrb	r0, [r2]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L1610	@cond_branch
	ldr	r0, [r5]
	mov	r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1610	@cond_branch
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsBattlerAlive
	cmp	r0, #0
	beq	.L1610	@cond_branch
	ldr	r0, .L1623
	strb	r4, [r0, #0x5]
	b	.L1617
.L1624:
	.align	2, 0
.L1623:
	.word	gBattleCommunication
.L1610:
	cmp	r6, #0x25
	beq	.L1618	@cond_branch
	ldr	r0, .L1625
	ldr	r0, [r0]
	mov	r7, #0x2
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L1618	@cond_branch
	ldr	r6, .L1625+0x4
	ldr	r4, .L1625+0x8
	ldrb	r1, [r4]
	mov	r5, #0x5c
	mov	r0, r1
	mul	r0, r0, r5
	add	r0, r0, r6
	ldrh	r0, [r0, #0x20]
	cmp	r0, #0x32
	beq	.L1618	@cond_branch
	add	r0, r1, #0
	bl	IsAbilityPreventingEscape
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L1614	@cond_branch
	ldr	r0, .L1625+0xc
	sub	r1, r1, #0x1
	strb	r1, [r0, #0x17]
	ldr	r2, .L1625+0x10
	mov	r0, r1
	mul	r0, r0, r5
	add	r0, r0, r6
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2]
	ldr	r0, .L1625+0x14
	strb	r7, [r0, #0x5]
	mov	r0, #0x2
	b	.L1616
.L1626:
	.align	2, 0
.L1625:
	.word	gBattleTypeFlags
	.word	gBattleMons
	.word	gActiveBattler
	.word	gBattleScripting
	.word	gLastUsedAbility
	.word	gBattleCommunication
.L1614:
	ldrb	r0, [r4]
	bl	CanBattlerEscape
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L1615	@cond_branch
.L1618:
	mov	r0, #0x0
	b	.L1616
.L1615:
	ldr	r0, .L1627
	strb	r1, [r0, #0x5]
.L1617:
	mov	r0, #0x1
.L1616:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1628:
	.align	2, 0
.L1627:
	.word	gBattleCommunication
.Lfe67:
	.size	 IsRunningFromBattleImpossible,.Lfe67-IsRunningFromBattleImpossible
	.align	2, 0
	.globl	SwitchPartyOrder
	.type	 SwitchPartyOrder,function
	.thumb_func
SwitchPartyOrder:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r3, #0x0
	ldr	r0, .L1647
	mov	r8, r0
	ldr	r1, .L1647+0x4
	mov	ip, r1
	ldr	r7, .L1647+0x8
	lsl	r0, r5, #0x1
	add	r4, r0, r5
	add	r6, r0, #0
.L1633:
	mov	r0, ip
	add	r2, r3, r0
	ldr	r1, [r7]
	add	r0, r4, r3
	add	r0, r0, r1
	add	r0, r0, #0x60
	ldrb	r0, [r0]
	strb	r0, [r2]
	add	r3, r3, #0x1
	cmp	r3, #0x2
	ble	.L1633	@cond_branch
	mov	r1, r8
	add	r0, r6, r1
	ldrb	r0, [r0]
	bl	GetPartyIdFromBattlePartyId
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r7, .L1647+0x8
	ldr	r0, [r7]
	add	r0, r5, r0
	add	r0, r0, #0x5c
	ldrb	r0, [r0]
	bl	GetPartyIdFromBattlePartyId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	SwitchPartyMonSlots
	ldr	r0, .L1647+0xc
	ldr	r0, [r0]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1635	@cond_branch
	mov	r3, #0x0
	add	r4, r7, #0
	add	r6, r6, r5
	mov	r0, #0x2
	add	r1, r5, #0
	eor	r1, r1, r0
	ldr	r7, .L1647+0x4
	lsl	r0, r1, #0x1
	add	r5, r0, r1
.L1639:
	ldr	r0, [r4]
	add	r1, r6, r3
	add	r1, r1, r0
	add	r1, r1, #0x60
	add	r2, r3, r7
	ldrb	r0, [r2]
	strb	r0, [r1]
	ldr	r1, [r4]
	add	r0, r5, r3
	add	r0, r0, r1
	add	r0, r0, #0x60
	ldrb	r1, [r2]
	strb	r1, [r0]
	add	r3, r3, #0x1
	cmp	r3, #0x2
	ble	.L1639	@cond_branch
	b	.L1641
.L1648:
	.align	2, 0
.L1647:
	.word	gBattlerPartyIndexes
	.word	gBattlePartyCurrentOrder
	.word	gBattleStruct
	.word	gBattleTypeFlags
.L1635:
	mov	r3, #0x0
	add	r2, r6, r5
	ldr	r4, .L1649
.L1645:
	ldr	r0, [r7]
	add	r1, r2, r3
	add	r1, r1, r0
	add	r1, r1, #0x60
	add	r0, r3, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r3, r3, #0x1
	cmp	r3, #0x2
	ble	.L1645	@cond_branch
.L1641:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1650:
	.align	2, 0
.L1649:
	.word	gBattlePartyCurrentOrder
.Lfe68:
	.size	 SwitchPartyOrder,.Lfe68-SwitchPartyOrder
	.align	2, 0
	.type	 HandleTurnActionSelectionState,function
	.thumb_func
HandleTurnActionSelectionState:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x38
	ldr	r0, .L1813
	mov	r1, #0x0
	strb	r1, [r0, #0x4]
	ldr	r0, .L1813+0x4
	strb	r1, [r0]
	ldr	r0, .L1813+0x8
	add	r5, r0, #0
	ldrb	r0, [r5]
	cmp	r1, r0
	bcc	.LCB14079
	bl	.L1653	@far jump
.LCB14079:
.L1655:
	ldr	r4, .L1813+0x4
	ldrb	r0, [r4]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L1813
	ldrb	r0, [r4]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bls	.LCB14096
	bl	.L1654	@far jump
.LCB14096:
	lsl	r0, r0, #0x2
	ldr	r1, .L1813+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1814:
	.align	2, 0
.L1813:
	.word	gBattleCommunication
	.word	gActiveBattler
	.word	gBattlersCount
	.word	.L1788
	.align	2, 0
	.align	2, 0
.L1788:
	.word	.L1657
	.word	.L1658
	.word	.L1671
	.word	.L1727
	.word	.L1767
	.word	.L1774
	.word	.L1776
	.word	.L1780
	.word	.L1782
.L1657:
	bl	RecordedBattle_CopyBattlerMoves
	ldr	r1, .L1815
	ldr	r0, .L1815+0x4
	ldrb	r0, [r0]
	add	r0, r0, r1
	bl	.L1799	@ far jump
.L1816:
	.align	2, 0
.L1815:
	.word	gBattleCommunication
	.word	gActiveBattler
.L1658:
	ldr	r0, .L1817
	ldrb	r1, [r0]
	ldr	r4, .L1817+0x4
	ldr	r0, [r4]
	add	r1, r1, r0
	add	r1, r1, #0x5c
	mov	r0, #0x6
	strb	r0, [r1]
	ldr	r0, .L1817+0x8
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1660	@cond_branch
	mov	r1, #0x2
	mov	r0, #0x2
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L1660	@cond_branch
	add	r5, r6, #0
	eor	r5, r5, r1
	add	r0, r5, #0
	bl	GetBattlerAtPosition
	ldr	r1, [r4]
	add	r1, r1, #0x8a
	ldrb	r1, [r1]
	ldr	r2, .L1817+0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r2
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L1660	@cond_branch
	ldr	r4, .L1817+0x10
	add	r0, r5, #0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0x5
	beq	.LCB14184
	bl	.L1654	@far jump
.LCB14184:
.L1660:
	ldr	r1, .L1817+0x4
	mov	r8, r1
	ldr	r4, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x8a
	ldrb	r3, [r0]
	ldr	r0, .L1817+0xc
	ldr	r7, .L1817
	ldrb	r2, [r7]
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	and	r3, r3, r0
	cmp	r3, #0
	beq	.L1661	@cond_branch
	ldr	r0, .L1817+0x14
	add	r0, r2, r0
	mov	r1, #0xd
	strb	r1, [r0]
	ldr	r0, .L1817+0x8
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1662	@cond_branch
	ldr	r0, .L1817+0x10
	ldrb	r1, [r7]
	add	r1, r1, r0
	mov	r0, #0x5
	strb	r0, [r1]
	bl	.L1654	@ far jump
.L1818:
	.align	2, 0
.L1817:
	.word	gActiveBattler
	.word	gBattleStruct
	.word	gBattleTypeFlags
	.word	gBitTable
	.word	gBattleCommunication
	.word	gChosenActionByBattler
.L1662:
	ldr	r0, .L1819
	ldrb	r1, [r7]
	add	r1, r1, r0
	mov	r0, #0x4
	strb	r0, [r1]
	bl	.L1654	@ far jump
.L1820:
	.align	2, 0
.L1819:
	.word	gBattleCommunication
.L1661:
	ldr	r1, .L1821
	mov	r0, #0x5c
	mul	r0, r0, r2
	add	r1, r1, #0x54
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1666	@cond_branch
	mov	r5, #0x80
	lsl	r5, r5, #0xf
	and	r5, r5, r1
	cmp	r5, #0
	beq	.L1665	@cond_branch
.L1666:
	ldr	r0, .L1821+0x4
	add	r0, r2, r0
	strb	r3, [r0]
	ldr	r1, .L1821+0x8
	ldrb	r0, [r7]
	bl	.L1800	@ far jump
.L1822:
	.align	2, 0
.L1821:
	.word	gBattleMons
	.word	gChosenActionByBattler
	.word	gBattleCommunication
.L1665:
	ldr	r0, .L1823
	ldr	r0, [r0]
	mov	r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1668	@cond_branch
	cmp	r6, #0x2
	bne	.L1668	@cond_branch
	mov	r6, #0xa5
	lsl	r6, r6, #0x2
	add	r0, r4, r6
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1669	@cond_branch
	ldr	r4, .L1823+0x4
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1668	@cond_branch
.L1669:
	mov	r2, r8
	ldr	r0, [r2]
	add	r0, r0, r6
	strb	r5, [r0]
	ldr	r1, .L1823+0x4
	ldrb	r0, [r7]
	add	r0, r0, r1
	mov	r1, #0xd
	strb	r1, [r0]
	ldr	r1, .L1823+0x8
	ldrb	r0, [r7]
	bl	.L1800	@ far jump
.L1824:
	.align	2, 0
.L1823:
	.word	gBattleTypeFlags
	.word	gChosenActionByBattler
	.word	gBattleCommunication
.L1668:
	ldr	r0, .L1825
	ldrb	r1, [r0]
	ldr	r0, .L1825+0x4
	ldr	r3, [r0]
	ldr	r4, .L1825+0x8
	add	r0, r3, r4
	ldrb	r2, [r0]
	ldr	r6, .L1825+0xc
	add	r3, r3, r6
	ldrb	r0, [r3]
	lsl	r0, r0, #0x8
	orr	r2, r2, r0
	mov	r0, #0x0
	bl	BtlController_EmitChooseAction
	bl	.L1773	@ far jump
.L1826:
	.align	2, 0
.L1825:
	.word	gChosenActionByBattler
	.word	gBattleResources
	.word	0x821
	.word	0x822
.L1671:
	ldr	r3, .L1827
	ldr	r1, .L1827+0x4
	ldr	r7, .L1827+0x8
	ldrb	r6, [r7]
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	lsl	r1, r2, #0x4
	mov	r0, #0xf0
	lsl	r0, r0, #0x18
	orr	r1, r1, r0
	orr	r1, r1, r2
	lsl	r0, r2, #0x8
	orr	r1, r1, r0
	lsl	r2, r2, #0xc
	orr	r1, r1, r2
	ldr	r0, [r3]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB14386
	bl	.L1654	@far jump
.LCB14386:
	ldr	r4, .L1827+0xc
	ldr	r0, [r4]
	lsl	r1, r6, #0x9
	ldr	r5, .L1827+0x10
	add	r0, r0, r5
	add	r0, r0, r1
	ldrb	r1, [r0]
	add	r0, r6, #0
	bl	RecordedBattle_SetBattlerAction
	ldr	r2, .L1827+0x14
	ldrb	r1, [r7]
	add	r2, r1, r2
	ldr	r0, [r4]
	lsl	r1, r1, #0x9
	add	r0, r0, r5
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r2]
	ldr	r1, [r4]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x9
	add	r1, r1, r5
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0x14
	bls	.LCB14415
	b	.L1673	@long jump
.LCB14415:
	lsl	r0, r0, #0x2
	ldr	r1, .L1827+0x18
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1828:
	.align	2, 0
.L1827:
	.word	gBattleControllerExecFlags
	.word	gBitTable
	.word	gActiveBattler
	.word	gBattleResources
	.word	0x821
	.word	gChosenActionByBattler
	.word	.L1719
	.align	2, 0
	.align	2, 0
.L1719:
	.word	.L1674
	.word	.L1684
	.word	.L1692
	.word	.L1673
	.word	.L1673
	.word	.L1702
	.word	.L1704
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1705
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1673
	.word	.L1673
.L1674:
	bl	AreAllMovesUnusable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1675	@cond_branch
	ldr	r0, .L1829
	ldr	r3, .L1829+0x4
	ldrb	r1, [r3]
	add	r1, r1, r0
	mov	r4, #0x0
	mov	r0, #0x6
	strb	r0, [r1]
	ldrb	r1, [r3]
	ldr	r2, .L1829+0x8
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x54
	strb	r4, [r1]
	ldrb	r1, [r3]
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x83
	mov	r0, #0x4
	strb	r0, [r1]
	ldrb	r1, [r3]
	ldr	r2, [r2]
	add	r2, r1, r2
	ldr	r0, .L1829+0xc
	ldr	r0, [r0]
	lsl	r1, r1, #0x9
	ldr	r3, .L1829+0x10
	add	r0, r0, r3
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r2, #0xc]
	bl	.L1651	@ far jump
.L1830:
	.align	2, 0
.L1829:
	.word	gBattleCommunication
	.word	gActiveBattler
	.word	gBattleStruct
	.word	gBattleResources
	.word	0x823
.L1675:
	ldr	r4, .L1831
	ldr	r5, .L1831+0x4
	ldrb	r2, [r5]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r3, [r0, #0x6]
	cmp	r3, #0
	beq	.L1677	@cond_branch
	ldr	r1, .L1831+0x8
	lsl	r0, r2, #0x1
	add	r0, r0, r1
	strh	r3, [r0]
	ldrb	r2, [r5]
	ldr	r0, .L1831+0xc
	ldr	r1, [r0]
	add	r1, r2, r1
	add	r1, r1, #0x7f
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrb	r0, [r0, #0x10]
	strb	r0, [r1]
	ldr	r1, .L1831+0x10
	ldrb	r0, [r5]
	add	r0, r0, r1
	mov	r1, #0x4
	strb	r1, [r0]
	bl	.L1651	@ far jump
.L1832:
	.align	2, 0
.L1831:
	.word	gDisableStructs
	.word	gActiveBattler
	.word	gChosenMoveByBattler
	.word	gBattleStruct
	.word	gBattleCommunication
.L1677:
	ldr	r0, .L1833
	ldr	r1, [r0]
	add	r0, sp, #0x1c
	mov	r4, #0xa6
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	ldmia	r1!, {r2, r3, r6}
	stmia	r0!, {r2, r3, r6}
	ldmia	r1!, {r2, r4, r6}
	stmia	r0!, {r2, r4, r6}
	add	r1, sp, #0x4
	ldr	r3, .L1833+0x4
	ldrb	r0, [r5]
	mov	r2, #0x5c
	mul	r0, r0, r2
	add	r0, r0, r3
	ldrh	r0, [r0]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	strh	r0, [r1, #0x10]
	ldrb	r0, [r5]
	mul	r0, r0, r2
	add	r0, r0, r3
	add	r0, r0, #0x22
	ldrb	r0, [r0]
	strb	r0, [r1, #0x12]
	ldrb	r0, [r5]
	mul	r0, r0, r2
	add	r0, r0, r3
	add	r0, r0, #0x23
	ldrb	r0, [r0]
	strb	r0, [r1, #0x13]
	ldrb	r0, [r5]
	mul	r0, r0, r2
	add	r0, r0, r3
	add	r0, r0, #0x24
	ldrb	r0, [r0]
	strb	r0, [r1, #0x14]
	mov	r4, #0x0
	mov	r6, sp
	add	r6, r6, #0xc
	str	r6, [sp, #0x34]
	add	r0, sp, #0x10
	mov	sl, r0
	mov	r8, r3
	add	r7, r5, #0
	mov	r6, #0x5c
	mov	r1, #0xc
	add	r1, r1, r8
	mov	r9, r1
	add	r5, sp, #0x4
.L1682:
	lsl	r2, r4, #0x1
	ldrb	r0, [r7]
	mul	r0, r0, r6
	add	r0, r2, r0
	add	r0, r0, r9
	ldrh	r0, [r0]
	strh	r0, [r5]
	ldr	r0, [sp, #0x34]
	add	r3, r0, r4
	ldrb	r0, [r7]
	mul	r0, r0, r6
	add	r0, r4, r0
	mov	r1, r8
	add	r1, r1, #0x25
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r3]
	ldrb	r0, [r7]
	mov	r1, r0
	mul	r1, r1, r6
	add	r2, r2, r1
	add	r2, r2, r9
	ldrh	r0, [r2]
	add	r1, r1, r8
	add	r1, r1, #0x3d
	ldrb	r1, [r1]
	lsl	r2, r4, #0x18
	lsr	r2, r2, #0x18
	bl	CalculatePPWithBonus
	mov	r2, sl
	add	r1, r2, r4
	strb	r0, [r1]
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L1682	@cond_branch
	ldr	r0, .L1833+0x8
	ldr	r1, [r0]
	mov	r0, #0x1
	and	r1, r1, r0
	mov	r0, #0x0
	mov	r2, #0x0
	add	r3, sp, #0x4
	bl	BtlController_EmitChooseMove
	b	.L1695
.L1834:
	.align	2, 0
.L1833:
	.word	gBattleStruct
	.word	gBattleMons
	.word	gBattleTypeFlags
.L1684:
	ldr	r0, .L1835
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x4
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L1685	@cond_branch
	mov	r0, #0x23
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1687	@cond_branch
	ldr	r0, .L1835+0x4
	ldr	r0, [r0]
	ldr	r1, .L1835+0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB14687
	b	.L1704	@long jump
.LCB14687:
.L1687:
	ldr	r4, .L1835+0xc
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	RecordedBattle_ClearBattlerAction
	ldr	r1, .L1835+0x10
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L1835+0x14
	b	.L1801
.L1836:
	.align	2, 0
.L1835:
	.word	gSaveBlock2Ptr
	.word	gBattleTypeFlags
	.word	0x21f090a
	.word	gActiveBattler
	.word	gSelectionBattleScripts
	.word	BattleScript_ActionSelectionItemsCantBeUsed
.L1685:
	mov	r0, #0x23
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1690	@cond_branch
	ldr	r0, .L1837
	ldr	r0, [r0]
	ldr	r1, .L1837+0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB14729
	b	.L1704	@long jump
.LCB14729:
.L1690:
	ldr	r4, .L1837+0x8
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	RecordedBattle_ClearBattlerAction
	ldr	r1, .L1837+0xc
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L1837+0x10
	str	r1, [r0]
	ldr	r1, .L1837+0x14
	ldrb	r0, [r4]
	add	r0, r0, r1
	mov	r1, #0x6
	strb	r1, [r0]
	ldrb	r1, [r4]
	ldr	r2, .L1837+0x18
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x54
	strb	r5, [r1]
	b	.L1802
.L1838:
	.align	2, 0
.L1837:
	.word	gBattleTypeFlags
	.word	0x21f0902
	.word	gActiveBattler
	.word	gSelectionBattleScripts
	.word	BattleScript_ActionSelectionItemsCantBeUsed
	.word	gBattleCommunication
	.word	gBattleStruct
.L1692:
	ldr	r5, .L1839
	ldrb	r0, [r5]
	ldr	r6, .L1839+0x4
	ldr	r1, [r6]
	add	r1, r0, r1
	add	r1, r1, #0x58
	ldr	r2, .L1839+0x8
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strb	r0, [r1]
	ldr	r0, .L1839+0xc
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1694	@cond_branch
	ldrb	r0, [r5]
	bl	CanBattlerEscape
	cmp	r0, #0
	bne	.L1693	@cond_branch
.L1694:
	ldrb	r0, [r5]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0x60
	ldr	r0, [r6]
	add	r0, r0, r1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r2, #0x6
	b	.L1803
.L1840:
	.align	2, 0
.L1839:
	.word	gActiveBattler
	.word	gBattleStruct
	.word	gBattlerPartyIndexes
	.word	gBattleTypeFlags
.L1693:
	ldrb	r0, [r5]
	bl	IsAbilityPreventingEscape
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L1696	@cond_branch
	sub	r3, r4, #0x1
	lsl	r1, r3, #0x4
	mov	r0, #0x4
	orr	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L1841
	mov	r0, #0x5c
	mul	r0, r0, r3
	add	r0, r0, r2
	ldrh	r3, [r0, #0x20]
	ldrb	r0, [r5]
	lsl	r2, r0, #0x1
	add	r2, r2, r0
	add	r2, r2, #0x60
	ldr	r0, [r6]
	add	r0, r0, r2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r2, #0x6
	bl	BtlController_EmitChoosePokemon
	b	.L1695
.L1842:
	.align	2, 0
.L1841:
	.word	gBattleMons
.L1696:
	ldrb	r0, [r5]
	cmp	r0, #0x2
	bne	.L1698	@cond_branch
	ldr	r0, .L1843
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L1698	@cond_branch
	ldr	r3, [r6]
	add	r0, r3, #0
	add	r0, r0, #0x5c
	ldrb	r2, [r0]
	ldrb	r1, [r5]
	b	.L1804
.L1844:
	.align	2, 0
.L1843:
	.word	gChosenActionByBattler
.L1698:
	ldr	r1, .L1845
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bne	.L1700	@cond_branch
	ldr	r0, .L1845+0x4
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x2
	bne	.L1700	@cond_branch
	ldr	r0, .L1845+0x8
	ldr	r3, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x5d
	ldrb	r2, [r0]
	ldrb	r1, [r1]
.L1804:
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, #0x60
	add	r3, r3, r0
	str	r3, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
.L1803:
	mov	r3, #0x0
	bl	BtlController_EmitChoosePokemon
	b	.L1695
.L1846:
	.align	2, 0
.L1845:
	.word	gActiveBattler
	.word	gChosenActionByBattler
	.word	gBattleStruct
.L1700:
	ldr	r2, .L1847
	ldr	r0, .L1847+0x4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0x60
	ldr	r0, [r2]
	add	r0, r0, r1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x6
	mov	r3, #0x0
	bl	BtlController_EmitChoosePokemon
.L1695:
	ldr	r0, .L1847+0x4
	ldrb	r0, [r0]
	bl	MarkBattlerForControllerExec
	b	.L1673
.L1848:
	.align	2, 0
.L1847:
	.word	gBattleStruct
	.word	gActiveBattler
.L1702:
	bl	IsPlayerPartyAndPokemonStorageFull
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB14962
	b	.L1673	@long jump
.LCB14962:
	ldr	r1, .L1849
	ldr	r3, .L1849+0x4
	ldrb	r0, [r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L1849+0x8
	str	r1, [r0]
	ldr	r0, .L1849+0xc
	ldrb	r1, [r3]
	add	r1, r1, r0
	mov	r4, #0x0
	mov	r0, #0x6
	strb	r0, [r1]
	ldrb	r1, [r3]
	ldr	r2, .L1849+0x10
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x54
	strb	r4, [r1]
	ldrb	r1, [r3]
	b	.L1805
.L1850:
	.align	2, 0
.L1849:
	.word	gSelectionBattleScripts
	.word	gActiveBattler
	.word	BattleScript_PrintFullBox
	.word	gBattleCommunication
	.word	gBattleStruct
.L1704:
	ldr	r2, .L1851
	ldr	r4, .L1851+0x4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, #0x60
	ldr	r1, [r2]
	add	r1, r1, r0
	mov	r0, #0x0
	bl	BtlController_EmitChooseItem
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
	b	.L1673
.L1852:
	.align	2, 0
.L1851:
	.word	gBattleStruct
	.word	gActiveBattler
.L1705:
	ldr	r4, .L1853
	ldr	r5, .L1853+0x4
	ldrb	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x7
	strb	r1, [r0]
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	mov	r6, #0x2
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	mov	r1, #0x1
	strb	r1, [r0]
	ldrb	r0, [r5]
	bl	RecordedBattle_ClearBattlerAction
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	ldr	r1, .L1853+0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r7, #0x5c
	mul	r0, r0, r7
	add	r4, r1, #0
	add	r4, r4, #0x54
	add	r0, r0, r4
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1707	@cond_branch
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r4
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1706	@cond_branch
.L1707:
	mov	r0, #0x0
	bl	BtlController_EmitEndBounceEffect
	ldrb	r0, [r5]
	bl	MarkBattlerForControllerExec
	bl	.L1651	@ far jump
.L1854:
	.align	2, 0
.L1853:
	.word	gBattleCommunication
	.word	gActiveBattler
	.word	gBattleMons
.L1706:
	ldr	r4, .L1855
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L1709	@cond_branch
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	RecordedBattle_ClearBattlerAction
	b	.L1708
.L1856:
	.align	2, 0
.L1855:
	.word	gChosenActionByBattler
.L1709:
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1711	@cond_branch
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	b	.L1806
.L1711:
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1713	@cond_branch
	ldr	r4, .L1857
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	blt	.L1714	@cond_branch
	ldr	r4, .L1857+0x4
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	ldrh	r0, [r1, #0x6]
	cmp	r0, #0
	beq	.L1713	@cond_branch
.L1714:
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	eor	r0, r0, r6
	b	.L1806
.L1858:
	.align	2, 0
.L1857:
	.word	gProtectStructs
	.word	gDisableStructs
.L1713:
	ldr	r0, .L1859
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xa
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1716	@cond_branch
	ldr	r4, .L1859+0x4
	ldr	r6, .L1859+0x8
	ldrb	r0, [r6]
	bl	GetBattlerPosition
	mov	r5, #0x2
	eor	r0, r0, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1716	@cond_branch
	ldr	r1, .L1859+0xc
	ldr	r0, .L1859+0x10
	ldr	r0, [r0]
	str	r0, [r1]
	ldrb	r0, [r6]
	bl	GetBattlerPosition
	eor	r0, r0, r5
.L1806:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	RecordedBattle_ClearBattlerAction
	b	.L1708
.L1860:
	.align	2, 0
.L1859:
	.word	gBattleTypeFlags
	.word	gChosenActionByBattler
	.word	gActiveBattler
	.word	gRngValue
	.word	gBattlePalaceMoveSelectionRngValue
.L1716:
	ldr	r0, .L1861
	ldrb	r0, [r0]
	bl	GetBattlerPosition
	mov	r1, #0x2
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x3
	bl	RecordedBattle_ClearBattlerAction
.L1708:
	ldr	r4, .L1861
	ldrb	r0, [r4]
	bl	GetBattlerPosition
	ldr	r1, .L1861+0x4
	ldr	r2, [r1]
	mov	r3, #0xa6
	lsl	r3, r3, #0x2
	add	r2, r2, r3
	ldr	r3, .L1861+0x8
	mov	r1, #0x2
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r3
	ldr	r1, [r0]
	ldrb	r0, [r2]
	bic	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x0
	bl	BtlController_EmitEndBounceEffect
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
	bl	.L1651	@ far jump
.L1862:
	.align	2, 0
.L1861:
	.word	gActiveBattler
	.word	gBattleStruct
	.word	gBitTable
.L1673:
	ldr	r1, .L1863
	ldr	r2, [r1]
	mov	r5, #0x8
	add	r0, r2, #0
	and	r0, r0, r5
	add	r3, r1, #0
	cmp	r0, #0
	beq	.L1721	@cond_branch
	ldr	r0, .L1863+0x4
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L1721	@cond_branch
	ldr	r0, .L1863+0x8
	ldr	r0, [r0]
	ldr	r4, .L1863+0xc
	ldrb	r2, [r4]
	lsl	r1, r2, #0x9
	ldr	r6, .L1863+0x10
	add	r0, r0, r6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1721	@cond_branch
	ldr	r1, .L1863+0x14
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r1, .L1863+0x18
	str	r1, [r0]
	ldr	r1, .L1863+0x1c
	ldrb	r0, [r4]
	add	r0, r0, r1
	mov	r3, #0x0
	strb	r5, [r0]
	b	.L1807
.L1864:
	.align	2, 0
.L1863:
	.word	gBattleTypeFlags
	.word	0x43f0100
	.word	gBattleResources
	.word	gActiveBattler
	.word	0x821
	.word	gSelectionBattleScripts
	.word	BattleScript_AskIfWantsToForfeitMatch
	.word	gBattleCommunication
.L1721:
	ldr	r0, [r3]
	ldr	r1, .L1865
	and	r0, r0, r1
	cmp	r0, #0x8
	bne	.L1723	@cond_branch
	ldr	r0, .L1865+0x4
	ldr	r1, [r0]
	ldr	r4, .L1865+0x8
	ldrb	r0, [r4]
	lsl	r0, r0, #0x9
	ldr	r2, .L1865+0xc
	add	r1, r1, r2
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bne	.L1723	@cond_branch
	ldr	r0, .L1865+0x10
	bl	BattleScriptExecute
	ldr	r1, .L1865+0x14
	ldrb	r0, [r4]
	add	r0, r0, r1
	b	.L1799
.L1866:
	.align	2, 0
.L1865:
	.word	0x200000a
	.word	gBattleResources
	.word	gActiveBattler
	.word	0x821
	.word	BattleScript_PrintCantRunFromTrainer
	.word	gBattleCommunication
.L1723:
	bl	IsRunningFromBattleImpossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1725	@cond_branch
	ldr	r0, .L1867
	ldr	r0, [r0]
	ldr	r4, .L1867+0x4
	ldrb	r2, [r4]
	lsl	r1, r2, #0x9
	ldr	r3, .L1867+0x8
	add	r0, r0, r3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1725	@cond_branch
	ldr	r1, .L1867+0xc
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r1, .L1867+0x10
.L1801:
	str	r1, [r0]
	ldr	r0, .L1867+0x14
	ldrb	r1, [r4]
	add	r1, r1, r0
	mov	r3, #0x0
	mov	r0, #0x6
	strb	r0, [r1]
.L1807:
	ldrb	r1, [r4]
	ldr	r2, .L1867+0x18
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x54
	strb	r3, [r1]
.L1802:
	ldrb	r1, [r4]
.L1805:
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x83
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1651
.L1868:
	.align	2, 0
.L1867:
	.word	gBattleResources
	.word	gActiveBattler
	.word	0x821
	.word	gSelectionBattleScripts
	.word	BattleScript_PrintCantEscapeFromBattle
	.word	gBattleCommunication
	.word	gBattleStruct
.L1725:
	ldr	r2, .L1869
	ldr	r0, .L1869+0x4
	ldrb	r1, [r0]
	add	r1, r1, r2
	b	.L1808
.L1870:
	.align	2, 0
.L1869:
	.word	gBattleCommunication
	.word	gActiveBattler
.L1727:
	ldr	r4, .L1871
	ldr	r1, .L1871+0x4
	ldr	r3, .L1871+0x8
	ldrb	r5, [r3]
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	lsl	r0, r2, #0x4
	mov	r1, #0xf0
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	orr	r0, r0, r2
	lsl	r1, r2, #0x8
	orr	r0, r0, r1
	lsl	r2, r2, #0xc
	orr	r0, r0, r2
	ldr	r1, [r4]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.LCB15576
	b	.L1654	@long jump
.LCB15576:
	ldr	r1, .L1871+0xc
	add	r0, r5, r1
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x14
	bls	.LCB15583
	b	.L1654	@long jump
.LCB15583:
	lsl	r0, r0, #0x2
	ldr	r1, .L1871+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1872:
	.align	2, 0
.L1871:
	.word	gBattleControllerExecFlags
	.word	gBitTable
	.word	gActiveBattler
	.word	gChosenActionByBattler
	.word	.L1765
	.align	2, 0
	.align	2, 0
.L1765:
	.word	.L1730
	.word	.L1748
	.word	.L1752
	.word	.L1755
	.word	.L1756
	.word	.L1757
	.word	.L1758
	.word	.L1761
	.word	.L1762
	.word	.L1763
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1654
	.word	.L1764
.L1730:
	ldr	r0, .L1873
	ldr	r0, [r0]
	ldrb	r3, [r3]
	lsl	r1, r3, #0x9
	ldr	r4, .L1873+0x4
	add	r0, r0, r4
	add	r0, r0, r1
	ldrb	r1, [r0]
	cmp	r1, #0x3
	blt	.L1740	@cond_branch
	cmp	r1, #0x9
	ble	.L1738	@cond_branch
	cmp	r1, #0xf
	beq	.L1739	@cond_branch
	b	.L1740
.L1874:
	.align	2, 0
.L1873:
	.word	gBattleResources
	.word	0x821
.L1738:
	add	r0, r3, r2
	strb	r1, [r0]
	b	.L1651
.L1739:
	add	r1, r3, r2
	mov	r0, #0x2
	strb	r0, [r1]
	bl	sub_803CDF8
	b	.L1651
.L1740:
	mov	r0, #0x2
	bl	sub_818603C
	ldr	r7, .L1875
	ldr	r1, [r7]
	ldr	r6, .L1875+0x4
	ldrb	r4, [r6]
	lsl	r3, r4, #0x9
	ldr	r0, .L1875+0x8
	mov	r9, r0
	add	r0, r1, r0
	add	r0, r0, r3
	ldrb	r2, [r0]
	ldr	r0, .L1875+0xc
	mov	sl, r0
	add	r1, r1, sl
	add	r1, r1, r3
	ldrb	r0, [r1]
	lsl	r0, r0, #0x8
	orr	r2, r2, r0
	ldr	r0, .L1875+0x10
	cmp	r2, r0
	bne	.L1741	@cond_branch
	ldr	r0, .L1875+0x14
	add	r0, r4, r0
	mov	r1, #0x1
	strb	r1, [r0]
	ldrb	r0, [r6]
	bl	RecordedBattle_ClearBattlerAction
	b	.L1654
.L1876:
	.align	2, 0
.L1875:
	.word	gBattleResources
	.word	gActiveBattler
	.word	0x822
	.word	0x823
	.word	0xffff
	.word	gBattleCommunication
.L1741:
	bl	TrySetCantSelectMoveBattleScript
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1743	@cond_branch
	ldrb	r0, [r6]
	mov	r1, #0x1
	bl	RecordedBattle_ClearBattlerAction
	ldr	r0, .L1877
	ldrb	r1, [r6]
	add	r1, r1, r0
	mov	r3, #0x0
	mov	r0, #0x6
	strb	r0, [r1]
	ldrb	r1, [r6]
	ldr	r2, .L1877+0x4
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x54
	strb	r3, [r1]
	ldr	r1, [r7]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x9
	ldr	r4, .L1877+0x8
	add	r1, r1, r4
	add	r1, r1, r0
	strb	r3, [r1]
	ldrb	r1, [r6]
	ldr	r0, [r2]
	add	r1, r1, r0
	add	r1, r1, #0x83
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1651
.L1878:
	.align	2, 0
.L1877:
	.word	gBattleCommunication
	.word	gBattleStruct
	.word	0x821
.L1743:
	ldr	r0, .L1879
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xa
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1745	@cond_branch
	ldrb	r0, [r6]
	ldr	r1, [r7]
	lsl	r2, r0, #0x9
	add	r1, r1, r9
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	RecordedBattle_SetBattlerAction
	ldrb	r0, [r6]
	ldr	r1, [r7]
	lsl	r2, r0, #0x9
	add	r1, r1, sl
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	RecordedBattle_SetBattlerAction
.L1745:
	ldrb	r1, [r6]
	ldr	r0, .L1879+0x4
	mov	r8, r0
	ldr	r2, [r0]
	add	r2, r1, r2
	add	r2, r2, #0x7f
	ldr	r0, [r7]
	lsl	r1, r1, #0x9
	add	r0, r0, r9
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L1879+0x8
	ldrb	r2, [r6]
	lsl	r4, r2, #0x1
	add	r4, r4, r0
	ldr	r3, .L1879+0xc
	mov	r1, r8
	ldr	r5, [r1]
	add	r0, r2, r5
	add	r0, r0, #0x7f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	mov	r1, #0x5c
	mul	r1, r1, r2
	add	r0, r0, r1
	add	r3, r3, #0xc
	add	r0, r0, r3
	ldrh	r0, [r0]
	strh	r0, [r4]
	ldrb	r1, [r6]
	add	r5, r1, r5
	ldr	r0, [r7]
	lsl	r1, r1, #0x9
	add	r0, r0, sl
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r5, #0xc]
	ldr	r0, [r7]
	ldrb	r3, [r6]
	lsl	r1, r3, #0x9
	add	r0, r0, r9
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1746	@cond_branch
	mov	r4, r8
	ldr	r2, [r4]
	mov	r0, #0xa6
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r1, .L1879+0x10
	lsl	r0, r3, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldrb	r1, [r2]
	orr	r0, r0, r1
	strb	r0, [r2]
.L1746:
	ldr	r0, .L1879+0x14
	ldrb	r1, [r6]
	b	.L1809
.L1880:
	.align	2, 0
.L1879:
	.word	gBattleTypeFlags
	.word	gBattleStruct
	.word	gChosenMoveByBattler
	.word	gBattleMons
	.word	gBitTable
	.word	gBattleCommunication
.L1748:
	ldr	r0, .L1881
	ldr	r1, [r0]
	ldr	r5, .L1881+0x4
	ldrb	r4, [r5]
	lsl	r2, r4, #0x9
	ldr	r3, .L1881+0x8
	add	r0, r1, r3
	add	r0, r0, r2
	ldrb	r3, [r0]
	ldr	r6, .L1881+0xc
	add	r1, r1, r6
	add	r1, r1, r2
	ldrb	r0, [r1]
	lsl	r0, r0, #0x8
	orr	r3, r3, r0
	cmp	r3, #0
	bne	.LCB15871
	b	.L1810	@long jump
.LCB15871:
	ldr	r0, .L1881+0x10
	strh	r3, [r0]
	ldrh	r0, [r0]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L1751	@cond_branch
	ldr	r0, .L1881+0x14
	ldr	r0, [r0]
	mov	r1, #0xa5
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
.L1751:
	ldr	r0, .L1881+0x18
	ldrb	r1, [r5]
	b	.L1809
.L1882:
	.align	2, 0
.L1881:
	.word	gBattleResources
	.word	gActiveBattler
	.word	0x821
	.word	0x822
	.word	gLastUsedItem
	.word	gBattleStruct
	.word	gBattleCommunication
.L1752:
	ldr	r0, .L1883
	ldr	r0, [r0]
	ldr	r4, .L1883+0x4
	ldrb	r2, [r4]
	lsl	r1, r2, #0x9
	ldr	r3, .L1883+0x8
	add	r0, r0, r3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x6
	bne	.L1753	@cond_branch
	ldr	r0, .L1883+0xc
	add	r0, r2, r0
	mov	r1, #0x1
	strb	r1, [r0]
	ldrb	r0, [r4]
	bl	RecordedBattle_ClearBattlerAction
	b	.L1654
.L1884:
	.align	2, 0
.L1883:
	.word	gBattleResources
	.word	gActiveBattler
	.word	0x821
	.word	gBattleCommunication
.L1753:
	bl	sub_803CDF8
	b	.L1811
.L1755:
	ldr	r2, .L1885
	ldr	r0, [r2]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	str	r0, [r2]
	ldr	r2, .L1885+0x4
	ldr	r0, .L1885+0x8
	ldrb	r1, [r0]
	add	r1, r1, r2
	b	.L1808
.L1886:
	.align	2, 0
.L1885:
	.word	gHitMarker
	.word	gBattleCommunication
	.word	gActiveBattler
.L1756:
	ldr	r2, .L1887
	ldr	r0, .L1887+0x4
	ldrb	r1, [r0]
	add	r1, r1, r2
	b	.L1808
.L1888:
	.align	2, 0
.L1887:
	.word	gBattleCommunication
	.word	gActiveBattler
.L1757:
	ldr	r2, .L1889
	ldr	r0, .L1889+0x4
	ldrb	r1, [r0]
	add	r1, r1, r2
	b	.L1808
.L1890:
	.align	2, 0
.L1889:
	.word	gBattleCommunication
	.word	gActiveBattler
.L1758:
	ldr	r0, .L1891
	ldr	r1, [r0]
	ldr	r0, .L1891+0x4
	ldrb	r4, [r0]
	lsl	r3, r4, #0x9
	ldr	r6, .L1891+0x8
	add	r0, r1, r6
	add	r0, r0, r3
	ldrb	r2, [r0]
	ldr	r0, .L1891+0xc
	add	r1, r1, r0
	add	r1, r1, r3
	ldrb	r0, [r1]
	lsl	r0, r0, #0x8
	orr	r2, r2, r0
	cmp	r2, #0
	bne	.LCB16017
	b	.L1810	@long jump
.LCB16017:
	ldr	r1, .L1891+0x10
	add	r1, r4, r1
	b	.L1808
.L1892:
	.align	2, 0
.L1891:
	.word	gBattleResources
	.word	gActiveBattler
	.word	0x821
	.word	0x822
	.word	gBattleCommunication
.L1761:
	ldr	r2, .L1893
	ldr	r0, .L1893+0x4
	ldrb	r1, [r0]
	add	r1, r1, r2
	b	.L1808
.L1894:
	.align	2, 0
.L1893:
	.word	gBattleCommunication
	.word	gActiveBattler
.L1762:
	ldr	r2, .L1895
	ldr	r0, [r2]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	str	r0, [r2]
	ldr	r2, .L1895+0x4
	ldr	r0, .L1895+0x8
	ldrb	r1, [r0]
	add	r1, r1, r2
	b	.L1808
.L1896:
	.align	2, 0
.L1895:
	.word	gHitMarker
	.word	gBattleCommunication
	.word	gActiveBattler
.L1763:
	ldr	r2, .L1897
	ldr	r0, .L1897+0x4
	ldrb	r1, [r0]
	add	r1, r1, r2
	b	.L1808
.L1898:
	.align	2, 0
.L1897:
	.word	gBattleCommunication
	.word	gActiveBattler
.L1764:
	ldr	r1, .L1899
	ldr	r0, .L1899+0x4
	ldrb	r0, [r0]
	add	r0, r0, r1
	b	.L1799
.L1900:
	.align	2, 0
.L1899:
	.word	gBattleCommunication
	.word	gActiveBattler
.L1767:
	ldr	r3, .L1901
	ldr	r5, .L1901+0x4
	ldr	r0, .L1901+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r2, [r0]
	lsl	r1, r2, #0x4
	mov	r0, #0xf0
	lsl	r0, r0, #0x18
	orr	r1, r1, r0
	orr	r1, r1, r2
	lsl	r0, r2, #0x8
	orr	r1, r1, r0
	lsl	r2, r2, #0xc
	orr	r1, r1, r2
	ldr	r0, [r3]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB16117
	b	.L1654	@long jump
.LCB16117:
	bl	AllAtActionConfirmed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	neg	r1, r0
	orr	r1, r1, r0
	lsr	r4, r1, #0x1f
	ldr	r0, .L1901+0xc
	ldr	r0, [r0]
	mov	r1, #0x41
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1772	@cond_branch
	mov	r1, #0x2
	mov	r0, #0x2
	and	r0, r0, r6
	cmp	r0, #0
	bne	.L1772	@cond_branch
	add	r0, r6, #0
	eor	r0, r0, r1
	bl	GetBattlerAtPosition
	ldr	r1, .L1901+0x10
	ldr	r1, [r1]
	add	r1, r1, #0x8a
	ldrb	r1, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r5
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1771	@cond_branch
.L1772:
	mov	r0, #0x0
	mov	r1, #0x0
	add	r2, r4, #0
	bl	BtlController_EmitLinkStandbyMsg
	b	.L1773
.L1902:
	.align	2, 0
.L1901:
	.word	gBattleControllerExecFlags
	.word	gBitTable
	.word	gActiveBattler
	.word	gBattleTypeFlags
	.word	gBattleStruct
.L1771:
	mov	r0, #0x0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	BtlController_EmitLinkStandbyMsg
.L1773:
	ldr	r4, .L1903
	ldrb	r0, [r4]
	bl	MarkBattlerForControllerExec
.L1811:
	ldr	r0, .L1903+0x4
	ldrb	r1, [r4]
.L1809:
	add	r1, r1, r0
.L1808:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1654
.L1904:
	.align	2, 0
.L1903:
	.word	gActiveBattler
	.word	gBattleCommunication
.L1774:
	ldr	r3, .L1905
	ldr	r1, .L1905+0x4
	ldr	r0, .L1905+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	lsl	r1, r2, #0x4
	mov	r0, #0xf0
	lsl	r0, r0, #0x18
	orr	r1, r1, r0
	orr	r1, r1, r2
	lsl	r0, r2, #0x8
	orr	r1, r1, r0
	lsl	r2, r2, #0xc
	orr	r1, r1, r2
	ldr	r0, [r3]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB16228
	b	.L1654	@long jump
.LCB16228:
	ldr	r1, .L1905+0xc
	ldrb	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x4]
	b	.L1654
.L1906:
	.align	2, 0
.L1905:
	.word	gBattleControllerExecFlags
	.word	gBitTable
	.word	gActiveBattler
	.word	gBattleCommunication
.L1776:
	ldr	r5, .L1907
	ldrb	r2, [r5]
	ldr	r0, .L1907+0x4
	ldr	r0, [r0]
	add	r1, r2, r0
	add	r0, r1, #0
	add	r0, r0, #0x54
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1783	@cond_branch
	ldr	r0, .L1907+0x8
	add	r0, r2, r0
	add	r1, r1, #0x83
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1654
.L1908:
	.align	2, 0
.L1907:
	.word	gActiveBattler
	.word	gBattleStruct
	.word	gBattleCommunication
.L1780:
	ldr	r3, .L1909
	ldr	r1, .L1909+0x4
	ldr	r0, .L1909+0x8
	ldrb	r4, [r0]
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	lsl	r1, r2, #0x4
	mov	r0, #0xf0
	lsl	r0, r0, #0x18
	orr	r1, r1, r0
	orr	r1, r1, r2
	lsl	r0, r2, #0x8
	orr	r1, r1, r0
	lsl	r2, r2, #0xc
	orr	r1, r1, r2
	ldr	r0, [r3]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1654	@cond_branch
.L1810:
	ldr	r0, .L1909+0xc
	add	r0, r4, r0
.L1799:
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L1654
.L1910:
	.align	2, 0
.L1909:
	.word	gBattleControllerExecFlags
	.word	gBitTable
	.word	gActiveBattler
	.word	gBattleCommunication
.L1782:
	ldr	r5, .L1911
	ldrb	r2, [r5]
	ldr	r4, .L1911+0x4
	ldr	r0, [r4]
	add	r0, r2, r0
	add	r0, r0, #0x54
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1783	@cond_branch
	ldr	r0, .L1911+0x8
	ldr	r0, [r0]
	lsl	r1, r2, #0x9
	ldr	r3, .L1911+0xc
	add	r0, r0, r3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xd
	bne	.L1784	@cond_branch
	ldr	r2, .L1911+0x10
	ldr	r0, [r2]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	str	r0, [r2]
	ldr	r1, .L1911+0x14
	ldrb	r0, [r5]
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r1, .L1911+0x18
	ldrb	r0, [r5]
.L1800:
	add	r0, r0, r1
	mov	r1, #0x4
	strb	r1, [r0]
	b	.L1654
.L1912:
	.align	2, 0
.L1911:
	.word	gActiveBattler
	.word	gBattleStruct
	.word	gBattleResources
	.word	0x821
	.word	gHitMarker
	.word	gChosenActionByBattler
	.word	gBattleCommunication
.L1784:
	add	r0, r2, #0
	mov	r1, #0x1
	bl	RecordedBattle_ClearBattlerAction
	ldr	r2, .L1913
	ldrb	r0, [r5]
	add	r2, r0, r2
	ldr	r1, [r4]
	add	r0, r0, r1
	add	r0, r0, #0x83
	ldrb	r0, [r0]
	strb	r0, [r2]
	b	.L1654
.L1914:
	.align	2, 0
.L1913:
	.word	gBattleCommunication
.L1783:
	ldr	r0, .L1915
	strb	r2, [r0]
	ldr	r7, .L1915+0x4
	ldr	r6, .L1915+0x8
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r4, [r0]
	str	r4, [r7]
	ldr	r3, .L1915+0xc
	ldr	r1, .L1915+0x10
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	lsl	r1, r2, #0x4
	mov	r0, #0xf0
	lsl	r0, r0, #0x18
	orr	r1, r1, r0
	orr	r1, r1, r2
	lsl	r0, r2, #0x8
	orr	r1, r1, r0
	lsl	r2, r2, #0xc
	orr	r1, r1, r2
	ldr	r0, [r3]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1787	@cond_branch
	ldr	r0, .L1915+0x14
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	_call_via_r0
.L1787:
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r1, [r7]
	str	r1, [r0]
.L1654:
	ldr	r0, .L1915+0x18
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	ldr	r0, .L1915+0x1c
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r5, r0, #0
	ldrb	r4, [r5]
	cmp	r1, r4
	bcs	.LCB16455
	bl	.L1655	@far jump
.LCB16455:
.L1653:
	ldr	r0, .L1915+0x20
	ldrb	r0, [r0, #0x4]
	ldrb	r6, [r5]
	cmp	r0, r6
	bne	.L1651	@cond_branch
	mov	r0, #0x1
	bl	sub_818603C
	ldr	r1, .L1915+0x24
	ldr	r0, .L1915+0x28
	str	r0, [r1]
	ldr	r0, .L1915+0x2c
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1651	@cond_branch
	mov	r4, #0x0
	ldrb	r5, [r5]
	cmp	r4, r5
	bge	.L1651	@cond_branch
.L1796:
	ldr	r0, .L1915+0x30
	add	r0, r4, r0
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L1795	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1915+0x34
	ldr	r1, [r1]
	add	r1, r4, r1
	add	r1, r1, #0x5c
	ldrb	r1, [r1]
	bl	SwitchPartyOrderInGameMulti
.L1795:
	add	r4, r4, #0x1
	ldr	r0, .L1915+0x1c
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1796	@cond_branch
.L1651:
	add	sp, sp, #0x38
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1916:
	.align	2, 0
.L1915:
	.word	gBattlerAttacker
	.word	gBattlescriptCurrInstr
	.word	gSelectionBattleScripts
	.word	gBattleControllerExecFlags
	.word	gBitTable
	.word	gBattleScriptingCommandsTable
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gBattleCommunication
	.word	gBattleMainFunc
	.word	SetActionsAndBattlersTurnOrder
	.word	gBattleTypeFlags
	.word	gChosenActionByBattler
	.word	gBattleStruct
.Lfe69:
	.size	 HandleTurnActionSelectionState,.Lfe69-HandleTurnActionSelectionState
	.align	2, 0
	.type	 AllAtActionConfirmed,function
	.thumb_func
AllAtActionConfirmed:
	push	{r4, r5, lr}
	mov	r3, #0x0
	mov	r1, #0x0
	ldr	r0, .L1927
	ldrb	r2, [r0]
	add	r5, r0, #0
	cmp	r3, r2
	bge	.L1919	@cond_branch
	ldr	r4, .L1927+0x4
.L1921:
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bne	.L1920	@cond_branch
	add	r3, r3, #0x1
.L1920:
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L1921	@cond_branch
.L1919:
	add	r0, r3, #0x1
	ldrb	r5, [r5]
	cmp	r0, r5
	beq	.L1924	@cond_branch
	mov	r0, #0x0
	b	.L1926
.L1928:
	.align	2, 0
.L1927:
	.word	gBattlersCount
	.word	gBattleCommunication
.L1924:
	mov	r0, #0x1
.L1926:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 AllAtActionConfirmed,.Lfe70-AllAtActionConfirmed
	.align	2, 0
	.type	 sub_803CDF8,function
	.thumb_func
sub_803CDF8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r7, .L1931
	ldrb	r2, [r7]
	ldr	r6, .L1931+0x4
	ldr	r1, [r6]
	add	r1, r2, r1
	add	r1, r1, #0x5c
	ldr	r5, .L1931+0x8
	ldr	r0, [r5]
	lsl	r2, r2, #0x9
	ldr	r3, .L1931+0xc
	add	r0, r0, r3
	add	r0, r0, r2
	ldrb	r0, [r0]
	strb	r0, [r1]
	ldrb	r0, [r7]
	ldr	r1, [r5]
	lsl	r2, r0, #0x9
	add	r1, r1, r3
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	RecordedBattle_SetBattlerAction
	ldr	r0, .L1931+0x10
	ldr	r0, [r0]
	mov	r1, #0x42
	and	r0, r0, r1
	cmp	r0, #0x42
	bne	.L1930	@cond_branch
	ldrb	r0, [r7]
	ldr	r2, [r6]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, r2
	add	r1, r1, #0x60
	ldrb	r2, [r1]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r7]
	ldr	r0, [r6]
	lsl	r2, r1, #0x1
	add	r2, r2, r1
	add	r2, r2, r0
	add	r2, r2, #0x60
	ldr	r0, [r5]
	lsl	r1, r1, #0x9
	ldr	r3, .L1931+0x14
	mov	ip, r3
	add	r0, r0, ip
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r3, #0xf0
	add	r0, r3, #0
	and	r0, r0, r1
	ldrb	r1, [r2]
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r2, [r7]
	ldr	r1, [r6]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	add	r0, r0, r1
	add	r0, r0, #0x61
	ldr	r1, [r5]
	lsl	r2, r2, #0x9
	ldr	r4, .L1931+0x18
	mov	r8, r4
	add	r1, r1, r8
	add	r1, r1, r2
	ldrb	r1, [r1]
	strb	r1, [r0]
	ldrb	r0, [r7]
	mov	r4, #0x2
	eor	r0, r0, r4
	ldr	r2, [r6]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, r2
	add	r1, r1, #0x60
	ldrb	r2, [r1]
	add	r0, r3, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrb	r0, [r7]
	eor	r0, r0, r4
	ldr	r1, [r6]
	lsl	r2, r0, #0x1
	add	r2, r2, r0
	add	r2, r2, r1
	add	r2, r2, #0x60
	ldr	r1, [r5]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x9
	add	r1, r1, ip
	add	r1, r1, r0
	ldrb	r0, [r1]
	and	r3, r3, r0
	lsr	r3, r3, #0x4
	ldrb	r0, [r2]
	orr	r3, r3, r0
	strb	r3, [r2]
	ldrb	r0, [r7]
	eor	r4, r4, r0
	ldr	r0, [r6]
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	add	r1, r1, r0
	add	r1, r1, #0x62
	ldr	r2, [r5]
	ldrb	r0, [r7]
	lsl	r0, r0, #0x9
	add	r2, r2, r8
	add	r2, r2, r0
	ldrb	r0, [r2]
	strb	r0, [r1]
.L1930:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1932:
	.align	2, 0
.L1931:
	.word	gActiveBattler
	.word	gBattleStruct
	.word	gBattleResources
	.word	0x821
	.word	gBattleTypeFlags
	.word	0x822
	.word	0x823
.Lfe71:
	.size	 sub_803CDF8,.Lfe71-sub_803CDF8
	.align	2, 0
	.globl	SwapTurnOrder
	.type	 SwapTurnOrder,function
	.thumb_func
SwapTurnOrder:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L1934
	add	r4, r0, r2
	ldrb	r5, [r4]
	add	r2, r1, r2
	ldrb	r3, [r2]
	strb	r3, [r4]
	strb	r5, [r2]
	ldr	r2, .L1934+0x4
	add	r0, r0, r2
	ldrb	r5, [r0]
	add	r1, r1, r2
	ldrb	r2, [r1]
	strb	r2, [r0]
	strb	r5, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1935:
	.align	2, 0
.L1934:
	.word	gActionsByTurnOrder
	.word	gBattlerByTurnOrder
.Lfe72:
	.size	 SwapTurnOrder,.Lfe72-SwapTurnOrder
	.align	2, 0
	.globl	GetBattlerTotalSpeedStat
	.type	 GetBattlerTotalSpeedStat,function
	.thumb_func
GetBattlerTotalSpeedStat:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L1963
	mov	r0, #0x5c
	mul	r0, r0, r5
	add	r0, r0, r1
	ldrh	r4, [r0, #0x6]
	add	r0, r5, #0
	bl	GetBattlerAbility
	add	r6, r0, #0
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetBattlerHoldEffect
	mov	sl, r0
	mov	r0, #0xd
	bl	IsAbilityOnField
	cmp	r0, #0
	bne	.L1937	@cond_branch
	mov	r0, #0x4c
	bl	IsAbilityOnField
	cmp	r0, #0
	bne	.L1937	@cond_branch
	cmp	r6, #0x21
	bne	.L1938	@cond_branch
	ldr	r0, .L1963+0x4
	ldrh	r1, [r0]
	mov	r0, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1961	@cond_branch
.L1938:
	cmp	r6, #0x22
	bne	.L1940	@cond_branch
	ldr	r0, .L1963+0x4
	ldrh	r1, [r0]
	mov	r0, #0x60
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1961	@cond_branch
.L1940:
	cmp	r6, #0x92
	bne	.L1942	@cond_branch
	ldr	r0, .L1963+0x4
	ldrh	r1, [r0]
	mov	r0, #0x18
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1961	@cond_branch
.L1942:
	cmp	r6, #0xca
	bne	.L1937	@cond_branch
	ldr	r0, .L1963+0x4
	ldrh	r1, [r0]
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1937	@cond_branch
.L1961:
	lsl	r4, r4, #0x1
.L1937:
	cmp	r6, #0x5f
	bne	.L1945	@cond_branch
	ldr	r1, .L1963
	mov	r0, #0x5c
	mul	r0, r0, r5
	add	r1, r1, #0x50
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1945	@cond_branch
	mov	r0, #0x96
	mul	r0, r0, r4
	mov	r1, #0x64
	bl	__udivsi3
	add	r4, r0, #0
	lsl	r7, r5, #0x2
	b	.L1946
.L1964:
	.align	2, 0
.L1963:
	.word	gBattleMons
	.word	gBattleWeather
.L1945:
	cmp	r6, #0xcf
	bne	.L1947	@cond_branch
	ldr	r0, .L1965
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1947	@cond_branch
	lsl	r4, r4, #0x1
	lsl	r7, r5, #0x2
	b	.L1946
.L1966:
	.align	2, 0
.L1965:
	.word	gFieldStatuses
.L1947:
	lsl	r7, r5, #0x2
	cmp	r6, #0x70
	bne	.L1946	@cond_branch
	ldr	r0, .L1967
	add	r1, r7, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1d]
	cmp	r0, #0
	beq	.L1946	@cond_branch
	lsr	r4, r4, #0x1
.L1946:
	ldr	r2, .L1967+0x4
	mov	r0, #0x5c
	mov	r1, r5
	mul	r1, r1, r0
	mov	r9, r1
	ldr	r0, .L1967+0x8
	add	r0, r0, r9
	mov	r8, r0
	ldrb	r0, [r0, #0x1b]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x1
	add	r1, r0, r2
	ldrb	r1, [r1]
	mul	r4, r4, r1
	add	r2, r2, #0x1
	add	r0, r0, r2
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	__udivsi3
	add	r4, r0, #0
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetBattlerHoldEffect
	cmp	r0, #0x18
	beq	.L1962	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetBattlerHoldEffect
	cmp	r0, #0x63
	beq	.L1962	@cond_branch
	mov	r1, sl
	cmp	r1, #0x59
	bne	.L1953	@cond_branch
.L1962:
	lsr	r4, r4, #0x1
	b	.L1952
.L1968:
	.align	2, 0
.L1967:
	.word	gDisableStructs
	.word	gStatStageRatios
	.word	gBattleMons
.L1953:
	mov	r0, sl
	cmp	r0, #0x43
	bne	.L1955	@cond_branch
	mov	r0, #0x96
	mul	r0, r0, r4
	mov	r1, #0x64
	bl	__udivsi3
	add	r4, r0, #0
	b	.L1952
.L1955:
	mov	r1, sl
	cmp	r1, #0x5d
	bne	.L1952	@cond_branch
	mov	r1, r8
	ldrh	r0, [r1]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	cmp	r0, #0x84
	bne	.L1952	@cond_branch
	ldr	r0, .L1969
	add	r0, r0, #0x54
	add	r0, r0, r9
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1952	@cond_branch
	lsl	r4, r4, #0x1
.L1952:
	add	r0, r5, #0
	bl	GetBattlerPosition
	ldr	r2, .L1969+0x4
	mov	r1, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r0, [r1]
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1958	@cond_branch
	lsl	r4, r4, #0x1
.L1958:
	ldr	r0, .L1969+0x8
	ldr	r0, [r0]
	ldr	r0, [r0, #0x4]
	add	r0, r0, r7
	ldr	r0, [r0]
	mov	r1, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1959	@cond_branch
	lsl	r4, r4, #0x1
.L1959:
	ldr	r1, .L1969
	mov	r0, #0x5c
	mul	r0, r0, r5
	add	r1, r1, #0x50
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1960	@cond_branch
	cmp	r6, #0x5f
	beq	.L1960	@cond_branch
	lsr	r4, r4, #0x1
.L1960:
	add	r0, r4, #0
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1970:
	.align	2, 0
.L1969:
	.word	gBattleMons
	.word	gSideStatuses
	.word	gBattleResources
.Lfe73:
	.size	 GetBattlerTotalSpeedStat,.Lfe73-GetBattlerTotalSpeedStat
	.align	2, 0
	.globl	GetChosenMovePriority
	.type	 GetChosenMovePriority,function
	.thumb_func
GetChosenMovePriority:
	push	{lr}
	add	r3, r0, #0
	ldr	r0, .L1974
	lsl	r1, r3, #0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bge	.L1972	@cond_branch
	mov	r1, #0xa5
	b	.L1973
.L1975:
	.align	2, 0
.L1974:
	.word	gProtectStructs
.L1972:
	ldr	r2, .L1976
	ldr	r0, .L1976+0x4
	ldr	r0, [r0]
	add	r0, r3, r0
	add	r0, r0, #0x7f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	mov	r1, #0x5c
	mul	r1, r1, r3
	add	r0, r0, r1
	add	r2, r2, #0xc
	add	r0, r0, r2
	ldrh	r1, [r0]
.L1973:
	add	r0, r3, #0
	bl	GetMovePriority
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L1977:
	.align	2, 0
.L1976:
	.word	gBattleMons
	.word	gBattleStruct
.Lfe74:
	.size	 GetChosenMovePriority,.Lfe74-GetChosenMovePriority
	.align	2, 0
	.globl	GetMovePriority
	.type	 GetMovePriority,function
	.thumb_func
GetMovePriority:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r1, .L2003
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r4, r0, r1
	ldrb	r5, [r4, #0x8]
	lsl	r0, r7, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerAbility
	cmp	r0, #0xb1
	bne	.L1979	@cond_branch
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	bne	.L1979	@cond_branch
	ldr	r1, .L2003+0x4
	mov	r0, #0x5c
	mul	r0, r0, r7
	add	r0, r0, r1
	ldrh	r1, [r0, #0x2a]
	ldrh	r0, [r0, #0x2e]
	cmp	r1, r0
	bne	.L1979	@cond_branch
	lsl	r0, r5, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	b	.L2002
.L2004:
	.align	2, 0
.L2003:
	.word	gBattleMoves
	.word	gBattleMons
.L1979:
	lsl	r4, r7, #0x18
	lsr	r0, r4, #0x18
	bl	GetBattlerAbility
	cmp	r0, #0x9e
	bne	.L1981	@cond_branch
	ldr	r0, .L2005
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x10]
	cmp	r0, #0x2
	bne	.L1981	@cond_branch
	lsl	r0, r5, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	b	.L2002
.L2006:
	.align	2, 0
.L2005:
	.word	gBattleMoves
.L1981:
	lsr	r0, r4, #0x18
	bl	GetBattlerAbility
	cmp	r0, #0xcd
	bne	.L1980	@cond_branch
	ldr	r1, .L2007
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0]
	cmp	r1, #0x86
	bgt	.L1999	@cond_branch
	cmp	r1, #0x84
	bge	.L1996	@cond_branch
	cmp	r1, #0x20
	beq	.L1996	@cond_branch
	cmp	r1, #0x20
	bgt	.L2000	@cond_branch
	cmp	r1, #0x3
	beq	.L1996	@cond_branch
	b	.L1980
.L2008:
	.align	2, 0
.L2007:
	.word	gBattleMoves
.L2000:
	cmp	r1, #0x25
	beq	.L1996	@cond_branch
	cmp	r1, #0x6e
	beq	.L1996	@cond_branch
	b	.L1980
.L1999:
	cmp	r1, #0xb3
	beq	.L1996	@cond_branch
	cmp	r1, #0xb3
	bgt	.L2001	@cond_branch
	cmp	r1, #0x9d
	beq	.L1996	@cond_branch
	cmp	r1, #0xa2
	beq	.L1996	@cond_branch
	b	.L1980
.L2001:
	cmp	r1, #0xed
	beq	.L1996	@cond_branch
	ldr	r0, .L2009
	cmp	r1, r0
	bne	.L1980	@cond_branch
.L1996:
	lsl	r0, r5, #0x18
	mov	r1, #0xc0
	lsl	r1, r1, #0x12
.L2002:
	add	r0, r0, r1
	lsr	r5, r0, #0x18
.L1980:
	lsl	r0, r5, #0x18
	asr	r0, r0, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L2010:
	.align	2, 0
.L2009:
	.word	0x107
.Lfe75:
	.size	 GetMovePriority,.Lfe75-GetMovePriority
	.align	2, 0
	.globl	GetWhoStrikesFirst
	.type	 GetWhoStrikesFirst,function
	.thumb_func
GetWhoStrikesFirst:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	mov	r0, #0x0
	mov	sl, r0
	mov	r9, r0
	mov	r1, #0x0
	str	r1, [sp, #0xc]
	str	r0, [sp, #0x10]
	add	r0, r6, #0
	bl	GetBattlerTotalSpeedStat
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x1
	bl	GetBattlerHoldEffect
	mov	r8, r0
	cmp	r0, #0x1a
	bne	.L2012	@cond_branch
	ldr	r0, .L2046
	ldrh	r4, [r0]
	add	r0, r6, #0
	bl	GetBattlerHoldEffectParam
	add	r1, r0, #0
	lsl	r0, r1, #0x10
	sub	r0, r0, r1
	mov	r1, #0x64
	bl	__udivsi3
	cmp	r4, r0
	bcs	.L2012	@cond_branch
	mov	r1, #0x1
	mov	sl, r1
.L2012:
	add	r0, r5, #0
	bl	GetBattlerTotalSpeedStat
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetBattlerHoldEffect
	add	r7, r0, #0
	cmp	r7, #0x1a
	bne	.L2013	@cond_branch
	ldr	r0, .L2046
	ldrh	r4, [r0]
	add	r0, r5, #0
	bl	GetBattlerHoldEffectParam
	add	r1, r0, #0
	lsl	r0, r1, #0x10
	sub	r0, r0, r1
	mov	r1, #0x64
	bl	__udivsi3
	cmp	r4, r0
	bcs	.L2013	@cond_branch
	mov	r0, #0x1
	mov	r9, r0
.L2013:
	ldr	r1, [sp]
	cmp	r1, #0
	bne	.L2014	@cond_branch
	ldr	r4, .L2046+0x4
	add	r0, r6, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2015	@cond_branch
	add	r0, r6, #0
	bl	GetChosenMovePriority
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0xc]
.L2015:
	add	r0, r5, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2014	@cond_branch
	add	r0, r5, #0
	bl	GetChosenMovePriority
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x10]
.L2014:
	ldr	r1, [sp, #0xc]
	lsl	r0, r1, #0x18
	asr	r2, r0, #0x18
	ldr	r1, [sp, #0x10]
	lsl	r0, r1, #0x18
	asr	r0, r0, #0x18
	cmp	r2, r0
	bne	.L2017	@cond_branch
	mov	r0, sl
	cmp	r0, #0
	beq	.L2018	@cond_branch
	mov	r1, r9
	cmp	r1, #0
	bne	.L2041	@cond_branch
.L2045:
	mov	r1, #0x0
	b	.L2038
.L2047:
	.align	2, 0
.L2046:
	.word	gRandomTurnNumber
	.word	gChosenActionByBattler
.L2018:
	mov	r0, r9
	cmp	r0, #0
	beq	.L2020	@cond_branch
.L2041:
	mov	r1, sl
	cmp	r1, #0
	beq	.L2043	@cond_branch
.L2020:
	mov	r0, r8
	cmp	r0, #0x54
	bne	.L2022	@cond_branch
	cmp	r7, #0x54
	beq	.L2042	@cond_branch
	b	.L2043
.L2022:
	cmp	r7, #0x54
	bne	.L2024	@cond_branch
.L2042:
	mov	r1, r8
	cmp	r1, #0x54
	bne	.L2045	@cond_branch
.L2024:
	add	r0, r6, #0
	bl	GetBattlerAbility
	cmp	r0, #0x64
	bne	.L2026	@cond_branch
	add	r0, r5, #0
	bl	GetBattlerAbility
	cmp	r0, #0x64
	bne	.L2043	@cond_branch
.L2026:
	add	r0, r5, #0
	bl	GetBattlerAbility
	cmp	r0, #0x64
	bne	.L2028	@cond_branch
	add	r0, r6, #0
	bl	GetBattlerAbility
	cmp	r0, #0x64
	bne	.L2045	@cond_branch
.L2028:
	ldr	r0, [sp, #0x4]
	ldr	r1, [sp, #0x8]
	cmp	r0, r1
	bne	.L2030	@cond_branch
	bl	Random
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L2030	@cond_branch
	mov	r1, #0x2
	b	.L2038
.L2030:
	ldr	r0, [sp, #0x4]
	ldr	r1, [sp, #0x8]
	cmp	r0, r1
	bcs	.L2032	@cond_branch
	ldr	r0, .L2048
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	mov	r1, #0x1
	cmp	r0, #0
	beq	.L2038	@cond_branch
	b	.L2045
.L2049:
	.align	2, 0
.L2048:
	.word	gFieldStatuses
.L2032:
	ldr	r0, .L2050
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	neg	r0, r0
	lsr	r1, r0, #0x1f
	b	.L2038
.L2051:
	.align	2, 0
.L2050:
	.word	gFieldStatuses
.L2017:
	mov	r1, #0x0
	cmp	r2, r0
	bge	.L2038	@cond_branch
.L2043:
	mov	r1, #0x1
.L2038:
	add	r0, r1, #0
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe76:
	.size	 GetWhoStrikesFirst,.Lfe76-GetWhoStrikesFirst
	.align	2, 0
	.type	 SetActionsAndBattlersTurnOrder,function
	.thumb_func
SetActionsAndBattlersTurnOrder:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r3, #0x0
	ldr	r0, .L2106
	ldr	r1, [r0]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2053	@cond_branch
	ldr	r0, .L2106+0x4
	strb	r3, [r0]
	ldr	r4, .L2106+0x8
	mov	r8, r0
	ldrb	r0, [r4]
	cmp	r3, r0
	bcc	.LCB17589
	b	.L2059	@long jump
.LCB17589:
	ldr	r7, .L2106+0xc
	ldr	r6, .L2106+0x10
	mov	r2, r8
	ldr	r5, .L2106+0x14
.L2057:
	add	r1, r3, r7
	ldrb	r0, [r2]
	add	r0, r0, r6
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r1, r3, r5
	ldrb	r0, [r2]
	strb	r0, [r1]
	add	r3, r3, #0x1
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r4]
	cmp	r0, r1
	bcc	.L2057	@cond_branch
	b	.L2059
.L2107:
	.align	2, 0
.L2106:
	.word	gBattleTypeFlags
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gActionsByTurnOrder
	.word	gChosenActionByBattler
	.word	gBattlerByTurnOrder
.L2053:
	mov	r2, #0x2
	and	r1, r1, r2
	cmp	r1, #0
	beq	.L2060	@cond_branch
	ldr	r0, .L2108
	strb	r3, [r0]
	ldr	r1, .L2108+0x4
	mov	r8, r0
	add	r2, r1, #0
	ldrb	r2, [r2]
	cmp	r3, r2
	bcs	.L2067	@cond_branch
	ldr	r0, .L2108+0x8
	ldrb	r1, [r0]
	add	r4, r0, #0
	cmp	r1, #0x3
	beq	.L2103	@cond_branch
.L2063:
	mov	r7, r8
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L2108+0x4
	ldrb	r1, [r1]
	cmp	r0, r1
	bcs	.L2067	@cond_branch
	ldrb	r0, [r7]
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L2063	@cond_branch
	b	.L2103
.L2109:
	.align	2, 0
.L2108:
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gChosenActionByBattler
.L2060:
	ldr	r1, .L2110
	ldrb	r0, [r1]
	ldr	r4, .L2110+0x4
	mov	r8, r4
	cmp	r0, #0x3
	bne	.L2068	@cond_branch
	strb	r3, [r4]
	mov	r3, #0x5
.L2068:
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x3
	bne	.L2067	@cond_branch
	mov	r7, r8
	strb	r2, [r7]
.L2103:
	mov	r3, #0x5
.L2067:
	cmp	r3, #0x5
	bne	.L2070	@cond_branch
	ldr	r6, .L2110+0x8
	ldr	r1, .L2110
	mov	r2, r8
	ldrb	r0, [r2]
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r6]
	ldr	r2, .L2110+0xc
	mov	r3, r8
	ldrb	r0, [r3]
	strb	r0, [r2]
	mov	r3, #0x1
	mov	r5, #0x0
	add	r4, r1, #0
	ldr	r7, .L2110+0x10
	mov	sl, r7
	ldr	r0, .L2110+0x14
	mov	ip, r0
	ldr	r1, .L2110+0x18
	mov	r9, r1
	ldr	r7, .L2110+0x1c
	ldrb	r7, [r7]
	cmp	r5, r7
	bge	.L2072	@cond_branch
	add	r7, r6, #0
	add	r6, r4, #0
	add	r4, r2, #0
	ldr	r2, .L2110+0x1c
.L2074:
	mov	r0, r8
	ldrb	r0, [r0]
	cmp	r5, r0
	beq	.L2073	@cond_branch
	add	r1, r3, r7
	add	r0, r5, r6
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, r4
	strb	r5, [r0]
	add	r3, r3, #0x1
.L2073:
	add	r5, r5, #0x1
	ldrb	r1, [r2]
	cmp	r5, r1
	blt	.L2074	@cond_branch
.L2072:
	mov	r2, ip
	mov	r3, sl
	str	r2, [r3]
	mov	r4, r9
	ldr	r0, [r4]
	ldr	r7, .L2110+0x20
	add	r0, r0, r7
	b	.L2104
.L2111:
	.align	2, 0
.L2110:
	.word	gChosenActionByBattler
	.word	gActiveBattler
	.word	gActionsByTurnOrder
	.word	gBattlerByTurnOrder
	.word	gBattleMainFunc
	.word	CheckMegaEvolutionBeforeTurn
	.word	gBattleStruct
	.word	gBattlersCount
	.word	0x2aa
.L2070:
	mov	r0, #0x0
	mov	r1, r8
	strb	r0, [r1]
	ldr	r2, .L2112
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L2079	@cond_branch
	ldr	r6, .L2112+0x4
	mov	r2, r8
	ldr	r5, .L2112+0x8
	ldr	r4, .L2112+0xc
.L2081:
	ldrb	r0, [r2]
	add	r0, r0, r6
	ldrb	r1, [r0]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L2080	@cond_branch
	add	r0, r3, r5
	strb	r1, [r0]
	add	r1, r3, r4
	mov	r7, r8
	ldrb	r0, [r7]
	strb	r0, [r1]
	add	r3, r3, #0x1
.L2080:
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L2112
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L2081	@cond_branch
.L2079:
	mov	r0, #0x0
	mov	r2, r8
	strb	r0, [r2]
	ldr	r4, .L2112
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L2085	@cond_branch
	ldr	r6, .L2112+0x4
	ldr	r5, .L2112+0x8
	ldr	r4, .L2112+0xc
.L2087:
	ldrb	r0, [r2]
	add	r0, r0, r6
	ldrb	r1, [r0]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L2086	@cond_branch
	add	r0, r3, r5
	strb	r1, [r0]
	add	r1, r3, r4
	mov	r7, r8
	ldrb	r0, [r7]
	strb	r0, [r1]
	add	r3, r3, #0x1
.L2086:
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L2112
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L2087	@cond_branch
.L2085:
	mov	r5, #0x0
	b	.L2105
.L2113:
	.align	2, 0
.L2112:
	.word	gBattlersCount
	.word	gChosenActionByBattler
	.word	gActionsByTurnOrder
	.word	gBattlerByTurnOrder
.L2093:
	add	r4, r5, #0x1
	add	r7, r4, #0
	ldrb	r1, [r1]
	cmp	r7, r1
	bge	.L2092	@cond_branch
	ldr	r6, .L2114
	lsl	r2, r5, #0x18
	mov	r8, r2
.L2097:
	ldr	r0, .L2114+0x4
	add	r1, r5, r0
	ldrb	r3, [r1]
	add	r0, r4, r0
	ldrb	r1, [r0]
	add	r0, r5, r6
	ldrb	r2, [r0]
	cmp	r2, #0x1
	beq	.L2096	@cond_branch
	add	r0, r4, r6
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L2096	@cond_branch
	cmp	r2, #0x2
	beq	.L2096	@cond_branch
	cmp	r0, #0x2
	beq	.L2096	@cond_branch
	add	r0, r3, #0
	mov	r2, #0x0
	bl	GetWhoStrikesFirst
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2096	@cond_branch
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	mov	r3, r8
	lsr	r0, r3, #0x18
	bl	SwapTurnOrder
.L2096:
	add	r4, r4, #0x1
	ldr	r0, .L2114+0x8
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L2097	@cond_branch
.L2092:
	add	r5, r7, #0
.L2105:
	ldr	r1, .L2114+0x8
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L2093	@cond_branch
.L2059:
	ldr	r1, .L2114+0xc
	ldr	r0, .L2114+0x10
	str	r0, [r1]
	ldr	r0, .L2114+0x14
	ldr	r0, [r0]
	ldr	r4, .L2114+0x18
	add	r0, r0, r4
.L2104:
	mov	r1, #0x0
	strb	r1, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2115:
	.align	2, 0
.L2114:
	.word	gActionsByTurnOrder
	.word	gBattlerByTurnOrder
	.word	gBattlersCount
	.word	gBattleMainFunc
	.word	CheckMegaEvolutionBeforeTurn
	.word	gBattleStruct
	.word	0x2aa
.Lfe77:
	.size	 SetActionsAndBattlersTurnOrder,.Lfe77-SetActionsAndBattlersTurnOrder
	.align	2, 0
	.type	 TurnValuesCleanUp,function
	.thumb_func
TurnValuesCleanUp:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r2, .L2128
	mov	r0, #0x0
	strb	r0, [r2]
	ldr	r0, .L2128+0x4
	ldrb	r1, [r0]
	add	r4, r2, #0
	mov	ip, r0
	cmp	r1, #0
	beq	.L2118	@cond_branch
	ldr	r5, .L2128+0x8
	add	r6, r4, #0
	ldr	r7, .L2128+0xc
.L2120:
	mov	r0, r8
	cmp	r0, #0
	beq	.L2121	@cond_branch
	ldrb	r2, [r6]
	lsl	r2, r2, #0x4
	add	r2, r2, r5
	ldrb	r0, [r2]
	mov	r3, #0x2
	neg	r3, r3
	add	r1, r3, #0
	and	r0, r0, r1
	strb	r0, [r2]
	ldrb	r2, [r6]
	lsl	r2, r2, #0x4
	add	r2, r2, r5
	ldrb	r0, [r2]
	sub	r3, r3, #0x1
	add	r1, r3, #0
	and	r0, r0, r1
	strb	r0, [r2]
	ldrb	r2, [r6]
	lsl	r2, r2, #0x4
	add	r2, r2, r5
	ldrb	r0, [r2]
	sub	r3, r3, #0x2
	add	r1, r3, #0
	and	r0, r0, r1
	strb	r0, [r2]
	ldrb	r2, [r6]
	lsl	r2, r2, #0x4
	add	r2, r2, r5
	ldrb	r0, [r2]
	sub	r3, r3, #0x4
	add	r1, r3, #0
	and	r0, r0, r1
	strb	r0, [r2]
	b	.L2122
.L2129:
	.align	2, 0
.L2128:
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gProtectStructs
	.word	gBattleMons+0x54
.L2121:
	ldr	r4, .L2130
	ldrb	r0, [r4]
	lsl	r0, r0, #0x4
	add	r0, r0, r5
	mov	r1, #0x0
	mov	r2, #0x10
	bl	memset
	ldr	r3, .L2130+0x4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r1, r0, r3
	ldrb	r0, [r1, #0x19]
	cmp	r0, #0
	beq	.L2123	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x19]
.L2123:
	ldrb	r1, [r4]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r1, r0, r3
	ldrb	r0, [r1, #0x1b]
	ldr	r2, .L2130+0x8
	mov	ip, r2
	cmp	r0, #0
	beq	.L2122	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1b]
	ldrb	r2, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0
	bne	.L2122	@cond_branch
	mov	r0, #0x5c
	mul	r2, r2, r0
	add	r2, r2, r7
	ldr	r0, [r2]
	ldr	r1, .L2130+0xc
	and	r0, r0, r1
	str	r0, [r2]
.L2122:
	ldr	r0, .L2130+0x4
	ldrb	r2, [r4]
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1, #0xe]
	cmp	r0, #0
	bne	.L2119	@cond_branch
	mov	r0, #0x5c
	mul	r2, r2, r0
	add	r2, r2, r7
	ldr	r0, [r2]
	ldr	r1, .L2130+0x10
	and	r0, r0, r1
	str	r0, [r2]
.L2119:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r3, ip
	ldrb	r3, [r3]
	cmp	r0, r3
	bcc	.L2120	@cond_branch
.L2118:
	ldr	r1, .L2130+0x14
	ldr	r0, [r1]
	ldr	r2, .L2130+0x18
	and	r0, r0, r2
	str	r0, [r1]
	ldr	r0, [r1, #0x4]
	and	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r1, .L2130+0x1c
	mov	r0, #0x0
	strb	r0, [r1, #0x8]
	strb	r0, [r1, #0x1c]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2131:
	.align	2, 0
.L2130:
	.word	gActiveBattler
	.word	gDisableStructs
	.word	gBattlersCount
	.word	-0x400001
	.word	-0x1000001
	.word	gSideStatuses
	.word	-0x3c0001
	.word	gSideTimers
.Lfe78:
	.size	 TurnValuesCleanUp,.Lfe78-TurnValuesCleanUp
	.align	2, 0
	.globl	SpecialStatusesClear
	.type	 SpecialStatusesClear,function
	.thumb_func
SpecialStatusesClear:
	push	{lr}
	ldr	r0, .L2133
	mov	r1, #0x0
	mov	r2, #0x60
	bl	memset
	pop	{r0}
	bx	r0
.L2134:
	.align	2, 0
.L2133:
	.word	gSpecialStatuses
.Lfe79:
	.size	 SpecialStatusesClear,.Lfe79-SpecialStatusesClear
	.align	2, 0
	.type	 CheckMegaEvolutionBeforeTurn,function
	.thumb_func
CheckMegaEvolutionBeforeTurn:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L2144
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	ldr	r1, .L2144+0x4
	mov	r8, r1
	cmp	r0, #0
	bne	.L2136	@cond_branch
	ldr	r0, [r1]
	ldr	r2, .L2144+0x8
	add	r0, r0, r2
	ldr	r1, .L2144+0xc
	ldrb	r0, [r0]
	mov	ip, r1
	ldrb	r3, [r1]
	cmp	r0, r3
	bcs	.L2136	@cond_branch
	ldr	r6, .L2144+0x10
	mov	r7, r8
	ldr	r0, .L2144+0x14
	mov	sl, r0
	mov	r9, r8
.L2139:
	ldr	r1, [r7]
	add	r1, r1, r2
	ldrb	r0, [r1]
	mov	r2, sl
	strb	r0, [r2]
	strb	r0, [r6]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r7]
	mov	r3, #0xa6
	lsl	r3, r3, #0x2
	add	r5, r0, r3
	ldrb	r2, [r5]
	ldr	r1, .L2144+0x18
	ldrb	r3, [r6]
	lsl	r0, r3, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r2, #0
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L2137	@cond_branch
	ldr	r0, .L2144+0x1c
	lsl	r1, r3, #0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	blt	.L2137	@cond_branch
	bic	r2, r2, r4
	strb	r2, [r5]
	ldr	r2, .L2144+0x20
	ldrb	r1, [r6]
	mov	r0, #0x5c
	mul	r0, r0, r1
	add	r0, r0, r2
	ldrh	r0, [r0, #0x30]
	ldr	r1, .L2144+0x24
	strh	r0, [r1]
	ldr	r0, [r7]
	ldr	r2, .L2144+0x28
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L2141	@cond_branch
	ldr	r0, .L2144+0x2c
	bl	BattleScriptExecute
	b	.L2135
.L2145:
	.align	2, 0
.L2144:
	.word	gHitMarker
	.word	gBattleStruct
	.word	0x2aa
	.word	gBattlersCount
	.word	gActiveBattler
	.word	gBattlerAttacker
	.word	gBitTable
	.word	gProtectStructs
	.word	gBattleMons
	.word	gLastUsedItem
	.word	0x2ad
	.word	BattleScript_WishMegaEvolution
.L2141:
	ldr	r0, .L2146
	bl	BattleScriptExecute
	b	.L2135
.L2147:
	.align	2, 0
.L2146:
	.word	BattleScript_MegaEvolution
.L2137:
	mov	r3, r9
	ldr	r0, [r3]
	ldr	r2, .L2148
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, ip
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L2139	@cond_branch
.L2136:
	ldr	r1, .L2148+0x4
	ldr	r0, .L2148+0x8
	str	r0, [r1]
	mov	r2, r8
	ldr	r0, [r2]
	add	r0, r0, #0x48
	mov	r1, #0x0
	strb	r1, [r0]
.L2135:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2149:
	.align	2, 0
.L2148:
	.word	0x2aa
	.word	gBattleMainFunc
	.word	CheckFocusPunch_ClearVarsBeforeTurnStarts
.Lfe80:
	.size	 CheckMegaEvolutionBeforeTurn,.Lfe80-CheckMegaEvolutionBeforeTurn
	.align	2, 0
	.type	 CheckFocusPunch_ClearVarsBeforeTurnStarts,function
	.thumb_func
CheckFocusPunch_ClearVarsBeforeTurnStarts:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L2162
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2151	@cond_branch
	ldr	r2, .L2162+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x48
	ldr	r1, .L2162+0x8
	ldrb	r0, [r0]
	mov	ip, r2
	add	r6, r1, #0
	ldrb	r1, [r6]
	cmp	r0, r1
	bcs	.L2151	@cond_branch
	ldr	r5, .L2162+0xc
	ldr	r4, .L2162+0x10
	mov	r7, #0x84
	lsl	r7, r7, #0x1
.L2154:
	ldr	r1, [r2]
	add	r1, r1, #0x48
	ldrb	r0, [r1]
	strb	r0, [r4]
	strb	r0, [r5]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L2162+0x14
	ldrb	r3, [r5]
	lsl	r0, r3, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, r7
	bne	.L2152	@cond_branch
	ldr	r1, .L2162+0x18
	mov	r0, #0x5c
	mul	r0, r0, r3
	add	r1, r1, #0x50
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2152	@cond_branch
	ldr	r2, .L2162+0x1c
	ldrb	r1, [r4]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1a]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	bne	.L2152	@cond_branch
	ldr	r0, .L2162+0x20
	lsl	r1, r3, #0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	blt	.L2152	@cond_branch
	ldr	r0, .L2162+0x24
	bl	BattleScriptExecute
	b	.L2150
.L2163:
	.align	2, 0
.L2162:
	.word	gHitMarker
	.word	gBattleStruct
	.word	gBattlersCount
	.word	gActiveBattler
	.word	gBattlerAttacker
	.word	gChosenMoveByBattler
	.word	gBattleMons
	.word	gDisableStructs
	.word	gProtectStructs
	.word	BattleScript_FocusPunchSetUp
.L2152:
	mov	r2, ip
	ldr	r0, [r2]
	add	r0, r0, #0x48
	ldrb	r0, [r0]
	ldrb	r1, [r6]
	cmp	r0, r1
	bcc	.L2154	@cond_branch
.L2151:
	bl	TryClearRageAndFuryCutter
	ldr	r1, .L2164
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L2164+0x4
	ldr	r0, .L2164+0x8
	ldrb	r0, [r0]
	strb	r0, [r1]
	ldr	r2, .L2164+0xc
	ldr	r1, [r2]
	mov	r0, #0x0
	strb	r0, [r1, #0x12]
	mov	r4, #0x0
	add	r7, r2, #0
	ldr	r6, .L2164+0x10
	mov	r5, #0x0
	ldr	r0, .L2164+0x14
	mov	r2, #0x3
	neg	r2, r2
	add	r3, r0, #0x2
.L2160:
	ldr	r0, [r7]
	add	r0, r0, r6
	add	r0, r0, r4
	strb	r5, [r0]
	ldrb	r1, [r3]
	add	r0, r2, #0
	and	r0, r0, r1
	strb	r0, [r3]
	add	r3, r3, #0x18
	add	r4, r4, #0x1
	cmp	r4, #0x3
	bls	.L2160	@cond_branch
	mov	r2, #0x0
	ldr	r1, .L2164+0x18
	ldr	r0, .L2164+0x1c
	str	r0, [r1]
	ldr	r0, .L2164+0x20
	strb	r2, [r0, #0x3]
	strb	r2, [r0, #0x4]
	ldr	r0, .L2164+0x24
	mov	r1, #0x0
	strh	r2, [r0, #0x30]
	ldr	r0, .L2164+0x28
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	add	r0, r0, #0x20
	strb	r1, [r0]
.L2150:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2165:
	.align	2, 0
.L2164:
	.word	gCurrentTurnActionNumber
	.word	gCurrentActionFuncId
	.word	gActionsByTurnOrder
	.word	gBattleStruct
	.word	0x287
	.word	gSpecialStatuses
	.word	gBattleMainFunc
	.word	RunTurnActionsFunctions
	.word	gBattleCommunication
	.word	gBattleScripting
	.word	gBattleResources
.Lfe81:
	.size	 CheckFocusPunch_ClearVarsBeforeTurnStarts,.Lfe81-CheckFocusPunch_ClearVarsBeforeTurnStarts
	.align	2, 0
	.type	 RunTurnActionsFunctions,function
	.thumb_func
RunTurnActionsFunctions:
	push	{r4, r5, r6, lr}
	ldr	r6, .L2171
	ldrb	r0, [r6]
	ldr	r2, .L2171+0x4
	cmp	r0, #0
	beq	.L2167	@cond_branch
	mov	r0, #0xc
	strb	r0, [r2]
.L2167:
	ldr	r5, .L2171+0x8
	ldr	r0, [r5]
	add	r0, r0, #0x4b
	ldr	r4, .L2171+0xc
	ldrb	r1, [r4]
	strb	r1, [r0]
	ldr	r1, .L2171+0x10
	ldrb	r0, [r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	ldr	r0, .L2171+0x14
	ldrb	r1, [r4]
	ldrb	r0, [r0]
	cmp	r1, r0
	bcc	.L2168	@cond_branch
	ldr	r2, .L2171+0x18
	ldr	r0, [r2]
	ldr	r1, .L2171+0x1c
	and	r0, r0, r1
	str	r0, [r2]
	ldr	r3, .L2171+0x20
	ldr	r2, .L2171+0x24
	ldrb	r1, [r6]
	mov	r0, #0x7f
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	str	r0, [r3]
	b	.L2169
.L2172:
	.align	2, 0
.L2171:
	.word	gBattleOutcome
	.word	gCurrentActionFuncId
	.word	gBattleStruct
	.word	gCurrentTurnActionNumber
	.word	sTurnActionsFuncsTable
	.word	gBattlersCount
	.word	gHitMarker
	.word	-0x100001
	.word	gBattleMainFunc
	.word	sEndTurnFuncsTable
.L2168:
	ldr	r0, [r5]
	add	r0, r0, #0x4b
	ldrb	r0, [r0]
	cmp	r0, r1
	beq	.L2169	@cond_branch
	ldr	r2, .L2173
	ldr	r0, [r2]
	ldr	r1, .L2173+0x4
	and	r0, r0, r1
	ldr	r1, .L2173+0x8
	and	r0, r0, r1
	str	r0, [r2]
.L2169:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2174:
	.align	2, 0
.L2173:
	.word	gHitMarker
	.word	-0x201
	.word	-0x80001
.Lfe82:
	.size	 RunTurnActionsFunctions,.Lfe82-RunTurnActionsFunctions
	.align	2, 0
	.type	 HandleEndTurn_BattleWon,function
	.thumb_func
HandleEndTurn_BattleWon:
	push	{r4, lr}
	ldr	r1, .L2196
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L2196+0x4
	ldr	r2, [r1]
	ldr	r0, .L2196+0x8
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2176	@cond_branch
	ldr	r1, .L2196+0xc
	ldr	r4, .L2196+0x10
	ldrb	r0, [r4]
	strh	r0, [r1]
	ldr	r1, .L2196+0x14
	ldrb	r0, [r4]
	strb	r0, [r1]
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	ldr	r1, .L2196+0x18
	strb	r0, [r1]
	ldr	r1, .L2196+0x1c
	ldr	r0, .L2196+0x20
	str	r0, [r1]
	ldrb	r1, [r4]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r4]
	b	.L2177
.L2197:
	.align	2, 0
.L2196:
	.word	gCurrentActionFuncId
	.word	gBattleTypeFlags
	.word	0x2000002
	.word	gSpecialVar_Result
	.word	gBattleOutcome
	.word	gBattleTextBuff1
	.word	gBattlerAttacker
	.word	gBattlescriptCurrInstr
	.word	BattleScript_LinkBattleWonOrLost
.L2176:
	mov	r0, #0x8
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2178	@cond_branch
	ldr	r0, .L2198
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L2178	@cond_branch
	bl	BattleStopLowHpSound
	ldr	r1, .L2198+0x4
	ldr	r0, .L2198+0x8
	str	r0, [r1]
	ldr	r0, .L2198+0xc
	ldrh	r1, [r0]
	ldr	r0, .L2198+0x10
	cmp	r1, r0
	bne	.LCB18839
	b	.L2192	@long jump
.LCB18839:
	b	.L2193
.L2199:
	.align	2, 0
.L2198:
	.word	0x43f0900
	.word	gBattlescriptCurrInstr
	.word	BattleScript_FrontierTrainerBattleWon
	.word	gTrainerBattleOpponent_A
	.word	0x3fe
.L2178:
	ldr	r0, [r1]
	mov	r1, #0xa
	and	r0, r0, r1
	cmp	r0, #0x8
	beq	.LCB18860
	b	.L2182	@long jump
.LCB18860:
	bl	BattleStopLowHpSound
	ldr	r1, .L2200
	ldr	r0, .L2200+0x4
	str	r0, [r1]
	ldr	r2, .L2200+0x8
	ldr	r0, .L2200+0xc
	ldrh	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1]
	sub	r0, r0, #0x3
	cmp	r0, #0x32
	bls	.LCB18877
	b	.L2193	@long jump
.LCB18877:
	lsl	r0, r0, #0x2
	ldr	r1, .L2200+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2201:
	.align	2, 0
.L2200:
	.word	gBattlescriptCurrInstr
	.word	BattleScript_LocalTrainerBattleWon
	.word	gTrainers
	.word	gTrainerBattleOpponent_A
	.word	.L2194
	.align	2, 0
	.align	2, 0
.L2194:
	.word	.L2191
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2191
	.word	.L2193
	.word	.L2191
	.word	.L2193
	.word	.L2191
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2185
	.word	.L2192
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2185
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2191
	.word	.L2193
	.word	.L2193
	.word	.L2193
	.word	.L2191
.L2185:
	ldr	r0, .L2202
	bl	PlayBGM
	b	.L2177
.L2203:
	.align	2, 0
.L2202:
	.word	0x163
.L2191:
	mov	r0, #0xd4
	lsl	r0, r0, #0x1
	bl	PlayBGM
	b	.L2177
.L2192:
	mov	r0, #0xb1
	lsl	r0, r0, #0x1
	bl	PlayBGM
	b	.L2177
.L2193:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	bl	PlayBGM
	b	.L2177
.L2182:
	ldr	r1, .L2204
	ldr	r0, .L2204+0x4
	str	r0, [r1]
.L2177:
	ldr	r1, .L2204+0x8
	ldr	r0, .L2204+0xc
	str	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L2205:
	.align	2, 0
.L2204:
	.word	gBattlescriptCurrInstr
	.word	BattleScript_PayDayMoneyAndPickUpItems
	.word	gBattleMainFunc
	.word	HandleEndTurn_FinishBattle
.Lfe83:
	.size	 HandleEndTurn_BattleWon,.Lfe83-HandleEndTurn_BattleWon
	.align	2, 0
	.type	 HandleEndTurn_BattleLost,function
	.thumb_func
HandleEndTurn_BattleLost:
	push	{r4, lr}
	ldr	r1, .L2213
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L2213+0x4
	ldr	r1, [r0]
	ldr	r0, .L2213+0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2207	@cond_branch
	ldr	r0, .L2213+0xc
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L2208	@cond_branch
	ldr	r3, .L2213+0x10
	ldrb	r2, [r3]
	mov	r0, #0x80
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2209	@cond_branch
	ldr	r1, .L2213+0x14
	ldr	r0, .L2213+0x18
	str	r0, [r1]
	mov	r0, #0x7f
	and	r0, r0, r2
	strb	r0, [r3]
	ldr	r0, .L2213+0x1c
	ldr	r1, [r0]
	ldr	r0, .L2213+0x20
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x8
	orr	r0, r0, r2
	strb	r0, [r1]
	b	.L2212
.L2214:
	.align	2, 0
.L2213:
	.word	gCurrentActionFuncId
	.word	gBattleTypeFlags
	.word	0x2000002
	.word	0x3f0100
	.word	gBattleOutcome
	.word	gBattlescriptCurrInstr
	.word	BattleScript_PrintPlayerForfeitedLinkBattle
	.word	gSaveBlock2Ptr
	.word	0xc31
.L2209:
	ldr	r1, .L2215
	ldr	r0, .L2215+0x4
	str	r0, [r1]
	mov	r0, #0x7f
	and	r0, r0, r2
	strb	r0, [r3]
	b	.L2212
.L2216:
	.align	2, 0
.L2215:
	.word	gBattlescriptCurrInstr
	.word	BattleScript_82DAA0B
.L2208:
	ldr	r1, .L2217
	ldr	r4, .L2217+0x4
	ldrb	r0, [r4]
	strb	r0, [r1]
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	ldr	r1, .L2217+0x8
	strb	r0, [r1]
	ldr	r1, .L2217+0xc
	ldr	r0, .L2217+0x10
	str	r0, [r1]
	ldrb	r1, [r4]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r4]
	b	.L2212
.L2218:
	.align	2, 0
.L2217:
	.word	gBattleTextBuff1
	.word	gBattleOutcome
	.word	gBattlerAttacker
	.word	gBattlescriptCurrInstr
	.word	BattleScript_LinkBattleWonOrLost
.L2207:
	ldr	r1, .L2219
	ldr	r0, .L2219+0x4
	str	r0, [r1]
.L2212:
	ldr	r1, .L2219+0x8
	ldr	r0, .L2219+0xc
	str	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L2220:
	.align	2, 0
.L2219:
	.word	gBattlescriptCurrInstr
	.word	BattleScript_LocalBattleLost
	.word	gBattleMainFunc
	.word	HandleEndTurn_FinishBattle
.Lfe84:
	.size	 HandleEndTurn_BattleLost,.Lfe84-HandleEndTurn_BattleLost
	.align	2, 0
	.type	 HandleEndTurn_RanFromBattle,function
	.thumb_func
HandleEndTurn_RanFromBattle:
	push	{lr}
	ldr	r1, .L2232
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L2232+0x4
	ldr	r2, [r1]
	ldr	r0, .L2232+0x8
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2222	@cond_branch
	mov	r0, #0x8
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L2222	@cond_branch
	ldr	r1, .L2232+0xc
	ldr	r0, .L2232+0x10
	str	r0, [r1]
	ldr	r1, .L2232+0x14
	mov	r0, #0x9
	strb	r0, [r1]
	ldr	r0, .L2232+0x18
	ldr	r1, [r0]
	ldr	r0, .L2232+0x1c
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x8
	orr	r0, r0, r2
	strb	r0, [r1]
	b	.L2223
.L2233:
	.align	2, 0
.L2232:
	.word	gCurrentActionFuncId
	.word	gBattleTypeFlags
	.word	0x3f0100
	.word	gBattlescriptCurrInstr
	.word	BattleScript_PrintPlayerForfeited
	.word	gBattleOutcome
	.word	gSaveBlock2Ptr
	.word	0xc31
.L2222:
	ldr	r0, [r1]
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2224	@cond_branch
	ldr	r1, .L2234
	ldr	r0, .L2234+0x4
	str	r0, [r1]
	ldr	r1, .L2234+0x8
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2223
.L2235:
	.align	2, 0
.L2234:
	.word	gBattlescriptCurrInstr
	.word	BattleScript_PrintPlayerForfeited
	.word	gBattleOutcome
.L2224:
	ldr	r1, .L2236
	ldr	r0, .L2236+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	beq	.L2228	@cond_branch
	cmp	r0, #0x2
	beq	.L2229	@cond_branch
	ldr	r1, .L2236+0x8
	ldr	r0, .L2236+0xc
	b	.L2231
.L2237:
	.align	2, 0
.L2236:
	.word	gProtectStructs
	.word	gBattlerAttacker
	.word	gBattlescriptCurrInstr
	.word	BattleScript_GotAwaySafely
.L2228:
	ldr	r1, .L2238
	ldr	r0, .L2238+0x4
	b	.L2231
.L2239:
	.align	2, 0
.L2238:
	.word	gBattlescriptCurrInstr
	.word	BattleScript_SmokeBallEscape
.L2229:
	ldr	r1, .L2240
	ldr	r0, .L2240+0x4
.L2231:
	str	r0, [r1]
.L2223:
	ldr	r1, .L2240+0x8
	ldr	r0, .L2240+0xc
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L2241:
	.align	2, 0
.L2240:
	.word	gBattlescriptCurrInstr
	.word	BattleScript_RanAwayUsingMonAbility
	.word	gBattleMainFunc
	.word	HandleEndTurn_FinishBattle
.Lfe85:
	.size	 HandleEndTurn_RanFromBattle,.Lfe85-HandleEndTurn_RanFromBattle
	.align	2, 0
	.type	 HandleEndTurn_MonFled,function
	.thumb_func
HandleEndTurn_MonFled:
	ldr	r1, .L2243
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L2243+0x4
	mov	r0, #0xfd
	strb	r0, [r1]
	mov	r0, #0x7
	strb	r0, [r1, #0x1]
	ldr	r2, .L2243+0x8
	ldrb	r0, [r2]
	strb	r0, [r1, #0x2]
	ldr	r3, .L2243+0xc
	ldrb	r0, [r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	strb	r0, [r1, #0x3]
	mov	r0, #0xff
	strb	r0, [r1, #0x4]
	ldr	r1, .L2243+0x10
	ldr	r0, .L2243+0x14
	str	r0, [r1]
	ldr	r1, .L2243+0x18
	ldr	r0, .L2243+0x1c
	str	r0, [r1]
	bx	lr
.L2244:
	.align	2, 0
.L2243:
	.word	gCurrentActionFuncId
	.word	gBattleTextBuff1
	.word	gBattlerAttacker
	.word	gBattlerPartyIndexes
	.word	gBattlescriptCurrInstr
	.word	BattleScript_WildMonFled
	.word	gBattleMainFunc
	.word	HandleEndTurn_FinishBattle
.Lfe86:
	.size	 HandleEndTurn_MonFled,.Lfe86-HandleEndTurn_MonFled
	.align	2, 0
	.type	 HandleEndTurn_FinishBattle,function
	.thumb_func
HandleEndTurn_FinishBattle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L2264
	ldrb	r0, [r0]
	sub	r0, r0, #0xb
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.LCB19282
	b	.L2246	@long jump
.LCB19282:
	ldr	r0, .L2264+0x4
	ldr	r1, [r0]
	ldr	r0, .L2264+0x8
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L2247	@cond_branch
	ldr	r2, .L2264+0xc
	strb	r1, [r2]
	ldr	r0, .L2264+0x10
	ldrb	r0, [r0]
	cmp	r1, r0
	bcs	.L2249	@cond_branch
	add	r5, r2, #0
	ldr	r0, .L2264+0x14
	mov	r8, r0
	mov	r7, #0x64
	ldr	r6, .L2264+0x18
.L2251:
	ldrb	r0, [r5]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2250	@cond_branch
	ldr	r4, .L2264+0x1c
	ldrh	r0, [r4, #0x6]
	cmp	r0, #0
	bne	.L2253	@cond_branch
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x6]
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x2
	add	r2, r4, #0
	add	r2, r2, #0x8
	bl	GetMonData
	b	.L2250
.L2265:
	.align	2, 0
.L2264:
	.word	gCurrentActionFuncId
	.word	gBattleTypeFlags
	.word	0x23f0b92
	.word	gActiveBattler
	.word	gBattlersCount
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
	.word	gBattleResults
.L2253:
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x26]
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x2
	add	r2, r4, #0
	add	r2, r2, #0x14
	bl	GetMonData
.L2250:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	ldr	r1, .L2266
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L2251	@cond_branch
.L2249:
	bl	PutPokemonTodayCaughtOnAir
.L2247:
	ldr	r0, .L2266+0x4
	ldr	r0, [r0]
	ldr	r1, .L2266+0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2256	@cond_branch
	ldr	r0, .L2266+0xc
	ldrb	r1, [r0, #0x5]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2256	@cond_branch
	bl	sub_80EE184
.L2256:
	bl	sub_8186444
	mov	r0, #0x3
	bl	BeginFastPaletteFade
	mov	r0, #0x5
	bl	FadeOutMapMusic
	mov	r4, #0x0
.L2260:
	add	r0, r4, #0
	bl	UndoMegaEvolution
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UndoFormChange
	add	r4, r4, #0x1
	cmp	r4, #0x5
	bls	.L2260	@cond_branch
	ldr	r1, .L2266+0x10
	ldr	r0, .L2266+0x14
	str	r0, [r1]
	ldr	r1, .L2266+0x18
	ldr	r0, .L2266+0x1c
	str	r0, [r1]
	b	.L2262
.L2267:
	.align	2, 0
.L2266:
	.word	gBattlersCount
	.word	gBattleTypeFlags
	.word	0x23f0b9a
	.word	gBattleResults
	.word	gBattleMainFunc
	.word	FreeResetData_ReturnToOvOrDoEvolutions
	.word	gCB2_AfterEvolution
	.word	BattleMainCB2
.L2246:
	ldr	r0, .L2268
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L2262	@cond_branch
	ldr	r1, .L2268+0x4
	ldr	r0, .L2268+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
.L2262:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2269:
	.align	2, 0
.L2268:
	.word	gBattleControllerExecFlags
	.word	gBattleScriptingCommandsTable
	.word	gBattlescriptCurrInstr
.Lfe87:
	.size	 HandleEndTurn_FinishBattle,.Lfe87-HandleEndTurn_FinishBattle
	.align	2, 0
	.type	 FreeResetData_ReturnToOvOrDoEvolutions,function
	.thumb_func
FreeResetData_ReturnToOvOrDoEvolutions:
	push	{r4, lr}
	ldr	r0, .L2279
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L2271	@cond_branch
	ldr	r0, .L2279+0x4
	strb	r1, [r0]
	ldr	r0, .L2279+0x8
	ldrb	r1, [r0]
	add	r4, r0, #0
	ldr	r3, .L2279+0xc
	cmp	r1, #0
	beq	.L2272	@cond_branch
	ldr	r0, .L2279+0x10
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L2273	@cond_branch
	cmp	r0, #0x7
	bne	.L2272	@cond_branch
.L2273:
	ldr	r1, .L2279+0xc
	ldr	r0, [r1]
	ldr	r3, .L2279+0x14
	add	r2, r0, r3
	ldrb	r0, [r2]
	add	r3, r1, #0
	cmp	r0, #0x63
	bhi	.L2272	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L2274
.L2280:
	.align	2, 0
.L2279:
	.word	gPaletteFade
	.word	gIsFishingEncounter
	.word	gDexnavBattle
	.word	gSaveBlock1Ptr
	.word	gBattleOutcome
	.word	0x361f
.L2272:
	ldr	r0, [r3]
	ldr	r1, .L2281
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L2274:
	ldr	r1, .L2281+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r4]
	bl	ResetSpriteData
	ldr	r0, .L2281+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L2275	@cond_branch
	ldr	r0, .L2281+0xc
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L2276	@cond_branch
	cmp	r0, #0x7
	bne	.L2275	@cond_branch
.L2276:
	ldr	r1, .L2281+0x10
	ldr	r0, .L2281+0x14
	str	r0, [r1]
	b	.L2271
.L2282:
	.align	2, 0
.L2281:
	.word	0x361f
	.word	gIsSurfingEncounter
	.word	gLeveledUpInBattle
	.word	gBattleOutcome
	.word	gBattleMainFunc
	.word	TryEvolvePokemon
.L2275:
	ldr	r1, .L2283
	ldr	r0, .L2283+0x4
	str	r0, [r1]
	b	.L2270
.L2284:
	.align	2, 0
.L2283:
	.word	gBattleMainFunc
	.word	ReturnFromBattleToOverworld
.L2271:
	bl	FreeAllWindowBuffers
	ldr	r0, .L2285
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2270	@cond_branch
	bl	FreeMonSpritesGfx
	bl	FreeBattleResources
	bl	FreeBattleSpritesData
.L2270:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2286:
	.align	2, 0
.L2285:
	.word	gBattleTypeFlags
.Lfe88:
	.size	 FreeResetData_ReturnToOvOrDoEvolutions,.Lfe88-FreeResetData_ReturnToOvOrDoEvolutions
	.align	2, 0
	.type	 TryEvolvePokemon,function
	.thumb_func
TryEvolvePokemon:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L2299
	ldrb	r1, [r0]
	add	r3, r0, #0
	cmp	r1, #0
	beq	.L2289	@cond_branch
.L2290:
	mov	r6, #0x0
.L2294:
	ldrb	r2, [r3]
	ldr	r0, .L2299+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2293	@cond_branch
	bic	r2, r2, r1
	strb	r2, [r3]
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L2299+0x8
	add	r5, r1, r0
	add	r0, sp, #0x4
	str	r0, [sp]
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r3, #0x0
	bl	GetEvolutionTargetSpecies
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0
	beq	.L2293	@cond_branch
	bl	FreeAllWindowBuffers
	ldr	r1, .L2299+0xc
	ldr	r0, .L2299+0x10
	str	r0, [r1]
	lsl	r3, r6, #0x18
	lsr	r3, r3, #0x18
	add	r0, sp, #0x4
	ldrb	r0, [r0]
	str	r0, [sp]
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x1
	bl	EvolutionScene
	b	.L2287
.L2300:
	.align	2, 0
.L2299:
	.word	gLeveledUpInBattle
	.word	gBitTable
	.word	gPlayerParty
	.word	gBattleMainFunc
	.word	WaitForEvoSceneToFinish
.L2293:
	add	r6, r6, #0x1
	ldr	r3, .L2301
	cmp	r6, #0x5
	ble	.L2294	@cond_branch
	ldrb	r0, [r3]
	cmp	r0, #0
	bne	.L2290	@cond_branch
.L2289:
	ldr	r1, .L2301+0x4
	ldr	r0, .L2301+0x8
	str	r0, [r1]
.L2287:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2302:
	.align	2, 0
.L2301:
	.word	gLeveledUpInBattle
	.word	gBattleMainFunc
	.word	ReturnFromBattleToOverworld
.Lfe89:
	.size	 TryEvolvePokemon,.Lfe89-TryEvolvePokemon
	.align	2, 0
	.type	 WaitForEvoSceneToFinish,function
	.thumb_func
WaitForEvoSceneToFinish:
	push	{lr}
	ldr	r0, .L2305
	ldr	r1, [r0, #0x4]
	ldr	r0, .L2305+0x4
	cmp	r1, r0
	bne	.L2304	@cond_branch
	ldr	r1, .L2305+0x8
	ldr	r0, .L2305+0xc
	str	r0, [r1]
.L2304:
	pop	{r0}
	bx	r0
.L2306:
	.align	2, 0
.L2305:
	.word	gMain
	.word	BattleMainCB2
	.word	gBattleMainFunc
	.word	TryEvolvePokemon
.Lfe90:
	.size	 WaitForEvoSceneToFinish,.Lfe90-WaitForEvoSceneToFinish
	.align	2, 0
	.type	 ReturnFromBattleToOverworld,function
	.thumb_func
ReturnFromBattleToOverworld:
	push	{r4, r5, r6, lr}
	ldr	r6, .L2313
	ldr	r0, [r6]
	mov	r5, #0x2
	and	r0, r0, r5
	cmp	r0, #0
	bne	.L2308	@cond_branch
	ldr	r4, .L2313+0x4
	add	r0, r4, #0
	bl	RandomlyGivePartyPokerus
	add	r0, r4, #0
	bl	PartySpreadPokerus
.L2308:
	ldr	r4, [r6]
	add	r0, r4, #0
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L2309	@cond_branch
	ldr	r0, .L2313+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2307	@cond_branch
.L2309:
	ldr	r1, .L2313+0xc
	ldr	r5, .L2313+0x10
	ldrb	r0, [r5]
	strh	r0, [r1]
	ldr	r3, .L2313+0x14
	ldr	r0, .L2313+0x18
	add	r2, r3, r0
	ldrb	r1, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L2313+0x1c
	ldr	r0, [r0]
	str	r0, [r3]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	and	r4, r4, r0
	cmp	r4, #0
	beq	.L2310	@cond_branch
	ldr	r0, .L2313+0x20
	bl	UpdateRoamerHPStatus
	ldrb	r1, [r5]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2312	@cond_branch
	cmp	r1, #0x7
	bne	.L2310	@cond_branch
.L2312:
	bl	SetRoamerInactive
.L2310:
	mov	r0, #0x5a
	bl	m4aSongNumStop
	ldr	r0, .L2313+0x14
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
.L2307:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2314:
	.align	2, 0
.L2313:
	.word	gBattleTypeFlags
	.word	gPlayerParty
	.word	gReceivedRemoteLinkPlayers
	.word	gSpecialVar_Result
	.word	gBattleOutcome
	.word	gMain
	.word	0x439
	.word	gPreBattleCallback1
	.word	gEnemyParty
.Lfe91:
	.size	 ReturnFromBattleToOverworld,.Lfe91-ReturnFromBattleToOverworld
	.align	2, 0
	.globl	RunBattleScriptCommands_PopCallbacksStack
	.type	 RunBattleScriptCommands_PopCallbacksStack,function
	.thumb_func
RunBattleScriptCommands_PopCallbacksStack:
	push	{lr}
	ldr	r0, .L2320
	ldrb	r0, [r0]
	sub	r0, r0, #0xb
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L2316	@cond_branch
	ldr	r3, .L2320+0x4
	ldr	r0, [r3]
	ldr	r0, [r0, #0xc]
	add	r1, r0, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L2317	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L2317:
	ldr	r2, .L2320+0x8
	ldr	r0, [r3]
	ldr	r1, [r0, #0xc]
	add	r0, r1, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	str	r0, [r2]
	b	.L2318
.L2321:
	.align	2, 0
.L2320:
	.word	gCurrentActionFuncId
	.word	gBattleResources
	.word	gBattleMainFunc
.L2316:
	ldr	r0, .L2322
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L2318	@cond_branch
	ldr	r1, .L2322+0x4
	ldr	r0, .L2322+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
.L2318:
	pop	{r0}
	bx	r0
.L2323:
	.align	2, 0
.L2322:
	.word	gBattleControllerExecFlags
	.word	gBattleScriptingCommandsTable
	.word	gBattlescriptCurrInstr
.Lfe92:
	.size	 RunBattleScriptCommands_PopCallbacksStack,.Lfe92-RunBattleScriptCommands_PopCallbacksStack
	.align	2, 0
	.globl	RunBattleScriptCommands
	.type	 RunBattleScriptCommands,function
	.thumb_func
RunBattleScriptCommands:
	push	{lr}
	ldr	r0, .L2326
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L2325	@cond_branch
	ldr	r1, .L2326+0x4
	ldr	r0, .L2326+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
.L2325:
	pop	{r0}
	bx	r0
.L2327:
	.align	2, 0
.L2326:
	.word	gBattleControllerExecFlags
	.word	gBattleScriptingCommandsTable
	.word	gBattlescriptCurrInstr
.Lfe93:
	.size	 RunBattleScriptCommands,.Lfe93-RunBattleScriptCommands
	.align	2, 0
	.globl	SetTypeBeforeUsingMove
	.type	 SetTypeBeforeUsingMove,function
	.thumb_func
SetTypeBeforeUsingMove:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	cmp	r7, #0xa5
	bne	.LCB20010
	b	.L2328	@long jump
.LCB20010:
	ldr	r5, .L2382
	ldr	r0, [r5]
	mov	r1, #0x0
	mov	r8, r1
	mov	r1, #0x0
	strb	r1, [r0, #0x12]
	ldr	r0, [r5]
	ldr	r2, .L2382+0x4
	add	r0, r0, r2
	add	r0, r0, r6
	strb	r1, [r0]
	ldr	r0, .L2382+0x8
	lsl	r3, r6, #0x1
	add	r1, r3, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r2, [r1, #0x2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x2]
	ldr	r1, .L2382+0xc
	lsl	r2, r7, #0x2
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r4, r0, r1
	ldrh	r1, [r4]
	mov	sl, r3
	mov	r9, r2
	cmp	r1, #0xcb
	bne	.L2330	@cond_branch
	mov	r0, #0xd
	bl	IsAbilityOnField
	cmp	r0, #0
	beq	.LCB20051
	b	.L2340	@long jump
.LCB20051:
	mov	r0, #0x4c
	bl	IsAbilityOnField
	cmp	r0, #0
	beq	.LCB20056
	b	.L2340	@long jump
.LCB20056:
	ldr	r0, .L2382+0x10
	ldrh	r1, [r0]
	mov	r0, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2332	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x8b
	strb	r0, [r1, #0x12]
	b	.L2340
.L2383:
	.align	2, 0
.L2382:
	.word	gBattleStruct
	.word	0x287
	.word	gSpecialStatuses
	.word	gBattleMoves
	.word	gBattleWeather
.L2332:
	mov	r0, #0x18
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2334	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x85
	strb	r0, [r1, #0x12]
	b	.L2340
.L2334:
	mov	r0, #0x60
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2336	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x8a
	strb	r0, [r1, #0x12]
	b	.L2340
.L2336:
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2338	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x8f
	strb	r0, [r1, #0x12]
	b	.L2340
.L2338:
	ldr	r1, [r5]
	mov	r0, #0x80
	strb	r0, [r1, #0x12]
	b	.L2340
.L2330:
	cmp	r1, #0x87
	bne	.L2341	@cond_branch
	ldr	r1, .L2384
	mov	r0, #0x5c
	mov	r4, r6
	mul	r4, r4, r0
	add	r4, r4, r1
	ldrb	r0, [r4, #0x14]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	mov	r3, #0x1
	add	r2, r3, #0
	and	r2, r2, r0
	ldrh	r1, [r4, #0x14]
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x1b
	add	r0, r3, #0
	and	r0, r0, r1
	lsl	r0, r0, #0x1
	orr	r2, r2, r0
	ldrb	r1, [r4, #0x15]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x1b
	add	r0, r3, #0
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	orr	r2, r2, r0
	ldr	r1, [r4, #0x14]
	lsl	r1, r1, #0xc
	lsr	r1, r1, #0x1b
	add	r0, r3, #0
	and	r0, r0, r1
	lsl	r0, r0, #0x3
	orr	r2, r2, r0
	ldrh	r1, [r4, #0x16]
	lsl	r1, r1, #0x17
	lsr	r1, r1, #0x1b
	add	r0, r3, #0
	and	r0, r0, r1
	lsl	r0, r0, #0x4
	orr	r2, r2, r0
	ldrb	r0, [r4, #0x17]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	and	r3, r3, r0
	lsl	r3, r3, #0x5
	orr	r2, r2, r3
	ldr	r4, [r5]
	lsl	r0, r2, #0x4
	sub	r0, r0, r2
	mov	r1, #0x3f
	bl	__divsi3
	add	r0, r0, #0x1
	strb	r0, [r4, #0x12]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x12]
	cmp	r0, #0x8
	bls	.L2342	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r1, #0x12]
.L2342:
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x12]
	mov	r2, #0xc0
	b	.L2375
.L2385:
	.align	2, 0
.L2384:
	.word	gBattleMons
.L2341:
	ldr	r0, .L2386
	cmp	r1, r0
	bne	.L2344	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x1
	bl	GetBattlerHoldEffect
	ldrb	r4, [r4, #0x11]
	cmp	r0, r4
	bne	.L2340	@cond_branch
	ldr	r1, .L2386+0x4
	mov	r0, #0x5c
	mul	r0, r0, r6
	add	r0, r0, r1
	ldrh	r0, [r0, #0x30]
	bl	ItemId_GetSecondaryId
	ldr	r2, [r5]
	mov	r1, #0x80
	orr	r0, r0, r1
	b	.L2376
.L2387:
	.align	2, 0
.L2386:
	.word	0x12b
	.word	gBattleMons
.L2344:
	mov	r0, #0x9e
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L2347	@cond_branch
	ldr	r0, .L2388
	mov	r1, #0x5c
	mul	r1, r1, r6
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x22
	ldrb	r2, [r0]
	cmp	r2, #0x9
	bne	.L2378	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x23
	ldrb	r2, [r0]
	cmp	r2, #0x9
	bne	.L2378	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x24
	ldrb	r2, [r0]
	cmp	r2, #0x9
	beq	.L2340	@cond_branch
.L2378:
	ldr	r0, [r5]
	mov	r1, #0x80
.L2375:
	orr	r1, r1, r2
	strb	r1, [r0, #0x12]
	b	.L2340
.L2389:
	.align	2, 0
.L2388:
	.word	gBattleMons
.L2347:
	cmp	r1, #0xd8
	bne	.L2340	@cond_branch
	ldr	r1, .L2390
	mov	r0, #0x5c
	mul	r0, r0, r6
	add	r4, r0, r1
	ldrh	r0, [r4, #0x30]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x7
	bne	.L2340	@cond_branch
	ldr	r2, [r5]
	ldr	r1, .L2390+0x4
	ldrh	r0, [r4, #0x30]
	sub	r0, r0, #0x8f
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
.L2376:
	strb	r0, [r2, #0x12]
.L2340:
	add	r0, r6, #0
	bl	GetBattlerAbility
	add	r3, r0, #0
	ldr	r0, .L2390+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x12]
	cmp	r0, #0
	beq	.L2356	@cond_branch
	mov	r4, #0x3f
	and	r4, r4, r0
	b	.L2357
.L2391:
	.align	2, 0
.L2390:
	.word	gBattleMons
	.word	gNaturalGiftTable
	.word	gBattleStruct
.L2356:
	ldr	r1, .L2392
	mov	r2, r9
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r4, [r0, #0x3]
.L2357:
	ldr	r0, .L2392+0x4
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2360	@cond_branch
	cmp	r4, #0
	beq	.L2359	@cond_branch
.L2360:
	ldr	r1, .L2392+0x8
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x17
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2358	@cond_branch
.L2359:
	ldr	r2, .L2392+0xc
	ldr	r1, [r2]
	mov	r0, #0x8d
	b	.L2380
.L2393:
	.align	2, 0
.L2392:
	.word	gBattleMoves
	.word	gFieldStatuses
	.word	gStatuses3
	.word	gBattleStruct
.L2358:
	ldr	r0, .L2394
	mov	r2, r9
	add	r1, r2, r7
	lsl	r1, r1, #0x2
	add	r2, r1, r0
	ldrb	r1, [r2, #0x3]
	add	r4, r0, #0
	cmp	r1, #0
	bne	.L2374	@cond_branch
	ldrh	r1, [r2]
	cmp	r1, #0x87
	beq	.L2362	@cond_branch
	cmp	r1, #0xcb
	beq	.L2362	@cond_branch
	ldr	r0, .L2394+0x4
	cmp	r1, r0
	beq	.L2362	@cond_branch
	cmp	r1, #0xd8
	beq	.L2362	@cond_branch
	cmp	r3, #0xb6
	bne	.L2364	@cond_branch
	mov	r3, #0x12
	b	.L2363
.L2395:
	.align	2, 0
.L2394:
	.word	gBattleMoves
	.word	0x12b
.L2364:
	cmp	r3, #0xae
	bne	.L2365	@cond_branch
	mov	r3, #0xf
	b	.L2363
.L2365:
	cmp	r3, #0xb8
	bne	.L2366	@cond_branch
	mov	r3, #0x2
	b	.L2363
.L2366:
	cmp	r3, #0xce
	bne	.L2362	@cond_branch
	mov	r3, #0xd
.L2363:
	ldr	r2, .L2396
	ldr	r1, [r2]
	mov	r0, #0x80
	orr	r3, r3, r0
	strb	r3, [r1, #0x12]
	b	.L2381
.L2397:
	.align	2, 0
.L2396:
	.word	gBattleStruct
.L2362:
	mov	r1, r9
	add	r0, r1, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0
	beq	.L2368	@cond_branch
.L2374:
	mov	r2, r9
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, #0x87
	beq	.L2368	@cond_branch
	cmp	r0, #0xcb
	beq	.L2368	@cond_branch
	cmp	r3, #0x60
	bne	.L2368	@cond_branch
	ldr	r2, .L2398
	ldr	r1, [r2]
	mov	r0, #0x80
	strb	r0, [r1, #0x12]
.L2381:
	ldr	r0, [r2]
	ldr	r3, .L2398+0x4
	add	r0, r0, r3
	add	r0, r0, r6
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L2361
.L2399:
	.align	2, 0
.L2398:
	.word	gBattleStruct
	.word	0x287
.L2368:
	mov	r1, r9
	add	r0, r1, r7
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	and	r0, r0, r1
	ldr	r2, .L2400
	cmp	r0, #0
	beq	.L2361	@cond_branch
	cmp	r3, #0xcc
	bne	.L2361	@cond_branch
	ldr	r1, [r2]
	mov	r0, #0x8b
.L2380:
	strb	r0, [r1, #0x12]
.L2361:
	ldr	r0, [r2]
	ldrb	r0, [r0, #0x12]
	cmp	r0, #0
	beq	.L2371	@cond_branch
	mov	r4, #0x3f
	and	r4, r4, r0
	b	.L2372
.L2401:
	.align	2, 0
.L2400:
	.word	gBattleStruct
.L2371:
	ldr	r1, .L2402
	mov	r2, r9
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r4, [r0, #0x3]
.L2372:
	add	r0, r6, #0
	mov	r1, #0x1
	bl	GetBattlerHoldEffect
	cmp	r0, #0x77
	bne	.L2328	@cond_branch
	ldr	r1, .L2402+0x4
	mov	r0, #0x5c
	mul	r0, r0, r6
	add	r0, r0, r1
	ldrh	r0, [r0, #0x30]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L2328	@cond_branch
	add	r0, r6, #0
	bl	GetBattlerHoldEffectParam
	ldr	r2, .L2402+0x8
	mov	r3, sl
	add	r1, r3, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strb	r0, [r1, #0x3]
	ldrb	r0, [r1, #0x2]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1, #0x2]
.L2328:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2403:
	.align	2, 0
.L2402:
	.word	gBattleMoves
	.word	gBattleMons
	.word	gSpecialStatuses
.Lfe94:
	.size	 SetTypeBeforeUsingMove,.Lfe94-SetTypeBeforeUsingMove
	.comm	gPreBattleCallback1, 4	@ 4
	.comm	gBattleMainFunc, 4	@ 4
	.comm	gBattleResults, 80	@ 80
	.comm	gLeveledUpInBattle, 4	@ 1
	.comm	gBattlerControllerFuncs, 16	@ 16
	.comm	gHealthboxSpriteIds, 4	@ 4
	.comm	gMultiUsePlayerCursor, 4	@ 1
	.comm	gNumberOfMovesToChoose, 4	@ 1
	.comm	gUnknown_03005D7C, 4	@ 4
.text
	.align	2, 0

