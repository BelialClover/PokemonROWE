@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sSelectMenuTilesetBuffer,object
	.size	 sSelectMenuTilesetBuffer,4
sSelectMenuTilesetBuffer:
	.word	0x0
	.align	2, 0
	.type	 sSelectMonCardBgTilesetBuffer,object
	.size	 sSelectMonCardBgTilesetBuffer,4
sSelectMonCardBgTilesetBuffer:
	.word	0x0
	.align	2, 0
	.type	 sSelectMenuTilemapBuffer,object
	.size	 sSelectMenuTilemapBuffer,4
sSelectMenuTilemapBuffer:
	.word	0x0
	.align	2, 0
	.type	 sSelectMonCardBgTilemapBuffer,object
	.size	 sSelectMonCardBgTilemapBuffer,4
sSelectMonCardBgTilemapBuffer:
	.word	0x0
	.align	2, 0
	.type	 sFactorySelectMons,object
	.size	 sFactorySelectMons,4
sFactorySelectMons:
	.word	0x0
	.align	2, 0
	.type	 sSwapMenuTilesetBuffer,object
	.size	 sSwapMenuTilesetBuffer,4
sSwapMenuTilesetBuffer:
	.word	0x0
	.align	2, 0
	.type	 sSwapMonCardBgTilesetBuffer,object
	.size	 sSwapMonCardBgTilesetBuffer,4
sSwapMonCardBgTilesetBuffer:
	.word	0x0
	.align	2, 0
	.type	 sSwapMenuTilemapBuffer,object
	.size	 sSwapMenuTilemapBuffer,4
sSwapMenuTilemapBuffer:
	.word	0x0
	.align	2, 0
	.type	 sSwapMonCardBgTilemapBuffer,object
	.size	 sSwapMonCardBgTilemapBuffer,4
sSwapMonCardBgTilemapBuffer:
	.word	0x0
	.section .rodata
	.align	1, 0
	.type	 gUnknown_0860F13C,object
gUnknown_0860F13C:
	.short	0x0
	.short	0x5252
	.short	0x41ce
	.short	0x2d74
	.short	0x2908
	.short	0x3f5a
	.short	0x62f7
	.short	0x5252
	.short	0x41ce
	.short	0x6f5a
	.short	0x2908
	.short	0x55ef
	.short	0x6673
	.short	0x0
	.short	0x7fff
	.short	0x2108
	.size	 gUnknown_0860F13C,32
	.align	1, 0
	.type	 gUnknown_0860F15C,object
gUnknown_0860F15C:
	.short	0x0
	.short	0x321c
	.short	0x31d8
	.short	0x2d74
	.short	0x2930
	.short	0x3f5a
	.short	0x62f7
	.short	0x5252
	.short	0x41ce
	.short	0x5abf
	.short	0x2908
	.short	0x55ef
	.short	0x6673
	.short	0x0
	.short	0x7fff
	.short	0x2108
	.size	 gUnknown_0860F15C,32
	.align	1, 0
	.type	 gUnknown_0860F17C,object
gUnknown_0860F17C:
	.short	0x0
	.short	0x0
	.short	0x1f
	.short	0x79d4
	.short	0x77bd
	.short	0x79d4
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2d8c
	.short	0x7bde
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1570
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6b5a
	.short	0x0
	.size	 gUnknown_0860F17C,64
	.type	 gUnknown_0860F1BC,object
gUnknown_0860F1BC:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x23
	.byte	0x22
	.byte	0x0
	.byte	0x30
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x23
	.byte	0x22
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x32
	.byte	0x33
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x32
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0x30
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x30
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x30
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x32
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x32
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x3
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x3
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x3
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x32
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x32
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x32
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x30
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x30
	.byte	0x44
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x0
	.byte	0x43
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x43
	.byte	0x44
	.byte	0x44
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x32
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0x23
	.byte	0x22
	.byte	0x43
	.byte	0x44
	.byte	0x33
	.byte	0x33
	.byte	0x43
	.byte	0x44
	.byte	0x34
	.byte	0x33
	.byte	0x43
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0x44
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x44
	.byte	0x34
	.byte	0x22
	.byte	0x32
	.byte	0x44
	.byte	0x34
	.byte	0x33
	.byte	0x33
	.byte	0x44
	.byte	0x34
	.byte	0x33
	.byte	0x43
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x32
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x3
	.byte	0x33
	.byte	0x33
	.byte	0x44
	.byte	0x3
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x3
	.byte	0x44
	.byte	0x44
	.byte	0x34
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x34
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x43
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x43
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x33
	.byte	0x43
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0x34
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x3
	.byte	0x0
	.byte	0x44
	.byte	0x34
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x34
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0860F1BC,512
	.type	 gUnknown_0860F3BC,object
gUnknown_0860F3BC:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x20
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x20
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x2
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x2
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0860F3BC,128
	.type	 gUnknown_0860F43C,object
gUnknown_0860F43C:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.size	 gUnknown_0860F43C,256
	.type	 gUnknown_0860F53C,object
gUnknown_0860F53C:
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.size	 gUnknown_0860F53C,256
	.type	 gUnknown_0860F63C,object
gUnknown_0860F63C:
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x30
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x30
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0860F63C,128
	.type	 gUnknown_0860F6BC,object
gUnknown_0860F6BC:
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0860F6BC,256
	.type	 gUnknown_0860F7BC,object
gUnknown_0860F7BC:
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x20
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x32
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x20
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x20
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x32
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x20
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0860F7BC,128
	.type	 gUnknown_0860F83C,object
gUnknown_0860F83C:
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0860F83C,256
	.type	 gUnknown_0860F93C,object
gUnknown_0860F93C:
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0860F93C,256
	.type	 gUnknown_0860FA3C,object
gUnknown_0860FA3C:
	.byte	0xe0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe
	.size	 gUnknown_0860FA3C,2048
	.type	 gUnknown_0861023C,object
gUnknown_0861023C:
	.byte	0x1
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x1
	.byte	0x24
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x1
	.byte	0x28
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x2
	.byte	0x20
	.byte	0x1
	.byte	0x2c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0861023C,256
	.type	 gUnknown_0861033C,object
gUnknown_0861033C:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x10
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.size	 gUnknown_0861033C,96
	.align	1, 0
	.type	 gUnknown_0861039C,object
gUnknown_0861039C:
	.short	0x0
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.short	0x77fa
	.size	 gUnknown_0861039C,32
	.align	2, 0
	.type	 gUnknown_086103BC,object
gUnknown_086103BC:
	.word	gUnknown_0860F3BC
	.short	0x80
	.short	0x65
	.word	gUnknown_0860F43C
	.short	0x100
	.short	0x66
	.word	gUnknown_0860F53C
	.short	0x100
	.short	0x67
	.word	gUnknown_0860FA3C
	.short	0x800
	.short	0x6d
	.space	8
	.size	 gUnknown_086103BC,40
	.align	2, 0
	.type	 gUnknown_086103E4,object
gUnknown_086103E4:
	.word	gPokeballSelection_Gfx
	.short	0x800
	.short	0x64
	.space	8
	.size	 gUnknown_086103E4,16
	.align	2, 0
	.type	 gUnknown_086103F4,object
gUnknown_086103F4:
	.word	gUnknown_0860F13C
	.short	0x64
	.space	2
	.word	gUnknown_0860F15C
	.short	0x65
	.space	2
	.word	gUnknown_0860F17C
	.short	0x66
	.space	2
	.word	gUnknown_0861039C
	.short	0x67
	.space	2
	.space	8
	.size	 gUnknown_086103F4,40
	.align	2, 0
	.type	 sSelect_MenuOptionFuncs,object
sSelect_MenuOptionFuncs:
	.word	Select_OptionSummary
	.word	Select_OptionRentDeselect
	.word	Select_OptionOthers
	.size	 sSelect_MenuOptionFuncs,12
	.align	2, 0
	.type	 sSelect_BgTemplates,object
	.size	 sSelect_BgTemplates,12
sSelect_BgTemplates:
	.byte	0x80
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0x95
	.byte	0x31
	.byte	0x0
	.space	1
	.byte	0xbb
	.byte	0x21
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sSelect_WindowTemplates,object
sSelect_WindowTemplates:
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0xc
	.byte	0x2
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x13
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xe
	.short	0x19
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x14
	.byte	0x3
	.byte	0xf
	.short	0x2f
	.byte	0x0
	.byte	0x16
	.byte	0xe
	.byte	0x8
	.byte	0x6
	.byte	0xf
	.short	0x6b
	.byte	0x0
	.byte	0x16
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.byte	0xf
	.short	0x9b
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0xf
	.byte	0x2
	.byte	0xf
	.short	0xbb
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sSelect_WindowTemplates,56
	.align	1, 0
	.type	 gUnknown_0861046C,object
gUnknown_0861046C:
	.short	0x0
	.short	0x0
	.short	0x7fff
	.short	0x0
	.short	0x1f
	.size	 gUnknown_0861046C,10
	.type	 sMenuOptionTextColors,object
sMenuOptionTextColors:
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.size	 sMenuOptionTextColors,3
	.type	 sSpeciesNameTextColors,object
sSpeciesNameTextColors:
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.size	 sSpeciesNameTextColors,3
	.align	2, 0
	.type	 gUnknown_0861047C,object
	.size	 gUnknown_0861047C,8
gUnknown_0861047C:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0xc
	.short	0x0
	.align	2, 0
	.type	 gUnknown_08610484,object
	.size	 gUnknown_08610484,8
gUnknown_08610484:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc
	.short	0x0
	.align	2, 0
	.type	 gUnknown_0861048C,object
	.size	 gUnknown_0861048C,8
gUnknown_0861048C:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 gUnknown_08610494,object
	.size	 gUnknown_08610494,8
gUnknown_08610494:
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.short	0x1
	.align	2, 0
	.type	 gUnknown_0861049C,object
gUnknown_0861049C:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_0861049C,8
	.align	2, 0
	.type	 gUnknown_086104A4,object
gUnknown_086104A4:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_086104A4,8
	.align	2, 0
	.type	 gUnknown_086104AC,object
gUnknown_086104AC:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_086104AC,8
	.align	2, 0
	.type	 gUnknown_086104B4,object
gUnknown_086104B4:
	.short	0x10
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x20
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x10
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x20
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x20
	.space	1
	.short	0x10
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x20
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x10
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x20
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_086104B4,72
	.align	2, 0
	.type	 gUnknown_086104FC,object
gUnknown_086104FC:
	.word	gUnknown_0861049C
	.size	 gUnknown_086104FC,4
	.align	2, 0
	.type	 gUnknown_08610500,object
gUnknown_08610500:
	.word	gUnknown_086104A4
	.size	 gUnknown_08610500,4
	.align	2, 0
	.type	 gUnknown_08610504,object
gUnknown_08610504:
	.word	gUnknown_086104AC
	.word	gUnknown_086104B4
	.size	 gUnknown_08610504,8
	.align	2, 0
	.type	 gUnknown_0861050C,object
gUnknown_0861050C:
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x10
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x20
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x40
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x80
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x100
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_0861050C,96
	.align	2, 0
	.type	 gUnknown_0861056C,object
gUnknown_0861056C:
	.short	0x80
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x40
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x20
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x10
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_0861056C,80
	.align	2, 0
	.type	 gUnknown_086105BC,object
gUnknown_086105BC:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_086105BC,16
	.align	2, 0
	.type	 gUnknown_086105CC,object
gUnknown_086105CC:
	.word	gUnknown_0861050C
	.word	gUnknown_0861056C
	.word	gUnknown_086105BC
	.size	 gUnknown_086105CC,12
	.align	2, 0
	.type	 gUnknown_086105D8,object
	.size	 gUnknown_086105D8,24
gUnknown_086105D8:
	.short	0x64
	.short	0x64
	.word	gUnknown_0861047C
	.word	gUnknown_08610504
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_819A44C
	.align	2, 0
	.type	 gUnknown_086105F0,object
	.size	 gUnknown_086105F0,24
gUnknown_086105F0:
	.short	0x65
	.short	0x66
	.word	gUnknown_08610484
	.word	gUnknown_086104FC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_08610608,object
	.size	 gUnknown_08610608,24
gUnknown_08610608:
	.short	0x66
	.short	0x66
	.word	gUnknown_0861048C
	.word	gUnknown_086104FC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_08610620,object
	.size	 gUnknown_08610620,24
gUnknown_08610620:
	.short	0x67
	.short	0x66
	.word	gUnknown_0861048C
	.word	gUnknown_086104FC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_08610638,object
	.size	 gUnknown_08610638,24
gUnknown_08610638:
	.short	0x6d
	.short	0x67
	.word	gUnknown_08610494
	.word	gUnknown_08610500
	.word	0x0
	.word	gUnknown_086105CC
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_08610650,object
gUnknown_08610650:
	.word	gUnknown_0860F3BC
	.short	0x80
	.short	0x65
	.word	gUnknown_0860F43C
	.short	0x100
	.short	0x66
	.word	gUnknown_0860F53C
	.short	0x100
	.short	0x67
	.word	gUnknown_0860F63C
	.short	0x80
	.short	0x68
	.word	gUnknown_0860F6BC
	.short	0x100
	.short	0x69
	.word	gUnknown_0860F7BC
	.short	0x100
	.short	0x6a
	.word	gUnknown_0860F83C
	.short	0x100
	.short	0x6b
	.word	gUnknown_0860F93C
	.short	0x100
	.short	0x6c
	.word	gUnknown_0860FA3C
	.short	0x800
	.short	0x6d
	.space	8
	.size	 gUnknown_08610650,80
	.align	2, 0
	.type	 gUnknown_086106A0,object
gUnknown_086106A0:
	.word	gPokeballSelection_Gfx
	.short	0x800
	.short	0x64
	.space	8
	.size	 gUnknown_086106A0,16
	.align	2, 0
	.type	 gUnknown_086106B0,object
gUnknown_086106B0:
	.word	gUnknown_0860F13C
	.short	0x64
	.space	2
	.word	gUnknown_0860F15C
	.short	0x65
	.space	2
	.word	gUnknown_0860F17C
	.short	0x66
	.space	2
	.word	gUnknown_0861039C
	.short	0x67
	.space	2
	.space	8
	.size	 gUnknown_086106B0,40
	.align	2, 0
	.type	 gUnknown_086106D8,object
	.size	 gUnknown_086106D8,8
gUnknown_086106D8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0xc
	.short	0x0
	.align	2, 0
	.type	 gUnknown_086106E0,object
	.size	 gUnknown_086106E0,8
gUnknown_086106E0:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc
	.short	0x0
	.align	2, 0
	.type	 gUnknown_086106E8,object
	.size	 gUnknown_086106E8,8
gUnknown_086106E8:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 gUnknown_086106F0,object
	.size	 gUnknown_086106F0,8
gUnknown_086106F0:
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.short	0x1
	.align	2, 0
	.type	 gUnknown_086106F8,object
gUnknown_086106F8:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_086106F8,8
	.align	2, 0
	.type	 gUnknown_08610700,object
gUnknown_08610700:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08610700,8
	.align	2, 0
	.type	 gUnknown_08610708,object
gUnknown_08610708:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08610708,8
	.align	2, 0
	.type	 gUnknown_08610710,object
gUnknown_08610710:
	.short	0x10
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x20
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x10
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x20
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x20
	.space	1
	.short	0x10
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x20
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x10
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x20
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08610710,72
	.align	2, 0
	.type	 gUnknown_08610758,object
gUnknown_08610758:
	.word	gUnknown_086106F8
	.size	 gUnknown_08610758,4
	.align	2, 0
	.type	 gUnknown_0861075C,object
gUnknown_0861075C:
	.word	gUnknown_08610700
	.size	 gUnknown_0861075C,4
	.align	2, 0
	.type	 gUnknown_08610760,object
gUnknown_08610760:
	.word	gUnknown_08610708
	.word	gUnknown_08610710
	.size	 gUnknown_08610760,8
	.align	2, 0
	.type	 gUnknown_08610768,object
gUnknown_08610768:
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x10
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x20
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x40
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x80
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x100
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08610768,96
	.align	2, 0
	.type	 gUnknown_086107C8,object
gUnknown_086107C8:
	.short	0x80
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x40
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x20
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x10
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_086107C8,80
	.align	2, 0
	.type	 gUnknown_08610818,object
gUnknown_08610818:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08610818,16
	.align	2, 0
	.type	 gUnknown_08610828,object
gUnknown_08610828:
	.word	gUnknown_08610768
	.word	gUnknown_086107C8
	.word	gUnknown_08610818
	.size	 gUnknown_08610828,12
	.align	2, 0
	.type	 gUnknown_08610834,object
	.size	 gUnknown_08610834,24
gUnknown_08610834:
	.short	0x64
	.short	0x64
	.word	gUnknown_086106D8
	.word	gUnknown_08610760
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_819A44C
	.align	2, 0
	.type	 gUnknown_0861084C,object
	.size	 gUnknown_0861084C,24
gUnknown_0861084C:
	.short	0x65
	.short	0x66
	.word	gUnknown_086106E0
	.word	gUnknown_08610758
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_08610864,object
	.size	 gUnknown_08610864,24
gUnknown_08610864:
	.short	0x66
	.short	0x66
	.word	gUnknown_086106E8
	.word	gUnknown_08610758
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_0861087C,object
	.size	 gUnknown_0861087C,24
gUnknown_0861087C:
	.short	0x67
	.short	0x66
	.word	gUnknown_086106E8
	.word	gUnknown_08610758
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_08610894,object
	.size	 gUnknown_08610894,24
gUnknown_08610894:
	.short	0x6d
	.short	0x67
	.word	gUnknown_086106F0
	.word	gUnknown_0861075C
	.word	0x0
	.word	gUnknown_08610828
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSwap_MenuOptionFuncs,object
sSwap_MenuOptionFuncs:
	.word	sub_819F114
	.word	sub_819F0CC
	.word	sub_819F134
	.size	 sSwap_MenuOptionFuncs,12
	.align	2, 0
	.type	 sSwap_BgTemplates,object
	.size	 sSwap_BgTemplates,16
sSwap_BgTemplates:
	.byte	0x80
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0x95
	.byte	0x31
	.byte	0x0
	.space	1
	.byte	0xaa
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xbb
	.byte	0x21
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sSwap_WindowTemplates,object
sSwap_WindowTemplates:
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0xc
	.byte	0x2
	.byte	0xf
	.short	0x1
	.byte	0x2
	.byte	0x13
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xe
	.short	0x19
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x14
	.byte	0x3
	.byte	0xf
	.short	0x2f
	.byte	0x0
	.byte	0x15
	.byte	0xe
	.byte	0x9
	.byte	0x6
	.byte	0xf
	.short	0x6b
	.byte	0x0
	.byte	0x16
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.byte	0xf
	.short	0xa1
	.byte	0x2
	.byte	0x15
	.byte	0xf
	.byte	0x9
	.byte	0x5
	.byte	0xe
	.short	0x6b
	.byte	0x2
	.byte	0xa
	.byte	0x2
	.byte	0x4
	.byte	0x2
	.byte	0xe
	.short	0xc1
	.byte	0x0
	.byte	0x13
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xf
	.short	0xc9
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0xf
	.byte	0x2
	.byte	0xf
	.short	0xdf
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sSwap_WindowTemplates,80
	.align	1, 0
	.type	 gUnknown_08610918,object
gUnknown_08610918:
	.short	0x0
	.short	0x0
	.short	0x7fff
	.short	0x0
	.short	0x1f
	.size	 gUnknown_08610918,10
	.type	 sSwapMenuOptionsTextColors,object
sSwapMenuOptionsTextColors:
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.size	 sSwapMenuOptionsTextColors,3
	.type	 sSwapSpeciesNameTextColors,object
sSwapSpeciesNameTextColors:
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.size	 sSwapSpeciesNameTextColors,3
	.align	2, 0
	.type	 sSwap_PlayerScreenActions,object
sSwap_PlayerScreenActions:
	.byte	0x1
	.space	3
	.word	Swap_ActionMon
	.byte	0x1
	.space	3
	.word	Swap_ActionMon
	.byte	0x1
	.space	3
	.word	Swap_ActionMon
	.byte	0x3
	.space	3
	.word	Swap_ActionCancel
	.size	 sSwap_PlayerScreenActions,32
	.align	2, 0
	.type	 sSwap_EnemyScreenActions,object
sSwap_EnemyScreenActions:
	.byte	0x1
	.space	3
	.word	Swap_ActionMon
	.byte	0x1
	.space	3
	.word	Swap_ActionMon
	.byte	0x1
	.space	3
	.word	Swap_ActionMon
	.byte	0x2
	.space	3
	.word	Swap_ActionPkmnForSwap
	.byte	0x3
	.space	3
	.word	Swap_ActionCancel
	.size	 sSwap_EnemyScreenActions,40
.text
	.align	2, 0
	.type	 sub_819A44C,function
	.thumb_func
sub_819A44C:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrb	r4, [r5, #0x5]
	lsr	r4, r4, #0x4
	mov	r0, #0x65
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L3	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldrh	r1, [r5, #0x2e]
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	beq	.L5	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r5, #0x2e]
	b	.L10
.L5:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	mov	r0, #0x20
	strh	r0, [r5, #0x2e]
	b	.L10
.L7:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
	b	.L10
.L4:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartSpriteAnimIfDifferent
	b	.L10
.L3:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteAnimIfDifferent
.L10:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 sub_819A44C,.Lfe1-sub_819A44C
	.align	2, 0
	.type	 Select_CB2,function
	.thumb_func
Select_CB2:
	push	{lr}
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	bl	RunTasks
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 Select_CB2,.Lfe2-Select_CB2
	.align	2, 0
	.type	 Select_VblankCb,function
	.thumb_func
Select_VblankCb:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 Select_VblankCb,.Lfe3-Select_VblankCb
	.align	2, 0
	.globl	DoBattleFactorySelectScreen
	.type	 DoBattleFactorySelectScreen,function
	.thumb_func
DoBattleFactorySelectScreen:
	push	{lr}
	ldr	r0, .L14
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L14+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	sFactorySelectScreen
	.word	CB2_InitSelectScreen
.Lfe4:
	.size	 DoBattleFactorySelectScreen,.Lfe4-DoBattleFactorySelectScreen
	.align	2, 0
	.type	 CB2_InitSelectScreen,function
	.thumb_func
CB2_InitSelectScreen:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L42
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xa
	bls	.LCB150
	b	.L17	@long jump
.LCB150:
	lsl	r0, r0, #0x2
	ldr	r1, .L42+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L43:
	.align	2, 0
.L42:
	.word	gMain
	.word	.L37
	.align	2, 0
	.align	2, 0
.L37:
	.word	.L18
	.word	.L20
	.word	.L21
	.word	.L23
	.word	.L24
	.word	.L27
	.word	.L30
	.word	.L31
	.word	.L32
	.word	.L33
	.word	.L34
.L18:
	ldr	r4, .L44
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L19	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L19:
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L44+0x4
	add	r0, sp, #0x8
	bl	CpuSet
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L44+0x8
	mov	r0, #0x0
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r0, .L44+0xc
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	b	.L39
.L45:
	.align	2, 0
.L44:
	.word	sFactorySelectMons
	.word	0x5006000
	.word	sSelect_BgTemplates
	.word	sSelect_WindowTemplates
.L20:
	ldr	r5, .L46
	mov	r4, #0x88
	lsl	r4, r4, #0x3
	add	r0, r4, #0
	bl	Alloc
	str	r0, [r5]
	ldr	r5, .L46+0x4
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r5]
	ldr	r5, .L46+0x8
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	Alloc
	str	r0, [r5]
	ldr	r5, .L46+0xc
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x46
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r1, .L46+0x10
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L40
.L47:
	.align	2, 0
.L46:
	.word	sSelectMenuTilesetBuffer
	.word	sSelectMonCardBgTilesetBuffer
	.word	sSelectMenuTilemapBuffer
	.word	sSelectMonCardBgTilemapBuffer
	.word	gMain
.L21:
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	FreeAllSpritePalettes
	ldr	r0, .L48
	ldr	r5, .L48+0x4
	ldr	r1, [r5]
	mov	r2, #0x88
	lsl	r2, r2, #0x2
	bl	CpuSet
	ldr	r0, .L48+0x8
	ldr	r4, .L48+0xc
	ldr	r1, [r4]
	mov	r2, #0x30
	bl	CpuSet
	ldr	r1, [r5]
	mov	r2, #0x88
	lsl	r2, r2, #0x3
	mov	r0, #0x1
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r4]
	mov	r0, #0x3
	mov	r2, #0x60
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r0, .L48+0x10
	ldr	r4, .L48+0x14
	ldr	r1, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	bl	CpuSet
	ldr	r1, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r0, #0x1
	mov	r3, #0x0
	bl	LoadBgTilemap
	ldr	r0, .L48+0x18
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadPalette
	ldr	r4, .L48+0x1c
	add	r0, r4, #0
	mov	r1, #0xf0
	mov	r2, #0x8
	bl	LoadPalette
	add	r0, r4, #0
	mov	r1, #0xe0
	mov	r2, #0xa
	bl	LoadPalette
	ldr	r0, .L48+0x20
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x6]
	cmp	r0, #0x1
	bne	.L22	@cond_branch
	ldr	r0, .L48+0x24
	mov	r2, #0xa9
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r3, #0xe4
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	strh	r1, [r0]
.L22:
	ldr	r0, .L48+0x28
	mov	r1, #0x20
	mov	r2, #0x4
	bl	LoadPalette
	ldr	r1, .L48+0x2c
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L40
.L49:
	.align	2, 0
.L48:
	.word	gFrontierFactorySelectMenu_Gfx
	.word	sSelectMenuTilesetBuffer
	.word	gUnknown_0861033C
	.word	sSelectMonCardBgTilesetBuffer
	.word	gFrontierFactorySelectMenu_Tilemap
	.word	sSelectMenuTilemapBuffer
	.word	gFrontierFactorySelectMenu_Pal
	.word	gUnknown_0861046C
	.word	sFactorySelectScreen
	.word	gPlttBufferUnfaded
	.word	gUnknown_0861039C
	.word	gMain
.L23:
	ldr	r0, .L50
	ldr	r1, [r0]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	ldr	r5, .L50+0x4
	mov	r4, #0x8
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	add	r1, r5, #0
	mov	r2, #0xb
	mov	r3, #0x4
	bl	CopyToBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	add	r1, r5, #0
	mov	r2, #0x2
	mov	r3, #0x4
	bl	CopyToBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	add	r1, r5, #0
	mov	r2, #0x14
	mov	r3, #0x4
	bl	CopyToBgTilemapBufferRect
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	b	.L39
.L51:
	.align	2, 0
.L50:
	.word	sSelectMonCardBgTilemapBuffer
	.word	gUnknown_0861023C
.L24:
	ldr	r0, .L52
	bl	LoadSpritePalettes
	ldr	r0, .L52+0x4
	bl	LoadSpriteSheets
	ldr	r0, .L52+0x8
	bl	LoadCompressedSpriteSheet
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	ldr	r0, .L52+0xc
	bl	SetVBlankCallback
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r1, #0x9a
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	ldr	r0, .L52+0x10
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x6]
	cmp	r0, #0x1
	bne	.L25	@cond_branch
	mov	r0, #0x58
	mov	r1, #0x98
	mov	r2, #0x20
	mov	r3, #0x60
	bl	Select_SetWinRegs
	mov	r0, #0x3
	bl	ShowBg
	ldr	r1, .L52+0x14
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L52+0x18
	mov	r0, #0x52
	bl	SetGpuReg
	b	.L26
.L53:
	.align	2, 0
.L52:
	.word	gUnknown_086103F4
	.word	gUnknown_086103BC
	.word	gUnknown_086103E4
	.word	Select_VblankCb
	.word	sFactorySelectScreen
	.word	0x1248
	.word	0x40b
.L25:
	mov	r0, #0x3
	bl	HideBg
.L26:
	ldr	r1, .L54
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L40
.L55:
	.align	2, 0
.L54:
	.word	gMain
.L27:
	ldr	r4, .L56
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x6]
	cmp	r0, #0x1
	bne	.L28	@cond_branch
	ldr	r0, .L56+0x4
	ldrb	r0, [r0]
	strb	r0, [r1, #0x3]
.L28:
	bl	Select_InitMonsData
	bl	Select_InitAllSprites
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x6]
	cmp	r0, #0x1
	bne	.L29	@cond_branch
	bl	Select_ShowSummaryMonSprite
.L29:
	ldr	r1, .L56+0x8
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L40
.L57:
	.align	2, 0
.L56:
	.word	sFactorySelectScreen
	.word	gLastViewedMonIndex
	.word	gMain
.L30:
	bl	Select_PrintSelectMonString
	mov	r0, #0x2
	b	.L41
.L31:
	bl	Select_PrintMonCategory
	mov	r0, #0x5
	bl	PutWindowTilemap
	ldr	r1, .L58
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L40
.L59:
	.align	2, 0
.L58:
	.word	gMain
.L32:
	bl	Select_PrintMonSpecies
	mov	r0, #0x1
	bl	PutWindowTilemap
	ldr	r1, .L60
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L40
.L61:
	.align	2, 0
.L60:
	.word	gMain
.L33:
	bl	Select_PrintRentalPkmnString
	mov	r0, #0x0
.L41:
	bl	PutWindowTilemap
.L39:
	ldr	r1, .L62
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
.L40:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L17
.L63:
	.align	2, 0
.L62:
	.word	gMain
.L34:
	ldr	r0, .L64
	mov	r1, #0x0
	bl	CreateTask
	ldr	r2, .L64+0x4
	ldr	r1, [r2]
	ldr	r3, .L64+0x8
	add	r1, r1, r3
	strb	r0, [r1]
	ldr	r3, [r2]
	ldrb	r5, [r3, #0x6]
	cmp	r5, #0
	bne	.L35	@cond_branch
	ldr	r4, .L64+0xc
	ldr	r1, .L64+0x8
	add	r0, r3, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	strh	r5, [r0, #0x8]
	ldr	r0, .L64+0x10
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	strh	r5, [r0, #0x8]
	b	.L36
.L65:
	.align	2, 0
.L64:
	.word	Task_SelectFadeSpeciesName
	.word	sFactorySelectScreen
	.word	0x2a1
	.word	gTasks
	.word	Task_HandleSelectionScreenChooseMons
.L35:
	ldr	r4, .L66
	ldr	r2, .L66+0x4
	add	r0, r3, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	ldr	r1, .L66+0x8
	add	r0, r3, r1
	strb	r2, [r0]
	ldr	r0, .L66+0xc
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	mov	r1, #0xd
	strh	r1, [r0, #0x8]
.L36:
	ldr	r0, .L66+0x10
	bl	SetMainCallback2
.L17:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	gTasks
	.word	0x2a1
	.word	0x2a2
	.word	Task_HandleSelectionScreenMenu
	.word	Select_CB2
.Lfe5:
	.size	 CB2_InitSelectScreen,.Lfe5-CB2_InitSelectScreen
	.align	2, 0
	.type	 Select_InitMonsData,function
	.thumb_func
Select_InitMonsData:
	push	{r4, r5, lr}
	ldr	r5, .L77
	ldr	r4, [r5]
	cmp	r4, #0
	bne	.L68	@cond_branch
	mov	r0, #0xab
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r5]
	strb	r4, [r0, #0x3]
	ldr	r1, [r5]
	mov	r0, #0x1
	strb	r0, [r1, #0x5]
	ldr	r0, [r5]
	strb	r4, [r0, #0x6]
	mov	r2, #0x0
	mov	r4, #0x6c
	mov	r3, #0x0
.L73:
	ldr	r0, [r5]
	mov	r1, r2
	mul	r1, r1, r4
	add	r0, r0, r1
	strb	r3, [r0, #0x10]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x5
	bls	.L73	@cond_branch
	ldr	r0, .L77+0x4
	ldr	r0, [r0]
	ldr	r1, .L77+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x2
	beq	.L75	@cond_branch
	mov	r0, #0x0
	bl	CreateFrontierFactorySelectableMons
	b	.L68
.L78:
	.align	2, 0
.L77:
	.word	sFactorySelectScreen
	.word	gSaveBlock2Ptr
	.word	0xc31
.L75:
	mov	r0, #0x0
	bl	CreateTentFactorySelectableMons
.L68:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 Select_InitMonsData,.Lfe6-Select_InitMonsData
	.align	2, 0
	.type	 Select_InitAllSprites,function
	.thumb_func
Select_InitAllSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r4, #0x0
	mov	r8, r4
	ldr	r7, .L85
.L83:
	lsl	r1, r4, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	sub	r1, r1, r4
	add	r1, r1, #0x20
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	ldr	r0, .L85+0x4
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r6, .L85+0x8
	ldr	r2, [r6]
	mov	r5, #0x6c
	mov	r1, r4
	mul	r1, r1, r5
	add	r2, r2, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r2, #0xe]
	ldrh	r1, [r2, #0xe]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	mov	r1, r8
	strh	r1, [r0, #0x2e]
	add	r0, r4, #0
	bl	Select_SetBallSpritePaletteNum
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L83	@cond_branch
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x3]
	ldr	r4, .L85
	mul	r1, r1, r5
	add	r0, r0, r1
	ldrh	r0, [r0, #0xe]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldr	r0, .L85+0xc
	mov	r2, #0x20
	ldrsh	r1, [r1, r2]
	mov	r2, #0x58
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r6]
	mov	r5, #0x0
	strb	r0, [r1, #0x4]
	ldr	r0, .L85+0x10
	mov	r1, #0xb0
	mov	r2, #0x70
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r6]
	strb	r0, [r1, #0x1]
	ldr	r0, .L85+0x14
	mov	r1, #0xb0
	mov	r2, #0x90
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r6]
	strb	r0, [r1, #0x2]
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x28
	strb	r5, [r0]
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x29
	strb	r5, [r0]
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x28
	strb	r5, [r0]
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x29
	strb	r5, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gSprites
	.word	gUnknown_086105D8
	.word	sFactorySelectScreen
	.word	gUnknown_086105F0
	.word	gUnknown_08610608
	.word	gUnknown_08610620
.Lfe7:
	.size	 Select_InitAllSprites,.Lfe7-Select_InitAllSprites
	.align	2, 0
	.type	 Select_DestroyAllSprites,function
	.thumb_func
Select_DestroyAllSprites:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
.L91:
	ldr	r6, .L93
	ldr	r1, [r6]
	mov	r0, #0x6c
	mul	r0, r0, r4
	add	r1, r1, r0
	ldrh	r1, [r1, #0xe]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L93+0x4
	add	r0, r0, r5
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L91	@cond_branch
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	sFactorySelectScreen
	.word	gSprites
.Lfe8:
	.size	 Select_DestroyAllSprites,.Lfe8-Select_DestroyAllSprites
	.align	2, 0
	.type	 Select_UpdateBallCursorPosition,function
	.thumb_func
Select_UpdateBallCursorPosition:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	ble	.L96	@cond_branch
	ldr	r0, .L103
	ldr	r1, [r0]
	ldrb	r3, [r1, #0x3]
	add	r2, r0, #0
	cmp	r3, #0x5
	beq	.L97	@cond_branch
	add	r0, r3, #0x1
	b	.L102
.L104:
	.align	2, 0
.L103:
	.word	sFactorySelectScreen
.L97:
	mov	r0, #0x0
	b	.L102
.L96:
	ldr	r0, .L105
	ldr	r1, [r0]
	ldrb	r3, [r1, #0x3]
	add	r2, r0, #0
	cmp	r3, #0
	beq	.L100	@cond_branch
	sub	r0, r3, #0x1
	b	.L102
.L106:
	.align	2, 0
.L105:
	.word	sFactorySelectScreen
.L100:
	mov	r0, #0x5
.L102:
	strb	r0, [r1, #0x3]
	ldr	r2, [r2]
	ldrb	r3, [r2, #0x3]
	ldr	r4, .L107
	ldrb	r0, [r2, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	mov	r0, #0x6c
	mul	r0, r0, r3
	add	r2, r2, r0
	ldrh	r2, [r2, #0xe]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r1, #0x20]
	pop	{r4}
	pop	{r0}
	bx	r0
.L108:
	.align	2, 0
.L107:
	.word	gSprites
.Lfe9:
	.size	 Select_UpdateBallCursorPosition,.Lfe9-Select_UpdateBallCursorPosition
	.align	2, 0
	.type	 Select_UpdateMenuCursorPosition,function
	.thumb_func
Select_UpdateMenuCursorPosition:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	ble	.L110	@cond_branch
	ldr	r0, .L117
	ldr	r1, [r0]
	ldrb	r3, [r1]
	add	r2, r0, #0
	cmp	r3, #0x2
	beq	.L111	@cond_branch
	add	r0, r3, #0x1
	b	.L116
.L118:
	.align	2, 0
.L117:
	.word	sFactorySelectScreen
.L111:
	mov	r0, #0x0
	b	.L116
.L110:
	ldr	r0, .L119
	ldr	r1, [r0]
	ldrb	r3, [r1]
	add	r2, r0, #0
	cmp	r3, #0
	beq	.L114	@cond_branch
	sub	r0, r3, #0x1
	b	.L116
.L120:
	.align	2, 0
.L119:
	.word	sFactorySelectScreen
.L114:
	mov	r0, #0x2
.L116:
	strb	r0, [r1]
	ldr	r3, .L121
	ldr	r2, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r0, [r2, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	pop	{r0}
	bx	r0
.L122:
	.align	2, 0
.L121:
	.word	gSprites
.Lfe10:
	.size	 Select_UpdateMenuCursorPosition,.Lfe10-Select_UpdateMenuCursorPosition
	.align	2, 0
	.type	 Select_UpdateYesNoCursorPosition,function
	.thumb_func
Select_UpdateYesNoCursorPosition:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	ble	.L124	@cond_branch
	ldr	r0, .L131
	ldr	r1, [r0]
	ldrb	r3, [r1, #0x7]
	add	r2, r0, #0
	cmp	r3, #0x1
	beq	.L125	@cond_branch
	add	r0, r3, #0x1
	b	.L130
.L132:
	.align	2, 0
.L131:
	.word	sFactorySelectScreen
.L125:
	mov	r0, #0x0
	b	.L130
.L124:
	ldr	r0, .L133
	ldr	r1, [r0]
	ldrb	r3, [r1, #0x7]
	add	r2, r0, #0
	cmp	r3, #0
	beq	.L128	@cond_branch
	sub	r0, r3, #0x1
	b	.L130
.L134:
	.align	2, 0
.L133:
	.word	sFactorySelectScreen
.L128:
	mov	r0, #0x1
.L130:
	strb	r0, [r1, #0x7]
	ldr	r3, .L135
	ldr	r2, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2, #0x7]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r0, [r2, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2, #0x7]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	pop	{r0}
	bx	r0
.L136:
	.align	2, 0
.L135:
	.word	gSprites
.Lfe11:
	.size	 Select_UpdateYesNoCursorPosition,.Lfe11-Select_UpdateYesNoCursorPosition
	.align	2, 0
	.type	 Select_HandleMonSelectionChange,function
	.thumb_func
Select_HandleMonSelectionChange:
	push	{r4, r5, r6, lr}
	ldr	r5, .L150
	ldr	r0, [r5]
	ldrb	r6, [r0, #0x3]
	mov	r1, #0x6c
	mov	r4, r6
	mul	r4, r4, r1
	add	r0, r0, r4
	ldrb	r0, [r0, #0x10]
	cmp	r0, #0
	beq	.L138	@cond_branch
	mov	r0, #0x64
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x5]
	cmp	r0, #0x3
	bne	.L139	@cond_branch
	add	r0, r1, r4
	ldrb	r0, [r0, #0x10]
	cmp	r0, #0x1
	bne	.L139	@cond_branch
	mov	r2, #0x0
	ldrb	r0, [r1, #0x10]
	cmp	r0, #0x2
	beq	.L141	@cond_branch
	mov	r4, #0x6c
.L142:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x5
	bhi	.L141	@cond_branch
	ldr	r0, [r5]
	mov	r1, r2
	mul	r1, r1, r4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x10]
	cmp	r0, #0x2
	bne	.L142	@cond_branch
.L141:
	cmp	r2, #0x6
	beq	.L137	@cond_branch
	ldr	r0, .L150
	ldr	r1, [r0]
	mov	r0, #0x6c
	mul	r0, r0, r2
	add	r1, r1, r0
	mov	r0, #0x1
	strb	r0, [r1, #0x10]
.L139:
	ldr	r2, .L150
	ldr	r1, [r2]
	mov	r0, #0x6c
	mul	r0, r0, r6
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1, #0x10]
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x5]
	sub	r0, r0, #0x1
	b	.L149
.L151:
	.align	2, 0
.L150:
	.word	sFactorySelectScreen
.L138:
	mov	r0, #0x65
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, [r5]
	add	r1, r0, r4
	ldrb	r0, [r0, #0x5]
	strb	r0, [r1, #0x10]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x5]
	add	r0, r0, #0x1
.L149:
	strb	r0, [r1, #0x5]
	ldr	r2, .L152
	ldr	r0, .L152+0x4
	ldr	r0, [r0]
	mov	r1, #0x6c
	mul	r1, r1, r6
	add	r0, r0, r1
	ldrh	r0, [r0, #0xe]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	lsl	r3, r3, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
.L137:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	gSprites
	.word	sFactorySelectScreen
.Lfe12:
	.size	 Select_HandleMonSelectionChange,.Lfe12-Select_HandleMonSelectionChange
	.align	2, 0
	.type	 Select_SetBallSpritePaletteNum,function
	.thumb_func
Select_SetBallSpritePaletteNum:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L158
	ldr	r0, [r0]
	mov	r1, #0x6c
	mul	r1, r1, r4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x10]
	cmp	r0, #0
	beq	.L155	@cond_branch
	mov	r0, #0x65
	b	.L157
.L159:
	.align	2, 0
.L158:
	.word	sFactorySelectScreen
.L155:
	mov	r0, #0x64
.L157:
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L160
	ldr	r0, .L160+0x4
	ldr	r0, [r0]
	mov	r1, #0x6c
	mul	r1, r1, r4
	add	r0, r0, r1
	ldrh	r0, [r0, #0xe]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	lsl	r3, r3, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	pop	{r4}
	pop	{r0}
	bx	r0
.L161:
	.align	2, 0
.L160:
	.word	gSprites
	.word	sFactorySelectScreen
.Lfe13:
	.size	 Select_SetBallSpritePaletteNum,.Lfe13-Select_SetBallSpritePaletteNum
	.align	2, 0
	.type	 Task_FromSelectScreenToSummaryScreen,function
	.thumb_func
Task_FromSelectScreenToSummaryScreen:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L176
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x7
	beq	.L165	@cond_branch
	cmp	r0, #0x7
	bgt	.L175	@cond_branch
	cmp	r0, #0x6
	beq	.L164	@cond_branch
	b	.L163
.L177:
	.align	2, 0
.L176:
	.word	gTasks
.L175:
	cmp	r0, #0x8
	beq	.L167	@cond_branch
	b	.L163
.L164:
	ldr	r1, .L178
	ldr	r0, .L178+0x4
	mov	r2, #0xe4
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	add	r1, r1, r2
	mov	r2, #0x0
	strh	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	str	r2, [sp]
	mov	r1, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x7
	strh	r0, [r6, #0x8]
	b	.L163
.L179:
	.align	2, 0
.L178:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
.L165:
	ldr	r0, .L180
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L163	@cond_branch
	ldr	r4, .L180+0x4
	ldr	r0, [r4]
	ldr	r2, .L180+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	bl	DestroyTask
	ldr	r1, [r4]
	mov	r3, #0xa6
	lsl	r3, r3, #0x2
	add	r0, r1, r3
	ldr	r0, [r0]
	mov	r2, #0xa8
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	bl	sub_819F444
	bl	Select_DestroyAllSprites
	ldr	r4, .L180+0xc
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L180+0x10
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L180+0x14
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L180+0x18
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	bl	FreeAllWindowBuffers
	mov	r0, #0x8
	strh	r0, [r6, #0x8]
	b	.L163
.L181:
	.align	2, 0
.L180:
	.word	gPaletteFade
	.word	sFactorySelectScreen
	.word	0x2a1
	.word	sSelectMenuTilesetBuffer
	.word	sSelectMonCardBgTilesetBuffer
	.word	sSelectMenuTilemapBuffer
	.word	sSelectMonCardBgTilemapBuffer
.L167:
	ldr	r4, .L182
	ldr	r1, [r4]
	ldr	r0, .L182+0x4
	mov	r3, #0xe4
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	add	r3, r3, #0xdc
	add	r1, r1, r3
	strh	r0, [r1]
	add	r0, r2, #0
	bl	DestroyTask
	ldr	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldr	r0, [r4]
	ldrb	r6, [r0, #0x3]
	ldr	r4, .L182+0x8
	mov	r0, #0x96
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	mov	r4, #0x0
.L171:
	ldr	r5, .L182+0x8
	ldr	r1, [r5]
	mov	r0, #0x64
	mul	r0, r0, r4
	add	r0, r0, r1
	ldr	r1, .L182
	ldr	r1, [r1]
	mov	r2, #0x6c
	mul	r2, r2, r4
	add	r1, r1, r2
	add	r1, r1, #0x14
	mov	r2, #0x64
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L171	@cond_branch
	ldr	r1, [r5]
	ldr	r0, .L182+0xc
	str	r0, [sp]
	mov	r0, #0x1
	add	r2, r6, #0
	mov	r3, #0x5
	bl	ShowPokemonSummaryScreen
.L163:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	sFactorySelectScreen
	.word	gPlttBufferUnfaded
	.word	sFactorySelectMons
	.word	CB2_InitSelectScreen
.Lfe14:
	.size	 Task_FromSelectScreenToSummaryScreen,.Lfe14-Task_FromSelectScreenToSummaryScreen
	.align	2, 0
	.type	 Task_CloseSelectionScreen,function
	.thumb_func
Task_CloseSelectionScreen:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r7, .L192
	ldr	r0, [r7]
	mov	r1, #0xa8
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L185	@cond_branch
	ldr	r1, .L192+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	beq	.L187	@cond_branch
	cmp	r1, #0x1
	beq	.L188	@cond_branch
	b	.L185
.L193:
	.align	2, 0
.L192:
	.word	sFactorySelectScreen
	.word	gTasks
.L187:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L185
.L188:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L185	@cond_branch
	bl	Select_CopyMonsToPlayerParty
	ldr	r0, [r7]
	ldr	r1, .L194
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	DestroyTask
	bl	Select_DestroyAllSprites
	ldr	r4, .L194+0x4
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L194+0x8
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L194+0xc
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r0, [r7]
	bl	Free
	str	r5, [r7]
	bl	FreeAllWindowBuffers
	ldr	r0, .L194+0x10
	bl	SetMainCallback2
	add	r0, r6, #0
	bl	DestroyTask
.L185:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L195:
	.align	2, 0
.L194:
	.word	0x2a1
	.word	sSelectMenuTilesetBuffer
	.word	sSelectMenuTilemapBuffer
	.word	sSelectMonCardBgTilemapBuffer
	.word	CB2_ReturnToFieldContinueScript
.Lfe15:
	.size	 Task_CloseSelectionScreen,.Lfe15-Task_CloseSelectionScreen
	.align	2, 0
	.type	 Task_HandleSelectionScreenYesNo,function
	.thumb_func
Task_HandleSelectionScreenYesNo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r7, .L215
	ldr	r0, [r7]
	mov	r1, #0xa8
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L197	@cond_branch
	ldr	r1, .L215+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x5
	beq	.L201	@cond_branch
	cmp	r0, #0x5
	bgt	.L213	@cond_branch
	cmp	r0, #0x4
	beq	.L200	@cond_branch
	b	.L197
.L216:
	.align	2, 0
.L215:
	.word	sFactorySelectScreen
	.word	gTasks
.L213:
	cmp	r0, #0xa
	bne	.L197	@cond_branch
	bl	sub_819C4B4
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	b	.L197
.L200:
	bl	Select_ShowYesNoOptions
	mov	r0, #0x5
	strh	r0, [r5, #0x8]
	b	.L197
.L201:
	ldr	r2, .L217
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	mov	r8, r0
	mov	r6, #0x1
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L202	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, [r7]
	ldrb	r4, [r0, #0x7]
	cmp	r4, #0
	bne	.L214	@cond_branch
	bl	sub_819C568
	strh	r4, [r5, #0x8]
	ldr	r0, .L217+0x4
	str	r0, [r5]
	b	.L197
.L218:
	.align	2, 0
.L217:
	.word	gMain
	.word	Task_CloseSelectionScreen
.L202:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L206	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L214:
	mov	r0, #0x4
	bl	sub_819B958
	bl	sub_819BC9C
	ldr	r0, [r7]
	ldr	r1, .L219
	add	r0, r0, r1
	mov	r1, r8
	strb	r1, [r0]
	strh	r6, [r5, #0x8]
	ldr	r0, .L219+0x4
	str	r0, [r5]
	b	.L197
.L220:
	.align	2, 0
.L219:
	.word	0x2a2
	.word	Task_HandleSelectionScreenChooseMons
.L206:
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L208	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	bl	Select_UpdateYesNoCursorPosition
	b	.L197
.L208:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L197	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	Select_UpdateYesNoCursorPosition
.L197:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 Task_HandleSelectionScreenYesNo,.Lfe16-Task_HandleSelectionScreenYesNo
	.align	2, 0
	.type	 Task_HandleSelectionScreenMenu,function
	.thumb_func
Task_HandleSelectionScreenMenu:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L251
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x8]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	add	r6, r1, #0
	cmp	r0, #0xb
	bls	.LCB2069
	b	.L222	@long jump
.LCB2069:
	lsl	r0, r0, #0x2
	ldr	r1, .L251+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L252:
	.align	2, 0
.L251:
	.word	gTasks
	.word	.L245
	.align	2, 0
	.align	2, 0
.L245:
	.word	.L223
	.word	.L227
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L225
	.word	.L222
	.word	.L222
	.word	.L241
	.word	.L244
.L223:
	ldr	r0, .L253
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x6]
	cmp	r0, #0
	bne	.L224	@cond_branch
	ldr	r2, .L253+0x4
	add	r0, r1, r2
	mov	r7, #0xa8
	lsl	r7, r7, #0x2
	add	r1, r1, r7
	mov	r2, #0x0
	bl	sub_819F2B4
.L224:
	ldr	r0, .L253+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x9
	b	.L247
.L254:
	.align	2, 0
.L253:
	.word	sFactorySelectScreen
	.word	0x299
	.word	gTasks
.L225:
	ldr	r4, .L255
	ldr	r0, [r4]
	mov	r1, #0xa8
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.LCB2136
	b	.L222	@long jump
.LCB2136:
	bl	Select_ShowMenuOptions
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	ldr	r1, .L255+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	b	.L248
.L256:
	.align	2, 0
.L255:
	.word	sFactorySelectScreen
	.word	gTasks
.L227:
	ldr	r2, .L257
	ldrh	r1, [r2, #0x2e]
	mov	r7, #0x1
	mov	r6, #0x1
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L228	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	Select_RunMenuOptionFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x1
	bne	.L229	@cond_branch
	ldr	r0, .L257+0x4
	ldr	r0, [r0]
	ldr	r2, .L257+0x8
	add	r0, r0, r2
	b	.L249
.L258:
	.align	2, 0
.L257:
	.word	gMain
	.word	sFactorySelectScreen
	.word	0x2a2
.L229:
	cmp	r0, #0x2
	bne	.L231	@cond_branch
	ldr	r1, .L259
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xa
	strh	r1, [r0, #0x8]
	ldr	r1, .L259+0x4
	str	r1, [r0]
	b	.L222
.L260:
	.align	2, 0
.L259:
	.word	gTasks
	.word	Task_HandleSelectionScreenYesNo
.L231:
	cmp	r1, #0x3
	bne	.L233	@cond_branch
	ldr	r1, .L261
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xb
	strh	r1, [r0, #0x8]
	b	.L250
.L262:
	.align	2, 0
.L261:
	.word	gTasks
.L233:
	ldr	r1, .L263
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x6
	strh	r1, [r0, #0x8]
	ldr	r1, .L263+0x4
	str	r1, [r0]
	b	.L222
.L264:
	.align	2, 0
.L263:
	.word	gTasks
	.word	Task_FromSelectScreenToSummaryScreen
.L228:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L236	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L265
	ldr	r1, [r4]
	mov	r2, #0xa6
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	ldr	r0, [r0]
	add	r2, r2, #0x8
	add	r1, r1, r2
	mov	r2, #0x0
	bl	sub_819F3F8
	mov	r0, #0x3
	bl	sub_819B958
	ldr	r0, [r4]
	ldr	r1, .L265+0x4
	add	r0, r0, r1
.L249:
	strb	r7, [r0]
	ldr	r1, .L265+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r6, [r0, #0x8]
.L250:
	ldr	r1, .L265+0xc
	str	r1, [r0]
	b	.L222
.L266:
	.align	2, 0
.L265:
	.word	sFactorySelectScreen
	.word	0x2a2
	.word	gTasks
	.word	Task_HandleSelectionScreenChooseMons
.L236:
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L238	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	bl	Select_UpdateMenuCursorPosition
	b	.L222
.L238:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L222	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	Select_UpdateMenuCursorPosition
	b	.L222
.L241:
	ldr	r0, .L267
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0
	bne	.L222	@cond_branch
	ldr	r4, .L267+0x4
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x6]
	cmp	r0, #0x1
	bne	.L243	@cond_branch
	ldr	r1, .L267+0x8
	mov	r7, #0xa9
	lsl	r7, r7, #0x2
	add	r0, r2, r7
	ldrh	r0, [r0]
	mov	r2, #0xe4
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	strh	r0, [r1]
	ldr	r0, .L267+0xc
	sub	r7, r7, #0xbc
	add	r1, r0, r7
	ldrh	r1, [r1]
	add	r0, r0, r2
	strh	r1, [r0]
.L243:
	ldr	r0, [r4]
	strb	r3, [r0, #0x6]
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r6
.L248:
	mov	r1, #0x3
	strh	r1, [r0, #0x8]
	b	.L222
.L268:
	.align	2, 0
.L267:
	.word	gPaletteFade
	.word	sFactorySelectScreen
	.word	gPlttBufferFaded
	.word	gPlttBufferUnfaded
.L244:
	bl	Select_ShowMenuOptions
	ldr	r0, .L269
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0xc
.L247:
	strh	r0, [r1, #0x8]
.L222:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L270:
	.align	2, 0
.L269:
	.word	gTasks
.Lfe17:
	.size	 Task_HandleSelectionScreenMenu,.Lfe17-Task_HandleSelectionScreenMenu
	.align	2, 0
	.type	 Task_HandleSelectionScreenChooseMons,function
	.thumb_func
Task_HandleSelectionScreenChooseMons:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r5, .L288
	ldr	r3, [r5]
	mov	r7, #0xa8
	lsl	r7, r7, #0x2
	add	r0, r3, r7
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L272	@cond_branch
	ldr	r1, .L288+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r1, [r4, r0]
	cmp	r1, #0x1
	beq	.L276	@cond_branch
	cmp	r1, #0x1
	bgt	.L286	@cond_branch
	cmp	r1, #0
	beq	.L274	@cond_branch
	b	.L272
.L289:
	.align	2, 0
.L288:
	.word	sFactorySelectScreen
	.word	gTasks
.L286:
	cmp	r1, #0xb
	beq	.L282	@cond_branch
	b	.L272
.L274:
	ldr	r0, .L290
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L272	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x1
	strh	r1, [r4, #0x8]
	ldr	r2, .L290+0x4
	add	r1, r3, r2
	strb	r0, [r1]
	b	.L272
.L291:
	.align	2, 0
.L290:
	.word	gPaletteFade
	.word	0x2a2
.L276:
	ldr	r2, .L292
	ldrh	r0, [r2, #0x2e]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L277	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, [r5]
	ldr	r1, .L292+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x2
	strh	r0, [r4, #0x8]
	ldr	r0, .L292+0x8
	str	r0, [r4]
	b	.L272
.L293:
	.align	2, 0
.L292:
	.word	gMain
	.word	0x2a2
	.word	Task_HandleSelectionScreenMenu
.L277:
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L279	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	b	.L287
.L279:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L272	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
.L287:
	bl	Select_UpdateBallCursorPosition
	bl	Select_PrintMonCategory
	bl	Select_PrintMonSpecies
	b	.L272
.L282:
	ldr	r0, .L294
	ldrh	r1, [r0, #0x2e]
	mov	r6, #0x1
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L272	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, [r5]
	mov	r2, #0xa6
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	ldr	r0, [r0]
	add	r1, r1, r7
	mov	r2, #0x0
	bl	sub_819F3F8
	bl	Select_PrintSelectMonString
	ldr	r0, [r5]
	ldr	r1, .L294+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	strh	r6, [r4, #0x8]
.L272:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	gMain
	.word	0x2a2
.Lfe18:
	.size	 Task_HandleSelectionScreenChooseMons,.Lfe18-Task_HandleSelectionScreenChooseMons
	.align	2, 0
	.type	 CreateFrontierFactorySelectableMons,function
	.thumb_func
CreateFrontierFactorySelectableMons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x14]
	mov	r4, #0x0
	add	r0, sp, #0x10
	strb	r4, [r0]
	ldr	r0, .L312
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r6, r0, #0
	ldr	r7, .L312+0x4
	ldr	r2, [r7]
	ldr	r0, .L312+0x8
	add	r4, r2, r0
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	add	r5, r0, #0
	lsl	r0, r5, #0x1
	lsl	r1, r6, #0x2
	add	r0, r0, r1
	ldr	r1, .L312+0xc
	add	r2, r2, r1
	add	r2, r2, r0
	ldrh	r0, [r2]
	mov	r1, #0x7
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x1c]
	ldr	r1, .L312+0x10
	ldr	r0, .L312+0x14
	str	r0, [r1]
	ldrb	r1, [r4]
	mov	r0, #0x3
	and	r0, r0, r1
	mov	r2, #0x32
	str	r2, [sp, #0x18]
	cmp	r0, #0
	beq	.L297	@cond_branch
	mov	r3, #0x64
	str	r3, [sp, #0x18]
.L297:
	add	r0, r6, #0
	add	r1, r5, #0
	bl	GetNumPastRentalsRank
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x20]
	ldr	r1, [r7]
	ldrb	r0, [r1, #0xa]
	mov	r9, r0
	ldrb	r0, [r1, #0xb]
	lsl	r0, r0, #0x8
	mov	r2, r9
	orr	r2, r2, r0
	ldrb	r0, [r1, #0xc]
	lsl	r0, r0, #0x10
	orr	r2, r2, r0
	ldrb	r0, [r1, #0xd]
	lsl	r0, r0, #0x18
	orr	r2, r2, r0
	mov	r9, r2
	mov	r3, #0x0
	mov	r8, r3
.L302:
	ldr	r0, .L312+0x4
	ldr	r1, [r0]
	mov	r2, r8
	lsl	r0, r2, #0x1
	add	r0, r0, r8
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r3, .L312+0x18
	add	r1, r1, r3
	ldrh	r6, [r1]
	ldr	r0, .L312+0x1c
	ldr	r1, [r0]
	ldr	r2, [sp, #0x14]
	add	r2, r2, r8
	mov	r3, #0x6c
	mov	r0, r2
	mul	r0, r0, r3
	add	r1, r1, r0
	strh	r6, [r1, #0xc]
	mov	sl, r2
	ldr	r0, [sp, #0x20]
	cmp	r8, r0
	bcs	.L303	@cond_branch
	ldr	r0, [sp, #0x1c]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L311
.L313:
	.align	2, 0
.L312:
	.word	0x40ce
	.word	gSaveBlock2Ptr
	.word	0xc31
	.word	0xd6a
	.word	gFacilityTrainerMons
	.word	gBattleFrontierMons
	.word	0xdf8
	.word	sFactorySelectScreen
.L303:
	ldr	r0, [sp, #0x1c]
.L311:
	mov	r1, #0x0
	bl	GetFactoryMonFixedIV
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, #0x6c
	mov	r5, sl
	mul	r5, r5, r1
	add	r5, r5, #0xc
	ldr	r2, .L314
	ldr	r0, [r2]
	add	r0, r0, r5
	add	r0, r0, #0x8
	ldr	r1, .L314+0x4
	ldr	r2, [r1]
	lsl	r6, r6, #0x4
	add	r2, r6, r2
	ldrh	r1, [r2]
	ldrb	r3, [r2, #0xc]
	str	r4, [sp]
	ldrb	r2, [r2, #0xb]
	str	r2, [sp, #0x4]
	mov	r2, r9
	str	r2, [sp, #0x8]
	mov	r4, #0x0
	str	r4, [sp, #0xc]
	ldr	r2, [sp, #0x18]
	bl	CreateMonWithEVSpreadNatureOTID
	add	r0, sp, #0x10
	strb	r4, [r0]
	add	r7, r6, #0
	mov	r3, #0x1
	add	r8, r8, r3
	ldr	r3, .L314
.L308:
	ldr	r0, [r3]
	add	r0, r0, r5
	add	r0, r0, #0x8
	ldr	r6, .L314+0x4
	ldr	r1, [r6]
	add	r1, r7, r1
	lsl	r2, r4, #0x1
	add	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1]
	add	r2, r4, #0
	str	r3, [sp, #0x24]
	bl	SetMonMoveAvoidReturn
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r3, [sp, #0x24]
	cmp	r4, #0x3
	bls	.L308	@cond_branch
	mov	r0, #0x6c
	mov	r4, sl
	mul	r4, r4, r0
	add	r4, r4, #0xc
	ldr	r1, .L314
	ldr	r0, [r1]
	add	r0, r0, r4
	add	r0, r0, #0x8
	mov	r1, #0x20
	add	r2, sp, #0x10
	bl	SetMonData
	ldr	r2, .L314
	ldr	r0, [r2]
	add	r0, r0, r4
	add	r0, r0, #0x8
	ldr	r1, [r6]
	add	r1, r7, r1
	ldrb	r2, [r1, #0xa]
	lsl	r2, r2, #0x1
	ldr	r1, .L314+0x8
	add	r2, r2, r1
	mov	r1, #0xc
	bl	SetMonData
	mov	r3, r8
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0x5
	bhi	.LCB2877
	b	.L302	@long jump
.LCB2877:
	add	sp, sp, #0x28
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L315:
	.align	2, 0
.L314:
	.word	sFactorySelectScreen
	.word	gFacilityTrainerMons
	.word	gBattleFrontierHeldItems
.Lfe19:
	.size	 CreateFrontierFactorySelectableMons,.Lfe19-CreateFrontierFactorySelectableMons
	.align	2, 0
	.type	 CreateTentFactorySelectableMons,function
	.thumb_func
CreateTentFactorySelectableMons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x14]
	add	r0, sp, #0x10
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r1, .L327
	ldr	r0, .L327+0x4
	str	r0, [r1]
	ldr	r0, .L327+0x8
	ldr	r1, [r0]
	ldrb	r2, [r1, #0xa]
	ldrb	r0, [r1, #0xb]
	lsl	r0, r0, #0x8
	orr	r2, r2, r0
	ldrb	r0, [r1, #0xc]
	lsl	r0, r0, #0x10
	orr	r2, r2, r0
	ldrb	r0, [r1, #0xd]
	lsl	r0, r0, #0x18
	orr	r2, r2, r0
	mov	sl, r2
	mov	r3, #0x0
	mov	r9, r3
.L320:
	ldr	r0, .L327+0x8
	ldr	r1, [r0]
	mov	r7, r9
	lsl	r0, r7, #0x1
	add	r0, r0, r9
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L327+0xc
	add	r1, r1, r0
	ldrh	r1, [r1]
	mov	r8, r1
	ldr	r1, .L327+0x10
	ldr	r0, [r1]
	ldr	r6, [sp, #0x14]
	add	r6, r6, r9
	mov	r2, #0x6c
	mov	r4, r6
	mul	r4, r4, r2
	add	r1, r0, r4
	mov	r3, r8
	strh	r3, [r1, #0xc]
	add	r4, r4, #0xc
	add	r0, r0, r4
	add	r0, r0, #0x8
	ldr	r1, .L327
	ldr	r2, [r1]
	mov	r7, r8
	lsl	r5, r7, #0x4
	add	r2, r5, r2
	ldrh	r1, [r2]
	ldrb	r3, [r2, #0xc]
	mov	r7, #0x0
	str	r7, [sp]
	ldrb	r2, [r2, #0xb]
	str	r2, [sp, #0x4]
	mov	r2, sl
	str	r2, [sp, #0x8]
	str	r7, [sp, #0xc]
	mov	r2, #0x1e
	bl	CreateMonWithEVSpreadNatureOTID
	add	r0, sp, #0x10
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r2, r9
	add	r2, r2, #0x1
	str	r2, [sp, #0x18]
	mov	r9, r5
.L324:
	ldr	r3, .L327+0x10
	ldr	r0, [r3]
	add	r0, r0, r4
	add	r0, r0, #0x8
	ldr	r5, .L327
	ldr	r2, [r5]
	mov	r3, r8
	lsl	r1, r3, #0x4
	add	r1, r1, r2
	lsl	r2, r7, #0x1
	add	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1]
	add	r2, r7, #0
	bl	SetMonMoveAvoidReturn
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x3
	bls	.L324	@cond_branch
	mov	r7, #0x6c
	mov	r4, r6
	mul	r4, r4, r7
	add	r4, r4, #0xc
	ldr	r1, .L327+0x10
	ldr	r0, [r1]
	add	r0, r0, r4
	add	r0, r0, #0x8
	mov	r1, #0x20
	add	r2, sp, #0x10
	bl	SetMonData
	ldr	r2, .L327+0x10
	ldr	r0, [r2]
	add	r0, r0, r4
	add	r0, r0, #0x8
	ldr	r1, [r5]
	add	r1, r1, r9
	ldrb	r2, [r1, #0xa]
	lsl	r2, r2, #0x1
	ldr	r1, .L327+0x14
	add	r2, r2, r1
	mov	r1, #0xc
	bl	SetMonData
	ldr	r3, [sp, #0x18]
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	cmp	r0, #0x5
	bls	.L320	@cond_branch
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L328:
	.align	2, 0
.L327:
	.word	gFacilityTrainerMons
	.word	gSlateportBattleTentMons
	.word	gSaveBlock2Ptr
	.word	0xdf8
	.word	sFactorySelectScreen
	.word	gBattleFrontierHeldItems
.Lfe20:
	.size	 CreateTentFactorySelectableMons,.Lfe20-CreateTentFactorySelectableMons
	.align	2, 0
	.type	 Select_CopyMonsToPlayerParty,function
	.thumb_func
Select_CopyMonsToPlayerParty:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r7, #0x0
	ldr	r0, .L341
	mov	sl, r0
	ldr	r1, .L341+0x4
	mov	r8, r1
.L333:
	mov	r2, #0x0
	add	r0, r7, #0x1
	mov	r9, r0
.L337:
	mov	r1, sl
	ldr	r0, [r1]
	mov	r1, #0x6c
	mov	r6, r2
	mul	r6, r6, r1
	add	r1, r0, r6
	ldrb	r0, [r1, #0x10]
	cmp	r0, r9
	bne	.L336	@cond_branch
	mov	r0, #0x64
	mov	r5, r7
	mul	r5, r5, r0
	ldr	r2, .L341+0x8
	add	r5, r5, r2
	add	r1, r1, #0x14
	add	r0, r5, #0
	mov	r2, #0x64
	bl	memcpy
	mov	r0, r8
	ldr	r1, [r0]
	lsl	r4, r7, #0x1
	add	r4, r4, r7
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	mov	r2, sl
	ldr	r0, [r2]
	add	r0, r0, r6
	ldrh	r0, [r0, #0xc]
	ldr	r2, .L341+0xc
	add	r1, r1, r2
	strh	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	mov	r2, r8
	ldr	r1, [r2]
	ldr	r2, .L341+0x10
	add	r1, r1, r2
	add	r1, r1, r4
	str	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0x2e
	mov	r2, #0x0
	bl	GetBoxMonData
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, r4
	ldr	r2, .L341+0x14
	add	r1, r1, r2
	strb	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0x28
	mov	r2, #0x0
	bl	GetBoxMonData
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, r4
	mov	r2, #0xe0
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L332
.L342:
	.align	2, 0
.L341:
	.word	sFactorySelectScreen
	.word	gSaveBlock2Ptr
	.word	gPlayerParty
	.word	0xdf8
	.word	0xdfc
	.word	0xe01
.L336:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x5
	bls	.L337	@cond_branch
.L332:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x2
	bls	.L333	@cond_branch
	bl	CalculatePlayerPartyCount
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 Select_CopyMonsToPlayerParty,.Lfe21-Select_CopyMonsToPlayerParty
	.align	2, 0
	.type	 Select_ShowMenuOptions,function
	.thumb_func
Select_ShowMenuOptions:
	push	{r4, r5, lr}
	ldr	r5, .L345
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x6]
	cmp	r0, #0
	bne	.L344	@cond_branch
	strb	r0, [r1]
.L344:
	ldr	r4, .L345+0x4
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xb0
	strh	r1, [r0, #0x20]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xd0
	strh	r1, [r0, #0x20]
	ldrb	r0, [r2, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	strb	r0, [r1]
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r2, r2, r1
	strb	r2, [r0]
	bl	Select_PrintMenuOptions
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	sFactorySelectScreen
	.word	gSprites
.Lfe22:
	.size	 Select_ShowMenuOptions,.Lfe22-Select_ShowMenuOptions
	.align	2, 0
	.type	 Select_ShowYesNoOptions,function
	.thumb_func
Select_ShowYesNoOptions:
	push	{r4, r5, lr}
	ldr	r5, .L348
	ldr	r1, [r5]
	mov	r0, #0x0
	strb	r0, [r1, #0x7]
	ldr	r4, .L348+0x4
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xb0
	strh	r1, [r0, #0x20]
	ldrb	r1, [r2, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r3, #0x70
	strh	r3, [r0, #0x22]
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xd0
	strh	r1, [r0, #0x20]
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	strh	r3, [r0, #0x22]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	strb	r0, [r1]
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r2, r2, r1
	strb	r2, [r0]
	bl	Select_PrintYesNoOptions
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	sFactorySelectScreen
	.word	gSprites
.Lfe23:
	.size	 Select_ShowYesNoOptions,.Lfe23-Select_ShowYesNoOptions
	.align	2, 0
	.type	 sub_819B958,function
	.thumb_func
sub_819B958:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L351
	ldr	r3, .L351+0x4
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	ClearWindowTilemap
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L352:
	.align	2, 0
.L351:
	.word	gSprites
	.word	sFactorySelectScreen
.Lfe24:
	.size	 sub_819B958,.Lfe24-sub_819B958
	.align	2, 0
	.type	 Select_PrintRentalPkmnString,function
	.thumb_func
Select_PrintRentalPkmnString:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r2, .L354
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x2
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L355:
	.align	2, 0
.L354:
	.word	gText_RentalPkmn2
.Lfe25:
	.size	 Select_PrintRentalPkmnString,.Lfe25-Select_PrintRentalPkmnString
	.align	2, 0
	.type	 Select_PrintMonSpecies,function
	.thumb_func
Select_PrintMonSpecies:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L357
	ldr	r0, [r5]
	ldrb	r4, [r0, #0x3]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x6c
	mul	r0, r0, r4
	ldr	r1, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x14
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L357+0x4
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L357+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x56
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L357+0xc
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L358:
	.align	2, 0
.L357:
	.word	sFactorySelectScreen
	.word	gStringVar4
	.word	gSpeciesNames
	.word	sSpeciesNameTextColors
.Lfe26:
	.size	 Select_PrintMonSpecies,.Lfe26-Select_PrintMonSpecies
	.align	2, 0
	.type	 Select_PrintSelectMonString,function
	.thumb_func
Select_PrintSelectMonString:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, .L366
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0x1
	bne	.L360	@cond_branch
	ldr	r2, .L366+0x4
	b	.L361
.L367:
	.align	2, 0
.L366:
	.word	sFactorySelectScreen
	.word	gText_SelectFirstPkmn
.L360:
	cmp	r0, #0x2
	bne	.L362	@cond_branch
	ldr	r2, .L368
	b	.L361
.L369:
	.align	2, 0
.L368:
	.word	gText_SelectSecondPkmn
.L362:
	ldr	r2, .L370
	cmp	r0, #0x3
	bne	.L361	@cond_branch
	ldr	r2, .L370+0x4
.L361:
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x2
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	gText_TheseThreePkmnOkay
	.word	gText_SelectThirdPkmn
.Lfe27:
	.size	 Select_PrintSelectMonString,.Lfe27-Select_PrintSelectMonString
	.align	2, 0
	.type	 Select_PrintCantSelectSameMon,function
	.thumb_func
Select_PrintCantSelectSameMon:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r2, .L373
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x2
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L374:
	.align	2, 0
.L373:
	.word	gText_CantSelectSamePkmn
.Lfe28:
	.size	 Select_PrintCantSelectSameMon,.Lfe28-Select_PrintCantSelectSameMon
	.align	2, 0
	.type	 Select_PrintMenuOptions,function
	.thumb_func
Select_PrintMenuOptions:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L378
	ldr	r0, [r0]
	ldrb	r2, [r0, #0x3]
	mov	r1, #0x6c
	mul	r1, r1, r2
	add	r0, r0, r1
	ldrb	r5, [r0, #0x10]
	mov	r0, #0x3
	bl	PutWindowTilemap
	mov	r0, #0x3
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r4, .L378+0x4
	str	r4, [sp]
	mov	r6, #0x0
	str	r6, [sp, #0x4]
	ldr	r0, .L378+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	cmp	r5, #0
	beq	.L376	@cond_branch
	str	r4, [sp]
	str	r6, [sp, #0x4]
	ldr	r0, .L378+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	b	.L377
.L379:
	.align	2, 0
.L378:
	.word	sFactorySelectScreen
	.word	sMenuOptionTextColors
	.word	gText_Summary
	.word	gText_Deselect
.L376:
	str	r4, [sp]
	str	r5, [sp, #0x4]
	ldr	r0, .L380
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
.L377:
	ldr	r0, .L380+0x4
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r0, .L380+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x21
	bl	AddTextPrinterParameterized3
	mov	r0, #0x3
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L381:
	.align	2, 0
.L380:
	.word	gText_Rent
	.word	sMenuOptionTextColors
	.word	gText_Others2
.Lfe29:
	.size	 Select_PrintMenuOptions,.Lfe29-Select_PrintMenuOptions
	.align	2, 0
	.type	 Select_PrintYesNoOptions,function
	.thumb_func
Select_PrintYesNoOptions:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x4
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r5, .L383
	str	r5, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r0, .L383+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L383+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	mov	r0, #0x4
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L384:
	.align	2, 0
.L383:
	.word	sMenuOptionTextColors
	.word	gText_Yes2
	.word	gText_No2
.Lfe30:
	.size	 Select_PrintYesNoOptions,.Lfe30-Select_PrintYesNoOptions
	.align	2, 0
	.type	 Select_RunMenuOptionFunc,function
	.thumb_func
Select_RunMenuOptionFunc:
	push	{lr}
	ldr	r2, .L386
	ldr	r1, .L386+0x4
	ldr	r0, .L386+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L387:
	.align	2, 0
.L386:
	.word	gUnknown_030062E8
	.word	sSelect_MenuOptionFuncs
	.word	sFactorySelectScreen
.Lfe31:
	.size	 Select_RunMenuOptionFunc,.Lfe31-Select_RunMenuOptionFunc
	.align	2, 0
	.type	 Select_OptionRentDeselect,function
	.thumb_func
Select_OptionRentDeselect:
	push	{r4, lr}
	ldr	r0, .L394
	ldr	r0, [r0]
	ldrb	r2, [r0, #0x3]
	mov	r1, #0x6c
	mul	r1, r1, r2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x10]
	ldrh	r0, [r0, #0xc]
	cmp	r1, #0
	bne	.L389	@cond_branch
	bl	Select_AreSpeciesValid
	cmp	r0, #0
	bne	.L389	@cond_branch
	bl	Select_PrintCantSelectSameMon
	mov	r0, #0x3
	bl	sub_819B958
	mov	r0, #0x3
	b	.L393
.L395:
	.align	2, 0
.L394:
	.word	sFactorySelectScreen
.L389:
	ldr	r4, .L396
	ldr	r1, [r4]
	mov	r2, #0xa6
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	ldr	r0, [r0]
	add	r2, r2, #0x8
	add	r1, r1, r2
	mov	r2, #0x0
	bl	sub_819F3F8
	bl	Select_HandleMonSelectionChange
	bl	Select_PrintSelectMonString
	mov	r0, #0x3
	bl	sub_819B958
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0x3
	bhi	.L391	@cond_branch
	mov	r0, #0x1
	b	.L393
.L397:
	.align	2, 0
.L396:
	.word	sFactorySelectScreen
.L391:
	mov	r0, #0x2
.L393:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 Select_OptionRentDeselect,.Lfe32-Select_OptionRentDeselect
	.align	2, 0
	.type	 sub_819BC9C,function
	.thumb_func
sub_819BC9C:
	push	{lr}
	bl	sub_819C568
	bl	Select_HandleMonSelectionChange
	bl	Select_PrintSelectMonString
	mov	r0, #0x3
	bl	sub_819B958
	ldr	r0, .L402
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0x3
	bhi	.L399	@cond_branch
	mov	r0, #0x1
	b	.L401
.L403:
	.align	2, 0
.L402:
	.word	sFactorySelectScreen
.L399:
	mov	r0, #0x2
.L401:
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 sub_819BC9C,.Lfe33-sub_819BC9C
	.align	2, 0
	.type	 Select_OptionSummary,function
	.thumb_func
Select_OptionSummary:
	mov	r0, #0x0
	bx	lr
.Lfe34:
	.size	 Select_OptionSummary,.Lfe34-Select_OptionSummary
	.align	2, 0
	.type	 Select_OptionOthers,function
	.thumb_func
Select_OptionOthers:
	push	{lr}
	ldr	r0, .L406
	ldr	r1, [r0]
	mov	r2, #0xa6
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	ldr	r0, [r0]
	add	r2, r2, #0x8
	add	r1, r1, r2
	mov	r2, #0x0
	bl	sub_819F3F8
	mov	r0, #0x3
	bl	sub_819B958
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L407:
	.align	2, 0
.L406:
	.word	sFactorySelectScreen
.Lfe35:
	.size	 Select_OptionOthers,.Lfe35-Select_OptionOthers
	.align	2, 0
	.type	 Select_PrintMonCategory,function
	.thumb_func
Select_PrintMonCategory:
	push	{r4, r5, lr}
	add	sp, sp, #-0x2c
	ldr	r5, .L410
	ldr	r0, [r5]
	ldrb	r4, [r0, #0x3]
	cmp	r4, #0x5
	bhi	.L409	@cond_branch
	mov	r0, #0x5
	bl	PutWindowTilemap
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x6c
	mul	r0, r0, r4
	ldr	r1, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x14
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, sp, #0xc
	bl	CopyMonCategoryText
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0x76
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x5
	mov	r1, #0x1
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
.L409:
	add	sp, sp, #0x2c
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L411:
	.align	2, 0
.L410:
	.word	sFactorySelectScreen
.Lfe36:
	.size	 Select_PrintMonCategory,.Lfe36-Select_PrintMonCategory
	.align	2, 0
	.type	 Summary_ShowMonSprite,function
	.thumb_func
Summary_ShowMonSprite:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x10
	ldr	r6, .L413
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x6c
	mov	r4, r1
	mul	r4, r4, r0
	add	r4, r4, r2
	add	r4, r4, #0x14
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	mov	r8, r0
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0x58
	str	r0, [sp]
	mov	r0, #0x20
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	ldr	r0, .L413+0x4
	str	r0, [sp, #0xc]
	add	r0, r5, #0
	mov	r2, r8
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
	ldr	r1, [r6]
	mov	r2, #0xa6
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	mov	r3, #0x0
	strb	r0, [r1]
	ldr	r4, .L413+0x8
	ldr	r0, [r6]
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x28
	strb	r3, [r0]
	ldr	r0, [r6]
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x29
	strb	r3, [r0]
	ldr	r0, [r6]
	mov	r1, #0xa8
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	strb	r3, [r0]
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L414:
	.align	2, 0
.L413:
	.word	sFactorySelectScreen
	.word	0xffff
	.word	gSprites
.Lfe37:
	.size	 Summary_ShowMonSprite,.Lfe37-Summary_ShowMonSprite
	.align	2, 0
	.type	 sub_819BE20,function
	.thumb_func
sub_819BE20:
	ldr	r1, .L416
	ldr	r1, [r1]
	mov	r2, #0xa8
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	strb	r0, [r1]
	bx	lr
.L417:
	.align	2, 0
.L416:
	.word	sFactorySelectScreen
.Lfe38:
	.size	 sub_819BE20,.Lfe38-sub_819BE20
	.align	2, 0
	.type	 Select_ShowSummaryMonSprite,function
	.thumb_func
Select_ShowSummaryMonSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	ldr	r0, .L419
	mov	r1, #0x78
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r6, .L419+0x4
	ldr	r1, [r6]
	ldr	r2, .L419+0x8
	mov	sl, r2
	add	r1, r1, sl
	mov	r7, #0x0
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L419+0xc
	mov	r8, r1
	add	r0, r0, r8
	mov	r1, #0x2
	bl	StartSpriteAffineAnim
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x6c
	mov	r4, r1
	mul	r4, r4, r0
	add	r4, r4, r2
	add	r4, r4, #0x14
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	mov	r9, r0
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0x58
	str	r0, [sp]
	mov	r0, #0x20
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	ldr	r0, .L419+0x10
	str	r0, [sp, #0xc]
	add	r0, r5, #0
	mov	r2, r9
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
	ldr	r1, [r6]
	mov	r2, #0xa6
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x28
	strb	r7, [r0]
	ldr	r0, [r6]
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x29
	strb	r7, [r0]
	ldr	r0, [r6]
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L420:
	.align	2, 0
.L419:
	.word	gUnknown_08610638
	.word	sFactorySelectScreen
	.word	0x299
	.word	gSprites
	.word	0xffff
.Lfe39:
	.size	 Select_ShowSummaryMonSprite,.Lfe39-Select_ShowSummaryMonSprite
	.align	2, 0
	.type	 Select_ShowChosenMonsSprites,function
	.thumb_func
Select_ShowChosenMonsSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	mov	r7, #0x0
	ldr	r0, .L433
	mov	r9, r0
.L425:
	mov	r2, #0x0
	add	r1, r7, #0x1
	mov	sl, r1
	lsl	r0, r7, #0x2
	mov	r8, r0
.L429:
	mov	r0, r9
	ldr	r1, [r0]
	mov	r0, #0x6c
	mov	r4, r2
	mul	r4, r4, r0
	add	r0, r1, r4
	ldrb	r0, [r0, #0x10]
	cmp	r0, sl
	bne	.L428	@cond_branch
	add	r4, r4, r1
	add	r4, r4, #0x14
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	add	r6, r0, #0
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r7, #0x3
	add	r0, r0, r7
	lsl	r0, r0, #0x13
	mov	r2, #0x80
	lsl	r2, r2, #0xd
	add	r0, r0, r2
	asr	r0, r0, #0x10
	str	r0, [sp]
	mov	r0, #0x20
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	add	r0, r0, #0xd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x8]
	ldr	r0, .L433+0x4
	str	r0, [sp, #0xc]
	add	r0, r5, #0
	add	r2, r6, #0
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
	mov	r2, r9
	ldr	r1, [r2]
	add	r1, r1, r8
	mov	r2, #0xa5
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	strb	r0, [r1]
	mov	r1, r9
	ldr	r0, [r1]
	add	r0, r0, r8
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L433+0x8
	add	r0, r0, r2
	add	r0, r0, #0x28
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r2, r9
	ldr	r0, [r2]
	add	r0, r0, r8
	mov	r1, #0xa5
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L433+0x8
	add	r0, r0, r2
	add	r0, r0, #0x29
	mov	r1, #0x0
	strb	r1, [r0]
	b	.L424
.L434:
	.align	2, 0
.L433:
	.word	sFactorySelectScreen
	.word	0xffff
	.word	gSprites
.L428:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x5
	bls	.L429	@cond_branch
.L424:
	mov	r2, sl
	lsl	r0, r2, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x2
	bls	.L425	@cond_branch
	ldr	r0, .L435
	ldr	r0, [r0]
	mov	r1, #0xa8
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L436:
	.align	2, 0
.L435:
	.word	sFactorySelectScreen
.Lfe40:
	.size	 Select_ShowChosenMonsSprites,.Lfe40-Select_ShowChosenMonsSprites
	.align	2, 0
	.type	 sub_819C040,function
	.thumb_func
sub_819C040:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L438	@cond_branch
	ldr	r3, .L439
	ldr	r6, .L439+0x4
	ldr	r2, [r6]
	ldr	r0, .L439+0x8
	add	r5, r2, r0
	ldrb	r0, [r5]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	add	r1, r1, #0x3f
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bge	.L438	@cond_branch
	ldr	r1, .L439+0xc
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bge	.L438	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r6]
	ldr	r1, .L439+0xc
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L439+0x10
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L439+0x14
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	ldr	r0, .L439+0x18
	str	r0, [r4, #0x1c]
.L438:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L440:
	.align	2, 0
.L439:
	.word	gSprites
	.word	sFactorySelectScreen
	.word	0x295
	.word	0x29d
	.word	sub_819C1D0
	.word	gTasks
	.word	SpriteCallbackDummy
.Lfe41:
	.size	 sub_819C040,.Lfe41-sub_819C040
	.align	2, 0
	.type	 sub_819C100,function
	.thumb_func
sub_819C100:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L442	@cond_branch
	ldr	r6, .L443
	ldr	r4, .L443+0x4
	ldr	r2, [r4]
	ldr	r7, .L443+0x8
	add	r0, r2, r7
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bge	.L442	@cond_branch
	ldr	r1, .L443+0xc
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bge	.L442	@cond_branch
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r0, [r4]
	add	r0, r0, r7
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r0, [r4]
	ldr	r1, .L443+0xc
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r0, [r4]
	mov	r1, #0xa8
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, r7
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	DestroySprite
	ldr	r0, [r4]
	ldr	r1, .L443+0xc
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	DestroySprite
	add	r0, r5, #0
	bl	DestroySprite
.L442:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L444:
	.align	2, 0
.L443:
	.word	gSprites
	.word	sFactorySelectScreen
	.word	0x295
	.word	0x29d
.Lfe42:
	.size	 sub_819C100,.Lfe42-sub_819C100
	.align	2, 0
	.type	 sub_819C1D0,function
	.thumb_func
sub_819C1D0:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L456
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L448	@cond_branch
	cmp	r0, #0x1
	bgt	.L455	@cond_branch
	cmp	r0, #0
	beq	.L447	@cond_branch
	b	.L453
.L457:
	.align	2, 0
.L456:
	.word	gTasks
.L455:
	cmp	r0, #0x2
	beq	.L449	@cond_branch
	b	.L453
.L447:
	mov	r0, #0x10
	strh	r0, [r4, #0xe]
	mov	r0, #0xe0
	strh	r0, [r4, #0x38]
	mov	r0, #0x40
	strh	r0, [r4, #0x12]
	mov	r0, #0x41
	strh	r0, [r4, #0x18]
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldrh	r1, [r4, #0xe]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x38]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x40
	bl	SetGpuReg
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x37
	bl	SetGpuReg
	b	.L446
.L448:
	mov	r0, #0x3
	bl	ShowBg
	ldr	r1, .L458
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L458+0x4
	mov	r0, #0x52
	bl	SetGpuReg
	b	.L446
.L459:
	.align	2, 0
.L458:
	.word	0x1248
	.word	0x40b
.L449:
	ldrh	r0, [r4, #0x12]
	sub	r0, r0, #0x4
	strh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0x18]
	add	r1, r1, #0x4
	strh	r1, [r4, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x20
	ble	.L451	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5f
	ble	.L450	@cond_branch
.L451:
	mov	r0, #0x20
	strh	r0, [r4, #0x12]
	mov	r0, #0x60
	strh	r0, [r4, #0x18]
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	ClearGpuRegBits
.L450:
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x20
	bne	.L445	@cond_branch
	b	.L446
.L453:
	add	r0, r2, #0
	bl	DestroyTask
	bl	Select_ShowChosenMonsSprites
	b	.L445
.L446:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L445:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 sub_819C1D0,.Lfe43-sub_819C1D0
	.align	2, 0
	.type	 sub_819C2D4,function
	.thumb_func
sub_819C2D4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L470
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.LCB4859
	b	.L463	@long jump
.LCB4859:
	cmp	r0, #0x1
	bne	.LCB4861
	b	.L464	@long jump
.LCB4861:
	mov	r0, #0x3
	bl	HideBg
	ldr	r4, .L470+0x4
	ldr	r0, .L470+0x8
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r1, .L470+0xc
	mov	ip, r1
	add	r0, r0, ip
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r3, #0x5
	neg	r3, r3
	add	r0, r3, #0
	and	r0, r0, r2
	strb	r0, [r1]
	mov	r0, r8
	ldr	r2, [r0]
	mov	r1, ip
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r6, r4, #0
	add	r6, r6, #0x1c
	add	r0, r0, r6
	ldr	r1, .L470+0x10
	str	r1, [r0]
	ldr	r0, .L470+0x14
	mov	r9, r0
	add	r2, r2, r9
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	add	r1, r3, #0
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r1, r8
	ldr	r2, [r1]
	mov	r1, r9
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r1, .L470+0x18
	mov	sl, r1
	str	r1, [r0]
	ldr	r5, .L470+0x1c
	add	r2, r2, r5
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r3, r3, r1
	strb	r3, [r0]
	mov	r0, r8
	ldr	r2, [r0]
	add	r0, r2, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, sl
	str	r1, [r0]
	add	r2, r2, ip
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r9
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	ClearGpuRegBits
	add	r0, r7, #0
	bl	DestroyTask
	b	.L461
.L471:
	.align	2, 0
.L470:
	.word	gTasks
	.word	gSprites
	.word	sFactorySelectScreen
	.word	0x299
	.word	sub_819C100
	.word	0x295
	.word	SpriteCallbackDummy
	.word	0x29d
.L463:
	mov	r0, #0x10
	strh	r0, [r4, #0xe]
	mov	r0, #0xe0
	strh	r0, [r4, #0x38]
	mov	r0, #0x20
	strh	r0, [r4, #0x12]
	mov	r0, #0x60
	strh	r0, [r4, #0x18]
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldrh	r1, [r4, #0xe]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x38]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x40
	bl	SetGpuReg
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x37
	bl	SetGpuReg
	b	.L469
.L464:
	ldrh	r0, [r4, #0x12]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0x18]
	sub	r1, r1, #0x4
	strh	r1, [r4, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3f
	bgt	.L466	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x41
	bgt	.L465	@cond_branch
.L466:
	mov	r0, #0x40
	strh	r0, [r4, #0x12]
	mov	r0, #0x41
	strh	r0, [r4, #0x18]
.L465:
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x40
	bne	.L461	@cond_branch
.L469:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L461:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 sub_819C2D4,.Lfe44-sub_819C2D4
	.align	2, 0
	.type	 sub_819C4B4,function
	.thumb_func
sub_819C4B4:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r4, .L473
	add	r0, r4, #0
	mov	r1, #0x78
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r6, .L473+0x4
	ldr	r1, [r6]
	ldr	r2, .L473+0x8
	mov	r8, r2
	add	r1, r1, r8
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x2c
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	ldr	r5, .L473+0xc
	add	r1, r1, r5
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0xc4
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	ldr	r4, .L473+0x10
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r3, .L473+0x14
	ldr	r2, [r6]
	add	r8, r8, r2
	mov	r0, r8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r3, #0x1c
	add	r0, r0, r3
	ldr	r1, .L473+0x18
	str	r1, [r0]
	add	r5, r2, r5
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldr	r5, .L473+0x1c
	str	r5, [r0]
	add	r4, r2, r4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	str	r5, [r0]
	mov	r0, #0xa8
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	mov	r0, #0x1
	strb	r0, [r2]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L474:
	.align	2, 0
.L473:
	.word	gUnknown_08610638
	.word	sFactorySelectScreen
	.word	0x299
	.word	0x295
	.word	0x29d
	.word	gSprites
	.word	sub_819C040
	.word	SpriteCallbackDummy
.Lfe45:
	.size	 sub_819C4B4,.Lfe45-sub_819C4B4
	.align	2, 0
	.type	 sub_819C568,function
	.thumb_func
sub_819C568:
	push	{r4, lr}
	ldr	r4, .L476
	ldr	r0, [r4]
	mov	r1, #0xa5
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	FreeAndDestroyMonPicSprite
	ldr	r0, [r4]
	mov	r1, #0xa6
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	FreeAndDestroyMonPicSprite
	ldr	r0, [r4]
	mov	r1, #0xa7
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	FreeAndDestroyMonPicSprite
	ldr	r0, .L476+0x4
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L476+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	ldr	r0, [r4]
	mov	r1, #0xa8
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L477:
	.align	2, 0
.L476:
	.word	sFactorySelectScreen
	.word	sub_819C2D4
	.word	gTasks
.Lfe46:
	.size	 sub_819C568,.Lfe46-sub_819C568
	.align	2, 0
	.type	 Select_SetWinRegs,function
	.thumb_func
Select_SetWinRegs:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	add	r6, r1, #0
	add	r5, r2, #0
	mov	r8, r3
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r0, r8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuRegBits
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x10
	orr	r4, r4, r6
	mov	r0, #0x40
	add	r1, r4, #0
	bl	SetGpuReg
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x10
	mov	r0, r8
	orr	r5, r5, r0
	mov	r0, #0x44
	add	r1, r5, #0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x37
	bl	SetGpuReg
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 Select_SetWinRegs,.Lfe47-Select_SetWinRegs
	.align	2, 0
	.type	 Select_AreSpeciesValid,function
	.thumb_func
Select_AreSpeciesValid:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	ldr	r2, .L493
	ldr	r1, [r2]
	lsr	r0, r0, #0xc
	add	r0, r0, r1
	ldrh	r6, [r0]
	ldr	r0, .L493+0x4
	ldr	r0, [r0]
	ldrb	r5, [r0, #0x5]
	mov	r3, #0x1
	cmp	r3, r5
	bcs	.L481	@cond_branch
	add	r4, r0, #0
	mov	r0, #0x6c
	mov	ip, r0
	add	r7, r2, #0
.L483:
	mov	r2, #0x0
.L487:
	mov	r0, ip
	mul	r0, r0, r2
	add	r1, r4, r0
	ldrb	r0, [r1, #0x10]
	cmp	r0, r3
	bne	.L486	@cond_branch
	ldrh	r0, [r1, #0xc]
	ldr	r1, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, r6
	bne	.L482	@cond_branch
	mov	r0, #0x0
	b	.L492
.L494:
	.align	2, 0
.L493:
	.word	gFacilityTrainerMons
	.word	sFactorySelectScreen
.L486:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x5
	bls	.L487	@cond_branch
.L482:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, r5
	bcc	.L483	@cond_branch
.L481:
	mov	r0, #0x1
.L492:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 Select_AreSpeciesValid,.Lfe48-Select_AreSpeciesValid
	.align	2, 0
	.type	 Task_SelectFadeSpeciesName,function
	.thumb_func
Task_SelectFadeSpeciesName:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L516
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	mov	r0, #0x8
	ldrsh	r2, [r5, r0]
	cmp	r2, #0x1
	beq	.L498	@cond_branch
	cmp	r2, #0x1
	bgt	.L513	@cond_branch
	cmp	r2, #0
	beq	.L497	@cond_branch
	b	.L496
.L517:
	.align	2, 0
.L516:
	.word	gTasks
.L513:
	cmp	r2, #0x2
	beq	.L508	@cond_branch
	b	.L496
.L497:
	ldr	r1, .L518
	ldr	r0, [r1]
	ldr	r3, .L518+0x4
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r1]
	add	r3, r3, #0x1
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r1]
	ldr	r1, .L518+0x8
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	strh	r1, [r5, #0x8]
	b	.L496
.L519:
	.align	2, 0
.L518:
	.word	sFactorySelectScreen
	.word	0x2a7
	.word	0x2a6
.L498:
	ldr	r0, .L520
	ldr	r3, [r0]
	ldr	r2, .L520+0x4
	add	r1, r3, r2
	ldrb	r1, [r1]
	add	r7, r0, #0
	cmp	r1, #0
	beq	.L496	@cond_branch
	ldr	r1, .L520+0x8
	add	r0, r3, r1
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.L500	@cond_branch
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L496
.L521:
	.align	2, 0
.L520:
	.word	sFactorySelectScreen
	.word	0x2a2
	.word	0x2a9
.L500:
	ldr	r2, .L522
	add	r1, r3, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0x6
	bls	.L502	@cond_branch
	strb	r4, [r1]
	ldr	r1, [r7]
	sub	r2, r2, #0x1
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L503	@cond_branch
	mov	r3, #0xaa
	lsl	r3, r3, #0x2
	add	r1, r1, r3
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	b	.L514
.L523:
	.align	2, 0
.L522:
	.word	0x2a7
.L503:
	mov	r0, #0xaa
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
.L514:
	strb	r0, [r1]
.L502:
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	ldr	r1, [r7]
	mov	r4, #0xaa
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r2, [r7]
	add	r4, r2, r4
	ldrb	r0, [r4]
	cmp	r0, #0x5
	bls	.L505	@cond_branch
	ldr	r3, .L524
	add	r1, r2, r3
	mov	r0, #0x0
	b	.L515
.L525:
	.align	2, 0
.L524:
	.word	0x2a6
.L505:
	cmp	r0, #0
	bne	.L496	@cond_branch
	ldr	r1, .L526
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x2
	strh	r1, [r0, #0x8]
	ldr	r0, .L526+0x4
	add	r1, r2, r0
	mov	r0, #0x1
	b	.L515
.L527:
	.align	2, 0
.L526:
	.word	gTasks
	.word	0x2a6
.L508:
	ldr	r0, .L528
	ldr	r0, [r0]
	ldr	r2, .L528+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0xe
	bls	.L509	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L496
.L529:
	.align	2, 0
.L528:
	.word	sFactorySelectScreen
	.word	0x2a9
.L509:
	add	r0, r0, #0x1
.L515:
	strb	r0, [r1]
.L496:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 Task_SelectFadeSpeciesName,.Lfe49-Task_SelectFadeSpeciesName
	.align	2, 0
	.type	 Swap_CB2,function
	.thumb_func
Swap_CB2:
	push	{lr}
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	bl	RunTasks
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 Swap_CB2,.Lfe50-Swap_CB2
	.align	2, 0
	.type	 Swap_VblankCb,function
	.thumb_func
Swap_VblankCb:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 Swap_VblankCb,.Lfe51-Swap_VblankCb
	.align	2, 0
	.type	 CopySwappedMonData,function
	.thumb_func
CopySwappedMonData:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x4
	ldr	r4, .L533
	ldr	r5, .L533+0x4
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x12]
	mov	r6, #0x64
	mul	r0, r0, r6
	add	r0, r0, r4
	ldr	r2, .L533+0x8
	mov	r9, r2
	ldrb	r1, [r1, #0x13]
	mul	r1, r1, r6
	add	r1, r1, r9
	mov	r2, #0x64
	bl	memcpy
	mov	r1, #0x0
	mov	r0, sp
	strb	r1, [r0]
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mul	r0, r0, r6
	add	r0, r0, r4
	mov	r1, #0x20
	mov	r2, sp
	bl	SetMonData
	ldr	r3, .L533+0xc
	mov	r8, r3
	ldr	r3, [r3]
	ldr	r4, [r5]
	ldrb	r0, [r4, #0x12]
	lsl	r2, r0, #0x1
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r3, r2
	ldrb	r1, [r4, #0x13]
	add	r1, r1, #0x3
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	ldr	r1, .L533+0x10
	add	r0, r0, r1
	ldrh	r0, [r0]
	add	r2, r2, r1
	strh	r0, [r2]
	ldrb	r0, [r4, #0x12]
	lsl	r2, r0, #0x1
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r3, r2
	ldrb	r1, [r4, #0x13]
	add	r1, r1, #0x3
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r3, r0
	mov	r0, #0xe0
	lsl	r0, r0, #0x4
	add	r3, r3, r0
	ldrb	r1, [r3]
	add	r2, r2, r0
	strb	r1, [r2]
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x13]
	mul	r0, r0, r6
	add	r0, r0, r9
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, r8
	ldr	r2, [r1]
	ldr	r4, [r5]
	ldrb	r3, [r4, #0x12]
	lsl	r1, r3, #0x1
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	ldr	r3, .L533+0x14
	add	r2, r2, r3
	add	r2, r2, r1
	str	r0, [r2]
	ldrb	r0, [r4, #0x13]
	mul	r0, r0, r6
	add	r0, r0, r9
	mov	r1, #0x2e
	mov	r2, #0x0
	bl	GetBoxMonData
	mov	r1, r8
	ldr	r2, [r1]
	ldr	r1, [r5]
	ldrb	r3, [r1, #0x12]
	lsl	r1, r3, #0x1
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r2, r2, r1
	ldr	r3, .L533+0x18
	add	r2, r2, r3
	strb	r0, [r2]
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L534:
	.align	2, 0
.L533:
	.word	gPlayerParty
	.word	sFactorySwapScreen
	.word	gEnemyParty
	.word	gSaveBlock2Ptr
	.word	0xdf8
	.word	0xdfc
	.word	0xe01
.Lfe52:
	.size	 CopySwappedMonData,.Lfe52-CopySwappedMonData
	.align	2, 0
	.type	 Task_FromSwapScreenToSummaryScreen,function
	.thumb_func
Task_FromSwapScreenToSummaryScreen:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L544
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x7
	beq	.L538	@cond_branch
	cmp	r0, #0x7
	bgt	.L543	@cond_branch
	cmp	r0, #0x6
	beq	.L537	@cond_branch
	b	.L536
.L545:
	.align	2, 0
.L544:
	.word	gTasks
.L543:
	cmp	r0, #0x8
	beq	.L540	@cond_branch
	b	.L536
.L537:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x7
	strh	r0, [r6, #0x8]
	b	.L536
.L538:
	ldr	r0, .L546
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L536	@cond_branch
	ldr	r4, .L546+0x4
	ldr	r0, [r4]
	add	r0, r0, #0x21
	ldrb	r0, [r0]
	bl	DestroyTask
	ldr	r1, [r4]
	ldr	r0, [r1, #0x2c]
	add	r1, r1, #0x30
	bl	sub_819F444
	bl	Swap_DestroyAllSprites
	ldr	r4, .L546+0x8
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L546+0xc
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L546+0x10
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L546+0x14
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	bl	FreeAllWindowBuffers
	mov	r0, #0x8
	strh	r0, [r6, #0x8]
	b	.L536
.L547:
	.align	2, 0
.L546:
	.word	gPaletteFade
	.word	sFactorySwapScreen
	.word	sSwapMenuTilesetBuffer
	.word	sSwapMonCardBgTilesetBuffer
	.word	sSwapMenuTilemapBuffer
	.word	sSwapMonCardBgTilemapBuffer
.L540:
	add	r0, r2, #0
	bl	DestroyTask
	ldr	r2, .L548
	ldr	r1, [r2]
	mov	r0, #0x1
	strb	r0, [r1, #0x15]
	ldr	r2, [r2]
	ldr	r0, .L548+0x4
	mov	r1, #0xf4
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2, #0x24]
	ldr	r1, .L548+0x8
	ldrb	r2, [r2, #0x3]
	ldr	r0, .L548+0xc
	str	r0, [sp]
	mov	r0, #0x0
	mov	r3, #0x2
	bl	ShowPokemonSummaryScreen
.L536:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L549:
	.align	2, 0
.L548:
	.word	sFactorySwapScreen
	.word	gPlttBufferUnfaded
	.word	gPlayerParty
	.word	CB2_InitSwapScreen
.Lfe53:
	.size	 Task_FromSwapScreenToSummaryScreen,.Lfe53-Task_FromSwapScreenToSummaryScreen
	.align	2, 0
	.type	 Task_CloseSwapScreen,function
	.thumb_func
Task_CloseSwapScreen:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r7, .L565
	ldr	r2, [r7]
	add	r0, r2, #0
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L551	@cond_branch
	ldr	r1, .L565+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r1, [r4, r0]
	cmp	r1, #0x1
	beq	.L556	@cond_branch
	cmp	r1, #0x1
	bgt	.L563	@cond_branch
	cmp	r1, #0
	beq	.L553	@cond_branch
	b	.L551
.L566:
	.align	2, 0
.L565:
	.word	sFactorySwapScreen
	.word	gTasks
.L563:
	cmp	r1, #0x2
	beq	.L558	@cond_branch
	cmp	r1, #0x3
	beq	.L559	@cond_branch
	b	.L551
.L553:
	add	r0, r2, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L554	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	ldr	r0, .L567
	strh	r1, [r0]
	b	.L551
.L568:
	.align	2, 0
.L567:
	.word	gSpecialVar_Result
.L554:
	mov	r0, #0x2
	strh	r0, [r4, #0x8]
	ldr	r1, .L569
	mov	r0, #0x1
	strh	r0, [r1]
	b	.L551
.L570:
	.align	2, 0
.L569:
	.word	gSpecialVar_Result
.L556:
	add	r0, r2, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L564	@cond_branch
	ldrb	r0, [r2, #0x3]
	strb	r0, [r2, #0x13]
	bl	CopySwappedMonData
	b	.L564
.L558:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
.L564:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L551
.L559:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L551	@cond_branch
	ldr	r0, [r7]
	add	r0, r0, #0x21
	ldrb	r0, [r0]
	bl	DestroyTask
	bl	Swap_DestroyAllSprites
	ldr	r4, .L571
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L571+0x4
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L571+0x8
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L571+0xc
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r0, [r7]
	bl	Free
	str	r5, [r7]
	bl	FreeAllWindowBuffers
	ldr	r0, .L571+0x10
	bl	SetMainCallback2
	add	r0, r6, #0
	bl	DestroyTask
.L551:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L572:
	.align	2, 0
.L571:
	.word	sSwapMenuTilesetBuffer
	.word	sSwapMonCardBgTilesetBuffer
	.word	sSwapMenuTilemapBuffer
	.word	sSwapMonCardBgTilemapBuffer
	.word	CB2_ReturnToFieldContinueScript
.Lfe54:
	.size	 Task_CloseSwapScreen,.Lfe54-Task_CloseSwapScreen
	.align	2, 0
	.type	 Task_HandleSwapScreenYesNo,function
	.thumb_func
Task_HandleSwapScreenYesNo:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r7, .L591
	ldr	r0, [r7]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L574	@cond_branch
	ldr	r1, .L591+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x4
	beq	.L576	@cond_branch
	cmp	r0, #0x5
	beq	.L577	@cond_branch
	b	.L574
.L592:
	.align	2, 0
.L591:
	.word	sFactorySwapScreen
	.word	gTasks
.L576:
	bl	Swap_ShowYesNoOptions
	mov	r0, #0x5
	strh	r0, [r4, #0x8]
	b	.L574
.L577:
	ldr	r2, .L593
	ldrh	r1, [r2, #0x2e]
	mov	r6, #0x1
	add	r5, r6, #0
	and	r5, r5, r1
	cmp	r5, #0
	beq	.L578	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, [r7]
	ldrb	r0, [r0, #0x16]
	cmp	r0, #0
	bne	.L579	@cond_branch
	strh	r6, [r4, #0xa]
	b	.L589
.L594:
	.align	2, 0
.L593:
	.word	gMain
.L579:
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
	b	.L590
.L578:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L582	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	strh	r5, [r4, #0xa]
.L590:
	mov	r0, #0x4
	bl	sub_819EA64
.L589:
	ldrh	r0, [r4, #0x14]
	ldrh	r1, [r4, #0x16]
	lsl	r0, r0, #0x10
	orr	r0, r0, r1
	str	r0, [r4]
	b	.L574
.L582:
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L584	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	bl	Swap_UpdateYesNoCursorPosition
	b	.L574
.L584:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L574	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	Swap_UpdateYesNoCursorPosition
.L574:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 Task_HandleSwapScreenYesNo,.Lfe55-Task_HandleSwapScreenYesNo
	.align	2, 0
	.type	 sub_819CBDC,function
	.thumb_func
sub_819CBDC:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L599
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	mov	r1, #0xa
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x1
	bne	.L596	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0x8]
	ldr	r0, .L599+0x4
	b	.L598
.L600:
	.align	2, 0
.L599:
	.word	gTasks
	.word	Task_CloseSwapScreen
.L596:
	mov	r0, #0x0
	strh	r0, [r2, #0x8]
	ldr	r1, .L601
	lsr	r0, r1, #0x10
	strh	r0, [r2, #0x14]
	strh	r1, [r2, #0x16]
	mov	r0, #0x1
	strh	r0, [r2, #0x12]
	ldr	r0, .L601+0x4
.L598:
	str	r0, [r2]
	pop	{r0}
	bx	r0
.L602:
	.align	2, 0
.L601:
	.word	Task_HandleSwapScreenChooseMons
	.word	sub_819D770
.Lfe56:
	.size	 sub_819CBDC,.Lfe56-sub_819CBDC
	.align	2, 0
	.type	 sub_819CC24,function
	.thumb_func
sub_819CC24:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L605
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	mov	r0, #0x8
	ldrsh	r5, [r4, r0]
	cmp	r5, #0
	bne	.L604	@cond_branch
	ldr	r0, .L605+0x4
	bl	Swap_PrintOnInfoWindow
	ldr	r0, .L605+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x20
	strb	r5, [r0]
	mov	r0, #0x4
	strh	r0, [r4, #0x8]
	ldr	r1, .L605+0xc
	lsr	r0, r1, #0x10
	strh	r0, [r4, #0x14]
	strh	r1, [r4, #0x16]
	ldr	r0, .L605+0x10
	str	r0, [r4]
.L604:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L606:
	.align	2, 0
.L605:
	.word	gTasks
	.word	gText_QuitSwapping
	.word	sFactorySwapScreen
	.word	sub_819CBDC
	.word	Task_HandleSwapScreenYesNo
.Lfe57:
	.size	 sub_819CC24,.Lfe57-sub_819CC24
	.align	2, 0
	.type	 sub_819CC74,function
	.thumb_func
sub_819CC74:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L611
	ldr	r1, [r0]
	ldr	r0, [r1, #0x2c]
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F3F8
	ldr	r1, .L611+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	mov	r1, #0xa
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x1
	bne	.L608	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0x8]
	ldr	r0, .L611+0x8
	b	.L610
.L612:
	.align	2, 0
.L611:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	Task_CloseSwapScreen
.L608:
	mov	r0, #0x0
	strh	r0, [r2, #0x8]
	ldr	r1, .L613
	lsr	r0, r1, #0x10
	strh	r0, [r2, #0x14]
	strh	r1, [r2, #0x16]
	mov	r0, #0x1
	strh	r0, [r2, #0x12]
	ldr	r0, .L613+0x4
.L610:
	str	r0, [r2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L614:
	.align	2, 0
.L613:
	.word	Task_HandleSwapScreenChooseMons
	.word	sub_819D770
.Lfe58:
	.size	 sub_819CC74,.Lfe58-sub_819CC74
	.align	2, 0
	.type	 sub_819CCD4,function
	.thumb_func
sub_819CCD4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L617
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r5, r1, r2
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L616	@cond_branch
	ldr	r4, .L617+0x4
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x2d
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F2B4
	ldr	r0, .L617+0x8
	bl	Swap_PrintOnInfoWindow
	ldr	r0, [r4]
	add	r0, r0, #0x20
	mov	r1, #0x1
	strb	r1, [r0]
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	ldr	r1, .L617+0xc
	lsr	r0, r1, #0x10
	strh	r0, [r5, #0x14]
	strh	r1, [r5, #0x16]
	ldr	r0, .L617+0x10
	str	r0, [r5]
.L616:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L618:
	.align	2, 0
.L617:
	.word	gTasks
	.word	sFactorySwapScreen
	.word	gText_AcceptThisPkmn
	.word	sub_819CC74
	.word	Task_HandleSwapScreenYesNo
.Lfe59:
	.size	 sub_819CCD4,.Lfe59-sub_819CCD4
	.align	2, 0
	.type	 Task_HandleSwapScreenMenu,function
	.thumb_func
Task_HandleSwapScreenMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L637
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3
	beq	.L625	@cond_branch
	cmp	r0, #0x3
	bgt	.L636	@cond_branch
	cmp	r0, #0x2
	beq	.L621	@cond_branch
	b	.L620
.L638:
	.align	2, 0
.L637:
	.word	gTasks
.L636:
	cmp	r0, #0x9
	beq	.L623	@cond_branch
	b	.L620
.L621:
	ldr	r0, .L639
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x15]
	cmp	r0, #0
	bne	.L622	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x2d
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F2B4
.L622:
	mov	r0, #0x9
	strh	r0, [r5, #0x8]
	b	.L620
.L640:
	.align	2, 0
.L639:
	.word	sFactorySwapScreen
.L623:
	ldr	r0, .L641
	ldr	r0, [r0]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L620	@cond_branch
	bl	Swap_ShowMenuOptions
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L620
.L642:
	.align	2, 0
.L641:
	.word	sFactorySwapScreen
.L625:
	ldr	r7, .L643
	ldr	r0, [r7]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L620	@cond_branch
	ldr	r2, .L643+0x4
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	mov	r8, r0
	mov	r4, r8
	and	r4, r4, r1
	cmp	r4, #0
	beq	.L627	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	Swap_RunMenuOptionFunc
	b	.L620
.L644:
	.align	2, 0
.L643:
	.word	sFactorySwapScreen
	.word	gMain
.L627:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L629	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, [r7]
	ldr	r0, [r1, #0x2c]
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F3F8
	mov	r0, #0x3
	bl	sub_819EA64
	strh	r4, [r5, #0x8]
	ldr	r1, .L645
	lsr	r0, r1, #0x10
	strh	r0, [r5, #0x14]
	strh	r1, [r5, #0x16]
	mov	r1, r8
	strh	r1, [r5, #0x12]
	ldr	r0, .L645+0x4
	str	r0, [r5]
	b	.L620
.L646:
	.align	2, 0
.L645:
	.word	Task_HandleSwapScreenChooseMons
	.word	sub_819D770
.L629:
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L631	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	bl	Swap_UpdateMenuCursorPosition
	b	.L620
.L631:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L620	@cond_branch
	mov	r0, #0x1
	bl	Swap_UpdateMenuCursorPosition
.L620:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe60:
	.size	 Task_HandleSwapScreenMenu,.Lfe60-Task_HandleSwapScreenMenu
	.align	2, 0
	.type	 Task_HandleSwapScreenChooseMons,function
	.thumb_func
Task_HandleSwapScreenChooseMons:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L666
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L649	@cond_branch
	cmp	r0, #0x1
	beq	.L651	@cond_branch
	b	.L648
.L667:
	.align	2, 0
.L666:
	.word	gTasks
.L649:
	ldr	r0, .L668
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L648	@cond_branch
	ldr	r0, .L668+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x22
	mov	r1, #0x1
	strb	r1, [r0]
	strh	r1, [r4, #0x8]
	b	.L648
.L669:
	.align	2, 0
.L668:
	.word	gPaletteFade
	.word	sFactorySwapScreen
.L651:
	ldr	r2, .L670
	ldrh	r1, [r2, #0x2e]
	add	r5, r1, #0
	and	r5, r5, r0
	cmp	r5, #0
	beq	.L652	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L670+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x22
	mov	r1, #0x0
	strb	r1, [r0]
	bl	Swap_PrintMonSpecies2
	bl	sub_819EAC0
	add	r0, r6, #0
	bl	Swap_RunActionFunc
	b	.L648
.L671:
	.align	2, 0
.L670:
	.word	gMain
	.word	sFactorySwapScreen
.L652:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L654	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L672
	ldr	r0, [r0]
	add	r0, r0, #0x22
	strb	r5, [r0]
	bl	Swap_PrintMonSpecies2
	bl	sub_819EAC0
	ldr	r1, .L672+0x4
	lsr	r0, r1, #0x10
	strh	r0, [r4, #0x14]
	strh	r1, [r4, #0x16]
	strh	r5, [r4, #0x8]
	strh	r5, [r4, #0x12]
	ldr	r0, .L672+0x8
	str	r0, [r4]
	b	.L648
.L673:
	.align	2, 0
.L672:
	.word	sFactorySwapScreen
	.word	sub_819CC24
	.word	sub_819D588
.L654:
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L656	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	bl	Swap_UpdateBallCursorPosition
	b	.L665
.L656:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L658	@cond_branch
	mov	r0, #0x1
	bl	Swap_UpdateBallCursorPosition
	b	.L665
.L658:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L660	@cond_branch
	mov	r0, #0x1
	bl	Swap_UpdateActionCursorPosition
.L665:
	bl	Swap_PrintMonCategory
	bl	Swap_PrintMonSpecies
	b	.L648
.L660:
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L648	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	bl	Swap_UpdateActionCursorPosition
	bl	Swap_PrintMonCategory
	bl	Swap_PrintMonSpecies
.L648:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe61:
	.size	 Task_HandleSwapScreenChooseMons,.Lfe61-Task_HandleSwapScreenChooseMons
	.align	2, 0
	.type	 Task_SwapFadeSpeciesName,function
	.thumb_func
Task_SwapFadeSpeciesName:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L695
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	cmp	r2, #0x1
	beq	.L677	@cond_branch
	cmp	r2, #0x1
	bgt	.L692	@cond_branch
	cmp	r2, #0
	beq	.L676	@cond_branch
	b	.L675
.L696:
	.align	2, 0
.L695:
	.word	gTasks
.L692:
	cmp	r2, #0x2
	beq	.L687	@cond_branch
	b	.L675
.L676:
	ldr	r1, .L697
	ldr	r0, [r1]
	add	r0, r0, #0x27
	strb	r2, [r0]
	ldr	r0, [r1]
	add	r0, r0, #0x28
	strb	r2, [r0]
	ldr	r0, [r1]
	add	r0, r0, #0x26
	mov	r1, #0x1
	strb	r1, [r0]
	strh	r1, [r4, #0x8]
	b	.L675
.L698:
	.align	2, 0
.L697:
	.word	sFactorySwapScreen
.L677:
	ldr	r1, .L699
	ldr	r2, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x22
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0
	beq	.L675	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x29
	ldrb	r3, [r0]
	cmp	r3, #0
	beq	.L679	@cond_branch
	mov	r0, #0x2
	strh	r0, [r4, #0x8]
	b	.L675
.L700:
	.align	2, 0
.L699:
	.word	sFactorySwapScreen
.L679:
	add	r1, r2, #0
	add	r1, r1, #0x27
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x27
	ldrb	r0, [r1]
	cmp	r0, #0x6
	bls	.L681	@cond_branch
	strb	r3, [r1]
	ldr	r1, [r6]
	add	r0, r1, #0
	add	r0, r0, #0x26
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L682	@cond_branch
	add	r1, r1, #0x28
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	b	.L693
.L682:
	add	r1, r1, #0x28
	ldrb	r0, [r1]
	add	r0, r0, #0x1
.L693:
	strb	r0, [r1]
.L681:
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	ldr	r1, [r6]
	add	r1, r1, #0x28
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x28
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bls	.L684	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x26
	mov	r0, #0x0
	b	.L694
.L684:
	cmp	r0, #0
	bne	.L675	@cond_branch
	ldr	r1, .L701
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x2
	strh	r1, [r0, #0x8]
	add	r1, r2, #0
	add	r1, r1, #0x26
	mov	r0, #0x1
	b	.L694
.L702:
	.align	2, 0
.L701:
	.word	gTasks
.L687:
	ldr	r0, .L703
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0x29
	ldrb	r0, [r1]
	cmp	r0, #0xe
	bls	.L688	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L675
.L704:
	.align	2, 0
.L703:
	.word	sFactorySwapScreen
.L688:
	add	r0, r0, #0x1
.L694:
	strb	r0, [r1]
.L675:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe62:
	.size	 Task_SwapFadeSpeciesName,.Lfe62-Task_SwapFadeSpeciesName
	.align	2, 0
	.type	 Task_SwapFadeSpeciesName2,function
	.thumb_func
Task_SwapFadeSpeciesName2:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L716
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	mov	r0, #0x8
	ldrsh	r1, [r4, r0]
	cmp	r1, #0x1
	beq	.L708	@cond_branch
	cmp	r1, #0x1
	bgt	.L714	@cond_branch
	cmp	r1, #0
	beq	.L707	@cond_branch
	b	.L706
.L717:
	.align	2, 0
.L716:
	.word	gTasks
.L714:
	cmp	r1, #0x2
	beq	.L709	@cond_branch
	b	.L706
.L707:
	ldr	r0, .L718
	ldr	r0, [r0]
	add	r0, r0, #0x27
	strb	r1, [r0]
	strh	r1, [r4, #0x10]
	b	.L715
.L719:
	.align	2, 0
.L718:
	.word	sFactorySwapScreen
.L708:
	ldr	r0, .L720
	mov	r1, #0xe0
	mov	r2, #0xa
	bl	LoadPalette
.L715:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L706
.L721:
	.align	2, 0
.L720:
	.word	gPlttBufferUnfaded+0x1e0
.L709:
	ldr	r2, .L722
	ldr	r0, [r2]
	add	r0, r0, #0x28
	ldrb	r0, [r0]
	cmp	r0, #0xf
	bls	.L710	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x10]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L710:
	ldr	r1, [r2]
	add	r1, r1, #0x27
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0x27
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bls	.L711	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L722+0x4
	ldr	r0, .L722+0x8
	mov	r3, #0xe4
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	add	r3, r3, #0x20
	add	r1, r1, r3
	strh	r0, [r1]
	ldr	r1, [r2]
	add	r1, r1, #0x28
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L711:
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	ldr	r1, [r2]
	add	r1, r1, #0x28
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	BlendPalettes
.L706:
	pop	{r4}
	pop	{r0}
	bx	r0
.L723:
	.align	2, 0
.L722:
	.word	sFactorySwapScreen
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
.Lfe63:
	.size	 Task_SwapFadeSpeciesName2,.Lfe63-Task_SwapFadeSpeciesName2
	.align	2, 0
	.type	 sub_819D12C,function
	.thumb_func
sub_819D12C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	ldr	r1, .L752
	lsl	r0, r0, #0x2
	ldr	r2, [sp]
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r2, #0x8
	ldrsh	r3, [r4, r2]
	cmp	r3, #0
	beq	.L726	@cond_branch
	cmp	r3, #0x1
	beq	.L727	@cond_branch
	b	.L725
.L753:
	.align	2, 0
.L752:
	.word	gTasks
.L726:
	strh	r3, [r4, #0xa]
	strh	r3, [r4, #0xc]
	strh	r3, [r4, #0xe]
	mov	r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L725
.L727:
	mov	r3, #0x0
	str	r3, [sp, #0x4]
	mov	r1, #0x2
	str	r0, [sp, #0x8]
	ldr	r0, .L754
	str	r0, [sp, #0xc]
.L731:
	lsl	r0, r1, #0x18
	asr	r4, r0, #0x18
	mov	r9, r0
	cmp	r4, #0x2
	beq	.L732	@cond_branch
	ldr	r2, .L754+0x4
	ldr	r3, .L754+0x8
	ldr	r0, [r3]
	add	r0, r0, #0x5
	mov	r8, r0
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r6, r0, r2
	ldrh	r1, [r6, #0x20]
	mov	ip, r1
	mov	r7, ip
	ldr	r1, [sp, #0x4]
	sub	r0, r1, r7
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	sl, r2
	cmp	r5, #0x10
	beq	.L734	@cond_branch
	add	r0, r4, #0x2
	lsl	r0, r0, #0x1
	ldr	r2, [sp, #0x8]
	add	r0, r0, r2
	ldr	r1, .L754
	add	r1, r1, #0x8
	add	r0, r0, r1
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp	r0, #0x1
	bne	.L733	@cond_branch
.L734:
	lsl	r0, r7, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r0, ip
	add	r0, r0, #0xa
	strh	r0, [r6, #0x20]
	b	.L737
.L755:
	.align	2, 0
.L754:
	.word	gTasks
	.word	gSprites
	.word	sFactorySwapScreen
.L733:
	cmp	r5, #0x10
	bls	.L737	@cond_branch
	add	r0, r4, #0x1
	add	r0, r0, r8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	ldrh	r0, [r0, #0x20]
	sub	r0, r0, #0x30
	strh	r0, [r6, #0x20]
	b	.L737
.L732:
	ldr	r3, .L756
	ldr	r4, .L756+0x4
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x7]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r2, [r0, #0x20]
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r2, r2, #0xa
	strh	r2, [r0, #0x20]
	mov	sl, r3
.L737:
	mov	r0, r9
	asr	r2, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x1
	ldr	r1, [sp, #0x8]
	add	r0, r0, r1
	ldr	r1, .L756+0x8
	add	r1, r1, #0x8
	add	r0, r0, r1
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp	r0, #0x1
	bne	.L738	@cond_branch
	ldr	r1, .L756+0x4
	ldr	r0, [r1]
	add	r0, r0, #0x5
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	mov	r3, sl
	add	r1, r0, r3
	mov	r0, #0x20
	ldrsh	r3, [r1, r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x4
	add	r0, r0, #0x48
	cmp	r3, r0
	ble	.L739	@cond_branch
	strh	r0, [r1, #0x20]
	mov	r7, #0x1
	b	.L743
.L757:
	.align	2, 0
.L756:
	.word	gSprites
	.word	sFactorySwapScreen
	.word	gTasks
.L739:
	mov	r7, #0x0
	cmp	r3, r0
	bne	.L743	@cond_branch
	mov	r7, #0x1
	b	.L743
.L738:
	mov	r7, #0x0
.L743:
	mov	r6, sl
	ldr	r5, .L758
	ldr	r2, [r5]
	mov	r1, r9
	asr	r4, r1, #0x18
	add	r0, r2, #0x5
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r6
	mov	r3, #0x20
	ldrsh	r0, [r1, r3]
	sub	r0, r0, #0x10
	cmp	r0, #0xf0
	ble	.L730	@cond_branch
	ldrh	r0, [r1, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	ldr	r0, .L758+0x4
	strh	r0, [r1, #0x20]
	ldrb	r0, [r2, #0x14]
	cmp	r0, #0x1
	bne	.L745	@cond_branch
	mov	r0, #0x65
	bl	IndexOfSpritePaletteTag
	ldr	r1, [r5]
	add	r1, r1, #0x5
	add	r1, r1, r4
	ldrb	r1, [r1]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	b	.L751
.L759:
	.align	2, 0
.L758:
	.word	sFactorySwapScreen
	.word	0xfff0
.L745:
	mov	r0, #0x64
	bl	IndexOfSpritePaletteTag
	ldr	r2, .L760
	ldr	r1, [r2]
	add	r1, r1, #0x5
	add	r1, r1, r4
	ldrb	r1, [r1]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, sl
.L751:
	lsl	r0, r0, #0x4
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xf
	and	r1, r1, r3
	orr	r1, r1, r0
	strb	r1, [r2, #0x5]
	mov	r3, r9
	asr	r0, r3, #0x17
	add	r0, r0, #0x2
	ldr	r1, [sp, #0x8]
	add	r0, r0, r1
	ldr	r2, [sp, #0xc]
	add	r2, r2, #0x8
	add	r0, r0, r2
	mov	r1, #0x1
	strh	r1, [r0]
.L730:
	mov	r0, #0xff
	lsl	r0, r0, #0x18
	add	r0, r0, r9
	lsr	r1, r0, #0x18
	cmp	r0, #0
	blt	.LCB7551
	b	.L731	@long jump
.LCB7551:
	cmp	r7, #0x1
	bne	.L725	@cond_branch
	ldr	r0, [sp]
	bl	DestroyTask
.L725:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L761:
	.align	2, 0
.L760:
	.word	sFactorySwapScreen
.Lfe64:
	.size	 sub_819D12C,.Lfe64-sub_819D12C
	.align	2, 0
	.type	 sub_819D324,function
	.thumb_func
sub_819D324:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, #0x0
	mov	r8, r0
	ldr	r1, .L817
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrb	r4, [r2, #0xe]
	mov	r0, #0xc
	ldrsh	r5, [r2, r0]
	mov	sl, r1
	cmp	r5, #0x1
	bne	.L763	@cond_branch
	lsl	r0, r4, #0x18
	neg	r0, r0
	lsr	r4, r0, #0x18
.L763:
	mov	r1, #0x8
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	beq	.L765	@cond_branch
	cmp	r0, #0x1
	bne	.LCB7608
	b	.L789	@long jump
.LCB7608:
	b	.L764
.L818:
	.align	2, 0
.L817:
	.word	gTasks
.L765:
	ldr	r3, .L819
	ldr	r2, .L819+0x4
	ldr	r0, [r2]
	ldrb	r1, [r0, #0x8]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x20]
	cmp	r5, #0
	bne	.L766	@cond_branch
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r4, #0x18
	asr	r1, r2, #0x18
	add	r0, r0, r1
	mov	r1, #0x1
	cmp	r0, #0xef
	ble	.L769	@cond_branch
	mov	r1, #0x0
	mov	r0, #0xf0
	b	.L815
.L820:
	.align	2, 0
.L819:
	.word	gSprites
	.word	sFactorySwapScreen
.L766:
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r4, #0x18
	asr	r1, r2, #0x18
	add	r0, r0, r1
	mov	r1, #0x1
	cmp	r0, #0xa0
	bgt	.L769	@cond_branch
	mov	r1, #0x0
	mov	r0, #0xa0
.L815:
	mov	r8, r0
.L769:
	cmp	r1, #0x1
	bne	.L772	@cond_branch
	mov	r3, #0x0
	ldr	r7, .L821
	ldr	r6, .L821+0x4
	asr	r5, r2, #0x18
.L776:
	mov	r4, #0x0
	add	r2, r3, #0x1
.L780:
	ldr	r1, [r6]
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	add	r0, r3, r0
	add	r1, r1, #0x8
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldrh	r1, [r0, #0x20]
	add	r1, r1, r5
	strh	r1, [r0, #0x20]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L780	@cond_branch
	lsl	r0, r2, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L776	@cond_branch
	b	.L764
.L822:
	.align	2, 0
.L821:
	.word	gSprites
	.word	sFactorySwapScreen
.L772:
	mov	r4, #0x0
	lsl	r1, r7, #0x2
	mov	ip, r1
	mov	r6, r8
	add	r6, r6, #0x10
	mov	r0, #0x30
	add	r0, r0, r8
	mov	r9, r0
	ldr	r5, .L823
.L787:
	ldr	r1, .L823+0x4
	ldr	r2, [r1]
	lsl	r3, r4, #0x1
	add	r3, r3, r4
	add	r0, r2, #0
	add	r0, r0, #0x8
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, r8
	strh	r1, [r0, #0x20]
	add	r0, r2, #0
	add	r0, r0, #0x9
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r6, [r0, #0x20]
	add	r2, r2, #0xa
	add	r2, r2, r3
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, r9
	strh	r1, [r0, #0x20]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L787	@cond_branch
	mov	r1, ip
	add	r0, r1, r7
	lsl	r0, r0, #0x3
	add	r0, r0, sl
	ldrb	r1, [r0, #0xa]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, sl
	mov	r1, #0x1
	strh	r1, [r0, #0xe]
	add	r0, r7, #0
	bl	DestroyTask
	b	.L764
.L824:
	.align	2, 0
.L823:
	.word	gSprites
	.word	sFactorySwapScreen
.L789:
	ldr	r2, .L825
	ldr	r0, .L825+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0xe]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r0, [r0, #0x20]
	cmp	r5, #0
	bne	.L790	@cond_branch
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r4, #0x18
	asr	r1, r2, #0x18
	add	r0, r0, r1
	mov	r1, #0x1
	cmp	r0, #0xef
	ble	.L793	@cond_branch
	mov	r1, #0x0
	mov	r0, #0xf0
	b	.L816
.L826:
	.align	2, 0
.L825:
	.word	gSprites
	.word	sFactorySwapScreen
.L790:
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r4, #0x18
	asr	r1, r2, #0x18
	add	r0, r0, r1
	mov	r1, #0x1
	cmp	r0, #0xc0
	bgt	.L793	@cond_branch
	mov	r1, #0x0
	mov	r0, #0xc0
.L816:
	mov	r8, r0
.L793:
	cmp	r1, #0x1
	bne	.L796	@cond_branch
	mov	r3, #0x0
	ldr	r7, .L827
	ldr	r6, .L827+0x4
	asr	r5, r2, #0x18
.L800:
	mov	r4, #0x0
	add	r2, r3, #0x1
.L804:
	ldr	r0, [r6]
	lsl	r1, r4, #0x1
	add	r1, r3, r1
	add	r0, r0, #0xe
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldrh	r1, [r0, #0x20]
	add	r1, r1, r5
	strh	r1, [r0, #0x20]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L804	@cond_branch
	lsl	r0, r2, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x1
	bls	.L800	@cond_branch
	b	.L764
.L828:
	.align	2, 0
.L827:
	.word	gSprites
	.word	sFactorySwapScreen
.L796:
	mov	r4, #0x0
	lsl	r1, r7, #0x2
	mov	ip, r1
	mov	r6, r8
	add	r6, r6, #0x10
	ldr	r5, .L829
	ldr	r0, .L829+0x4
	mov	r9, r0
.L811:
	mov	r1, r9
	ldr	r2, [r1]
	lsl	r3, r4, #0x1
	add	r0, r2, #0
	add	r0, r0, #0xe
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, r8
	strh	r1, [r0, #0x20]
	add	r2, r2, #0xf
	add	r2, r2, r3
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r6, [r0, #0x20]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L811	@cond_branch
	mov	r1, ip
	add	r0, r1, r7
	lsl	r0, r0, #0x3
	add	r0, r0, sl
	ldrb	r1, [r0, #0xa]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, sl
	mov	r1, #0x1
	strh	r1, [r0, #0x10]
	add	r0, r7, #0
	bl	DestroyTask
.L764:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L830:
	.align	2, 0
.L829:
	.word	gSprites
	.word	sFactorySwapScreen
.Lfe65:
	.size	 sub_819D324,.Lfe65-sub_819D324
	.align	2, 0
	.type	 sub_819D588,function
	.thumb_func
sub_819D588:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L848
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	mov	r8, r1
	cmp	r0, #0x5
	bls	.LCB8022
	b	.L832	@long jump
.LCB8022:
	lsl	r0, r0, #0x2
	ldr	r1, .L848+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L849:
	.align	2, 0
.L848:
	.word	gTasks
	.word	.L845
	.align	2, 0
	.align	2, 0
.L845:
	.word	.L833
	.word	.L834
	.word	.L835
	.word	.L836
	.word	.L840
	.word	.L843
.L833:
	ldr	r0, .L850
	mov	r1, #0xe0
	mov	r2, #0xa
	bl	LoadPalette
	bl	Swap_PrintActionStrings
	mov	r0, #0x5
	bl	PutWindowTilemap
	b	.L847
.L851:
	.align	2, 0
.L850:
	.word	gUnknown_08610918
.L834:
	mov	r0, #0x3
	bl	sub_819EA64
	ldr	r0, .L852
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L832
.L853:
	.align	2, 0
.L852:
	.word	gTasks
.L835:
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	ldr	r1, .L854
	add	r1, r1, #0x4a
	ldrh	r1, [r1]
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
.L847:
	ldr	r1, .L854+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	b	.L832
.L855:
	.align	2, 0
.L854:
	.word	gUnknown_0860F13C
	.word	gTasks
.L836:
	ldr	r0, .L856
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	beq	.LCB8115
	b	.L832	@long jump
.LCB8115:
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, .L856+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0x1
	bne	.L838	@cond_branch
	ldr	r0, .L856+0x8
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L856+0xc
	lsl	r2, r5, #0x2
	add	r2, r2, r5
	lsl	r2, r2, #0x3
	add	r2, r2, r1
	strh	r6, [r2, #0xe]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r5, [r0, #0xa]
	strh	r6, [r0, #0x8]
	strh	r6, [r0, #0xc]
	mov	r1, #0x6
	strh	r1, [r0, #0xe]
	mov	r0, #0x5
	strh	r0, [r2, #0xc]
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L832
.L857:
	.align	2, 0
.L856:
	.word	gPaletteFade
	.word	sFactorySwapScreen
	.word	sub_819D324
	.word	gTasks
.L838:
	ldr	r0, .L858
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r3, .L858+0x4
	lsl	r2, r5, #0x2
	add	r2, r2, r5
	lsl	r2, r2, #0x3
	add	r2, r2, r3
	mov	r1, #0x1
	strh	r1, [r2, #0xe]
	strh	r6, [r2, #0x10]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	strh	r5, [r0, #0xa]
	strh	r1, [r0, #0x8]
	strh	r6, [r0, #0xc]
	mov	r1, #0x6
	strh	r1, [r0, #0xe]
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x2
	strh	r0, [r2, #0x8]
	b	.L832
.L859:
	.align	2, 0
.L858:
	.word	sub_819D324
	.word	gTasks
.L840:
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	mov	r1, r8
	add	r6, r0, r1
	ldrh	r0, [r6, #0xc]
	mov	r2, #0xc
	ldrsh	r7, [r6, r2]
	cmp	r7, #0
	bne	.L841	@cond_branch
	ldr	r0, .L860
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	strh	r7, [r6, #0x10]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	strh	r5, [r0, #0xa]
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	strh	r7, [r0, #0xc]
	mov	r1, #0x6
	strh	r1, [r0, #0xe]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	b	.L832
.L861:
	.align	2, 0
.L860:
	.word	sub_819D324
.L841:
	sub	r0, r0, #0x1
	strh	r0, [r6, #0xc]
	b	.L832
.L843:
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	mov	r1, r8
	add	r2, r0, r1
	mov	r1, #0xe
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x1
	bne	.L832	@cond_branch
	mov	r1, #0x10
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x1
	bne	.L832	@cond_branch
	ldrh	r0, [r2, #0x12]
	strh	r0, [r2, #0x8]
	ldrh	r0, [r2, #0x14]
	ldrh	r1, [r2, #0x16]
	lsl	r0, r0, #0x10
	orr	r0, r0, r1
	str	r0, [r2]
.L832:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 sub_819D588,.Lfe66-sub_819D588
	.align	2, 0
	.type	 sub_819D770,function
	.thumb_func
sub_819D770:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L886
	ldr	r0, [r1]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	add	r3, r1, #0
	cmp	r0, #0x1
	bne	.LCB8305
	b	.L862	@long jump
.LCB8305:
	ldr	r0, .L886+0x4
	lsl	r2, r6, #0x2
	add	r1, r2, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r4, #0x8
	ldrsh	r1, [r1, r4]
	mov	r8, r0
	add	r5, r2, #0
	cmp	r1, #0x8
	bls	.LCB8316
	b	.L862	@long jump
.LCB8316:
	lsl	r0, r1, #0x2
	ldr	r1, .L886+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L887:
	.align	2, 0
.L886:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	.L883
	.align	2, 0
	.align	2, 0
.L883:
	.word	.L865
	.word	.L868
	.word	.L871
	.word	.L873
	.word	.L874
	.word	.L876
	.word	.L877
	.word	.L878
	.word	.L882
.L865:
	ldr	r0, [r3]
	ldrb	r7, [r0, #0x14]
	cmp	r7, #0x1
	bne	.L866	@cond_branch
	ldr	r0, .L888
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r3, .L888+0x4
	add	r2, r5, r6
	lsl	r2, r2, #0x3
	add	r2, r2, r3
	mov	r1, #0x0
	strh	r1, [r2, #0xe]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	strh	r6, [r0, #0xa]
	strh	r1, [r0, #0x8]
	strh	r7, [r0, #0xc]
	mov	r1, #0x6
	strh	r1, [r0, #0xe]
	mov	r0, #0xa
	strh	r0, [r2, #0xc]
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L862
.L889:
	.align	2, 0
.L888:
	.word	sub_819D324
	.word	gTasks
.L866:
	ldr	r0, .L890
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r3, .L890+0x4
	add	r2, r5, r6
	lsl	r2, r2, #0x3
	add	r2, r2, r3
	mov	r0, #0x0
	mov	r1, #0x1
	strh	r1, [r2, #0xe]
	strh	r0, [r2, #0x10]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	strh	r6, [r0, #0xa]
	strh	r1, [r0, #0x8]
	strh	r1, [r0, #0xc]
	mov	r1, #0x6
	strh	r1, [r0, #0xe]
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x2
	strh	r0, [r2, #0x8]
	b	.L862
.L891:
	.align	2, 0
.L890:
	.word	sub_819D324
	.word	gTasks
.L868:
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	mov	r1, r8
	add	r5, r0, r1
	ldrh	r0, [r5, #0xc]
	mov	r2, #0xc
	ldrsh	r7, [r5, r2]
	cmp	r7, #0
	bne	.L869	@cond_branch
	ldr	r0, .L892
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	strh	r7, [r5, #0x10]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	strh	r6, [r0, #0xa]
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	strh	r1, [r0, #0xc]
	mov	r1, #0x6
	strh	r1, [r0, #0xe]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L862
.L893:
	.align	2, 0
.L892:
	.word	sub_819D324
.L869:
	sub	r0, r0, #0x1
	strh	r0, [r5, #0xc]
	b	.L862
.L871:
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	mov	r1, r8
	add	r4, r0, r1
	mov	r2, #0xe
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1
	beq	.LCB8480
	b	.L862	@long jump
.LCB8480:
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.LCB8485
	b	.L862	@long jump
.LCB8485:
	ldr	r1, .L894
	ldr	r0, .L894+0x4
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r2, #0xe2
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	strh	r0, [r1]
	bl	Swap_PrintActionStrings
	mov	r0, #0x5
	bl	PutWindowTilemap
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L862
.L895:
	.align	2, 0
.L894:
	.word	gPlttBufferFaded
	.word	gUnknown_0860F13C
.L873:
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	ldr	r1, .L896
	add	r1, r1, #0x4a
	ldrh	r1, [r1]
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L885
.L897:
	.align	2, 0
.L896:
	.word	gUnknown_0860F13C
.L874:
	ldr	r0, .L898
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L862	@cond_branch
	mov	r0, #0x0
	bl	Swap_PrintOneActionString
	b	.L885
.L899:
	.align	2, 0
.L898:
	.word	gPaletteFade
.L876:
	mov	r0, #0x1
	bl	Swap_PrintOneActionString
	mov	r0, #0x3
	bl	PutWindowTilemap
	b	.L885
.L877:
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L885
.L878:
	ldr	r0, .L900
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0
	bne	.L879	@cond_branch
	ldr	r0, .L900+0x4
	bl	Swap_PrintOnInfoWindow
	b	.L880
.L901:
	.align	2, 0
.L900:
	.word	sFactorySwapScreen
	.word	gText_SelectPkmnToSwap
.L879:
	ldr	r0, .L902
	bl	Swap_PrintOnInfoWindow
.L880:
	ldr	r0, .L902+0x4
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0x2
	bhi	.L881	@cond_branch
	ldr	r2, .L902+0x8
	ldrb	r1, [r1, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L881:
	bl	Swap_PrintMonCategory
.L885:
	ldr	r0, .L902+0xc
	add	r1, r5, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L862
.L903:
	.align	2, 0
.L902:
	.word	gText_SelectPkmnToAccept
	.word	sFactorySwapScreen
	.word	gSprites
	.word	gTasks
.L882:
	bl	Swap_PrintMonSpecies3
	bl	sub_819EADC
	ldr	r0, .L904
	ldr	r0, [r0]
	add	r0, r0, #0x22
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r1, .L904+0x4
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x12]
	strh	r1, [r0, #0x8]
	ldrh	r1, [r0, #0x14]
	ldrh	r2, [r0, #0x16]
	lsl	r1, r1, #0x10
	orr	r1, r1, r2
	str	r1, [r0]
.L862:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L905:
	.align	2, 0
.L904:
	.word	sFactorySwapScreen
	.word	gTasks
.Lfe67:
	.size	 sub_819D770,.Lfe67-sub_819D770
	.align	2, 0
	.type	 sub_819D9EC,function
	.thumb_func
sub_819D9EC:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L926
	ldr	r0, [r0]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.LCB8689
	b	.L906	@long jump
.LCB8689:
	ldr	r0, .L926+0x4
	lsl	r2, r6, #0x2
	add	r1, r2, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r3, #0x8
	ldrsh	r1, [r1, r3]
	add	r3, r0, #0
	add	r7, r2, #0
	cmp	r1, #0x4
	bls	.LCB8700
	b	.L906	@long jump
.LCB8700:
	lsl	r0, r1, #0x2
	ldr	r1, .L926+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L927:
	.align	2, 0
.L926:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	.L922
	.align	2, 0
	.align	2, 0
.L922:
	.word	.L909
	.word	.L910
	.word	.L911
	.word	.L912
	.word	.L921
.L909:
	bl	Swap_PrintMonSpecies3
	ldr	r0, .L928
	add	r1, r7, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	b	.L924
.L929:
	.align	2, 0
.L928:
	.word	gTasks
.L910:
	bl	sub_819EADC
	ldr	r2, .L930
	ldr	r0, .L930+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L930+0x8
	add	r1, r7, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	b	.L924
.L931:
	.align	2, 0
.L930:
	.word	gSprites
	.word	sFactorySwapScreen
	.word	gTasks
.L911:
	ldr	r0, .L932
	mov	r1, #0x0
	bl	CreateTask
	ldr	r2, .L932+0x4
	ldr	r0, .L932+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r1, .L932+0xc
	str	r1, [r0]
	b	.L925
.L933:
	.align	2, 0
.L932:
	.word	sub_819D12C
	.word	gTasks
	.word	sFactorySwapScreen
	.word	Task_SwapFadeSpeciesName2
.L912:
	ldr	r0, .L934
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8801
	b	.L906	@long jump
.LCB8801:
	ldr	r2, .L934+0x4
	ldr	r4, .L934+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r1, #0x10
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x1
	bne	.L906	@cond_branch
	bl	sub_819EAC0
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0
	bne	.L914	@cond_branch
	mov	r0, #0x1
	bl	Swap_InitActions
	b	.L915
.L935:
	.align	2, 0
.L934:
	.word	sub_819D12C
	.word	gTasks
	.word	sFactorySwapScreen
.L914:
	mov	r0, #0x0
	bl	Swap_InitActions
	mov	r2, #0x0
	ldr	r5, .L936
	mov	r3, #0x4
.L919:
	ldr	r0, [r4]
	add	r0, r0, #0xb
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L919	@cond_branch
.L915:
	ldr	r5, .L936
	ldr	r4, .L936+0x4
	ldr	r3, [r4]
	ldrb	r0, [r3, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r0, r3, #0x5
	ldrb	r2, [r3, #0x3]
	add	r0, r0, r2
	ldrb	r2, [r0]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r0, [r0, #0x20]
	mov	r5, #0x0
	strh	r0, [r1, #0x20]
	ldr	r2, .L936+0x8
	add	r0, r3, #0
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r1, .L936+0xc
	str	r1, [r0]
	add	r3, r3, #0x27
	strb	r5, [r3]
	ldr	r0, [r4]
	add	r0, r0, #0x28
	mov	r1, #0x6
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x26
	strb	r5, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
.L925:
	add	r1, r7, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r2
.L924:
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L906
.L937:
	.align	2, 0
.L936:
	.word	gSprites
	.word	sFactorySwapScreen
	.word	gTasks
	.word	Task_SwapFadeSpeciesName
.L921:
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	ldr	r2, .L938
	lsr	r1, r2, #0x10
	strh	r1, [r0, #0x14]
	strh	r2, [r0, #0x16]
	mov	r1, #0x1
	strh	r1, [r0, #0x12]
	ldr	r1, .L938+0x4
	str	r1, [r0]
.L906:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L939:
	.align	2, 0
.L938:
	.word	Task_HandleSwapScreenChooseMons
	.word	sub_819D770
.Lfe68:
	.size	 sub_819D9EC,.Lfe68-sub_819D9EC
	.align	2, 0
	.type	 Swap_InitStruct,function
	.thumb_func
Swap_InitStruct:
	push	{r4, r5, lr}
	ldr	r5, .L942
	ldr	r4, [r5]
	cmp	r4, #0
	bne	.L941	@cond_branch
	mov	r0, #0x34
	bl	AllocZeroed
	str	r0, [r5]
	strb	r4, [r0, #0x3]
	ldr	r0, [r5]
	add	r0, r0, #0x30
	strb	r4, [r0]
	ldr	r0, [r5]
	strb	r4, [r0, #0x15]
.L941:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L943:
	.align	2, 0
.L942:
	.word	sFactorySwapScreen
.Lfe69:
	.size	 Swap_InitStruct,.Lfe69-Swap_InitStruct
	.align	2, 0
	.globl	DoBattleFactorySwapScreen
	.type	 DoBattleFactorySwapScreen,function
	.thumb_func
DoBattleFactorySwapScreen:
	push	{lr}
	ldr	r0, .L945
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L945+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L946:
	.align	2, 0
.L945:
	.word	sFactorySwapScreen
	.word	CB2_InitSwapScreen
.Lfe70:
	.size	 DoBattleFactorySwapScreen,.Lfe70-DoBattleFactorySwapScreen
	.align	2, 0
	.type	 CB2_InitSwapScreen,function
	.thumb_func
CB2_InitSwapScreen:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r1, .L977
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0xf
	bls	.LCB9034
	b	.L948	@long jump
.LCB9034:
	lsl	r0, r0, #0x2
	ldr	r1, .L977+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L978:
	.align	2, 0
.L977:
	.word	gMain
	.word	.L973
	.align	2, 0
	.align	2, 0
.L973:
	.word	.L949
	.word	.L950
	.word	.L951
	.word	.L952
	.word	.L953
	.word	.L954
	.word	.L956
	.word	.L958
	.word	.L959
	.word	.L960
	.word	.L962
	.word	.L963
	.word	.L964
	.word	.L966
	.word	.L967
	.word	.L970
.L949:
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L979
	add	r0, sp, #0x8
	bl	CpuSet
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L979+0x4
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L979+0x8
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	ldr	r1, .L979+0xc
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L975
.L980:
	.align	2, 0
.L979:
	.word	0x5006000
	.word	sSwap_BgTemplates
	.word	sSwap_WindowTemplates
	.word	gMain
.L950:
	ldr	r5, .L981
	mov	r4, #0x88
	lsl	r4, r4, #0x3
	add	r0, r4, #0
	bl	Alloc
	str	r0, [r5]
	ldr	r5, .L981+0x4
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r5]
	ldr	r5, .L981+0x8
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	Alloc
	str	r0, [r5]
	ldr	r5, .L981+0xc
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x46
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	b	.L969
.L982:
	.align	2, 0
.L981:
	.word	sSwapMenuTilesetBuffer
	.word	sSwapMonCardBgTilesetBuffer
	.word	sSwapMenuTilemapBuffer
	.word	sSwapMonCardBgTilemapBuffer
.L951:
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	FreeAllSpritePalettes
	bl	ResetAllPicSprites
	ldr	r0, .L983
	ldr	r5, .L983+0x4
	ldr	r1, [r5]
	mov	r2, #0x88
	lsl	r2, r2, #0x2
	bl	CpuSet
	ldr	r0, .L983+0x8
	ldr	r4, .L983+0xc
	ldr	r1, [r4]
	mov	r2, #0x30
	bl	CpuSet
	ldr	r1, [r5]
	mov	r2, #0x88
	lsl	r2, r2, #0x3
	mov	r0, #0x1
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r4]
	mov	r0, #0x3
	mov	r2, #0x60
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r0, .L983+0x10
	ldr	r4, .L983+0x14
	ldr	r1, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	bl	CpuSet
	ldr	r1, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r0, #0x1
	mov	r3, #0x0
	bl	LoadBgTilemap
	ldr	r0, .L983+0x18
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadPalette
	ldr	r4, .L983+0x1c
	add	r0, r4, #0
	mov	r1, #0xf0
	mov	r2, #0xa
	bl	LoadPalette
	add	r0, r4, #0
	mov	r1, #0xe0
	mov	r2, #0xa
	bl	LoadPalette
	ldr	r0, .L983+0x20
	mov	r1, #0x20
	mov	r2, #0x4
	bl	LoadPalette
	ldr	r1, .L983+0x24
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L975
.L984:
	.align	2, 0
.L983:
	.word	gFrontierFactorySelectMenu_Gfx
	.word	sSwapMenuTilesetBuffer
	.word	gUnknown_0861033C
	.word	sSwapMonCardBgTilesetBuffer
	.word	gFrontierFactorySelectMenu_Tilemap
	.word	sSwapMenuTilemapBuffer
	.word	gFrontierFactorySelectMenu_Pal
	.word	gUnknown_08610918
	.word	gUnknown_0861039C
	.word	gMain
.L952:
	ldr	r0, .L985
	ldr	r1, [r0]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	ldr	r1, .L985+0x4
	mov	r0, #0x8
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r2, #0xb
	mov	r3, #0x4
	bl	CopyToBgTilemapBufferRect
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	b	.L969
.L986:
	.align	2, 0
.L985:
	.word	sSwapMonCardBgTilemapBuffer
	.word	gUnknown_0861023C
.L953:
	ldr	r0, .L987
	bl	LoadSpritePalettes
	ldr	r0, .L987+0x4
	bl	LoadSpriteSheets
	ldr	r0, .L987+0x8
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L987+0xc
	bl	SetVBlankCallback
	ldr	r1, .L987+0x10
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L975
.L988:
	.align	2, 0
.L987:
	.word	gUnknown_086106B0
	.word	gUnknown_08610650
	.word	gUnknown_086106A0
	.word	Swap_VblankCb
	.word	gMain
.L954:
	ldr	r0, .L989
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x15]
	cmp	r0, #0x1
	bne	.L955	@cond_branch
	ldr	r0, .L989+0x4
	ldrb	r0, [r0]
	strb	r0, [r1, #0x3]
.L955:
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r2, r0
	b	.L975
.L990:
	.align	2, 0
.L989:
	.word	sFactorySwapScreen
	.word	gLastViewedMonIndex
.L956:
	bl	Swap_InitStruct
	bl	Swap_InitAllSprites
	ldr	r0, .L991
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x15]
	cmp	r0, #0x1
	bne	.L957	@cond_branch
	bl	Swap_ShowSummaryMonSprite
.L957:
	mov	r0, #0x0
	bl	Swap_InitActions
	b	.L969
.L992:
	.align	2, 0
.L991:
	.word	sFactorySwapScreen
.L958:
	ldr	r0, .L993
	bl	Swap_PrintOnInfoWindow
	mov	r0, #0x2
	bl	PutWindowTilemap
	ldr	r1, .L993+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L975
.L994:
	.align	2, 0
.L993:
	.word	gText_SelectPkmnToSwap
	.word	gMain
.L959:
	bl	Swap_PrintMonCategory
	mov	r0, #0x8
	bl	PutWindowTilemap
	b	.L969
.L960:
	ldr	r0, .L995
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x15]
	cmp	r0, #0
	bne	.L961	@cond_branch
	bl	Swap_PrintMonSpecies
.L961:
	mov	r0, #0x1
	bl	PutWindowTilemap
	ldr	r1, .L995+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L975
.L996:
	.align	2, 0
.L995:
	.word	sFactorySwapScreen
	.word	gMain
.L962:
	bl	Swap_PrintPkmnSwap
	mov	r0, #0x0
	bl	PutWindowTilemap
	b	.L969
.L963:
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r2, r0
	b	.L975
.L964:
	ldr	r0, .L997
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x15]
	cmp	r0, #0
	beq	.L969	@cond_branch
	bl	Swap_PrintMonSpecies2
	b	.L976
.L998:
	.align	2, 0
.L997:
	.word	sFactorySwapScreen
.L966:
	bl	Swap_PrintActionStrings2
	mov	r0, #0x3
	bl	PutWindowTilemap
	ldr	r1, .L999
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L975
.L1000:
	.align	2, 0
.L999:
	.word	gMain
.L967:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	ldr	r0, .L1001
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x15]
	cmp	r0, #0x1
	bne	.L968	@cond_branch
	mov	r0, #0x3
	bl	ShowBg
	ldr	r1, .L1001+0x4
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L1001+0x8
	mov	r0, #0x52
	bl	SetGpuReg
	b	.L969
.L1002:
	.align	2, 0
.L1001:
	.word	sFactorySwapScreen
	.word	0x1248
	.word	0x40b
.L968:
	mov	r0, #0x3
	bl	HideBg
.L976:
.L969:
	ldr	r1, .L1003
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
.L975:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L948
.L1004:
	.align	2, 0
.L1003:
	.word	gMain
.L970:
	ldr	r0, .L1005
	mov	r1, #0x0
	bl	CreateTask
	ldr	r6, .L1005+0x4
	ldr	r1, [r6]
	add	r1, r1, #0x21
	strb	r0, [r1]
	ldr	r0, [r6]
	ldrb	r5, [r0, #0x15]
	cmp	r5, #0
	bne	.L971	@cond_branch
	ldr	r4, .L1005+0x8
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	strh	r5, [r0, #0x8]
	ldr	r0, .L1005+0xc
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	strh	r5, [r0, #0x8]
	b	.L972
.L1006:
	.align	2, 0
.L1005:
	.word	Task_SwapFadeSpeciesName
	.word	sFactorySwapScreen
	.word	gTasks
	.word	Task_HandleSwapScreenChooseMons
.L971:
	bl	sub_819EAF8
	ldr	r4, .L1007
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	mov	r3, #0x0
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	add	r2, r2, #0x22
	strb	r3, [r2]
	ldr	r0, .L1007+0x4
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	mov	r1, #0x2
	strh	r1, [r0, #0x8]
.L972:
	ldr	r0, .L1007+0x8
	bl	SetMainCallback2
.L948:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1008:
	.align	2, 0
.L1007:
	.word	gTasks
	.word	Task_HandleSwapScreenMenu
	.word	Swap_CB2
.Lfe71:
	.size	 CB2_InitSwapScreen,.Lfe71-CB2_InitSwapScreen
	.align	2, 0
	.type	 Swap_InitAllSprites,function
	.thumb_func
Swap_InitAllSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	mov	r1, sp
	ldr	r0, .L1023
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r5, r6}
	stmia	r1!, {r2, r5, r6}
	mov	r1, sp
	mov	r0, #0x65
	strh	r0, [r1, #0x2]
	mov	r6, #0x0
	ldr	r4, .L1023+0x4
	mov	r7, #0x0
	ldr	r5, .L1023+0x8
.L1013:
	lsl	r1, r6, #0x1
	add	r1, r1, r6
	lsl	r1, r1, #0x14
	mov	r3, #0x90
	lsl	r3, r3, #0xf
	add	r1, r1, r3
	asr	r1, r1, #0x10
	mov	r0, sp
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r4]
	add	r1, r1, #0x5
	add	r1, r1, r6
	strb	r0, [r1]
	ldr	r0, [r4]
	add	r0, r0, #0x5
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r7, [r0, #0x2e]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L1013	@cond_branch
	ldr	r7, .L1023+0x4
	ldr	r1, [r7]
	add	r0, r1, #0x5
	ldrb	r1, [r1, #0x3]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L1023+0x8
	add	r0, r0, r4
	mov	r5, #0x20
	ldrsh	r1, [r0, r5]
	ldr	r0, .L1023+0xc
	mov	r2, #0x58
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	mov	r4, #0x0
	strb	r0, [r1, #0x4]
	ldr	r0, .L1023+0x10
	mov	r1, #0xb0
	mov	r2, #0x70
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0x1]
	ldr	r0, .L1023+0x14
	mov	r1, #0xb0
	mov	r2, #0x90
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0x2]
	ldr	r0, [r7]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L1023+0x8
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r7]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r7]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x28
	strb	r4, [r0]
	ldr	r0, [r7]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x29
	strb	r4, [r0]
	ldr	r0, [r7]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x28
	strb	r4, [r0]
	ldr	r0, [r7]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x29
	strb	r4, [r0]
	ldr	r0, [r7]
	ldrb	r0, [r0, #0x15]
	mov	r1, #0xc0
	str	r1, [sp, #0x18]
	cmp	r0, #0x1
	bne	.L1015	@cond_branch
	mov	r2, #0xf0
	str	r2, [sp, #0x18]
.L1015:
	mov	r1, sp
	ldr	r0, .L1023+0xc
	ldmia	r0!, {r3, r4, r5}
	stmia	r1!, {r3, r4, r5}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	mov	r0, sp
	mov	r4, #0x68
	mov	sl, r4
	mov	r5, sl
	strh	r5, [r0]
	mov	r1, #0xf0
	mov	r2, #0x78
	mov	r3, #0xa
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0x8]
	mov	r1, sp
	ldr	r0, .L1023+0x10
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r4, r5, r6}
	stmia	r1!, {r4, r5, r6}
	mov	r0, sp
	mov	r1, #0x69
	mov	r9, r1
	mov	r2, r9
	strh	r2, [r0]
	mov	r4, #0x80
	lsl	r4, r4, #0x1
	add	r1, r4, #0
	mov	r2, #0x78
	mov	r3, #0xa
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0x9]
	mov	r5, #0x90
	lsl	r5, r5, #0x1
	mov	r0, sp
	add	r1, r5, #0
	mov	r2, #0x78
	mov	r3, #0xa
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0xa]
	mov	r1, sp
	ldr	r0, .L1023+0xc
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	mov	r0, sp
	mov	r3, #0x6a
	mov	r8, r3
	mov	r6, r8
	strh	r6, [r0]
	mov	r1, #0xf0
	mov	r2, #0x78
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0xb]
	mov	r1, sp
	ldr	r0, .L1023+0x10
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	mov	r1, sp
	mov	r0, #0x6b
	strh	r0, [r1]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x78
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0xc]
	mov	r0, sp
	mov	r6, #0x6c
	strh	r6, [r0]
	add	r1, r5, #0
	mov	r2, #0x78
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0xd]
	mov	r1, sp
	ldr	r0, .L1023+0xc
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	mov	r0, sp
	mov	r4, sl
	strh	r4, [r0]
	ldr	r1, [sp, #0x18]
	mov	r2, #0x90
	mov	r3, #0xa
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0xe]
	mov	r1, sp
	ldr	r0, .L1023+0x10
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r4, r5}
	stmia	r1!, {r2, r4, r5}
	mov	r0, sp
	mov	r3, r9
	strh	r3, [r0]
	ldr	r4, [sp, #0x18]
	add	r4, r4, #0x10
	add	r1, r4, #0
	mov	r2, #0x90
	mov	r3, #0xa
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0xf]
	mov	r1, sp
	ldr	r0, .L1023+0xc
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	mov	r0, sp
	mov	r5, r8
	strh	r5, [r0]
	ldr	r1, [sp, #0x18]
	mov	r2, #0x90
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0x10]
	mov	r1, sp
	ldr	r0, .L1023+0x10
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	mov	r0, sp
	strh	r6, [r0]
	add	r1, r4, #0
	mov	r2, #0x90
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r7]
	strb	r0, [r1, #0x11]
	mov	r6, #0x0
	ldr	r5, .L1023+0x8
	add	r4, r7, #0
	mov	r7, #0x0
	mov	r0, #0x4
	mov	sl, r0
.L1020:
	ldr	r0, [r4]
	lsl	r3, r6, #0x1
	add	r2, r3, r6
	add	r0, r0, #0x8
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x28
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x8
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x29
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x9
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x28
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x9
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x29
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xa
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x28
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xa
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x29
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xe
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x28
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xe
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x29
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xf
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x28
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xf
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x29
	strb	r7, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x8
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	mov	r8, r0
	ldrb	r1, [r0]
	mov	r0, sl
	orr	r1, r1, r0
	mov	r0, r8
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x9
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	mov	r8, r0
	ldrb	r1, [r0]
	mov	r0, sl
	orr	r1, r1, r0
	mov	r0, r8
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xa
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, sl
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xe
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0xf
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r3, .L1023+0x4
	mov	r8, r3
	ldr	r0, .L1023+0x8
	mov	r9, r0
	cmp	r6, #0x1
	bhi	.LCB10165
	b	.L1020	@long jump
.LCB10165:
	ldr	r0, [r3]
	ldrb	r0, [r0, #0xe]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r9
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r3, #0x5
	neg	r3, r3
	add	r0, r3, #0
	b	.L1022
.L1024:
	.align	2, 0
.L1023:
	.word	gUnknown_08610834
	.word	sFactorySwapScreen
	.word	gSprites
	.word	gUnknown_0861084C
	.word	gUnknown_08610864
	.word	gUnknown_0861087C
.L1022:
	and	r0, r0, r2
	strb	r0, [r1]
	mov	r1, r8
	ldr	r0, [r1]
	ldrb	r1, [r0, #0xf]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	add	r1, r3, #0
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r2, r8
	ldr	r0, [r2]
	ldrb	r1, [r0, #0x8]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	add	r1, r3, #0
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r4, r8
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x9]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	add	r1, r3, #0
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xa]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r3, r3, r1
	strb	r3, [r0]
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 Swap_InitAllSprites,.Lfe72-Swap_InitAllSprites
	.align	2, 0
	.type	 Swap_DestroyAllSprites,function
	.thumb_func
Swap_DestroyAllSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0x0
.L1029:
	ldr	r6, .L1051
	ldr	r0, [r6]
	add	r0, r0, #0x5
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L1051+0x4
	add	r0, r0, r4
	bl	DestroySprite
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L1029	@cond_branch
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	mov	r5, #0x0
.L1034:
	mov	r4, #0x0
	lsl	r6, r5, #0x1
.L1038:
	ldr	r0, .L1051
	ldr	r0, [r0]
	add	r1, r6, r5
	add	r1, r4, r1
	add	r0, r0, #0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1051+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1038	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bls	.L1034	@cond_branch
	mov	r5, #0x0
.L1044:
	mov	r4, #0x0
	add	r7, r5, #0x1
	lsl	r6, r5, #0x1
.L1048:
	ldr	r0, .L1051
	ldr	r0, [r0]
	add	r1, r4, r6
	add	r0, r0, #0xe
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1051+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L1048	@cond_branch
	lsl	r0, r7, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bls	.L1044	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1052:
	.align	2, 0
.L1051:
	.word	sFactorySwapScreen
	.word	gSprites
.Lfe73:
	.size	 Swap_DestroyAllSprites,.Lfe73-Swap_DestroyAllSprites
	.align	2, 0
	.type	 Swap_HandleActionCursorChange,function
	.thumb_func
Swap_HandleActionCursorChange:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bhi	.L1054	@cond_branch
	ldr	r4, .L1056
	ldr	r5, .L1056+0x4
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	bl	sub_819E8EC
	ldr	r0, [r5]
	ldrb	r2, [r0, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r0, r0, #0x5
	add	r0, r0, r6
	ldrb	r2, [r0]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r1, #0x20]
	b	.L1055
.L1057:
	.align	2, 0
.L1056:
	.word	gSprites
	.word	sFactorySwapScreen
.L1054:
	ldr	r2, .L1058
	ldr	r3, .L1058+0x4
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r3]
	ldr	r1, [r0, #0x18]
	lsl	r0, r6, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_819E838
.L1055:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1059:
	.align	2, 0
.L1058:
	.word	gSprites
	.word	sFactorySwapScreen
.Lfe74:
	.size	 Swap_HandleActionCursorChange,.Lfe74-Swap_HandleActionCursorChange
	.align	2, 0
	.type	 Swap_UpdateBallCursorPosition,function
	.thumb_func
Swap_UpdateBallCursorPosition:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	lsl	r4, r4, #0x18
	cmp	r4, #0
	ble	.L1061	@cond_branch
	ldr	r1, .L1068
	ldr	r2, [r1]
	ldrb	r0, [r2, #0x3]
	add	r0, r0, #0x1
	ldrb	r3, [r2, #0x17]
	cmp	r0, r3
	bne	.L1067	@cond_branch
	mov	r0, #0x0
	b	.L1067
.L1069:
	.align	2, 0
.L1068:
	.word	sFactorySwapScreen
.L1061:
	ldr	r0, .L1070
	ldr	r2, [r0]
	ldrb	r3, [r2, #0x3]
	add	r1, r0, #0
	cmp	r3, #0
	beq	.L1065	@cond_branch
	sub	r0, r3, #0x1
	b	.L1067
.L1071:
	.align	2, 0
.L1070:
	.word	sFactorySwapScreen
.L1065:
	ldrb	r0, [r2, #0x17]
	sub	r0, r0, #0x1
.L1067:
	strb	r0, [r2, #0x3]
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x3]
	bl	Swap_HandleActionCursorChange
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 Swap_UpdateBallCursorPosition,.Lfe75-Swap_UpdateBallCursorPosition
	.align	2, 0
	.type	 Swap_UpdateActionCursorPosition,function
	.thumb_func
Swap_UpdateActionCursorPosition:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	lsl	r4, r4, #0x18
	cmp	r4, #0
	ble	.L1073	@cond_branch
	ldr	r0, .L1084
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x3]
	add	r4, r0, #0
	cmp	r1, #0x2
	bhi	.L1074	@cond_branch
	mov	r0, #0x3
	strb	r0, [r2, #0x3]
	b	.L1078
.L1085:
	.align	2, 0
.L1084:
	.word	sFactorySwapScreen
.L1074:
	ldrb	r0, [r2, #0x3]
	add	r0, r0, #0x1
	ldrb	r1, [r2, #0x17]
	cmp	r0, r1
	beq	.L1076	@cond_branch
	strb	r0, [r2, #0x3]
	b	.L1078
.L1076:
	mov	r0, #0x0
	strb	r0, [r2, #0x3]
	b	.L1078
.L1073:
	ldr	r0, .L1086
	ldr	r1, [r0]
	ldrb	r3, [r1, #0x3]
	add	r2, r3, #0
	add	r4, r0, #0
	cmp	r2, #0x2
	bls	.L1081	@cond_branch
	cmp	r2, #0
	beq	.L1081	@cond_branch
	sub	r0, r3, #0x1
	b	.L1083
.L1087:
	.align	2, 0
.L1086:
	.word	sFactorySwapScreen
.L1081:
	ldrb	r0, [r1, #0x17]
	sub	r0, r0, #0x1
.L1083:
	strb	r0, [r1, #0x3]
.L1078:
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x3]
	bl	Swap_HandleActionCursorChange
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 Swap_UpdateActionCursorPosition,.Lfe76-Swap_UpdateActionCursorPosition
	.align	2, 0
	.type	 Swap_UpdateYesNoCursorPosition,function
	.thumb_func
Swap_UpdateYesNoCursorPosition:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	ble	.L1089	@cond_branch
	ldr	r0, .L1096
	ldr	r1, [r0]
	ldrb	r3, [r1, #0x16]
	add	r2, r0, #0
	cmp	r3, #0x1
	beq	.L1090	@cond_branch
	add	r0, r3, #0x1
	b	.L1095
.L1097:
	.align	2, 0
.L1096:
	.word	sFactorySwapScreen
.L1090:
	mov	r0, #0x0
	b	.L1095
.L1089:
	ldr	r0, .L1098
	ldr	r1, [r0]
	ldrb	r3, [r1, #0x16]
	add	r2, r0, #0
	cmp	r3, #0
	beq	.L1093	@cond_branch
	sub	r0, r3, #0x1
	b	.L1095
.L1099:
	.align	2, 0
.L1098:
	.word	sFactorySwapScreen
.L1093:
	mov	r0, #0x1
.L1095:
	strb	r0, [r1, #0x16]
	ldr	r3, .L1100
	ldr	r2, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2, #0x16]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r0, [r2, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2, #0x16]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	pop	{r0}
	bx	r0
.L1101:
	.align	2, 0
.L1100:
	.word	gSprites
.Lfe77:
	.size	 Swap_UpdateYesNoCursorPosition,.Lfe77-Swap_UpdateYesNoCursorPosition
	.align	2, 0
	.type	 Swap_UpdateMenuCursorPosition,function
	.thumb_func
Swap_UpdateMenuCursorPosition:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	lsl	r4, r4, #0x18
	cmp	r4, #0
	ble	.L1103	@cond_branch
	ldr	r0, .L1110
	ldr	r1, [r0]
	ldrb	r3, [r1]
	add	r2, r0, #0
	cmp	r3, #0x2
	beq	.L1104	@cond_branch
	add	r0, r3, #0x1
	b	.L1109
.L1111:
	.align	2, 0
.L1110:
	.word	sFactorySwapScreen
.L1104:
	mov	r0, #0x0
	b	.L1109
.L1103:
	ldr	r0, .L1112
	ldr	r1, [r0]
	ldrb	r3, [r1]
	add	r2, r0, #0
	cmp	r3, #0
	beq	.L1107	@cond_branch
	sub	r0, r3, #0x1
	b	.L1109
.L1113:
	.align	2, 0
.L1112:
	.word	sFactorySwapScreen
.L1107:
	mov	r0, #0x2
.L1109:
	strb	r0, [r1]
	ldr	r3, .L1114
	ldr	r2, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r0, [r2, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1115:
	.align	2, 0
.L1114:
	.word	gSprites
.Lfe78:
	.size	 Swap_UpdateMenuCursorPosition,.Lfe78-Swap_UpdateMenuCursorPosition
	.align	2, 0
	.type	 sub_819E838,function
	.thumb_func
sub_819E838:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r4, #0x0
	mov	r0, #0x5
	neg	r0, r0
	mov	r9, r0
	mov	r2, #0x4
	mov	r8, r2
	ldr	r0, .L1128
	mov	ip, r0
	ldr	r7, .L1128+0x4
.L1120:
	cmp	r6, #0x2
	bne	.L1121	@cond_branch
	ldr	r5, .L1128
	ldr	r3, .L1128+0x4
	ldr	r0, [r3]
	add	r0, r0, #0xb
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1]
	cmp	r4, #0x1
	bhi	.L1119	@cond_branch
	ldr	r0, [r3]
	add	r0, r0, #0x10
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	b	.L1127
.L1129:
	.align	2, 0
.L1128:
	.word	gSprites
	.word	sFactorySwapScreen
.L1121:
	cmp	r6, #0x3
	bne	.L1119	@cond_branch
	cmp	r4, #0x1
	bhi	.L1125	@cond_branch
	ldr	r0, [r7]
	add	r0, r0, #0x10
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, ip
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1]
.L1125:
	ldr	r0, [r7]
	add	r0, r0, #0xb
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, ip
.L1127:
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, r8
	orr	r1, r1, r2
	strb	r1, [r0]
.L1119:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1120	@cond_branch
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 sub_819E838,.Lfe79-sub_819E838
	.align	2, 0
	.type	 sub_819E8EC,function
	.thumb_func
sub_819E8EC:
	push	{r4, r5, r6, lr}
	mov	r2, #0x0
	ldr	r5, .L1137
	ldr	r4, .L1137+0x4
	add	r6, r5, #0
	mov	r3, #0x4
.L1134:
	ldr	r0, [r4]
	add	r0, r0, #0xb
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	cmp	r2, #0x1
	bhi	.L1133	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x10
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
.L1133:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L1134	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1138:
	.align	2, 0
.L1137:
	.word	gSprites
	.word	sFactorySwapScreen
.Lfe80:
	.size	 sub_819E8EC,.Lfe80-sub_819E8EC
	.align	2, 0
	.type	 Swap_ShowMenuOptions,function
	.thumb_func
Swap_ShowMenuOptions:
	push	{r4, r5, lr}
	ldr	r0, .L1142
	ldr	r3, [r0]
	ldrb	r1, [r3, #0x15]
	add	r5, r0, #0
	cmp	r1, #0x1
	bne	.L1140	@cond_branch
	mov	r0, #0x0
	strb	r0, [r3, #0x15]
	b	.L1141
.L1143:
	.align	2, 0
.L1142:
	.word	sFactorySwapScreen
.L1140:
	mov	r0, #0x0
	strb	r0, [r3]
.L1141:
	ldr	r4, .L1144
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xb0
	strh	r1, [r0, #0x20]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xd0
	strh	r1, [r0, #0x20]
	ldrb	r0, [r2, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r0, [r2]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x70
	strh	r0, [r1, #0x22]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	strb	r0, [r1]
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r2, r2, r1
	strb	r2, [r0]
	bl	Swap_PrintMenuOptions
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1145:
	.align	2, 0
.L1144:
	.word	gSprites
.Lfe81:
	.size	 Swap_ShowMenuOptions,.Lfe81-Swap_ShowMenuOptions
	.align	2, 0
	.type	 Swap_ShowYesNoOptions,function
	.thumb_func
Swap_ShowYesNoOptions:
	push	{r4, r5, lr}
	ldr	r5, .L1147
	ldr	r1, [r5]
	mov	r0, #0x0
	strb	r0, [r1, #0x16]
	ldr	r4, .L1147+0x4
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xb0
	strh	r1, [r0, #0x20]
	ldrb	r1, [r2, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r3, #0x70
	strh	r3, [r0, #0x22]
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xd0
	strh	r1, [r0, #0x20]
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	strh	r3, [r0, #0x22]
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	strb	r0, [r1]
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r2, r2, r1
	strb	r2, [r0]
	bl	Swap_PrintYesNoOptions
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1148:
	.align	2, 0
.L1147:
	.word	sFactorySwapScreen
	.word	gSprites
.Lfe82:
	.size	 Swap_ShowYesNoOptions,.Lfe82-Swap_ShowYesNoOptions
	.align	2, 0
	.type	 sub_819EA64,function
	.thumb_func
sub_819EA64:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L1150
	ldr	r3, .L1150+0x4
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	ClearWindowTilemap
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1151:
	.align	2, 0
.L1150:
	.word	gSprites
	.word	sFactorySwapScreen
.Lfe83:
	.size	 sub_819EA64,.Lfe83-sub_819EA64
	.align	2, 0
	.type	 sub_819EAC0,function
	.thumb_func
sub_819EAC0:
	push	{lr}
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.Lfe84:
	.size	 sub_819EAC0,.Lfe84-sub_819EAC0
	.align	2, 0
	.type	 sub_819EADC,function
	.thumb_func
sub_819EADC:
	push	{lr}
	mov	r0, #0x7
	bl	PutWindowTilemap
	mov	r0, #0x7
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x7
	mov	r1, #0x2
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.Lfe85:
	.size	 sub_819EADC,.Lfe85-sub_819EADC
	.align	2, 0
	.type	 sub_819EAF8,function
	.thumb_func
sub_819EAF8:
	push	{lr}
	bl	sub_819EAC0
	mov	r0, #0x5
	bl	PutWindowTilemap
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.Lfe86:
	.size	 sub_819EAF8,.Lfe86-sub_819EAF8
	.align	2, 0
	.type	 Swap_PrintPkmnSwap,function
	.thumb_func
Swap_PrintPkmnSwap:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L1156
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x2
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L1157:
	.align	2, 0
.L1156:
	.word	gText_PkmnSwap
.Lfe87:
	.size	 Swap_PrintPkmnSwap,.Lfe87-Swap_PrintPkmnSwap
	.align	2, 0
	.type	 Swap_PrintMonSpecies,function
	.thumb_func
Swap_PrintMonSpecies:
	push	{r4, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, .L1164
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0x2
	bls	.L1159	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1160
.L1165:
	.align	2, 0
.L1164:
	.word	sFactorySwapScreen
.L1159:
	ldrb	r2, [r1, #0x3]
	ldrb	r0, [r1, #0x14]
	cmp	r0, #0
	bne	.L1161	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L1166
	b	.L1163
.L1167:
	.align	2, 0
.L1166:
	.word	gPlayerParty
.L1161:
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L1168
.L1163:
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r4, .L1168+0x4
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1168+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x56
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L1168+0xc
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
.L1160:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L1169:
	.align	2, 0
.L1168:
	.word	gEnemyParty
	.word	gStringVar4
	.word	gSpeciesNames
	.word	sSwapSpeciesNameTextColors
.Lfe88:
	.size	 Swap_PrintMonSpecies,.Lfe88-Swap_PrintMonSpecies
	.align	2, 0
	.type	 Swap_PrintOnInfoWindow,function
	.thumb_func
Swap_PrintOnInfoWindow:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x2
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe89:
	.size	 Swap_PrintOnInfoWindow,.Lfe89-Swap_PrintOnInfoWindow
	.align	2, 0
	.type	 Swap_PrintMenuOptions,function
	.thumb_func
Swap_PrintMenuOptions:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x3
	bl	PutWindowTilemap
	mov	r0, #0x3
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r5, .L1172
	str	r5, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r0, .L1172+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0xf
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L1172+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0xf
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L1172+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0xf
	mov	r3, #0x21
	bl	AddTextPrinterParameterized3
	mov	r0, #0x3
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1173:
	.align	2, 0
.L1172:
	.word	sSwapMenuOptionsTextColors
	.word	gText_Summary2
	.word	gText_Swap
	.word	gText_Rechoose
.Lfe90:
	.size	 Swap_PrintMenuOptions,.Lfe90-Swap_PrintMenuOptions
	.align	2, 0
	.type	 Swap_PrintYesNoOptions,function
	.thumb_func
Swap_PrintYesNoOptions:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x4
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r5, .L1175
	str	r5, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r0, .L1175+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L1175+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x1
	mov	r2, #0x7
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	mov	r0, #0x4
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1176:
	.align	2, 0
.L1175:
	.word	sSwapMenuOptionsTextColors
	.word	gText_Yes3
	.word	gText_No3
.Lfe91:
	.size	 Swap_PrintYesNoOptions,.Lfe91-Swap_PrintYesNoOptions
	.align	2, 0
	.type	 Swap_PrintActionString,function
	.thumb_func
Swap_PrintActionString:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	add	r5, r1, #0
	add	r4, r2, #0
	mov	r0, #0x0
	add	r1, r6, #0
	mov	r2, #0x46
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L1178
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r6, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x0
	add	r3, r5, #0
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1179:
	.align	2, 0
.L1178:
	.word	sSwapMenuOptionsTextColors
.Lfe92:
	.size	 Swap_PrintActionString,.Lfe92-Swap_PrintActionString
	.align	2, 0
	.type	 Swap_PrintActionStrings,function
	.thumb_func
Swap_PrintActionStrings:
	push	{lr}
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, .L1186
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0
	beq	.L1183	@cond_branch
	cmp	r0, #0x1
	bne	.L1181	@cond_branch
	ldr	r0, .L1186+0x4
	mov	r1, #0x0
	mov	r2, #0x5
	bl	Swap_PrintActionString
.L1183:
	ldr	r0, .L1186+0x8
	mov	r1, #0x18
	mov	r2, #0x5
	bl	Swap_PrintActionString
.L1181:
	mov	r0, #0x5
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.L1187:
	.align	2, 0
.L1186:
	.word	sFactorySwapScreen
	.word	gText_PkmnForSwap
	.word	gText_Cancel3
.Lfe93:
	.size	 Swap_PrintActionStrings,.Lfe93-Swap_PrintActionStrings
	.align	2, 0
	.type	 Swap_PrintActionStrings2,function
	.thumb_func
Swap_PrintActionStrings2:
	push	{lr}
	mov	r0, #0x3
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, .L1194
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0
	beq	.L1191	@cond_branch
	cmp	r0, #0x1
	bne	.L1189	@cond_branch
	ldr	r0, .L1194+0x4
	mov	r1, #0x8
	mov	r2, #0x3
	bl	Swap_PrintActionString
.L1191:
	ldr	r0, .L1194+0x8
	mov	r1, #0x20
	mov	r2, #0x3
	bl	Swap_PrintActionString
.L1189:
	mov	r0, #0x3
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.L1195:
	.align	2, 0
.L1194:
	.word	sFactorySwapScreen
	.word	gText_PkmnForSwap
	.word	gText_Cancel3
.Lfe94:
	.size	 Swap_PrintActionStrings2,.Lfe94-Swap_PrintActionStrings2
	.align	2, 0
	.type	 Swap_PrintOneActionString,function
	.thumb_func
Swap_PrintOneActionString:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1198	@cond_branch
	cmp	r0, #0x1
	beq	.L1200	@cond_branch
	b	.L1197
.L1198:
	ldr	r0, .L1203
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0x1
	bne	.L1197	@cond_branch
	ldr	r0, .L1203+0x4
	mov	r1, #0x8
	mov	r2, #0x3
	bl	Swap_PrintActionString
	b	.L1197
.L1204:
	.align	2, 0
.L1203:
	.word	sFactorySwapScreen
	.word	gText_PkmnForSwap
.L1200:
	ldr	r0, .L1205
	mov	r1, #0x20
	mov	r2, #0x3
	bl	Swap_PrintActionString
.L1197:
	mov	r0, #0x3
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.L1206:
	.align	2, 0
.L1205:
	.word	gText_Cancel3
.Lfe95:
	.size	 Swap_PrintOneActionString,.Lfe95-Swap_PrintOneActionString
	.align	2, 0
	.type	 Swap_PrintMonSpecies2,function
	.thumb_func
Swap_PrintMonSpecies2:
	push	{r4, lr}
	add	sp, sp, #-0x18
	ldr	r0, .L1215
	add	r1, sp, #0xc
	mov	r2, #0x4
	bl	CpuSet
	ldr	r0, .L1215+0x4
	ldr	r2, [r0]
	ldrb	r0, [r2, #0x15]
	cmp	r0, #0
	bne	.L1208	@cond_branch
	add	r0, sp, #0xc
	ldr	r1, .L1215+0x8
	mov	r2, #0xe4
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldrh	r1, [r1]
	strh	r1, [r0, #0x8]
	b	.L1209
.L1216:
	.align	2, 0
.L1215:
	.word	gUnknown_08610918
	.word	sFactorySwapScreen
	.word	gPlttBufferFaded
.L1208:
	add	r1, sp, #0xc
	ldrh	r0, [r2, #0x24]
	strh	r0, [r1, #0x8]
.L1209:
	add	r0, sp, #0xc
	mov	r1, #0xf0
	mov	r2, #0xa
	bl	LoadPalette
	mov	r0, #0x7
	bl	PutWindowTilemap
	mov	r0, #0x7
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, .L1217
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0x2
	bls	.L1210	@cond_branch
	mov	r0, #0x7
	mov	r1, #0x3
	bl	CopyWindowToVram
	b	.L1211
.L1218:
	.align	2, 0
.L1217:
	.word	sFactorySwapScreen
.L1210:
	ldrb	r2, [r1, #0x3]
	ldrb	r0, [r1, #0x14]
	cmp	r0, #0
	bne	.L1212	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L1219
	b	.L1214
.L1220:
	.align	2, 0
.L1219:
	.word	gPlayerParty
.L1212:
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L1221
.L1214:
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r4, .L1221+0x4
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1221+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x56
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L1221+0xc
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x7
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	mov	r0, #0x7
	mov	r1, #0x3
	bl	CopyWindowToVram
.L1211:
	add	sp, sp, #0x18
	pop	{r4}
	pop	{r0}
	bx	r0
.L1222:
	.align	2, 0
.L1221:
	.word	gEnemyParty
	.word	gStringVar4
	.word	gSpeciesNames
	.word	sSwapSpeciesNameTextColors
.Lfe96:
	.size	 Swap_PrintMonSpecies2,.Lfe96-Swap_PrintMonSpecies2
	.align	2, 0
	.type	 Swap_PrintMonSpecies3,function
	.thumb_func
Swap_PrintMonSpecies3:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L1229
	mov	r1, #0xe0
	mov	r2, #0xa
	bl	LoadPalette
	ldr	r0, .L1229+0x4
	ldr	r1, .L1229+0x8
	mov	r2, #0x5
	bl	CpuSet
	ldr	r0, .L1229+0xc
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0x2
	bls	.L1224	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1225
.L1230:
	.align	2, 0
.L1229:
	.word	gUnknown_08610918
	.word	gPlttBufferUnfaded+0x1e0
	.word	gPlttBufferFaded+0x1c0
	.word	sFactorySwapScreen
.L1224:
	ldrb	r2, [r1, #0x3]
	ldrb	r0, [r1, #0x14]
	cmp	r0, #0
	bne	.L1226	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L1231
	b	.L1228
.L1232:
	.align	2, 0
.L1231:
	.word	gPlayerParty
.L1226:
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L1233
.L1228:
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r4, .L1233+0x4
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1233+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x56
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L1233+0xc
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
.L1225:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L1234:
	.align	2, 0
.L1233:
	.word	gEnemyParty
	.word	gStringVar4
	.word	gSpeciesNames
	.word	sSwapSpeciesNameTextColors
.Lfe97:
	.size	 Swap_PrintMonSpecies3,.Lfe97-Swap_PrintMonSpecies3
	.align	2, 0
	.type	 Swap_PrintMonCategory,function
	.thumb_func
Swap_PrintMonCategory:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x2c
	ldr	r6, .L1241
	ldr	r0, [r6]
	ldrb	r4, [r0, #0x3]
	add	r5, r4, #0
	mov	r0, #0x8
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	cmp	r4, #0x2
	bls	.L1236	@cond_branch
	mov	r0, #0x8
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1237
.L1242:
	.align	2, 0
.L1241:
	.word	sFactorySwapScreen
.L1236:
	mov	r0, #0x8
	bl	PutWindowTilemap
	ldr	r0, [r6]
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0
	bne	.L1238	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1243
	b	.L1240
.L1244:
	.align	2, 0
.L1243:
	.word	gPlayerParty
.L1238:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L1245
.L1240:
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, sp, #0xc
	bl	CopyMonCategoryText
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0x76
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x8
	mov	r1, #0x1
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	mov	r0, #0x8
	mov	r1, #0x2
	bl	CopyWindowToVram
.L1237:
	add	sp, sp, #0x2c
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1246:
	.align	2, 0
.L1245:
	.word	gEnemyParty
.Lfe98:
	.size	 Swap_PrintMonCategory,.Lfe98-Swap_PrintMonCategory
	.align	2, 0
	.type	 Swap_InitActions,function
	.thumb_func
Swap_InitActions:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r4, .L1255
	ldr	r3, [r4]
	ldrb	r0, [r3, #0x15]
	cmp	r0, #0x1
	beq	.L1248	@cond_branch
	cmp	r2, #0
	beq	.L1250	@cond_branch
	cmp	r2, #0x1
	beq	.L1251	@cond_branch
	b	.L1248
.L1256:
	.align	2, 0
.L1255:
	.word	sFactorySwapScreen
.L1250:
	strb	r2, [r3, #0x14]
	ldr	r0, [r4]
	strb	r2, [r0, #0x3]
	ldr	r1, [r4]
	mov	r0, #0x4
	strb	r0, [r1, #0x17]
	ldr	r1, [r4]
	ldr	r0, .L1257
	b	.L1254
.L1258:
	.align	2, 0
.L1257:
	.word	sSwap_PlayerScreenActions
.L1251:
	mov	r1, #0x0
	strb	r2, [r3, #0x14]
	ldr	r0, [r4]
	strb	r1, [r0, #0x3]
	ldr	r1, [r4]
	mov	r0, #0x5
	strb	r0, [r1, #0x17]
	ldr	r1, [r4]
	ldr	r0, .L1259
.L1254:
	str	r0, [r1, #0x18]
.L1248:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1260:
	.align	2, 0
.L1259:
	.word	sSwap_EnemyScreenActions
.Lfe99:
	.size	 Swap_InitActions,.Lfe99-Swap_InitActions
	.align	2, 0
	.type	 Swap_RunMenuOptionFunc,function
	.thumb_func
Swap_RunMenuOptionFunc:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L1262
	ldr	r2, .L1262+0x4
	ldr	r1, .L1262+0x8
	ldr	r1, [r1]
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	str	r1, [r3]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L1263:
	.align	2, 0
.L1262:
	.word	sSwap_CurrentTableFunc
	.word	sSwap_MenuOptionFuncs
	.word	sFactorySwapScreen
.Lfe100:
	.size	 Swap_RunMenuOptionFunc,.Lfe100-Swap_RunMenuOptionFunc
	.align	2, 0
	.type	 sub_819F0CC,function
	.thumb_func
sub_819F0CC:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L1265
	ldr	r1, [r5]
	ldr	r0, [r1, #0x2c]
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F3F8
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x3]
	mov	r5, #0x0
	strb	r1, [r0, #0x12]
	mov	r0, #0x3
	bl	sub_819EA64
	ldr	r1, .L1265+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r5, [r0, #0x8]
	ldr	r1, .L1265+0x8
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1266:
	.align	2, 0
.L1265:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	sub_819D9EC
.Lfe101:
	.size	 sub_819F0CC,.Lfe101-sub_819F0CC
	.align	2, 0
	.type	 sub_819F114,function
	.thumb_func
sub_819F114:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1268
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x6
	strh	r0, [r1, #0x8]
	ldr	r0, .L1268+0x4
	str	r0, [r1]
	bx	lr
.L1269:
	.align	2, 0
.L1268:
	.word	gTasks
	.word	Task_FromSwapScreenToSummaryScreen
.Lfe102:
	.size	 sub_819F114,.Lfe102-sub_819F114
	.align	2, 0
	.type	 sub_819F134,function
	.thumb_func
sub_819F134:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L1271
	ldr	r1, [r0]
	ldr	r0, [r1, #0x2c]
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F3F8
	mov	r0, #0x3
	bl	sub_819EA64
	ldr	r1, .L1271+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	ldr	r2, .L1271+0x8
	lsr	r1, r2, #0x10
	strh	r1, [r0, #0x14]
	strh	r2, [r0, #0x16]
	mov	r1, #0x1
	strh	r1, [r0, #0x12]
	ldr	r1, .L1271+0xc
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1272:
	.align	2, 0
.L1271:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	Task_HandleSwapScreenChooseMons
	.word	sub_819D770
.Lfe103:
	.size	 sub_819F134,.Lfe103-sub_819F134
	.align	2, 0
	.type	 Swap_RunActionFunc,function
	.thumb_func
Swap_RunActionFunc:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L1274
	ldr	r1, .L1274+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x3]
	ldr	r2, [r2, #0x18]
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r1, [r1, #0x4]
	str	r1, [r3]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L1275:
	.align	2, 0
.L1274:
	.word	sSwap_CurrentTableFunc
	.word	sFactorySwapScreen
.Lfe104:
	.size	 Swap_RunActionFunc,.Lfe104-Swap_RunActionFunc
	.align	2, 0
	.type	 Swap_ActionCancel,function
	.thumb_func
Swap_ActionCancel:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1277
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L1277+0x4
	lsr	r0, r2, #0x10
	mov	r3, #0x0
	strh	r0, [r1, #0x14]
	strh	r2, [r1, #0x16]
	strh	r3, [r1, #0x8]
	strh	r3, [r1, #0x12]
	ldr	r0, .L1277+0x8
	str	r0, [r1]
	bx	lr
.L1278:
	.align	2, 0
.L1277:
	.word	gTasks
	.word	sub_819CC24
	.word	sub_819D588
.Lfe105:
	.size	 Swap_ActionCancel,.Lfe105-Swap_ActionCancel
	.align	2, 0
	.type	 Swap_ActionPkmnForSwap,function
	.thumb_func
Swap_ActionPkmnForSwap:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1280
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L1280+0x4
	lsr	r0, r2, #0x10
	mov	r3, #0x0
	strh	r0, [r1, #0x14]
	strh	r2, [r1, #0x16]
	strh	r3, [r1, #0x12]
	strh	r3, [r1, #0x8]
	ldr	r0, .L1280+0x8
	str	r0, [r1]
	bx	lr
.L1281:
	.align	2, 0
.L1280:
	.word	gTasks
	.word	sub_819D9EC
	.word	sub_819D588
.Lfe106:
	.size	 Swap_ActionPkmnForSwap,.Lfe106-Swap_ActionPkmnForSwap
	.align	2, 0
	.type	 Swap_ActionMon,function
	.thumb_func
Swap_ActionMon:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L1288
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x14]
	cmp	r0, #0
	bne	.L1283	@cond_branch
	ldr	r3, .L1288+0x4
	lsl	r4, r6, #0x2
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldr	r2, .L1288+0x8
	lsr	r1, r2, #0x10
	strh	r1, [r0, #0x14]
	strh	r2, [r0, #0x16]
	mov	r1, #0x2
	strh	r1, [r0, #0x12]
	b	.L1284
.L1289:
	.align	2, 0
.L1288:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	Task_HandleSwapScreenMenu
.L1283:
	ldrb	r0, [r1, #0x3]
	bl	Swap_AlreadyHasSameSpecies
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bne	.L1285	@cond_branch
	ldr	r1, [r5]
	add	r0, r1, #0
	add	r0, r0, #0x2d
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F2B4
	ldr	r1, .L1290
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	strh	r4, [r0, #0x12]
	ldr	r1, .L1290+0x4
	b	.L1287
.L1291:
	.align	2, 0
.L1290:
	.word	gTasks
	.word	Task_SwapCantHaveSameMons
.L1285:
	ldr	r4, .L1292
	lsl	r5, r6, #0x2
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldr	r2, .L1292+0x4
	lsr	r1, r2, #0x10
	mov	r3, #0x0
	strh	r1, [r0, #0x14]
	strh	r2, [r0, #0x16]
	strh	r3, [r0, #0x12]
	add	r3, r4, #0
	add	r4, r5, #0
.L1284:
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	ldr	r1, .L1292+0x8
.L1287:
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1293:
	.align	2, 0
.L1292:
	.word	gTasks
	.word	sub_819CCD4
	.word	sub_819D588
.Lfe107:
	.size	 Swap_ActionMon,.Lfe107-Swap_ActionMon
	.align	2, 0
	.type	 sub_819F2B4,function
	.thumb_func
sub_819F2B4:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	lsl	r5, r2, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L1295
	mov	r1, #0x78
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	strb	r0, [r4]
	ldr	r2, .L1295+0x4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r2, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L1295+0x8
	str	r1, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r5, [r0, #0x3c]
	mov	r0, #0x1
	strb	r0, [r6]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1296:
	.align	2, 0
.L1295:
	.word	gUnknown_08610894
	.word	gSprites
	.word	sub_819F600
.Lfe108:
	.size	 sub_819F2B4,.Lfe108-sub_819F2B4
	.align	2, 0
	.type	 Swap_ShowSummaryMonSprite,function
	.thumb_func
Swap_ShowSummaryMonSprite:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #-0x10
	ldr	r0, .L1298
	mov	r1, #0x78
	mov	r2, #0x40
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r6, .L1298+0x4
	ldr	r1, [r6]
	add	r1, r1, #0x2d
	mov	r2, #0x0
	mov	sl, r2
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x2d
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1298+0x8
	mov	r8, r1
	add	r0, r0, r8
	mov	r1, #0x2
	bl	StartSpriteAffineAnim
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x3]
	mov	r0, #0x64
	mov	r4, r1
	mul	r4, r4, r0
	ldr	r0, .L1298+0xc
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	mov	r9, r0
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	add	r2, r0, #0
	mov	r0, #0x58
	str	r0, [sp]
	mov	r0, #0x20
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	ldr	r0, .L1298+0x10
	str	r0, [sp, #0xc]
	add	r0, r5, #0
	mov	r1, r9
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
	ldr	r1, [r6]
	add	r1, r1, #0x2c
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x28
	mov	r2, sl
	strb	r2, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x29
	strb	r2, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x2d
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1299:
	.align	2, 0
.L1298:
	.word	gUnknown_08610894
	.word	sFactorySwapScreen
	.word	gSprites
	.word	gPlayerParty
	.word	0xffff
.Lfe109:
	.size	 Swap_ShowSummaryMonSprite,.Lfe109-Swap_ShowSummaryMonSprite
	.align	2, 0
	.type	 sub_819F3F8,function
	.thumb_func
sub_819F3F8:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	lsl	r5, r2, #0x18
	lsr	r5, r5, #0x18
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	FreeAndDestroyMonPicSprite
	ldr	r0, .L1301
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1301+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r5, [r1, #0x16]
	lsr	r4, r4, #0x8
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	strh	r4, [r1, #0x14]
	ldr	r1, [r1]
	bl	_call_via_r1
	mov	r0, #0x1
	strb	r0, [r6]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1302:
	.align	2, 0
.L1301:
	.word	sub_819F7B4
	.word	gTasks
.Lfe110:
	.size	 sub_819F3F8,.Lfe110-sub_819F3F8
	.align	2, 0
	.type	 sub_819F444,function
	.thumb_func
sub_819F444:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	FreeAndDestroyMonPicSprite
	ldr	r5, .L1304
	lsl	r4, r4, #0x10
	lsr	r1, r4, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	mov	r0, #0x0
	strb	r0, [r6]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1305:
	.align	2, 0
.L1304:
	.word	gSprites
.Lfe111:
	.size	 sub_819F444,.Lfe111-sub_819F444
	.align	2, 0
	.type	 Task_SwapCantHaveSameMons,function
	.thumb_func
Task_SwapCantHaveSameMons:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L1320
	ldr	r0, [r1]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	add	r3, r1, #0
	cmp	r0, #0x1
	beq	.L1306	@cond_branch
	ldr	r2, .L1320+0x4
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	add	r5, r1, #0
	cmp	r0, #0x4
	bhi	.L1306	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1320+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1321:
	.align	2, 0
.L1320:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	.L1317
	.align	2, 0
	.align	2, 0
.L1317:
	.word	.L1309
	.word	.L1310
	.word	.L1313
	.word	.L1315
	.word	.L1316
.L1309:
	ldr	r0, .L1322
	bl	Swap_PrintOnInfoWindow
	ldr	r0, .L1322+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x20
	mov	r1, #0x0
	strb	r1, [r0]
	b	.L1319
.L1323:
	.align	2, 0
.L1322:
	.word	gText_SamePkmnInPartyAlready
	.word	sFactorySwapScreen
.L1310:
	ldr	r0, .L1324
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1312	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1306	@cond_branch
.L1312:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1324+0x4
	ldr	r1, [r0]
	ldr	r0, [r1, #0x2c]
	add	r1, r1, #0x30
	mov	r2, #0x1
	bl	sub_819F3F8
	b	.L1319
.L1325:
	.align	2, 0
.L1324:
	.word	gMain
	.word	sFactorySwapScreen
.L1313:
	ldr	r0, [r3]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L1306	@cond_branch
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1319
.L1315:
	ldr	r0, .L1326
	bl	Swap_PrintOnInfoWindow
.L1319:
	ldr	r0, .L1326+0x4
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L1306
.L1327:
	.align	2, 0
.L1326:
	.word	gText_SelectPkmnToAccept
	.word	gTasks
.L1316:
	bl	Swap_PrintMonSpecies3
	bl	sub_819EADC
	ldr	r0, .L1328
	ldr	r0, [r0]
	add	r0, r0, #0x22
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r1, .L1328+0x4
	add	r0, r5, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x12]
	strh	r1, [r0, #0x8]
	ldr	r1, .L1328+0x8
	str	r1, [r0]
.L1306:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1329:
	.align	2, 0
.L1328:
	.word	sFactorySwapScreen
	.word	gTasks
	.word	Task_HandleSwapScreenChooseMons
.Lfe112:
	.size	 Task_SwapCantHaveSameMons,.Lfe112-Task_SwapCantHaveSameMons
	.align	2, 0
	.type	 Swap_AlreadyHasSameSpecies,function
	.thumb_func
Swap_AlreadyHasSameSpecies:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1338
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r4, #0x0
.L1334:
	ldr	r0, .L1338+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x12]
	cmp	r4, r0
	beq	.L1333	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1338+0x8
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r5
	bne	.L1333	@cond_branch
	mov	r0, #0x1
	b	.L1337
.L1339:
	.align	2, 0
.L1338:
	.word	gEnemyParty
	.word	sFactorySwapScreen
	.word	gPlayerParty
.L1333:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1334	@cond_branch
	mov	r0, #0x0
.L1337:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe113:
	.size	 Swap_AlreadyHasSameSpecies,.Lfe113-Swap_AlreadyHasSameSpecies
	.align	2, 0
	.type	 sub_819F600,function
	.thumb_func
sub_819F600:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1341	@cond_branch
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L1342
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1342+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r2, [r4, #0x3c]
	strh	r2, [r1, #0x16]
	ldr	r1, [r1]
	bl	_call_via_r1
	ldr	r0, .L1342+0x8
	str	r0, [r4, #0x1c]
.L1341:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1343:
	.align	2, 0
.L1342:
	.word	sub_819F69C
	.word	gTasks
	.word	SpriteCallbackDummy
.Lfe114:
	.size	 sub_819F600,.Lfe114-sub_819F600
	.align	2, 0
	.type	 sub_819F654,function
	.thumb_func
sub_819F654:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1345	@cond_branch
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	bne	.L1346	@cond_branch
	ldr	r0, .L1348
	ldr	r0, [r0]
	add	r0, r0, #0x30
	mov	r1, #0x0
	strb	r1, [r0]
	b	.L1347
.L1349:
	.align	2, 0
.L1348:
	.word	sFactorySwapScreen
.L1346:
	mov	r0, #0x0
	bl	sub_819BE20
.L1347:
	add	r0, r4, #0
	bl	DestroySprite
.L1345:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe115:
	.size	 sub_819F654,.Lfe115-sub_819F654
	.align	2, 0
	.type	 sub_819F69C,function
	.thumb_func
sub_819F69C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L1363
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1353	@cond_branch
	cmp	r0, #0x1
	bgt	.L1362	@cond_branch
	cmp	r0, #0
	beq	.L1352	@cond_branch
	b	.L1358
.L1364:
	.align	2, 0
.L1363:
	.word	gTasks
.L1362:
	cmp	r0, #0x2
	beq	.L1354	@cond_branch
	b	.L1358
.L1352:
	mov	r0, #0x58
	strh	r0, [r4, #0xe]
	mov	r0, #0x98
	strh	r0, [r4, #0x38]
	mov	r0, #0x40
	strh	r0, [r4, #0x12]
	mov	r0, #0x41
	strh	r0, [r4, #0x18]
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldrh	r1, [r4, #0xe]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x38]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x40
	bl	SetGpuReg
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x37
	bl	SetGpuReg
	b	.L1351
.L1353:
	mov	r0, #0x3
	bl	ShowBg
	ldr	r1, .L1365
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L1365+0x4
	mov	r0, #0x52
	bl	SetGpuReg
	b	.L1351
.L1366:
	.align	2, 0
.L1365:
	.word	0x1248
	.word	0x40b
.L1354:
	ldrh	r0, [r4, #0x12]
	sub	r0, r0, #0x4
	strh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0x18]
	add	r1, r1, #0x4
	strh	r1, [r4, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x20
	ble	.L1356	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5f
	ble	.L1355	@cond_branch
.L1356:
	mov	r0, #0x20
	strh	r0, [r4, #0x12]
	mov	r0, #0x60
	strh	r0, [r4, #0x18]
.L1355:
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x20
	bne	.L1350	@cond_branch
	b	.L1351
.L1358:
	add	r0, r5, #0
	bl	DestroyTask
	ldr	r0, .L1367
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x16
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	bne	.L1359	@cond_branch
	bl	Swap_ShowMonSprite
	b	.L1350
.L1368:
	.align	2, 0
.L1367:
	.word	gTasks
.L1359:
	bl	Summary_ShowMonSprite
	b	.L1350
.L1351:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L1350:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe116:
	.size	 sub_819F69C,.Lfe116-sub_819F69C
	.align	2, 0
	.type	 sub_819F7B4,function
	.thumb_func
sub_819F7B4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L1379
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L1372	@cond_branch
	cmp	r0, #0x1
	beq	.L1373	@cond_branch
	mov	r0, #0x3
	bl	HideBg
	ldr	r3, .L1379+0x4
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r1, [r4, #0x16]
	strh	r1, [r0, #0x3c]
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r3, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L1379+0x8
	str	r1, [r0]
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	ClearGpuRegBits
	add	r0, r5, #0
	bl	DestroyTask
	b	.L1370
.L1380:
	.align	2, 0
.L1379:
	.word	gTasks
	.word	gSprites
	.word	sub_819F654
.L1372:
	mov	r0, #0x58
	strh	r0, [r4, #0xe]
	mov	r0, #0x98
	strh	r0, [r4, #0x38]
	mov	r0, #0x20
	strh	r0, [r4, #0x12]
	mov	r0, #0x60
	strh	r0, [r4, #0x18]
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldrh	r1, [r4, #0xe]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x38]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x40
	bl	SetGpuReg
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x37
	bl	SetGpuReg
	b	.L1378
.L1373:
	ldrh	r0, [r4, #0x12]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0x18]
	sub	r1, r1, #0x4
	strh	r1, [r4, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3f
	bgt	.L1375	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x41
	bgt	.L1374	@cond_branch
.L1375:
	mov	r0, #0x40
	strh	r0, [r4, #0x12]
	mov	r0, #0x41
	strh	r0, [r4, #0x18]
.L1374:
	ldrh	r1, [r4, #0x12]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x18]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x40
	bne	.L1370	@cond_branch
.L1378:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L1370:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe117:
	.size	 sub_819F7B4,.Lfe117-sub_819F7B4
	.align	2, 0
	.type	 Swap_ShowMonSprite,function
	.thumb_func
Swap_ShowMonSprite:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	ldr	r0, .L1385
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x14]
	cmp	r0, #0
	bne	.L1382	@cond_branch
	ldrb	r1, [r1, #0x3]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1385+0x4
	b	.L1384
.L1386:
	.align	2, 0
.L1385:
	.word	sFactorySwapScreen
	.word	gPlayerParty
.L1382:
	ldrb	r1, [r1, #0x3]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1387
.L1384:
	add	r6, r1, r0
	add	r0, r6, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0x58
	str	r0, [sp]
	mov	r0, #0x20
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	ldr	r0, .L1387+0x4
	str	r0, [sp, #0xc]
	add	r0, r4, #0
	add	r2, r5, #0
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
	ldr	r2, .L1387+0x8
	ldr	r1, [r2]
	add	r1, r1, #0x2c
	mov	r3, #0x0
	strb	r0, [r1]
	ldr	r4, .L1387+0xc
	ldr	r0, [r2]
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x28
	strb	r3, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x29
	strb	r3, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x30
	strb	r3, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1388:
	.align	2, 0
.L1387:
	.word	gEnemyParty
	.word	0xffff
	.word	sFactorySwapScreen
	.word	gSprites
.Lfe118:
	.size	 Swap_ShowMonSprite,.Lfe118-Swap_ShowMonSprite

	.lcomm	sFactorySelectScreen,4

	.lcomm	sSwap_CurrentTableFunc,4

	.lcomm	sFactorySwapScreen,4
	.comm	gUnknown_030062E8, 4	@ 4
.text
	.align	2, 0

