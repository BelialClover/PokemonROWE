@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sDefaultTraderNames,object
sDefaultTraderNames:
	.word	gText_Tristan
	.word	gText_Philip
	.word	gText_Dennis
	.word	gText_Roberto
	.size	 sDefaultTraderNames,16
	.type	 sDefaultTraderDecorations,object
sDefaultTraderDecorations:
	.byte	0x5b
	.byte	0x6b
	.byte	0x25
	.byte	0x15
	.size	 sDefaultTraderDecorations,4
.text
	.align	2, 0
	.globl	TraderSetup
	.type	 TraderSetup,function
	.thumb_func
TraderSetup:
	push	{r4, r5, r6, lr}
	ldr	r0, .L8
	ldr	r1, [r0]
	ldr	r0, .L8+0x4
	add	r5, r1, r0
	mov	r2, #0x0
	mov	r0, #0x2
	strb	r0, [r5]
	ldr	r0, .L8+0x8
	add	r1, r1, r0
	strb	r2, [r1]
	mov	r4, #0x0
	ldr	r6, .L8+0xc
.L6:
	mov	r0, #0xb
	mul	r0, r0, r4
	add	r0, r0, #0x5
	add	r0, r5, r0
	lsl	r1, r4, #0x2
	add	r1, r1, r6
	ldr	r1, [r1]
	bl	StringCopy
	add	r1, r5, #0x1
	add	r1, r1, r4
	ldr	r0, .L8+0x10
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0
	add	r0, r0, #0x32
	add	r0, r0, r4
	mov	r1, #0x2
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L6	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	gSaveBlock1Ptr
	.word	0x2aa8
	.word	0x2ad9
	.word	sDefaultTraderNames
	.word	sDefaultTraderDecorations
.Lfe1:
	.size	 TraderSetup,.Lfe1-TraderSetup
	.align	2, 0
	.globl	Trader_ResetFlag
	.type	 Trader_ResetFlag,function
	.thumb_func
Trader_ResetFlag:
	ldr	r0, .L11
	ldr	r0, [r0]
	ldr	r1, .L11+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	bx	lr
.L12:
	.align	2, 0
.L11:
	.word	gSaveBlock1Ptr
	.word	0x2ad9
.Lfe2:
	.size	 Trader_ResetFlag,.Lfe2-Trader_ResetFlag
	.section .rodata
	.align	2, 0
.LC6:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0xa
	.byte	0xf
	.short	0x1
.text
	.align	2, 0
	.globl	CreateAvailableDecorationsMenu
	.type	 CreateAvailableDecorationsMenu,function
	.thumb_func
CreateAvailableDecorationsMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L29
	add	r7, r1, r0
	ldr	r0, .L29+0x4
	ldr	r4, [r0]
	ldr	r0, .L29+0x8
	add	r0, r0, r4
	mov	r9, r0
	ldr	r0, .L29+0xc
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	ldr	r1, .L29+0x10
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r6, r0, #0
	ldr	r1, .L29+0x14
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	mov	r8, r0
	mov	r5, #0x0
	ldr	r0, .L29+0x18
	add	r4, r4, r0
.L17:
	mov	r0, r9
	add	r0, r0, #0x1
	add	r1, r0, r5
	ldrb	r0, [r1]
	cmp	r0, #0x78
	bls	.L18	@cond_branch
	mov	r0, r8
	b	.L19
.L30:
	.align	2, 0
.L29:
	.word	gTasks+0x8
	.word	gSaveBlock1Ptr
	.word	0x2aa8
	.word	.LC6
	.word	gText_Exit
	.word	gText_FiveMarks
	.word	0x2aa9
.L18:
	ldrb	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r0, .L31
	add	r1, r1, r0
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
.L19:
	cmp	r0, r6
	ble	.L16	@cond_branch
	add	r6, r0, #0
.L16:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L17	@cond_branch
	add	r0, r6, #0
	bl	ConvertPixelWidthToTileWidth
	lsl	r0, r0, #0x18
	ldr	r2, .L31+0x4
	ldr	r1, [sp, #0xc]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0xc]
	add	r0, sp, #0xc
	bl	AddWindow
	strh	r0, [r7, #0x6]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x85
	lsl	r2, r2, #0x2
	mov	r1, #0x0
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
	mov	r5, #0x0
.L25:
	add	r1, r4, r5
	ldrb	r0, [r1]
	cmp	r0, #0x78
	bls	.L26	@cond_branch
	ldrb	r0, [r7, #0x6]
	lsl	r1, r5, #0x4
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	ldr	r2, .L31+0x8
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
	b	.L24
.L32:
	.align	2, 0
.L31:
	.word	gDecorations+0x1
	.word	0xffffff
	.word	gText_FiveMarks
.L26:
	ldrb	r0, [r7, #0x6]
	ldrb	r2, [r1]
	lsl	r2, r2, #0x5
	ldr	r1, .L33
	add	r2, r2, r1
	lsl	r1, r5, #0x4
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
.L24:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L25	@cond_branch
	ldrb	r0, [r7, #0x6]
	ldr	r2, .L33+0x4
	lsl	r1, r5, #0x4
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
	ldrb	r0, [r7, #0x6]
	mov	r1, #0x5
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	gDecorations+0x1
	.word	gText_Exit
.Lfe3:
	.size	 CreateAvailableDecorationsMenu,.Lfe3-CreateAvailableDecorationsMenu
	.align	2, 0
	.globl	Task_BufferDecorSelectionAndCloseWindow
	.type	 Task_BufferDecorSelectionAndCloseWindow,function
	.thumb_func
Task_BufferDecorSelectionAndCloseWindow:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L38
	add	r4, r0, r1
	cmp	r2, #0x78
	bls	.L36	@cond_branch
	ldr	r1, .L38+0x4
	ldr	r2, .L38+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	b	.L37
.L39:
	.align	2, 0
.L38:
	.word	gTasks+0x8
	.word	gSpecialVar_0x8004
	.word	0xffff
.L36:
	ldr	r0, .L40
	strh	r2, [r0]
.L37:
	ldrb	r0, [r4, #0x6]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4, #0x6]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0x6]
	bl	RemoveWindow
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	add	r0, r5, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gSpecialVar_0x8004
.Lfe4:
	.size	 Task_BufferDecorSelectionAndCloseWindow,.Lfe4-Task_BufferDecorSelectionAndCloseWindow
	.align	2, 0
	.globl	Task_HandleGetDecorationMenuInput
	.type	 Task_HandleGetDecorationMenuInput,function
	.thumb_func
Task_HandleGetDecorationMenuInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L50
	ldr	r0, [r0]
	ldr	r1, .L50+0x4
	add	r6, r0, r1
	bl	Menu_ProcessInput
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L46	@cond_branch
	cmp	r1, r0
	bgt	.L49	@cond_branch
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L43	@cond_branch
	b	.L47
.L51:
	.align	2, 0
.L50:
	.word	gSaveBlock1Ptr
	.word	0x2aa8
.L49:
	cmp	r1, #0x4
	bne	.L47	@cond_branch
.L46:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	mov	r1, #0x0
	bl	Task_BufferDecorSelectionAndCloseWindow
	b	.L43
.L47:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L52
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r0]
	ldr	r5, .L52+0x4
	mov	r0, #0xb
	mov	r1, r4
	mul	r1, r1, r0
	add	r1, r1, #0x5
	add	r1, r6, r1
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0x32
	add	r0, r0, r4
	ldrb	r1, [r0]
	add	r0, r5, #0
	bl	ConvertInternationalString
	add	r0, r6, #0x1
	add	r0, r0, r4
	ldrb	r1, [r0]
	add	r0, r7, #0
	bl	Task_BufferDecorSelectionAndCloseWindow
.L43:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	gSpecialVar_0x8005
	.word	gStringVar1
.Lfe5:
	.size	 Task_HandleGetDecorationMenuInput,.Lfe5-Task_HandleGetDecorationMenuInput
	.align	2, 0
	.globl	ScrSpecial_GetTraderTradedFlag
	.type	 ScrSpecial_GetTraderTradedFlag,function
	.thumb_func
ScrSpecial_GetTraderTradedFlag:
	ldr	r0, .L55
	ldr	r0, [r0]
	ldr	r1, .L55+0x4
	ldr	r2, .L55+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	strh	r0, [r1]
	bx	lr
.L56:
	.align	2, 0
.L55:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_Result
	.word	0x2ad9
.Lfe6:
	.size	 ScrSpecial_GetTraderTradedFlag,.Lfe6-ScrSpecial_GetTraderTradedFlag
	.align	2, 0
	.globl	ScrSpecial_DoesPlayerHaveNoDecorations
	.type	 ScrSpecial_DoesPlayerHaveNoDecorations,function
	.thumb_func
ScrSpecial_DoesPlayerHaveNoDecorations:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L64
.L61:
	add	r0, r4, #0
	bl	GetNumOwnedDecorationsInCategory
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L60	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
	b	.L57
.L65:
	.align	2, 0
.L64:
	.word	gSpecialVar_Result
.L60:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L61	@cond_branch
	ldr	r1, .L66
	mov	r0, #0x1
	strh	r0, [r1]
.L57:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	gSpecialVar_Result
.Lfe7:
	.size	 ScrSpecial_DoesPlayerHaveNoDecorations,.Lfe7-ScrSpecial_DoesPlayerHaveNoDecorations
	.align	2, 0
	.globl	ScrSpecial_IsDecorationFull
	.type	 ScrSpecial_IsDecorationFull,function
	.thumb_func
ScrSpecial_IsDecorationFull:
	push	{r4, r5, r6, lr}
	ldr	r6, .L70
	mov	r0, #0x0
	strh	r0, [r6]
	ldr	r4, .L70+0x4
	ldr	r5, .L70+0x8
	ldrh	r0, [r5]
	lsl	r0, r0, #0x5
	add	r2, r0, r4
	ldr	r0, .L70+0xc
	ldrh	r0, [r0]
	lsl	r0, r0, #0x5
	add	r0, r0, r4
	ldrb	r1, [r2, #0x13]
	ldrb	r0, [r0, #0x13]
	cmp	r1, r0
	beq	.L69	@cond_branch
	add	r0, r1, #0
	bl	GetFirstEmptyDecorSlot
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L69	@cond_branch
	ldr	r0, .L70+0x10
	ldrh	r1, [r5]
	lsl	r1, r1, #0x5
	add	r1, r1, r4
	ldrb	r1, [r1, #0x13]
	bl	CopyDecorationCategoryName
	mov	r0, #0x1
	strh	r0, [r6]
.L69:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	gSpecialVar_Result
	.word	gDecorations
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8006
	.word	gStringVar2
.Lfe8:
	.size	 ScrSpecial_IsDecorationFull,.Lfe8-ScrSpecial_IsDecorationFull
	.align	2, 0
	.globl	ScrSpecial_TraderMenuGiveDecoration
	.type	 ScrSpecial_TraderMenuGiveDecoration,function
	.thumb_func
ScrSpecial_TraderMenuGiveDecoration:
	push	{lr}
	ldr	r0, .L73
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	ShowDecorationCategoriesWindow
.Lfe9:
	.size	 ScrSpecial_TraderMenuGiveDecoration,.Lfe9-ScrSpecial_TraderMenuGiveDecoration
	.align	2, 0
	.globl	DecorationItemsMenuAction_Trade
	.type	 DecorationItemsMenuAction_Trade,function
	.thumb_func
DecorationItemsMenuAction_Trade:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	IsSelectedDecorInThePC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L76	@cond_branch
	ldr	r5, .L78
	ldr	r0, .L78+0x4
	ldrb	r1, [r0]
	ldr	r0, .L78+0x8
	ldr	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	strh	r0, [r5]
	ldr	r0, .L78+0xc
	ldr	r1, .L78+0x10
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r4, .L78+0x14
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L78+0x18
	ldrh	r1, [r5]
	lsl	r1, r1, #0x5
	add	r1, r1, r4
	bl	StringCopy
	b	.L77
.L79:
	.align	2, 0
.L78:
	.word	gSpecialVar_0x8006
	.word	gCurDecorationIndex
	.word	gCurDecorationItems
	.word	gStringVar3
	.word	gSpecialVar_0x8004
	.word	gDecorations+0x1
	.word	gStringVar2
.L76:
	ldr	r1, .L80
	ldr	r2, .L80+0x4
	add	r0, r2, #0
	strh	r0, [r1]
.L77:
	add	r0, r6, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L81:
	.align	2, 0
.L80:
	.word	gSpecialVar_0x8006
	.word	0xffff
.Lfe10:
	.size	 DecorationItemsMenuAction_Trade,.Lfe10-DecorationItemsMenuAction_Trade
	.align	2, 0
	.globl	ExitTraderMenu
	.type	 ExitTraderMenu,function
	.thumb_func
ExitTraderMenu:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L83
	mov	r1, #0x0
	strh	r1, [r2]
	bl	DestroyTask
	bl	EnableBothScriptContexts
	pop	{r0}
	bx	r0
.L84:
	.align	2, 0
.L83:
	.word	gSpecialVar_0x8006
.Lfe11:
	.size	 ExitTraderMenu,.Lfe11-ExitTraderMenu
	.align	2, 0
	.globl	ScrSpecial_TraderDoDecorationTrade
	.type	 ScrSpecial_TraderDoDecorationTrade,function
	.thumb_func
ScrSpecial_TraderDoDecorationTrade:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L86
	ldr	r6, [r0]
	ldr	r0, .L86+0x4
	add	r5, r6, r0
	ldr	r1, .L86+0x8
	mov	r8, r1
	ldrb	r0, [r1]
	bl	DecorationRemove
	ldr	r0, .L86+0xc
	ldrb	r0, [r0]
	bl	DecorationAdd
	ldr	r4, .L86+0x10
	ldrh	r1, [r4]
	mov	r0, #0xb
	mul	r0, r0, r1
	add	r0, r0, #0x5
	add	r5, r5, r0
	ldr	r0, .L86+0x14
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	StringCopy
	ldr	r2, .L86+0x18
	add	r0, r6, r2
	ldrh	r1, [r4]
	add	r0, r0, r1
	mov	r2, r8
	ldrh	r1, [r2]
	strb	r1, [r0]
	ldr	r1, .L86+0x1c
	add	r0, r6, r1
	ldrh	r4, [r4]
	add	r0, r0, r4
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r2, .L86+0x20
	add	r6, r6, r2
	mov	r0, #0x1
	strb	r0, [r6]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L87:
	.align	2, 0
.L86:
	.word	gSaveBlock1Ptr
	.word	0x2aa8
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	gSaveBlock2Ptr
	.word	0x2aa9
	.word	0x2ada
	.word	0x2ad9
.Lfe12:
	.size	 ScrSpecial_TraderDoDecorationTrade,.Lfe12-ScrSpecial_TraderDoDecorationTrade
	.align	2, 0
	.globl	ScrSpecial_TraderMenuGetDecoration
	.type	 ScrSpecial_TraderMenuGetDecoration,function
	.thumb_func
ScrSpecial_TraderMenuGetDecoration:
	push	{lr}
	ldr	r0, .L89
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CreateAvailableDecorationsMenu
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	Task_HandleGetDecorationMenuInput
.Lfe13:
	.size	 ScrSpecial_TraderMenuGetDecoration,.Lfe13-ScrSpecial_TraderMenuGetDecoration
.text
	.align	2, 0

