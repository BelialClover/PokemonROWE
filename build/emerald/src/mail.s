@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sMailRead,object
	.size	 sMailRead,4
sMailRead:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sUnknown_0859F290,object
	.size	 sUnknown_0859F290,12
sUnknown_0859F290:
	.byte	0xf8
	.byte	0x1
	.space	2
	.byte	0xe1
	.byte	0x11
	.space	2
	.byte	0xd2
	.byte	0x21
	.space	2
	.align	2, 0
	.type	 sUnknown_0859F29C,object
sUnknown_0859F29C:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x1a
	.byte	0xf
	.byte	0xf
	.short	0x1
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sUnknown_0859F29C,16
	.type	 sTextColors,object
sTextColors:
	.byte	0x0
	.byte	0xa
	.byte	0xb
	.size	 sTextColors,3
	.align	1, 0
	.type	 sUnknown_0859F2B0,object
sUnknown_0859F2B0:
	.short	0x6acd
	.short	0x51a5
	.short	0x45fc
	.short	0x38d4
	.size	 sUnknown_0859F2B0,8
	.align	2, 0
	.type	 sUnknown_0859F2B8,object
sUnknown_0859F2B8:
	.word	gMailPalette_Orange
	.word	gMailTiles_Orange
	.word	gMailTilemap_Orange
	.short	0x2c0
	.short	0x0
	.short	0x294a
	.short	0x6739
	.word	gMailPalette_Harbor
	.word	gMailTiles_Harbor
	.word	gMailTilemap_Harbor
	.short	0x2e0
	.short	0x0
	.short	0x7fff
	.short	0x4631
	.word	gMailPalette_Glitter
	.word	gMailTiles_Glitter
	.word	gMailTilemap_Glitter
	.short	0x400
	.short	0x0
	.short	0x294a
	.short	0x6739
	.word	gMailPalette_Mech
	.word	gMailTiles_Mech
	.word	gMailTilemap_Mech
	.short	0x1e0
	.short	0x0
	.short	0x7fff
	.short	0x4631
	.word	gMailPalette_Wood
	.word	gMailTiles_Wood
	.word	gMailTilemap_Wood
	.short	0x2e0
	.short	0x0
	.short	0x7fff
	.short	0x4631
	.word	gMailPalette_Wave
	.word	gMailTiles_Wave
	.word	gMailTilemap_Wave
	.short	0x300
	.short	0x0
	.short	0x294a
	.short	0x6739
	.word	gMailPalette_Bead
	.word	gMailTiles_Bead
	.word	gMailTilemap_Bead
	.short	0x140
	.short	0x0
	.short	0x7fff
	.short	0x4631
	.word	gMailPalette_Shadow
	.word	gMailTiles_Shadow
	.word	gMailTilemap_Shadow
	.short	0x300
	.short	0x0
	.short	0x7fff
	.short	0x4631
	.word	gMailPalette_Tropic
	.word	gMailTiles_Tropic
	.word	gMailTilemap_Tropic
	.short	0x220
	.short	0x0
	.short	0x294a
	.short	0x6739
	.word	gMailPalette_Dream
	.word	gMailTiles_Dream
	.word	gMailTilemap_Dream
	.short	0x340
	.short	0x0
	.short	0x294a
	.short	0x6739
	.word	gMailPalette_Fab
	.word	gMailTiles_Fab
	.word	gMailTilemap_Fab
	.short	0x2a0
	.short	0x0
	.short	0x294a
	.short	0x6739
	.word	gMailPalette_Retro
	.word	gMailTiles_Retro
	.word	gMailTilemap_Retro
	.short	0x520
	.short	0x0
	.short	0x294a
	.short	0x6739
	.size	 sUnknown_0859F2B8,240
	.align	2, 0
	.type	 Unknown_0859F3A8,object
	.size	 Unknown_0859F3A8,12
Unknown_0859F3A8:
	.byte	0x3
	.byte	0x10
	.space	2
	.byte	0x3
	.byte	0x10
	.space	2
	.byte	0x3
	.byte	0x10
	.space	2
	.align	2, 0
	.type	 sUnknown_0859F3B4,object
sUnknown_0859F3B4:
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x8
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.space	3
	.word	Unknown_0859F3A8
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.space	3
	.word	Unknown_0859F3A8
	.size	 sUnknown_0859F3B4,144
	.align	2, 0
	.type	 Unknown_0859F444,object
	.size	 Unknown_0859F444,20
Unknown_0859F444:
	.byte	0x2
	.byte	0x10
	.space	2
	.byte	0x2
	.byte	0x10
	.space	2
	.byte	0x2
	.byte	0x10
	.space	2
	.byte	0x2
	.byte	0x10
	.space	2
	.byte	0x1
	.byte	0x10
	.space	2
	.align	2, 0
	.type	 sUnknown_0859F458,object
sUnknown_0859F458:
	.byte	0x5
	.byte	0x7
	.byte	0x58
	.byte	0xb
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0xa
	.byte	0x60
	.byte	0x9
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0xc
	.byte	0x68
	.byte	0x5
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0x5
	.byte	0x60
	.byte	0x8
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0xa
	.byte	0x60
	.byte	0x9
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0x9
	.byte	0x70
	.byte	0x5
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0xc
	.byte	0x68
	.byte	0x9
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0xd
	.byte	0x68
	.byte	0xd
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0x9
	.byte	0x60
	.byte	0x9
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0x9
	.byte	0x60
	.byte	0x9
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0x11
	.byte	0x68
	.byte	0xf
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.byte	0x5
	.byte	0x9
	.byte	0x60
	.byte	0x5
	.byte	0x1e
	.space	3
	.word	Unknown_0859F444
	.size	 sUnknown_0859F458,144
.text
	.align	2, 0
	.globl	ReadMail
	.type	 ReadMail,function
	.thumb_func
ReadMail:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r4, .L18
	ldr	r0, .L18+0x4
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L18+0x8
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r2, .L18+0xc
	add	r0, r0, r2
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r4, [r4]
	mov	r3, #0x88
	lsl	r3, r3, #0x2
	add	r1, r4, r3
	ldr	r0, .L18+0x10
	str	r0, [r1]
	mov	r0, #0x89
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	ldr	r0, .L18+0x14
	str	r0, [r1]
	ldrh	r1, [r5, #0x20]
	add	r0, r1, #0
	sub	r0, r0, #0x84
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xb
	bhi	.L3	@cond_branch
	add	r1, r1, #0x7c
	sub	r2, r2, #0x4
	add	r0, r4, r2
	strb	r1, [r0]
	b	.L4
.L19:
	.align	2, 0
.L18:
	.word	sMailRead
	.word	0x222c
	.word	0x21d
	.word	0x21e
	.word	CopyEasyChatWord
	.word	ConvertEasyChatWordsToString
.L3:
	ldr	r3, .L20
	add	r1, r4, r3
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r6, #0x0
.L4:
	ldr	r0, .L20+0x4
	ldr	r1, [r0]
	ldr	r2, .L20+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L7	@cond_branch
	cmp	r0, #0x1
	beq	.L8	@cond_branch
.L7:
	mov	r3, #0x8a
	lsl	r3, r3, #0x2
	add	r2, r1, r3
	sub	r3, r3, #0xe
	add	r0, r1, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L20+0xc
	b	.L17
.L21:
	.align	2, 0
.L20:
	.word	0x21a
	.word	sMailRead
	.word	0x21e
	.word	sUnknown_0859F3B4
.L8:
	mov	r0, #0x8a
	lsl	r0, r0, #0x2
	add	r2, r1, r0
	ldr	r3, .L22
	add	r0, r1, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L22+0x4
.L17:
	add	r0, r0, r1
	str	r0, [r2]
	ldrh	r0, [r5, #0x1e]
	mov	r1, sp
	bl	MailSpeciesToSpecies
	lsl	r0, r0, #0x10
	ldr	r1, .L22+0x8
	add	r0, r0, r1
	ldr	r1, .L22+0xc
	cmp	r0, r1
	bhi	.L10	@cond_branch
	ldr	r1, .L22+0x10
	ldr	r2, [r1]
	ldr	r3, .L22
	add	r0, r2, r3
	ldrb	r0, [r0]
	add	r3, r1, #0
	cmp	r0, #0x6
	beq	.L13	@cond_branch
	cmp	r0, #0x9
	beq	.L14	@cond_branch
	ldr	r0, .L22+0x14
	add	r1, r2, r0
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L16
.L23:
	.align	2, 0
.L22:
	.word	0x21a
	.word	sUnknown_0859F458
	.word	-0x10000
	.word	0x4b50000
	.word	sMailRead
	.word	0x21b
.L13:
	ldr	r0, .L24
	add	r1, r2, r0
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L16
.L25:
	.align	2, 0
.L24:
	.word	0x21b
.L14:
	ldr	r0, .L26
	add	r1, r2, r0
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L16
.L27:
	.align	2, 0
.L26:
	.word	0x21b
.L10:
	ldr	r0, .L28
	ldr	r1, [r0]
	ldr	r2, .L28+0x4
	add	r1, r1, r2
	mov	r2, #0x0
	strb	r2, [r1]
	add	r3, r0, #0
.L16:
	ldr	r1, [r3]
	mov	r3, #0x85
	lsl	r3, r3, #0x2
	add	r0, r1, r3
	str	r5, [r0]
	mov	r2, #0x83
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	str	r7, [r0]
	add	r3, r3, #0x4
	add	r0, r1, r3
	strb	r6, [r0]
	ldr	r0, .L28+0x8
	bl	SetMainCallback2
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L29:
	.align	2, 0
.L28:
	.word	sMailRead
	.word	0x21b
	.word	CB2_InitMailRead
.Lfe1:
	.size	 ReadMail,.Lfe1-ReadMail
	.align	2, 0
	.type	 MailReadBuildGraphics,function
	.thumb_func
MailReadBuildGraphics:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L66
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x12
	bls	.LCB266
	b	.L64	@long jump
.LCB266:
	lsl	r0, r0, #0x2
	ldr	r1, .L66+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L67:
	.align	2, 0
.L66:
	.word	gMain
	.word	.L61
	.align	2, 0
	.align	2, 0
.L61:
	.word	.L32
	.word	.L33
	.word	.L34
	.word	.L35
	.word	.L36
	.word	.L37
	.word	.L38
	.word	.L39
	.word	.L40
	.word	.L41
	.word	.L43
	.word	.L44
	.word	.L45
	.word	.L46
	.word	.L48
	.word	.L50
	.word	.L52
	.word	.L53
	.word	.L59
.L32:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	mov	r0, #0x0
	b	.L63
.L33:
	add	r1, sp, #0x8
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	ldr	r2, .L68
	add	r0, sp, #0x8
	bl	CpuSet
	b	.L31
.L69:
	.align	2, 0
.L68:
	.word	0x1000200
.L34:
	bl	ResetPaletteFade
	b	.L31
.L35:
	bl	ResetTasks
	b	.L31
.L36:
	bl	ResetSpriteData
	b	.L31
.L37:
	bl	FreeAllSpritePalettes
	bl	ResetTempTileDataBuffers
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
.L63:
	mov	r1, #0x0
	bl	SetGpuReg
	b	.L31
.L38:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L70
	mov	r0, #0x0
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r4, .L70+0x4
	ldr	r1, [r4]
	mov	r2, #0x8b
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L70+0x8
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	b	.L31
.L71:
	.align	2, 0
.L70:
	.word	sUnknown_0859F290
	.word	sMailRead
	.word	0x122c
.L39:
	ldr	r0, .L72
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	b	.L31
.L73:
	.align	2, 0
.L72:
	.word	sUnknown_0859F29C
.L40:
	ldr	r2, .L74
	ldr	r0, .L74+0x4
	ldr	r0, [r0]
	ldr	r1, .L74+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x4
	add	r0, r0, r2
	ldr	r1, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L31
.L75:
	.align	2, 0
.L74:
	.word	sUnknown_0859F2B8
	.word	sMailRead
	.word	0x21a
.L41:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB445
	b	.L31	@long jump
.LCB445:
	b	.L64
.L43:
	mov	r5, #0x1e
	str	r5, [sp]
	mov	r4, #0x14
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	ldr	r2, .L76
	ldr	r0, .L76+0x4
	ldr	r0, [r0]
	ldr	r1, .L76+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r1, [r0]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L31
.L77:
	.align	2, 0
.L76:
	.word	sUnknown_0859F2B8
	.word	sMailRead
	.word	0x21a
.L44:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	b	.L31
.L45:
	bl	GetOverworldTextboxPalettePtr
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r6, .L78
	ldr	r4, .L78+0x4
	ldr	r0, .L78+0x8
	ldr	r3, [r0]
	ldr	r2, .L78+0xc
	add	r3, r3, r2
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r1, [r0, #0x10]
	sub	r2, r2, #0x26
	add	r0, r6, r2
	strh	r1, [r0]
	ldr	r5, .L78+0x10
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x10]
	add	r2, r5, r2
	strh	r0, [r2]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r1, [r0, #0x12]
	mov	r2, #0xfb
	lsl	r2, r2, #0x1
	add	r0, r6, r2
	strh	r1, [r0]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x12]
	add	r2, r5, r2
	strh	r0, [r2]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L78+0x14
	ldr	r0, .L78+0x18
	ldr	r2, [r0]
	ldrb	r0, [r2, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r6, #0x14]
	ldrb	r0, [r2, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r5, #0x14]
	ldrb	r0, [r2, #0x8]
	lsl	r0, r0, #0x2
	add	r1, r1, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r6, #0x16]
	ldrb	r0, [r2, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r5, #0x16]
	b	.L31
.L79:
	.align	2, 0
.L78:
	.word	gPlttBufferUnfaded
	.word	sUnknown_0859F2B8
	.word	sMailRead
	.word	0x21a
	.word	gPlttBufferFaded
	.word	sUnknown_0859F2B0
	.word	gSaveBlock2Ptr
.L46:
	ldr	r0, .L80
	ldr	r0, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB620
	b	.L31	@long jump
.LCB620:
	bl	sub_8121A1C
	b	.L31
.L81:
	.align	2, 0
.L80:
	.word	sMailRead
.L48:
	ldr	r0, .L82
	ldr	r0, [r0]
	mov	r2, #0x86
	lsl	r2, r2, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB642
	b	.L31	@long jump
.LCB642:
	bl	sub_8121B1C
	bl	RunTextPrinters
	b	.L31
.L83:
	.align	2, 0
.L82:
	.word	sMailRead
.L50:
	bl	sub_8087598
	cmp	r0, #0x1
	bne	.L31	@cond_branch
	b	.L64
.L52:
	ldr	r0, .L84
	bl	SetVBlankCallback
	ldr	r2, .L84+0x4
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	b	.L31
.L85:
	.align	2, 0
.L84:
	.word	VBlankCB_MailRead
	.word	gPaletteFade
.L53:
	ldr	r5, .L86
	ldr	r0, [r5]
	mov	r1, #0x85
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x1e]
	bl	sub_80D2E84
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, [r5]
	ldr	r2, .L86+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L55	@cond_branch
	cmp	r0, #0x2
	beq	.L56	@cond_branch
	b	.L31
.L87:
	.align	2, 0
.L86:
	.word	sMailRead
	.word	0x21b
.L55:
	add	r0, r4, #0
	bl	LoadMonIconPalette
	ldr	r1, .L88
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, #0x60
	b	.L65
.L89:
	.align	2, 0
.L88:
	.word	SpriteCallbackDummy
.L56:
	add	r0, r4, #0
	bl	LoadMonIconPalette
	ldr	r1, .L90
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, #0x28
.L65:
	mov	r3, #0x80
	bl	sub_80D2D78
	ldr	r1, [r5]
	mov	r2, #0x87
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L31
.L91:
	.align	2, 0
.L90:
	.word	SpriteCallbackDummy
.L59:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L92
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L92+0x4
	ldr	r0, [r0]
	mov	r1, #0x84
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r1, .L92+0x8
	str	r1, [r0]
	mov	r0, #0x1
	b	.L62
.L93:
	.align	2, 0
.L92:
	.word	gPaletteFade
	.word	sMailRead
	.word	CB2_WaitForPaletteExitOnKeyPress
.L31:
	ldr	r1, .L94
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L64:
	mov	r0, #0x0
.L62:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L95:
	.align	2, 0
.L94:
	.word	gMain
.Lfe2:
	.size	 MailReadBuildGraphics,.Lfe2-MailReadBuildGraphics
	.align	2, 0
	.type	 CB2_InitMailRead,function
	.thumb_func
CB2_InitMailRead:
	push	{lr}
.L97:
	bl	MailReadBuildGraphics
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L99	@cond_branch
	ldr	r0, .L103
	bl	SetMainCallback2
	b	.L98
.L104:
	.align	2, 0
.L103:
	.word	CB2_MailRead
.L99:
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L97	@cond_branch
.L98:
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 CB2_InitMailRead,.Lfe3-CB2_InitMailRead
	.align	2, 0
	.type	 sub_8121A1C,function
	.thumb_func
sub_8121A1C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r2, .L113
	ldr	r0, [r2]
	mov	r1, #0x8a
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L107	@cond_branch
	mov	r8, r2
	add	r7, r1, #0
.L109:
	lsl	r0, r5, #0x6
	mov	r1, r8
	ldr	r2, [r1]
	add	r0, r2, r0
	mov	r3, #0x85
	lsl	r3, r3, #0x2
	add	r1, r2, r3
	lsl	r3, r6, #0x1
	ldr	r1, [r1]
	add	r1, r1, r3
	add	r2, r2, r7
	ldr	r2, [r2]
	ldr	r2, [r2, #0x8]
	lsl	r4, r5, #0x2
	add	r2, r4, r2
	ldr	r2, [r2]
	lsl	r2, r2, #0x1e
	lsr	r2, r2, #0x1e
	mov	r3, #0x1
	bl	ConvertEasyChatWordsToString
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r7
	ldr	r1, [r0]
	ldr	r0, [r1, #0x8]
	add	r4, r4, r0
	ldr	r0, [r4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	add	r0, r6, r0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldrb	r1, [r1]
	cmp	r5, r1
	bcc	.L109	@cond_branch
.L107:
	ldr	r4, .L113
	ldr	r1, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	mov	r3, #0x85
	lsl	r3, r3, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	add	r1, r1, #0x12
	bl	StringCopy
	add	r2, r0, #0
	ldr	r1, [r4]
	ldr	r3, .L113+0x4
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L111	@cond_branch
	ldr	r1, .L113+0x8
	add	r0, r2, #0
	bl	StringCopy
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	bl	StringLength
	ldr	r2, [r4]
	mov	r3, #0x8a
	lsl	r3, r3, #0x2
	add	r1, r2, r3
	ldr	r1, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0xd
	sub	r0, r0, #0x60
	ldrb	r1, [r1, #0x2]
	sub	r1, r1, r0
	ldr	r0, .L113+0xc
	add	r2, r2, r0
	strb	r1, [r2]
	b	.L112
.L114:
	.align	2, 0
.L113:
	.word	sMailRead
	.word	0x21e
	.word	gText_FromSpace
	.word	0x219
.L111:
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	bl	sub_81DB52C
	ldr	r0, [r4]
	mov	r3, #0x8a
	lsl	r3, r3, #0x2
	add	r1, r0, r3
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x2]
	ldr	r2, .L115
	add	r0, r0, r2
	strb	r1, [r0]
.L112:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	0x219
.Lfe4:
	.size	 sub_8121A1C,.Lfe4-sub_8121A1C
	.align	2, 0
	.type	 sub_8121B1C,function
	.thumb_func
sub_8121B1C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x2c
	mov	r7, #0x0
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r6, #0x0
	ldr	r1, .L125
	ldr	r0, [r1]
	mov	r2, #0x8a
	lsl	r2, r2, #0x2
	mov	sl, r2
	add	r0, r0, sl
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L119	@cond_branch
	mov	r9, r1
	mov	r8, sl
.L121:
	mov	r0, r9
	ldr	r1, [r0]
	lsl	r0, r6, #0x6
	add	r5, r1, r0
	ldrb	r0, [r5]
	cmp	r0, #0xff
	beq	.L120	@cond_branch
	cmp	r0, #0
	beq	.L120	@cond_branch
	mov	r2, r8
	add	r0, r1, r2
	ldr	r1, [r0]
	ldr	r0, [r1, #0x8]
	lsl	r4, r6, #0x2
	add	r0, r4, r0
	ldr	r2, [r0]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x1a
	ldrb	r0, [r1, #0x4]
	add	r2, r2, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r1, #0x3]
	add	r3, r7, r3
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L125+0x4
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	bl	AddTextPrinterParameterized3
	mov	r1, r9
	ldr	r0, [r1]
	add	r0, r0, r8
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	add	r4, r4, r0
	ldrb	r0, [r4, #0x1]
	add	r0, r7, r0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L120:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r2, .L125
	ldr	r0, [r2]
	add	r0, r0, sl
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L121	@cond_branch
.L119:
	ldr	r1, .L125+0x8
	add	r0, sp, #0xc
	bl	StringCopy
	ldr	r4, .L125
	ldr	r1, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, [r4]
	ldr	r1, .L125+0xc
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r0, #0x1
	add	r1, sp, #0xc
	bl	GetStringCenterAlignXOffset
	add	r2, r0, #0
	add	r2, r2, #0x68
	ldr	r0, [r4]
	mov	r1, #0x8a
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldrb	r3, [r0, #0x1]
	add	r3, r3, #0x58
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L125+0x4
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	bl	AddTextPrinterParameterized3
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x2c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	sMailRead
	.word	sTextColors
	.word	gText_FromSpace
	.word	0x219
.Lfe5:
	.size	 sub_8121B1C,.Lfe5-sub_8121B1C
	.align	2, 0
	.type	 VBlankCB_MailRead,function
	.thumb_func
VBlankCB_MailRead:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 VBlankCB_MailRead,.Lfe6-VBlankCB_MailRead
	.align	2, 0
	.type	 CB2_MailRead,function
	.thumb_func
CB2_MailRead:
	push	{r4, lr}
	ldr	r4, .L130
	ldr	r0, [r4]
	ldr	r1, .L130+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L129	@cond_branch
	bl	AnimateSprites
	bl	BuildOamBuffer
.L129:
	ldr	r0, [r4]
	mov	r1, #0x84
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r4}
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	sMailRead
	.word	0x21b
.Lfe7:
	.size	 CB2_MailRead,.Lfe7-CB2_MailRead
	.align	2, 0
	.type	 CB2_WaitForPaletteExitOnKeyPress,function
	.thumb_func
CB2_WaitForPaletteExitOnKeyPress:
	push	{lr}
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L133	@cond_branch
	ldr	r0, .L134
	ldr	r0, [r0]
	mov	r1, #0x84
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r1, .L134+0x4
	str	r1, [r0]
.L133:
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	sMailRead
	.word	CB2_ExitOnKeyPress
.Lfe8:
	.size	 CB2_WaitForPaletteExitOnKeyPress,.Lfe8-CB2_WaitForPaletteExitOnKeyPress
	.align	2, 0
	.type	 CB2_ExitOnKeyPress,function
	.thumb_func
CB2_ExitOnKeyPress:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L138
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L137	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L138+0x4
	ldr	r0, [r0]
	mov	r1, #0x84
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r1, .L138+0x8
	str	r1, [r0]
.L137:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L139:
	.align	2, 0
.L138:
	.word	gMain
	.word	sMailRead
	.word	CB2_ExitMailReadFreeVars
.Lfe9:
	.size	 CB2_ExitOnKeyPress,.Lfe9-CB2_ExitOnKeyPress
	.align	2, 0
	.type	 CB2_ExitMailReadFreeVars,function
	.thumb_func
CB2_ExitMailReadFreeVars:
	push	{r4, lr}
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L141	@cond_branch
	ldr	r4, .L147
	ldr	r0, [r4]
	mov	r1, #0x83
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	SetMainCallback2
	ldr	r1, [r4]
	ldr	r2, .L147+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bgt	.L142	@cond_branch
	cmp	r0, #0x1
	blt	.L142	@cond_branch
	sub	r2, r2, #0x7
	add	r0, r1, r2
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x1e]
	bl	sub_80D2E84
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FreeMonIconPalette
	ldr	r0, [r4]
	mov	r1, #0x87
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L147+0x8
	add	r0, r0, r1
	bl	FreeAndDestroyMonIconSprite
.L142:
	ldr	r4, .L147
	ldr	r0, [r4]
	ldr	r2, .L147+0xc
	mov	r1, #0x0
	bl	memset
	bl	ResetPaletteFade
	mov	r0, #0x0
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	bl	FreeAllWindowBuffers
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L141:
	pop	{r4}
	pop	{r0}
	bx	r0
.L148:
	.align	2, 0
.L147:
	.word	sMailRead
	.word	0x21b
	.word	gSprites
	.word	0x222c
.Lfe10:
	.size	 CB2_ExitMailReadFreeVars,.Lfe10-CB2_ExitMailReadFreeVars
.text
	.align	2, 0

