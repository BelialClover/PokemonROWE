@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sVerdanturfTentFuncs,object
sVerdanturfTentFuncs:
	.word	InitVerdanturfTentChallenge
	.word	GetVerdanturfTentPrize
	.word	SetVerdanturfTentPrize
	.word	SetVerdanturfTentTrainerGfx
	.word	BufferVerdanturfTentTrainerIntro
	.word	SaveVerdanturfTentChallenge
	.word	SetRandomVerdanturfTentPrize
	.word	GiveVerdanturfTentPrize
	.size	 sVerdanturfTentFuncs,32
	.align	1, 0
	.type	 sVerdanturfTentRewards,object
sVerdanturfTentRewards:
	.short	0x8
	.size	 sVerdanturfTentRewards,2
	.align	2, 0
	.type	 sFallarborTentFuncs,object
sFallarborTentFuncs:
	.word	InitFallarborTentChallenge
	.word	GetFallarborTentPrize
	.word	SetFallarborTentPrize
	.word	SaveFallarborTentChallenge
	.word	SetRandomFallarborTentPrize
	.word	GiveFallarborTentPrize
	.word	BufferFallarborTentTrainerName
	.size	 sFallarborTentFuncs,28
	.align	1, 0
	.type	 sFallarborTentRewards,object
sFallarborTentRewards:
	.short	0x24
	.size	 sFallarborTentRewards,2
	.align	2, 0
	.type	 sSlateportTentFuncs,object
sSlateportTentFuncs:
	.word	InitSlateportTentChallenge
	.word	GetSlateportTentPrize
	.word	SetSlateportTentPrize
	.word	SaveSlateportTentChallenge
	.word	SetRandomSlateportTentPrize
	.word	GiveSlateportTentPrize
	.word	SelectInitialRentalMons
	.word	SwapRentalMons
	.word	GenerateOpponentMons
	.word	GenerateInitialRentalMons
	.size	 sSlateportTentFuncs,40
	.align	1, 0
	.type	 sSlateportTentRewards,object
sSlateportTentRewards:
	.short	0x26
	.size	 sSlateportTentRewards,2
.text
	.align	2, 0
	.globl	CallVerdanturfTentFunction
	.type	 CallVerdanturfTentFunction,function
	.thumb_func
CallVerdanturfTentFunction:
	push	{lr}
	ldr	r1, .L3
	ldr	r0, .L3+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	sVerdanturfTentFuncs
	.word	gSpecialVar_0x8004
.Lfe1:
	.size	 CallVerdanturfTentFunction,.Lfe1-CallVerdanturfTentFunction
	.align	2, 0
	.type	 InitVerdanturfTentChallenge,function
	.thumb_func
InitVerdanturfTentChallenge:
	push	{lr}
	ldr	r1, .L6
	ldr	r0, [r1]
	mov	r2, #0xc3
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r1, [r1]
	ldr	r3, .L6+0x4
	add	r0, r1, r3
	strh	r2, [r0]
	ldr	r0, .L6+0x8
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, .L6+0xc
	ldr	r0, [r0]
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	mov	r2, #0x5
	ldrsb	r2, [r0, r2]
	mov	r3, #0x1
	neg	r3, r3
	mov	r0, #0x0
	bl	SetDynamicWarp
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gSaveBlock2Ptr
	.word	0xc3a
	.word	0xc31
	.word	gSaveBlock1Ptr
.Lfe2:
	.size	 InitVerdanturfTentChallenge,.Lfe2-InitVerdanturfTentChallenge
	.align	2, 0
	.type	 GetVerdanturfTentPrize,function
	.thumb_func
GetVerdanturfTentPrize:
	ldr	r1, .L9
	ldr	r0, .L9+0x4
	ldr	r0, [r0]
	ldr	r2, .L9+0x8
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r1]
	bx	lr
.L10:
	.align	2, 0
.L9:
	.word	gSpecialVar_Result
	.word	gSaveBlock2Ptr
	.word	0xdf2
.Lfe3:
	.size	 GetVerdanturfTentPrize,.Lfe3-GetVerdanturfTentPrize
	.align	2, 0
	.type	 SetVerdanturfTentPrize,function
	.thumb_func
SetVerdanturfTentPrize:
	ldr	r0, .L12
	ldr	r0, [r0]
	ldr	r1, .L12+0x4
	ldrh	r1, [r1]
	ldr	r2, .L12+0x8
	add	r0, r0, r2
	strh	r1, [r0]
	bx	lr
.L13:
	.align	2, 0
.L12:
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8006
	.word	0xdf2
.Lfe4:
	.size	 SetVerdanturfTentPrize,.Lfe4-SetVerdanturfTentPrize
	.align	2, 0
	.type	 SetVerdanturfTentTrainerGfx,function
	.thumb_func
SetVerdanturfTentTrainerGfx:
	push	{r4, lr}
	ldr	r4, .L15
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xff
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsr	r1, r1, #0x6
	strh	r1, [r4]
	ldrh	r0, [r4]
	mov	r1, #0x0
	bl	SetBattleFacilityTrainerGfxId
	pop	{r4}
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	gTrainerBattleOpponent_A
.Lfe5:
	.size	 SetVerdanturfTentTrainerGfx,.Lfe5-SetVerdanturfTentTrainerGfx
	.align	2, 0
	.type	 BufferVerdanturfTentTrainerIntro,function
	.thumb_func
BufferVerdanturfTentTrainerIntro:
	push	{lr}
	ldr	r3, .L19
	ldrh	r1, [r3]
	ldr	r0, .L19+0x4
	cmp	r1, r0
	bhi	.L18	@cond_branch
	ldr	r2, .L19+0x8
	mov	r0, #0x34
	mul	r1, r1, r0
	ldr	r0, [r2]
	add	r0, r0, r1
	add	r0, r0, #0xc
	bl	FrontierSpeechToString
.L18:
	pop	{r0}
	bx	r0
.L20:
	.align	2, 0
.L19:
	.word	gTrainerBattleOpponent_A
	.word	0x12b
	.word	gFacilityTrainers
.Lfe6:
	.size	 BufferVerdanturfTentTrainerIntro,.Lfe6-BufferVerdanturfTentTrainerIntro
	.align	2, 0
	.type	 SaveVerdanturfTentChallenge,function
	.thumb_func
SaveVerdanturfTentChallenge:
	push	{r4, lr}
	ldr	r4, .L22
	ldr	r0, [r4]
	ldr	r1, .L22+0x4
	ldrh	r1, [r1]
	mov	r2, #0xc3
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	strb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	mov	r1, #0x0
	bl	VarSet
	ldr	r1, [r4]
	ldr	r0, .L22+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	bl	SaveGameFrontier
	pop	{r4}
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8005
	.word	0xc31
.Lfe7:
	.size	 SaveVerdanturfTentChallenge,.Lfe7-SaveVerdanturfTentChallenge
	.align	2, 0
	.type	 SetRandomVerdanturfTentPrize,function
	.thumb_func
SetRandomVerdanturfTentPrize:
	push	{r4, r5, lr}
	ldr	r0, .L25
	ldr	r4, [r0]
	ldr	r5, .L25+0x4
	bl	Random
	ldrh	r0, [r5]
	ldr	r1, .L25+0x8
	add	r4, r4, r1
	strh	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	gSaveBlock2Ptr
	.word	sVerdanturfTentRewards
	.word	0xdf2
.Lfe8:
	.size	 SetRandomVerdanturfTentPrize,.Lfe8-SetRandomVerdanturfTentPrize
	.align	2, 0
	.type	 GiveVerdanturfTentPrize,function
	.thumb_func
GiveVerdanturfTentPrize:
	push	{r4, r5, lr}
	ldr	r4, .L30
	ldr	r0, [r4]
	ldr	r1, .L30+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bne	.L28	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L30+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L30+0x8
	bl	CopyItemName
	ldr	r0, [r4]
	ldr	r1, .L30+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L30+0xc
	strh	r5, [r0]
	b	.L29
.L31:
	.align	2, 0
.L30:
	.word	gSaveBlock2Ptr
	.word	0xdf2
	.word	gStringVar1
	.word	gSpecialVar_Result
.L28:
	ldr	r1, .L32
	mov	r0, #0x0
	strh	r0, [r1]
.L29:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	gSpecialVar_Result
.Lfe9:
	.size	 GiveVerdanturfTentPrize,.Lfe9-GiveVerdanturfTentPrize
	.align	2, 0
	.globl	CallFallarborTentFunction
	.type	 CallFallarborTentFunction,function
	.thumb_func
CallFallarborTentFunction:
	push	{lr}
	ldr	r1, .L35
	ldr	r0, .L35+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	sFallarborTentFuncs
	.word	gSpecialVar_0x8004
.Lfe10:
	.size	 CallFallarborTentFunction,.Lfe10-CallFallarborTentFunction
	.align	2, 0
	.type	 InitFallarborTentChallenge,function
	.thumb_func
InitFallarborTentChallenge:
	push	{lr}
	ldr	r1, .L38
	ldr	r0, [r1]
	mov	r2, #0xc3
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r1, [r1]
	ldr	r3, .L38+0x4
	add	r0, r1, r3
	strh	r2, [r0]
	ldr	r0, .L38+0x8
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, .L38+0xc
	ldr	r0, [r0]
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	mov	r2, #0x5
	ldrsb	r2, [r0, r2]
	mov	r3, #0x1
	neg	r3, r3
	mov	r0, #0x0
	bl	SetDynamicWarp
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	gSaveBlock2Ptr
	.word	0xc3a
	.word	0xc31
	.word	gSaveBlock1Ptr
.Lfe11:
	.size	 InitFallarborTentChallenge,.Lfe11-InitFallarborTentChallenge
	.align	2, 0
	.type	 GetFallarborTentPrize,function
	.thumb_func
GetFallarborTentPrize:
	ldr	r1, .L41
	ldr	r0, .L41+0x4
	ldr	r0, [r0]
	ldr	r2, .L41+0x8
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r1]
	bx	lr
.L42:
	.align	2, 0
.L41:
	.word	gSpecialVar_Result
	.word	gSaveBlock2Ptr
	.word	0xdf4
.Lfe12:
	.size	 GetFallarborTentPrize,.Lfe12-GetFallarborTentPrize
	.align	2, 0
	.type	 SetFallarborTentPrize,function
	.thumb_func
SetFallarborTentPrize:
	ldr	r0, .L44
	ldr	r0, [r0]
	ldr	r1, .L44+0x4
	ldrh	r1, [r1]
	ldr	r2, .L44+0x8
	add	r0, r0, r2
	strh	r1, [r0]
	bx	lr
.L45:
	.align	2, 0
.L44:
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8006
	.word	0xdf4
.Lfe13:
	.size	 SetFallarborTentPrize,.Lfe13-SetFallarborTentPrize
	.align	2, 0
	.type	 SaveFallarborTentChallenge,function
	.thumb_func
SaveFallarborTentChallenge:
	push	{r4, lr}
	ldr	r4, .L47
	ldr	r0, [r4]
	ldr	r1, .L47+0x4
	ldrh	r1, [r1]
	mov	r2, #0xc3
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	strb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	mov	r1, #0x0
	bl	VarSet
	ldr	r1, [r4]
	ldr	r0, .L47+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	bl	SaveGameFrontier
	pop	{r4}
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8005
	.word	0xc31
.Lfe14:
	.size	 SaveFallarborTentChallenge,.Lfe14-SaveFallarborTentChallenge
	.align	2, 0
	.type	 SetRandomFallarborTentPrize,function
	.thumb_func
SetRandomFallarborTentPrize:
	push	{r4, r5, lr}
	ldr	r0, .L50
	ldr	r4, [r0]
	ldr	r5, .L50+0x4
	bl	Random
	ldrh	r0, [r5]
	ldr	r1, .L50+0x8
	add	r4, r4, r1
	strh	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	gSaveBlock2Ptr
	.word	sFallarborTentRewards
	.word	0xdf4
.Lfe15:
	.size	 SetRandomFallarborTentPrize,.Lfe15-SetRandomFallarborTentPrize
	.align	2, 0
	.type	 GiveFallarborTentPrize,function
	.thumb_func
GiveFallarborTentPrize:
	push	{r4, r5, lr}
	ldr	r4, .L55
	ldr	r0, [r4]
	ldr	r1, .L55+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bne	.L53	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L55+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L55+0x8
	bl	CopyItemName
	ldr	r0, [r4]
	ldr	r1, .L55+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L55+0xc
	strh	r5, [r0]
	b	.L54
.L56:
	.align	2, 0
.L55:
	.word	gSaveBlock2Ptr
	.word	0xdf4
	.word	gStringVar1
	.word	gSpecialVar_Result
.L53:
	ldr	r1, .L57
	mov	r0, #0x0
	strh	r0, [r1]
.L54:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	gSpecialVar_Result
.Lfe16:
	.size	 GiveFallarborTentPrize,.Lfe16-GiveFallarborTentPrize
	.align	2, 0
	.type	 BufferFallarborTentTrainerName,function
	.thumb_func
BufferFallarborTentTrainerName:
	push	{lr}
	ldr	r0, .L60
	ldr	r1, .L60+0x4
	ldrh	r1, [r1]
	bl	GetFrontierTrainerName
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	gStringVar1
	.word	gTrainerBattleOpponent_A
.Lfe17:
	.size	 BufferFallarborTentTrainerName,.Lfe17-BufferFallarborTentTrainerName
	.align	2, 0
	.globl	CallSlateportTentFunction
	.type	 CallSlateportTentFunction,function
	.thumb_func
CallSlateportTentFunction:
	push	{lr}
	ldr	r1, .L63
	ldr	r0, .L63+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L64:
	.align	2, 0
.L63:
	.word	sSlateportTentFuncs
	.word	gSpecialVar_0x8004
.Lfe18:
	.size	 CallSlateportTentFunction,.Lfe18-CallSlateportTentFunction
	.align	2, 0
	.type	 InitSlateportTentChallenge,function
	.thumb_func
InitSlateportTentChallenge:
	push	{lr}
	ldr	r1, .L66
	ldr	r0, [r1]
	mov	r2, #0xc3
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r1, [r1]
	ldr	r3, .L66+0x4
	add	r0, r1, r3
	strh	r2, [r0]
	ldr	r0, .L66+0x8
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, .L66+0xc
	ldr	r0, [r0]
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	mov	r2, #0x5
	ldrsb	r2, [r0, r2]
	mov	r3, #0x1
	neg	r3, r3
	mov	r0, #0x0
	bl	SetDynamicWarp
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	gSaveBlock2Ptr
	.word	0xc3a
	.word	0xc31
	.word	gSaveBlock1Ptr
.Lfe19:
	.size	 InitSlateportTentChallenge,.Lfe19-InitSlateportTentChallenge
	.align	2, 0
	.type	 GetSlateportTentPrize,function
	.thumb_func
GetSlateportTentPrize:
	ldr	r1, .L69
	ldr	r0, .L69+0x4
	ldr	r0, [r0]
	ldr	r2, .L69+0x8
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r1]
	bx	lr
.L70:
	.align	2, 0
.L69:
	.word	gSpecialVar_Result
	.word	gSaveBlock2Ptr
	.word	0xdf6
.Lfe20:
	.size	 GetSlateportTentPrize,.Lfe20-GetSlateportTentPrize
	.align	2, 0
	.type	 SetSlateportTentPrize,function
	.thumb_func
SetSlateportTentPrize:
	ldr	r0, .L72
	ldr	r0, [r0]
	ldr	r1, .L72+0x4
	ldrh	r1, [r1]
	ldr	r2, .L72+0x8
	add	r0, r0, r2
	strh	r1, [r0]
	bx	lr
.L73:
	.align	2, 0
.L72:
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8006
	.word	0xdf6
.Lfe21:
	.size	 SetSlateportTentPrize,.Lfe21-SetSlateportTentPrize
	.align	2, 0
	.type	 SaveSlateportTentChallenge,function
	.thumb_func
SaveSlateportTentChallenge:
	push	{r4, lr}
	ldr	r4, .L75
	ldr	r0, [r4]
	ldr	r1, .L75+0x4
	ldrh	r1, [r1]
	mov	r2, #0xc3
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	strb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	mov	r1, #0x0
	bl	VarSet
	ldr	r1, [r4]
	ldr	r0, .L75+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	bl	SaveGameFrontier
	pop	{r4}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8005
	.word	0xc31
.Lfe22:
	.size	 SaveSlateportTentChallenge,.Lfe22-SaveSlateportTentChallenge
	.align	2, 0
	.type	 SetRandomSlateportTentPrize,function
	.thumb_func
SetRandomSlateportTentPrize:
	push	{r4, r5, lr}
	ldr	r0, .L78
	ldr	r4, [r0]
	ldr	r5, .L78+0x4
	bl	Random
	ldrh	r0, [r5]
	ldr	r1, .L78+0x8
	add	r4, r4, r1
	strh	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L79:
	.align	2, 0
.L78:
	.word	gSaveBlock2Ptr
	.word	sSlateportTentRewards
	.word	0xdf6
.Lfe23:
	.size	 SetRandomSlateportTentPrize,.Lfe23-SetRandomSlateportTentPrize
	.align	2, 0
	.type	 GiveSlateportTentPrize,function
	.thumb_func
GiveSlateportTentPrize:
	push	{r4, r5, lr}
	ldr	r4, .L83
	ldr	r0, [r4]
	ldr	r1, .L83+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bne	.L81	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L83+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L83+0x8
	bl	CopyItemName
	ldr	r0, [r4]
	ldr	r1, .L83+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L83+0xc
	strh	r5, [r0]
	b	.L82
.L84:
	.align	2, 0
.L83:
	.word	gSaveBlock2Ptr
	.word	0xdf6
	.word	gStringVar1
	.word	gSpecialVar_Result
.L81:
	ldr	r1, .L85
	mov	r0, #0x0
	strh	r0, [r1]
.L82:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gSpecialVar_Result
.Lfe24:
	.size	 GiveSlateportTentPrize,.Lfe24-GiveSlateportTentPrize
	.align	2, 0
	.type	 SelectInitialRentalMons,function
	.thumb_func
SelectInitialRentalMons:
	push	{lr}
	bl	ZeroPlayerPartyMons
	bl	DoBattleFactorySelectScreen
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 SelectInitialRentalMons,.Lfe25-SelectInitialRentalMons
	.align	2, 0
	.type	 SwapRentalMons,function
	.thumb_func
SwapRentalMons:
	push	{lr}
	bl	DoBattleFactorySwapScreen
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 SwapRentalMons,.Lfe26-SwapRentalMons
	.align	2, 0
	.globl	InSlateportBattleTent
	.type	 InSlateportBattleTent,function
	.thumb_func
InSlateportBattleTent:
	push	{lr}
	mov	r2, #0x0
	ldr	r1, .L91
	ldrb	r0, [r1, #0x14]
	cmp	r0, #0x8
	bne	.L90	@cond_branch
	ldr	r3, .L91+0x4
	add	r0, r3, #0
	ldrh	r1, [r1, #0x12]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L90	@cond_branch
	mov	r2, #0x1
.L90:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L92:
	.align	2, 0
.L91:
	.word	gMapHeader
	.word	-0x181
.Lfe27:
	.size	 InSlateportBattleTent,.Lfe27-InSlateportBattleTent
	.align	2, 0
	.type	 GenerateInitialRentalMons,function
	.thumb_func
GenerateInitialRentalMons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x3c
	ldr	r1, .L121
	ldr	r0, .L121+0x4
	str	r0, [r1]
	add	r0, sp, #0xc
	mov	r9, r0
	mov	r1, sp
	add	r1, r1, #0x18
	str	r1, [sp, #0x2c]
	ldr	r5, .L121+0x8
	ldr	r4, .L121+0xc
	mov	r2, #0x0
	add	r3, r1, #0
	mov	r1, r9
	mov	r0, sp
	mov	r6, #0x5
	mov	r8, r6
.L97:
	strh	r2, [r0]
	strh	r2, [r1]
	strh	r2, [r3]
	add	r3, r3, #0x2
	add	r1, r1, #0x2
	add	r0, r0, #0x2
	mov	r7, #0x1
	neg	r7, r7
	add	r8, r8, r7
	mov	r6, r8
	cmp	r6, #0
	bge	.L97	@cond_branch
	str	r4, [r5]
	mov	r7, #0x0
	mov	sl, r7
	mov	r0, #0x0
	mov	r8, r0
	ldr	r1, [sp, #0x2c]
	str	r1, [sp, #0x30]
	mov	r2, sp
	str	r2, [sp, #0x34]
	lsl	r6, r0, #0x1
	str	r6, [sp, #0x24]
	add	r6, r6, r9
	str	r6, [sp, #0x28]
.L101:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x46
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r2, #0x0
	mov	r7, r8
	add	r6, r2, r7
	cmp	r2, r6
	bge	.L103	@cond_branch
	ldr	r1, [sp, #0x28]
	ldrh	r0, [r1]
	cmp	r0, r5
	beq	.L103	@cond_branch
	ldr	r0, .L121+0x8
	ldr	r1, [r0]
	lsl	r0, r5, #0x4
	add	r4, r0, r1
	ldrh	r7, [r4]
	mov	ip, r7
	lsl	r3, r2, #0x1
	ldr	r1, [sp, #0x24]
	add	r1, r1, sp
	str	r6, [sp, #0x38]
.L106:
	ldrh	r0, [r1]
	cmp	r0, ip
	bne	.L104	@cond_branch
	mov	r0, sl
	cmp	r0, #0
	bne	.L103	@cond_branch
	ldrh	r7, [r4]
	mov	sl, r7
.L104:
	add	r3, r3, #0x2
	add	r1, r1, #0x2
	add	r2, r2, #0x1
	ldr	r0, [sp, #0x38]
	cmp	r2, r0
	bge	.L103	@cond_branch
	mov	r7, r9
	add	r0, r7, r3
	ldrh	r0, [r0]
	cmp	r0, r5
	bne	.L106	@cond_branch
.L103:
	cmp	r2, r6
	bne	.L99	@cond_branch
	mov	r2, #0x0
	cmp	r2, r6
	bge	.L113	@cond_branch
	ldr	r0, .L121+0x10
	mov	ip, r0
	ldr	r7, .L121+0x8
	ldr	r1, [sp, #0x24]
	ldr	r0, [sp, #0x2c]
	add	r4, r1, r0
.L115:
	ldrh	r3, [r4]
	cmp	r3, #0
	beq	.L114	@cond_branch
	ldr	r1, [r7]
	lsl	r0, r5, #0x4
	add	r1, r0, r1
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldrh	r0, [r0]
	cmp	r3, r0
	bne	.L114	@cond_branch
	ldrh	r0, [r1]
	cmp	r0, sl
	bne	.L113	@cond_branch
	mov	r1, #0x0
	mov	sl, r1
	b	.L113
.L122:
	.align	2, 0
.L121:
	.word	gFacilityTrainers
	.word	gSlateportBattleTentTrainers
	.word	gFacilityTrainerMons
	.word	gSlateportBattleTentMons
	.word	gBattleFrontierHeldItems
.L114:
	add	r4, r4, #0x2
	add	r2, r2, #0x1
	cmp	r2, r6
	blt	.L115	@cond_branch
.L113:
	cmp	r2, r6
	bne	.L99	@cond_branch
	ldr	r0, .L123
	ldr	r1, [r0]
	mov	r2, r8
	lsl	r3, r2, #0x1
	add	r0, r3, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r6, .L123+0x4
	add	r1, r1, r6
	strh	r5, [r1]
	ldr	r0, .L123+0x8
	ldr	r0, [r0]
	lsl	r1, r5, #0x4
	add	r1, r1, r0
	ldrh	r0, [r1]
	ldr	r7, [sp, #0x34]
	strh	r0, [r7]
	ldr	r2, .L123+0xc
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	ldr	r1, [sp, #0x30]
	strh	r0, [r1]
	add	r3, r3, r9
	strh	r5, [r3]
	add	r1, r1, #0x2
	str	r1, [sp, #0x30]
	add	r2, r7, #0
	add	r2, r2, #0x2
	str	r2, [sp, #0x34]
	mov	r6, #0x1
	add	r8, r8, r6
.L99:
	mov	r7, r8
	cmp	r7, #0x6
	beq	.LCB1159
	b	.L101	@long jump
.LCB1159:
	add	sp, sp, #0x3c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L124:
	.align	2, 0
.L123:
	.word	gSaveBlock2Ptr
	.word	0xdf8
	.word	gFacilityTrainerMons
	.word	gBattleFrontierHeldItems
.Lfe28:
	.size	 GenerateInitialRentalMons,.Lfe28-GenerateInitialRentalMons
	.align	2, 0
	.type	 GenerateOpponentMons,function
	.thumb_func
GenerateOpponentMons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	mov	r0, #0x0
	mov	sl, r0
	ldr	r1, .L172
	ldr	r0, .L172+0x4
	str	r0, [r1]
	ldr	r1, .L172+0x8
	ldr	r0, .L172+0xc
	str	r0, [r1]
	ldr	r7, .L172+0x10
	ldr	r1, .L172+0x14
	mov	r8, r1
.L128:
	mov	r2, sl
	lsl	r6, r2, #0x1
.L129:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1e
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r5, #0x0
	ldr	r1, [r7]
	ldr	r4, .L172+0x18
	add	r0, r1, r4
	ldrh	r0, [r0]
	cmp	r5, r0
	bge	.L131	@cond_branch
	ldr	r2, .L172+0x1c
	add	r0, r1, r2
	ldrh	r0, [r0]
	cmp	r0, r3
	beq	.L131	@cond_branch
	ldr	r0, .L172+0x10
	ldr	r1, [r0]
	add	r0, r1, r4
	ldrh	r2, [r0]
	add	r4, r4, #0x2
	add	r1, r1, r4
.L134:
	add	r1, r1, #0x2
	add	r5, r5, #0x1
	cmp	r5, r2
	bge	.L131	@cond_branch
	ldrh	r0, [r1]
	cmp	r0, r3
	bne	.L134	@cond_branch
.L131:
	ldr	r0, [r7]
	ldr	r1, .L172+0x18
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r5, r0
	bne	.L129	@cond_branch
	ldr	r2, .L172+0x20
	strh	r3, [r2]
	ldrh	r3, [r2]
	ldr	r4, .L172
	ldr	r1, [r4]
	mov	r0, #0x34
	mul	r0, r0, r3
	add	r0, r0, r1
	ldr	r0, [r0, #0x30]
	add	r1, r6, r0
	ldrh	r0, [r1]
	cmp	r0, r8
	beq	.L141	@cond_branch
	ldr	r3, .L172+0x14
.L142:
	add	r1, r1, #0x2
	mov	r6, #0x1
	add	sl, sl, r6
	ldrh	r0, [r1]
	cmp	r0, r3
	bne	.L142	@cond_branch
.L141:
	mov	r0, sl
	cmp	r0, #0x8
	bgt	.L127	@cond_branch
	mov	r1, #0x0
	mov	sl, r1
	b	.L128
.L173:
	.align	2, 0
.L172:
	.word	gFacilityTrainers
	.word	gSlateportBattleTentTrainers
	.word	gFacilityTrainerMons
	.word	gSlateportBattleTentMons
	.word	gSaveBlock2Ptr
	.word	0xffff
	.word	0xc3a
	.word	0xc3c
	.word	gTrainerBattleOpponent_A
.L127:
	ldr	r0, .L174
	ldr	r1, [r0]
	ldr	r6, .L174+0x4
	add	r3, r1, r6
	ldrh	r0, [r3]
	cmp	r0, #0x1
	bhi	.L146	@cond_branch
	lsl	r0, r0, #0x1
	ldr	r3, .L174+0x8
	add	r1, r1, r3
	add	r1, r1, r0
	ldrh	r0, [r2]
	strh	r0, [r1]
.L146:
	ldrh	r1, [r2]
	ldr	r2, [r4]
	mov	r0, #0x34
	mul	r0, r0, r1
	add	r0, r0, r2
	ldr	r0, [r0, #0x30]
	mov	r9, r0
	mov	r5, #0x0
	ldr	r7, .L174+0xc
	mov	r8, sp
.L149:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sl
	bl	__modsi3
	lsl	r0, r0, #0x1
	add	r0, r0, r9
	ldrh	r0, [r0]
	strh	r0, [r7]
	mov	r2, #0x0
	ldrh	r0, [r7]
	ldr	r4, .L174+0x10
	ldr	r3, [r4]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldr	r1, .L174
	ldrh	r6, [r0]
	ldr	r1, [r1]
.L153:
	ldr	r4, .L174+0x14
	add	r0, r1, r4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x4
	add	r0, r0, r3
	ldrh	r0, [r0]
	cmp	r6, r0
	beq	.L151	@cond_branch
	add	r1, r1, #0xc
	add	r2, r2, #0x1
	cmp	r2, #0x5
	ble	.L153	@cond_branch
.L151:
	cmp	r2, #0x6
	bne	.L147	@cond_branch
	mov	r4, #0x0
	cmp	r4, r5
	bge	.L158	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0]
	cmp	r0, r6
	beq	.L158	@cond_branch
	ldr	r6, .L174+0xc
	ldr	r3, .L174+0x10
	mov	r2, sp
.L159:
	add	r2, r2, #0x2
	add	r4, r4, #0x1
	cmp	r4, r5
	bge	.L158	@cond_branch
	ldrh	r0, [r6]
	ldr	r1, [r3]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrh	r1, [r2]
	ldrh	r0, [r0]
	cmp	r1, r0
	bne	.L159	@cond_branch
.L158:
	cmp	r4, r5
	bne	.L147	@cond_branch
	mov	r4, #0x0
	cmp	r4, r5
	bge	.L165	@cond_branch
	ldr	r6, .L174+0x18
	mov	ip, r6
	add	r3, sp, #0x8
.L167:
	ldrh	r2, [r3]
	cmp	r2, #0
	beq	.L166	@cond_branch
	ldr	r1, .L174+0xc
	ldrh	r0, [r1]
	ldr	r6, .L174+0x10
	ldr	r1, [r6]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldrh	r0, [r0]
	cmp	r2, r0
	beq	.L165	@cond_branch
.L166:
	add	r3, r3, #0x2
	add	r4, r4, #0x1
	cmp	r4, r5
	blt	.L167	@cond_branch
.L165:
	cmp	r4, r5
	bne	.L147	@cond_branch
	lsl	r2, r5, #0x1
	ldrh	r0, [r7]
	ldr	r1, .L174+0x10
	ldr	r4, [r1]
	lsl	r0, r0, #0x4
	add	r0, r0, r4
	ldrh	r0, [r0]
	mov	r3, r8
	strh	r0, [r3]
	add	r1, sp, #0x8
	add	r1, r1, r2
	ldr	r3, .L174+0x18
	ldrh	r0, [r7]
	lsl	r0, r0, #0x4
	add	r0, r0, r4
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	strh	r0, [r1]
	ldr	r0, .L174+0x1c
	add	r2, r2, r0
	ldrh	r0, [r7]
	strh	r0, [r2]
	mov	r4, #0x2
	add	r8, r8, r4
	add	r5, r5, #0x1
.L147:
	cmp	r5, #0x3
	bne	.L149	@cond_branch
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L175:
	.align	2, 0
.L174:
	.word	gSaveBlock2Ptr
	.word	0xc3a
	.word	0xc3c
	.word	sRandMonSetId
	.word	gFacilityTrainerMons
	.word	0xdf8
	.word	gBattleFrontierHeldItems
	.word	gFrontierTempParty
.Lfe29:
	.size	 GenerateOpponentMons,.Lfe29-GenerateOpponentMons

	.lcomm	sRandMonSetId,2
.text
	.align	2, 0

