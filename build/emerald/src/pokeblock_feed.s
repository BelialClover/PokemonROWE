@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sPokeblockFeed,object
	.size	 sPokeblockFeed,4
sPokeblockFeed:
	.word	0x0
	.align	2, 0
	.type	 sPokeblockSpritePal,object
	.size	 sPokeblockSpritePal,8
sPokeblockSpritePal:
	.word	0x0
	.space	4
	.section .rodata
	.type	 sNatureToMonPokeblockAnim,object
	.size	 sNatureToMonPokeblockAnim,50
sNatureToMonPokeblockAnim:
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x0
	.byte	0xa
	.byte	0x0
	.byte	0xd
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x10
	.byte	0x2
	.byte	0x12
	.byte	0x0
	.byte	0x13
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x19
	.byte	0x0
	.byte	0x1b
	.byte	0x3
	.byte	0x1c
	.byte	0x0
	.byte	0x1d
	.byte	0x0
	.byte	0x21
	.byte	0x4
	.byte	0x24
	.byte	0x0
	.byte	0x25
	.byte	0x0
	.byte	0x27
	.byte	0x0
	.byte	0x2a
	.byte	0x0
	.byte	0x2d
	.byte	0x0
	.byte	0x2e
	.byte	0x5
	.byte	0x2f
	.byte	0x6
	.byte	0x30
	.byte	0x0
	.byte	0x35
	.byte	0x0
	.align	1, 0
	.type	 sMonPokeblockAnims,object
sMonPokeblockAnims:
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x8
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x10
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x20
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x1
	.short	0x0
	.short	0x3
	.short	0x6
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x18
	.short	0x1
	.short	0x40
	.short	0x10
	.short	-0x18
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x4
	.short	0x8
	.short	0x0
	.short	0x10
	.short	0x0
	.short	-0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x8
	.short	0x0
	.short	0x10
	.short	0x0
	.short	-0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	-0x10
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x3
	.short	0x6
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6
	.short	0x0
	.short	0x0
	.short	0x3
	.short	-0x6
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x10
	.short	0x0
	.short	0x2d
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x18
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x17
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x8
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	-0x8
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x20
	.short	0x2
	.short	0x1
	.short	0x30
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x18
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x10
	.short	0x10
	.short	0x80
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	-0x8
	.short	0x0
	.short	0x30
	.short	0x0
	.short	-0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x40
	.short	0x20
	.short	0x2
	.short	0x0
	.short	0x24
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x8
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x40
	.short	0x18
	.short	0x10
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1c
	.short	0x2
	.short	0x1
	.short	0x20
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x40
	.short	0x10
	.short	-0x10
	.short	0x2
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x20
	.short	0x1
	.short	0x0
	.short	0xc
	.short	-0x8
	.short	0x4
	.short	0x18
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x8
	.short	0x8
	.short	0x18
	.short	0x0
	.short	-0x10
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0xc
	.short	-0x8
	.short	0x10
	.short	0x18
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x8
	.short	0x1c
	.short	0x18
	.short	0x0
	.short	-0x8
	.short	0x0
	.short	0xc
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x40
	.short	0x10
	.short	-0x4
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x80
	.short	0x4
	.short	0x0
	.short	0x8
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x10
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x80
	.short	0x2
	.short	0x10
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	-0x4
	.short	0x0
	.short	0x30
	.short	0x0
	.short	-0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x8
	.short	0x0
	.short	0x18
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x40
	.short	0x4
	.short	0x40
	.short	0x3a
	.short	0x34
	.short	0x0
	.short	-0x58
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x18
	.short	0x50
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x58
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x10
	.short	0x4
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x8
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0xc
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x4
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x1
	.short	0x0
	.short	0x4
	.short	0x10
	.short	0xc
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	-0x4
	.short	0x10
	.short	0xc
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.size	 sMonPokeblockAnims,1100
	.align	2, 0
	.type	 sSpriteAffineAnim_8411E90,object
sSpriteAffineAnim_8411E90:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411E90,16
	.align	2, 0
	.type	 sSpriteAffineAnim_8411EA0,object
sSpriteAffineAnim_8411EA0:
	.short	0x0
	.short	0x0
	.byte	0xc
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1e
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf4
	.byte	0x1
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411EA0,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411EC0,object
sSpriteAffineAnim_8411EC0:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xc
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1c
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xfc
	.byte	0x3
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411EC0,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411EE8,object
sSpriteAffineAnim_8411EE8:
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411EE8,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F08,object
sSpriteAffineAnim_8411F08:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F08,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F30,object
sSpriteAffineAnim_8411F30:
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F30,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F50,object
sSpriteAffineAnim_8411F50:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F50,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F78,object
sSpriteAffineAnim_8411F78:
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F78,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F98,object
sSpriteAffineAnim_8411F98:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F98,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411FC0,object
sSpriteAffineAnim_8411FC0:
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x4
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411FC0,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411FE0,object
sSpriteAffineAnim_8411FE0:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x4
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411FE0,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8412008,object
sSpriteAffineAnim_8412008:
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf4
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8412008,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8412028,object
sSpriteAffineAnim_8412028:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf4
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8412028,40
	.align	2, 0
	.type	 sSpriteAffineAnimTable_85F04FC,object
sSpriteAffineAnimTable_85F04FC:
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411EA0
	.word	sSpriteAffineAnim_8411EE8
	.word	sSpriteAffineAnim_8411F30
	.word	sSpriteAffineAnim_8411F78
	.word	sSpriteAffineAnim_8411FC0
	.word	sSpriteAffineAnim_8412008
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411EC0
	.word	sSpriteAffineAnim_8411F08
	.word	sSpriteAffineAnim_8411F50
	.word	sSpriteAffineAnim_8411F98
	.word	sSpriteAffineAnim_8411FE0
	.word	sSpriteAffineAnim_8412028
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.size	 sSpriteAffineAnimTable_85F04FC,84
	.align	2, 0
	.type	 sBackgroundTemplates,object
	.size	 sBackgroundTemplates,8
sBackgroundTemplates:
	.byte	0xf0
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe9
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xf
	.short	0xa
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,16
	.align	2, 0
	.type	 sPokeblocksPals,object
sPokeblocksPals:
	.word	gPokeblockRed_Pal
	.word	gPokeblockBlue_Pal
	.word	gPokeblockPink_Pal
	.word	gPokeblockGreen_Pal
	.word	gPokeblockYellow_Pal
	.word	gPokeblockPurple_Pal
	.word	gPokeblockIndigo_Pal
	.word	gPokeblockBrown_Pal
	.word	gPokeblockLiteBlue_Pal
	.word	gPokeblockOlive_Pal
	.word	gPokeblockGray_Pal
	.word	gPokeblockBlack_Pal
	.word	gPokeblockWhite_Pal
	.word	gPokeblockGold_Pal
	.size	 sPokeblocksPals,56
	.align	2, 0
	.type	 sSpriteAffineAnim_84120DC,object
sSpriteAffineAnim_84120DC:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_84120DC,16
	.align	2, 0
	.type	 sSpriteAffineAnimTable_MonNoFlip,object
sSpriteAffineAnimTable_MonNoFlip:
	.word	sSpriteAffineAnim_84120DC
	.size	 sSpriteAffineAnimTable_MonNoFlip,4
	.align	2, 0
	.type	 sSpriteAffineAnim_84120F0,object
sSpriteAffineAnim_84120F0:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x10
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x10
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x10
	.byte	0x1
	.space	2
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_84120F0,88
	.align	2, 0
	.type	 sSpriteAffineAnim_8412148,object
sSpriteAffineAnim_8412148:
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf0
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf0
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf0
	.byte	0x1
	.space	2
	.short	-0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8412148,88
	.align	2, 0
	.type	 sSpriteAffineAnimTable_85F0664,object
sSpriteAffineAnimTable_85F0664:
	.word	sSpriteAffineAnim_84120DC
	.size	 sSpriteAffineAnimTable_85F0664,4
	.align	2, 0
	.type	 sSpriteAffineAnimTable_85F0668,object
sSpriteAffineAnimTable_85F0668:
	.word	sSpriteAffineAnim_84120F0
	.size	 sSpriteAffineAnimTable_85F0668,4
	.align	2, 0
	.type	 sSpriteAffineAnimTable_85F066C,object
sSpriteAffineAnimTable_85F066C:
	.word	sSpriteAffineAnim_8412148
	.size	 sSpriteAffineAnimTable_85F066C,4
	.align	2, 0
	.type	 sThrownPokeblockOamData,object
	.size	 sThrownPokeblockOamData,8
sThrownPokeblockOamData:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sThrownPokeblockSpriteAnim,object
sThrownPokeblockSpriteAnim:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sThrownPokeblockSpriteAnim,8
	.align	2, 0
	.type	 sThrownPokeblockAnimTable,object
sThrownPokeblockAnimTable:
	.word	sThrownPokeblockSpriteAnim
	.size	 sThrownPokeblockAnimTable,4
	.align	2, 0
	.type	 sSpriteAffineAnim_84121C0,object
sSpriteAffineAnim_84121C0:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	-0x8
	.short	-0x8
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x1
	.space	4
	.size	 sSpriteAffineAnim_84121C0,24
	.align	2, 0
	.type	 sThrownPokeblockAffineAnimTable,object
sThrownPokeblockAffineAnimTable:
	.word	sSpriteAffineAnim_84121C0
	.size	 sThrownPokeblockAffineAnimTable,4
	.align	2, 0
	.type	 sPokeblock_SpriteSheet,object
	.size	 sPokeblock_SpriteSheet,8
sPokeblock_SpriteSheet:
	.word	gPokeblock_Gfx
	.short	0x20
	.short	0x39e2
	.align	2, 0
	.type	 sThrownPokeblockSpriteTemplate,object
	.size	 sThrownPokeblockSpriteTemplate,24
sThrownPokeblockSpriteTemplate:
	.short	0x39e2
	.short	0x39e2
	.word	sThrownPokeblockOamData
	.word	sThrownPokeblockAnimTable
	.word	0x0
	.word	sThrownPokeblockAffineAnimTable
	.word	SpriteCB_ThrownPokeblock
.text
	.align	2, 0
	.type	 CB2_PokeblockFeed,function
	.thumb_func
CB2_PokeblockFeed:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	DoScheduledBgTilemapCopiesToVram
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 CB2_PokeblockFeed,.Lfe1-CB2_PokeblockFeed
	.align	2, 0
	.type	 VBlankCB_PokeblockFeed,function
	.thumb_func
VBlankCB_PokeblockFeed:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 VBlankCB_PokeblockFeed,.Lfe2-VBlankCB_PokeblockFeed
	.align	2, 0
	.type	 TransitionToPokeblockFeedScene,function
	.thumb_func
TransitionToPokeblockFeedScene:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L27
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xd
	bls	.LCB40
	b	.L21	@long jump
.LCB40:
	lsl	r0, r0, #0x2
	ldr	r1, .L27+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L28:
	.align	2, 0
.L27:
	.word	gMain
	.word	.L22
	.align	2, 0
	.align	2, 0
.L22:
	.word	.L6
	.word	.L7
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L15
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L19
	.word	.L20
.L6:
	ldr	r4, .L29
	ldr	r0, .L29+0x4
	bl	AllocZeroed
	str	r0, [r4]
	bl	SetVBlankHBlankCallbacksToNull
	bl	ClearScheduledBgCopiesToVram
	ldr	r1, .L29+0x8
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L24
.L30:
	.align	2, 0
.L29:
	.word	sPokeblockFeed
	.word	0x1084
	.word	gMain
.L7:
	bl	ResetPaletteFade
	ldr	r2, .L31
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	b	.L25
.L32:
	.align	2, 0
.L31:
	.word	gPaletteFade
.L8:
	bl	ResetSpriteData
	ldr	r1, .L33
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L24
.L34:
	.align	2, 0
.L33:
	.word	gMain
.L9:
	bl	FreeAllSpritePalettes
	b	.L26
.L10:
	bl	AllocateMonSpritesGfx
	ldr	r1, .L35
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L24
.L36:
	.align	2, 0
.L35:
	.word	gMain
.L11:
	bl	HandleInitBackgrounds
	b	.L26
.L12:
	bl	HandleInitWindows
	ldr	r1, .L37
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L24
.L38:
	.align	2, 0
.L37:
	.word	gMain
.L13:
	ldr	r0, .L39
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L39+0x4
	add	r0, r0, r1
	bl	LoadMonAndSceneGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L5	@cond_branch
	b	.L26
.L40:
	.align	2, 0
.L39:
	.word	gPokeblockMonId
	.word	gPlayerParty
.L15:
	bl	CreatePokeblockCaseSpriteForFeeding
	ldr	r1, .L41
	ldr	r1, [r1]
	ldr	r2, .L41+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L26
.L42:
	.align	2, 0
.L41:
	.word	sPokeblockFeed
	.word	0x105e
.L16:
	ldr	r0, .L43
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L43+0x4
	add	r0, r0, r1
	bl	CreateMonSprite
	ldr	r1, .L43+0x8
	ldr	r1, [r1]
	ldr	r2, .L43+0xc
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L26
.L44:
	.align	2, 0
.L43:
	.word	gPokeblockMonId
	.word	gPlayerParty
	.word	sPokeblockFeed
	.word	0x105d
.L17:
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x1
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r1, .L45
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L24
.L46:
	.align	2, 0
.L45:
	.word	gMain
.L18:
	bl	LaunchPokeblockFeedTask
	b	.L26
.L19:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r1, .L47
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L24
.L48:
	.align	2, 0
.L47:
	.word	gMain
.L20:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L49
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
.L25:
	strb	r0, [r2, #0x8]
.L26:
	ldr	r1, .L49+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
.L24:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L5
.L50:
	.align	2, 0
.L49:
	.word	gPaletteFade
	.word	gMain
.L21:
	ldr	r0, .L51
	bl	SetVBlankCallback
	ldr	r0, .L51+0x4
	bl	SetMainCallback2
	mov	r0, #0x1
	b	.L23
.L52:
	.align	2, 0
.L51:
	.word	VBlankCB_PokeblockFeed
	.word	CB2_PokeblockFeed
.L5:
	mov	r0, #0x0
.L23:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 TransitionToPokeblockFeedScene,.Lfe3-TransitionToPokeblockFeedScene
	.align	2, 0
	.globl	CB2_PreparePokeblockFeedScene
	.type	 CB2_PreparePokeblockFeedScene,function
	.thumb_func
CB2_PreparePokeblockFeedScene:
	push	{lr}
.L54:
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L55	@cond_branch
	bl	TransitionToPokeblockFeedScene
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L55	@cond_branch
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L54	@cond_branch
.L55:
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_PreparePokeblockFeedScene,.Lfe4-CB2_PreparePokeblockFeedScene
	.align	2, 0
	.type	 HandleInitBackgrounds,function
	.thumb_func
HandleInitBackgrounds:
	push	{lr}
	bl	ResetVramOamAndBgCntRegs
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L62
	mov	r0, #0x0
	mov	r2, #0x2
	bl	InitBgsFromTemplates
	ldr	r0, .L62+0x4
	ldr	r1, [r0]
	add	r1, r1, #0x48
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	bl	ResetAllBgsCoordinates
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	sBackgroundTemplates
	.word	sPokeblockFeed
.Lfe5:
	.size	 HandleInitBackgrounds,.Lfe5-HandleInitBackgrounds
	.align	2, 0
	.type	 LoadMonAndSceneGfx,function
	.thumb_func
LoadMonAndSceneGfx:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldr	r0, .L80
	ldr	r0, [r0]
	ldr	r1, .L80+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x8
	bls	.LCB424
	b	.L65	@long jump
.LCB424:
	lsl	r0, r0, #0x2
	ldr	r1, .L80+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L81:
	.align	2, 0
.L80:
	.word	sPokeblockFeed
	.word	0x107e
	.word	.L76
	.align	2, 0
	.align	2, 0
.L76:
	.word	.L66
	.word	.L67
	.word	.L68
	.word	.L69
	.word	.L70
	.word	.L71
	.word	.L72
	.word	.L73
	.word	.L75
.L66:
	add	r0, r5, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetMonData
	add	r7, r0, #0
	add	r0, r5, #0
	mov	r1, #0x59
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r6, #0
	add	r1, r5, #0
	bl	GetFormSpeciesId
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsl	r0, r2, #0x3
	ldr	r1, .L82
	add	r0, r0, r1
	ldr	r1, .L82+0x4
	ldr	r1, [r1]
	ldr	r1, [r1, #0x8]
	add	r3, r7, #0
	bl	HandleLoadSpecialPokePic_DontHandleDeoxys
	ldr	r0, .L82+0x8
	ldr	r1, [r0]
	b	.L79
.L83:
	.align	2, 0
.L82:
	.word	gMonFrontPicTable
	.word	gMonSpritesGfxPtr
	.word	sPokeblockFeed
.L67:
	add	r0, r5, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetMonData
	add	r7, r0, #0
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetMonData
	add	r4, r0, #0
	add	r0, r5, #0
	mov	r1, #0x59
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r6, #0
	add	r1, r5, #0
	bl	GetFormSpeciesId
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	add	r0, r2, #0
	add	r1, r4, #0
	add	r2, r7, #0
	bl	GetMonSpritePalStructFromOtIdPersonality
	add	r4, r0, #0
	bl	LoadCompressedSpritePalette
	ldrh	r0, [r4, #0x4]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	SetMultiuseSpriteTemplateToPokemon
	ldr	r0, .L84
	ldr	r1, [r0]
	b	.L79
.L85:
	.align	2, 0
.L84:
	.word	sPokeblockFeed
.L68:
	ldr	r0, .L86
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L86+0x4
	ldr	r1, [r0]
	b	.L79
.L87:
	.align	2, 0
.L86:
	.word	gPokeblockCase_SpriteSheet
	.word	sPokeblockFeed
.L69:
	ldr	r0, .L88
	bl	LoadCompressedSpritePalette
	ldr	r0, .L88+0x4
	ldr	r1, [r0]
	b	.L79
.L89:
	.align	2, 0
.L88:
	.word	gPokeblockCase_SpritePal
	.word	sPokeblockFeed
.L70:
	ldr	r0, .L90
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L90+0x4
	ldr	r1, [r0]
	b	.L79
.L91:
	.align	2, 0
.L90:
	.word	sPokeblock_SpriteSheet
	.word	sPokeblockFeed
.L71:
	ldr	r0, .L92
	ldrb	r0, [r0]
	bl	SetPokeblockSpritePal
	ldr	r0, .L92+0x4
	bl	LoadCompressedSpritePalette
	ldr	r0, .L92+0x8
	ldr	r1, [r0]
	b	.L79
.L93:
	.align	2, 0
.L92:
	.word	gSpecialVar_ItemId
	.word	sPokeblockSpritePal
	.word	sPokeblockFeed
.L72:
	bl	ResetTempTileDataBuffers
	ldr	r1, .L94
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L94+0x4
	ldr	r1, [r0]
	b	.L79
.L95:
	.align	2, 0
.L94:
	.word	gBattleTerrainTiles_Building
	.word	sPokeblockFeed
.L73:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L65	@cond_branch
	ldr	r0, .L96
	ldr	r4, .L96+0x4
	ldr	r1, [r4]
	add	r1, r1, #0x48
	bl	LZDecompressWram
	ldr	r1, [r4]
.L79:
	ldr	r0, .L96+0x8
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L65
.L97:
	.align	2, 0
.L96:
	.word	gUnknown_08D9BA44
	.word	sPokeblockFeed
	.word	0x107e
.L75:
	ldr	r0, .L98
	mov	r1, #0x20
	mov	r2, #0x60
	bl	LoadCompressedPalette
	ldr	r0, .L98+0x4
	ldr	r0, [r0]
	ldr	r1, .L98+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L78
.L99:
	.align	2, 0
.L98:
	.word	gBattleTerrainPalette_Frontier
	.word	sPokeblockFeed
	.word	0x107e
.L65:
	mov	r0, #0x0
.L78:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 LoadMonAndSceneGfx,.Lfe6-LoadMonAndSceneGfx
	.align	2, 0
	.type	 HandleInitWindows,function
	.thumb_func
HandleInitWindows:
	push	{lr}
	ldr	r0, .L101
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xe0
	bl	LoadUserWindowBorderGfx
	ldr	r0, .L101+0x4
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	sWindowTemplates
	.word	gUnknown_0860F074
.Lfe7:
	.size	 HandleInitWindows,.Lfe7-HandleInitWindows
	.align	2, 0
	.type	 SetPokeblockSpritePal,function
	.thumb_func
SetPokeblockSpritePal:
	push	{lr}
	lsl	r0, r0, #0x18
	ldr	r1, .L104
	lsr	r0, r0, #0x15
	ldr	r2, .L104+0x4
	add	r0, r0, r2
	ldr	r1, [r1]
	add	r1, r1, r0
	add	r0, r1, #0
	mov	r1, #0x0
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	ldr	r2, .L104+0x8
	ldr	r1, .L104+0xc
	lsr	r0, r0, #0x16
	sub	r0, r0, #0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r0, .L104+0x10
	strh	r0, [r2, #0x4]
	pop	{r0}
	bx	r0
.L105:
	.align	2, 0
.L104:
	.word	gSaveBlock1Ptr
	.word	0xe5c
	.word	sPokeblockSpritePal
	.word	sPokeblocksPals
	.word	0x39e2
.Lfe8:
	.size	 SetPokeblockSpritePal,.Lfe8-SetPokeblockSpritePal
	.align	2, 0
	.type	 Task_HandlePokeblockFeed,function
	.thumb_func
Task_HandlePokeblockFeed:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L120
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB802
	b	.L106	@long jump
.LCB802:
	ldr	r0, .L120+0x4
	lsl	r2, r4, #0x2
	add	r1, r2, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x8
	ldrsh	r3, [r1, r0]
	ldr	r0, .L120+0x8
	add	r5, r2, #0
	cmp	r3, r0
	beq	.L111	@cond_branch
	cmp	r3, r0
	bgt	.L116	@cond_branch
	cmp	r3, #0
	beq	.L109	@cond_branch
	cmp	r3, #0xff
	beq	.L110	@cond_branch
	b	.L108
.L121:
	.align	2, 0
.L120:
	.word	gPaletteFade
	.word	gTasks
	.word	0x10d
.L116:
	ldr	r0, .L122
	cmp	r3, r0
	beq	.L112	@cond_branch
	add	r0, r0, #0x10
	cmp	r3, r0
	beq	.L113	@cond_branch
	b	.L108
.L123:
	.align	2, 0
.L122:
	.word	0x119
.L109:
	ldr	r0, .L124
	ldr	r1, [r0]
	ldr	r2, .L124+0x4
	add	r1, r1, r2
	strb	r3, [r1]
	ldr	r0, [r0]
	ldr	r1, .L124+0x8
	add	r0, r0, r1
	strh	r3, [r0]
	bl	sub_817A5CC
	b	.L108
.L125:
	.align	2, 0
.L124:
	.word	sPokeblockFeed
	.word	0x1050
	.word	0x1058
.L110:
	ldr	r0, .L126
	ldr	r0, [r0]
	ldr	r2, .L126+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1, #0xa]
	bl	DoPokeblockCaseThrowEffect
	b	.L108
.L127:
	.align	2, 0
.L126:
	.word	sPokeblockFeed
	.word	0x105e
.L111:
	bl	CreatePokeblockSprite
	ldr	r1, .L128
	ldr	r1, [r1]
	ldr	r2, .L128+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L108
.L129:
	.align	2, 0
.L128:
	.word	sPokeblockFeed
	.word	0x105f
.L112:
	ldr	r0, .L130
	ldr	r0, [r0]
	ldr	r1, .L130+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PrepareMonToMoveToPokeblock
	b	.L108
.L131:
	.align	2, 0
.L130:
	.word	sPokeblockFeed
	.word	0x105d
.L113:
	ldr	r0, .L132
	str	r0, [r1]
	b	.L106
.L133:
	.align	2, 0
.L132:
	.word	Task_HandleMonAtePokeblock
.L108:
	ldr	r0, .L134
	ldr	r0, [r0]
	ldr	r2, .L134+0x4
	add	r1, r0, r2
	sub	r2, r2, #0x2
	add	r0, r0, r2
	ldrh	r1, [r1]
	ldrh	r0, [r0]
	cmp	r1, r0
	bcs	.L117	@cond_branch
	bl	sub_817A634
	b	.L118
.L135:
	.align	2, 0
.L134:
	.word	sPokeblockFeed
	.word	0x1058
.L117:
	cmp	r1, r0
	bne	.L118	@cond_branch
	ldr	r0, .L136
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0xfe
	strh	r0, [r1, #0x8]
.L118:
	ldr	r0, .L136+0x4
	ldr	r1, [r0]
	ldr	r0, .L136+0x8
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L136
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L106:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	gTasks
	.word	sPokeblockFeed
	.word	0x1058
.Lfe9:
	.size	 Task_HandlePokeblockFeed,.Lfe9-Task_HandlePokeblockFeed
	.align	2, 0
	.type	 LaunchPokeblockFeedTask,function
	.thumb_func
LaunchPokeblockFeedTask:
	push	{lr}
	ldr	r0, .L139
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L139+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	mov	r0, #0x1
	strh	r0, [r1, #0xa]
	pop	{r0}
	bx	r0
.L140:
	.align	2, 0
.L139:
	.word	Task_HandlePokeblockFeed
	.word	gTasks
.Lfe10:
	.size	 LaunchPokeblockFeedTask,.Lfe10-LaunchPokeblockFeedTask
	.align	2, 0
	.type	 Task_WaitForAtePokeblockText,function
	.thumb_func
Task_WaitForAtePokeblockText:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x0
	bl	RunTextPrintersRetIsActive
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L142	@cond_branch
	ldr	r0, .L143
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L143+0x4
	str	r0, [r1]
.L142:
	pop	{r4}
	pop	{r0}
	bx	r0
.L144:
	.align	2, 0
.L143:
	.word	gTasks
	.word	Task_PaletteFadeToReturn
.Lfe11:
	.size	 Task_WaitForAtePokeblockText,.Lfe11-Task_WaitForAtePokeblockText
	.align	2, 0
	.type	 Task_HandleMonAtePokeblock,function
	.thumb_func
Task_HandleMonAtePokeblock:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L150
	ldrb	r1, [r0]
	mov	r0, #0x64
	mov	r5, r1
	mul	r5, r5, r0
	ldr	r0, .L150+0x4
	add	r5, r5, r0
	ldr	r1, .L150+0x8
	ldr	r0, .L150+0xc
	ldrh	r0, [r0]
	lsl	r0, r0, #0x3
	ldr	r2, .L150+0x10
	add	r0, r0, r2
	ldr	r4, [r1]
	add	r4, r4, r0
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetNature
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	PokeblockGetGain
	ldr	r6, .L150+0x14
	strh	r0, [r6]
	ldr	r1, .L150+0x18
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r1, .L150+0x1c
	add	r0, r4, #0
	bl	PokeblockCopyName
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L146	@cond_branch
	ldr	r0, .L150+0x20
	ldr	r1, .L150+0x24
	bl	StringExpandPlaceholders
	b	.L147
.L151:
	.align	2, 0
.L150:
	.word	gPokeblockMonId
	.word	gPlayerParty
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_ItemId
	.word	0xe5c
	.word	gPokeblockGain
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_Var1AteTheVar2
.L146:
	cmp	r0, #0
	ble	.L148	@cond_branch
	ldr	r0, .L152
	ldr	r1, .L152+0x4
	bl	StringExpandPlaceholders
	b	.L147
.L153:
	.align	2, 0
.L152:
	.word	gStringVar4
	.word	gText_Var1HappilyAteVar2
.L148:
	ldr	r0, .L154
	ldr	r1, .L154+0x4
	bl	StringExpandPlaceholders
.L147:
	ldr	r2, .L154+0x8
	ldrb	r0, [r2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	bl	GetPlayerTextSpeedDelay
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r2, .L154
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	bl	AddTextPrinterParameterized2
	ldr	r1, .L154+0xc
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L154+0x10
	str	r1, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	gStringVar4
	.word	gText_Var1DisdainfullyAteVar2
	.word	gTextFlags
	.word	gTasks
	.word	Task_WaitForAtePokeblockText
.Lfe12:
	.size	 Task_HandleMonAtePokeblock,.Lfe12-Task_HandleMonAtePokeblock
	.align	2, 0
	.type	 Task_ReturnAfterPaletteFade,function
	.thumb_func
Task_ReturnAfterPaletteFade:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L158
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L157	@cond_branch
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	ldr	r0, .L158+0x4
	ldr	r1, .L158+0x8
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	m4aMPlayVolumeControl
	ldr	r0, .L158+0xc
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
	bl	FreeAllWindowBuffers
	ldr	r0, .L158+0x10
	ldr	r0, [r0]
	bl	Free
	bl	FreeMonSpritesGfx
.L157:
	pop	{r4}
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	gPaletteFade
	.word	gMPlayInfo_BGM
	.word	0xffff
	.word	gMain
	.word	sPokeblockFeed
.Lfe13:
	.size	 Task_ReturnAfterPaletteFade,.Lfe13-Task_ReturnAfterPaletteFade
	.align	2, 0
	.type	 Task_PaletteFadeToReturn,function
	.thumb_func
Task_PaletteFadeToReturn:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L161
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L161+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L162:
	.align	2, 0
.L161:
	.word	gTasks
	.word	Task_ReturnAfterPaletteFade
.Lfe14:
	.size	 Task_PaletteFadeToReturn,.Lfe14-Task_PaletteFadeToReturn
	.align	2, 0
	.type	 CreateMonSprite,function
	.thumb_func
CreateMonSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r5, r0, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L165
	mov	r1, #0x30
	mov	r2, #0x50
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L165+0x4
	mov	r9, r0
	ldr	r0, [r0]
	ldr	r2, .L165+0x8
	add	r1, r0, r2
	strh	r4, [r1]
	ldr	r1, .L165+0xc
	add	r0, r0, r1
	mov	r2, r8
	strb	r2, [r0]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetNature
	mov	r2, r9
	ldr	r1, [r2]
	ldr	r2, .L165+0x10
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r7, .L165+0x14
	mov	r1, r8
	lsl	r0, r1, #0x4
	add	r0, r0, r8
	lsl	r5, r0, #0x2
	add	r6, r5, r7
	strh	r4, [r6, #0x32]
	add	r0, r7, #0
	add	r0, r0, #0x1c
	add	r0, r5, r0
	ldr	r1, .L165+0x18
	str	r1, [r0]
	mov	r2, r9
	ldr	r0, [r2]
	ldr	r1, .L165+0x1c
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	add	r0, r4, #0
	bl	IsMonSpriteNotFlipped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L164	@cond_branch
	add	r0, r7, #0
	add	r0, r0, #0x10
	add	r0, r5, r0
	ldr	r1, .L165+0x20
	str	r1, [r0]
	ldrb	r3, [r6, #0x1]
	mov	r0, #0x3
	orr	r3, r3, r0
	strb	r3, [r6, #0x1]
	lsr	r1, r3, #0x6
	ldrb	r2, [r6, #0x3]
	lsr	r2, r2, #0x6
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	add	r0, r6, #0
	bl	CalcCenterToCornerVec
	mov	r2, r9
	ldr	r0, [r2]
	ldr	r1, .L165+0x1c
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L164:
	mov	r0, r8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L166:
	.align	2, 0
.L165:
	.word	gMultiuseSpriteTemplate
	.word	sPokeblockFeed
	.word	0x1054
	.word	0x105b
	.word	0x105a
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	0x1053
	.word	sSpriteAffineAnimTable_MonNoFlip
.Lfe15:
	.size	 CreateMonSprite,.Lfe15-CreateMonSprite
	.align	2, 0
	.type	 PrepareMonToMoveToPokeblock,function
	.thumb_func
PrepareMonToMoveToPokeblock:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L168
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r2, r1, r3
	mov	r0, #0x30
	strh	r0, [r2, #0x20]
	mov	r0, #0x50
	strh	r0, [r2, #0x22]
	ldr	r0, .L168+0x4
	strh	r0, [r2, #0x2e]
	mov	r0, #0x1
	strh	r0, [r2, #0x30]
	add	r3, r3, #0x1c
	add	r1, r1, r3
	ldr	r0, .L168+0x8
	str	r0, [r1]
	bx	lr
.L169:
	.align	2, 0
.L168:
	.word	gSprites
	.word	0xfff8
	.word	sub_817A468
.Lfe16:
	.size	 PrepareMonToMoveToPokeblock,.Lfe16-PrepareMonToMoveToPokeblock
	.align	2, 0
	.type	 sub_817A468,function
	.thumb_func
sub_817A468:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x2e]
	ldrh	r2, [r4, #0x22]
	add	r1, r0, r2
	strh	r1, [r4, #0x22]
	ldrh	r1, [r4, #0x30]
	add	r0, r0, r1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L171	@cond_branch
	ldrh	r0, [r4, #0x32]
	mov	r1, #0x0
	bl	PlayCry1
.L171:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	bne	.L172	@cond_branch
	ldr	r0, .L173
	str	r0, [r4, #0x1c]
.L172:
	pop	{r4}
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	SpriteCallbackDummy
.Lfe17:
	.size	 sub_817A468,.Lfe17-sub_817A468
	.align	2, 0
	.type	 CreatePokeblockCaseSpriteForFeeding,function
	.thumb_func
CreatePokeblockCaseSpriteForFeeding:
	push	{r4, r5, lr}
	mov	r0, #0xbc
	mov	r1, #0x64
	mov	r2, #0x2
	bl	CreatePokeblockCaseSprite
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L176
	lsl	r3, r4, #0x4
	add	r3, r3, r4
	lsl	r3, r3, #0x2
	add	r0, r3, r5
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r1, r3, r1
	ldr	r2, .L176+0x4
	str	r2, [r1]
	add	r5, r5, #0x1c
	add	r3, r3, r5
	ldr	r1, .L176+0x8
	str	r1, [r3]
	bl	InitSpriteAffineAnim
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L177:
	.align	2, 0
.L176:
	.word	gSprites
	.word	sSpriteAffineAnimTable_85F0664
	.word	SpriteCallbackDummy
.Lfe18:
	.size	 CreatePokeblockCaseSpriteForFeeding,.Lfe18-CreatePokeblockCaseSpriteForFeeding
	.align	2, 0
	.type	 DoPokeblockCaseThrowEffect,function
	.thumb_func
DoPokeblockCaseThrowEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L182
	mov	r8, r0
	lsl	r0, r7, #0x4
	add	r0, r0, r7
	lsl	r6, r0, #0x2
	mov	r0, r8
	add	r4, r6, r0
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	cmp	r5, #0
	bne	.L179	@cond_branch
	mov	r0, r8
	add	r0, r0, #0x10
	add	r0, r6, r0
	ldr	r1, .L182+0x4
	b	.L181
.L183:
	.align	2, 0
.L182:
	.word	gSprites
	.word	sSpriteAffineAnimTable_85F0668
.L179:
	mov	r0, r8
	add	r0, r0, #0x10
	add	r0, r6, r0
	ldr	r1, .L184
.L181:
	str	r1, [r0]
	lsl	r0, r7, #0x4
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	ldr	r1, .L184+0x4
	add	r0, r0, r1
	bl	InitSpriteAffineAnim
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L185:
	.align	2, 0
.L184:
	.word	sSpriteAffineAnimTable_85F066C
	.word	gSprites
.Lfe19:
	.size	 DoPokeblockCaseThrowEffect,.Lfe19-DoPokeblockCaseThrowEffect
	.align	2, 0
	.type	 CreatePokeblockSprite,function
	.thumb_func
CreatePokeblockSprite:
	push	{lr}
	ldr	r0, .L187
	mov	r1, #0xae
	mov	r2, #0x54
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L187+0x4
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r2, .L187+0x8
	strh	r2, [r1, #0x2e]
	mov	r2, #0x1
	strh	r2, [r1, #0x30]
	pop	{r1}
	bx	r1
.L188:
	.align	2, 0
.L187:
	.word	sThrownPokeblockSpriteTemplate
	.word	gSprites
	.word	0xfff4
.Lfe20:
	.size	 CreatePokeblockSprite,.Lfe20-CreatePokeblockSprite
	.align	2, 0
	.type	 SpriteCB_ThrownPokeblock,function
	.thumb_func
SpriteCB_ThrownPokeblock:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x20]
	sub	r0, r0, #0x4
	strh	r0, [r2, #0x20]
	ldrh	r0, [r2, #0x2e]
	ldrh	r3, [r2, #0x22]
	add	r1, r0, r3
	strh	r1, [r2, #0x22]
	ldrh	r1, [r2, #0x30]
	add	r0, r0, r1
	strh	r0, [r2, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L190	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L190:
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 SpriteCB_ThrownPokeblock,.Lfe21-SpriteCB_ThrownPokeblock
	.align	2, 0
	.type	 sub_817A5CC,function
	.thumb_func
sub_817A5CC:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L198
	ldr	r1, [r0]
	ldr	r0, .L198+0x4
	add	r3, r1, r0
	mov	r0, #0x1
	strh	r0, [r3]
	ldr	r2, .L198+0x8
	ldr	r7, .L198+0xc
	add	r1, r1, r7
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrb	r2, [r0]
	mov	r4, #0x0
	ldr	r5, .L198+0x10
	add	r6, r5, #0
	sub	r6, r6, #0xa
.L195:
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r0, r1, r6
	ldrh	r0, [r0]
	ldrh	r7, [r3]
	add	r0, r0, r7
	strh	r0, [r3]
	add	r1, r1, r5
	mov	r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x1
	beq	.L193	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r4, #0x7
	bls	.L195	@cond_branch
.L193:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	sPokeblockFeed
	.word	0x1056
	.word	sNatureToMonPokeblockAnim
	.word	0x105a
	.word	sMonPokeblockAnims+0x12
.Lfe22:
	.size	 sub_817A5CC,.Lfe22-sub_817A5CC
	.align	2, 0
	.type	 sub_817A634,function
	.thumb_func
sub_817A634:
	push	{r4, lr}
	ldr	r0, .L219
	ldr	r4, [r0]
	ldr	r1, .L219+0x4
	add	r0, r4, r1
	ldrb	r0, [r0]
	cmp	r0, #0x5a
	bls	.LCB1801
	b	.L201	@long jump
.LCB1801:
	lsl	r0, r0, #0x2
	ldr	r1, .L219+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L220:
	.align	2, 0
.L219:
	.word	sPokeblockFeed
	.word	0x1050
	.word	.L216
	.align	2, 0
	.align	2, 0
.L216:
	.word	.L202
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L204
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L206
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L210
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L214
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
	.word	.L201
.L202:
	ldr	r1, .L221
	ldr	r2, .L221+0x4
	add	r0, r4, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r1, [r0]
	ldr	r3, .L221+0x8
	add	r0, r4, r3
	strb	r1, [r0]
	ldr	r1, .L221+0xc
	add	r0, r4, r1
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L221+0x10
	add	r1, r1, r0
	add	r0, r4, #0
	stmia	r0!, {r1}
	mov	r2, #0x44
	bl	memcpy
	ldr	r2, .L221+0x14
	add	r1, r4, r2
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L201
.L222:
	.align	2, 0
.L221:
	.word	sNatureToMonPokeblockAnim
	.word	0x105a
	.word	0x1051
	.word	0x105b
	.word	gSprites
	.word	0x1050
.L204:
	bl	sub_817A91C
	ldr	r1, .L223
	ldr	r3, .L223+0x4
	add	r0, r4, r3
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L205	@cond_branch
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x3f
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r0, [r4]
	ldr	r1, .L223+0x8
	str	r1, [r0, #0x10]
	bl	InitSpriteAffineAnim
.L205:
	ldr	r0, .L223+0xc
	add	r1, r4, r0
	mov	r0, #0x32
	strb	r0, [r1]
.L206:
	ldr	r1, .L223
	ldr	r2, .L223+0x4
	add	r0, r4, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r1, r1, #0x1
	add	r2, r0, r1
	ldrb	r1, [r2]
	cmp	r1, #0
	beq	.L218	@cond_branch
	ldr	r3, .L223+0x10
	add	r0, r4, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L208	@cond_branch
	ldr	r0, [r4]
	add	r1, r1, #0xa
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAffineAnim
	b	.L218
.L224:
	.align	2, 0
.L223:
	.word	sNatureToMonPokeblockAnim
	.word	0x105a
	.word	sSpriteAffineAnimTable_85F04FC
	.word	0x1050
	.word	0x1053
.L208:
	ldr	r0, [r4]
	ldrb	r1, [r2]
	bl	StartSpriteAffineAnim
	b	.L218
.L210:
	bl	sub_817A9E4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L201	@cond_branch
	ldr	r1, .L225
	add	r0, r4, r1
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bne	.L212	@cond_branch
	ldr	r3, .L225+0x4
	add	r1, r4, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_817A91C
.L218:
	ldr	r0, .L225+0x8
	add	r1, r4, r0
	mov	r0, #0x3c
	strb	r0, [r1]
	b	.L201
.L226:
	.align	2, 0
.L225:
	.word	0x1072
	.word	0x1051
	.word	0x1050
.L212:
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r2, .L227
	add	r1, r4, r2
	mov	r0, #0x46
	strb	r0, [r1]
	b	.L201
.L228:
	.align	2, 0
.L227:
	.word	0x1050
.L214:
	bl	FreeMonSpriteOamMatrix
	ldr	r3, .L229
	add	r0, r4, r3
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r2, .L229+0x4
	add	r0, r4, r2
	strb	r1, [r0]
.L201:
	pop	{r4}
	pop	{r0}
	bx	r0
.L230:
	.align	2, 0
.L229:
	.word	0x1051
	.word	0x1050
.Lfe23:
	.size	 sub_817A634,.Lfe23-sub_817A634
	.align	2, 0
	.type	 sub_817A91C,function
	.thumb_func
sub_817A91C:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L240
	ldr	r5, [r0]
	mov	r4, #0x0
	mov	r0, #0x83
	lsl	r0, r0, #0x5
	add	r7, r5, r0
	ldr	r1, .L240+0x4
	mov	ip, r1
	ldr	r2, .L240+0x8
	add	r6, r5, r2
.L235:
	lsl	r2, r4, #0x1
	add	r3, r7, r2
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	add	r2, r2, ip
	ldrh	r0, [r2]
	strh	r0, [r3]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x9
	bls	.L235	@cond_branch
	ldr	r0, .L240+0xc
	add	r6, r5, r0
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L237	@cond_branch
	mov	r2, #0x83
	lsl	r2, r2, #0x5
	add	r4, r5, r2
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	add	r2, r2, #0x4
	add	r1, r5, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Sin
	ldr	r2, .L240+0x10
	add	r1, r5, r2
	strh	r0, [r1]
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	sub	r2, r2, #0xe
	add	r1, r5, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Cos
	ldr	r2, .L240+0x14
	add	r1, r5, r2
	strh	r0, [r1]
	ldrh	r0, [r6]
	ldr	r1, .L240+0x18
	add	r4, r5, r1
	strh	r0, [r4]
	ldr	r0, [r5]
	ldrh	r1, [r0, #0x24]
	add	r2, r2, #0x4
	add	r0, r5, r2
	strh	r1, [r0]
	ldr	r0, [r5]
	ldrh	r1, [r0, #0x26]
	add	r2, r2, #0x2
	add	r0, r5, r2
	strh	r1, [r0]
	bl	sub_817AB68
	ldrh	r0, [r4]
	strh	r0, [r6]
	bl	sub_817AA54
	ldrh	r0, [r4]
	strh	r0, [r6]
	mov	r0, #0x0
	b	.L239
.L241:
	.align	2, 0
.L240:
	.word	sPokeblockFeed
	.word	sMonPokeblockAnims
	.word	0x1051
	.word	0x1068
	.word	0x1074
	.word	0x1076
	.word	0x1078
.L237:
	mov	r0, #0x1
.L239:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 sub_817A91C,.Lfe24-sub_817A91C
	.align	2, 0
	.type	 sub_817A9E4,function
	.thumb_func
sub_817A9E4:
	push	{r4, r5, lr}
	ldr	r0, .L246
	ldr	r2, [r0]
	ldr	r1, .L246+0x4
	add	r0, r2, r1
	ldr	r5, .L246+0x8
	add	r4, r2, r5
	ldrh	r1, [r0]
	ldrh	r0, [r4]
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	ldr	r3, [r2]
	lsr	r1, r1, #0xf
	mov	r5, #0x85
	lsl	r5, r5, #0x4
	add	r0, r2, r5
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r3, #0x24]
	ldr	r3, [r2]
	mov	r0, #0xc5
	lsl	r0, r0, #0x4
	add	r2, r2, r0
	add	r2, r2, r1
	ldrh	r0, [r2]
	strh	r0, [r3, #0x26]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L243	@cond_branch
	mov	r0, #0x0
	b	.L245
.L247:
	.align	2, 0
.L246:
	.word	sPokeblockFeed
	.word	0x1078
	.word	0x1068
.L243:
	mov	r0, #0x1
.L245:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 sub_817A9E4,.Lfe25-sub_817A9E4
	.align	2, 0
	.type	 FreeMonSpriteOamMatrix,function
	.thumb_func
FreeMonSpriteOamMatrix:
	push	{lr}
	ldr	r0, .L249
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	FreeSpriteOamMatrix
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L250:
	.align	2, 0
.L249:
	.word	sPokeblockFeed
.Lfe26:
	.size	 FreeMonSpriteOamMatrix,.Lfe26-FreeMonSpriteOamMatrix
	.align	2, 0
	.type	 sub_817AA54,function
	.thumb_func
sub_817AA54:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	ldr	r0, .L257
	ldr	r7, [r0]
	ldr	r1, .L257+0x4
	add	r0, r7, r1
	ldrh	r0, [r0]
	mov	r9, r0
	ldr	r2, .L257+0x8
	add	r0, r7, r2
	ldrh	r0, [r0]
	mov	r3, r9
	sub	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	ldr	r4, .L257+0xc
	add	r1, r7, r4
	sub	r2, r2, #0xc
	add	r0, r7, r2
	ldrh	r0, [r0]
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp]
	ldr	r3, .L257+0x10
	add	r1, r7, r3
	sub	r4, r4, #0xc
	add	r0, r7, r4
	ldrh	r0, [r0]
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x4]
	mov	r5, #0x0
	mov	r0, r8
	sub	r0, r0, #0x1
	cmp	r5, r0
	bge	.L253	@cond_branch
	ldr	r1, [sp]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	ldr	r2, [sp, #0x4]
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	mov	sl, r0
.L255:
	mov	r3, r9
	add	r0, r3, r5
	lsl	r0, r0, #0x1
	mov	r4, #0x85
	lsl	r4, r4, #0x4
	add	r2, r7, r4
	add	r2, r2, r0
	ldrh	r6, [r2]
	ldr	r3, [sp, #0x8]
	sub	r1, r6, r3
	mov	r4, #0xc5
	lsl	r4, r4, #0x4
	add	r3, r7, r4
	add	r3, r3, r0
	ldrh	r4, [r3]
	mov	r0, sl
	sub	r4, r4, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	add	r5, r5, #0x1
	mov	r0, r1
	mul	r0, r0, r5
	mov	r1, r8
	str	r2, [sp, #0xc]
	str	r3, [sp, #0x10]
	bl	__divsi3
	sub	r6, r6, r0
	ldr	r2, [sp, #0xc]
	strh	r6, [r2]
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	mov	r0, r4
	mul	r0, r0, r5
	mov	r1, r8
	bl	__divsi3
	ldr	r3, [sp, #0x10]
	ldrh	r1, [r3]
	sub	r1, r1, r0
	strh	r1, [r3]
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r0, r8
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L255	@cond_branch
.L253:
	mov	r0, r9
	add	r0, r0, r8
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x1
	mov	r2, #0x85
	lsl	r2, r2, #0x4
	add	r1, r7, r2
	add	r1, r1, r0
	mov	r3, sp
	ldrh	r3, [r3]
	strh	r3, [r1]
	mov	r4, #0xc5
	lsl	r4, r4, #0x4
	add	r1, r7, r4
	add	r1, r1, r0
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	strh	r0, [r1]
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L258:
	.align	2, 0
.L257:
	.word	sPokeblockFeed
	.word	0x1070
	.word	0x1078
	.word	0x107a
	.word	0x107c
.Lfe27:
	.size	 sub_817AA54,.Lfe27-sub_817AA54
	.align	2, 0
	.type	 sub_817AB68,function
	.thumb_func
sub_817AB68:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	ldr	r0, .L270
	ldr	r6, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, .L270+0x4
	add	r0, r6, r1
	ldr	r2, .L270+0x8
	add	r1, r6, r2
	ldrh	r2, [r0]
	ldrh	r0, [r1]
	sub	r2, r2, r0
	ldr	r3, .L270+0xc
	add	r0, r6, r3
	ldr	r1, .L270+0x10
	add	r3, r6, r1
	ldrh	r1, [r0]
	ldrh	r0, [r3]
	sub	r1, r1, r0
	ldr	r3, .L270+0x14
	add	r3, r3, r6
	mov	r9, r3
	mov	r0, #0x83
	lsl	r0, r0, #0x5
	add	r0, r0, r6
	mov	r8, r0
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	str	r2, [sp, #0x4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	sl, r1
.L262:
	ldr	r1, .L270+0x18
	add	r0, r6, r1
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bge	.L263	@cond_branch
	neg	r0, r0
.L263:
	lsl	r0, r0, #0x10
	ldr	r3, .L270+0x1c
	add	r7, r6, r3
	lsr	r0, r0, #0x10
	ldrh	r1, [r7]
	add	r0, r0, r1
	lsl	r4, r0, #0x10
	strh	r0, [r7]
	ldr	r2, .L270+0x20
	add	r0, r6, r2
	ldrh	r2, [r0]
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp	r0, #0
	bge	.L264	@cond_branch
	mov	r0, #0x1
	str	r0, [sp]
.L264:
	ldr	r1, .L270+0x24
	add	r0, r6, r1
	ldrh	r0, [r0]
	mov	r3, r9
	ldrh	r1, [r3]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r1, #0
	beq	.L261	@cond_branch
	ldr	r0, [sp]
	cmp	r0, #0
	bne	.L266	@cond_branch
	mov	r1, r8
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	lsr	r4, r4, #0x18
	add	r1, r2, r4
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	lsl	r5, r5, #0x1
	mov	r2, #0x85
	lsl	r2, r2, #0x4
	add	r1, r6, r2
	add	r1, r1, r5
	ldr	r3, [sp, #0x4]
	add	r0, r3, r0
	strh	r0, [r1]
	mov	r1, r8
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	ldrh	r1, [r7]
	add	r1, r1, r4
	b	.L269
.L271:
	.align	2, 0
.L270:
	.word	sPokeblockFeed
	.word	0x107a
	.word	0x1074
	.word	0x107c
	.word	0x1076
	.word	0x1068
	.word	0x106a
	.word	0x1066
	.word	0x1064
	.word	0x1078
.L266:
	mov	r1, r8
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	lsr	r4, r4, #0x18
	sub	r1, r2, r4
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	lsl	r5, r5, #0x1
	mov	r2, #0x85
	lsl	r2, r2, #0x4
	add	r1, r6, r2
	add	r1, r1, r5
	ldr	r3, [sp, #0x4]
	add	r0, r3, r0
	strh	r0, [r1]
	mov	r1, r8
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	ldrh	r1, [r7]
	sub	r1, r1, r4
.L269:
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Cos
	mov	r3, #0xc5
	lsl	r3, r3, #0x4
	add	r1, r6, r3
	add	r1, r1, r5
	add	r0, r0, sl
	strh	r0, [r1]
	ldr	r1, .L272
	add	r0, r6, r1
	ldrh	r0, [r0]
	mov	r2, r8
	ldrh	r2, [r2]
	add	r0, r0, r2
	mov	r1, #0xff
	and	r0, r0, r1
	mov	r3, r8
	strh	r0, [r3]
	mov	r1, r9
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	b	.L262
.L273:
	.align	2, 0
.L272:
	.word	0x1062
.L261:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 sub_817AB68,.Lfe28-sub_817AB68
.text
	.align	2, 0

