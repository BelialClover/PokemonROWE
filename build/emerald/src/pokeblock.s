@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sSavedPokeblockData,object
	.size	 sSavedPokeblockData,8
sSavedPokeblockData:
	.word	0x0
	.space	4
	.align	2, 0
	.type	 sPokeblockMenu,object
	.size	 sPokeblockMenu,4
sPokeblockMenu:
	.word	0x0
	.globl	gPokeblockFlavorCompatibilityTable
	.section .rodata
	.type	 gPokeblockFlavorCompatibilityTable,object
	.size	 gPokeblockFlavorCompatibilityTable,125
gPokeblockFlavorCompatibilityTable:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x1
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.byte	0x0
	.byte	-0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.align	2, 0
	.type	 sBgTemplatesForPokeblockMenu,object
	.size	 sBgTemplatesForPokeblockMenu,12
sBgTemplatesForPokeblockMenu:
	.byte	0xf0
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xde
	.byte	0x21
	.byte	0x0
	.space	1
	.globl	gPokeblockNames
	.align	2, 0
	.type	 gPokeblockNames,object
gPokeblockNames:
	.word	0x0
	.word	gText_RedPokeblock
	.word	gText_BluePokeblock
	.word	gText_PinkPokeblock
	.word	gText_GreenPokeblock
	.word	gText_YellowPokeblock
	.word	gText_PurplePokeblock
	.word	gText_IndigoPokeblock
	.word	gText_BrownPokeblock
	.word	gText_LiteBluePokeblock
	.word	gText_OlivePokeblock
	.word	gText_GrayPokeblock
	.word	gText_BlackPokeblock
	.word	gText_WhitePokeblock
	.word	gText_GoldPokeblock
	.size	 gPokeblockNames,60
	.align	2, 0
	.type	 sPokeblockMenuActions,object
sPokeblockMenuActions:
	.word	gMenuText_Use
	.word	PokeblockAction_UseOnField
	.word	gMenuText_Toss
	.word	PokeblockAction_Toss
	.word	gText_Cancel2
	.word	PokeblockAction_Cancel
	.word	gMenuText_Use
	.word	PokeblockAction_UseInBattle
	.word	gMenuText_Use
	.word	PokeblockAction_UseOnPokeblockFeeder
	.word	gMenuText_Give2
	.word	PokeblockAction_GiveToContestLady
	.size	 sPokeblockMenuActions,48
	.type	 sActionsOnField,object
sActionsOnField:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sActionsOnField,3
	.type	 sActionsInBattle,object
sActionsInBattle:
	.byte	0x3
	.byte	0x2
	.size	 sActionsInBattle,2
	.type	 sActionsOnPokeblockFeeder,object
sActionsOnPokeblockFeeder:
	.byte	0x4
	.byte	0x2
	.size	 sActionsOnPokeblockFeeder,2
	.type	 sActionsWhenGivingToLady,object
sActionsWhenGivingToLady:
	.byte	0x5
	.byte	0x2
	.size	 sActionsWhenGivingToLady,2
	.align	2, 0
	.type	 sTossYesNoFuncTable,object
	.size	 sTossYesNoFuncTable,8
sTossYesNoFuncTable:
	.word	TossPokeblockChoice_Yes
	.word	TossPokeblockChoice_No
	.type	 sContestStatsMonData,object
sContestStatsMonData:
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x21
	.byte	0x2f
	.size	 sContestStatsMonData,5
	.align	2, 0
	.type	 sOamData_PokeblockCase,object
	.size	 sOamData_PokeblockCase,8
sOamData_PokeblockCase:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_PokeblockCase,object
sSpriteAnim_PokeblockCase:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_PokeblockCase,8
	.align	2, 0
	.type	 sSpriteAnimTable_PokeblockCase,object
sSpriteAnimTable_PokeblockCase:
	.word	sSpriteAnim_PokeblockCase
	.size	 sSpriteAnimTable_PokeblockCase,4
	.align	2, 0
	.type	 sSpriteAffineAnim_85B26C8,object
sSpriteAffineAnim_85B26C8:
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x2
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_85B26C8,40
	.align	2, 0
	.type	 sSpriteAffineAnimTable_85B26F0,object
sSpriteAffineAnimTable_85B26F0:
	.word	sSpriteAffineAnim_85B26C8
	.size	 sSpriteAffineAnimTable_85B26F0,4
	.globl	gPokeblockCase_SpriteSheet
	.align	2, 0
	.type	 gPokeblockCase_SpriteSheet,object
	.size	 gPokeblockCase_SpriteSheet,8
gPokeblockCase_SpriteSheet:
	.word	gMenuPokeblockDevice_Gfx
	.short	0x800
	.short	0x39d0
	.globl	gPokeblockCase_SpritePal
	.align	2, 0
	.type	 gPokeblockCase_SpritePal,object
	.size	 gPokeblockCase_SpritePal,8
gPokeblockCase_SpritePal:
	.word	gMenuPokeblockDevice_Pal
	.short	0x39d0
	.space	2
	.align	2, 0
	.type	 sSpriteTemplate_PokeblockCase,object
	.size	 sSpriteTemplate_PokeblockCase,24
sSpriteTemplate_PokeblockCase:
	.short	0x39d0
	.short	0x39d0
	.word	sOamData_PokeblockCase
	.word	sSpriteAnimTable_PokeblockCase
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.type	 sTextColorInPokeblockMenu,object
	.size	 sTextColorInPokeblockMenu,3
sTextColorInPokeblockMenu:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.align	2, 0
	.type	 sFavoritePokeblocksTable,object
sFavoritePokeblocksTable:
	.byte	0x1
	.byte	0x14
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x2
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.byte	0x14
	.space	1
	.size	 sFavoritePokeblocksTable,40
	.align	2, 0
	.type	 sWindowTemplatesForPokeblockMenu,object
sWindowTemplatesForPokeblockMenu:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0xf
	.short	0x1e
	.byte	0x0
	.byte	0xf
	.byte	0x1
	.byte	0xe
	.byte	0x12
	.byte	0xf
	.short	0x30
	.byte	0x0
	.byte	0x2
	.byte	0xd
	.byte	0x5
	.byte	0x2
	.byte	0xf
	.short	0x12c
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x5
	.byte	0x2
	.byte	0xf
	.short	0x136
	.byte	0x0
	.byte	0x2
	.byte	0x11
	.byte	0x5
	.byte	0x2
	.byte	0xf
	.short	0x140
	.byte	0x0
	.byte	0x8
	.byte	0xd
	.byte	0x5
	.byte	0x2
	.byte	0xf
	.short	0x14a
	.byte	0x0
	.byte	0x8
	.byte	0xf
	.byte	0x5
	.byte	0x2
	.byte	0xf
	.short	0x154
	.byte	0x0
	.byte	0xb
	.byte	0x11
	.byte	0x2
	.byte	0x2
	.byte	0xf
	.short	0x15e
	.byte	0x1
	.byte	0x7
	.byte	0x5
	.byte	0x6
	.byte	0x6
	.byte	0xf
	.short	0x162
	.byte	0x1
	.byte	0x7
	.byte	0x7
	.byte	0x6
	.byte	0x4
	.byte	0xf
	.short	0x186
	.byte	0x1
	.byte	0x2
	.byte	0xf
	.byte	0x1b
	.byte	0x4
	.byte	0xf
	.short	0x19e
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplatesForPokeblockMenu,96
	.align	2, 0
	.type	 sTossPkblockWindowTemplate,object
	.size	 sTossPkblockWindowTemplate,8
sTossPkblockWindowTemplate:
	.byte	0x1
	.byte	0x15
	.byte	0x9
	.byte	0x5
	.byte	0x4
	.byte	0xf
	.short	0x20a
	.align	2, 0
	.type	 sPokeblockListMenuTemplate,object
	.size	 sPokeblockListMenuTemplate,24
sPokeblockListMenuTemplate:
	.word	0x0
	.word	MovePokeblockMenuCursor
	.word	0x0
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x21
	.byte	0x30
	.byte	0x40
	.byte	0x41
.text
	.align	2, 0
	.globl	OpenPokeblockCase
	.type	 OpenPokeblockCase,function
	.thumb_func
OpenPokeblockCase:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L11
	ldr	r0, .L11+0x4
	bl	Alloc
	str	r0, [r5]
	ldr	r2, .L11+0x8
	add	r0, r0, r2
	mov	r3, #0x0
	strb	r4, [r0]
	ldr	r0, [r5]
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r1, r0, r4
	str	r3, [r1]
	ldr	r1, .L11+0xc
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, [r5]
	ldr	r4, .L11+0x10
	add	r0, r0, r4
	strb	r3, [r0]
	ldr	r0, .L11+0x14
	str	r6, [r0]
	ldr	r5, [r5]
	add	r2, r5, r2
	ldrb	r2, [r2]
	cmp	r2, #0x2
	beq	.L5	@cond_branch
	cmp	r2, #0x2
	bgt	.L9	@cond_branch
	cmp	r2, #0x1
	beq	.L4	@cond_branch
	b	.L7
.L12:
	.align	2, 0
.L11:
	.word	sPokeblockMenu
	.word	0xe88
	.word	0x809
	.word	0xe7c
	.word	0xe7d
	.word	sSavedPokeblockData
.L9:
	cmp	r2, #0x3
	beq	.L6	@cond_branch
	b	.L7
.L4:
	ldr	r0, .L13
	add	r1, r5, r0
	ldr	r0, .L13+0x4
	str	r0, [r1]
	ldr	r4, .L13+0x8
	add	r1, r5, r4
	mov	r0, #0x2
	b	.L10
.L14:
	.align	2, 0
.L13:
	.word	0x804
	.word	sActionsInBattle
	.word	0x808
.L5:
	ldr	r1, .L15
	add	r0, r5, r1
	ldr	r1, .L15+0x4
	str	r1, [r0]
	ldr	r4, .L15+0x8
	add	r0, r5, r4
	strb	r2, [r0]
	b	.L3
.L16:
	.align	2, 0
.L15:
	.word	0x804
	.word	sActionsOnPokeblockFeeder
	.word	0x808
.L6:
	ldr	r0, .L17
	add	r1, r5, r0
	ldr	r0, .L17+0x4
	str	r0, [r1]
	ldr	r4, .L17+0x8
	add	r1, r5, r4
	mov	r0, #0x2
	b	.L10
.L18:
	.align	2, 0
.L17:
	.word	0x804
	.word	sActionsWhenGivingToLady
	.word	0x808
.L7:
	ldr	r0, .L19
	ldr	r1, [r0]
	ldr	r0, .L19+0x4
	add	r2, r1, r0
	ldr	r0, .L19+0x8
	str	r0, [r2]
	ldr	r4, .L19+0xc
	add	r1, r1, r4
	mov	r0, #0x3
.L10:
	strb	r0, [r1]
.L3:
	ldr	r0, .L19+0x10
	bl	SetMainCallback2
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L20:
	.align	2, 0
.L19:
	.word	sPokeblockMenu
	.word	0x804
	.word	sActionsOnField
	.word	0x808
	.word	CB2_InitPokeblockMenu
.Lfe1:
	.size	 OpenPokeblockCase,.Lfe1-OpenPokeblockCase
	.align	2, 0
	.globl	OpenPokeblockCaseInBattle
	.type	 OpenPokeblockCaseInBattle,function
	.thumb_func
OpenPokeblockCaseInBattle:
	push	{lr}
	ldr	r1, .L22
	mov	r0, #0x1
	bl	OpenPokeblockCase
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	CB2_SetUpReshowBattleScreenAfterMenu2
.Lfe2:
	.size	 OpenPokeblockCaseInBattle,.Lfe2-OpenPokeblockCaseInBattle
	.align	2, 0
	.globl	OpenPokeblockCaseOnFeeder
	.type	 OpenPokeblockCaseOnFeeder,function
	.thumb_func
OpenPokeblockCaseOnFeeder:
	push	{lr}
	ldr	r1, .L25
	mov	r0, #0x2
	bl	OpenPokeblockCase
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	CB2_ReturnToField
.Lfe3:
	.size	 OpenPokeblockCaseOnFeeder,.Lfe3-OpenPokeblockCaseOnFeeder
	.align	2, 0
	.type	 CB2_PokeblockMenu,function
	.thumb_func
CB2_PokeblockMenu:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	DoScheduledBgTilemapCopiesToVram
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_PokeblockMenu,.Lfe4-CB2_PokeblockMenu
	.align	2, 0
	.type	 VBlankCB_PokeblockMenu,function
	.thumb_func
VBlankCB_PokeblockMenu:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 VBlankCB_PokeblockMenu,.Lfe5-VBlankCB_PokeblockMenu
	.align	2, 0
	.type	 CB2_InitPokeblockMenu,function
	.thumb_func
CB2_InitPokeblockMenu:
	push	{lr}
.L30:
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L31	@cond_branch
	bl	InitPokeblockMenu
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L31	@cond_branch
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L30	@cond_branch
.L31:
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 CB2_InitPokeblockMenu,.Lfe6-CB2_InitPokeblockMenu
	.align	2, 0
	.type	 InitPokeblockMenu,function
	.thumb_func
InitPokeblockMenu:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L65
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x12
	bls	.LCB272
	b	.L60	@long jump
.LCB272:
	lsl	r0, r0, #0x2
	ldr	r1, .L65+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L66:
	.align	2, 0
.L65:
	.word	gMain
	.word	.L61
	.align	2, 0
	.align	2, 0
.L61:
	.word	.L39
	.word	.L40
	.word	.L41
	.word	.L42
	.word	.L43
	.word	.L44
	.word	.L46
	.word	.L47
	.word	.L49
	.word	.L50
	.word	.L51
	.word	.L52
	.word	.L53
	.word	.L54
	.word	.L55
	.word	.L56
	.word	.L57
	.word	.L58
	.word	.L59
.L39:
	bl	SetVBlankHBlankCallbacksToNull
	bl	ClearScheduledBgCopiesToVram
	b	.L63
.L40:
	bl	ScanlineEffect_Stop
	ldr	r1, .L67
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L68:
	.align	2, 0
.L67:
	.word	gMain
.L41:
	bl	FreeAllSpritePalettes
	b	.L63
.L42:
	bl	ResetPaletteFade
	ldr	r2, .L69
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r1, .L69+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L70:
	.align	2, 0
.L69:
	.word	gPaletteFade
	.word	gMain
.L43:
	bl	ResetSpriteData
	b	.L63
.L44:
	ldr	r0, .L71
	ldr	r0, [r0]
	ldr	r1, .L71+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.LCB353
	b	.L63	@long jump
.LCB353:
	bl	ResetTasks
	b	.L63
.L72:
	.align	2, 0
.L71:
	.word	sPokeblockMenu
	.word	0x809
.L46:
	bl	HandleInitBackgrounds
	ldr	r0, .L73
	ldr	r0, [r0]
	ldr	r1, .L73+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	b	.L63
.L74:
	.align	2, 0
.L73:
	.word	sPokeblockMenu
	.word	0xe7e
.L47:
	bl	LoadPokeblockMenuGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB391
	b	.L38	@long jump
.LCB391:
	ldr	r1, .L75
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L76:
	.align	2, 0
.L75:
	.word	gMain
.L49:
	bl	SetMenuItemsCountAndMaxShowed
	bl	sub_81362E0
	bl	sub_8136344
	b	.L63
.L50:
	mov	r0, #0x38
	mov	r1, #0x40
	mov	r2, #0x0
	bl	CreatePokeblockCaseSprite
	ldr	r1, .L77
	ldr	r1, [r1]
	ldr	r2, .L77+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r1, .L77+0x8
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L78:
	.align	2, 0
.L77:
	.word	sPokeblockMenu
	.word	0xe74
	.word	gMain
.L51:
	ldr	r0, .L79
	ldr	r0, [r0]
	ldr	r1, .L79+0x4
	add	r0, r0, r1
	mov	r1, #0x7
	bl	sub_8122344
	b	.L63
.L80:
	.align	2, 0
.L79:
	.word	sPokeblockMenu
	.word	0xe75
.L52:
	ldr	r0, .L81
	ldrh	r0, [r0, #0x4]
	ldr	r1, .L81+0x4
	bl	HandlePokeblockMenuCursor
	ldr	r1, .L81+0x8
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L82:
	.align	2, 0
.L81:
	.word	sSavedPokeblockData
	.word	0x1005
	.word	gMain
.L53:
	bl	HandleInitWindows
	b	.L63
.L54:
	bl	HandlePokeblockListMenuItems
	ldr	r1, .L83
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L84:
	.align	2, 0
.L83:
	.word	gMain
.L55:
	bl	sub_81363BC
	b	.L63
.L56:
	ldr	r0, .L85
	mov	r1, #0x0
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L85+0x4
	ldr	r2, .L85+0x8
	ldrh	r1, [r2, #0x6]
	ldrh	r2, [r2, #0x4]
	bl	ListMenuInit
	ldr	r2, .L85+0xc
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x8]
	ldr	r1, .L85+0x10
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L86:
	.align	2, 0
.L85:
	.word	Task_HandlePokeblockMenuInput
	.word	gMultiuseListMenuTemplate
	.word	sSavedPokeblockData
	.word	gTasks
	.word	gMain
.L57:
	bl	PutPokeblockInfoText
	b	.L63
.L58:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r1, .L87
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L64
.L88:
	.align	2, 0
.L87:
	.word	gMain
.L59:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L89
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
.L63:
	ldr	r1, .L89+0x4
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
.L64:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L38
.L90:
	.align	2, 0
.L89:
	.word	gPaletteFade
	.word	gMain
.L60:
	ldr	r0, .L91
	bl	SetVBlankCallback
	ldr	r0, .L91+0x4
	bl	SetMainCallback2
	mov	r0, #0x1
	b	.L62
.L92:
	.align	2, 0
.L91:
	.word	VBlankCB_PokeblockMenu
	.word	CB2_PokeblockMenu
.L38:
	mov	r0, #0x0
.L62:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 InitPokeblockMenu,.Lfe7-InitPokeblockMenu
	.align	2, 0
	.type	 HandleInitBackgrounds,function
	.thumb_func
HandleInitBackgrounds:
	push	{lr}
	bl	ResetVramOamAndBgCntRegs
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L94
	mov	r0, #0x0
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r0, .L94+0x4
	ldr	r1, [r0]
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	bl	ResetAllBgsCoordinates
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L95:
	.align	2, 0
.L94:
	.word	sBgTemplatesForPokeblockMenu
	.word	sPokeblockMenu
.Lfe8:
	.size	 HandleInitBackgrounds,.Lfe8-HandleInitBackgrounds
	.align	2, 0
	.type	 LoadPokeblockMenuGfx,function
	.thumb_func
LoadPokeblockMenuGfx:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L110
	ldr	r0, [r0]
	ldr	r1, .L110+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x5
	bhi	.L97	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L110+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L111:
	.align	2, 0
.L110:
	.word	sPokeblockMenu
	.word	0xe7e
	.word	.L105
	.align	2, 0
	.align	2, 0
.L105:
	.word	.L98
	.word	.L99
	.word	.L101
	.word	.L102
	.word	.L103
	.word	.L104
.L98:
	bl	ResetTempTileDataBuffers
	ldr	r1, .L112
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L108
.L113:
	.align	2, 0
.L112:
	.word	gMenuPokeblock_Gfx
.L99:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L97	@cond_branch
	ldr	r0, .L114
	ldr	r4, .L114+0x4
	ldr	r1, [r4]
	bl	LZDecompressWram
	ldr	r1, [r4]
	b	.L109
.L115:
	.align	2, 0
.L114:
	.word	gMenuPokeblock_Tilemap
	.word	sPokeblockMenu
.L101:
	ldr	r0, .L116
	mov	r1, #0x0
	mov	r2, #0xc0
	bl	LoadCompressedPalette
	b	.L108
.L117:
	.align	2, 0
.L116:
	.word	gMenuPokeblock_Pal
.L102:
	ldr	r0, .L118
	bl	LoadCompressedSpriteSheet
	b	.L108
.L119:
	.align	2, 0
.L118:
	.word	gPokeblockCase_SpriteSheet
.L103:
	ldr	r0, .L120
	bl	LoadCompressedSpritePalette
.L108:
	ldr	r0, .L120+0x4
	ldr	r1, [r0]
.L109:
	ldr	r0, .L120+0x8
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L97
.L121:
	.align	2, 0
.L120:
	.word	gPokeblockCase_SpritePal
	.word	sPokeblockMenu
	.word	0xe7e
.L104:
	bl	LoadListMenuArrowsGfx
	ldr	r0, .L122
	ldr	r0, [r0]
	ldr	r1, .L122+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L107
.L123:
	.align	2, 0
.L122:
	.word	sPokeblockMenu
	.word	0xe7e
.L97:
	mov	r0, #0x0
.L107:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 LoadPokeblockMenuGfx,.Lfe9-LoadPokeblockMenuGfx
	.align	2, 0
	.type	 HandleInitWindows,function
	.thumb_func
HandleInitWindows:
	push	{r4, lr}
	ldr	r0, .L130
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xe0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd0
	bl	LoadMessageBoxGfx
	ldr	r0, .L130+0x4
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r4, #0x0
.L128:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xa
	bls	.L128	@cond_branch
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	sWindowTemplatesForPokeblockMenu
	.word	gUnknown_0860F074
.Lfe10:
	.size	 HandleInitWindows,.Lfe10-HandleInitWindows
	.align	2, 0
	.type	 PrintOnPokeblockWindow,function
	.thumb_func
PrintOnPokeblockWindow:
	push	{r4, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	ldr	r3, .L133
	str	r3, [sp, #0x8]
	str	r4, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L134:
	.align	2, 0
.L133:
	.word	sTextColorInPokeblockMenu
.Lfe11:
	.size	 PrintOnPokeblockWindow,.Lfe11-PrintOnPokeblockWindow
	.align	2, 0
	.type	 PutPokeblockInfoText,function
	.thumb_func
PutPokeblockInfoText:
	push	{r4, lr}
	mov	r0, #0xea
	lsl	r0, r0, #0x1
	bl	ItemId_GetName
	add	r4, r0, #0
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x48
	bl	GetStringCenterAlignXOffset
	add	r2, r0, #0
	mov	r0, #0x0
	add	r1, r4, #0
	bl	PrintOnPokeblockWindow
	ldr	r1, .L141
	mov	r0, #0x2
	mov	r2, #0x0
	bl	PrintOnPokeblockWindow
	ldr	r1, .L141+0x4
	mov	r0, #0x3
	mov	r2, #0x0
	bl	PrintOnPokeblockWindow
	ldr	r1, .L141+0x8
	mov	r0, #0x4
	mov	r2, #0x0
	bl	PrintOnPokeblockWindow
	ldr	r1, .L141+0xc
	mov	r0, #0x5
	mov	r2, #0x0
	bl	PrintOnPokeblockWindow
	ldr	r1, .L141+0x10
	mov	r0, #0x6
	mov	r2, #0x0
	bl	PrintOnPokeblockWindow
	mov	r4, #0x0
.L139:
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L139	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	gText_Spicy
	.word	gText_Dry
	.word	gText_Sweet
	.word	gText_Bitter
	.word	gText_Sour
.Lfe12:
	.size	 PutPokeblockInfoText,.Lfe12-PutPokeblockInfoText
	.align	2, 0
	.type	 HandlePokeblockListMenuItems,function
	.thumb_func
HandlePokeblockListMenuItems:
	push	{r4, r5, r6, r7, lr}
	mov	r6, #0x0
	ldr	r1, .L149
	ldr	r0, [r1]
	ldr	r2, .L149+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r6, r0
	bge	.L145	@cond_branch
	add	r5, r1, #0
.L147:
	lsl	r4, r6, #0x5
	ldr	r3, .L149+0x8
	add	r4, r4, r3
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r1, r6, #0
	bl	PutPokeblockListMenuString
	ldr	r1, [r5]
	lsl	r2, r6, #0x3
	ldr	r7, .L149+0xc
	add	r0, r1, r7
	add	r0, r0, r2
	add	r4, r1, r4
	str	r4, [r0]
	mov	r3, #0x81
	lsl	r3, r3, #0x4
	add	r0, r1, r3
	add	r0, r0, r2
	str	r6, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r4, .L149+0x4
	add	r1, r1, r4
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r6, r0
	blt	.L147	@cond_branch
.L145:
	ldr	r5, .L149
	lsl	r4, r6, #0x5
	ldr	r7, .L149+0x8
	add	r4, r4, r7
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L149+0x10
	bl	StringCopy
	ldr	r1, [r5]
	lsl	r2, r6, #0x3
	ldr	r3, .L149+0xc
	add	r0, r1, r3
	add	r0, r0, r2
	add	r4, r1, r4
	str	r4, [r0]
	mov	r0, #0x81
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r2
	mov	r0, #0x2
	neg	r0, r0
	str	r0, [r1]
	ldr	r2, .L149+0x14
	add	r1, r2, #0
	ldr	r0, .L149+0x18
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	ldrb	r1, [r2, #0x17]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x7
	orr	r0, r0, r1
	strb	r0, [r2, #0x17]
	ldr	r1, [r5]
	ldr	r4, .L149+0x4
	add	r0, r1, r4
	ldrb	r0, [r0]
	strh	r0, [r2, #0xc]
	add	r3, r1, r3
	str	r3, [r2]
	ldr	r6, .L149+0x1c
	add	r1, r1, r6
	ldrb	r0, [r1]
	strh	r0, [r2, #0xe]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L150:
	.align	2, 0
.L149:
	.word	sPokeblockMenu
	.word	0x80a
	.word	0x954
	.word	0x80c
	.word	gText_StowCase
	.word	gMultiuseListMenuTemplate
	.word	sPokeblockListMenuTemplate
	.word	0x80b
.Lfe13:
	.size	 HandlePokeblockListMenuItems,.Lfe13-HandlePokeblockListMenuItems
	.align	2, 0
	.type	 PutPokeblockListMenuString,function
	.thumb_func
PutPokeblockListMenuString:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	ldr	r2, .L152
	lsr	r1, r1, #0xd
	ldr	r3, .L152+0x4
	add	r1, r1, r3
	ldr	r5, [r2]
	add	r5, r5, r1
	ldr	r2, .L152+0x8
	ldrb	r1, [r5]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	add	r4, r0, #0
	mov	r0, #0xfc
	strb	r0, [r4]
	add	r4, r4, #0x1
	mov	r0, #0x12
	strb	r0, [r4]
	add	r4, r4, #0x1
	mov	r0, #0x57
	strb	r0, [r4]
	add	r4, r4, #0x1
	ldr	r6, .L152+0xc
	add	r0, r5, #0
	bl	GetHighestPokeblocksFlavorLevel
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L152+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	gSaveBlock1Ptr
	.word	0xe5c
	.word	gPokeblockNames
	.word	gStringVar1
	.word	gText_LvVar1
.Lfe14:
	.size	 PutPokeblockListMenuString,.Lfe14-PutPokeblockListMenuString
	.align	2, 0
	.type	 MovePokeblockMenuCursor,function
	.thumb_func
MovePokeblockMenuCursor:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L155	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L157
	ldr	r0, .L157+0x4
	ldr	r0, [r0]
	ldr	r1, .L157+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L157+0xc
	str	r1, [r0]
.L155:
	ldr	r0, .L157+0x4
	ldr	r0, [r0]
	ldr	r1, .L157+0x10
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L156	@cond_branch
	add	r0, r4, #0
	bl	sub_8135FCC
.L156:
	pop	{r4}
	pop	{r0}
	bx	r0
.L158:
	.align	2, 0
.L157:
	.word	gSprites
	.word	sPokeblockMenu
	.word	0xe74
	.word	sub_8136470
	.word	0xe7d
.Lfe15:
	.size	 MovePokeblockMenuCursor,.Lfe15-MovePokeblockMenuCursor
	.align	2, 0
	.type	 sub_8135FCC,function
	.thumb_func
sub_8135FCC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0x7
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L160	@cond_branch
	ldr	r1, .L174
	lsl	r0, r4, #0x3
	ldr	r2, .L174+0x4
	add	r0, r0, r2
	ldr	r1, [r1]
	add	r1, r1, r0
	mov	r8, r1
	add	r1, sp, #0x8
	mov	r0, #0x17
	strh	r0, [r1]
	mov	r0, #0x18
	strh	r0, [r1, #0x2]
	mov	r5, #0x0
	add	r6, r1, #0
.L164:
	add	r4, r5, #0x1
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	GetPokeblockData
	lsl	r0, r0, #0x10
	add	r7, r4, #0
	cmp	r0, #0
	ble	.L165	@cond_branch
	lsl	r1, r5, #0xc
	add	r0, r1, #0
	add	r0, r0, #0x17
	strh	r0, [r6]
	add	r1, r1, #0x18
	strh	r1, [r6, #0x2]
	b	.L166
.L175:
	.align	2, 0
.L174:
	.word	gSaveBlock1Ptr
	.word	0xe5c
.L165:
	mov	r0, #0xf
	strh	r0, [r6]
	strh	r0, [r6, #0x2]
.L166:
	add	r0, r5, #0
	mov	r1, #0x3
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x1
	add	r4, r4, r0
	lsl	r4, r4, #0x1
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x3
	bl	__umodsi3
	add	r3, r0, #0
	lsl	r3, r3, #0x19
	mov	r0, #0xd0
	lsl	r0, r0, #0x14
	add	r3, r3, r0
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	add	r1, sp, #0x8
	add	r2, r4, #0
	bl	CopyToBgTilemapBufferRect
	lsl	r0, r7, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L164	@cond_branch
	ldr	r4, .L176
	mov	r0, r8
	bl	GetPokeblocksFeel
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x7
	add	r1, r4, #0
	mov	r2, #0x4
	bl	PrintOnPokeblockWindow
	b	.L168
.L177:
	.align	2, 0
.L176:
	.word	gStringVar1
.L160:
	add	r0, sp, #0x8
	mov	r1, #0xf
	strh	r1, [r0]
	strh	r1, [r0, #0x2]
	mov	r5, #0x0
.L172:
	add	r0, r5, #0
	mov	r1, #0x3
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x1
	add	r4, r4, r0
	lsl	r4, r4, #0x1
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x3
	bl	__umodsi3
	add	r3, r0, #0
	lsl	r3, r3, #0x19
	mov	r2, #0xd0
	lsl	r2, r2, #0x14
	add	r3, r3, r2
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	add	r1, sp, #0x8
	add	r2, r4, #0
	bl	CopyToBgTilemapBufferRect
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L172	@cond_branch
	mov	r0, #0x7
	mov	r1, #0x2
	bl	CopyWindowToVram
.L168:
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 sub_8135FCC,.Lfe16-sub_8135FCC
	.align	2, 0
	.type	 HandlePokeblockMenuCursor,function
	.thumb_func
HandlePokeblockMenuCursor:
	push	{lr}
	add	sp, sp, #-0x8
	add	r3, r0, #0
	lsl	r3, r3, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsr	r3, r3, #0xf
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0xe
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r2, #0xf
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 HandlePokeblockMenuCursor,.Lfe17-HandlePokeblockMenuCursor
	.align	2, 0
	.type	 CompactPokeblockSlots,function
	.thumb_func
CompactPokeblockSlots:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r2, #0x0
.L183:
	add	r1, r2, #0x1
	lsl	r0, r1, #0x10
	lsr	r6, r0, #0x10
	mov	ip, r1
	cmp	r6, #0x27
	bhi	.L182	@cond_branch
	ldr	r0, .L191
	mov	r9, r0
	lsl	r7, r2, #0x3
	ldr	r1, .L191+0x4
	mov	r8, r1
.L187:
	mov	r2, r9
	ldr	r1, [r2]
	add	r0, r1, r7
	mov	r2, r8
	add	r5, r0, r2
	ldrb	r0, [r5]
	cmp	r0, #0
	bne	.L186	@cond_branch
	ldr	r3, [r5]		@ created by thumb_load_double_from_address
	ldr	r4, [r5, #0x4]		@ created by thumb_load_double_from_address
	lsl	r2, r6, #0x3
	add	r2, r1, r2
	ldr	r0, .L191+0x4
	add	r2, r2, r0
	ldr	r0, [r2]		@ created by thumb_load_double_from_address
	ldr	r1, [r2, #0x4]		@ created by thumb_load_double_from_address
	str	r0, [r5]
	str	r1, [r5, #0x4]
	str	r3, [r2]
	str	r4, [r2, #0x4]
.L186:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x27
	bls	.L187	@cond_branch
.L182:
	mov	r1, ip
	lsl	r0, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x26
	bls	.L183	@cond_branch
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	gSaveBlock1Ptr
	.word	0xe5c
.Lfe18:
	.size	 CompactPokeblockSlots,.Lfe18-CompactPokeblockSlots
	.align	2, 0
	.type	 SwapSortPokeblocksInternalData,function
	.thumb_func
SwapSortPokeblocksInternalData:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L207
	ldr	r0, [r0]
	ldr	r1, .L207+0x4
	add	r6, r0, r1
	cmp	r4, r5
	beq	.L193	@cond_branch
	mov	r0, #0x8
	bl	Alloc
	add	r7, r0, #0
	lsl	r0, r4, #0x3
	add	r0, r0, r6
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r7]
	str	r1, [r7, #0x4]
	cmp	r5, r4
	bls	.L195	@cond_branch
	sub	r5, r5, #0x1
	lsl	r3, r4, #0x10
	lsl	r0, r5, #0x10
	asr	r1, r0, #0x10
	cmp	r3, r0
	bge	.L201	@cond_branch
	add	r4, r1, #0
.L199:
	asr	r3, r3, #0x10
	lsl	r2, r3, #0x3
	add	r2, r2, r6
	ldr	r0, [r2, #0x8]		@ created by thumb_load_double_from_address
	ldr	r1, [r2, #0xc]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x10
	asr	r0, r3, #0x10
	cmp	r0, r4
	blt	.L199	@cond_branch
	b	.L201
.L208:
	.align	2, 0
.L207:
	.word	gSaveBlock1Ptr
	.word	0xe5c
.L195:
	lsl	r3, r4, #0x10
	lsl	r0, r5, #0x10
	asr	r1, r0, #0x10
	cmp	r3, r0
	ble	.L201	@cond_branch
	add	r4, r1, #0
.L205:
	asr	r3, r3, #0x10
	lsl	r2, r3, #0x3
	add	r2, r2, r6
	add	r0, r2, #0
	sub	r0, r0, #0x8
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x10
	asr	r0, r3, #0x10
	cmp	r0, r4
	bgt	.L205	@cond_branch
.L201:
	lsl	r2, r5, #0x3
	add	r2, r2, r6
	ldr	r0, [r7]		@ created by thumb_load_double_from_address
	ldr	r1, [r7, #0x4]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	add	r0, r7, #0
	bl	Free
.L193:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 SwapSortPokeblocksInternalData,.Lfe19-SwapSortPokeblocksInternalData
	.align	2, 0
	.globl	ResetPokeblockScrollPositions
	.type	 ResetPokeblockScrollPositions,function
	.thumb_func
ResetPokeblockScrollPositions:
	ldr	r1, .L210
	mov	r0, #0x0
	strh	r0, [r1, #0x4]
	strh	r0, [r1, #0x6]
	bx	lr
.L211:
	.align	2, 0
.L210:
	.word	sSavedPokeblockData
.Lfe20:
	.size	 ResetPokeblockScrollPositions,.Lfe20-ResetPokeblockScrollPositions
	.align	2, 0
	.type	 SetMenuItemsCountAndMaxShowed,function
	.thumb_func
SetMenuItemsCountAndMaxShowed:
	push	{r4, r5, lr}
	bl	CompactPokeblockSlots
	ldr	r0, .L221
	ldr	r0, [r0]
	ldr	r1, .L221+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r2, #0x0
	ldr	r5, .L221+0x8
	ldr	r4, .L221+0xc
.L216:
	ldr	r0, [r5]
	lsl	r1, r2, #0x3
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	ldr	r3, .L221
	cmp	r0, #0
	beq	.L215	@cond_branch
	ldr	r1, [r3]
	ldr	r0, .L221+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L215:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x27
	bls	.L216	@cond_branch
	ldr	r0, [r3]
	ldr	r2, .L221+0x4
	add	r0, r0, r2
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r3]
	add	r2, r0, r2
	ldrb	r2, [r2]
	cmp	r2, #0x9
	bls	.L219	@cond_branch
	ldr	r2, .L221+0x10
	add	r1, r0, r2
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L220
.L222:
	.align	2, 0
.L221:
	.word	sPokeblockMenu
	.word	0x80a
	.word	gSaveBlock1Ptr
	.word	0xe5c
	.word	0x80b
.L219:
	ldr	r1, .L223
	add	r0, r0, r1
	strb	r2, [r0]
.L220:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L224:
	.align	2, 0
.L223:
	.word	0x80b
.Lfe21:
	.size	 SetMenuItemsCountAndMaxShowed,.Lfe21-SetMenuItemsCountAndMaxShowed
	.align	2, 0
	.type	 sub_81362E0,function
	.thumb_func
sub_81362E0:
	push	{r4, r5, lr}
	ldr	r0, .L231
	ldrh	r1, [r0, #0x6]
	add	r3, r0, #0
	ldr	r4, .L231+0x4
	cmp	r1, #0
	beq	.L226	@cond_branch
	ldrh	r0, [r3, #0x6]
	ldr	r1, [r4]
	ldr	r5, .L231+0x8
	add	r2, r1, r5
	ldrb	r2, [r2]
	add	r0, r0, r2
	sub	r5, r5, #0x1
	add	r1, r1, r5
	ldrb	r1, [r1]
	cmp	r0, r1
	ble	.L226	@cond_branch
	sub	r0, r1, r2
	strh	r0, [r3, #0x6]
.L226:
	add	r2, r3, #0
	ldrh	r1, [r2, #0x6]
	ldrh	r0, [r2, #0x4]
	add	r1, r1, r0
	ldr	r0, [r4]
	ldr	r4, .L231+0xc
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r1, r0
	blt	.L228	@cond_branch
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L229	@cond_branch
	strh	r1, [r2, #0x4]
	b	.L228
.L232:
	.align	2, 0
.L231:
	.word	sSavedPokeblockData
	.word	sPokeblockMenu
	.word	0x80b
	.word	0x80a
.L229:
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x4]
.L228:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 sub_81362E0,.Lfe22-sub_81362E0
	.align	2, 0
	.type	 sub_8136344,function
	.thumb_func
sub_8136344:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L241
	ldrh	r1, [r0, #0x4]
	add	r5, r0, #0
	cmp	r1, #0x4
	bls	.L234	@cond_branch
	mov	r4, #0x0
	ldrh	r0, [r5, #0x4]
	sub	r0, r0, #0x4
	cmp	r4, r0
	bge	.L234	@cond_branch
	ldrh	r2, [r5, #0x6]
	ldr	r6, .L241+0x4
	ldr	r0, [r6]
	ldr	r3, .L241+0x8
	add	r1, r0, r3
	ldrb	r1, [r1]
	add	r2, r2, r1
	ldr	r7, .L241+0xc
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r2, r0
	beq	.L234	@cond_branch
	add	r3, r5, #0
.L237:
	ldrh	r0, [r3, #0x4]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x4]
	ldrh	r0, [r3, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x6]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrh	r0, [r3, #0x4]
	sub	r0, r0, #0x4
	cmp	r4, r0
	bge	.L234	@cond_branch
	ldrh	r2, [r5, #0x6]
	ldr	r1, [r6]
	ldr	r7, .L241+0x8
	add	r0, r1, r7
	ldrb	r0, [r0]
	add	r2, r2, r0
	ldr	r0, .L241+0xc
	add	r1, r1, r0
	ldrb	r1, [r1]
	cmp	r2, r1
	bne	.L237	@cond_branch
.L234:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L242:
	.align	2, 0
.L241:
	.word	sSavedPokeblockData
	.word	sPokeblockMenu
	.word	0x80b
	.word	0x80a
.Lfe23:
	.size	 sub_8136344,.Lfe23-sub_8136344
	.align	2, 0
	.type	 sub_81363BC,function
	.thumb_func
sub_81363BC:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L245
	ldr	r1, [r4]
	ldr	r2, .L245+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L244	@cond_branch
	ldr	r2, .L245+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r2, #0x1
	add	r1, r1, r2
	ldrb	r1, [r1]
	sub	r0, r0, r1
	str	r0, [sp]
	ldr	r0, .L245+0xc
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	ldr	r0, .L245+0x10
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xb0
	mov	r2, #0x8
	mov	r3, #0x98
	bl	AddScrollIndicatorArrowPairParameterized
	ldr	r1, [r4]
	ldr	r2, .L245+0x4
	add	r1, r1, r2
	strb	r0, [r1]
.L244:
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	sPokeblockMenu
	.word	0xe7c
	.word	0x80a
	.word	0x456
	.word	sSavedPokeblockData+0x6
.Lfe24:
	.size	 sub_81363BC,.Lfe24-sub_81363BC
	.align	2, 0
	.type	 sub_8136418,function
	.thumb_func
sub_8136418:
	push	{r4, lr}
	ldr	r4, .L249
	ldr	r0, [r4]
	ldr	r2, .L249+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L248	@cond_branch
	bl	RemoveScrollIndicatorArrowPair
	ldr	r0, [r4]
	ldr	r1, .L249+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
.L248:
	pop	{r4}
	pop	{r0}
	bx	r0
.L250:
	.align	2, 0
.L249:
	.word	sPokeblockMenu
	.word	0xe7c
.Lfe25:
	.size	 sub_8136418,.Lfe25-sub_8136418
	.align	2, 0
	.globl	CreatePokeblockCaseSprite
	.type	 CreatePokeblockCaseSprite,function
	.thumb_func
CreatePokeblockCaseSprite:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r3, r2, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L252
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L253:
	.align	2, 0
.L252:
	.word	sSpriteTemplate_PokeblockCase
.Lfe26:
	.size	 CreatePokeblockCaseSprite,.Lfe26-CreatePokeblockCaseSprite
	.align	2, 0
	.type	 sub_8136470,function
	.thumb_func
sub_8136470:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	ble	.L255	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x2e]
.L255:
	mov	r0, #0x2e
	ldrsh	r5, [r4, r0]
	cmp	r5, #0
	beq	.L257	@cond_branch
	cmp	r5, #0x1
	beq	.L258	@cond_branch
	b	.L256
.L257:
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L262
	str	r0, [r4, #0x10]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
	strh	r5, [r4, #0x30]
	b	.L256
.L263:
	.align	2, 0
.L262:
	.word	sSpriteAffineAnimTable_85B26F0
.L258:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb
	ble	.L256	@cond_branch
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	strh	r2, [r4, #0x2e]
	strh	r2, [r4, #0x30]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r0, .L264
	str	r0, [r4, #0x1c]
.L256:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	SpriteCallbackDummy
.Lfe27:
	.size	 sub_8136470,.Lfe27-sub_8136470
	.align	2, 0
	.type	 FadePaletteAndSetTaskToClosePokeblockCase,function
	.thumb_func
FadePaletteAndSetTaskToClosePokeblockCase:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L267
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L267+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	gTasks
	.word	Task_FreeDataAndExitPokeblockCase
.Lfe28:
	.size	 FadePaletteAndSetTaskToClosePokeblockCase,.Lfe28-FadePaletteAndSetTaskToClosePokeblockCase
	.align	2, 0
	.type	 Task_FreeDataAndExitPokeblockCase,function
	.thumb_func
Task_FreeDataAndExitPokeblockCase:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L274
	add	r2, r0, r1
	ldr	r0, .L274+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L270	@cond_branch
	ldr	r6, .L274+0x8
	ldr	r0, [r6]
	ldr	r1, .L274+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L271	@cond_branch
	ldr	r1, .L274+0x10
	ldr	r0, .L274+0x14
	str	r0, [r1]
.L271:
	ldrb	r0, [r2]
	ldr	r4, .L274+0x18
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	DestroyListMenuTask
	bl	sub_8136418
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	ldr	r0, [r6]
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L272	@cond_branch
	bl	SetMainCallback2
	b	.L273
.L275:
	.align	2, 0
.L274:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	sPokeblockMenu
	.word	0x809
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptHandleMusic
	.word	sSavedPokeblockData+0x6
.L272:
	sub	r0, r4, #0x6
	ldr	r0, [r0]
	bl	SetMainCallback2
.L273:
	bl	FreeAllWindowBuffers
	ldr	r0, .L276
	ldr	r0, [r0]
	bl	Free
	add	r0, r5, #0
	bl	DestroyTask
.L270:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	sPokeblockMenu
.Lfe29:
	.size	 Task_FreeDataAndExitPokeblockCase,.Lfe29-Task_FreeDataAndExitPokeblockCase
	.align	2, 0
	.type	 Task_HandlePokeblockMenuInput,function
	.thumb_func
Task_HandlePokeblockMenuInput:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	mov	r8, r0
	ldr	r0, .L289
	mov	sl, r0
	mov	r6, r8
	add	r6, r6, sl
	ldr	r0, .L289+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB2337
	b	.L279	@long jump
.LCB2337:
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB2343
	b	.L279	@long jump
.LCB2343:
	ldr	r0, .L289+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	cmp	r0, #0
	beq	.L280	@cond_branch
	ldrb	r0, [r6]
	ldr	r4, .L289+0xc
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	ListMenuGetScrollAndRow
	sub	r4, r4, #0x6
	ldrh	r1, [r4, #0x6]
	ldrh	r0, [r4, #0x4]
	add	r1, r1, r0
	ldr	r5, .L289+0x10
	ldr	r0, [r5]
	ldr	r2, .L289+0x14
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L279	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r0, [r4, #0x4]
	ldr	r1, .L289+0x18
	bl	HandlePokeblockMenuCursor
	ldrh	r0, [r4, #0x4]
	ldrh	r4, [r4, #0x6]
	add	r0, r0, r4
	strh	r0, [r6, #0x4]
	ldr	r0, [r5]
	ldr	r1, .L289+0x1c
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	mov	r0, sl
	sub	r0, r0, #0x8
	add	r0, r0, r8
	ldr	r1, .L289+0x20
	str	r1, [r0]
	b	.L279
.L290:
	.align	2, 0
.L289:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gMain
	.word	sSavedPokeblockData+0x6
	.word	sPokeblockMenu
	.word	0x80a
	.word	0x2005
	.word	0xe7d
	.word	Task_HandlePokeblocksSwapInput
.L280:
	ldr	r5, .L291
	ldrh	r2, [r5, #0x4]
	mov	r8, r2
	ldrb	r0, [r6]
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	ldrb	r0, [r6]
	add	r1, r5, #0x6
	add	r2, r5, #0x4
	bl	ListMenuGetScrollAndRow
	ldrh	r0, [r5, #0x4]
	cmp	r8, r0
	beq	.L283	@cond_branch
	mov	r0, r8
	mov	r1, #0x5
	bl	HandlePokeblockMenuCursor
	ldrh	r0, [r5, #0x4]
	ldr	r1, .L291+0x4
	bl	HandlePokeblockMenuCursor
.L283:
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L286	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L287	@cond_branch
	b	.L279
.L292:
	.align	2, 0
.L291:
	.word	sSavedPokeblockData
	.word	0x1005
.L286:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L293
	ldr	r2, .L293+0x4
	add	r1, r2, #0
	strh	r1, [r0]
	ldr	r0, .L293+0x8
	mov	r1, r9
	strh	r1, [r0]
	add	r0, r7, #0
	bl	FadePaletteAndSetTaskToClosePokeblockCase
	b	.L279
.L294:
	.align	2, 0
.L293:
	.word	gSpecialVar_Result
	.word	0xffff
	.word	gSpecialVar_ItemId
.L287:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L295
	strh	r4, [r0]
	add	r0, r7, #0
	bl	PutPokeblockOptionsWindow
.L279:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L296:
	.align	2, 0
.L295:
	.word	gSpecialVar_ItemId
.Lfe30:
	.size	 Task_HandlePokeblockMenuInput,.Lfe30-Task_HandlePokeblockMenuInput
	.align	2, 0
	.type	 Task_HandlePokeblocksSwapInput,function
	.thumb_func
Task_HandlePokeblocksSwapInput:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	ldr	r1, .L318
	add	r7, r0, r1
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB2541
	b	.L297	@long jump
.LCB2541:
	ldr	r0, .L318+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L299	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r7]
	ldr	r1, .L318+0x8
	sub	r2, r1, #0x2
	bl	ListMenuGetScrollAndRow
	b	.L317
.L319:
	.align	2, 0
.L318:
	.word	gTasks+0x8
	.word	gMain
	.word	sSavedPokeblockData+0x6
.L299:
	ldr	r6, .L320
	ldrh	r4, [r6, #0x6]
	ldrh	r5, [r6, #0x4]
	ldrb	r0, [r7]
	bl	ListMenu_ProcessInput
	mov	r9, r0
	ldrb	r0, [r7]
	add	r1, r6, #0x6
	add	r2, r6, #0x4
	bl	ListMenuGetScrollAndRow
	ldrh	r0, [r6, #0x6]
	cmp	r4, r0
	bne	.L302	@cond_branch
	ldrh	r6, [r6, #0x4]
	cmp	r5, r6
	beq	.L301	@cond_branch
.L302:
	mov	r4, #0x0
.L306:
	ldr	r0, .L320
	ldrh	r0, [r0, #0x6]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r1, #0x4
	ldrsh	r0, [r7, r1]
	cmp	r5, r0
	bne	.L307	@cond_branch
	add	r0, r4, #0
	ldr	r1, .L320+0x4
	bl	HandlePokeblockMenuCursor
	b	.L305
.L321:
	.align	2, 0
.L320:
	.word	sSavedPokeblockData
	.word	0x2005
.L307:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	HandlePokeblockMenuCursor
.L305:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x8
	bls	.L306	@cond_branch
.L301:
	ldr	r5, .L322
	ldr	r0, [r5]
	ldr	r4, .L322+0x4
	add	r0, r0, r4
	mov	r1, #0x7
	mov	r2, #0x0
	bl	sub_81223FC
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L322+0x8
	ldrh	r3, [r1, #0x4]
	lsl	r3, r3, #0x4
	add	r3, r3, #0x8
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	r1, #0x7
	mov	r2, #0x80
	bl	sub_8122448
	mov	r0, #0x2
	neg	r0, r0
	cmp	r9, r0
	beq	.L312	@cond_branch
	add	r0, r0, #0x1
	cmp	r9, r0
	bne	.L315	@cond_branch
	b	.L297
.L323:
	.align	2, 0
.L322:
	.word	sPokeblockMenu
	.word	0xe75
	.word	sSavedPokeblockData
.L312:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L324
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L313	@cond_branch
.L317:
	mov	r0, r8
	mov	r1, #0x0
	bl	HandlePokeblocksSwap
	b	.L297
.L325:
	.align	2, 0
.L324:
	.word	gMain
.L313:
	mov	r0, r8
	mov	r1, #0x1
	bl	HandlePokeblocksSwap
	b	.L297
.L315:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, r8
	mov	r1, #0x0
	bl	HandlePokeblocksSwap
.L297:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 Task_HandlePokeblocksSwapInput,.Lfe31-Task_HandlePokeblocksSwapInput
	.align	2, 0
	.type	 HandlePokeblocksSwap,function
	.thumb_func
HandlePokeblocksSwap:
	push	{r4, r5, r6, r7, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L334
	add	r6, r0, r1
	ldr	r2, .L334+0x4
	ldrh	r0, [r2, #0x4]
	ldrh	r1, [r2, #0x6]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, .L334+0x8
	ldr	r0, [r0]
	ldr	r1, .L334+0xc
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldrb	r0, [r6]
	add	r1, r2, #0x6
	add	r2, r2, #0x4
	bl	DestroyListMenuTask
	cmp	r4, #0
	bne	.L327	@cond_branch
	mov	r0, #0x4
	ldrsh	r1, [r6, r0]
	cmp	r1, r5
	beq	.L328	@cond_branch
	sub	r0, r5, #0x1
	cmp	r1, r0
	beq	.L327	@cond_branch
	add	r0, r1, #0
	add	r1, r5, #0
	bl	SwapSortPokeblocksInternalData
	bl	HandlePokeblockListMenuItems
.L327:
	mov	r1, #0x4
	ldrsh	r0, [r6, r1]
	cmp	r0, r5
	bge	.L328	@cond_branch
	ldr	r1, .L334+0x4
	ldrh	r0, [r1, #0x4]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x4]
.L328:
	ldr	r0, .L334+0x10
	ldr	r2, .L334+0x4
	ldrh	r1, [r2, #0x6]
	ldrh	r2, [r2, #0x4]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6]
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L334+0x8
	ldr	r0, [r0]
	ldr	r1, .L334+0x14
	add	r0, r0, r1
	mov	r1, #0x7
	mov	r2, #0x1
	bl	sub_81223FC
	mov	r4, #0x0
	lsl	r5, r7, #0x2
.L332:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	HandlePokeblockMenuCursor
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x8
	bls	.L332	@cond_branch
	ldr	r0, .L334+0x4
	ldrh	r0, [r0, #0x4]
	ldr	r1, .L334+0x18
	bl	HandlePokeblockMenuCursor
	ldr	r1, .L334+0x1c
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L334+0x20
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	gTasks+0x8
	.word	sSavedPokeblockData
	.word	sPokeblockMenu
	.word	0xe7d
	.word	gMultiuseListMenuTemplate
	.word	0xe75
	.word	0x1005
	.word	gTasks
	.word	Task_HandlePokeblockMenuInput
.Lfe32:
	.size	 HandlePokeblocksSwap,.Lfe32-HandlePokeblocksSwap
	.align	2, 0
	.type	 PutPokeblockOptionsWindow,function
	.thumb_func
PutPokeblockOptionsWindow:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L340
	add	r6, r0, r1
	ldr	r0, .L340+0x4
	ldr	r0, [r0]
	ldr	r1, .L340+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L337	@cond_branch
	mov	r0, #0x8
	b	.L339
.L341:
	.align	2, 0
.L340:
	.word	gTasks+0x8
	.word	sPokeblockMenu
	.word	0x808
.L337:
	mov	r0, #0x9
.L339:
	strh	r0, [r6, #0x2]
	bl	sub_8136418
	ldrb	r0, [r6, #0x2]
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
	ldrb	r0, [r6, #0x2]
	ldr	r5, .L342
	ldr	r3, [r5]
	ldr	r4, .L342+0x4
	add	r1, r3, r4
	ldrb	r1, [r1]
	ldr	r2, .L342+0x8
	mov	ip, r2
	ldr	r2, .L342+0xc
	add	r3, r3, r2
	ldr	r3, [r3]
	mov	r2, ip
	bl	sub_81995E4
	ldrb	r0, [r6, #0x2]
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	ldrb	r0, [r6, #0x2]
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L342+0x10
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L342+0x14
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	sPokeblockMenu
	.word	0x808
	.word	sPokeblockMenuActions
	.word	0x804
	.word	gTasks
	.word	Task_HandlePokeblockOptionsInput
.Lfe33:
	.size	 PutPokeblockOptionsWindow,.Lfe33-PutPokeblockOptionsWindow
	.align	2, 0
	.type	 Task_HandlePokeblockOptionsInput,function
	.thumb_func
Task_HandlePokeblockOptionsInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L344	@cond_branch
	bl	Menu_ProcessInputNoWrap
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L344	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L348	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	PokeblockAction_Cancel
	b	.L344
.L348:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L350
	ldr	r0, .L350+0x4
	ldr	r0, [r0]
	ldr	r2, .L350+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	_call_via_r1
.L344:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L351:
	.align	2, 0
.L350:
	.word	sPokeblockMenuActions
	.word	sPokeblockMenu
	.word	0x804
.Lfe34:
	.size	 Task_HandlePokeblockOptionsInput,.Lfe34-Task_HandlePokeblockOptionsInput
	.align	2, 0
	.type	 PokeblockAction_UseOnField,function
	.thumb_func
PokeblockAction_UseOnField:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L353
	ldr	r1, [r1]
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L353+0x4
	str	r2, [r1]
	bl	FadePaletteAndSetTaskToClosePokeblockCase
	pop	{r0}
	bx	r0
.L354:
	.align	2, 0
.L353:
	.word	sPokeblockMenu
	.word	UsePokeblockOnField
.Lfe35:
	.size	 PokeblockAction_UseOnField,.Lfe35-PokeblockAction_UseOnField
	.align	2, 0
	.type	 UsePokeblockOnField,function
	.thumb_func
UsePokeblockOnField:
	push	{lr}
	ldr	r2, .L356
	ldr	r0, .L356+0x4
	ldrh	r1, [r0]
	lsl	r1, r1, #0x3
	ldr	r0, .L356+0x8
	add	r1, r1, r0
	ldr	r0, [r2]
	add	r0, r0, r1
	ldr	r1, .L356+0xc
	bl	ChooseMonToGivePokeblock
	pop	{r0}
	bx	r0
.L357:
	.align	2, 0
.L356:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_ItemId
	.word	0xe5c
	.word	ReturnToPokeblockCaseOnField
.Lfe36:
	.size	 UsePokeblockOnField,.Lfe36-UsePokeblockOnField
	.align	2, 0
	.type	 ReturnToPokeblockCaseOnField,function
	.thumb_func
ReturnToPokeblockCaseOnField:
	push	{lr}
	ldr	r0, .L359
	ldr	r1, [r0]
	mov	r0, #0x0
	bl	OpenPokeblockCase
	pop	{r0}
	bx	r0
.L360:
	.align	2, 0
.L359:
	.word	sSavedPokeblockData
.Lfe37:
	.size	 ReturnToPokeblockCaseOnField,.Lfe37-ReturnToPokeblockCaseOnField
	.align	2, 0
	.type	 PokeblockAction_Toss,function
	.thumb_func
PokeblockAction_Toss:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L362
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldr	r0, .L362+0x4
	ldr	r3, .L362+0x8
	ldr	r1, .L362+0xc
	ldr	r2, [r1]
	ldr	r1, .L362+0x10
	ldrh	r1, [r1]
	lsl	r1, r1, #0x3
	add	r2, r2, r1
	ldr	r1, .L362+0x14
	add	r2, r2, r1
	ldrb	r1, [r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L362+0x18
	ldr	r1, .L362+0x1c
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	bl	GetPlayerTextSpeedDelay
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	ldr	r0, .L362+0x20
	str	r0, [sp, #0xc]
	add	r0, r4, #0
	mov	r1, #0xa
	mov	r2, #0xa
	mov	r3, #0xd
	bl	DisplayMessageAndContinueTask
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L363:
	.align	2, 0
.L362:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gPokeblockNames
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_ItemId
	.word	0xe5c
	.word	gStringVar4
	.word	gText_ThrowAwayVar1
	.word	CreateTossPokeblockYesNoMenu
.Lfe38:
	.size	 PokeblockAction_Toss,.Lfe38-PokeblockAction_Toss
	.align	2, 0
	.type	 CreateTossPokeblockYesNoMenu,function
	.thumb_func
CreateTossPokeblockYesNoMenu:
	push	{lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L365
	mov	r2, #0x2
	str	r2, [sp]
	mov	r2, #0x1
	str	r2, [sp, #0x4]
	mov	r2, #0xe
	str	r2, [sp, #0x8]
	ldr	r2, .L365+0x4
	str	r2, [sp, #0xc]
	mov	r2, #0x1
	mov	r3, #0x0
	bl	CreateYesNoMenuWithCallbacks
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L366:
	.align	2, 0
.L365:
	.word	sTossPkblockWindowTemplate
	.word	sTossYesNoFuncTable
.Lfe39:
	.size	 CreateTossPokeblockYesNoMenu,.Lfe39-CreateTossPokeblockYesNoMenu
	.align	2, 0
	.type	 TossPokeblockChoice_Yes,function
	.thumb_func
TossPokeblockChoice_Yes:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L368
	ldr	r1, .L368+0x4
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	bl	GetPlayerTextSpeedDelay
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	ldr	r0, .L368+0x8
	str	r0, [sp, #0xc]
	add	r0, r4, #0
	mov	r1, #0xa
	mov	r2, #0xa
	mov	r3, #0xd
	bl	DisplayMessageAndContinueTask
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L369:
	.align	2, 0
.L368:
	.word	gStringVar4
	.word	gText_Var1ThrownAway
	.word	HandleErasePokeblock
.Lfe40:
	.size	 TossPokeblockChoice_Yes,.Lfe40-TossPokeblockChoice_Yes
	.align	2, 0
	.type	 HandleErasePokeblock,function
	.thumb_func
HandleErasePokeblock:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L372
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L371	@cond_branch
	ldr	r0, .L372+0x4
	ldrb	r0, [r0]
	bl	TryClearPokeblock
	mov	r0, #0x5
	bl	PlaySE
	ldr	r5, .L372+0x8
	sub	r6, r5, #0x2
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	ldr	r0, .L372+0xc
	add	r4, r4, r0
	ldrb	r0, [r4]
	add	r1, r5, #0
	add	r2, r6, #0
	bl	DestroyListMenuTask
	ldrh	r0, [r6]
	mov	r1, #0x5
	bl	HandlePokeblockMenuCursor
	bl	SetMenuItemsCountAndMaxShowed
	bl	sub_81362E0
	bl	HandlePokeblockListMenuItems
	ldr	r0, .L372+0x10
	ldrh	r1, [r5]
	ldrh	r2, [r6]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	ldrh	r0, [r6]
	ldr	r1, .L372+0x14
	bl	HandlePokeblockMenuCursor
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	r0, r7, #0
	bl	TossPokeblockChoice_No
.L371:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L373:
	.align	2, 0
.L372:
	.word	gMain
	.word	gSpecialVar_ItemId
	.word	sSavedPokeblockData+0x6
	.word	gTasks+0x8
	.word	gMultiuseListMenuTemplate
	.word	0x1005
.Lfe41:
	.size	 HandleErasePokeblock,.Lfe41-HandleErasePokeblock
	.align	2, 0
	.type	 TossPokeblockChoice_No,function
	.thumb_func
TossPokeblockChoice_No:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0xa
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	bl	sub_81363BC
	ldr	r1, .L375
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L375+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L376:
	.align	2, 0
.L375:
	.word	gTasks
	.word	Task_HandlePokeblockMenuInput
.Lfe42:
	.size	 TossPokeblockChoice_No,.Lfe42-TossPokeblockChoice_No
	.align	2, 0
	.type	 PokeblockAction_UseInBattle,function
	.thumb_func
PokeblockAction_UseInBattle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L383
	mov	r1, #0x0
	bl	GetNature
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L383+0x4
	ldr	r7, .L383+0x8
	ldrh	r2, [r7]
	lsl	r2, r2, #0x3
	ldr	r6, .L383+0xc
	add	r2, r2, r6
	ldr	r1, [r5]
	add	r1, r1, r2
	bl	PokeblockGetGain
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L383+0x10
	ldr	r3, .L383+0x14
	ldr	r2, [r5]
	ldrh	r1, [r7]
	lsl	r1, r1, #0x3
	add	r2, r2, r1
	add	r2, r2, r6
	ldrb	r1, [r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringCopy
	ldrb	r0, [r7]
	bl	TryClearPokeblock
	ldr	r1, [r5]
	ldrh	r0, [r7]
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r1, r1, r6
	ldrb	r0, [r1]
	lsl	r0, r0, #0x8
	strh	r0, [r7]
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	cmp	r4, #0
	bne	.L378	@cond_branch
	add	r0, r0, #0x1
	b	.L382
.L384:
	.align	2, 0
.L383:
	.word	gEnemyParty
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_ItemId
	.word	0xe5c
	.word	gBattleTextBuff1
	.word	gPokeblockNames
.L378:
	cmp	r4, #0
	ble	.L380	@cond_branch
	add	r0, r0, #0x2
	b	.L382
.L380:
	add	r0, r0, #0x3
.L382:
	strh	r0, [r7]
	mov	r0, r8
	bl	FadePaletteAndSetTaskToClosePokeblockCase
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 PokeblockAction_UseInBattle,.Lfe43-PokeblockAction_UseInBattle
	.align	2, 0
	.type	 PokeblockAction_UseOnPokeblockFeeder,function
	.thumb_func
PokeblockAction_UseOnPokeblockFeeder:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L386
	ldrb	r0, [r5]
	bl	SafariZoneActivatePokeblockFeeder
	ldr	r0, .L386+0x4
	ldr	r3, .L386+0x8
	ldr	r1, .L386+0xc
	ldr	r2, [r1]
	ldrh	r1, [r5]
	lsl	r1, r1, #0x3
	add	r2, r2, r1
	ldr	r1, .L386+0x10
	add	r2, r2, r1
	ldrb	r1, [r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r1, .L386+0x14
	ldrh	r0, [r5]
	strh	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	TryClearPokeblock
	mov	r0, #0x0
	strh	r0, [r5]
	add	r0, r4, #0
	bl	FadePaletteAndSetTaskToClosePokeblockCase
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L387:
	.align	2, 0
.L386:
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gPokeblockNames
	.word	gSaveBlock1Ptr
	.word	0xe5c
	.word	gSpecialVar_Result
.Lfe44:
	.size	 PokeblockAction_UseOnPokeblockFeeder,.Lfe44-PokeblockAction_UseOnPokeblockFeeder
	.align	2, 0
	.type	 PokeblockAction_GiveToContestLady,function
	.thumb_func
PokeblockAction_GiveToContestLady:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L389
	ldr	r0, .L389+0x4
	ldr	r5, .L389+0x8
	ldrh	r1, [r5]
	lsl	r1, r1, #0x3
	ldr	r2, .L389+0xc
	add	r1, r1, r2
	ldr	r0, [r0]
	add	r0, r0, r1
	bl	GivePokeblockToContestLady
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6]
	ldr	r1, .L389+0x10
	ldrh	r0, [r5]
	strh	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	TryClearPokeblock
	mov	r0, #0x0
	strh	r0, [r5]
	add	r0, r4, #0
	bl	FadePaletteAndSetTaskToClosePokeblockCase
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L390:
	.align	2, 0
.L389:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_ItemId
	.word	0xe5c
	.word	gSpecialVar_Result
.Lfe45:
	.size	 PokeblockAction_GiveToContestLady,.Lfe45-PokeblockAction_GiveToContestLady
	.align	2, 0
	.type	 PokeblockAction_Cancel,function
	.thumb_func
PokeblockAction_Cancel:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r5, .L392
	add	r0, r4, r5
	ldrb	r0, [r0, #0x2]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	bl	sub_81363BC
	sub	r5, r5, #0x8
	add	r4, r4, r5
	ldr	r0, .L392+0x4
	str	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L393:
	.align	2, 0
.L392:
	.word	gTasks+0x8
	.word	Task_HandlePokeblockMenuInput
.Lfe46:
	.size	 PokeblockAction_Cancel,.Lfe46-PokeblockAction_Cancel
	.align	2, 0
	.type	 ClearPokeblock,function
	.thumb_func
ClearPokeblock:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	ldr	r3, .L395
	ldr	r1, [r3]
	lsr	r0, r0, #0x15
	add	r1, r1, r0
	ldr	r2, .L395+0x4
	add	r1, r1, r2
	mov	r2, #0x0
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r4, .L395+0x8
	add	r1, r1, r4
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	add	r4, r4, #0x1
	add	r1, r1, r4
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	add	r4, r4, #0x1
	add	r1, r1, r4
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	add	r4, r4, #0x1
	add	r1, r1, r4
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	add	r4, r4, #0x1
	add	r1, r1, r4
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L395+0xc
	add	r1, r1, r0
	strb	r2, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	gSaveBlock1Ptr
	.word	0xe5c
	.word	0xe5d
	.word	0xe62
.Lfe47:
	.size	 ClearPokeblock,.Lfe47-ClearPokeblock
	.align	2, 0
	.globl	ClearPokeblocks
	.type	 ClearPokeblocks,function
	.thumb_func
ClearPokeblocks:
	push	{r4, lr}
	mov	r4, #0x0
.L401:
	add	r0, r4, #0
	bl	ClearPokeblock
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x27
	bls	.L401	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 ClearPokeblocks,.Lfe48-ClearPokeblocks
	.align	2, 0
	.globl	GetHighestPokeblocksFlavorLevel
	.type	 GetHighestPokeblocksFlavorLevel,function
	.thumb_func
GetHighestPokeblocksFlavorLevel:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0x1
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x1
.L407:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r6, #0
	add	r1, r4, #0
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcs	.L406	@cond_branch
	add	r5, r0, #0
.L406:
	add	r1, r4, #0
	cmp	r1, #0x4
	bls	.L407	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 GetHighestPokeblocksFlavorLevel,.Lfe49-GetHighestPokeblocksFlavorLevel
	.align	2, 0
	.globl	GetPokeblocksFeel
	.type	 GetPokeblocksFeel,function
	.thumb_func
GetPokeblocksFeel:
	push	{lr}
	mov	r1, #0x6
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x63
	bls	.L411	@cond_branch
	mov	r0, #0x63
.L411:
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 GetPokeblocksFeel,.Lfe50-GetPokeblocksFeel
	.align	2, 0
	.globl	GetFirstFreePokeblockSlot
	.type	 GetFirstFreePokeblockSlot,function
	.thumb_func
GetFirstFreePokeblockSlot:
	push	{lr}
	mov	r1, #0x0
	ldr	r0, .L420
	ldr	r2, [r0]
	ldr	r3, .L420+0x4
.L416:
	lsl	r0, r1, #0x3
	add	r0, r2, r0
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L415	@cond_branch
	lsl	r0, r1, #0x18
	asr	r0, r0, #0x18
	b	.L419
.L421:
	.align	2, 0
.L420:
	.word	gSaveBlock1Ptr
	.word	0xe5c
.L415:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x27
	bls	.L416	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L419:
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 GetFirstFreePokeblockSlot,.Lfe51-GetFirstFreePokeblockSlot
	.align	2, 0
	.globl	AddPokeblock
	.type	 AddPokeblock,function
	.thumb_func
AddPokeblock:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetFirstFreePokeblockSlot
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L423	@cond_branch
	ldr	r0, .L426
	ldr	r2, [r0]
	lsl	r0, r1, #0x3
	add	r2, r2, r0
	ldr	r0, .L426+0x4
	add	r2, r2, r0
	ldr	r0, [r4]		@ created by thumb_load_double_from_address
	ldr	r1, [r4, #0x4]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	mov	r0, #0x1
	b	.L425
.L427:
	.align	2, 0
.L426:
	.word	gSaveBlock1Ptr
	.word	0xe5c
.L423:
	mov	r0, #0x0
.L425:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 AddPokeblock,.Lfe52-AddPokeblock
	.align	2, 0
	.globl	TryClearPokeblock
	.type	 TryClearPokeblock,function
	.thumb_func
TryClearPokeblock:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L432
	ldr	r0, [r0]
	lsl	r1, r2, #0x3
	add	r0, r0, r1
	ldr	r1, .L432+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L429	@cond_branch
	add	r0, r2, #0
	bl	ClearPokeblock
	mov	r0, #0x1
	b	.L431
.L433:
	.align	2, 0
.L432:
	.word	gSaveBlock1Ptr
	.word	0xe5c
.L429:
	mov	r0, #0x0
.L431:
	pop	{r1}
	bx	r1
.Lfe53:
	.size	 TryClearPokeblock,.Lfe53-TryClearPokeblock
	.align	2, 0
	.globl	GetPokeblockData
	.type	 GetPokeblockData,function
	.thumb_func
GetPokeblockData:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0
	bne	.L435	@cond_branch
	ldrb	r0, [r0]
	b	.L443
.L435:
	cmp	r1, #0x1
	bne	.L436	@cond_branch
	ldrb	r0, [r0, #0x1]
	b	.L443
.L436:
	cmp	r1, #0x2
	bne	.L437	@cond_branch
	ldrb	r0, [r0, #0x2]
	b	.L443
.L437:
	cmp	r1, #0x3
	bne	.L438	@cond_branch
	ldrb	r0, [r0, #0x3]
	b	.L443
.L438:
	cmp	r1, #0x4
	bne	.L439	@cond_branch
	ldrb	r0, [r0, #0x4]
	b	.L443
.L439:
	cmp	r1, #0x5
	bne	.L440	@cond_branch
	ldrb	r0, [r0, #0x5]
	b	.L443
.L440:
	cmp	r2, #0x6
	beq	.L441	@cond_branch
	mov	r0, #0x0
	b	.L442
.L441:
	ldrb	r0, [r0, #0x6]
.L443:
.L442:
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 GetPokeblockData,.Lfe54-GetPokeblockData
	.align	2, 0
	.globl	PokeblockGetGain
	.type	 PokeblockGetGain,function
	.thumb_func
PokeblockGetGain:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r6, #0x0
	mov	r4, #0x0
	ldr	r1, .L451
	mov	r9, r1
	lsl	r1, r0, #0x2
	add	r7, r1, r0
.L448:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, r8
	add	r1, r5, #0
	bl	GetPokeblockData
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0
	ble	.L447	@cond_branch
	add	r0, r7, r4
	add	r0, r0, r9
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mul	r1, r1, r0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L447:
	add	r4, r5, #0
	cmp	r4, #0x4
	bls	.L448	@cond_branch
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L452:
	.align	2, 0
.L451:
	.word	gPokeblockFlavorCompatibilityTable
.Lfe55:
	.size	 PokeblockGetGain,.Lfe55-PokeblockGetGain
	.align	2, 0
	.globl	PokeblockCopyName
	.type	 PokeblockCopyName,function
	.thumb_func
PokeblockCopyName:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r1, #0x0
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	ldr	r1, .L454
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	pop	{r4}
	pop	{r0}
	bx	r0
.L455:
	.align	2, 0
.L454:
	.word	gPokeblockNames
.Lfe56:
	.size	 PokeblockCopyName,.Lfe56-PokeblockCopyName
	.align	2, 0
	.globl	CopyMonFavoritePokeblockName
	.type	 CopyMonFavoritePokeblockName,function
	.thumb_func
CopyMonFavoritePokeblockName:
	push	{r4, r5, r6, r7, lr}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r7, .L464
.L460:
	lsl	r1, r4, #0x3
	ldr	r0, .L464+0x4
	add	r1, r1, r0
	add	r0, r5, #0
	bl	PokeblockGetGain
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L459	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	mov	r0, #0x1
	b	.L463
.L465:
	.align	2, 0
.L464:
	.word	gPokeblockNames
	.word	sFavoritePokeblocksTable
.L459:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L460	@cond_branch
	mov	r0, #0x0
.L463:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 CopyMonFavoritePokeblockName,.Lfe57-CopyMonFavoritePokeblockName
	.align	2, 0
	.globl	GetPokeblocksFlavor
	.type	 GetPokeblocksFlavor,function
	.thumb_func
GetPokeblocksFlavor:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	mov	r7, #0x0
	mov	r6, #0x0
.L470:
	add	r1, r7, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	GetPokeblockData
	add	r4, r0, #0
	add	r1, r6, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	GetPokeblockData
	lsl	r4, r4, #0x10
	lsl	r0, r0, #0x10
	lsl	r1, r6, #0x10
	cmp	r4, r0
	bge	.L469	@cond_branch
	lsr	r7, r1, #0x10
.L469:
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r1, r2
	lsr	r6, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	ble	.L470	@cond_branch
	lsl	r0, r7, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe58:
	.size	 GetPokeblocksFlavor,.Lfe58-GetPokeblocksFlavor
.text
	.align	2, 0

