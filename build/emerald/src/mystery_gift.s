@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	sDownArrowCounterAndYCoordIdx
	.section ewram_data,"aw"
	.type	 sDownArrowCounterAndYCoordIdx,object
	.size	 sDownArrowCounterAndYCoordIdx,8
sDownArrowCounterAndYCoordIdx:
	.space	8
	.globl	gGiftIsFromEReader
	.type	 gGiftIsFromEReader,object
	.size	 gGiftIsFromEReader,1
gGiftIsFromEReader:
	.byte	0x0
	.section .rodata
	.align	1, 0
	.type	 gUnkTextboxBorderPal,object
gUnkTextboxBorderPal:
	.short	0x4a52
	.short	0x7ef2
	.short	0x7f93
	.short	0x7ff9
	.short	0x79ac
	.short	0x56d4
	.short	0x6338
	.short	0x6f9b
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x318c
	.short	0x4a52
	.short	0x6318
	.short	0x0
	.size	 gUnkTextboxBorderPal,32
	.align	2, 0
	.type	 gUnkTextboxBorderGfx,object
gUnkTextboxBorderGfx:
	.word	0x10010
	.word	-0xfffffcd
	.word	0x22019001
	.word	-0x6ffe0fde
	.word	0x11113301
	.word	0x19001f0
	.word	0x1f04444
	.word	-0xf01fe70
	.word	-0xffe0f8f
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1
	.size	 gUnkTextboxBorderGfx,48
	.align	2, 0
	.type	 sBGTemplates,object
	.size	 sBGTemplates,16
sBGTemplates:
	.byte	0xf8
	.byte	0x0
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x20
	.byte	0x0
	.space	1
	.byte	0xc3
	.byte	0x30
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sMainWindows,object
sMainWindows:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xc
	.short	0x13
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xc
	.short	0x4f
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x1e
	.byte	0x5
	.byte	0xd
	.short	0x4f
	.byte	0xff
	.space	7
	.size	 sMainWindows,32
	.align	2, 0
	.type	 sWindowTemplate_PromptYesOrNo_Width28,object
	.size	 sWindowTemplate_PromptYesOrNo_Width28,8
sWindowTemplate_PromptYesOrNo_Width28:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xc
	.short	0xe5
	.align	2, 0
	.type	 sWindowTemplate_PromptYesOrNo_Width20,object
	.size	 sWindowTemplate_PromptYesOrNo_Width20,8
sWindowTemplate_PromptYesOrNo_Width20:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x14
	.byte	0x4
	.byte	0xc
	.short	0xe5
	.align	2, 0
	.type	 sMysteryGiftMenuWindowTemplate,object
	.size	 sMysteryGiftMenuWindowTemplate,8
sMysteryGiftMenuWindowTemplate:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x13
	.byte	0x4
	.byte	0xc
	.short	0xe5
	.align	2, 0
	.type	 sWindowTemplate_ThreeOptions,object
	.size	 sWindowTemplate_ThreeOptions,8
sWindowTemplate_ThreeOptions:
	.byte	0x0
	.byte	0x8
	.byte	0x6
	.byte	0xe
	.byte	0x6
	.byte	0xc
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_YesNoBox,object
	.size	 sWindowTemplate_YesNoBox,8
sWindowTemplate_YesNoBox:
	.byte	0x0
	.byte	0x17
	.byte	0xf
	.byte	0x6
	.byte	0x4
	.byte	0xc
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_7by8,object
	.size	 sWindowTemplate_7by8,8
sWindowTemplate_7by8:
	.byte	0x0
	.byte	0x16
	.byte	0xb
	.byte	0x7
	.byte	0x8
	.byte	0xc
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_7by6,object
	.size	 sWindowTemplate_7by6,8
sWindowTemplate_7by6:
	.byte	0x0
	.byte	0x16
	.byte	0xd
	.byte	0x7
	.byte	0x6
	.byte	0xc
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_7by4,object
	.size	 sWindowTemplate_7by4,8
sWindowTemplate_7by4:
	.byte	0x0
	.byte	0x16
	.byte	0xf
	.byte	0x7
	.byte	0x4
	.byte	0xc
	.short	0x155
	.align	2, 0
	.type	 sListMenuItems_CardsOrNews,object
sListMenuItems_CardsOrNews:
	.word	gText_WonderCards
	.word	0x0
	.word	gText_WonderNews
	.word	0x1
	.word	gText_Exit3
	.word	-0x2
	.size	 sListMenuItems_CardsOrNews,24
	.align	2, 0
	.type	 sListMenuItems_WirelessOrFriend,object
sListMenuItems_WirelessOrFriend:
	.word	gText_WirelessCommunication
	.word	0x0
	.word	gText_Friend2
	.word	0x1
	.word	gText_Cancel2
	.word	-0x2
	.size	 sListMenuItems_WirelessOrFriend,24
	.align	2, 0
	.type	 sListMenuTemplate_ThreeOptions,object
	.size	 sListMenuTemplate_ThreeOptions,24
sListMenuTemplate_ThreeOptions:
	.word	0x0
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.align	2, 0
	.type	 sListMenuItems_ReceiveSendToss,object
sListMenuItems_ReceiveSendToss:
	.word	gText_Receive
	.word	0x0
	.word	gText_Send
	.word	0x1
	.word	gText_Toss
	.word	0x2
	.word	gText_Cancel2
	.word	-0x2
	.size	 sListMenuItems_ReceiveSendToss,32
	.align	2, 0
	.type	 sListMenuItems_ReceiveToss,object
sListMenuItems_ReceiveToss:
	.word	gText_Receive
	.word	0x0
	.word	gText_Toss
	.word	0x2
	.word	gText_Cancel2
	.word	-0x2
	.size	 sListMenuItems_ReceiveToss,24
	.align	2, 0
	.type	 sListMenuItems_ReceiveSend,object
sListMenuItems_ReceiveSend:
	.word	gText_Receive
	.word	0x0
	.word	gText_Send
	.word	0x1
	.word	gText_Cancel2
	.word	-0x2
	.size	 sListMenuItems_ReceiveSend,24
	.align	2, 0
	.type	 sListMenuItems_Receive,object
sListMenuItems_Receive:
	.word	gText_Receive
	.word	0x0
	.word	gText_Cancel2
	.word	-0x2
	.size	 sListMenuItems_Receive,16
	.align	2, 0
	.type	 sListMenu_ReceiveSendToss,object
	.size	 sListMenu_ReceiveSendToss,24
sListMenu_ReceiveSendToss:
	.word	sListMenuItems_ReceiveSendToss
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x4
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.align	2, 0
	.type	 sListMenu_ReceiveToss,object
	.size	 sListMenu_ReceiveToss,24
sListMenu_ReceiveToss:
	.word	sListMenuItems_ReceiveToss
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.align	2, 0
	.type	 sListMenu_ReceiveSend,object
	.size	 sListMenu_ReceiveSend,24
sListMenu_ReceiveSend:
	.word	sListMenuItems_ReceiveSend
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.align	2, 0
	.type	 sListMenu_Receive,object
	.size	 sListMenu_Receive,24
sListMenu_Receive:
	.word	sListMenuItems_Receive
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x2
	.short	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.align	2, 0
	.type	 Unref_082F0710,object
Unref_082F0710:
	.word	gText_VarietyOfEventsImportedWireless
	.word	gText_WonderCardsInPossession
	.word	gText_ReadNewsThatArrived
	.word	gText_ReturnToTitle
	.size	 Unref_082F0710,16
	.globl	sMG_Ereader_TextColor_1
	.align	1, 0
	.type	 sMG_Ereader_TextColor_1,object
sMG_Ereader_TextColor_1:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sMG_Ereader_TextColor_1,3
	.globl	sMG_Ereader_TextColor_1_Copy
	.align	1, 0
	.type	 sMG_Ereader_TextColor_1_Copy,object
sMG_Ereader_TextColor_1_Copy:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sMG_Ereader_TextColor_1_Copy,3
	.globl	sMG_Ereader_TextColor_2
	.align	1, 0
	.type	 sMG_Ereader_TextColor_2,object
sMG_Ereader_TextColor_2:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 sMG_Ereader_TextColor_2,3
.text
	.align	2, 0
	.globl	vblankcb_mystery_gift_e_reader_run
	.type	 vblankcb_mystery_gift_e_reader_run,function
	.thumb_func
vblankcb_mystery_gift_e_reader_run:
	push	{lr}
	bl	ProcessSpriteCopyRequests
	bl	LoadOam
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 vblankcb_mystery_gift_e_reader_run,.Lfe1-vblankcb_mystery_gift_e_reader_run
	.align	2, 0
	.globl	c2_mystery_gift_e_reader_run
	.type	 c2_mystery_gift_e_reader_run,function
	.thumb_func
c2_mystery_gift_e_reader_run:
	push	{lr}
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 c2_mystery_gift_e_reader_run,.Lfe2-c2_mystery_gift_e_reader_run
	.align	2, 0
	.globl	HandleMysteryGiftOrEReaderSetup
	.type	 HandleMysteryGiftOrEReaderSetup,function
	.thumb_func
HandleMysteryGiftOrEReaderSetup:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	add	r7, r0, #0
	ldr	r0, .L15
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r6, r0, r1
	ldrb	r0, [r6]
	cmp	r0, #0x1
	bne	.LCB40
	b	.L7	@long jump
.LCB40:
	cmp	r0, #0x1
	bgt	.L12	@cond_branch
	cmp	r0, #0
	beq	.L6	@cond_branch
	b	.L5
.L16:
	.align	2, 0
.L15:
	.word	gMain
.L12:
	cmp	r0, #0x2
	bne	.LCB55
	b	.L8	@long jump
.LCB55:
	cmp	r0, #0x3
	bne	.LCB57
	b	.L9	@long jump
.LCB57:
	b	.L5
.L6:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	bl	ScanlineEffect_Stop
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L17
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	mov	r0, #0x3
	bl	bgid_upload_textbox_1
	ldr	r0, .L17+0x4
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r1, #0xc0
	lsl	r1, r1, #0x7
	mov	r0, #0x0
	bl	ClearGpuRegBits
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	b	.L14
.L18:
	.align	2, 0
.L17:
	.word	sBGTemplates
	.word	sMainWindows
.L7:
	ldr	r0, .L19
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x2
	bl	GetTextWindowPalette
	mov	r1, #0xd0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0xc0
	bl	Menu_LoadStdPalAt
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xe0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xf0
	bl	LoadUserWindowBorderGfx_
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r5, #0x11
	str	r5, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x3
	bl	MG_DrawCheckerboardPattern
	lsl	r0, r7, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	PrintMysteryGiftOrEReaderTopMenu
	b	.L14
.L20:
	.align	2, 0
.L19:
	.word	gUnkTextboxBorderPal
.L8:
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L14:
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L5
.L9:
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	ldr	r0, .L21
	bl	PlayBGM
	ldr	r0, .L21+0x4
	bl	SetVBlankCallback
	mov	r0, #0xc5
	bl	EnableInterrupts
	mov	r0, #0x1
	b	.L13
.L22:
	.align	2, 0
.L21:
	.word	0x21d
	.word	vblankcb_mystery_gift_e_reader_run
.L5:
	mov	r0, #0x0
.L13:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 HandleMysteryGiftOrEReaderSetup,.Lfe3-HandleMysteryGiftOrEReaderSetup
	.align	2, 0
	.globl	c2_mystery_gift
	.type	 c2_mystery_gift,function
	.thumb_func
c2_mystery_gift:
	push	{lr}
	mov	r0, #0x0
	bl	HandleMysteryGiftOrEReaderSetup
	cmp	r0, #0
	beq	.L24	@cond_branch
	ldr	r0, .L25
	bl	SetMainCallback2
	ldr	r1, .L25+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	bl	task_add_00_mystery_gift
.L24:
	bl	RunTasks
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	c2_mystery_gift_e_reader_run
	.word	gGiftIsFromEReader
.Lfe4:
	.size	 c2_mystery_gift,.Lfe4-c2_mystery_gift
	.align	2, 0
	.globl	c2_ereader
	.type	 c2_ereader,function
	.thumb_func
c2_ereader:
	push	{lr}
	mov	r0, #0x1
	bl	HandleMysteryGiftOrEReaderSetup
	cmp	r0, #0
	beq	.L28	@cond_branch
	ldr	r0, .L29
	bl	SetMainCallback2
	ldr	r1, .L29+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	bl	task_add_00_ereader
.L28:
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	c2_mystery_gift_e_reader_run
	.word	gGiftIsFromEReader
.Lfe5:
	.size	 c2_ereader,.Lfe5-c2_ereader
	.align	2, 0
	.globl	MainCB_FreeAllBuffersAndReturnToInitTitleScreen
	.type	 MainCB_FreeAllBuffersAndReturnToInitTitleScreen,function
	.thumb_func
MainCB_FreeAllBuffersAndReturnToInitTitleScreen:
	push	{lr}
	ldr	r1, .L32
	mov	r0, #0x0
	strb	r0, [r1]
	bl	FreeAllWindowBuffers
	mov	r0, #0x0
	bl	GetBgTilemapBuffer
	bl	Free
	mov	r0, #0x1
	bl	GetBgTilemapBuffer
	bl	Free
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	bl	Free
	mov	r0, #0x3
	bl	GetBgTilemapBuffer
	bl	Free
	ldr	r0, .L32+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	gGiftIsFromEReader
	.word	CB2_InitTitleScreen
.Lfe6:
	.size	 MainCB_FreeAllBuffersAndReturnToInitTitleScreen,.Lfe6-MainCB_FreeAllBuffersAndReturnToInitTitleScreen
	.align	2, 0
	.globl	PrintMysteryGiftOrEReaderTopMenu
	.type	 PrintMysteryGiftOrEReaderTopMenu,function
	.thumb_func
PrintMysteryGiftOrEReaderTopMenu:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	cmp	r4, #0
	bne	.L35	@cond_branch
	ldr	r0, .L39
	ldr	r7, .L39+0x4
	cmp	r5, #0
	bne	.L38	@cond_branch
	ldr	r7, .L39+0x8
	b	.L38
.L40:
	.align	2, 0
.L39:
	.word	gText_MysteryGift
	.word	gText_PickOKCancel
	.word	gText_PickOKExit
.L35:
	ldr	r0, .L41
	ldr	r7, .L41+0x4
.L38:
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	ldr	r6, .L41+0x8
	str	r6, [sp, #0x8]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0xc]
	str	r0, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x4
	mov	r3, #0x1
	bl	AddTextPrinterParameterized4
	mov	r0, #0x0
	add	r1, r7, #0
	mov	r2, #0xde
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	str	r5, [sp, #0xc]
	str	r7, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized4
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	PutWindowTilemap
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	gJPText_MysteryGift
	.word	gJPText_DecideStop
	.word	sMG_Ereader_TextColor_1
.Lfe7:
	.size	 PrintMysteryGiftOrEReaderTopMenu,.Lfe7-PrintMysteryGiftOrEReaderTopMenu
	.align	2, 0
	.globl	MG_DrawTextBorder
	.type	 MG_DrawTextBorder,function
	.thumb_func
MG_DrawTextBorder:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 MG_DrawTextBorder,.Lfe8-MG_DrawTextBorder
	.align	2, 0
	.globl	MG_DrawCheckerboardPattern
	.type	 MG_DrawCheckerboardPattern,function
	.thumb_func
MG_DrawCheckerboardPattern:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0x0
	mov	r9, r0
	lsl	r4, r4, #0x18
	lsr	r0, r4, #0x18
	mov	r1, #0x20
	str	r1, [sp]
	mov	r1, #0x2
	str	r1, [sp, #0x4]
	mov	r1, #0x11
	str	r1, [sp, #0x8]
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r8, r4
	mov	r4, #0x1
.L48:
	mov	r7, #0x0
	mov	r0, r9
	add	r0, r0, #0x2
	mov	r1, #0x1
	add	r1, r1, r9
	mov	sl, r1
	lsl	r5, r0, #0x18
	mov	r6, #0x0
.L52:
	mov	r1, r9
	and	r1, r1, r4
	add	r0, r7, #0
	and	r0, r0, r4
	cmp	r1, r0
	beq	.L53	@cond_branch
	lsr	r2, r6, #0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r1, r8
	lsr	r0, r1, #0x18
	mov	r1, #0x1
	lsr	r3, r5, #0x18
	bl	FillBgTilemapBufferRect
	b	.L51
.L53:
	lsr	r2, r6, #0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r1, r8
	lsr	r0, r1, #0x18
	mov	r1, #0x2
	lsr	r3, r5, #0x18
	bl	FillBgTilemapBufferRect
.L51:
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r6, r6, r0
	add	r7, r7, #0x1
	cmp	r7, #0x1f
	ble	.L52	@cond_branch
	mov	r9, sl
	mov	r1, r9
	cmp	r1, #0x11
	ble	.L48	@cond_branch
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 MG_DrawCheckerboardPattern,.Lfe9-MG_DrawCheckerboardPattern
	.align	2, 0
	.globl	ClearScreenInBg0
	.type	 ClearScreenInBg0,function
	.thumb_func
ClearScreenInBg0:
	push	{lr}
	add	sp, sp, #-0xc
	cmp	r0, #0
	beq	.L59	@cond_branch
	cmp	r0, #0x1
	beq	.L60	@cond_branch
	b	.L58
.L59:
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	b	.L58
.L60:
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0x1e
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect
.L58:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 ClearScreenInBg0,.Lfe10-ClearScreenInBg0
	.align	2, 0
	.globl	AddTextPrinterToWindow1
	.type	 AddTextPrinterToWindow1,function
	.thumb_func
AddTextPrinterToWindow1:
	push	{r4, lr}
	add	sp, sp, #-0x14
	add	r1, r0, #0
	ldr	r4, .L64
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	ldr	r0, .L64+0x4
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	str	r4, [sp, #0x10]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized4
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	gStringVar4
	.word	sMG_Ereader_TextColor_2
.Lfe11:
	.size	 AddTextPrinterToWindow1,.Lfe11-AddTextPrinterToWindow1
	.align	2, 0
	.type	 ClearTextWindow,function
	.thumb_func
ClearTextWindow:
	push	{lr}
	mov	r0, #0x1
	bl	rbox_fill_rectangle
	mov	r0, #0x1
	bl	ClearWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x1
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 ClearTextWindow,.Lfe12-ClearTextWindow
	.align	2, 0
	.globl	MG_PrintTextOnWindow1AndWaitButton
	.type	 MG_PrintTextOnWindow1AndWaitButton,function
	.thumb_func
MG_PrintTextOnWindow1AndWaitButton:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	add	r0, r1, #0
	ldrb	r2, [r4]
	cmp	r2, #0x1
	beq	.L71	@cond_branch
	cmp	r2, #0x1
	bgt	.L77	@cond_branch
	cmp	r2, #0
	beq	.L69	@cond_branch
	b	.L68
.L77:
	cmp	r2, #0x2
	beq	.L73	@cond_branch
	cmp	r2, #0xff
	beq	.L74	@cond_branch
	b	.L68
.L69:
	bl	AddTextPrinterToWindow1
	b	.L70
.L71:
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L80
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	ldr	r0, .L80+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L68	@cond_branch
.L70:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	b	.L79
.L81:
	.align	2, 0
.L80:
	.word	sDownArrowCounterAndYCoordIdx
	.word	gMain
.L73:
	mov	r0, #0x1
	str	r0, [sp]
	ldr	r0, .L82
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	mov	r0, #0x0
	strb	r0, [r4]
	bl	ClearTextWindow
	mov	r0, #0x1
	b	.L78
.L83:
	.align	2, 0
.L82:
	.word	sDownArrowCounterAndYCoordIdx
.L74:
	mov	r0, #0x2
.L79:
	strb	r0, [r4]
.L68:
	mov	r0, #0x0
.L78:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 MG_PrintTextOnWindow1AndWaitButton,.Lfe13-MG_PrintTextOnWindow1AndWaitButton
	.align	2, 0
	.type	 HideDownArrow,function
	.thumb_func
HideDownArrow:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L85
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	sDownArrowCounterAndYCoordIdx
.Lfe14:
	.size	 HideDownArrow,.Lfe14-HideDownArrow
	.align	2, 0
	.type	 ShowDownArrow,function
	.thumb_func
ShowDownArrow:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x1
	str	r0, [sp]
	ldr	r0, .L88
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	sDownArrowCounterAndYCoordIdx
.Lfe15:
	.size	 ShowDownArrow,.Lfe15-ShowDownArrow
	.align	2, 0
	.globl	unref_HideDownArrowAndWaitButton
	.type	 unref_HideDownArrowAndWaitButton,function
	.thumb_func
unref_HideDownArrowAndWaitButton:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L92	@cond_branch
	cmp	r0, #0x1
	beq	.L94	@cond_branch
	b	.L91
.L92:
	bl	HideDownArrow
	ldr	r0, .L98
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L91	@cond_branch
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L91
.L99:
	.align	2, 0
.L98:
	.word	gMain
.L94:
	bl	ShowDownArrow
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L97
.L91:
	mov	r0, #0x0
.L97:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 unref_HideDownArrowAndWaitButton,.Lfe16-unref_HideDownArrowAndWaitButton
	.align	2, 0
	.type	 PrintStringAndWait2Seconds,function
	.thumb_func
PrintStringAndWait2Seconds:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L101	@cond_branch
	add	r0, r1, #0
	bl	AddTextPrinterToWindow1
.L101:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.L102	@cond_branch
	mov	r0, #0x0
	b	.L104
.L102:
	mov	r0, #0x0
	strb	r0, [r4]
	bl	ClearTextWindow
	mov	r0, #0x1
.L104:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 PrintStringAndWait2Seconds,.Lfe17-PrintStringAndWait2Seconds
	.align	2, 0
	.type	 MysteryGift_HandleThreeOptionMenu,function
	.thumb_func
MysteryGift_HandleThreeOptionMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0x24
	lsl	r2, r2, #0x18
	add	r1, sp, #0x4
	ldr	r0, .L113
	ldmia	r0!, {r3, r4, r5}
	stmia	r1!, {r3, r4, r5}
	ldmia	r0!, {r3, r4, r5}
	stmia	r1!, {r3, r4, r5}
	ldr	r0, .L113+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x1c]
	str	r1, [sp, #0x20]
	cmp	r2, #0
	bne	.L106	@cond_branch
	ldr	r0, .L113+0x8
	b	.L112
.L114:
	.align	2, 0
.L113:
	.word	sListMenuTemplate_ThreeOptions
	.word	sWindowTemplate_ThreeOptions
	.word	sListMenuItems_CardsOrNews
.L106:
	ldr	r0, .L115
.L112:
	str	r0, [sp, #0x4]
	add	r0, sp, #0x4
	bl	Intl_GetListMenuWidth
	add	r3, r0, #0
	mov	r0, #0x1
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L108	@cond_branch
	add	r3, r3, #0x1
.L108:
	lsl	r1, r3, #0x18
	ldr	r0, .L115+0x4
	ldr	r2, [sp, #0x1c]
	and	r2, r2, r0
	orr	r2, r2, r1
	str	r2, [sp, #0x1c]
	cmp	r3, #0x1d
	bgt	.L109	@cond_branch
	mov	r0, #0x1e
	sub	r0, r0, r3
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r1, .L115+0x8
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x1c]
	b	.L110
.L116:
	.align	2, 0
.L115:
	.word	sListMenuItems_WirelessOrFriend
	.word	0xffffff
	.word	-0xff01
.L109:
	ldr	r0, .L117
	and	r2, r2, r0
	str	r2, [sp, #0x1c]
.L110:
	add	r0, sp, #0x1c
	mov	r1, #0xe0
	str	r1, [sp]
	add	r1, sp, #0x4
	mov	r2, #0x1
	mov	r3, #0xa
	bl	DoMysteryGiftListMenu
	add	r4, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L111	@cond_branch
	mov	r0, #0x2
	bl	ClearWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x1
	bl	CopyWindowToVram
.L111:
	add	r0, r4, #0
	add	sp, sp, #0x24
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L118:
	.align	2, 0
.L117:
	.word	-0xff01
.Lfe18:
	.size	 MysteryGift_HandleThreeOptionMenu,.Lfe18-MysteryGift_HandleThreeOptionMenu
	.align	2, 0
	.globl	mevent_message_print_and_prompt_yes_no
	.type	 mevent_message_print_and_prompt_yes_no,function
	.thumb_func
mevent_message_print_and_prompt_yes_no:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x1c
	add	r5, r0, #0
	add	r4, r1, #0
	add	r1, r3, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r0, [r5]
	cmp	r0, #0x1
	beq	.L124	@cond_branch
	cmp	r0, #0x1
	bgt	.L132	@cond_branch
	cmp	r0, #0
	beq	.L121	@cond_branch
	b	.L120
.L132:
	cmp	r0, #0x2
	beq	.L127	@cond_branch
	cmp	r0, #0xff
	beq	.L129	@cond_branch
	b	.L120
.L121:
	ldr	r0, .L137
	bl	StringExpandPlaceholders
	cmp	r6, #0
	bne	.L122	@cond_branch
	ldr	r0, .L137+0x4
	b	.L134
.L138:
	.align	2, 0
.L137:
	.word	gStringVar4
	.word	sWindowTemplate_PromptYesOrNo_Width28
.L122:
	ldr	r0, .L139
.L134:
	bl	AddWindow
	strh	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldrb	r0, [r4]
	mov	r2, #0x0
	str	r2, [sp]
	str	r2, [sp, #0x4]
	ldr	r1, .L139+0x4
	str	r1, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r1, .L139+0x8
	str	r1, [sp, #0x10]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized4
	ldrb	r0, [r4]
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	b	.L135
.L140:
	.align	2, 0
.L139:
	.word	sWindowTemplate_PromptYesOrNo_Width20
	.word	sMG_Ereader_TextColor_2
	.word	gStringVar4
.L124:
	ldr	r0, .L141
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x14]
	str	r1, [sp, #0x18]
	cmp	r6, #0
	bne	.L125	@cond_branch
	ldr	r0, .L141+0x4
	ldr	r1, [sp, #0x14]
	and	r1, r1, r0
	mov	r0, #0x90
	lsl	r0, r0, #0xc
	b	.L136
.L142:
	.align	2, 0
.L141:
	.word	sWindowTemplate_YesNoBox
	.word	-0xff0001
.L125:
	ldr	r0, .L143
	ldr	r1, [sp, #0x14]
	and	r1, r1, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0xc
.L136:
	orr	r1, r1, r0
	str	r1, [sp, #0x14]
	add	r0, sp, #0x14
	mov	r1, #0xa
	mov	r2, #0xe
	mov	r3, #0x0
	bl	CreateYesNoMenu
.L135:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L120
.L144:
	.align	2, 0
.L143:
	.word	-0xff0001
.L127:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r6, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L120	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5]
	ldrb	r0, [r4]
	bl	rbox_fill_rectangle
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	RemoveWindow
	add	r0, r6, #0
	b	.L133
.L129:
	mov	r0, #0x0
	strb	r0, [r5]
	ldrb	r0, [r4]
	bl	rbox_fill_rectangle
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0x1
	neg	r0, r0
	b	.L133
.L120:
	mov	r0, #0x2
	neg	r0, r0
.L133:
	add	sp, sp, #0x1c
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 mevent_message_print_and_prompt_yes_no,.Lfe19-mevent_message_print_and_prompt_yes_no
	.align	2, 0
	.type	 HandleMysteryGiftListMenu,function
	.thumb_func
HandleMysteryGiftListMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r6, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r6]
	cmp	r0, #0x1
	beq	.L150	@cond_branch
	cmp	r0, #0x1
	bgt	.L161	@cond_branch
	cmp	r0, #0
	beq	.L147	@cond_branch
	b	.L146
.L161:
	cmp	r0, #0xff
	bne	.LCB1383
	b	.L158	@long jump
.LCB1383:
	b	.L146
.L147:
	cmp	r2, #0
	bne	.L148	@cond_branch
	ldr	r0, .L164
	ldr	r1, .L164+0x4
	bl	StringExpandPlaceholders
	b	.L149
.L165:
	.align	2, 0
.L164:
	.word	gStringVar4
	.word	gText_WhatToDoWithCards
.L148:
	ldr	r0, .L166
	ldr	r1, .L166+0x4
	bl	StringExpandPlaceholders
.L149:
	ldr	r0, .L166+0x8
	bl	AddWindow
	strh	r0, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5]
	mov	r2, #0x0
	str	r2, [sp]
	str	r2, [sp, #0x4]
	ldr	r1, .L166+0xc
	str	r1, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r1, .L166
	str	r1, [sp, #0x10]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized4
	ldrb	r0, [r5]
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	ldrb	r0, [r5]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r5]
	bl	PutWindowTilemap
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L146
.L167:
	.align	2, 0
.L166:
	.word	gStringVar4
	.word	gText_WhatToDoWithNews
	.word	sMysteryGiftMenuWindowTemplate
	.word	sMG_Ereader_TextColor_2
.L150:
	cmp	r3, #0
	beq	.L151	@cond_branch
	cmp	r2, #0
	bne	.L152	@cond_branch
	ldr	r0, .L168
	ldr	r1, .L168+0x4
	b	.L163
.L169:
	.align	2, 0
.L168:
	.word	sWindowTemplate_7by6
	.word	sListMenu_ReceiveToss
.L152:
	ldr	r0, .L170
	ldr	r1, .L170+0x4
	b	.L163
.L171:
	.align	2, 0
.L170:
	.word	sWindowTemplate_7by4
	.word	sListMenu_Receive
.L151:
	cmp	r2, #0
	bne	.L155	@cond_branch
	ldr	r0, .L172
	ldr	r1, .L172+0x4
	b	.L163
.L173:
	.align	2, 0
.L172:
	.word	sWindowTemplate_7by8
	.word	sListMenu_ReceiveSendToss
.L155:
	ldr	r0, .L174
	ldr	r1, .L174+0x4
.L163:
	mov	r2, #0xe0
	str	r2, [sp]
	mov	r2, #0x1
	mov	r3, #0xa
	bl	DoMysteryGiftListMenu
	add	r4, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L146	@cond_branch
	mov	r0, #0x0
	strb	r0, [r6]
	ldrb	r0, [r5]
	bl	rbox_fill_rectangle
	ldrb	r0, [r5]
	bl	ClearWindowTilemap
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r5]
	bl	RemoveWindow
	add	r0, r4, #0
	b	.L162
.L175:
	.align	2, 0
.L174:
	.word	sWindowTemplate_7by6
	.word	sListMenu_ReceiveSend
.L158:
	mov	r0, #0x0
	strb	r0, [r6]
	ldrb	r0, [r5]
	bl	rbox_fill_rectangle
	ldrb	r0, [r5]
	bl	ClearWindowTilemap
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r5]
	bl	RemoveWindow
	mov	r0, #0x2
	neg	r0, r0
	b	.L162
.L146:
	mov	r0, #0x1
	neg	r0, r0
.L162:
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 HandleMysteryGiftListMenu,.Lfe20-HandleMysteryGiftListMenu
	.align	2, 0
	.type	 ValidateCardOrNews,function
	.thumb_func
ValidateCardOrNews:
	push	{lr}
	cmp	r0, #0
	beq	.L177	@cond_branch
	bl	ValidateReceivedWonderNews
	b	.L180
.L177:
	bl	ValidateReceivedWonderCard
.L180:
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 ValidateCardOrNews,.Lfe21-ValidateCardOrNews
	.align	2, 0
	.type	 HandleLoadWonderCardOrNews,function
	.thumb_func
HandleLoadWonderCardOrNews:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrb	r0, [r5]
	cmp	r0, #0
	beq	.L183	@cond_branch
	cmp	r0, #0x1
	beq	.L186	@cond_branch
	b	.L182
.L183:
	cmp	r1, #0
	bne	.L184	@cond_branch
	bl	GetSavedWonderCard
	add	r4, r0, #0
	bl	sav1_get_mevent_buffer_2
	add	r1, r0, #0
	add	r0, r4, #0
	bl	InitWonderCardResources
	b	.L185
.L184:
	bl	GetSavedWonderNews
	bl	InitWonderNewsResources
.L185:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L182
.L186:
	cmp	r1, #0
	bne	.L187	@cond_branch
	bl	FadeToWonderCardMenu
.L188:
	cmp	r0, #0
	bne	.L190	@cond_branch
	b	.L182
.L187:
	bl	FadeToWonderNewsMenu
	b	.L188
.L190:
	mov	r0, #0x0
	strb	r0, [r5]
	mov	r0, #0x1
	b	.L194
.L182:
	mov	r0, #0x0
.L194:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 HandleLoadWonderCardOrNews,.Lfe22-HandleLoadWonderCardOrNews
	.align	2, 0
	.type	 DestroyNewsOrCard,function
	.thumb_func
DestroyNewsOrCard:
	push	{lr}
	cmp	r0, #0
	bne	.L196	@cond_branch
	bl	DestroyWonderCard
	b	.L197
.L196:
	bl	DestroyWonderNews
.L197:
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 DestroyNewsOrCard,.Lfe23-DestroyNewsOrCard
	.align	2, 0
	.type	 TearDownCardOrNews_ReturnToTopMenu,function
	.thumb_func
TearDownCardOrNews_ReturnToTopMenu:
	push	{lr}
	cmp	r0, #0
	bne	.L199	@cond_branch
	add	r0, r1, #0
	bl	FadeOutFromWonderCard
	cmp	r0, #0
	beq	.L207	@cond_branch
	bl	DestroyWonderCardResources
	b	.L206
.L199:
	add	r0, r1, #0
	bl	FadeOutFromWonderNews
	cmp	r0, #0
	bne	.L203	@cond_branch
.L207:
	mov	r0, #0x0
	b	.L205
.L203:
	bl	DestroyWonderNewsResources
.L206:
	mov	r0, #0x1
.L205:
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 TearDownCardOrNews_ReturnToTopMenu,.Lfe24-TearDownCardOrNews_ReturnToTopMenu
	.align	2, 0
	.type	 mevent_message_prompt_discard,function
	.thumb_func
mevent_message_prompt_discard:
	push	{lr}
	cmp	r2, #0
	beq	.L209	@cond_branch
	ldr	r3, .L214
	b	.L213
.L215:
	.align	2, 0
.L214:
	.word	gText_OkayToDiscardNews
.L209:
	ldr	r3, .L216
.L213:
	mov	r2, #0x1
	bl	mevent_message_print_and_prompt_yes_no
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L217:
	.align	2, 0
.L216:
	.word	gText_IfThrowAwayCardEventWontHappen
.Lfe25:
	.size	 mevent_message_prompt_discard,.Lfe25-mevent_message_prompt_discard
	.align	2, 0
	.type	 mevent_message_was_thrown_away,function
	.thumb_func
mevent_message_was_thrown_away:
	push	{lr}
	cmp	r1, #0
	beq	.L219	@cond_branch
	ldr	r1, .L224
	b	.L223
.L225:
	.align	2, 0
.L224:
	.word	gText_WonderNewsThrownAway
.L219:
	ldr	r1, .L226
.L223:
	bl	MG_PrintTextOnWindow1AndWaitButton
	pop	{r1}
	bx	r1
.L227:
	.align	2, 0
.L226:
	.word	gText_WonderCardThrownAway
.Lfe26:
	.size	 mevent_message_was_thrown_away,.Lfe26-mevent_message_was_thrown_away
	.align	2, 0
	.type	 mevent_save_game,function
	.thumb_func
mevent_save_game:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0x4
	bhi	.L229	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L240
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L241:
	.align	2, 0
.L240:
	.word	.L236
	.align	2, 0
	.align	2, 0
.L236:
	.word	.L230
	.word	.L231
	.word	.L232
	.word	.L233
	.word	.L235
.L230:
	ldr	r0, .L242
	bl	AddTextPrinterToWindow1
	b	.L239
.L243:
	.align	2, 0
.L242:
	.word	gText_DataWillBeSaved
.L231:
	mov	r0, #0x0
	bl	TrySavingData
	b	.L239
.L232:
	ldr	r0, .L244
	bl	AddTextPrinterToWindow1
	b	.L239
.L245:
	.align	2, 0
.L244:
	.word	gText_SaveCompletedPressA
.L233:
	ldr	r0, .L246
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L229	@cond_branch
.L239:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L229
.L247:
	.align	2, 0
.L246:
	.word	gMain
.L235:
	mov	r0, #0x0
	strb	r0, [r4]
	bl	ClearTextWindow
	mov	r0, #0x1
	b	.L238
.L229:
	mov	r0, #0x0
.L238:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 mevent_save_game,.Lfe27-mevent_save_game
	.align	2, 0
	.type	 mevent_message,function
	.thumb_func
mevent_message:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r2, #0x0
	str	r2, [r4]
	cmp	r3, #0xe
	bls	.LCB2010
	b	.L249	@long jump
.LCB2010:
	lsl	r0, r3, #0x2
	ldr	r1, .L274
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L275:
	.align	2, 0
.L274:
	.word	.L271
	.align	2, 0
	.align	2, 0
.L271:
	.word	.L250
	.word	.L251
	.word	.L252
	.word	.L255
	.word	.L258
	.word	.L259
	.word	.L260
	.word	.L261
	.word	.L262
	.word	.L263
	.word	.L264
	.word	.L267
	.word	.L268
	.word	.L269
	.word	.L270
.L250:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L276
	b	.L249
.L277:
	.align	2, 0
.L276:
	.word	gText_NothingSentOver
.L251:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L278
	b	.L249
.L279:
	.align	2, 0
.L278:
	.word	gText_RecordUploadedViaWireless
.L252:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L280
	cmp	r5, #0
	bne	.L249	@cond_branch
	ldr	r2, .L280+0x4
	b	.L249
.L281:
	.align	2, 0
.L280:
	.word	gText_WonderCardReceivedFrom
	.word	gText_WonderCardReceived
.L255:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L282
	cmp	r5, #0
	bne	.L249	@cond_branch
	ldr	r2, .L282+0x4
	b	.L249
.L283:
	.align	2, 0
.L282:
	.word	gText_WonderNewsReceivedFrom
	.word	gText_WonderNewsReceived
.L258:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L284
	b	.L249
.L285:
	.align	2, 0
.L284:
	.word	gText_NewStampReceived
.L259:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L286
	b	.L249
.L287:
	.align	2, 0
.L286:
	.word	gText_AlreadyHadCard
.L260:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L288
	b	.L249
.L289:
	.align	2, 0
.L288:
	.word	gText_AlreadyHadStamp
.L261:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L290
	b	.L249
.L291:
	.align	2, 0
.L290:
	.word	gText_AlreadyHadNews
.L262:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L292
	b	.L249
.L293:
	.align	2, 0
.L292:
	.word	gText_NoMoreRoomForStamps
.L263:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L294
	b	.L249
.L295:
	.align	2, 0
.L294:
	.word	gText_CommunicationCanceled
.L264:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L296
	cmp	r6, #0
	bne	.L249	@cond_branch
	ldr	r2, .L296+0x4
	b	.L249
.L297:
	.align	2, 0
.L296:
	.word	gText_CantAcceptNewsFromTrainer
	.word	gText_CantAcceptCardFromTrainer
.L267:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L298
	b	.L249
.L299:
	.align	2, 0
.L298:
	.word	gText_CommunicationError
.L268:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L300
	b	.L249
.L301:
	.align	2, 0
.L300:
	.word	gText_NewTrainerReceived
.L269:
	mov	r0, #0x1
	b	.L273
.L270:
	mov	r0, #0x0
.L273:
	str	r0, [r4]
.L249:
	add	r0, r2, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 mevent_message,.Lfe28-mevent_message
	.align	2, 0
	.type	 PrintMGSuccessMessage,function
	.thumb_func
PrintMGSuccessMessage:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r0, r1, #0
	add	r5, r2, #0
	ldrb	r4, [r6]
	cmp	r4, #0x1
	beq	.L306	@cond_branch
	cmp	r4, #0x1
	bgt	.L312	@cond_branch
	cmp	r4, #0
	beq	.L304	@cond_branch
	b	.L303
.L312:
	cmp	r4, #0x2
	beq	.L308	@cond_branch
	b	.L303
.L304:
	cmp	r0, #0
	beq	.L305	@cond_branch
	bl	AddTextPrinterToWindow1
.L305:
	mov	r0, #0xb9
	lsl	r0, r0, #0x1
	bl	PlayFanfare
	strh	r4, [r5]
	b	.L314
.L306:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xf0
	bls	.L303	@cond_branch
.L314:
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L303
.L308:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L303	@cond_branch
	mov	r0, #0x0
	strb	r0, [r6]
	bl	ClearTextWindow
	mov	r0, #0x1
	b	.L313
.L303:
	mov	r0, #0x0
.L313:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 PrintMGSuccessMessage,.Lfe29-PrintMGSuccessMessage
	.align	2, 0
	.type	 mevent_message_stamp_card_etc_send_status,function
	.thumb_func
mevent_message_stamp_card_etc_send_status:
	push	{r4, lr}
	add	r3, r0, #0
	ldr	r1, .L335
	mov	r0, #0x0
	str	r0, [r3]
	add	r4, r1, #0
	cmp	r2, #0xe
	bhi	.L316	@cond_branch
	lsl	r0, r2, #0x2
	ldr	r1, .L335+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L336:
	.align	2, 0
.L335:
	.word	gText_CommunicationError
	.word	.L332
	.align	2, 0
	.align	2, 0
.L332:
	.word	.L317
	.word	.L318
	.word	.L319
	.word	.L320
	.word	.L321
	.word	.L322
	.word	.L323
	.word	.L324
	.word	.L325
	.word	.L326
	.word	.L331
	.word	.L328
	.word	.L329
	.word	.L330
	.word	.L331
.L317:
	ldr	r1, .L337
	b	.L316
.L338:
	.align	2, 0
.L337:
	.word	gText_NothingSentOver
.L318:
	ldr	r1, .L339
	b	.L316
.L340:
	.align	2, 0
.L339:
	.word	gText_RecordUploadedViaWireless
.L319:
	ldr	r1, .L341
	b	.L334
.L342:
	.align	2, 0
.L341:
	.word	gText_WonderCardSentTo
.L320:
	ldr	r1, .L343
.L334:
	mov	r0, #0x1
	str	r0, [r3]
	b	.L316
.L344:
	.align	2, 0
.L343:
	.word	gText_WonderNewsSentTo
.L321:
	ldr	r1, .L345
	b	.L316
.L346:
	.align	2, 0
.L345:
	.word	gText_StampSentTo
.L322:
	ldr	r1, .L347
	b	.L316
.L348:
	.align	2, 0
.L347:
	.word	gText_OtherTrainerHasCard
.L323:
	ldr	r1, .L349
	b	.L316
.L350:
	.align	2, 0
.L349:
	.word	gText_OtherTrainerHasStamp
.L324:
	ldr	r1, .L351
	b	.L316
.L352:
	.align	2, 0
.L351:
	.word	gText_OtherTrainerHasNews
.L325:
	ldr	r1, .L353
	b	.L316
.L354:
	.align	2, 0
.L353:
	.word	gText_NoMoreRoomForStamps
.L326:
	ldr	r1, .L355
	b	.L316
.L356:
	.align	2, 0
.L355:
	.word	gText_OtherTrainerCanceled
.L328:
	add	r1, r4, #0
	b	.L316
.L329:
.L330:
	ldr	r1, .L357
	b	.L316
.L358:
	.align	2, 0
.L357:
	.word	gText_GiftSentTo
.L331:
	ldr	r1, .L359
.L316:
	add	r0, r1, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L360:
	.align	2, 0
.L359:
	.word	gText_CantSendGiftToTrainer
.Lfe30:
	.size	 mevent_message_stamp_card_etc_send_status,.Lfe30-mevent_message_stamp_card_etc_send_status
	.align	2, 0
	.type	 PrintMGSendStatus,function
	.thumb_func
PrintMGSendStatus:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	add	r1, r2, #0
	add	r2, r3, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sp
	bl	mevent_message_stamp_card_etc_send_status
	add	r1, r0, #0
	ldr	r0, [sp]
	cmp	r0, #0
	bne	.L362	@cond_branch
	add	r0, r4, #0
	bl	MG_PrintTextOnWindow1AndWaitButton
	b	.L365
.L362:
	add	r0, r4, #0
	add	r2, r5, #0
	bl	PrintMGSuccessMessage
.L365:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 PrintMGSendStatus,.Lfe31-PrintMGSendStatus
	.align	2, 0
	.globl	task_add_00_mystery_gift
	.type	 task_add_00_mystery_gift,function
	.thumb_func
task_add_00_mystery_gift:
	push	{r4, lr}
	ldr	r0, .L367
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L367+0x4
	add	r4, r4, r0
	mov	r0, #0x0
	strb	r0, [r4, #0x8]
	strb	r0, [r4, #0x9]
	strb	r0, [r4, #0xa]
	strb	r0, [r4, #0xb]
	strb	r0, [r4, #0xc]
	strb	r0, [r4, #0xd]
	mov	r1, #0x0
	strh	r0, [r4]
	strh	r0, [r4, #0x2]
	strh	r0, [r4, #0x4]
	strh	r0, [r4, #0x6]
	strb	r1, [r4, #0xe]
	mov	r0, #0x40
	bl	AllocZeroed
	str	r0, [r4, #0x10]
	pop	{r4}
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	task00_mystery_gift
	.word	gTasks+0x8
.Lfe32:
	.size	 task_add_00_mystery_gift,.Lfe32-task_add_00_mystery_gift
	.align	2, 0
	.globl	task00_mystery_gift
	.type	 task00_mystery_gift,function
	.thumb_func
task00_mystery_gift:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L566
	add	r5, r0, r1
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0x25
	bls	.LCB2567
	b	.L370	@long jump
.LCB2567:
	lsl	r0, r0, #0x2
	ldr	r1, .L566+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L567:
	.align	2, 0
.L566:
	.word	gTasks+0x8
	.word	.L550
	.align	2, 0
	.align	2, 0
.L550:
	.word	.L371
	.word	.L372
	.word	.L383
	.word	.L388
	.word	.L391
	.word	.L400
	.word	.L412
	.word	.L416
	.word	.L417
	.word	.L426
	.word	.L433
	.word	.L435
	.word	.L444
	.word	.L451
	.word	.L453
	.word	.L456
	.word	.L547
	.word	.L468
	.word	.L470
	.word	.L370
	.word	.L472
	.word	.L482
	.word	.L497
	.word	.L507
	.word	.L514
	.word	.L516
	.word	.L518
	.word	.L520
	.word	.L522
	.word	.L524
	.word	.L531
	.word	.L535
	.word	.L538
	.word	.L540
	.word	.L541
	.word	.L543
	.word	.L547
	.word	.L549
.L371:
	mov	r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L370
.L372:
	add	r0, r5, #0
	add	r0, r0, #0x9
	add	r1, r5, #0
	mov	r2, #0x0
	bl	MysteryGift_HandleThreeOptionMenu
	add	r1, r0, #0
	cmp	r1, #0x1
	beq	.L377	@cond_branch
	cmp	r1, #0x1
	bcc	.L374	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L380	@cond_branch
	b	.L370
.L374:
	mov	r0, #0x0
	strb	r0, [r5, #0xc]
	bl	ValidateReceivedWonderCard
	b	.L565
.L377:
	strb	r1, [r5, #0xc]
	bl	ValidateReceivedWonderNews
.L565:
	cmp	r0, #0x1
	bne	.LCB2627
	b	.L552	@long jump
.LCB2627:
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	b	.L370
.L380:
	mov	r0, #0x25
	strb	r0, [r5, #0x8]
	b	.L370
.L383:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L384	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L568
	b	.L553
.L569:
	.align	2, 0
.L568:
	.word	gText_DontHaveCardNewOneInput
.L384:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L570
.L553:
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	bne	.LCB2673
	b	.L370	@long jump
.LCB2673:
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	bl	PrintMysteryGiftOrEReaderTopMenu
	b	.L370
.L571:
	.align	2, 0
.L570:
	.word	gText_DontHaveNewsNewOneInput
.L388:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L389	@cond_branch
	ldr	r0, .L572
	bl	AddTextPrinterToWindow1
	b	.L390
.L573:
	.align	2, 0
.L572:
	.word	gText_WhereShouldCardBeAccessed
.L389:
	ldr	r0, .L574
	bl	AddTextPrinterToWindow1
.L390:
	mov	r0, #0x4
	strb	r0, [r5, #0x8]
	b	.L370
.L575:
	.align	2, 0
.L574:
	.word	gText_WhereShouldNewsBeAccessed
.L391:
	add	r0, r5, #0
	add	r0, r0, #0x9
	add	r1, r5, #0
	mov	r2, #0x1
	bl	MysteryGift_HandleThreeOptionMenu
	add	r4, r0, #0
	cmp	r4, #0x1
	beq	.L394	@cond_branch
	cmp	r4, #0x1
	bcc	.L393	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L395	@cond_branch
	b	.L370
.L393:
	bl	ClearTextWindow
	mov	r1, #0x0
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	strb	r1, [r5, #0xd]
	b	.L370
.L394:
	bl	ClearTextWindow
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	strb	r4, [r5, #0xd]
	b	.L370
.L395:
	bl	ClearTextWindow
	ldrb	r0, [r5, #0xc]
	bl	ValidateCardOrNews
	cmp	r0, #0
	beq	.LCB2766
	b	.L552	@long jump
.LCB2766:
	strb	r0, [r5, #0x8]
	mov	r0, #0x0
	b	.L554
.L400:
	ldr	r0, .L576
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, .L576+0x4
	strb	r1, [r0]
	ldr	r0, .L576+0x8
	strb	r1, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	beq	.L402	@cond_branch
	cmp	r0, #0x1
	beq	.L406	@cond_branch
	b	.L401
.L577:
	.align	2, 0
.L576:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.L402:
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L403	@cond_branch
	mov	r0, #0x15
	bl	MEvent_CreateTask_CardOrNewsWithFriend
	b	.L401
.L403:
	cmp	r0, #0
	bne	.L401	@cond_branch
	mov	r0, #0x15
	bl	MEvent_CreateTask_CardOrNewsOverWireless
	b	.L401
.L406:
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L407	@cond_branch
	mov	r0, #0x16
	bl	MEvent_CreateTask_CardOrNewsWithFriend
	b	.L401
.L407:
	cmp	r0, #0
	bne	.L401	@cond_branch
	mov	r0, #0x16
	bl	MEvent_CreateTask_CardOrNewsOverWireless
.L401:
	mov	r0, #0x6
	strb	r0, [r5, #0x8]
	b	.L370
.L412:
	ldr	r0, .L578
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L413	@cond_branch
	mov	r0, #0x1
	bl	ClearScreenInBg0
	mov	r0, #0x7
	strb	r0, [r5, #0x8]
	ldrb	r0, [r5, #0xc]
	bl	mevent_client_do_init
	b	.L370
.L579:
	.align	2, 0
.L578:
	.word	gReceivedRemoteLinkPlayers
.L413:
	ldr	r0, .L580
	ldrh	r0, [r0]
	cmp	r0, #0x5
	beq	.LCB2870
	b	.L370	@long jump
.LCB2870:
	mov	r0, #0x1
	bl	ClearScreenInBg0
	b	.L555
.L581:
	.align	2, 0
.L580:
	.word	gSpecialVar_Result
.L416:
	ldr	r0, .L582
	bl	AddTextPrinterToWindow1
	mov	r0, #0x8
	strb	r0, [r5, #0x8]
	b	.L370
.L583:
	.align	2, 0
.L582:
	.word	gText_Communicating
.L417:
	add	r0, r5, #0
	bl	mevent_client_do_exec
	sub	r0, r0, #0x2
	cmp	r0, #0x4
	bls	.LCB2903
	b	.L370	@long jump
.LCB2903:
	lsl	r0, r0, #0x2
	ldr	r1, .L584
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L585:
	.align	2, 0
.L584:
	.word	.L424
	.align	2, 0
	.align	2, 0
.L424:
	.word	.L422
	.word	.L421
	.word	.L423
	.word	.L420
	.word	.L419
.L419:
	bl	Rfu_SetCloseLinkCallback
	ldrh	r0, [r5]
	strb	r0, [r5, #0xe]
	mov	r0, #0xd
	strb	r0, [r5, #0x8]
	b	.L370
.L420:
	ldr	r4, [r5, #0x10]
	bl	mevent_client_get_buffer
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x40
	bl	memcpy
	bl	mevent_client_inc_flag
	b	.L370
.L421:
	mov	r0, #0xa
	strb	r0, [r5, #0x8]
	b	.L370
.L422:
	mov	r0, #0x9
	strb	r0, [r5, #0x8]
	b	.L370
.L423:
	mov	r0, #0xb
	strb	r0, [r5, #0x8]
	ldr	r0, .L586
	ldr	r1, .L586+0x4
	bl	StringCopy
	b	.L370
.L587:
	.align	2, 0
.L586:
	.word	gStringVar1
	.word	gLinkPlayers+0x8
.L426:
	add	r4, r5, #0
	add	r4, r4, #0x9
	bl	mevent_client_get_buffer
	add	r3, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x0
	bl	mevent_message_print_and_prompt_yes_no
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L448	@cond_branch
	cmp	r1, #0x1
	bcs	.L563	@cond_branch
	mov	r0, #0x0
	b	.L556
.L433:
	add	r4, r5, #0
	add	r4, r4, #0x9
	bl	mevent_client_get_buffer
	add	r1, r0, #0
	add	r0, r4, #0
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	bne	.LCB3000
	b	.L370	@long jump
.LCB3000:
	b	.L557
.L435:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r3, .L588
	add	r1, r5, #0
	mov	r2, #0x0
	bl	mevent_message_print_and_prompt_yes_no
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L448	@cond_branch
	cmp	r1, #0x1
	bcs	.L563	@cond_branch
	bl	CheckReceivedGiftFromWonderCard
	cmp	r0, #0x1
	bne	.L438	@cond_branch
	mov	r0, #0xc
	strb	r0, [r5, #0x8]
	b	.L370
.L589:
	.align	2, 0
.L588:
	.word	gText_ThrowAwayWonderCard
.L438:
	mov	r0, #0x0
	b	.L556
.L444:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r3, .L590
	add	r1, r5, #0
	mov	r2, #0x0
	bl	mevent_message_print_and_prompt_yes_no
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L447	@cond_branch
	cmp	r1, #0x1
	bcc	.L446	@cond_branch
.L563:
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L448	@cond_branch
	b	.L370
.L591:
	.align	2, 0
.L590:
	.word	gText_HaventReceivedCardsGift
.L446:
	mov	r0, #0x0
	b	.L556
.L447:
.L448:
	mov	r0, #0x1
.L556:
	bl	mevent_client_set_param
.L557:
	bl	mevent_client_inc_flag
	mov	r0, #0x7
	strb	r0, [r5, #0x8]
	b	.L370
.L451:
	ldr	r0, .L592
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB3096
	b	.L370	@long jump
.LCB3096:
	bl	DestroyWirelessStatusIndicatorSprite
	mov	r0, #0xe
	strb	r0, [r5, #0x8]
	b	.L370
.L593:
	.align	2, 0
.L592:
	.word	gReceivedRemoteLinkPlayers
.L453:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L594
	bl	PrintStringAndWait2Seconds
	cmp	r0, #0
	bne	.LCB3118
	b	.L370	@long jump
.LCB3118:
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L455	@cond_branch
	ldr	r0, .L594+0x4
	ldr	r1, .L594+0x8
	bl	StringCopy
.L455:
	mov	r0, #0xf
	strb	r0, [r5, #0x8]
	b	.L370
.L595:
	.align	2, 0
.L594:
	.word	gText_CommunicationCompleted
	.word	gStringVar1
	.word	gLinkPlayers+0x8
.L456:
	ldrb	r1, [r5, #0xc]
	ldrb	r2, [r5, #0xd]
	ldrb	r3, [r5, #0xe]
	mov	r0, sp
	bl	mevent_message
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L457	@cond_branch
	ldr	r1, [r5, #0x10]
.L457:
	ldr	r0, [sp]
	cmp	r0, #0
	beq	.L458	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	add	r2, r5, #0
	bl	PrintMGSuccessMessage
	b	.L558
.L458:
	add	r0, r5, #0
	add	r0, r0, #0x9
	bl	MG_PrintTextOnWindow1AndWaitButton
.L558:
	add	r1, r0, #0
	cmp	r1, #0
	bne	.LCB3183
	b	.L370	@long jump
.LCB3183:
	ldrb	r0, [r5, #0xe]
	cmp	r0, #0x3
	bne	.L461	@cond_branch
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L462	@cond_branch
	mov	r0, #0x1
	bl	GenerateRandomNews
	b	.L461
.L462:
	mov	r0, #0x2
	bl	GenerateRandomNews
.L461:
	ldr	r0, [sp]
	cmp	r0, #0
	beq	.LCB3209
	b	.L559	@long jump
.LCB3209:
	strb	r0, [r5, #0x8]
	mov	r0, #0x0
	b	.L554
.L468:
	add	r0, r5, #0
	add	r0, r0, #0x9
	bl	mevent_save_game
	cmp	r0, #0
	bne	.LCB3228
	b	.L370	@long jump
.LCB3228:
	b	.L552
.L470:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r1, [r5, #0xc]
	bl	HandleLoadWonderCardOrNews
	cmp	r0, #0
	bne	.LCB3241
	b	.L370	@long jump
.LCB3241:
	b	.L494
.L472:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L473	@cond_branch
	ldr	r2, .L596
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L474	@cond_branch
	mov	r0, #0x15
	strb	r0, [r5, #0x8]
.L474:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB3282
	b	.L370	@long jump
.LCB3282:
	b	.L479
.L597:
	.align	2, 0
.L596:
	.word	gMain
.L473:
	ldr	r0, .L598
	ldrh	r0, [r0, #0x2e]
	bl	MENews_GetInput
	cmp	r0, #0
	beq	.L478	@cond_branch
	cmp	r0, #0x1
	beq	.L479	@cond_branch
	b	.L370
.L599:
	.align	2, 0
.L598:
	.word	gMain
.L478:
	bl	MENews_RemoveScrollIndicatorArrowPair
	b	.L511
.L479:
	mov	r0, #0x1b
	strb	r0, [r5, #0x8]
	b	.L370
.L482:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L483	@cond_branch
	bl	WonderCard_Test_Unk_08_6
	cmp	r0, #0
	beq	.L487	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	mov	r3, #0x0
	b	.L560
.L483:
	bl	WonderNews_Test_Unk_02
	cmp	r0, #0
	beq	.L487	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	mov	r3, #0x0
	b	.L560
.L487:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	mov	r3, #0x1
.L560:
	bl	HandleMysteryGiftListMenu
	add	r1, r0, #0
	cmp	r1, #0x1
	beq	.L491	@cond_branch
	cmp	r1, #0x1
	bcc	.L490	@cond_branch
	cmp	r1, #0x2
	beq	.L492	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L493	@cond_branch
	b	.L370
.L490:
	mov	r0, #0x1c
	strb	r0, [r5, #0x8]
	b	.L370
.L491:
	mov	r0, #0x1d
	strb	r0, [r5, #0x8]
	b	.L370
.L492:
	mov	r0, #0x16
	strb	r0, [r5, #0x8]
	b	.L370
.L493:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x1
	bne	.L494	@cond_branch
	bl	MENews_AddScrollIndicatorArrowPair
.L494:
	mov	r0, #0x14
	strb	r0, [r5, #0x8]
	b	.L370
.L497:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	bl	mevent_message_prompt_discard
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L499	@cond_branch
	cmp	r1, #0
	ble	.L564	@cond_branch
	cmp	r1, #0x1
	beq	.L511	@cond_branch
	b	.L370
.L499:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L509	@cond_branch
	bl	CheckReceivedGiftFromWonderCard
	cmp	r0, #0x1
	bne	.L509	@cond_branch
	mov	r0, #0x17
	strb	r0, [r5, #0x8]
	b	.L370
.L507:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r3, .L600
	add	r1, r5, #0
	mov	r2, #0x1
	bl	mevent_message_print_and_prompt_yes_no
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L510	@cond_branch
	cmp	r1, #0x1
	bcc	.L509	@cond_branch
.L564:
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L511	@cond_branch
	b	.L370
.L601:
	.align	2, 0
.L600:
	.word	gText_HaventReceivedGiftOkayToDiscard
.L509:
	mov	r0, #0x18
	strb	r0, [r5, #0x8]
	b	.L370
.L510:
.L511:
	mov	r0, #0x15
	strb	r0, [r5, #0x8]
	b	.L370
.L514:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	bl	TearDownCardOrNews_ReturnToTopMenu
	cmp	r0, #0
	bne	.LCB3506
	b	.L370	@long jump
.LCB3506:
	ldrb	r0, [r5, #0xc]
	bl	DestroyNewsOrCard
	mov	r0, #0x19
	strb	r0, [r5, #0x8]
	b	.L370
.L516:
	add	r0, r5, #0
	add	r0, r0, #0x9
	bl	mevent_save_game
	cmp	r0, #0
	bne	.LCB3522
	b	.L370	@long jump
.LCB3522:
	mov	r0, #0x1a
	strb	r0, [r5, #0x8]
	b	.L370
.L518:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r1, [r5, #0xc]
	bl	mevent_message_was_thrown_away
	b	.L561
.L520:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x0
	bl	TearDownCardOrNews_ReturnToTopMenu
	cmp	r0, #0
	bne	.LCB3547
	b	.L370	@long jump
.LCB3547:
	mov	r0, #0x0
	strb	r0, [r5, #0x8]
	b	.L370
.L522:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	bl	TearDownCardOrNews_ReturnToTopMenu
	cmp	r0, #0
	bne	.LCB3560
	b	.L370	@long jump
.LCB3560:
.L555:
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	b	.L370
.L524:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	bl	TearDownCardOrNews_ReturnToTopMenu
	cmp	r0, #0
	bne	.LCB3574
	b	.L370	@long jump
.LCB3574:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	beq	.L527	@cond_branch
	cmp	r0, #0x1
	beq	.L528	@cond_branch
	b	.L526
.L527:
	mov	r0, #0x15
	bl	MEvent_CreateTask_Leader
	b	.L526
.L528:
	mov	r0, #0x16
	bl	MEvent_CreateTask_Leader
.L526:
	mov	r0, #0x1
	strb	r0, [r5, #0xd]
	mov	r0, #0x1e
	strb	r0, [r5, #0x8]
	b	.L370
.L531:
	ldr	r0, .L602
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L532	@cond_branch
	mov	r0, #0x1
	bl	ClearScreenInBg0
	mov	r0, #0x1f
	strb	r0, [r5, #0x8]
	b	.L370
.L603:
	.align	2, 0
.L602:
	.word	gReceivedRemoteLinkPlayers
.L532:
	ldr	r0, .L604
	ldrh	r0, [r0]
	cmp	r0, #0x5
	beq	.LCB3627
	b	.L370	@long jump
.LCB3627:
	mov	r0, #0x1
	bl	ClearScreenInBg0
.L552:
	mov	r0, #0x12
	strb	r0, [r5, #0x8]
	b	.L370
.L605:
	.align	2, 0
.L604:
	.word	gSpecialVar_Result
.L535:
	ldr	r0, .L606
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, .L606+0x4
	strb	r1, [r0]
	ldr	r0, .L606+0x8
	strb	r1, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L536	@cond_branch
	ldr	r0, .L606+0xc
	bl	AddTextPrinterToWindow1
	bl	mevent_srv_new_wcard
	b	.L537
.L607:
	.align	2, 0
.L606:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_SendingWonderCard
.L536:
	ldr	r0, .L608
	bl	AddTextPrinterToWindow1
	bl	mevent_srv_init_wnews
.L537:
	mov	r0, #0x20
	strb	r0, [r5, #0x8]
	b	.L370
.L609:
	.align	2, 0
.L608:
	.word	gText_SendingWonderNews
.L538:
	add	r0, r5, #0
	bl	mevent_srv_common_do_exec
	cmp	r0, #0x3
	bne	.L370	@cond_branch
	ldrh	r0, [r5]
	strb	r0, [r5, #0xe]
	mov	r0, #0x21
	strb	r0, [r5, #0x8]
	b	.L370
.L540:
	bl	Rfu_SetCloseLinkCallback
	ldr	r0, .L610
	ldr	r1, .L610+0x4
	bl	StringCopy
	mov	r0, #0x22
	strb	r0, [r5, #0x8]
	b	.L370
.L611:
	.align	2, 0
.L610:
	.word	gStringVar1
	.word	gLinkPlayers+0x24
.L541:
	ldr	r0, .L612
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L370	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	mov	r0, #0x23
	strb	r0, [r5, #0x8]
	b	.L370
.L613:
	.align	2, 0
.L612:
	.word	gReceivedRemoteLinkPlayers
.L543:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xd]
	ldrb	r3, [r5, #0xe]
	add	r1, r5, #0
	bl	PrintMGSendStatus
	cmp	r0, #0
	beq	.L370	@cond_branch
	ldr	r0, [r5, #0xc]
	ldr	r1, .L614
	and	r0, r0, r1
	ldr	r1, .L614+0x4
	cmp	r0, r1
	bne	.L562	@cond_branch
	mov	r0, #0x3
	bl	GenerateRandomNews
.L559:
	mov	r0, #0x11
	strb	r0, [r5, #0x8]
	b	.L370
.L615:
	.align	2, 0
.L614:
	.word	0xffff00
	.word	0x30100
.L547:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L616
	bl	MG_PrintTextOnWindow1AndWaitButton
.L561:
	cmp	r0, #0
	beq	.L370	@cond_branch
.L562:
	mov	r0, #0x0
	strb	r0, [r5, #0x8]
.L554:
	mov	r1, #0x0
	bl	PrintMysteryGiftOrEReaderTopMenu
	b	.L370
.L617:
	.align	2, 0
.L616:
	.word	gText_CommunicationError
.L549:
	bl	CloseLink
	ldr	r0, [r5, #0x10]
	bl	Free
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L618
	bl	SetMainCallback2
.L370:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L619:
	.align	2, 0
.L618:
	.word	MainCB_FreeAllBuffersAndReturnToInitTitleScreen
.Lfe33:
	.size	 task00_mystery_gift,.Lfe33-task00_mystery_gift
	.align	2, 0
	.globl	GetMysteryGiftBaseBlock
	.type	 GetMysteryGiftBaseBlock,function
	.thumb_func
GetMysteryGiftBaseBlock:
	ldr	r0, .L621
	bx	lr
.L622:
	.align	2, 0
.L621:
	.word	0x1a9
.Lfe34:
	.size	 GetMysteryGiftBaseBlock,.Lfe34-GetMysteryGiftBaseBlock
	.align	2, 0
	.globl	bgid_upload_textbox_1
	.type	 bgid_upload_textbox_1,function
	.thumb_func
bgid_upload_textbox_1:
	push	{lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L624
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	mov	r3, #0x0
	str	r3, [sp]
	bl	DecompressAndLoadBgGfxUsingHeap
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L625:
	.align	2, 0
.L624:
	.word	gUnkTextboxBorderGfx
.Lfe35:
	.size	 bgid_upload_textbox_1,.Lfe35-bgid_upload_textbox_1
.text
	.align	2, 0

