@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sMrStoneTextScripts,object
sMrStoneTextScripts:
	.word	MatchCall_Text_MrStone1
	.short	0xffff
	.short	0x158
	.word	MatchCall_Text_MrStone2
	.short	0x158
	.short	0xffff
	.word	MatchCall_Text_MrStone3
	.short	0xbd
	.short	0xffff
	.word	MatchCall_Text_MrStone4
	.short	0x110
	.short	0xffff
	.word	MatchCall_Text_MrStone5
	.short	0x6a
	.short	0xffff
	.word	MatchCall_Text_MrStone6
	.short	0x4f4
	.short	0xffff
	.word	MatchCall_Text_MrStone7
	.short	0x97
	.short	0xffff
	.word	MatchCall_Text_MrStone8
	.short	0x6f
	.short	0xffff
	.word	MatchCall_Text_MrStone9
	.short	0x70
	.short	0xffff
	.word	MatchCall_Text_MrStone10
	.short	0x4f7
	.short	0xffff
	.word	MatchCall_Text_MrStone11
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sMrStoneTextScripts,96
	.align	2, 0
	.type	 sMrStoneMatchCallHeader,object
	.size	 sMrStoneMatchCallHeader,16
sMrStoneMatchCallHeader:
	.byte	0x0
	.byte	0xa
	.short	0xffff
	.word	gText_MrStoneMatchCallDesc
	.word	gText_MrStoneMatchCallName
	.word	sMrStoneTextScripts
	.align	2, 0
	.type	 sNormanTextScripts,object
sNormanTextScripts:
	.word	MatchCall_Text_Norman1
	.short	0x132
	.short	0xffff
	.word	MatchCall_Text_Norman2
	.short	0x4f1
	.short	0xffff
	.word	MatchCall_Text_Norman3
	.short	0x4f3
	.short	0xffff
	.word	MatchCall_Text_Norman4
	.short	0x4f4
	.short	0xffff
	.word	MatchCall_Text_Norman5
	.short	0xd4
	.short	0xffff
	.word	MatchCall_Text_Norman6
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_Norman7
	.short	0x864
	.short	0xffff
	.word	MatchCall_Text_Norman8
	.short	0x864
	.short	0xffff
	.word	MatchCall_Text_Norman9
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sNormanTextScripts,80
	.align	2, 0
	.type	 sNormanMatchCallHeader,object
	.size	 sNormanMatchCallHeader,20
sNormanMatchCallHeader:
	.byte	0x5
	.byte	0x7
	.short	0x132
	.short	0x45
	.space	2
	.word	gText_NormanMatchCallDesc
	.word	gText_NormanMatchCallName
	.word	sNormanTextScripts
	.align	2, 0
	.type	 sProfBirchMatchCallHeader,object
	.size	 sProfBirchMatchCallHeader,12
sProfBirchMatchCallHeader:
	.byte	0x3
	.byte	0x0
	.short	0x119
	.word	gText_ProfBirchMatchCallDesc
	.word	gText_ProfBirchMatchCallName
	.align	2, 0
	.type	 sMomTextScripts,object
sMomTextScripts:
	.word	MatchCall_Text_Mom1
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Mom2
	.short	0x4f4
	.short	0xffff
	.word	MatchCall_Text_Mom3
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sMomTextScripts,32
	.align	2, 0
	.type	 sMomMatchCallHeader,object
	.size	 sMomMatchCallHeader,16
sMomMatchCallHeader:
	.byte	0x0
	.byte	0x0
	.short	0xd8
	.word	gText_MomMatchCallDesc
	.word	gText_MomMatchCallName
	.word	sMomTextScripts
	.align	2, 0
	.type	 sStevenTextScripts,object
sStevenTextScripts:
	.word	MatchCall_Text_Steven1
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Steven2
	.short	0xc7
	.short	0xffff
	.word	MatchCall_Text_Steven3
	.short	0xd4
	.short	0xffff
	.word	MatchCall_Text_Steven4
	.short	0x70
	.short	0xffff
	.word	MatchCall_Text_Steven5
	.short	0x4f6
	.short	0xffff
	.word	MatchCall_Text_Steven6
	.short	0x81
	.short	0xffff
	.word	MatchCall_Text_Steven7
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sStevenTextScripts,64
	.align	2, 0
	.type	 sStevenMatchCallHeader,object
	.size	 sStevenMatchCallHeader,16
sStevenMatchCallHeader:
	.byte	0x0
	.byte	0xd5
	.short	0x131
	.word	gText_StevenMatchCallDesc
	.word	gText_StevenMatchCallName
	.word	sStevenTextScripts
	.align	2, 0
	.type	 sMayTextScripts,object
sMayTextScripts:
	.word	MatchCall_Text_May1
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_May2
	.short	0x4f1
	.short	0xffff
	.word	MatchCall_Text_May3
	.short	0x95
	.short	0xffff
	.word	MatchCall_Text_May4
	.short	0x324
	.short	0xffff
	.word	MatchCall_Text_May5
	.short	0x6a
	.short	0xffff
	.word	MatchCall_Text_May6
	.short	0x4f3
	.short	0xffff
	.word	MatchCall_Text_May7
	.short	0x4f4
	.short	0xffff
	.word	MatchCall_Text_May8
	.short	0x97
	.short	0xffff
	.word	MatchCall_Text_May9
	.short	0xd4
	.short	0xffff
	.word	MatchCall_Text_May10
	.short	0x6f
	.short	0xffff
	.word	MatchCall_Text_May11
	.short	0x61
	.short	0xffff
	.word	MatchCall_Text_May12
	.short	0x70
	.short	0xffff
	.word	MatchCall_Text_May13
	.short	0x81
	.short	0xffff
	.word	MatchCall_Text_May14
	.short	0x4f7
	.short	0xffff
	.word	MatchCall_Text_May15
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sMayTextScripts,128
	.align	2, 0
	.type	 sMayMatchCallHeader,object
	.size	 sMayMatchCallHeader,16
sMayMatchCallHeader:
	.byte	0x4
	.byte	0x0
	.short	0xfd
	.word	gText_MayBrendanMatchCallDesc
	.word	gText_ExpandedPlaceholder_May
	.word	sMayTextScripts
	.align	2, 0
	.type	 sBrendanTextScripts,object
sBrendanTextScripts:
	.word	MatchCall_Text_Brendan1
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Brendan2
	.short	0x4f1
	.short	0xffff
	.word	MatchCall_Text_Brendan3
	.short	0x95
	.short	0xffff
	.word	MatchCall_Text_Brendan4
	.short	0x324
	.short	0xffff
	.word	MatchCall_Text_Brendan5
	.short	0x6a
	.short	0xffff
	.word	MatchCall_Text_Brendan6
	.short	0x4f3
	.short	0xffff
	.word	MatchCall_Text_Brendan7
	.short	0x4f4
	.short	0xffff
	.word	MatchCall_Text_Brendan8
	.short	0x97
	.short	0xffff
	.word	MatchCall_Text_Brendan9
	.short	0xd4
	.short	0xffff
	.word	MatchCall_Text_Brendan10
	.short	0x6f
	.short	0xffff
	.word	MatchCall_Text_Brendan11
	.short	0x61
	.short	0xffff
	.word	MatchCall_Text_Brendan12
	.short	0x70
	.short	0xffff
	.word	MatchCall_Text_Brendan13
	.short	0x81
	.short	0xffff
	.word	MatchCall_Text_Brendan14
	.short	0x4f7
	.short	0xffff
	.word	MatchCall_Text_Brendan15
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sBrendanTextScripts,128
	.align	2, 0
	.type	 sBrendanMatchCallHeader,object
	.size	 sBrendanMatchCallHeader,16
sBrendanMatchCallHeader:
	.byte	0x4
	.byte	0x1
	.short	0xfd
	.word	gText_MayBrendanMatchCallDesc
	.word	gText_ExpandedPlaceholder_Brendan
	.word	sBrendanTextScripts
	.align	2, 0
	.type	 sWallyTextScripts,object
sWallyTextScripts:
	.word	MatchCall_Text_Wally1
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Wally2
	.short	0xc7
	.short	0xffff
	.word	MatchCall_Text_Wally3
	.short	0x4f3
	.short	0xffff
	.word	MatchCall_Text_Wally4
	.short	0x97
	.short	0xffff
	.word	MatchCall_Text_Wally5
	.short	0x6f
	.short	0xffff
	.word	MatchCall_Text_Wally6
	.short	0x81
	.short	0xffff
	.word	MatchCall_Text_Wally7
	.short	0x7e
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sWallyTextScripts,64
	.globl	sWallyLocationData
	.align	2, 0
	.type	 sWallyLocationData,object
sWallyLocationData:
	.short	0x324
	.byte	0x5
	.space	1
	.short	0x6f
	.byte	0xd5
	.space	1
	.short	0x35a
	.byte	0x46
	.space	1
	.short	0xffff
	.byte	0xd5
	.space	1
	.size	 sWallyLocationData,16
	.align	2, 0
	.type	 sWallyMatchCallHeader,object
	.size	 sWallyMatchCallHeader,20
sWallyMatchCallHeader:
	.byte	0x2
	.byte	0x0
	.short	0xd6
	.short	0x40
	.space	2
	.word	gText_WallyMatchCallDesc
	.word	sWallyTextScripts
	.word	sWallyLocationData
	.align	2, 0
	.type	 sScottTextScripts,object
sScottTextScripts:
	.word	MatchCall_Text_Scott1
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Scott2
	.short	0x8b
	.short	0xffff
	.word	MatchCall_Text_Scott3
	.short	0x97
	.short	0xffff
	.word	MatchCall_Text_Scott4
	.short	0xd4
	.short	0xffff
	.word	MatchCall_Text_Scott5
	.short	0x70
	.short	0xffff
	.word	MatchCall_Text_Scott6
	.short	0x4f7
	.short	0xffff
	.word	MatchCall_Text_Scott7
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sScottTextScripts,64
	.align	2, 0
	.type	 sScottMatchCallHeader,object
	.size	 sScottMatchCallHeader,16
sScottMatchCallHeader:
	.byte	0x0
	.byte	0xd5
	.short	0xd7
	.word	gText_ScottMatchCallDesc
	.word	gText_ScottMatchCallName
	.word	sScottTextScripts
	.align	2, 0
	.type	 sRoxanneTextScripts,object
sRoxanneTextScripts:
	.word	MatchCall_Text_Roxanne1
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_Roxanne2
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Roxanne3
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Roxanne4
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sRoxanneTextScripts,40
	.align	2, 0
	.type	 sRoxanneMatchCallHeader,object
	.size	 sRoxanneMatchCallHeader,20
sRoxanneMatchCallHeader:
	.byte	0x5
	.byte	0xa
	.short	0x1d3
	.short	0x41
	.space	2
	.word	gText_RoxanneMatchCallDesc
	.word	0x0
	.word	sRoxanneTextScripts
	.align	2, 0
	.type	 sBrawlyTextScripts,object
sBrawlyTextScripts:
	.word	MatchCall_Text_Brawly1
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_Brawly2
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Brawly3
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Brawly4
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sBrawlyTextScripts,40
	.align	2, 0
	.type	 sBrawlyMatchCallHeader,object
	.size	 sBrawlyMatchCallHeader,20
sBrawlyMatchCallHeader:
	.byte	0x5
	.byte	0x2
	.short	0x1d4
	.short	0x42
	.space	2
	.word	gText_BrawlyMatchCallDesc
	.word	0x0
	.word	sBrawlyTextScripts
	.align	2, 0
	.type	 sWattsonTextScripts,object
sWattsonTextScripts:
	.word	MatchCall_Text_Wattson1
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_Wattson2
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Wattson3
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Wattson4
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sWattsonTextScripts,40
	.align	2, 0
	.type	 sWattsonMatchCallHeader,object
	.size	 sWattsonMatchCallHeader,20
sWattsonMatchCallHeader:
	.byte	0x5
	.byte	0x9
	.short	0x1d5
	.short	0x43
	.space	2
	.word	gText_WattsonMatchCallDesc
	.word	0x0
	.word	sWattsonTextScripts
	.align	2, 0
	.type	 sFlanneryTextScripts,object
sFlanneryTextScripts:
	.word	MatchCall_Text_Flannery1
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_Flannery2
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Flannery3
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Flannery4
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sFlanneryTextScripts,40
	.align	2, 0
	.type	 sFlanneryMatchCallHeader,object
	.size	 sFlanneryMatchCallHeader,20
sFlanneryMatchCallHeader:
	.byte	0x5
	.byte	0x3
	.short	0x1d6
	.short	0x44
	.space	2
	.word	gText_FlanneryMatchCallDesc
	.word	0x0
	.word	sFlanneryTextScripts
	.align	2, 0
	.type	 sWinonaTextScripts,object
sWinonaTextScripts:
	.word	MatchCall_Text_Winona1
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_Winona2
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Winona3
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Winona4
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sWinonaTextScripts,40
	.align	2, 0
	.type	 sWinonaMatchCallHeader,object
	.size	 sWinonaMatchCallHeader,20
sWinonaMatchCallHeader:
	.byte	0x5
	.byte	0xb
	.short	0x1d7
	.short	0x46
	.space	2
	.word	gText_WinonaMatchCallDesc
	.word	0x0
	.word	sWinonaTextScripts
	.align	2, 0
	.type	 sTateLizaTextScripts,object
sTateLizaTextScripts:
	.word	MatchCall_Text_TateLiza1
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_TateLiza2
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_TateLiza3
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_TateLiza4
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sTateLizaTextScripts,40
	.align	2, 0
	.type	 sTateLizaMatchCallHeader,object
	.size	 sTateLizaMatchCallHeader,20
sTateLizaMatchCallHeader:
	.byte	0x5
	.byte	0xd
	.short	0x1d8
	.short	0x47
	.space	2
	.word	gText_TateLizaMatchCallDesc
	.word	0x0
	.word	sTateLizaTextScripts
	.align	2, 0
	.type	 sJuanTextScripts,object
sJuanTextScripts:
	.word	MatchCall_Text_Juan1
	.short	0xfffe
	.short	0xffff
	.word	MatchCall_Text_Juan2
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Juan3
	.short	0xffff
	.short	0xffff
	.word	MatchCall_Text_Juan4
	.short	0x864
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sJuanTextScripts,40
	.align	2, 0
	.type	 sJuanMatchCallHeader,object
	.size	 sJuanMatchCallHeader,20
sJuanMatchCallHeader:
	.byte	0x5
	.byte	0xe
	.short	0x1d9
	.short	0x48
	.space	2
	.word	gText_JuanMatchCallDesc
	.word	0x0
	.word	sJuanTextScripts
	.align	2, 0
	.type	 sSidneyTextScripts,object
sSidneyTextScripts:
	.word	MatchCall_Text_Sidney
	.short	0xffff
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sSidneyTextScripts,16
	.align	2, 0
	.type	 sSidneyMatchCallHeader,object
	.size	 sSidneyMatchCallHeader,20
sSidneyMatchCallHeader:
	.byte	0x5
	.byte	0xf
	.short	0x1a5
	.short	0x49
	.space	2
	.word	gText_EliteFourMatchCallDesc
	.word	0x0
	.word	sSidneyTextScripts
	.align	2, 0
	.type	 sPhoebeTextScripts,object
sPhoebeTextScripts:
	.word	MatchCall_Text_Phoebe
	.short	0xffff
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sPhoebeTextScripts,16
	.align	2, 0
	.type	 sPhoebeMatchCallHeader,object
	.size	 sPhoebeMatchCallHeader,20
sPhoebeMatchCallHeader:
	.byte	0x5
	.byte	0xf
	.short	0x1a6
	.short	0x4a
	.space	2
	.word	gText_EliteFourMatchCallDesc
	.word	0x0
	.word	sPhoebeTextScripts
	.align	2, 0
	.type	 sGlaciaTextScripts,object
sGlaciaTextScripts:
	.word	MatchCall_Text_Glacia
	.short	0xffff
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sGlaciaTextScripts,16
	.align	2, 0
	.type	 sGlaciaMatchCallHeader,object
	.size	 sGlaciaMatchCallHeader,20
sGlaciaMatchCallHeader:
	.byte	0x5
	.byte	0xf
	.short	0x1a7
	.short	0x4b
	.space	2
	.word	gText_EliteFourMatchCallDesc
	.word	0x0
	.word	sGlaciaTextScripts
	.align	2, 0
	.type	 sDrakeTextScripts,object
sDrakeTextScripts:
	.word	MatchCall_Text_Drake
	.short	0xffff
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sDrakeTextScripts,16
	.align	2, 0
	.type	 sDrakeMatchCallHeader,object
	.size	 sDrakeMatchCallHeader,20
sDrakeMatchCallHeader:
	.byte	0x5
	.byte	0xf
	.short	0x1a8
	.short	0x4c
	.space	2
	.word	gText_EliteFourMatchCallDesc
	.word	0x0
	.word	sDrakeTextScripts
	.align	2, 0
	.type	 sWallaceTextScripts,object
sWallaceTextScripts:
	.word	MatchCall_Text_Wallace
	.short	0xffff
	.short	0xffff
	.word	0x0
	.short	0xffff
	.short	0xffff
	.size	 sWallaceTextScripts,16
	.align	2, 0
	.type	 sWallaceMatchCallHeader,object
	.size	 sWallaceMatchCallHeader,20
sWallaceMatchCallHeader:
	.byte	0x5
	.byte	0xf
	.short	0x1a9
	.short	0x4d
	.space	2
	.word	gText_ChampionMatchCallDesc
	.word	0x0
	.word	sWallaceTextScripts
	.align	2, 0
	.type	 sMatchCallHeaders,object
sMatchCallHeaders:
	.word	sMrStoneMatchCallHeader
	.word	sProfBirchMatchCallHeader
	.word	sBrendanMatchCallHeader
	.word	sMayMatchCallHeader
	.word	sWallyMatchCallHeader
	.word	sNormanMatchCallHeader
	.word	sMomMatchCallHeader
	.word	sStevenMatchCallHeader
	.word	sScottMatchCallHeader
	.word	sRoxanneMatchCallHeader
	.word	sBrawlyMatchCallHeader
	.word	sWattsonMatchCallHeader
	.word	sFlanneryMatchCallHeader
	.word	sWinonaMatchCallHeader
	.word	sTateLizaMatchCallHeader
	.word	sJuanMatchCallHeader
	.word	sSidneyMatchCallHeader
	.word	sPhoebeMatchCallHeader
	.word	sGlaciaMatchCallHeader
	.word	sDrakeMatchCallHeader
	.word	sWallaceMatchCallHeader
	.size	 sMatchCallHeaders,84
	.align	2, 0
	.type	 sMatchCallGetEnabledFuncs,object
sMatchCallGetEnabledFuncs:
	.word	MatchCall_GetEnabled_NPC
	.word	MatchCall_GetEnabled_Trainer
	.word	MatchCall_GetEnabled_Wally
	.word	MatchCall_GetEnabled_Rival
	.word	MatchCall_GetEnabled_Birch
	.size	 sMatchCallGetEnabledFuncs,20
	.align	2, 0
	.type	 sMatchCallGetMapSecFuncs,object
sMatchCallGetMapSecFuncs:
	.word	MatchCall_GetMapSec_NPC
	.word	MatchCall_GetMapSec_Trainer
	.word	MatchCall_GetMapSec_Wally
	.word	MatchCall_GetMapSec_Rival
	.word	MatchCall_GetMapSec_Birch
	.size	 sMatchCallGetMapSecFuncs,20
	.align	2, 0
	.type	 sMatchCall_IsRematchableFunctions,object
sMatchCall_IsRematchableFunctions:
	.word	MatchCall_IsRematchable_NPC
	.word	MatchCall_IsRematchable_Trainer
	.word	MatchCall_IsRematchable_Wally
	.word	MatchCall_IsRematchable_Rival
	.word	MatchCall_IsRematchable_Birch
	.size	 sMatchCall_IsRematchableFunctions,20
	.align	2, 0
	.type	 sMatchCall_HasCheckPageFunctions,object
sMatchCall_HasCheckPageFunctions:
	.word	MatchCall_HasCheckPage_NPC
	.word	MatchCall_HasCheckPage_Trainer
	.word	MatchCall_HasCheckPage_Wally
	.word	MatchCall_HasCheckPage_Rival
	.word	MatchCall_HasCheckPage_Birch
	.size	 sMatchCall_HasCheckPageFunctions,20
	.align	2, 0
	.type	 sMatchCall_GetRematchTableIdxFunctions,object
sMatchCall_GetRematchTableIdxFunctions:
	.word	MatchCall_GetRematchTableIdx_NPC
	.word	MatchCall_GetRematchTableIdx_Trainer
	.word	MatchCall_GetRematchTableIdx_Wally
	.word	MatchCall_GetRematchTableIdx_Rival
	.word	MatchCall_GetRematchTableIdx_Birch
	.size	 sMatchCall_GetRematchTableIdxFunctions,20
	.align	2, 0
	.type	 sMatchCall_GetMessageFunctions,object
sMatchCall_GetMessageFunctions:
	.word	MatchCall_GetMessage_NPC
	.word	MatchCall_GetMessage_Trainer
	.word	MatchCall_GetMessage_Wally
	.word	MatchCall_GetMessage_Rival
	.word	MatchCall_GetMessage_Birch
	.size	 sMatchCall_GetMessageFunctions,20
	.align	2, 0
	.type	 sMatchCall_GetNameAndDescFunctions,object
sMatchCall_GetNameAndDescFunctions:
	.word	MatchCall_GetNameAndDesc_NPC
	.word	MatchCall_GetNameAndDesc_Trainer
	.word	MatchCall_GetNameAndDesc_Wally
	.word	MatchCall_GetNameAndDesc_Rival
	.word	MatchCall_GetNameAndDesc_Birch
	.size	 sMatchCall_GetNameAndDescFunctions,20
	.align	2, 0
	.type	 sCheckPageOverrides,object
sCheckPageOverrides:
	.short	0x7
	.short	0x4b
	.word	0xffff
	.word	gText_MatchCallSteven_Strategy
	.word	gText_MatchCallSteven_Pokemon
	.word	gText_MatchCallSteven_Intro1_BeforeMeteorFallsBattle
	.word	gText_MatchCallSteven_Intro2_BeforeMeteorFallsBattle
	.short	0x7
	.short	0x4b
	.word	0x4f6
	.word	gText_MatchCallSteven_Strategy
	.word	gText_MatchCallSteven_Pokemon
	.word	gText_MatchCallSteven_Intro1_AfterMeteorFallsBattle
	.word	gText_MatchCallSteven_Intro2_AfterMeteorFallsBattle
	.short	0x2
	.short	0x3c
	.word	0xffff
	.word	gText_MatchCallBrendan_Strategy
	.word	gText_MatchCallBrendan_Pokemon
	.word	gText_MatchCallBrendan_Intro1
	.word	gText_MatchCallBrendan_Intro2
	.short	0x3
	.short	0x3f
	.word	0xffff
	.word	gText_MatchCallMay_Strategy
	.word	gText_MatchCallMay_Pokemon
	.word	gText_MatchCallMay_Intro1
	.word	gText_MatchCallMay_Intro2
	.size	 sCheckPageOverrides,96
.text
	.align	2, 0
	.type	 MatchCallGetFunctionIndex,function
	.thumb_func
MatchCallGetFunctionIndex:
	push	{lr}
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L5	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L13
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L14:
	.align	2, 0
.L13:
	.word	.L11
	.align	2, 0
	.align	2, 0
.L11:
	.word	.L5
	.word	.L7
	.word	.L8
	.word	.L10
	.word	.L9
	.word	.L7
.L5:
	mov	r0, #0x0
	b	.L12
.L7:
	mov	r0, #0x1
	b	.L12
.L8:
	mov	r0, #0x2
	b	.L12
.L9:
	mov	r0, #0x3
	b	.L12
.L10:
	mov	r0, #0x4
.L12:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 MatchCallGetFunctionIndex,.Lfe1-MatchCallGetFunctionIndex
	.align	2, 0
	.globl	GetTrainerIdxByRematchIdx
	.type	 GetTrainerIdxByRematchIdx,function
	.thumb_func
GetTrainerIdxByRematchIdx:
	ldr	r1, .L16
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	bx	lr
.L17:
	.align	2, 0
.L16:
	.word	gRematchTable
.Lfe2:
	.size	 GetTrainerIdxByRematchIdx,.Lfe2-GetTrainerIdxByRematchIdx
	.align	2, 0
	.globl	GetRematchIdxByTrainerIdx
	.type	 GetRematchIdxByTrainerIdx,function
	.thumb_func
GetRematchIdxByTrainerIdx:
	push	{lr}
	add	r3, r0, #0
	mov	r1, #0x0
	ldr	r2, .L26
.L22:
	ldrh	r0, [r2]
	cmp	r0, r3
	bne	.L21	@cond_branch
	add	r0, r1, #0
	b	.L25
.L27:
	.align	2, 0
.L26:
	.word	gRematchTable
.L21:
	add	r2, r2, #0x10
	add	r1, r1, #0x1
	cmp	r1, #0x4d
	ble	.L22	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L25:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 GetRematchIdxByTrainerIdx,.Lfe3-GetRematchIdxByTrainerIdx
	.align	2, 0
	.globl	MatchCall_GetEnabled
	.type	 MatchCall_GetEnabled,function
	.thumb_func
MatchCall_GetEnabled:
	push	{r4, lr}
	cmp	r0, #0x14
	bhi	.L29	@cond_branch
	ldr	r1, .L31
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r4, #0
	bl	MatchCallGetFunctionIndex
	ldr	r1, .L31+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L30
.L32:
	.align	2, 0
.L31:
	.word	sMatchCallHeaders
	.word	sMatchCallGetEnabledFuncs
.L29:
	mov	r0, #0x0
.L30:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 MatchCall_GetEnabled,.Lfe4-MatchCall_GetEnabled
	.align	2, 0
	.type	 MatchCall_GetEnabled_NPC,function
	.thumb_func
MatchCall_GetEnabled_NPC:
	push	{lr}
	add	r2, r0, #0
	ldrh	r1, [r2, #0x2]
	ldr	r0, .L36
	cmp	r1, r0
	beq	.L34	@cond_branch
	add	r0, r1, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L35
.L37:
	.align	2, 0
.L36:
	.word	0xffff
.L34:
	mov	r0, #0x1
.L35:
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 MatchCall_GetEnabled_NPC,.Lfe5-MatchCall_GetEnabled_NPC
	.align	2, 0
	.type	 MatchCall_GetEnabled_Trainer,function
	.thumb_func
MatchCall_GetEnabled_Trainer:
	push	{lr}
	add	r2, r0, #0
	ldrh	r1, [r2, #0x2]
	ldr	r0, .L41
	cmp	r1, r0
	beq	.L39	@cond_branch
	add	r0, r1, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L40
.L42:
	.align	2, 0
.L41:
	.word	0xffff
.L39:
	mov	r0, #0x1
.L40:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 MatchCall_GetEnabled_Trainer,.Lfe6-MatchCall_GetEnabled_Trainer
	.align	2, 0
	.type	 MatchCall_GetEnabled_Wally,function
	.thumb_func
MatchCall_GetEnabled_Wally:
	push	{lr}
	add	r2, r0, #0
	ldrh	r1, [r2, #0x2]
	ldr	r0, .L46
	cmp	r1, r0
	beq	.L44	@cond_branch
	add	r0, r1, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L45
.L47:
	.align	2, 0
.L46:
	.word	0xffff
.L44:
	mov	r0, #0x1
.L45:
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 MatchCall_GetEnabled_Wally,.Lfe7-MatchCall_GetEnabled_Wally
	.align	2, 0
	.type	 MatchCall_GetEnabled_Rival,function
	.thumb_func
MatchCall_GetEnabled_Rival:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L52
	ldr	r1, [r0]
	ldrb	r0, [r2, #0x1]
	ldrb	r1, [r1, #0x8]
	cmp	r0, r1
	beq	.L49	@cond_branch
	mov	r0, #0x0
	b	.L51
.L53:
	.align	2, 0
.L52:
	.word	gSaveBlock2Ptr
.L49:
	ldrh	r1, [r2, #0x2]
	ldr	r0, .L54
	cmp	r1, r0
	beq	.L50	@cond_branch
	add	r0, r1, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L51
.L55:
	.align	2, 0
.L54:
	.word	0xffff
.L50:
	mov	r0, #0x1
.L51:
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 MatchCall_GetEnabled_Rival,.Lfe8-MatchCall_GetEnabled_Rival
	.align	2, 0
	.type	 MatchCall_GetEnabled_Birch,function
	.thumb_func
MatchCall_GetEnabled_Birch:
	push	{lr}
	ldrh	r0, [r0, #0x2]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 MatchCall_GetEnabled_Birch,.Lfe9-MatchCall_GetEnabled_Birch
	.align	2, 0
	.globl	MatchCall_GetMapSec
	.type	 MatchCall_GetMapSec,function
	.thumb_func
MatchCall_GetMapSec:
	push	{r4, lr}
	cmp	r0, #0x14
	bhi	.L58	@cond_branch
	ldr	r1, .L60
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r4, #0
	bl	MatchCallGetFunctionIndex
	ldr	r1, .L60+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L59
.L61:
	.align	2, 0
.L60:
	.word	sMatchCallHeaders
	.word	sMatchCallGetMapSecFuncs
.L58:
	mov	r0, #0x0
.L59:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 MatchCall_GetMapSec,.Lfe10-MatchCall_GetMapSec
	.align	2, 0
	.type	 MatchCall_GetMapSec_NPC,function
	.thumb_func
MatchCall_GetMapSec_NPC:
	ldrb	r0, [r0, #0x1]
	bx	lr
.Lfe11:
	.size	 MatchCall_GetMapSec_NPC,.Lfe11-MatchCall_GetMapSec_NPC
	.align	2, 0
	.type	 MatchCall_GetMapSec_Trainer,function
	.thumb_func
MatchCall_GetMapSec_Trainer:
	ldrb	r0, [r0, #0x1]
	bx	lr
.Lfe12:
	.size	 MatchCall_GetMapSec_Trainer,.Lfe12-MatchCall_GetMapSec_Trainer
	.align	2, 0
	.type	 MatchCall_GetMapSec_Wally,function
	.thumb_func
MatchCall_GetMapSec_Wally:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	mov	r6, #0x0
	ldr	r7, .L71
	b	.L65
.L72:
	.align	2, 0
.L71:
	.word	0xffff
.L67:
	add	r6, r6, #0x1
.L65:
	ldr	r0, [r5, #0x10]
	lsl	r4, r6, #0x2
	add	r1, r4, r0
	ldrh	r0, [r1]
	cmp	r0, r7
	beq	.L66	@cond_branch
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L67	@cond_branch
.L66:
	ldr	r0, [r5, #0x10]
	add	r0, r4, r0
	ldrb	r0, [r0, #0x2]
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 MatchCall_GetMapSec_Wally,.Lfe13-MatchCall_GetMapSec_Wally
	.align	2, 0
	.type	 MatchCall_GetMapSec_Rival,function
	.thumb_func
MatchCall_GetMapSec_Rival:
	mov	r0, #0xd5
	bx	lr
.Lfe14:
	.size	 MatchCall_GetMapSec_Rival,.Lfe14-MatchCall_GetMapSec_Rival
	.align	2, 0
	.type	 MatchCall_GetMapSec_Birch,function
	.thumb_func
MatchCall_GetMapSec_Birch:
	mov	r0, #0xd5
	bx	lr
.Lfe15:
	.size	 MatchCall_GetMapSec_Birch,.Lfe15-MatchCall_GetMapSec_Birch
	.align	2, 0
	.globl	MatchCall_IsRematchable
	.type	 MatchCall_IsRematchable,function
	.thumb_func
MatchCall_IsRematchable:
	push	{r4, lr}
	cmp	r0, #0x14
	bhi	.L76	@cond_branch
	ldr	r1, .L78
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r4, #0
	bl	MatchCallGetFunctionIndex
	ldr	r1, .L78+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L77
.L79:
	.align	2, 0
.L78:
	.word	sMatchCallHeaders
	.word	sMatchCall_IsRematchableFunctions
.L76:
	mov	r0, #0x0
.L77:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 MatchCall_IsRematchable,.Lfe16-MatchCall_IsRematchable
	.align	2, 0
	.type	 MatchCall_IsRematchable_NPC,function
	.thumb_func
MatchCall_IsRematchable_NPC:
	mov	r0, #0x0
	bx	lr
.Lfe17:
	.size	 MatchCall_IsRematchable_NPC,.Lfe17-MatchCall_IsRematchable_NPC
	.align	2, 0
	.type	 MatchCall_IsRematchable_Trainer,function
	.thumb_func
MatchCall_IsRematchable_Trainer:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x4]
	cmp	r0, #0x48
	bhi	.L82	@cond_branch
	ldr	r0, .L85
	ldr	r0, [r0]
	ldr	r2, .L85+0x4
	add	r0, r0, r2
	ldrh	r1, [r1, #0x4]
	add	r0, r0, r1
	ldrb	r1, [r0]
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #0x1f
	b	.L84
.L86:
	.align	2, 0
.L85:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.L82:
	mov	r0, #0x0
.L84:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 MatchCall_IsRematchable_Trainer,.Lfe18-MatchCall_IsRematchable_Trainer
	.align	2, 0
	.type	 MatchCall_IsRematchable_Wally,function
	.thumb_func
MatchCall_IsRematchable_Wally:
	ldr	r1, .L89
	ldr	r1, [r1]
	ldr	r2, .L89+0x4
	add	r1, r1, r2
	ldrh	r0, [r0, #0x4]
	add	r1, r1, r0
	ldrb	r1, [r1]
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #0x1f
	bx	lr
.L90:
	.align	2, 0
.L89:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.Lfe19:
	.size	 MatchCall_IsRematchable_Wally,.Lfe19-MatchCall_IsRematchable_Wally
	.align	2, 0
	.type	 MatchCall_IsRematchable_Rival,function
	.thumb_func
MatchCall_IsRematchable_Rival:
	mov	r0, #0x0
	bx	lr
.Lfe20:
	.size	 MatchCall_IsRematchable_Rival,.Lfe20-MatchCall_IsRematchable_Rival
	.align	2, 0
	.type	 MatchCall_IsRematchable_Birch,function
	.thumb_func
MatchCall_IsRematchable_Birch:
	mov	r0, #0x0
	bx	lr
.Lfe21:
	.size	 MatchCall_IsRematchable_Birch,.Lfe21-MatchCall_IsRematchable_Birch
	.align	2, 0
	.globl	MatchCall_HasCheckPage
	.type	 MatchCall_HasCheckPage,function
	.thumb_func
MatchCall_HasCheckPage:
	push	{r4, r5, lr}
	add	r5, r0, #0
	cmp	r5, #0x14
	bhi	.L104	@cond_branch
	ldr	r1, .L106
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r4, #0
	bl	MatchCallGetFunctionIndex
	add	r2, r0, #0
	ldr	r1, .L106+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	cmp	r0, #0
	beq	.L95	@cond_branch
.L105:
	mov	r0, #0x1
	b	.L102
.L107:
	.align	2, 0
.L106:
	.word	sMatchCallHeaders
	.word	sMatchCall_HasCheckPageFunctions
.L95:
	mov	r2, #0x0
	ldr	r1, .L108
.L99:
	ldrh	r0, [r1]
	cmp	r0, r5
	beq	.L105	@cond_branch
	add	r1, r1, #0x18
	add	r2, r2, #0x1
	cmp	r2, #0x3
	bls	.L99	@cond_branch
.L104:
	mov	r0, #0x0
.L102:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L109:
	.align	2, 0
.L108:
	.word	sCheckPageOverrides
.Lfe22:
	.size	 MatchCall_HasCheckPage,.Lfe22-MatchCall_HasCheckPage
	.align	2, 0
	.type	 MatchCall_HasCheckPage_NPC,function
	.thumb_func
MatchCall_HasCheckPage_NPC:
	mov	r0, #0x0
	bx	lr
.Lfe23:
	.size	 MatchCall_HasCheckPage_NPC,.Lfe23-MatchCall_HasCheckPage_NPC
	.align	2, 0
	.type	 MatchCall_HasCheckPage_Trainer,function
	.thumb_func
MatchCall_HasCheckPage_Trainer:
	mov	r0, #0x1
	bx	lr
.Lfe24:
	.size	 MatchCall_HasCheckPage_Trainer,.Lfe24-MatchCall_HasCheckPage_Trainer
	.align	2, 0
	.type	 MatchCall_HasCheckPage_Wally,function
	.thumb_func
MatchCall_HasCheckPage_Wally:
	mov	r0, #0x1
	bx	lr
.Lfe25:
	.size	 MatchCall_HasCheckPage_Wally,.Lfe25-MatchCall_HasCheckPage_Wally
	.align	2, 0
	.type	 MatchCall_HasCheckPage_Rival,function
	.thumb_func
MatchCall_HasCheckPage_Rival:
	mov	r0, #0x0
	bx	lr
.Lfe26:
	.size	 MatchCall_HasCheckPage_Rival,.Lfe26-MatchCall_HasCheckPage_Rival
	.align	2, 0
	.type	 MatchCall_HasCheckPage_Birch,function
	.thumb_func
MatchCall_HasCheckPage_Birch:
	mov	r0, #0x0
	bx	lr
.Lfe27:
	.size	 MatchCall_HasCheckPage_Birch,.Lfe27-MatchCall_HasCheckPage_Birch
	.align	2, 0
	.globl	MatchCall_GetRematchTableIdx
	.type	 MatchCall_GetRematchTableIdx,function
	.thumb_func
MatchCall_GetRematchTableIdx:
	push	{r4, lr}
	cmp	r0, #0x14
	bhi	.L116	@cond_branch
	ldr	r1, .L118
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r4, #0
	bl	MatchCallGetFunctionIndex
	ldr	r1, .L118+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L117
.L119:
	.align	2, 0
.L118:
	.word	sMatchCallHeaders
	.word	sMatchCall_GetRematchTableIdxFunctions
.L116:
	mov	r0, #0x4e
.L117:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 MatchCall_GetRematchTableIdx,.Lfe28-MatchCall_GetRematchTableIdx
	.align	2, 0
	.type	 MatchCall_GetRematchTableIdx_NPC,function
	.thumb_func
MatchCall_GetRematchTableIdx_NPC:
	mov	r0, #0x4e
	bx	lr
.Lfe29:
	.size	 MatchCall_GetRematchTableIdx_NPC,.Lfe29-MatchCall_GetRematchTableIdx_NPC
	.align	2, 0
	.type	 MatchCall_GetRematchTableIdx_Trainer,function
	.thumb_func
MatchCall_GetRematchTableIdx_Trainer:
	ldrh	r0, [r0, #0x4]
	bx	lr
.Lfe30:
	.size	 MatchCall_GetRematchTableIdx_Trainer,.Lfe30-MatchCall_GetRematchTableIdx_Trainer
	.align	2, 0
	.type	 MatchCall_GetRematchTableIdx_Wally,function
	.thumb_func
MatchCall_GetRematchTableIdx_Wally:
	ldrh	r0, [r0, #0x4]
	bx	lr
.Lfe31:
	.size	 MatchCall_GetRematchTableIdx_Wally,.Lfe31-MatchCall_GetRematchTableIdx_Wally
	.align	2, 0
	.type	 MatchCall_GetRematchTableIdx_Rival,function
	.thumb_func
MatchCall_GetRematchTableIdx_Rival:
	mov	r0, #0x4e
	bx	lr
.Lfe32:
	.size	 MatchCall_GetRematchTableIdx_Rival,.Lfe32-MatchCall_GetRematchTableIdx_Rival
	.align	2, 0
	.type	 MatchCall_GetRematchTableIdx_Birch,function
	.thumb_func
MatchCall_GetRematchTableIdx_Birch:
	mov	r0, #0x4e
	bx	lr
.Lfe33:
	.size	 MatchCall_GetRematchTableIdx_Birch,.Lfe33-MatchCall_GetRematchTableIdx_Birch
	.align	2, 0
	.globl	MatchCall_GetMessage
	.type	 MatchCall_GetMessage,function
	.thumb_func
MatchCall_GetMessage:
	push	{r4, r5, lr}
	add	r5, r1, #0
	cmp	r0, #0x14
	bhi	.L125	@cond_branch
	ldr	r1, .L127
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r4, #0
	bl	MatchCallGetFunctionIndex
	ldr	r1, .L127+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	_call_via_r2
.L125:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	sMatchCallHeaders
	.word	sMatchCall_GetMessageFunctions
.Lfe34:
	.size	 MatchCall_GetMessage,.Lfe34-MatchCall_GetMessage
	.align	2, 0
	.type	 MatchCall_GetMessage_NPC,function
	.thumb_func
MatchCall_GetMessage_NPC:
	push	{lr}
	ldr	r0, [r0, #0xc]
	bl	MatchCall_BufferCallMessageText
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 MatchCall_GetMessage_NPC,.Lfe35-MatchCall_GetMessage_NPC
	.align	2, 0
	.type	 MatchCall_GetMessage_Trainer,function
	.thumb_func
MatchCall_GetMessage_Trainer:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldrb	r0, [r3]
	cmp	r0, #0x5
	beq	.L131	@cond_branch
	ldr	r0, [r3, #0x10]
	bl	MatchCall_BufferCallMessageText
	b	.L132
.L131:
	ldr	r0, [r3, #0x10]
	ldrh	r1, [r3, #0x4]
	bl	MatchCall_BufferCallMessageTextByRematchTeam
.L132:
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 MatchCall_GetMessage_Trainer,.Lfe36-MatchCall_GetMessage_Trainer
	.align	2, 0
	.type	 MatchCall_GetMessage_Wally,function
	.thumb_func
MatchCall_GetMessage_Wally:
	push	{lr}
	ldr	r0, [r0, #0xc]
	bl	MatchCall_BufferCallMessageText
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 MatchCall_GetMessage_Wally,.Lfe37-MatchCall_GetMessage_Wally
	.align	2, 0
	.type	 MatchCall_GetMessage_Rival,function
	.thumb_func
MatchCall_GetMessage_Rival:
	push	{lr}
	ldr	r0, [r0, #0xc]
	bl	MatchCall_BufferCallMessageText
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 MatchCall_GetMessage_Rival,.Lfe38-MatchCall_GetMessage_Rival
	.align	2, 0
	.type	 MatchCall_GetMessage_Birch,function
	.thumb_func
MatchCall_GetMessage_Birch:
	push	{lr}
	add	r0, r1, #0
	bl	BufferPokedexRatingForMatchCall
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 MatchCall_GetMessage_Birch,.Lfe39-MatchCall_GetMessage_Birch
	.align	2, 0
	.type	 MatchCall_BufferCallMessageText,function
	.thumb_func
MatchCall_BufferCallMessageText:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r6, r0, #0
	mov	r9, r1
	mov	r5, #0x0
	ldr	r0, [r6]
	cmp	r0, #0
	beq	.L138	@cond_branch
	add	r1, r6, #0
.L139:
	add	r1, r1, #0x8
	add	r5, r5, #0x1
	ldr	r0, [r1]
	cmp	r0, #0
	bne	.L139	@cond_branch
.L138:
	cmp	r5, #0
	beq	.L142	@cond_branch
	sub	r5, r5, #0x1
.L142:
	ldr	r0, .L149
	mov	r8, r0
	lsl	r0, r5, #0x3
	add	r0, r0, #0x4
	add	r4, r0, r6
	b	.L143
.L150:
	.align	2, 0
.L149:
	.word	0xffff
.L146:
	sub	r4, r4, #0x8
	sub	r5, r5, #0x1
.L143:
	lsl	r7, r5, #0x3
	cmp	r5, #0
	beq	.L144	@cond_branch
	ldrh	r0, [r4]
	cmp	r0, r8
	beq	.L146	@cond_branch
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L146	@cond_branch
.L144:
	add	r4, r7, r6
	ldrh	r1, [r4, #0x6]
	ldr	r0, .L151
	cmp	r1, r0
	beq	.L148	@cond_branch
	add	r0, r1, #0
	bl	FlagSet
.L148:
	ldr	r1, [r4]
	mov	r0, r9
	bl	StringExpandPlaceholders
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L152:
	.align	2, 0
.L151:
	.word	0xffff
.Lfe40:
	.size	 MatchCall_BufferCallMessageText,.Lfe40-MatchCall_BufferCallMessageText
	.align	2, 0
	.type	 MatchCall_BufferCallMessageTextByRematchTeam,function
	.thumb_func
MatchCall_BufferCallMessageTextByRematchTeam:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r6, r0, #0
	mov	sl, r2
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	mov	r5, #0x0
	ldr	r0, [r6]
	cmp	r0, #0
	beq	.L155	@cond_branch
	ldrh	r0, [r6, #0x4]
	ldr	r1, .L177
	cmp	r0, r1
	beq	.L161	@cond_branch
	ldr	r0, .L177+0x4
	mov	r9, r0
	mov	r8, r1
	add	r4, r6, #0
.L158:
	ldrh	r0, [r4, #0x4]
	cmp	r0, r9
	beq	.L156	@cond_branch
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L155	@cond_branch
.L156:
	add	r4, r4, #0x8
	add	r5, r5, #0x1
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L155	@cond_branch
	ldrh	r0, [r4, #0x4]
	cmp	r0, r8
	bne	.L158	@cond_branch
.L155:
	lsl	r0, r5, #0x3
	add	r0, r0, r6
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L177
	cmp	r1, r0
	beq	.L161	@cond_branch
	cmp	r5, #0
	beq	.L162	@cond_branch
	sub	r5, r5, #0x1
.L162:
	lsl	r0, r5, #0x3
	add	r4, r0, r6
	ldrh	r1, [r4, #0x6]
	ldr	r0, .L177+0x4
	cmp	r1, r0
	beq	.L163	@cond_branch
	add	r0, r1, #0
	bl	FlagSet
.L163:
	ldr	r1, [r4]
	mov	r0, sl
	bl	StringExpandPlaceholders
	b	.L164
.L178:
	.align	2, 0
.L177:
	.word	0xfffe
	.word	0xffff
.L175:
	add	r5, r5, #0x2
	b	.L165
.L176:
	add	r5, r5, #0x3
	b	.L165
.L161:
	ldr	r0, .L179
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L165	@cond_branch
	ldr	r0, .L179+0x4
	ldr	r0, [r0]
	ldr	r1, .L179+0x8
	add	r0, r0, r1
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L175	@cond_branch
	add	r0, r7, #0
	bl	CountBattledRematchTeams
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L176	@cond_branch
	add	r5, r5, #0x1
.L165:
	lsl	r0, r5, #0x3
	add	r0, r0, r6
	ldr	r1, [r0]
	mov	r0, sl
	bl	StringExpandPlaceholders
.L164:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L180:
	.align	2, 0
.L179:
	.word	0x864
	.word	gSaveBlock1Ptr
	.word	0xfaa
.Lfe41:
	.size	 MatchCall_BufferCallMessageTextByRematchTeam,.Lfe41-MatchCall_BufferCallMessageTextByRematchTeam
	.align	2, 0
	.globl	MatchCall_GetNameAndDesc
	.type	 MatchCall_GetNameAndDesc,function
	.thumb_func
MatchCall_GetNameAndDesc:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	add	r6, r2, #0
	cmp	r0, #0x14
	bhi	.L181	@cond_branch
	ldr	r1, .L183
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	add	r0, r4, #0
	bl	MatchCallGetFunctionIndex
	ldr	r1, .L183+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r3, [r0]
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	bl	_call_via_r3
.L181:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	sMatchCallHeaders
	.word	sMatchCall_GetNameAndDescFunctions
.Lfe42:
	.size	 MatchCall_GetNameAndDesc,.Lfe42-MatchCall_GetNameAndDesc
	.align	2, 0
	.type	 MatchCall_GetNameAndDesc_NPC,function
	.thumb_func
MatchCall_GetNameAndDesc_NPC:
	ldr	r3, [r0, #0x4]
	str	r3, [r1]
	ldr	r0, [r0, #0x8]
	str	r0, [r2]
	bx	lr
.Lfe43:
	.size	 MatchCall_GetNameAndDesc_NPC,.Lfe43-MatchCall_GetNameAndDesc_NPC
	.align	2, 0
	.type	 MatchCall_GetNameAndDesc_Trainer,function
	.thumb_func
MatchCall_GetNameAndDesc_Trainer:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r0, #0
	ldr	r0, [r4, #0xc]
	cmp	r0, #0
	bne	.L187	@cond_branch
	ldrh	r0, [r4, #0x4]
	bl	MatchCall_GetNameAndDescByRematchIdx
	b	.L188
.L187:
	str	r0, [r2]
.L188:
	ldr	r0, [r4, #0x8]
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 MatchCall_GetNameAndDesc_Trainer,.Lfe44-MatchCall_GetNameAndDesc_Trainer
	.align	2, 0
	.type	 MatchCall_GetNameAndDesc_Wally,function
	.thumb_func
MatchCall_GetNameAndDesc_Wally:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrh	r0, [r4, #0x4]
	bl	MatchCall_GetNameAndDescByRematchIdx
	ldr	r0, [r4, #0x8]
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 MatchCall_GetNameAndDesc_Wally,.Lfe45-MatchCall_GetNameAndDesc_Wally
	.align	2, 0
	.type	 MatchCall_GetNameAndDesc_Rival,function
	.thumb_func
MatchCall_GetNameAndDesc_Rival:
	ldr	r3, [r0, #0x4]
	str	r3, [r1]
	ldr	r0, [r0, #0x8]
	str	r0, [r2]
	bx	lr
.Lfe46:
	.size	 MatchCall_GetNameAndDesc_Rival,.Lfe46-MatchCall_GetNameAndDesc_Rival
	.align	2, 0
	.type	 MatchCall_GetNameAndDesc_Birch,function
	.thumb_func
MatchCall_GetNameAndDesc_Birch:
	ldr	r3, [r0, #0x4]
	str	r3, [r1]
	ldr	r0, [r0, #0x8]
	str	r0, [r2]
	bx	lr
.Lfe47:
	.size	 MatchCall_GetNameAndDesc_Birch,.Lfe47-MatchCall_GetNameAndDesc_Birch
	.align	2, 0
	.type	 MatchCall_GetNameAndDescByRematchIdx,function
	.thumb_func
MatchCall_GetNameAndDescByRematchIdx:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	bl	GetTrainerIdxByRematchIdx
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L193
	add	r1, r1, r0
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	mul	r0, r0, r2
	ldr	r2, .L193+0x4
	add	r0, r0, r2
	str	r0, [r4]
	add	r1, r1, #0x4
	str	r1, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L194:
	.align	2, 0
.L193:
	.word	gTrainers
	.word	gTrainerClassNames
.Lfe48:
	.size	 MatchCall_GetNameAndDescByRematchIdx,.Lfe48-MatchCall_GetNameAndDescByRematchIdx
	.align	2, 0
	.globl	MatchCall_GetOverrideFlavorText
	.type	 MatchCall_GetOverrideFlavorText,function
	.thumb_func
MatchCall_GetOverrideFlavorText:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r6, r0, #0
	mov	r5, #0x0
	ldr	r2, .L210
	mov	r0, #0x8
	add	r0, r0, r2
	mov	r9, r0
.L199:
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrh	r0, [r0]
	cmp	r0, r6
	bne	.L198	@cond_branch
	add	r4, r5, #0x1
	lsl	r1, r1, #0x2
	mov	r8, r1
	cmp	r4, #0x3
	bhi	.L202	@cond_branch
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrh	r0, [r0]
	cmp	r0, r6
	bne	.L202	@cond_branch
	ldr	r7, .L210
.L205:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r7, #0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L202	@cond_branch
	add	r5, r4, #0
	add	r4, r5, #0x1
	cmp	r4, #0x3
	bhi	.L202	@cond_branch
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r7
	ldrh	r0, [r0]
	cmp	r0, r6
	beq	.L205	@cond_branch
.L202:
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	add	r0, r0, r9
	ldr	r0, [r0]
	b	.L209
.L211:
	.align	2, 0
.L210:
	.word	sCheckPageOverrides
.L198:
	add	r5, r5, #0x1
	cmp	r5, #0x3
	bls	.L199	@cond_branch
	mov	r0, #0x0
.L209:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 MatchCall_GetOverrideFlavorText,.Lfe49-MatchCall_GetOverrideFlavorText
	.align	2, 0
	.globl	MatchCall_GetOverrideFacilityClass
	.type	 MatchCall_GetOverrideFacilityClass,function
	.thumb_func
MatchCall_GetOverrideFacilityClass:
	push	{lr}
	add	r3, r0, #0
	mov	r2, #0x0
	ldr	r1, .L220
.L216:
	ldrh	r0, [r1]
	cmp	r0, r3
	bne	.L215	@cond_branch
	ldrh	r0, [r1, #0x2]
	b	.L219
.L221:
	.align	2, 0
.L220:
	.word	sCheckPageOverrides
.L215:
	add	r1, r1, #0x18
	add	r2, r2, #0x1
	cmp	r2, #0x3
	bls	.L216	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L219:
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 MatchCall_GetOverrideFacilityClass,.Lfe50-MatchCall_GetOverrideFacilityClass
	.align	2, 0
	.globl	MatchCall_HasRematchId
	.type	 MatchCall_HasRematchId,function
	.thumb_func
MatchCall_HasRematchId:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r4, #0x0
.L226:
	add	r0, r4, #0
	bl	MatchCall_GetRematchTableIdx
	cmp	r0, #0x4e
	beq	.L225	@cond_branch
	cmp	r0, r5
	bne	.L225	@cond_branch
	mov	r0, #0x1
	b	.L229
.L225:
	add	r4, r4, #0x1
	cmp	r4, #0x14
	ble	.L226	@cond_branch
	mov	r0, #0x0
.L229:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 MatchCall_HasRematchId,.Lfe51-MatchCall_HasRematchId
	.align	2, 0
	.globl	SetMatchCallRegisteredFlag
	.type	 SetMatchCallRegisteredFlag,function
	.thumb_func
SetMatchCallRegisteredFlag:
	push	{lr}
	ldr	r0, .L232
	ldrh	r0, [r0]
	bl	GetRematchIdxByTrainerIdx
	cmp	r0, #0
	blt	.L231	@cond_branch
	mov	r1, #0xae
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
.L231:
	pop	{r0}
	bx	r0
.L233:
	.align	2, 0
.L232:
	.word	gSpecialVar_0x8004
.Lfe52:
	.size	 SetMatchCallRegisteredFlag,.Lfe52-SetMatchCallRegisteredFlag
.text
	.align	2, 0

