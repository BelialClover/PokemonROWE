@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gRecordsWindowId
	.section ewram_data,"aw"
	.type	 gRecordsWindowId,object
	.size	 gRecordsWindowId,1
gRecordsWindowId:
	.byte	0x0
	.align	2, 0
	.type	 sTilemapBuffer,object
	.size	 sTilemapBuffer,4
sTilemapBuffer:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sTrainerHillWindowTileset,object
sTrainerHillWindowTileset:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x11111111
	.word	0x11111111
	.word	0x22226111
	.word	0x33332611
	.word	0x33333211
	.word	0x22333211
	.word	0x62233211
	.word	-0x79dccdef
	.word	0x11111111
	.word	0x11111111
	.word	0x22222222
	.word	0x33333333
	.word	0x33333333
	.word	0x22222222
	.word	0x66666666
	.word	0x77777777
	.word	0x76233211
	.word	0x76233211
	.word	0x76233211
	.word	0x76233211
	.word	0x76233211
	.word	0x76233211
	.word	0x76233211
	.word	0x76233211
	.word	0x55555555
	.word	0x44444444
	.word	0x44444444
	.word	0x55555555
	.word	0x55555555
	.word	0x44444444
	.word	0x44444444
	.word	0x55555555
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.size	 sTrainerHillWindowTileset,192
	.align	1, 0
	.type	 sTrainerHillWindowPalette,object
sTrainerHillWindowPalette:
	.short	0x530e
	.short	0x2529
	.short	0x4e17
	.short	0x6a7c
	.short	0x7fbb
	.short	0x7fdc
	.short	0x45d2
	.short	0x6f58
	.short	0x5e95
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sTrainerHillWindowPalette,32
	.align	2, 0
	.type	 sTrainerHillWindowTilemap,object
sTrainerHillWindowTilemap:
	.word	0x20001
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x20002
	.word	0x4010002
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x40003
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x40004
	.word	0x4030004
	.word	0x0
	.word	0x8020801
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0x8020802
	.word	0xc010802
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.size	 sTrainerHillWindowTilemap,2048
	.align	2, 0
	.type	 sTrainerHillRecordsBgTemplates,object
	.size	 sTrainerHillRecordsBgTemplates,8
sTrainerHillRecordsBgTemplates:
	.byte	0xf0
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe7
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sTrainerHillRecordsWindowTemplates,object
sTrainerHillRecordsWindowTemplates:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x1a
	.byte	0x12
	.byte	0xf
	.short	0x14
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sTrainerHillRecordsWindowTemplates,16
	.align	2, 0
	.type	 sLinkBattleRecordsWindow,object
	.size	 sLinkBattleRecordsWindow,8
sLinkBattleRecordsWindow:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x1a
	.byte	0x11
	.byte	0xf
	.short	0x1
	.type	 sText_DashesNoPlayer,object
sText_DashesNoPlayer:
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xff
	.size	 sText_DashesNoPlayer,8
	.type	 sText_DashesNoScore,object
sText_DashesNoScore:
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xae
	.byte	0xff
	.size	 sText_DashesNoScore,5
.text
	.align	2, 0
	.type	 ClearLinkBattleRecord,function
	.thumb_func
ClearLinkBattleRecord:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r2, .L3
	mov	r0, sp
	add	r1, r4, #0
	bl	CpuSet
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r4, #0x8]
	strh	r0, [r4, #0xa]
	strh	r0, [r4, #0xc]
	strh	r0, [r4, #0xe]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x1000008
.Lfe1:
	.size	 ClearLinkBattleRecord,.Lfe1-ClearLinkBattleRecord
	.align	2, 0
	.type	 ClearLinkBattleRecords,function
	.thumb_func
ClearLinkBattleRecords:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r5, #0x4
.L9:
	add	r0, r4, #0
	bl	ClearLinkBattleRecord
	add	r4, r4, #0x10
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L9	@cond_branch
	mov	r0, #0x17
	mov	r1, #0x0
	bl	SetGameStat
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGameStat
	mov	r0, #0x19
	mov	r1, #0x0
	bl	SetGameStat
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 ClearLinkBattleRecords,.Lfe2-ClearLinkBattleRecords
	.align	2, 0
	.type	 GetLinkBattleRecordTotalBattles,function
	.thumb_func
GetLinkBattleRecordTotalBattles:
	add	r1, r0, #0
	ldrh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xc]
	add	r0, r0, r2
	ldrh	r1, [r1, #0xe]
	add	r0, r0, r1
	bx	lr
.Lfe3:
	.size	 GetLinkBattleRecordTotalBattles,.Lfe3-GetLinkBattleRecordTotalBattles
	.align	2, 0
	.type	 FindLinkBattleRecord,function
	.thumb_func
FindLinkBattleRecord:
	push	{r4, r5, r6, r7, lr}
	add	r7, r1, #0
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	mov	r5, #0x0
	add	r4, r0, #0
.L16:
	add	r0, r4, #0
	add	r1, r7, #0
	mov	r2, #0x7
	bl	StringCompareN
	cmp	r0, #0
	bne	.L15	@cond_branch
	ldrh	r0, [r4, #0x8]
	cmp	r0, r6
	bne	.L15	@cond_branch
	add	r0, r5, #0
	b	.L19
.L15:
	add	r4, r4, #0x10
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L16	@cond_branch
	mov	r0, #0x5
.L19:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 FindLinkBattleRecord,.Lfe4-FindLinkBattleRecord
	.align	2, 0
	.type	 SortLinkBattleRecords,function
	.thumb_func
SortLinkBattleRecords:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x18
	mov	sl, r0
	mov	r1, #0x4
.L24:
	sub	r3, r1, #0x1
	add	r6, r3, #0
	cmp	r3, #0
	blt	.L23	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, sl
	str	r0, [sp, #0x14]
	lsl	r0, r3, #0x4
	mov	r2, sl
	add	r5, r0, r2
	mov	r4, #0x50
	add	r4, r4, sl
	mov	r9, r4
	add	r1, r1, r9
	mov	r8, r1
.L28:
	ldr	r0, [sp, #0x14]
	str	r3, [sp, #0x10]
	bl	GetLinkBattleRecordTotalBattles
	add	r4, r0, #0
	add	r0, r5, #0
	bl	GetLinkBattleRecordTotalBattles
	ldr	r3, [sp, #0x10]
	cmp	r4, r0
	ble	.L27	@cond_branch
	mov	r1, sp
	ldr	r0, [sp, #0x14]
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r1, [sp, #0x14]
	add	r0, r5, #0
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r1, r5, #0
	mov	r0, sp
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	mov	r7, r8
	ldrb	r2, [r7]
	mov	r0, r9
	add	r1, r0, r6
	ldrb	r0, [r1]
	strb	r0, [r7]
	strb	r2, [r1]
.L27:
	sub	r5, r5, #0x10
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L28	@cond_branch
.L23:
	add	r1, r3, #0
	cmp	r1, #0
	bgt	.L24	@cond_branch
	add	sp, sp, #0x18
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 SortLinkBattleRecords,.Lfe5-SortLinkBattleRecords
	.align	2, 0
	.type	 UpdateLinkBattleRecord,function
	.thumb_func
UpdateLinkBattleRecord:
	push	{lr}
	add	r2, r0, #0
	cmp	r1, #0x2
	beq	.L36	@cond_branch
	cmp	r1, #0x2
	bgt	.L42	@cond_branch
	cmp	r1, #0x1
	beq	.L34	@cond_branch
	b	.L33
.L42:
	cmp	r1, #0x3
	beq	.L38	@cond_branch
	b	.L33
.L34:
	ldrh	r0, [r2, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xa]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L43
	cmp	r0, r1
	bls	.L33	@cond_branch
	strh	r1, [r2, #0xa]
	b	.L33
.L44:
	.align	2, 0
.L43:
	.word	0x270f
.L36:
	ldrh	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L45
	cmp	r0, r1
	bls	.L33	@cond_branch
	strh	r1, [r2, #0xc]
	b	.L33
.L46:
	.align	2, 0
.L45:
	.word	0x270f
.L38:
	ldrh	r0, [r2, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L47
	cmp	r0, r1
	bls	.L33	@cond_branch
	strh	r1, [r2, #0xe]
.L33:
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	0x270f
.Lfe6:
	.size	 UpdateLinkBattleRecord,.Lfe6-UpdateLinkBattleRecord
	.align	2, 0
	.type	 UpdateLinkBattleGameStats,function
	.thumb_func
UpdateLinkBattleGameStats:
	push	{r4, lr}
	cmp	r0, #0x2
	beq	.L52	@cond_branch
	cmp	r0, #0x2
	bgt	.L56	@cond_branch
	cmp	r0, #0x1
	beq	.L51	@cond_branch
	b	.L49
.L56:
	cmp	r0, #0x3
	beq	.L53	@cond_branch
	b	.L49
.L51:
	mov	r4, #0x17
	b	.L50
.L52:
	mov	r4, #0x18
	b	.L50
.L53:
	mov	r4, #0x19
.L50:
	add	r0, r4, #0
	bl	GetGameStat
	ldr	r1, .L58
	cmp	r0, r1
	bhi	.L49	@cond_branch
	add	r0, r4, #0
	bl	IncrementGameStat
.L49:
	pop	{r4}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	0x270e
.Lfe7:
	.size	 UpdateLinkBattleGameStats,.Lfe7-UpdateLinkBattleGameStats
	.align	2, 0
	.type	 UpdateLinkBattleRecords,function
	.thumb_func
UpdateLinkBattleRecords:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r6, r0, #0
	mov	r8, r1
	mov	sl, r3
	ldr	r0, [sp, #0x20]
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r0, sl
	bl	UpdateLinkBattleGameStats
	add	r0, r6, #0
	bl	SortLinkBattleRecords
	add	r0, r6, #0
	mov	r1, r8
	add	r2, r7, #0
	bl	FindLinkBattleRecord
	add	r5, r0, #0
	cmp	r5, #0x5
	bne	.L61	@cond_branch
	mov	r5, #0x4
	add	r4, r6, #0
	add	r4, r4, #0x40
	add	r0, r4, #0
	bl	ClearLinkBattleRecord
	add	r0, r4, #0
	mov	r1, r8
	mov	r2, #0x7
	bl	StringCopyN
	strh	r7, [r4, #0x8]
	add	r2, r6, #0
	add	r2, r2, #0x54
	ldr	r1, .L62
	mov	r3, r9
	lsl	r0, r3, #0x3
	sub	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0, #0x1a]
	strb	r0, [r2]
.L61:
	lsl	r0, r5, #0x4
	add	r0, r6, r0
	mov	r1, sl
	bl	UpdateLinkBattleRecord
	add	r0, r6, #0
	bl	SortLinkBattleRecords
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	gLinkPlayers
.Lfe8:
	.size	 UpdateLinkBattleRecords,.Lfe8-UpdateLinkBattleRecords
	.align	2, 0
	.globl	ClearPlayerLinkBattleRecords
	.type	 ClearPlayerLinkBattleRecords,function
	.thumb_func
ClearPlayerLinkBattleRecords:
	push	{lr}
	ldr	r0, .L65
	ldr	r0, [r0]
	ldr	r1, .L65+0x4
	add	r0, r0, r1
	bl	ClearLinkBattleRecords
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	gSaveBlock1Ptr
	.word	0x2dd0
.Lfe9:
	.size	 ClearPlayerLinkBattleRecords,.Lfe9-ClearPlayerLinkBattleRecords
	.align	2, 0
	.type	 IncTrainerCardWins,function
	.thumb_func
IncTrainerCardWins:
	push	{lr}
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L69
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L69+0x4
	cmp	r0, r2
	bls	.L68	@cond_branch
	strh	r2, [r1]
.L68:
	pop	{r0}
	bx	r0
.L70:
	.align	2, 0
.L69:
	.word	gTrainerCards+0x14
	.word	0x270f
.Lfe10:
	.size	 IncTrainerCardWins,.Lfe10-IncTrainerCardWins
	.align	2, 0
	.type	 IncTrainerCardLosses,function
	.thumb_func
IncTrainerCardLosses:
	push	{lr}
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L73
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L73+0x4
	cmp	r0, r2
	bls	.L72	@cond_branch
	strh	r2, [r1]
.L72:
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	gTrainerCards+0x16
	.word	0x270f
.Lfe11:
	.size	 IncTrainerCardLosses,.Lfe11-IncTrainerCardLosses
	.align	2, 0
	.type	 UpdateTrainerCardWinsLosses,function
	.thumb_func
UpdateTrainerCardWinsLosses:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L81
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	cmp	r0, #0x2
	beq	.L78	@cond_branch
	b	.L76
.L82:
	.align	2, 0
.L81:
	.word	gBattleOutcome
.L77:
	eor	r0, r0, r4
	bl	IncTrainerCardWins
	add	r0, r4, #0
	bl	IncTrainerCardLosses
	b	.L76
.L78:
	mov	r0, #0x1
	eor	r0, r0, r4
	bl	IncTrainerCardLosses
	add	r0, r4, #0
	bl	IncTrainerCardWins
.L76:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 UpdateTrainerCardWinsLosses,.Lfe12-UpdateTrainerCardWinsLosses
	.align	2, 0
	.globl	UpdatePlayerLinkBattleRecords
	.type	 UpdatePlayerLinkBattleRecords,function
	.thumb_func
UpdatePlayerLinkBattleRecords:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	bl	InUnionRoom
	cmp	r0, #0x1
	beq	.L84	@cond_branch
	add	r0, r4, #0
	bl	UpdateTrainerCardWinsLosses
	ldr	r0, .L85
	ldr	r0, [r0]
	ldr	r1, .L85+0x4
	add	r0, r0, r1
	mov	r1, #0x64
	mov	r3, r4
	mul	r3, r3, r1
	ldr	r2, .L85+0x8
	add	r1, r3, r2
	sub	r2, r2, #0x30
	add	r3, r3, r2
	ldrh	r2, [r3, #0xe]
	ldr	r3, .L85+0xc
	ldrb	r3, [r3]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp]
	bl	UpdateLinkBattleRecords
.L84:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gSaveBlock1Ptr
	.word	0x2dd0
	.word	gTrainerCards+0x30
	.word	gBattleOutcome
.Lfe13:
	.size	 UpdatePlayerLinkBattleRecords,.Lfe13-UpdatePlayerLinkBattleRecords
	.align	2, 0
	.type	 PrintLinkBattleWinsLossesDraws,function
	.thumb_func
PrintLinkBattleWinsLossesDraws:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L88
	mov	r0, #0x17
	bl	GetGameStat
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L88+0x4
	mov	r0, #0x18
	bl	GetGameStat
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L88+0x8
	mov	r0, #0x19
	bl	GetGameStat
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L88+0xc
	ldr	r1, .L88+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0xd0
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	ldr	r0, .L88+0x14
	ldrb	r0, [r0]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x11
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_TotalRecordWLD
	.word	gRecordsWindowId
.Lfe14:
	.size	 PrintLinkBattleWinsLossesDraws,.Lfe14-PrintLinkBattleWinsLossesDraws
	.align	2, 0
	.type	 PrintLinkBattleRecord,function
	.thumb_func
PrintLinkBattleRecord:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	add	r5, r2, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldrh	r0, [r6, #0xa]
	cmp	r0, #0
	bne	.L91	@cond_branch
	ldr	r7, [r6, #0xc]
	cmp	r7, #0
	bne	.L91	@cond_branch
	ldr	r0, .L93
	mov	r8, r0
	ldrb	r0, [r0]
	ldr	r2, .L93+0x4
	lsl	r4, r4, #0x3
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp]
	str	r7, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
	mov	r1, r8
	ldrb	r0, [r1]
	ldr	r5, .L93+0x8
	str	r4, [sp]
	str	r7, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x50
	bl	AddTextPrinterParameterized
	mov	r1, r8
	ldrb	r0, [r1]
	str	r4, [sp]
	str	r7, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x80
	bl	AddTextPrinterParameterized
	mov	r1, r8
	ldrb	r0, [r1]
	str	r4, [sp]
	str	r7, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0xb0
	bl	AddTextPrinterParameterized
	b	.L92
.L94:
	.align	2, 0
.L93:
	.word	gRecordsWindowId
	.word	sText_DashesNoPlayer
	.word	sText_DashesNoScore
.L91:
	ldr	r0, .L95
	mov	r1, #0x8
	bl	StringFillWithTerminator
	ldr	r0, .L95
	add	r1, r6, #0
	mov	r2, #0x7
	bl	StringCopyN
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L95
	bl	ConvertInternationalString
	ldr	r0, .L95+0x4
	mov	r8, r0
	ldrb	r0, [r0]
	lsl	r4, r4, #0x3
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp]
	mov	r5, #0x0
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	ldr	r2, .L95
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
	ldrh	r1, [r6, #0xa]
	ldr	r0, .L95
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r1, r8
	ldrb	r0, [r1]
	str	r4, [sp]
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	ldr	r2, .L95
	mov	r3, #0x50
	bl	AddTextPrinterParameterized
	ldrh	r1, [r6, #0xc]
	ldr	r0, .L95
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r1, r8
	ldrb	r0, [r1]
	str	r4, [sp]
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	ldr	r2, .L95
	mov	r3, #0x80
	bl	AddTextPrinterParameterized
	ldrh	r1, [r6, #0xe]
	ldr	r0, .L95
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r1, r8
	ldrb	r0, [r1]
	str	r4, [sp]
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	ldr	r2, .L95
	mov	r3, #0xb0
	bl	AddTextPrinterParameterized
.L92:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L96:
	.align	2, 0
.L95:
	.word	gStringVar1
	.word	gRecordsWindowId
.Lfe15:
	.size	 PrintLinkBattleRecord,.Lfe15-PrintLinkBattleRecord
	.align	2, 0
	.globl	ShowLinkBattleRecords
	.type	 ShowLinkBattleRecords,function
	.thumb_func
ShowLinkBattleRecords:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	ldr	r6, .L103
	ldr	r0, .L103+0x4
	bl	AddWindow
	strb	r0, [r6]
	ldrb	r0, [r6]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r6]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r5, .L103+0x8
	ldr	r1, .L103+0xc
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0xd0
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	ldrb	r0, [r6]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	ldr	r0, .L103+0x10
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r1, .L103+0x14
	mov	r9, r1
	add	r0, r0, r9
	bl	PrintLinkBattleWinsLossesDraws
	ldr	r1, .L103+0x18
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r6]
	mov	r1, #0x29
	str	r1, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r7, r8
	mov	r6, #0xe0
	lsl	r6, r6, #0x13
	mov	r5, r9
.L101:
	ldr	r2, [r7]
	add	r0, r2, r5
	lsr	r1, r6, #0x18
	ldr	r3, .L103+0x1c
	add	r2, r2, r3
	add	r2, r2, r4
	ldrb	r2, [r2]
	bl	PrintLinkBattleRecord
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	add	r6, r6, r0
	add	r5, r5, #0x10
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L101	@cond_branch
	ldr	r4, .L103
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	gRecordsWindowId
	.word	sLinkBattleRecordsWindow
	.word	gStringVar4
	.word	gText_PlayersBattleResults
	.word	gSaveBlock1Ptr
	.word	0x2dd0
	.word	gText_WinLoseDraw
	.word	0x2e20
.Lfe16:
	.size	 ShowLinkBattleRecords,.Lfe16-ShowLinkBattleRecords
	.align	2, 0
	.globl	RemoveRecordsWindow
	.type	 RemoveRecordsWindow,function
	.thumb_func
RemoveRecordsWindow:
	push	{r4, lr}
	ldr	r4, .L106
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gRecordsWindowId
.Lfe17:
	.size	 RemoveRecordsWindow,.Lfe17-RemoveRecordsWindow
	.align	2, 0
	.type	 Task_TrainerHillWaitForPaletteFade,function
	.thumb_func
Task_TrainerHillWaitForPaletteFade:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L110
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L109	@cond_branch
	ldr	r0, .L110+0x4
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L110+0x8
	str	r0, [r1]
.L109:
	pop	{r0}
	bx	r0
.L111:
	.align	2, 0
.L110:
	.word	gPaletteFade
	.word	gTasks
	.word	Task_CloseTrainerHillRecordsOnButton
.Lfe18:
	.size	 Task_TrainerHillWaitForPaletteFade,.Lfe18-Task_TrainerHillWaitForPaletteFade
	.align	2, 0
	.type	 Task_CloseTrainerHillRecordsOnButton,function
	.thumb_func
Task_CloseTrainerHillRecordsOnButton:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L115
	add	r4, r1, r0
	ldr	r0, .L115+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L114	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L113	@cond_branch
.L114:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L115+0x8
	str	r0, [r4]
.L113:
	pop	{r4}
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	gTasks
	.word	gMain
	.word	Task_BeginPaletteFade
.Lfe19:
	.size	 Task_CloseTrainerHillRecordsOnButton,.Lfe19-Task_CloseTrainerHillRecordsOnButton
	.align	2, 0
	.type	 Task_BeginPaletteFade,function
	.thumb_func
Task_BeginPaletteFade:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L118
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L118+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L119:
	.align	2, 0
.L118:
	.word	gTasks
	.word	Task_ExitTrainerHillRecords
.Lfe20:
	.size	 Task_BeginPaletteFade,.Lfe20-Task_BeginPaletteFade
	.align	2, 0
	.type	 Task_ExitTrainerHillRecords,function
	.thumb_func
Task_ExitTrainerHillRecords:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L122
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L121	@cond_branch
	ldr	r0, .L122+0x4
	bl	SetMainCallback2
	ldr	r0, .L122+0x8
	ldr	r0, [r0]
	bl	Free
	mov	r0, #0x0
	bl	RemoveTrainerHillRecordsWindow
	bl	FreeAllWindowBuffers
	add	r0, r4, #0
	bl	DestroyTask
.L121:
	pop	{r4}
	pop	{r0}
	bx	r0
.L123:
	.align	2, 0
.L122:
	.word	gPaletteFade
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	sTilemapBuffer
.Lfe21:
	.size	 Task_ExitTrainerHillRecords,.Lfe21-Task_ExitTrainerHillRecords
	.align	2, 0
	.type	 RemoveTrainerHillRecordsWindow,function
	.thumb_func
RemoveTrainerHillRecordsWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0
	bl	ClearWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 RemoveTrainerHillRecordsWindow,.Lfe22-RemoveTrainerHillRecordsWindow
	.align	2, 0
	.type	 ClearVramOamPlttRegs,function
	.thumb_func
ClearVramOamPlttRegs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0x4
	mov	r8, r0
	mov	r2, sp
	mov	r6, #0x0
	ldr	r1, .L131
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L131+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L128:
	strh	r6, [r2]
	mov	r0, sp
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L128	@cond_branch
	strh	r6, [r2]
	mov	r2, sp
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r2, .L131
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	mov	r0, sp
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xc
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xe
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L132:
	.align	2, 0
.L131:
	.word	0x40000d4
	.word	-0x7efff800
.Lfe23:
	.size	 ClearVramOamPlttRegs,.Lfe23-ClearVramOamPlttRegs
	.align	2, 0
	.type	 ClearTasksAndGraphicalStructs,function
	.thumb_func
ClearTasksAndGraphicalStructs:
	push	{lr}
	bl	ScanlineEffect_Stop
	bl	ResetTasks
	bl	ResetSpriteData
	bl	ResetPaletteFade
	bl	FreeAllSpritePalettes
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 ClearTasksAndGraphicalStructs,.Lfe24-ClearTasksAndGraphicalStructs
	.align	2, 0
	.type	 ResetBgCoordinates,function
	.thumb_func
ResetBgCoordinates:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 ResetBgCoordinates,.Lfe25-ResetBgCoordinates
	.align	2, 0
	.type	 SetDispcntReg,function
	.thumb_func
SetDispcntReg:
	push	{lr}
	mov	r1, #0x94
	lsl	r1, r1, #0x4
	mov	r0, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 SetDispcntReg,.Lfe26-SetDispcntReg
	.align	2, 0
	.type	 LoadTrainerHillRecordsWindowGfx,function
	.thumb_func
LoadTrainerHillRecordsWindowGfx:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L137
	add	r0, r4, #0
	mov	r2, #0xc0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, .L137+0x4
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect
	ldr	r0, .L137+0x8
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L138:
	.align	2, 0
.L137:
	.word	sTrainerHillWindowTileset
	.word	sTrainerHillWindowTilemap
	.word	sTrainerHillWindowPalette
.Lfe27:
	.size	 LoadTrainerHillRecordsWindowGfx,.Lfe27-LoadTrainerHillRecordsWindowGfx
	.align	2, 0
	.type	 VblankCB_TrainerHillRecords,function
	.thumb_func
VblankCB_TrainerHillRecords:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 VblankCB_TrainerHillRecords,.Lfe28-VblankCB_TrainerHillRecords
	.align	2, 0
	.type	 MainCB2_TrainerHillRecords,function
	.thumb_func
MainCB2_TrainerHillRecords:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 MainCB2_TrainerHillRecords,.Lfe29-MainCB2_TrainerHillRecords
	.align	2, 0
	.globl	ShowTrainerHillRecords
	.type	 ShowTrainerHillRecords,function
	.thumb_func
ShowTrainerHillRecords:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L142
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L143:
	.align	2, 0
.L142:
	.word	CB2_ShowTrainerHillRecords
.Lfe30:
	.size	 ShowTrainerHillRecords,.Lfe30-ShowTrainerHillRecords
	.align	2, 0
	.type	 CB2_ShowTrainerHillRecords,function
	.thumb_func
CB2_ShowTrainerHillRecords:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L158
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bls	.LCB1562
	b	.L145	@long jump
.LCB1562:
	lsl	r0, r0, #0x2
	ldr	r1, .L158+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L159:
	.align	2, 0
.L158:
	.word	gMain
	.word	.L155
	.align	2, 0
	.align	2, 0
.L155:
	.word	.L146
	.word	.L147
	.word	.L148
	.word	.L149
	.word	.L150
	.word	.L152
	.word	.L153
	.word	.L154
.L146:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ClearVramOamPlttRegs
	b	.L157
.L147:
	bl	ClearTasksAndGraphicalStructs
	b	.L157
.L148:
	ldr	r4, .L160
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L160+0x4
	mov	r0, #0x0
	mov	r2, #0x2
	bl	InitBgsFromTemplates
	ldr	r1, [r4]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	bl	ResetBgCoordinates
	b	.L157
.L161:
	.align	2, 0
.L160:
	.word	sTilemapBuffer
	.word	sTrainerHillRecordsBgTemplates
.L149:
	mov	r0, #0x3
	bl	LoadTrainerHillRecordsWindowGfx
	mov	r0, #0x0
	bl	GetTextWindowPalette
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	b	.L157
.L150:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L145	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	b	.L157
.L152:
	ldr	r0, .L162
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	b	.L157
.L163:
	.align	2, 0
.L162:
	.word	sTrainerHillRecordsWindowTemplates
.L153:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L157:
	ldr	r1, .L164
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L145
.L165:
	.align	2, 0
.L164:
	.word	gMain
.L154:
	bl	SetDispcntReg
	ldr	r0, .L166
	bl	SetVBlankCallback
	bl	PrintOnTrainerHillRecordsWindow
	ldr	r0, .L166+0x4
	mov	r1, #0x8
	bl	CreateTask
	ldr	r0, .L166+0x8
	bl	SetMainCallback2
	ldr	r0, .L166+0xc
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L145:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	VblankCB_TrainerHillRecords
	.word	Task_TrainerHillWaitForPaletteFade
	.word	MainCB2_TrainerHillRecords
	.word	gMain
.Lfe31:
	.size	 CB2_ShowTrainerHillRecords,.Lfe31-CB2_ShowTrainerHillRecords
.text
	.align	2, 0

