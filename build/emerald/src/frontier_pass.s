@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sPassData,object
	.size	 sPassData,4
sPassData:
	.word	0x0
	.align	2, 0
	.type	 sPassGfx,object
	.size	 sPassGfx,4
sPassGfx:
	.word	0x0
	.align	2, 0
	.type	 sMapData,object
	.size	 sMapData,4
sMapData:
	.word	0x0
	.align	2, 0
	.type	 sSavedPassData,object
	.size	 sSavedPassData,8
sSavedPassData:
	.word	0x0
	.space	4
	.section .rodata
	.align	1, 0
	.type	 sMaleHeadPalette,object
sMaleHeadPalette:
	.short	0x530e
	.short	0x5b5f
	.short	0x4b1f
	.short	0x3a5b
	.short	0x210f
	.short	0x3d27
	.short	0x30e5
	.short	0x28a3
	.short	0x1c82
	.short	0x779b
	.short	0x3b2e
	.short	0x2a49
	.short	0x2d9f
	.short	0x2118
	.short	0x7fff
	.short	0x0
	.size	 sMaleHeadPalette,32
	.align	1, 0
	.type	 sFemaleHeadPalette,object
sFemaleHeadPalette:
	.short	0x530e
	.short	0x677f
	.short	0x4a9b
	.short	0x3a19
	.short	0x296f
	.short	0x398c
	.short	0x20e5
	.short	0x29b4
	.short	0x1cc9
	.short	0x6f39
	.short	0x234d
	.short	0x12a8
	.short	0x2d9f
	.short	0x2118
	.short	0x7fff
	.short	0x0
	.size	 sFemaleHeadPalette,32
	.align	2, 0
	.type	 gUnknown_0856FBBC,object
gUnknown_0856FBBC:
	.word	0x1c0010
	.word	-0xfffffcd
	.word	-0x11fe6fff
	.word	-0xffe0f12
	.word	0x1008b01
	.word	0x3011111e
	.word	0xb00e103
	.word	0x11610360
	.word	0x8101e50
	.word	0x1eeee111
	.word	0x50b21600
	.word	0xf001103
	.word	0x11111f70
	.word	-0x44eec300
	.word	0x30ee3510
	.word	0x60035016
	.word	0x310e11f
	.word	-0x5f00b390
	.word	0x201f101e
	.word	-0x7f74cfff
	.word	-0x5f61af7d
	.word	-0xe11f6a
	.word	0x5f20ba10
	.word	-0x6effa570
	.word	0xc00e190
	.word	0x41f01010
	.word	-0xf80cf07
	.word	-0x7f72ffc2
	.word	0x11f010df
	.word	-0xaaefe2
	.word	0x73000350
	.word	-0x409ff900
	.word	0x1a01e320
	.word	0x1f7003a0
	.word	0x114340ff
	.word	0x70018038
	.word	0x313c11df
	.word	-0x7f9c7ec0
	.word	0x1d70f05f
	.word	-0x24dfa010
	.word	0x1d110b00
	.word	-0x2e841112
	.word	0x3f200f90
	.word	0xd106510
	.word	0x810d1
	.word	0xf50ff21
	.word	-0x1cee12e0
	.word	0x711f3d1
	.word	-0x49ef65c0
	.word	0x50ff1410
	.word	-0x6ee5cfff
	.word	0x20f720bc
	.word	0x70d8b103
	.word	-0xfc2fc0
	.word	-0x270e7aaf
	.word	0x26120340
	.word	-0x520ec1c0
	.word	0x4c21eb31
	.word	-0x1f1cbe01
	.word	0x201b0062
	.word	-0x1fbe0fdd
	.word	-0xf1cbea0
	.word	0x2040bf03
	.word	0x104a001e
	.word	0x21106
	.word	0x20ff910c
	.word	-0x102e00c1
	.word	0x7120320
	.word	0x5c11ca42
	.word	0xa4203b0
	.word	0x30ff5310
	.word	0x2053939d
	.word	0x20dd406b
	.word	0x515ff040
	.word	-0x20f2ae09
	.word	0x15629700
	.word	0x205b211c
	.word	0x20fb423d
	.word	-0x40a9ef43
	.word	0x30c15d10
	.word	0x21e613fb
	.word	0x3101e002
	.word	-0x1f37dc38
	.word	-0x5c3c706d
	.word	-0x3311fe70
	.word	0x1cffcccc
	.word	0x10dddddd
	.word	-0x2ff4effd
	.word	0x3f77770f
	.word	0x27107777
	.word	0x1f00710
	.word	0x1ff00130
	.word	0xbd0170
	.word	0x4a00cc42
	.word	0xb100120
	.word	0x10fd0f40
	.word	0x6e40c562
	.word	0x11111f40
	.word	0x1fb740cc
	.word	0x50fd9f80
	.word	-0x2f460fe1
	.word	0x1023201f
	.word	-0xef7ebbe
	.word	-0x6f40e030
	.word	-0x207f2081
	.word	0x1ff151f0
	.word	0xf801ff1
	.word	-0x7e30bbec
	.word	0x4401d06f
	.word	-0x6ffe0fbc
	.word	-0xb000bff
	.word	0x7f85ffff
	.word	0x3307b52
	.word	0x7ff13400
	.word	0x7509bf1
	.word	0x70ff01f0
	.word	-0x7eecee21
	.word	-0xfd09e61
	.word	-0xf0c0eaf
	.word	-0xe08fff
	.word	0x2e412211
	.word	0xfa0ef51
	.word	0x6b102b50
	.word	-0x14aef8f0
	.word	-0x6fac2901
	.word	-0xfd4afe5
	.word	-0xefe0f29
	.word	-0x7ff04f41
	.word	0x3312ff2a
	.word	0x13006311
	.word	0x1ff1ff70
	.word	-0x2e0ee04f
	.word	-0x800fe50
	.word	-0xbfe4f2f
	.word	0xffb4ff
	.word	0x2413421f
	.word	-0x4005e81
	.word	0x79f11f10
	.word	0x1f0f7f1
	.word	0x411bb0
	.word	-0xfc0f59
	.word	0x1f100330
	.word	0x2436df52
	.word	0x73e153f4
	.word	-0xee080
	.word	0x400ff0df
	.word	0x5ff1fd0f
	.word	0x13149f71
	.word	0x10108310
	.word	-0x4f12cc01
	.word	-0x2efe2fe1
	.word	0x30fff1bf
	.word	-0x4f700ff1
	.word	0x3ff0fc0f
	.word	-0x2e0ef050
	.word	0x1f001f0
	.word	0x1111ff81
	.word	0x33312200
	.word	-0x42b755cd
	.word	0x46ff0dab
	.word	0x300accb
	.word	0x20db0750
	.word	0x12210007
	.word	-0x5555eede
	.word	-0xd75556
	.word	-0x50feff01
	.word	-0x22058900
	.word	-0x2220ff56
	.word	0x22afaffd
	.word	-0x20ff5002
	.word	0x13afffe2
	.word	-0x7bddedcf
	.word	-0x2255e0b0
	.word	0x400addd
	.word	-0x5ff5503
	.word	-0x5552221
	.word	0x1aaa22ef
	.word	-0x5fd10006
	.word	-0x5feffc1
	.word	0x1dd0300
	.word	-0x524c0001
	.word	0x10b4ffff
	.word	0x31131907
	.word	0x203f6011
	.word	0x10afaf62
	.word	-0x2422df26
	.word	0x54118341
	.word	0xbb1145
	.word	-0x33341112
	.word	0x66bbf67f
	.word	-0x440910ea
	.word	0xaa5401
	.word	-0xbcefc9
	.word	0x3700dd60
	.word	-0x343494ef
	.word	0x1fbbbbbb
	.word	0x10cccbbb
	.word	0x104b9005
	.word	0x101f100b
	.word	-0x28de7fe9
	.word	-0x554bbbb3
	.word	0x2beeeea
	.word	-0x40770001
	.word	0x300bfff
	.word	-0x4255fe51
	.word	0x233267f2
	.word	0x600300fd
	.word	-0x2ff8bf05
	.word	0x33299903
	.word	0x28188862
	.word	0x7f06233
	.word	-0x4408f8d0
	.word	-0x843ff44
	.word	-0x8334334
	.word	0x440044dd
	.word	0x6666bdf7
	.word	0x40774df7
	.word	-0x42fcdf89
	.word	0x6bf7bb87
	.word	-0x4322fa49
	.word	0x2dbbbb
	.word	-0x35fd9286
	.word	0x66666d00
	.word	0x77676666
	.word	0x66672077
	.word	0x7776fb02
	.word	0x477ee7
	.word	0x11effeee
	.word	0x19121121
	.word	0x37430180
	.word	0x56333333
	.word	0x55005555
	.word	0x5dd35536
	.word	0xd55537
	.word	0x3546675d
	.word	0x3a34ee43
	.word	0x12213a00
	.word	0x12211121
	.word	0x115032
	.word	0x1e00331e
	.word	0x5ddd5555
	.word	0x36032080
	.word	0x4654ddd5
	.word	0x5454dd55
	.word	0x1121e00
	.word	0x1f302343
	.word	0x55025ee5
	.word	0x55e66e55
	.word	-0x11fcff1b
	.word	-0x1a999a00
	.word	0x2166666e
	.word	0x225511
	.word	0x3f10223f
	.word	0x653d0093
	.word	0x800310
	.word	0x55ee6524
	.word	0x5ee66545
	.word	0x51654522
	.word	-0x2334b919
	.word	0xddfb51
	.word	-0x522332ba
	.word	-0x22ccccba
	.word	0x47777604
	.word	-0x1cfe5053
	.word	0x1c0e4df
	.word	-0x20fcff6a
	.word	-0x50550012
	.word	-0x1110ff12
	.word	0x4444e2df
	.word	-0x71fcad51
	.word	-0x115d2078
	.word	0xe311ee
	.word	0x14e5903
	.word	0x79014ed8
	.word	-0x11018efd
	.word	0x2e05eb00
	.word	0x25e88888
	.word	0x12a0c00
	.word	0x18440e7
	.word	-0x528b55
	.word	0x2dd76af
	.word	-0x52989501
	.word	0x70076ff
	.word	0x750f476
	.word	0xe111211
	.word	0x760120
	.word	0x10c76603
	.word	0x67cccc
	.word	-0x666889fd
	.word	0x19870099
	.word	-0x7999ddbe
	.word	-0x283f797a
	.word	-0x66feef31
	.word	0x2ec99999
	.word	-0x6eddfdde
	.word	0x26886686
	.word	-0x372bea00
	.word	0x3203900
	.word	0x30067cc
	.word	-0x55db9994
	.word	0x770300
	.word	0x602cc03
	.word	-0x44fcff35
	.word	-0x4488fd5e
	.word	-0x42447500
	.word	-0x54fcff06
	.word	0x77cbff00
	.word	0x6cbdffb6
	.word	-0x2000df4a
	.word	-0x2d718bf
	.word	0x288267
	.word	-0x77777803
	.word	-0x6c668803
	.word	-0x2dd80300
	.word	-0x222442c3
	.word	-0x4244f503
	.word	-0x18ce0223
	.word	-0x7710fec8
	.word	-0x77779e00
	.word	-0x6ccc7778
	.word	-0x3c86ff6d
	.word	-0x40dd22cd
	.word	-0x42982201
	.word	-0x1cfe7efe
	.word	-0x18fe4299
	.word	-0x10eefcf0
	.word	0x300cb40
	.word	-0x48440834
	.word	0x6b00bbcc
	.word	0x76bbbcb7
	.word	0xebadb6
	.word	-0x131001ab
	.word	-0x439bb99a
	.word	0x1ee11f00
	.word	0x36633fbb
	.word	-0x10ff3d45
	.word	-0x252570ee
	.word	-0x14fd2526
	.word	-0x51aaff51
	.word	-0x51990526
	.word	-0xeff0051
	.word	-0xc052555
	.word	0x7ffafab
	.word	-0x525249a
	.word	0x700bb
	.word	0x274011e
	.word	0x5544ffdf
	.word	0x300545d
	.word	0x370a6e4
	.word	-0x22fcffb3
	.word	0x30064
	.word	-0x22cf2ae9
	.word	0x1e301ee
	.word	0x666e66ea
	.word	0x900f0e6
	.word	0x74010300
	.word	-0x19aaacef
	.word	-0x22ff1112
	.word	-0x19baab1b
	.word	0x26545ee
	.word	0x654eee66
	.word	0x300e666
	.word	0x654e0866
	.word	0x7106eee
	.word	0x6e6546
	.word	0x5e654443
	.word	-0x189aaaa3
	.word	-0x22b91200
	.word	-0x52b9111a
	.word	0x46f202f4
	.word	0x46f2fdad
	.word	0x465203
	.word	0x46affaad
	.word	0x66affada
	.word	-0x50059a00
	.word	-0x2d50888a
	.word	0x6285e28
	.word	-0x4cd77785
	.word	0x1005853
	.word	-0x7f5c9e00
	.word	-0x11c988ff
	.word	0x222d8282
	.word	-0x54cc0478
	.word	0x7b131f90
	.word	-0x18fe6cee
	.word	0x10e71166
	.word	0x60ff4503
	.word	0x4a667403
	.word	0x1734000
	.word	0x219800b0
	.word	0x68183bcb
	.word	0x1808bccb
	.word	0xcccc68
	.word	0x6818dd03
	.word	0x3adc20
	.word	0x48183303
	.word	0x1800533d
	.word	-0x177c52b8
	.word	0x12bb33
	.word	-0x794c2173
	.word	-0x78322773
	.word	-0x34c77d00
	.word	-0x3ccbab7a
	.word	0x38880187
	.word	0x585887ba
	.word	0x1ad01ba
	.word	0x6cc987ba
	.word	-0xf3e333a
	.word	0x360d403
	.word	0x30ffe301
	.word	0x300fb03
	.word	0x6c00bbbb
	.word	0x6cb67666
	.word	0x46b67777
	.word	-0x33e3ed44
	.word	-0x18fe8894
	.word	-0x37254900
	.word	0x2412bb20
	.word	0x700f3cb
	.word	0xdadbdb
	.word	0x3b677666
	.word	0x3677ee77
	.word	-0x4429ff5f
	.word	-0xfcf0
	.word	0x3506bbd
	.word	-0x42222300
	.word	0x6333336b
	.word	0x33330066
	.word	0x676b7773
	.word	0x7600ddb7
	.word	0x67adad76
	.word	-0x7f055249
	.word	-0x4882fa00
	.word	-0x288c0506
	.word	0x66dd00ad
	.word	0x6773fad6
	.word	0x7b21add7
	.word	-0x2018ee8a
	.word	0x10dfdfdf
	.word	-0x3ecd7fa1
	.word	-0x77787779
	.word	0x1172228
	.word	0x18fff111
	.word	0x11888282
	.word	0x1e40e0e7
	.word	0x62021f20
	.word	0x22222277
	.word	0xe00a688
	.word	-0x7df4ffef
	.word	0x10b00344
	.word	0x77147403
	.word	0x1e004777
	.word	0x463e0446
	.word	0x68880288
	.word	0x69111146
	.word	0x2680300
	.word	0x5ee5dd46
	.word	0x1204d5e5
	.word	0x310c055
	.word	0x57650110
	.word	0x54555574
	.word	0xd404540
	.word	0x5ddd3e55
	.word	0x88d565
	.word	0x54ddd303
	.word	0x65540700
	.word	0x300e654
	.word	0x3603a02
	.word	-0x5cee0006
	.word	-0x4fc536fe
	.word	0x7bf003
	.word	0x77a00461
	.word	0x1299777
	.word	-0x5e6d667
	.word	0xafff21
	.word	-0x5cccc5e3
	.word	0x7009b10
	.word	0x1349f10
	.word	0x220077b2
	.word	-0x888867
	.word	-0x6d6dd6e6
	.word	-0x2cc0e200
	.word	-0x5550e3ff
	.word	0x20af3f11
	.word	0x3f0133aa
	.word	-0x55b89
	.word	-0xb88ff99
	.word	-0xb988701
	.word	0x680199ff
	.word	-0x444200aa
	.word	0x3e0166bb
	.word	-0x555599f3
	.word	0x10f701bd
	.word	0x300bb03
	.word	-0x9892fe
	.word	0x27664ff
	.word	0x1808860b
	.word	0x18a3b48
	.word	0x681884eb
	.word	0x188aab00
	.word	0x18e4db68
	.word	-0x1544ff98
	.word	-0x723987e8
	.word	-0x39fd7ee8
	.word	-0x397ee673
	.word	-0x111cee23
	.word	0xb48e20
	.word	0x7787ba03
	.word	-0x78ff4b19
	.word	-0x78451819
	.word	0xba87e7
	.word	-0x4c771779
	.word	0x2da8e887
	.word	-0xc0e79c0
	.word	0x7cc17777
	.word	-0x6e9f8889
	.word	-0x54c6dffc
	.word	-0x33331b44
	.word	0x5e50dc
	.word	0x3006e03
	.word	-0x59888803
	.word	0x6777fd00
	.word	0x69996d36
	.word	0x11aa00a6
	.word	-0x11255997
	.word	-0x21ff1101
	.word	-0x1aa1001b
	.word	0x41664466
	.word	-0x209ff71a
	.word	-0x20cc99cd
	.word	-0x298765fe
	.word	-0x44ee64ed
	.word	-0xee14ff
	.word	0x1afafdd
	.word	-0x25250556
	.word	0x2afadad
	.word	0x710c0d7
	.word	-0x552520ee
	.word	-0x5245256
	.word	-0x22788c00
	.word	-0x5e88453
	.word	0x177405fa
	.word	0x3074adad
	.word	0x7003d07
	.word	0x17677400
	.word	0x177776ad
	.word	-0x7d7bf56f
	.word	0x3006988
	.word	0x54031068
	.word	0x68f6f602
	.word	0x30666654
	.word	0x55065507
	.word	0x44677768
	.word	0x350e311
	.word	-0x90bffbc
	.word	0x66684856
	.word	-0x7dfb7aa
	.word	0x550a16f6
	.word	0x77444454
	.word	-0x1cfe7bc0
	.word	0x46691874
	.word	0x69089764
	.word	0x20176466
	.word	0x17646703
	.word	0x74467900
	.word	0x67468197
	.word	0x46910297
	.word	0x74564555
	.word	-0x7c9afd00
	.word	0x36554e00
	.word	0x27d3d3d3
	.word	-0x3f787cc0
	.word	-0xcdae900
	.word	0x74444455
	.word	0x66006743
	.word	0x555cdf46
	.word	0xecbfa5
	.word	-0x3405192
	.word	-0x340509a
	.word	-0xe50bc00
	.word	0x23a2afff
	.word	-0x1a00ff01
	.word	-0xa11911c
	.word	0x20a13ff4
	.word	0x710f407
	.word	0x53333334
	.word	0x3f000a03
	.word	-0xd56
	.word	0xfff5ee
	.word	0x6ee5ff2f
	.word	0x3ff5eeee
	.word	0x302900d8
	.word	-0x23ecaaf9
	.word	-0x9875bee
	.word	-0x66ebff01
	.word	0x1174fff2
	.word	0x7421ff52
	.word	0x76070016
	.word	0x6073fff2
	.word	0xf94003
	.word	-0x7889df
	.word	0xa9999ff
	.word	0x1119ffff
	.word	0x910300
	.word	0xa01203
	.word	0xf30920f
	.word	-0x7eeecccd
	.word	0xdc40c6
	.word	-0x7eed2bfd
	.word	0x99d477
	.word	0x11348991
	.word	0x11678111
	.word	-0x676eeee8
	.word	0x6210bb11
	.word	0x76a888
	.word	-0x78822279
	.word	-0x66722267
	.word	-0x6222eee8
	.word	0x3505709
	.word	0x3211119a
	.word	0x3f003d3d
	.word	0x19212810
	.word	-0x71e6ce00
	.word	0x11114a07
	.word	0x500a0029
	.word	0x113f1001
	.word	-0x222996f0
	.word	0x77760330
	.word	0xa8f7911
	.word	-0x7777768d
	.word	-0x47dbe070
	.word	-0x13ff48ee
	.word	-0x49fd69
	.word	0x11070088
	.word	-0x30edfcc0
	.word	0x4d00d754
	.word	-0x31000cbc
	.word	0x24fffe6c
	.word	0x370ccce
	.word	-0x36ed1116
	.word	0x4f011998
	.word	0x6f111877
	.word	0x3001987
	.word	-0x70eeeeea
	.word	0x9fb900
	.word	0x3f03105b
	.word	0x785f0080
	.word	-0x66999499
	.word	-0x2bff4398
	.word	-0x523397ef
	.word	0xdd4811
	.word	-0x55b7ee56
	.word	-0x5297eecd
	.word	0x68118808
	.word	-0x3302ff44
	.word	0x6600476f
	.word	-0x4522899a
	.word	0xaa7bbc
	.word	-0x55893346
	.word	0x337cbdda
	.word	0x7cb33300
	.word	0x7cc88888
	.word	-0x300cffcd
	.word	-0x40955584
	.word	0x18f777c
	.word	-0x6ee6661d
	.word	0x3f0eb03
	.word	-0x146efcf0
	.word	-0xfe0f80
	.word	-0x24434001
	.word	-0x54ff4053
	.word	-0x4205553
	.word	0xdfaaaa
	.word	-0x40525245
	.word	-0x50555434
	.word	-0x525222f6
	.word	-0x3b1bfd9d
	.word	0x22462703
	.word	-0x8ff550d
	.word	0x6066ffee
	.word	0xe85503
	.word	0x10df0503
	.word	-0x4ed6abfd
	.word	0x45fff63
	.word	0x5fff74f6
	.word	-0x51fcff02
	.word	-0xebbd
	.word	0x655a5035
	.word	0x76e50300
	.word	0x67e701a0
	.word	0x77770300
	.word	-0x34bb0007
	.word	0x1c502301
	.word	0x3f005644
	.word	0x6370256
	.word	-0x6a0f7ff7
	.word	-0xd0001
	.word	0x142a465f
	.word	0xa6e5fff
	.word	0x64013d33
	.word	0x6eaff3d
	.word	0x82b9060
	.word	-0x5dffb9bd
	.word	0x3aa111e6
	.word	0x55555300
	.word	-0x1111122d
	.word	-0x1113ff26
	.word	-0xc30012
	.word	-0x54f10091
	.word	0x1ff4fff
	.word	0x1127105c
	.word	0x80d59f
	.word	0x555d4e03
	.word	-0x1112b12b
	.word	-0x9c05200
	.word	-0xc5095b1
	.word	0x333f302f
	.word	0x1201f80
	.word	-0x5522b11c
	.word	-0x54111200
	.word	-0x540b0b01
	.word	-0xd0ce201
	.word	0x207c01a3
	.word	-0x204eb54
	.word	-0xbf4b7a
	.word	-0x3400b8f6
	.word	-0x4b003343
	.word	0x3f202270
	.word	-0x2cff2c4a
	.word	0x665fff2c
	.word	-0x100023ff
	.word	0x5fff22dd
	.word	-0x50bfe140
	.word	0x66da2e02
	.word	-0x3325000a
	.word	-0x250013ff
	.word	-0x25000112
	.word	-0xf4ecf0
	.word	0x146fccaf
	.word	-0x17ff550d
	.word	0x14800170
	.word	-0x224444ad
	.word	-0x55666443
	.word	0x3bcf6a01
	.word	-0x2499556
	.word	-0x5282bdfb
	.word	0x1d10831c
	.word	0x1101f18
	.word	0x43b9c204
	.word	0x160fa66
	.word	0x20101f90
	.word	0x1f0082c0
	.word	-0x5240f926
	.word	0x5d00ff40
	.word	-0x24466601
	.word	0x7c04c44f
	.word	0x6cc4cccc
	.word	0x7c7c0340
	.word	0x3007741
	.word	0x7c7cc319
	.word	0x3f070029
	.word	0xb007799
	.word	0x390eb61
	.word	-0x70e66bb7
	.word	-0x15bdac00
	.word	0x466607d1
	.word	-0x3be54445
	.word	-0x4988fe9a
	.word	-0xa11145
	.word	-0x3f31dece
	.word	-0x21e4fcd0
	.word	-0x52444451
	.word	0x7700772a
	.word	-0x44440d0c
	.word	0x143ff2f4
	.word	-0x6f11500e
	.word	0x600a21d
	.word	-0x42ff05d1
	.word	0x74f2ffbb
	.word	-0x420d0089
	.word	0xee3f00
	.word	0x105fc041
	.word	0x6b8516da
	.word	-0x1f5980d0
	.word	-0x57f844ff
	.word	0x3306777
	.word	0xda0f10
	.word	-0x4202ddde
	.word	-0x4405dd5e
	.word	-0xc0660ff
	.word	-0xb0c6045
	.word	0x30c0ca06
	.word	-0x20febfe8
	.word	0x6aad4ee4
	.word	-0x5911fd12
	.word	-0x5405d041
	.word	-0x1fc4fd00
	.word	-0x578dadff
	.word	-0x4332fef0
	.word	0xcbff55
	.word	-0x3c001114
	.word	-0x40009914
	.word	-0xb023fc
	.word	0x73a13aff
	.word	-0xdf4aab
	.word	-0x2086fd21
	.word	-0x2000199a
	.word	0x390cff4c
	.word	0x5850b333
	.word	0x5daf1b24
	.word	-0x25052b00
	.word	-0x2505b11a
	.word	-0xc41fe1c
	.word	-0x22cdc26
	.word	-0x3ff7fd26
	.word	0x3b06fb11
	.word	-0x44222506
	.word	-0x42ffee65
	.word	-0x446e6445
	.word	0x9d99bbb
	.word	-0x46e67445
	.word	-0x4246f200
	.word	-0x6d97fce0
	.word	0x26040720
	.word	0x5bd331b1
	.word	-0x22ff24ab
	.word	0x55db644d
	.word	0x1bb6645
	.word	-0x44a99b9c
	.word	0x154e666
	.word	-0x4499cfe4
	.word	0x2c02cf04
	.word	-0x444aaa63
	.word	-0x2bb92500
	.word	0x5466bddd
	.word	0x65bd0055
	.word	0x45bd4646
	.word	-0x42bf9992
	.word	0x11bdeb09
	.word	0x1174dbb9
	.word	0x66bbb900
	.word	0x676bb99d
	.word	0x6b91019b
	.word	0x6b118b76
	.word	0x700b6
	.word	-0x44ee643a
	.word	-0x346e7435
	.word	-0x49893400
	.word	-0x3448e684
	.word	-0x38d6ff84
	.word	-0x33668334
	.word	0x19007777
	.word	0x199987cb
	.word	0x161117cc
	.word	0x17bccc91
	.word	0x6318161b
	.word	-0x66ef0eb
	.word	0x2f074405
	.word	0x3d654405
	.word	0x6bb65435
	.word	0x9810b02
	.word	-0x334977c9
	.word	0xc691cc
	.word	0x766003
	.word	0x29bb4f03
	.word	0x66211291
	.word	0x1f67628
	.word	-0x54f10419
	.word	0x1cc2afb
	.word	-0x335d5434
	.word	0x11f2f6cc
	.word	0x211130fb
	.word	0x300e105
	.word	0x6666f2ff
	.word	-0x4efe0dc0
	.word	-0x333405d1
	.word	0x398f2af
	.word	0xc6f25b
	.word	-0x4fefd
	.word	-0xaff6661
	.word	0x76119fff
	.word	0x788776
	.word	0x48846bbb
	.word	0x55556ccc
	.word	0x670320a6
	.word	-0x66880bfa
	.word	-0x6bef81f8
	.word	0x67192021
	.word	0x66662d08
	.word	-0x9bbbbc
	.word	0x3108c02
	.word	0x1d000709
	.word	0x110db37
	.word	0x33002b44
	.word	-0xffe8f0c
	.word	0x181f601f
	.word	0x1e00b6dd
	.word	0x210311b6
	.word	-0x6eee496e
	.word	0x190a99
	.word	0x5801811f
	.word	-0x244b8499
	.word	0x3a06b46
	.word	0x310bb49
	.word	0x6f0fcfff
	.word	0x470cc44f
	.word	0x30abf5c
	.word	0x300740cf
	.word	-0x3364ecff
	.word	-0x2502ff34
	.word	-0x250c3334
	.word	-0xcb04445
	.word	-0x2002f900
	.word	0x37620700
	.word	-0x1ceee0f0
	.word	-0x4d01fe56
	.word	0x53d9f701
	.word	-0x2af72003
	.word	0x19db00ff
	.word	0x19d33311
	.word	0x3515db22
	.word	-0x20fe112b
	.word	0x75f2027e
	.word	0x41c0f65e
	.word	0x11600193
	.word	0x535dee29
	.word	0x4e740bd
	.word	-0x4444a8d0
	.word	0x8bbd8b
	.word	-0x72226748
	.word	0x18881111
	.word	0x21ea1688
	.word	0x2001999
	.word	0xbd998b
	.word	-0x226e7434
	.word	-0x426e6745
	.word	0x11116b00
	.word	-0x6dde8843
	.word	-0x3d98fd43
	.word	-0x36984234
	.word	0x40dc0310
	.word	0x66e30acb
	.word	0x66bccc11
	.word	0x790ea098
	.word	-0x6801ff69
	.word	-0x68477779
	.word	-0x433334ea
	.word	0x920360
	.word	0x212c6166
	.word	0x1a1192d
	.word	0x900f1f2
	.word	0x410310
	.word	-0x668efcfd
	.word	0x22911991
	.word	0x300840e
	.word	-0x5555cdf4
	.word	0x219f95fa
	.word	0x211153
	.word	0x2211555f
	.word	0x22114eea
	.word	-0x5009b0fa
	.word	-0x1aec5006
	.word	-0x7fbc04d0
	.word	0x555f1f30
	.word	-0x11bbd661
	.word	-0x66fe61
	.word	-0xee60ba
	.word	-0x3dfcff5e
	.word	0x310f301
	.word	0x11954444
	.word	-0x1feef4f5
	.word	0x7300c310
	.word	0x2191ba17
	.word	-0xee6dee7
	.word	-0x7ced9200
	.word	-0x69aff0e0
	.word	0x129119
	.word	-0x20f874fd
	.word	0x40121119
	.word	0x1e12111f
	.word	0x20bbad92
	.word	0x14001201
	.word	0x600cc00
	.word	0x30d71011
	.word	-0x496ec2e2
	.word	-0x4cedfcc0
	.word	0x150ea60
	.word	-0x59bebba
	.word	0x16037f2
	.word	0x1ff057f2
	.word	0x891f80
	.word	-0x6f3f7eee
	.word	-0x662af745
	.word	0x1199b667
	.word	0x33670066
	.word	0x22677633
	.word	0xb917722
	.word	0x89888dd
	.word	0x2222115f
	.word	-0x66d01ddf
	.word	-0x66abffd7
	.word	-0x8f474d8
	.word	0x3f110120
	.word	0x400710f8
	.word	-0xfecdee1
	.word	-0x26e0cfe1
	.word	0x6602cbdd
	.word	0x74333339
	.word	0x72dc0163
	.word	0x108300c3
	.word	-0x766760fd
	.word	0x11030188
	.word	-0x39e6cffa
	.word	0x3603e301
	.word	-0x66668969
	.word	0x1761933
	.word	0x19b00130
	.word	0x13e74399
	.word	0x63
	.size	 gUnknown_0856FBBC,4076
	.align	2, 0
	.type	 sCursorGfx,object
sCursorGfx:
	.word	0x10010
	.word	0x6000002a
	.word	0x3401001
	.word	0x10033061
	.word	0x310b650
	.word	0x10c1011
	.word	0x40b60000
	.word	0x6b030016
	.word	-0x447effff
	.word	0x18000216
	.word	-0x74fe9448
	.word	0x24bb0800
	.word	0x1e006618
	.word	0x320bb61
	.word	0x6616b610
	.word	0xf001000
	.word	0x70311010
	.word	0xfdbb01
	.word	-0x4fdaefee
	.word	0x4001f015
	.word	0x10690082
	.word	0x61246900
	.word	0x1653306b
	.word	0x23f0b8
	.word	0x2400ac00
	.word	0x240000
	.word	0x2e008e00
	.word	0xa08186
	.word	0x300182a
	.word	-0x4449ef75
	.word	-0x49efff95
	.word	0x6b61166b
	.word	0x61060116
	.word	0x11000116
	.word	-0x51ffe100
	.word	-0x51ff4400
	.word	0xf1000
	.word	-0x6fc4dffe
	.word	0x1
	.size	 sCursorGfx,156
	.align	2, 0
	.type	 sHeadsGfx,object
sHeadsGfx:
	.word	0x10010
	.word	-0x1fffffe0
	.word	0xee01
	.word	0x55e0
	.word	0xee5e00
	.word	-0x4f564020
	.word	0xe01450
	.word	0x110003
	.word	0xe55e5
	.word	-0x1a666b00
	.word	0xef59e00
	.word	-0x415fff8
	.word	-0x4ae7fff2
	.word	0x4e0000ea
	.word	-0x1fffe7ee
	.word	0x16002834
	.word	0x233e00
	.word	0x4330f810
	.word	0xae0130
	.word	-0x7efff1a5
	.word	-0x7dff1bef
	.word	0xe4300
	.word	0xe332
	.word	0x3200e08f
	.word	0x76e01c60
	.word	-0x71ff1178
	.word	0x8500bb
	.word	0xab85e0
	.word	-0x55fb4720
	.word	0x447fe000
	.word	-0x7711e170
	.word	0x58000e00
	.word	-0x45ff1745
	.word	0xe0058
	.word	0xe89e9
	.word	0x80f787
	.word	0x7887fe4c
	.word	0x1f247e00
	.word	0x1f8e0000
	.word	0x3efe001f
	.word	-0x1fffdfee
	.word	0x78287fb0
	.word	0xf100ef
	.word	-0xeff187e
	.word	0x2100e8f1
	.word	0xefe328
	.word	0x7fa00e7f
	.size	 sHeadsGfx,188
	.align	2, 0
	.type	 sMapCursorGfx,object
sMapCursorGfx:
	.word	0x40010
	.word	-0x80000000
	.word	0x78000088
	.word	0x300a077
	.word	0x7803f000
	.word	-0x77777800
	.word	0x7777880f
	.word	-0xfe0ff89
	.word	-0xffeefff
	.word	0x1fc0831f
	.word	0x77000008
	.word	-0xff7ff79
	.word	0x330ff03
	.word	0x35073f0
	.word	-0x64efad00
	.word	0x11001f0
	.word	0x10ff7310
	.word	-0x3fe60f85
	.word	0x2073f01f
	.word	0x10931003
	.word	-0x61fecf65
	.word	0x7806710
	.word	0x41800300
	.word	0xf500b10
	.word	-0x200f0690
	.word	0x6b201840
	.word	0x1f03900
	.word	0x16500000
	.word	0x706710bf
	.word	0x6f606b10
	.word	0xf200b40
	.word	0xf606790
	.word	0x508b10f7
	.word	-0x2f9cdf25
	.word	-0x6cbff7ff
	.word	-0xbf8510
	.word	-0xfe7af03
	.word	0x708b2077
	.word	-0x6ffe0f05
	.word	0x43018001
	.word	0x4b01787b
	.word	0x330a1f1
	.word	0x81e00
	.word	-0x19e0ee2
	.word	0x1f0e181
	.word	0x1f001f0
	.word	0x73f00130
	.word	0x7f771d52
	.word	-0xf64ef89
	.word	0x1003306f
	.word	-0xf64ef6d
	.word	-0x30fe0faf
	.word	0x3d101f0
	.word	-0x5a0e7800
	.word	-0x64defce0
	.word	0x51fe1e00
	.word	0x169a165
	.word	-0xf800f7e
	.word	-0x4ffe0fff
	.word	-0xf008f99
	.word	0x41933077
	.word	0xe1f1ff
	.word	-0xf6cbffd
	.word	0x1c001
	.size	 sMapCursorGfx,256
	.align	2, 0
	.type	 gUnknown_08570E00,object
gUnknown_08570E00:
	.word	0x50010
	.word	0x11001000
	.word	0x3000200
	.word	0x40000
	.word	0x60005
	.word	0x8000007
	.word	0xa000900
	.word	0xb00
	.word	0xd000c
	.word	0xf000e
	.word	0x31003004
	.word	0x1000100
	.word	0x23500022
	.word	0x1e0
	.word	0x21002001
	.word	0x120000
	.word	0x140013
	.word	0x16000015
	.word	0x18001700
	.word	0x1900
	.word	0x1b001a
	.word	0x1d001c
	.word	0x1f001e01
	.word	0x41004000
	.word	0x32603f20
	.word	0x3f2001f0
	.word	0x280027
	.word	0x1f0c129
	.word	0x2a01a0
	.word	-0xfbdffd5
	.word	0x3f208c01
	.word	-0xfc7ffc9
	.word	0x3b01e001
	.word	-0xfcca000
	.word	0x2f3f4001
	.word	0x51605000
	.word	0x60526000
	.word	0x60546053
	.word	0x56600055
	.word	0x58605760
	.word	0x60005960
	.word	0x605b605a
	.word	0x25d605c
	.word	0x5f605e60
	.word	0x3f002f60
	.word	0x1f0c043
	.word	0x60603f60
	.word	0x60626061
	.word	0x64606300
	.word	0x66606560
	.word	0x60670060
	.word	0x60696068
	.word	0x6b00606a
	.word	0x6d606c60
	.word	0x78606e60
	.word	-0xfc0df91
	.word	0x10ff30fd
	.word	0x7160703f
	.word	0x60726000
	.word	0x60746073
	.word	0x76600075
	.word	0x78607760
	.word	0x60007960
	.word	0x607b607a
	.word	0xe7d607c
	.word	0x7f607e60
	.word	-0x20fc0e0
	.word	0x2fff50
	.word	-0x7e9f8000
	.word	-0x7c9f7da0
	.word	0x60846000
	.word	0x60866085
	.word	-0x779fff79
	.word	-0x759f76a0
	.word	0x60008b60
	.word	0x608d608c
	.word	-0x1f709f72
	.word	-0x20fc0e0
	.word	0x6090ff70
	.word	0x926091
	.word	-0x6b9f6ca0
	.word	-0x699f6aa0
	.word	0x60976000
	.word	0x60996098
	.word	-0x649fff66
	.word	-0x629f63a0
	.word	0x60309e60
	.word	-0x3f000f61
	.word	-0x5e9f5f01
	.word	0x60a20060
	.word	0x60a460a3
	.word	-0x59ff9f5b
	.word	-0x579f58a0
	.word	0x60a960
	.word	0x60ab60aa
	.word	0x60ad60ac
	.word	-0x509f51e8
	.word	-0x3f0010
	.word	0xb160b0
	.word	-0x4c9f4da0
	.word	-0x4a9f4ba0
	.word	0x60b66000
	.word	0x60b860b7
	.word	-0x459fff47
	.word	-0x439f44a0
	.word	0x600cbd60
	.word	-0xf409f42
	.word	-0x3f003f01
	.word	0x60c10060
	.word	0x60c360c2
	.word	-0x3aff9f3c
	.word	-0x389f39a0
	.word	0x60c860
	.word	0x60ca60c9
	.word	0x60cc60cb
	.word	-0x319f32fa
	.word	-0xf30a0
	.word	0xd0ffc0
	.word	-0x2d9f2ea0
	.word	-0x2b9f2ca0
	.word	0x60d56000
	.word	0x60d760d6
	.word	-0x269fff28
	.word	-0x249f25a0
	.word	0x6003dc60
	.word	0x60de60dd
	.word	-0x5f000f21
	.word	-0xfc69f01
	.word	0x3b01e001
	.word	0x26002500
	.word	0x1001e0c1
	.word	0x4900483f
	.word	0x1f04a00
	.word	0x3c01a080
	.word	0x35003d00
	.word	-0x1f07ca00
	.word	0x133f1001
	.word	-0xffe0fa5
	.word	0x46004501
	.word	0x5001e0c7
	.word	0x3a002e3f
	.word	0x1f001f0
	.word	0x2e3f0180
	.word	0x50371004
	.word	-0xfe00fc1
	.word	-0xffe2fff
	.word	0x1f0f73f
	.word	0x3ff001f0
	.word	-0xff740e0
	.word	-0x5ffe0fe1
	.word	0x500c40bf
	.word	0x3f
	.size	 gUnknown_08570E00,608
	.align	2, 0
	.type	 gUnknown_08571060,object
gUnknown_08571060:
	.word	0x2a010
	.word	0x1710000
	.word	0x3710271
	.word	0x71040071
	.word	0x71067105
	.word	0x8007107
	.word	0xa710971
	.word	0x710b71
	.word	0x71117110
	.word	0x71137112
	.word	0x15711400
	.word	0x17711671
	.word	0x71180071
	.word	0x711a7119
	.word	0x2000711b
	.word	0x22712171
	.word	0x712371
	.word	0x71257124
	.word	0x71277126
	.word	0x29712800
	.word	0x2b712a71
	.word	0x71300071
	.word	0x71327131
	.word	0x34007133
	.word	0x36713571
	.word	0x713771
	.word	0x71397138
	.word	0x713b713a
	.word	0x41714000
	.word	0x43714271
	.word	0x71440071
	.word	0x71467145
	.word	0x48007147
	.word	0x4a714971
	.word	0x714b71
	.word	0x71517150
	.word	0x71537152
	.word	0x55715400
	.word	0x57715671
	.word	0x71580071
	.word	0x715a7159
	.word	0x6000715b
	.word	0x62716171
	.word	0x716371
	.word	0x71657164
	.word	0x71677166
	.word	0x69716800
	.word	0x6b716a71
	.word	0x710c0071
	.word	0x710e710d
	.word	0x1c00710f
	.word	0x1e711d71
	.word	0x711f71
	.word	0x712d712c
	.word	0x712f712e
	.word	-0x580fc19d
	.word	0x713fa700
	.word	0xa7f04e
	.word	0x714f18a7
	.word	0xa7f05e
	.word	0x6e715fa7
	.word	0xa7f0c6
	.word	0x7e716fa7
	.word	-0x58ff5810
	.word	-0x738eff81
	.word	-0x718e728f
	.word	0x71008f71
	.word	0x719d719c
	.word	0x9f719e
	.word	-0x528e538f
	.word	-0x508e518f
	.word	0x11707100
	.word	0x11721171
	.word	0x74110073
	.word	0x76117511
	.word	0x11007711
	.word	0x11791178
	.word	0x7b117a
	.word	-0x7eee7fef
	.word	-0x7cee7def
	.word	0x11841100
	.word	0x11861185
	.word	-0x77eeff79
	.word	-0x75ee76ef
	.word	0x11008b11
	.word	0x11911190
	.word	0x931192
	.word	-0x6aee6bef
	.word	-0x68ee69ef
	.word	0x11981100
	.word	0x119a1199
	.word	-0x5feeff65
	.word	-0x5dee5eef
	.word	0x1100a311
	.word	0x11a511a4
	.word	0xa711a6
	.word	-0x56ee57ef
	.word	-0x54ee55ef
	.word	0x11b01100
	.word	0x11b211b1
	.word	-0x4beeff4d
	.word	-0x49ee4aef
	.word	0x1100b711
	.word	0x11b911b8
	.word	0xbb11ba
	.word	-0x3eee3fef
	.word	-0x3cee3def
	.word	0x11c41100
	.word	0x11c611c5
	.word	-0x37eeff39
	.word	-0x35ee36ef
	.word	0x1100cb11
	.word	0x11d111d0
	.word	0xd311d2
	.word	-0x2aee2bef
	.word	-0x28ee29ef
	.word	0x11d81100
	.word	0x11da11d9
	.word	-0x1feeff25
	.word	-0x1dee1eef
	.word	0x1100e311
	.word	0x11e511e4
	.word	0xe711e6
	.word	-0x16ee17ef
	.word	-0x14ee15ef
	.word	-0xfc3eecf
	.word	0x3da700a7
	.word	-0x580fb3ef
	.word	0x4da7008c
	.word	-0x580fa3ef
	.word	0x115da700
	.word	-0x580f939d
	.word	0x116da700
	.word	0xa7f07c
	.word	0x117d00a7
	.word	0x11f111f0
	.word	-0xcffee0e
	.word	-0xaee0bef
	.word	0x11f611
	.word	0x11f811f7
	.word	0x11fa11f9
	.word	0x11fb00
	.size	 gUnknown_08571060,568
	.align	2, 0
	.type	 gUnknown_08571298,object
gUnknown_08571298:
	.word	0x11bd11bc
	.word	0x11bf11be
	.word	0x11cd11cc
	.word	0x11cf11ce
	.word	0x11dd11dc
	.word	0x11df11de
	.word	0x11ed11ec
	.word	0x11ef11ee
	.word	0x11fd11fc
	.word	0x11ff11fe
	.size	 gUnknown_08571298,40
	.align	2, 0
	.type	 gUnknown_085712C0,object
gUnknown_085712C0:
	.word	0x9010
	.word	0x5a005910
	.word	0x5b0001f0
	.word	0x206900
	.word	0x1f06a
	.word	0x79006b
	.word	0x1f07a40
	.word	0x5c007b00
	.word	-0xf79a300
	.word	0x5e0001
	.word	0x45f06c
	.word	0x86e01
	.word	-0xf82ff84
	.word	0x7e0001
	.size	 gUnknown_085712C0,56
	.align	2, 0
	.type	 gUnknown_085712F8,object
gUnknown_085712F8:
	.word	0xfc10
	.word	0x6050400
	.word	0xa090807
	.word	0xd0c000b
	.word	0x15140f0e
	.word	0x18001716
	.word	0x1c1b1a19
	.word	0x1f1e1d
	.word	0x27262524
	.word	0x2b2a2928
	.word	0x2e2d2c00
	.word	0x3635342f
	.word	0x39380037
	.word	0x3d3c3b3a
	.word	0x44003f3e
	.word	0x48474645
	.word	0x4b4a49
	.word	0x4f4e4d4c
	.word	0x57565554
	.word	0x5a595800
	.word	0x5e5d5c5b
	.word	0x6564005f
	.word	0x69686766
	.word	0x6c006b6a
	.word	0x746f6e6d
	.word	0x777675
	.word	0x7b7a7978
	.word	0x7f7e7d7c
	.word	-0x797a7c00
	.word	-0x75767779
	.word	-0x7273ff75
	.word	-0x6a6b7072
	.word	-0x67ff686a
	.word	-0x63646567
	.word	0x9f9e9d
	.word	-0x58595a5c
	.word	-0x54555658
	.word	-0x51525400
	.word	-0x494a4b51
	.word	-0x4647ff49
	.word	-0x42434446
	.word	-0x3bff4042
	.word	-0x3738393b
	.word	0xcbcac9
	.word	-0x30313234
	.word	-0x28292a2c
	.word	-0x25262800
	.word	-0x21222325
	.word	0x53f082df
	.word	0x1211108a
	.word	0x20535013
	.word	0x23222110
	.word	0x31305350
	.word	0x50843332
	.word	0x42414053
	.word	0x50535043
	.word	0x53522051
	.word	0x53a0
	.size	 gUnknown_085712F8,232
	.align	1, 0
	.type	 gUnknown_085713E0,object
gUnknown_085713E0:
	.short	0xd8
	.short	0x20
	.short	0xd8
	.short	0x80
	.size	 gUnknown_085713E0,8
	.align	2, 0
	.type	 sPassBgTemplates,object
	.size	 sPassBgTemplates,12
sPassBgTemplates:
	.byte	0xf8
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xd6
	.byte	0xb
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sMapBgTemplates,object
	.size	 sMapBgTemplates,12
sMapBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x21
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sPassWindowTemplates,object
sPassWindowTemplates:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0xc
	.byte	0x3
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x2
	.byte	0xa
	.byte	0xc
	.byte	0x3
	.byte	0xf
	.short	0x26
	.byte	0x0
	.byte	0x2
	.byte	0xd
	.byte	0xc
	.byte	0x4
	.byte	0xf
	.short	0x4b
	.byte	0x0
	.byte	0x0
	.byte	0x12
	.byte	0x1e
	.byte	0x3
	.byte	0xf
	.short	0x7c
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sPassWindowTemplates,40
	.align	2, 0
	.type	 sMapWindowTemplates,object
sMapWindowTemplates:
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x5
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x14
	.byte	0x1
	.byte	0xa
	.byte	0xe
	.byte	0xf
	.short	0x4d
	.byte	0x0
	.byte	0x2
	.byte	0x10
	.byte	0x1a
	.byte	0x4
	.byte	0xf
	.short	0xda
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sMapWindowTemplates,32
	.type	 sTextColors,object
sTextColors:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x1
	.byte	0x9
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.size	 sTextColors,9
	.align	2, 0
	.type	 sPassAreasLayout,object
sPassAreasLayout:
	.short	0x1c
	.short	0x4c
	.short	0x84
	.short	0xdc
	.short	0x54
	.short	0x84
	.short	0x84
	.short	0xdc
	.short	0x50
	.short	0x66
	.short	0x14
	.short	0x6c
	.short	0x0
	.short	0x10
	.short	0x98
	.short	0xf0
	.short	0x6c
	.short	0x86
	.short	0x14
	.short	0x6c
	.short	0x18
	.short	0x30
	.short	0x14
	.short	0x6c
	.short	0x32
	.short	0x42
	.short	0x14
	.short	0x24
	.short	0x42
	.short	0x52
	.short	0x20
	.short	0x30
	.short	0x32
	.short	0x42
	.short	0x2c
	.short	0x3c
	.short	0x42
	.short	0x52
	.short	0x38
	.short	0x48
	.short	0x32
	.short	0x42
	.short	0x44
	.short	0x54
	.short	0x42
	.short	0x52
	.short	0x50
	.short	0x60
	.short	0x32
	.short	0x42
	.short	0x5c
	.short	0x6c
	.size	 sPassAreasLayout,104
	.align	2, 0
	.type	 sCursorSpriteSheets,object
sCursorSpriteSheets:
	.word	sCursorGfx
	.short	0x100
	.short	0x0
	.word	sMapCursorGfx
	.short	0x400
	.short	0x1
	.word	gFrontierPassMedals_Gfx
	.short	0x380
	.short	0x2
	.size	 sCursorSpriteSheets,24
	.align	2, 0
	.type	 sHeadsSpriteSheet,object
sHeadsSpriteSheet:
	.word	sHeadsGfx
	.short	0x100
	.short	0x4
	.space	8
	.size	 sHeadsSpriteSheet,16
	.align	2, 0
	.type	 sSpritePalettes,object
sSpritePalettes:
	.word	gFrontierPassCursor_Pal
	.short	0x0
	.space	2
	.word	gFrontierPassMapCursor_Pal
	.short	0x1
	.space	2
	.word	gFrontierPassMedalsSilver_Pal
	.short	0x2
	.space	2
	.word	gFrontierPassMedalsGold_Pal
	.short	0x3
	.space	2
	.word	sMaleHeadPalette
	.short	0x4
	.space	2
	.word	sFemaleHeadPalette
	.short	0x5
	.space	2
	.space	8
	.size	 sSpritePalettes,56
	.align	2, 0
	.type	 sSpriteAnim_857151C,object
sSpriteAnim_857151C:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_857151C,8
	.align	2, 0
	.type	 sSpriteAnim_8571524,object
sSpriteAnim_8571524:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8571524,8
	.align	2, 0
	.type	 sSpriteAnim_857152C,object
sSpriteAnim_857152C:
	.short	0x4
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_857152C,8
	.align	2, 0
	.type	 sSpriteAnim_8571534,object
sSpriteAnim_8571534:
	.short	0x8
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8571534,8
	.align	2, 0
	.type	 sSpriteAnim_857153C,object
sSpriteAnim_857153C:
	.short	0xc
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_857153C,8
	.align	2, 0
	.type	 sSpriteAnim_8571544,object
sSpriteAnim_8571544:
	.short	0x10
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8571544,8
	.align	2, 0
	.type	 sSpriteAnim_857154C,object
sSpriteAnim_857154C:
	.short	0x14
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_857154C,8
	.align	2, 0
	.type	 sSpriteAnim_8571554,object
sSpriteAnim_8571554:
	.short	0x18
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8571554,8
	.align	2, 0
	.type	 sSpriteAnim_857155C,object
sSpriteAnim_857155C:
	.short	0x0
	.byte	0x2d
	.space	1
	.short	0x8
	.byte	0x2d
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sSpriteAnim_857155C,12
	.align	2, 0
	.type	 sSpriteAnim_8571568,object
sSpriteAnim_8571568:
	.short	0x10
	.byte	0x2d
	.space	1
	.short	0x18
	.byte	0x2d
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sSpriteAnim_8571568,12
	.align	2, 0
	.type	 sSpriteAnimTable_8571574,object
sSpriteAnimTable_8571574:
	.word	sSpriteAnim_8571524
	.word	sSpriteAnim_857152C
	.size	 sSpriteAnimTable_8571574,8
	.align	2, 0
	.type	 sSpriteAnimTable_857157C,object
sSpriteAnimTable_857157C:
	.word	sSpriteAnim_8571524
	.word	sSpriteAnim_857152C
	.word	sSpriteAnim_8571534
	.word	sSpriteAnim_857153C
	.word	sSpriteAnim_8571544
	.word	sSpriteAnim_857154C
	.word	sSpriteAnim_8571554
	.size	 sSpriteAnimTable_857157C,28
	.align	2, 0
	.type	 sSpriteAnimTable_8571598,object
sSpriteAnimTable_8571598:
	.word	sSpriteAnim_857155C
	.word	sSpriteAnim_8571568
	.size	 sSpriteAnimTable_8571598,8
	.align	2, 0
	.type	 sSpriteAffineAnim_85715A0,object
sSpriteAffineAnim_85715A0:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_85715A0,16
	.align	2, 0
	.type	 sSpriteAffineAnimTable_85715B0,object
sSpriteAffineAnimTable_85715B0:
	.word	sSpriteAffineAnim_85715A0
	.size	 sSpriteAffineAnimTable_85715B0,4
	.align	2, 0
	.type	 sSpriteTemplates_Cursors,object
sSpriteTemplates_Cursors:
	.short	0x0
	.short	0x0
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	sSpriteAnimTable_8571574
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.short	0x1
	.short	0x1
	.word	gOamData_AffineOff_ObjNormal_32x16
	.word	sSpriteAnimTable_8571598
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.size	 sSpriteTemplates_Cursors,48
	.align	2, 0
	.type	 sSpriteTemplate_Medal,object
	.size	 sSpriteTemplate_Medal,24
sSpriteTemplate_Medal:
	.short	0x2
	.short	0x2
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	sSpriteAnimTable_857157C
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Head,object
	.size	 sSpriteTemplate_Head,24
sSpriteTemplate_Head:
	.short	0x4
	.short	0x4
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	sSpriteAnimTable_8571574
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCb_Dummy
	.align	2, 0
	.type	 sPassAreaDescriptions,object
sPassAreaDescriptions:
	.word	gText_ThereIsNoBattleRecord
	.word	gText_CheckFrontierMap
	.word	gText_CheckTrainerCard
	.word	gText_ViewRecordedBattle
	.word	gText_PutAwayFrontierPass
	.word	gText_CurrentBattlePoints
	.word	gText_CollectedSymbols
	.word	gText_BattleTowerAbilitySymbol
	.word	gText_BattleDomeTacticsSymbol
	.word	gText_BattlePalaceSpiritsSymbol
	.word	gText_BattleArenaGutsSymbol
	.word	gText_BattleFactoryKnowledgeSymbol
	.word	gText_BattlePikeLuckSymbol
	.word	gText_BattlePyramidBraveSymbol
	.word	gText_EmptyString7
	.size	 sPassAreaDescriptions,60
	.align	2, 0
	.type	 sMapLandmarks,object
sMapLandmarks:
	.word	gText_BattleTower3
	.word	gText_BattleTowerDesc
	.short	0x59
	.short	0x28
	.byte	0x1
	.space	3
	.word	gText_BattleDome2
	.word	gText_BattleDomeDesc
	.short	0x21
	.short	0x2a
	.byte	0x1
	.space	3
	.word	gText_BattlePalace2
	.word	gText_BattlePalaceDesc
	.short	0x78
	.short	0x56
	.byte	0x0
	.space	3
	.word	gText_BattleArena2
	.word	gText_BattleArenaDesc
	.short	0x72
	.short	0x3b
	.byte	0x0
	.space	3
	.word	gText_BattleFactory2
	.word	gText_BattleFactoryDesc
	.short	0x19
	.short	0x43
	.byte	0x0
	.space	3
	.word	gText_BattlePike2
	.word	gText_BattlePikeDesc
	.short	0x39
	.short	0x39
	.byte	0x1
	.space	3
	.word	gText_BattlePyramid2
	.word	gText_BattlePyramidDesc
	.short	0x86
	.short	0x29
	.byte	0x1
	.space	3
	.size	 sMapLandmarks,112
.text
	.align	2, 0
	.type	 ResetGpuRegsAndBgs,function
	.thumb_func
ResetGpuRegsAndBgs:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xe
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xc
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x46
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L3
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, sp, #0x4
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	ldr	r2, .L3+0x4
	bl	CpuSet
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x100c000
	.word	0x5000100
.Lfe1:
	.size	 ResetGpuRegsAndBgs,.Lfe1-ResetGpuRegsAndBgs
	.align	2, 0
	.globl	ShowFrontierPass
	.type	 ShowFrontierPass,function
	.thumb_func
ShowFrontierPass:
	push	{lr}
	bl	AllocateFrontierPassData
	ldr	r0, .L6
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	CB2_InitFrontierPass
.Lfe2:
	.size	 ShowFrontierPass,.Lfe2-ShowFrontierPass
	.align	2, 0
	.type	 LeaveFrontierPass,function
	.thumb_func
LeaveFrontierPass:
	push	{lr}
	ldr	r0, .L9
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	FreeFrontierPassData
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	sPassData
.Lfe3:
	.size	 LeaveFrontierPass,.Lfe3-LeaveFrontierPass
	.align	2, 0
	.type	 AllocateFrontierPassData,function
	.thumb_func
AllocateFrontierPassData:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldr	r5, .L24
	ldr	r0, [r5]
	cmp	r0, #0
	beq	.L12	@cond_branch
	mov	r0, #0x1
	b	.L23
.L25:
	.align	2, 0
.L24:
	.word	sPassData
.L12:
	mov	r0, #0x18
	bl	AllocZeroed
	str	r0, [r5]
	cmp	r0, #0
	bne	.L13	@cond_branch
	mov	r0, #0x2
	b	.L23
.L13:
	str	r4, [r0]
	bl	GetCurrentRegionMapSectionId
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3a
	beq	.L14	@cond_branch
	cmp	r4, #0xca
	beq	.L14	@cond_branch
	ldr	r0, [r5]
	mov	r1, #0xb0
	strh	r1, [r0, #0x8]
	mov	r1, #0x68
	strh	r1, [r0, #0xa]
	b	.L15
.L14:
	ldr	r2, .L26
	ldr	r1, [r2]
	mov	r0, #0xb0
	strh	r0, [r1, #0x8]
	mov	r0, #0x30
	strh	r0, [r1, #0xa]
	add	r5, r2, #0
.L15:
	ldr	r1, [r5]
	ldr	r0, .L26+0x4
	ldr	r0, [r0]
	mov	r2, #0xe4
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r1, #0x6]
	bl	CanCopyRecordedBattleSaveData
	ldr	r3, [r5]
	mov	r1, #0x1
	and	r0, r0, r1
	ldrb	r2, [r3, #0xe]
	mov	r1, #0x2
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0xe]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0xe]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0xe]
	bl	CountPlayerTrainerStars
	ldr	r3, [r5]
	lsl	r0, r0, #0x4
	ldrb	r2, [r3, #0xe]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0xe]
	mov	r4, #0x0
	add	r6, r5, #0
.L19:
	lsl	r5, r4, #0x1
	ldr	r1, .L26+0x8
	add	r0, r5, r1
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L20	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, #0xf
	add	r1, r1, r4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L20:
	ldr	r2, .L26+0xc
	add	r0, r5, r2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L18	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, #0xf
	add	r1, r1, r4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L18:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L19	@cond_branch
	mov	r0, #0x0
.L23:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L27:
	.align	2, 0
.L26:
	.word	sPassData
	.word	gSaveBlock2Ptr
	.word	0x8c4
	.word	0x8c5
.Lfe4:
	.size	 AllocateFrontierPassData,.Lfe4-AllocateFrontierPassData
	.align	2, 0
	.type	 FreeFrontierPassData,function
	.thumb_func
FreeFrontierPassData:
	push	{r4, lr}
	ldr	r4, .L31
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L29	@cond_branch
	mov	r1, #0x0
	mov	r2, #0x18
	bl	memset
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
	b	.L30
.L32:
	.align	2, 0
.L31:
	.word	sPassData
.L29:
	mov	r0, #0x1
.L30:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 FreeFrontierPassData,.Lfe5-FreeFrontierPassData
	.align	2, 0
	.type	 AllocateFrontierPassGfx,function
	.thumb_func
AllocateFrontierPassGfx:
	push	{r4, lr}
	ldr	r4, .L37
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L34	@cond_branch
	mov	r0, #0x1
	b	.L36
.L38:
	.align	2, 0
.L37:
	.word	sPassGfx
.L34:
	ldr	r0, .L39
	bl	AllocZeroed
	str	r0, [r4]
	cmp	r0, #0
	beq	.L35	@cond_branch
	mov	r0, #0x0
	b	.L36
.L40:
	.align	2, 0
.L39:
	.word	0x2434
.L35:
	mov	r0, #0x2
.L36:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 AllocateFrontierPassGfx,.Lfe6-AllocateFrontierPassGfx
	.align	2, 0
	.type	 FreeFrontierPassGfx,function
	.thumb_func
FreeFrontierPassGfx:
	push	{r4, lr}
	bl	FreeAllWindowBuffers
	ldr	r4, .L47
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L42	@cond_branch
	mov	r0, #0x1
	b	.L46
.L48:
	.align	2, 0
.L47:
	.word	sPassGfx
.L42:
	ldr	r0, [r0, #0x28]
	cmp	r0, #0
	beq	.L43	@cond_branch
	bl	Free
	ldr	r1, [r4]
	mov	r0, #0x0
	str	r0, [r1, #0x28]
.L43:
	ldr	r0, [r4]
	ldr	r0, [r0, #0x24]
	cmp	r0, #0
	beq	.L44	@cond_branch
	bl	Free
	ldr	r1, [r4]
	mov	r0, #0x0
	str	r0, [r1, #0x24]
.L44:
	ldr	r0, [r4]
	ldr	r0, [r0, #0x20]
	cmp	r0, #0
	beq	.L45	@cond_branch
	bl	Free
	ldr	r1, [r4]
	mov	r0, #0x0
	str	r0, [r1, #0x20]
.L45:
	ldr	r0, [r4]
	ldr	r2, .L49
	mov	r1, #0x0
	bl	memset
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L46:
	pop	{r4}
	pop	{r1}
	bx	r1
.L50:
	.align	2, 0
.L49:
	.word	0x2434
.Lfe7:
	.size	 FreeFrontierPassGfx,.Lfe7-FreeFrontierPassGfx
	.align	2, 0
	.type	 VblankCb_FrontierPass,function
	.thumb_func
VblankCb_FrontierPass:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	ldr	r0, .L53
	ldr	r6, [r0]
	add	r0, r6, #0
	add	r0, r0, #0x2c
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L52	@cond_branch
	ldr	r3, .L53+0x4
	ldr	r0, .L53+0x8
	ldr	r0, [r0]
	ldrb	r4, [r0, #0xe]
	lsl	r4, r4, #0x1c
	lsr	r0, r4, #0x1d
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x8
	lsr	r0, r4, #0x1d
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r5, r3, #0x2
	add	r0, r0, r5
	mov	r7, #0x0
	ldrsh	r2, [r0, r7]
	lsl	r2, r2, #0x8
	lsr	r0, r4, #0x1d
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r7, #0x0
	ldrsh	r3, [r0, r7]
	lsr	r4, r4, #0x1d
	sub	r4, r4, #0x1
	lsl	r4, r4, #0x2
	add	r4, r4, r5
	mov	r5, #0x0
	ldrsh	r0, [r4, r5]
	str	r0, [sp]
	mov	r7, #0x2e
	ldrsh	r0, [r6, r7]
	str	r0, [sp, #0x4]
	mov	r4, #0x30
	ldrsh	r0, [r6, r4]
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	bl	SetBgAffine
.L52:
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L54:
	.align	2, 0
.L53:
	.word	sPassGfx
	.word	gUnknown_085713E0
	.word	sPassData
.Lfe8:
	.size	 VblankCb_FrontierPass,.Lfe8-VblankCb_FrontierPass
	.align	2, 0
	.type	 CB2_FrontierPass,function
	.thumb_func
CB2_FrontierPass:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 CB2_FrontierPass,.Lfe9-CB2_FrontierPass
	.align	2, 0
	.type	 CB2_InitFrontierPass,function
	.thumb_func
CB2_InitFrontierPass:
	push	{lr}
	bl	InitFrontierPass
	cmp	r0, #0
	beq	.L57	@cond_branch
	ldr	r0, .L58
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L58+0x4
	bl	SetMainCallback2
.L57:
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	Task_HandleFrontierPassInput
	.word	CB2_FrontierPass
.Lfe10:
	.size	 CB2_InitFrontierPass,.Lfe10-CB2_InitFrontierPass
	.align	2, 0
	.type	 CB2_HideFrontierPass,function
	.thumb_func
CB2_HideFrontierPass:
	push	{lr}
	bl	HideFrontierPass
	cmp	r0, #0
	beq	.L61	@cond_branch
	bl	LeaveFrontierPass
.L61:
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 CB2_HideFrontierPass,.Lfe11-CB2_HideFrontierPass
	.align	2, 0
	.type	 InitFrontierPass,function
	.thumb_func
InitFrontierPass:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	ldr	r0, .L83
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0xa
	bls	.LCB642
	b	.L63	@long jump
.LCB642:
	lsl	r0, r0, #0x2
	ldr	r1, .L83+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L84:
	.align	2, 0
.L83:
	.word	sPassData
	.word	.L79
	.align	2, 0
	.align	2, 0
.L79:
	.word	.L64
	.word	.L65
	.word	.L66
	.word	.L67
	.word	.L68
	.word	.L69
	.word	.L70
	.word	.L71
	.word	.L73
	.word	.L76
	.word	.L77
.L64:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	bl	SetVBlankHBlankCallbacksToNull
	mov	r0, #0x2
	bl	DisableInterrupts
	b	.L63
.L65:
	bl	ResetGpuRegsAndBgs
	b	.L63
.L66:
	bl	ResetTasks
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetTempTileDataBuffers
	b	.L63
.L67:
	bl	AllocateFrontierPassGfx
	b	.L63
.L68:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L85
	mov	r0, #0x1
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r4, .L85+0x4
	ldr	r1, [r4]
	add	r1, r1, #0x32
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L85+0x8
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L85+0xc
	add	r1, r1, r0
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r0, #0x2
	mov	r1, #0x6
	mov	r2, #0x1
	bl	SetBgAttribute
	b	.L63
.L86:
	.align	2, 0
.L85:
	.word	sPassBgTemplates
	.word	sPassGfx
	.word	0x1032
	.word	0x2032
.L69:
	ldr	r0, .L87
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	b	.L63
.L88:
	.align	2, 0
.L87:
	.word	sPassWindowTemplates
.L70:
	ldr	r0, .L89
	add	r1, sp, #0x8
	bl	malloc_and_decompress
	ldr	r4, .L89+0x4
	ldr	r1, [r4]
	str	r0, [r1, #0x20]
	ldr	r0, .L89+0x8
	add	r1, sp, #0x8
	bl	malloc_and_decompress
	ldr	r1, [r4]
	str	r0, [r1, #0x24]
	ldr	r0, .L89+0xc
	add	r1, sp, #0x8
	bl	malloc_and_decompress
	ldr	r1, [r4]
	str	r0, [r1, #0x28]
	ldr	r1, .L89+0x10
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L89+0x14
	str	r4, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L63
.L90:
	.align	2, 0
.L89:
	.word	gUnknown_085712F8
	.word	sPassGfx
	.word	gUnknown_08571060
	.word	gUnknown_085712C0
	.word	gUnknown_08DE08C8
	.word	gUnknown_08DE2084
.L71:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB800
	b	.L82	@long jump
.LCB800:
	mov	r5, #0x1e
	str	r5, [sp]
	mov	r4, #0x14
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	b	.L63
.L73:
	ldr	r4, .L91
	mov	r2, #0xd0
	lsl	r2, r2, #0x1
	add	r0, r4, #0
	mov	r1, #0x0
	bl	LoadPalette
	ldr	r5, .L91+0x4
	ldr	r0, [r5]
	ldrb	r0, [r0, #0xe]
	lsr	r0, r0, #0x4
	lsl	r0, r0, #0x5
	add	r4, r4, #0x20
	add	r0, r0, r4
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x0
	bl	GetTextWindowPalette
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	bl	sub_80C629C
	ldr	r1, [r5]
	ldrb	r0, [r1, #0xc]
	ldrb	r1, [r1, #0xd]
	bl	sub_80C6104
	ldr	r5, [r5]
	ldrb	r0, [r5, #0xe]
	mov	r1, #0xe
	and	r1, r1, r0
	cmp	r1, #0x2
	beq	.L75	@cond_branch
	cmp	r1, #0x4
	bne	.L63	@cond_branch
.L75:
	mov	r0, #0x0
	strh	r0, [r5, #0x4]
	mov	r0, #0x1
	b	.L81
.L92:
	.align	2, 0
.L91:
	.word	gUnknown_08DE07C8
	.word	sPassData
.L76:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	bl	LoadCursorAndSymbolSprites
	ldr	r0, .L93
	bl	SetVBlankCallback
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L63
.L94:
	.align	2, 0
.L93:
	.word	VblankCb_FrontierPass
.L77:
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L82	@cond_branch
	ldr	r0, .L95
	ldr	r0, [r0]
	strh	r1, [r0, #0x4]
	mov	r0, #0x1
	b	.L81
.L96:
	.align	2, 0
.L95:
	.word	sPassData
.L63:
	ldr	r0, .L97
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
.L82:
	mov	r0, #0x0
.L81:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L98:
	.align	2, 0
.L97:
	.word	sPassData
.Lfe12:
	.size	 InitFrontierPass,.Lfe12-InitFrontierPass
	.align	2, 0
	.type	 HideFrontierPass,function
	.thumb_func
HideFrontierPass:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r1, .L115
	ldr	r0, [r1]
	ldrh	r0, [r0, #0x4]
	add	r2, r1, #0
	cmp	r0, #0x5
	bhi	.L100	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L115+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L116:
	.align	2, 0
.L115:
	.word	sPassData
	.word	.L110
	.align	2, 0
	.align	2, 0
.L110:
	.word	.L101
	.word	.L104
	.word	.L106
	.word	.L107
	.word	.L108
	.word	.L109
.L101:
	ldr	r0, [r2]
	ldrb	r0, [r0, #0xe]
	mov	r1, #0xe
	and	r1, r1, r0
	cmp	r1, #0x2
	beq	.L102	@cond_branch
	cmp	r1, #0x4
	beq	.L102	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L100
.L102:
	ldr	r1, [r2]
	mov	r0, #0x2
	b	.L113
.L104:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L100	@cond_branch
	b	.L114
.L106:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	HideBg
	mov	r0, #0x1
	bl	HideBg
	mov	r0, #0x2
	bl	HideBg
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	bl	SetVBlankHBlankCallbacksToNull
	b	.L100
.L107:
	bl	FreeCursorAndSymbolSprites
	b	.L100
.L108:
	bl	ResetGpuRegsAndBgs
	bl	ResetTasks
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	b	.L100
.L109:
	mov	r0, #0x0
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	bl	FreeFrontierPassGfx
	ldr	r0, .L117
	ldr	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r1, #0x4]
	mov	r0, #0x1
	b	.L112
.L118:
	.align	2, 0
.L117:
	.word	sPassData
.L100:
	ldr	r0, .L119
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
.L113:
	strh	r0, [r1, #0x4]
.L114:
	mov	r0, #0x0
.L112:
	add	sp, sp, #0x4
	pop	{r1}
	bx	r1
.L120:
	.align	2, 0
.L119:
	.word	sPassData
.Lfe13:
	.size	 HideFrontierPass,.Lfe13-HideFrontierPass
	.align	2, 0
	.type	 GetCursorAreaFromCoords,function
	.thumb_func
GetCursorAreaFromCoords:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r4, #0x0
	ldr	r7, .L130
	lsl	r1, r1, #0x10
	asr	r5, r1, #0x10
.L125:
	lsl	r0, r4, #0x3
	add	r3, r0, r7
	mov	r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp	r0, r5
	bgt	.L124	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r3, r1]
	cmp	r0, r5
	blt	.L124	@cond_branch
	mov	r0, #0x4
	ldrsh	r1, [r3, r0]
	lsl	r0, r6, #0x10
	asr	r2, r0, #0x10
	cmp	r1, r2
	bgt	.L124	@cond_branch
	mov	r1, #0x6
	ldrsh	r0, [r3, r1]
	cmp	r0, r2
	blt	.L124	@cond_branch
	cmp	r4, #0x5
	bls	.L127	@cond_branch
	ldr	r0, .L130+0x4
	ldr	r0, [r0]
	add	r0, r0, r4
	ldrb	r0, [r0, #0x9]
	cmp	r0, #0
	beq	.L123	@cond_branch
.L127:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L129
.L131:
	.align	2, 0
.L130:
	.word	sPassAreasLayout
	.word	sPassData
.L124:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xc
	bls	.L125	@cond_branch
.L123:
	mov	r0, #0x0
.L129:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 GetCursorAreaFromCoords,.Lfe14-GetCursorAreaFromCoords
	.align	2, 0
	.globl	CB2_ReshowFrontierPass
	.type	 CB2_ReshowFrontierPass,function
	.thumb_func
CB2_ReshowFrontierPass:
	push	{lr}
	bl	InitFrontierPass
	cmp	r0, #0
	beq	.L132	@cond_branch
	ldr	r1, .L140
	ldr	r0, [r1]
	ldrb	r0, [r0, #0xe]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1d
	cmp	r0, #0x1
	blt	.L138	@cond_branch
	cmp	r0, #0x2
	bgt	.L138	@cond_branch
	ldr	r0, .L140+0x4
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L140+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L134
.L141:
	.align	2, 0
.L140:
	.word	sPassData
	.word	Task_DoFadeEffect
	.word	gTasks
.L138:
	ldr	r2, [r1]
	ldrb	r1, [r2, #0xe]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0xe]
	ldr	r0, .L142
	mov	r1, #0x0
	bl	CreateTask
.L134:
	ldr	r0, .L142+0x4
	bl	SetMainCallback2
.L132:
	pop	{r0}
	bx	r0
.L143:
	.align	2, 0
.L142:
	.word	Task_HandleFrontierPassInput
	.word	CB2_FrontierPass
.Lfe15:
	.size	 CB2_ReshowFrontierPass,.Lfe15-CB2_ReshowFrontierPass
	.align	2, 0
	.type	 CB2_ReturnFromRecord,function
	.thumb_func
CB2_ReturnFromRecord:
	push	{r4, lr}
	ldr	r4, .L153
	ldr	r0, [r4]
	bl	AllocateFrontierPassData
	ldr	r0, .L153+0x4
	ldr	r1, [r0]
	ldrh	r0, [r4, #0x4]
	strh	r0, [r1, #0x8]
	ldrh	r0, [r4, #0x6]
	strh	r0, [r1, #0xa]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L146	@cond_branch
	cmp	r0, #0x2
	beq	.L147	@cond_branch
	bl	Overworld_PlaySpecialMapMusic
	b	.L145
.L154:
	.align	2, 0
.L153:
	.word	sSavedPassData
	.word	sPassData
.L146:
	ldr	r0, .L155
	b	.L152
.L156:
	.align	2, 0
.L155:
	.word	0x1cd
.L147:
	mov	r0, #0xe7
	lsl	r0, r0, #0x1
.L152:
	bl	PlayBGM
.L145:
	ldr	r0, .L157
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L158:
	.align	2, 0
.L157:
	.word	CB2_ReshowFrontierPass
.Lfe16:
	.size	 CB2_ReturnFromRecord,.Lfe16-CB2_ReturnFromRecord
	.align	2, 0
	.type	 CB2_ShowFrontierPassFeature,function
	.thumb_func
CB2_ShowFrontierPassFeature:
	push	{lr}
	bl	HideFrontierPass
	cmp	r0, #0
	beq	.L159	@cond_branch
	ldr	r0, .L168
	ldr	r2, [r0]
	ldrb	r0, [r2, #0xe]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1d
	cmp	r0, #0x2
	beq	.L164	@cond_branch
	cmp	r0, #0x2
	bgt	.L167	@cond_branch
	cmp	r0, #0x1
	beq	.L162	@cond_branch
	b	.L159
.L169:
	.align	2, 0
.L168:
	.word	sPassData
.L167:
	cmp	r0, #0x3
	beq	.L163	@cond_branch
	b	.L159
.L162:
	ldr	r0, .L170
	bl	ShowFrontierMap
	b	.L159
.L171:
	.align	2, 0
.L170:
	.word	CB2_ReshowFrontierPass
.L163:
	ldr	r1, .L172
	ldr	r0, [r2]
	str	r0, [r1]
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1, #0x4]
	ldrh	r0, [r2, #0xa]
	strh	r0, [r1, #0x6]
	bl	FreeFrontierPassData
	ldr	r0, .L172+0x4
	bl	PlayRecordedBattle
	b	.L159
.L173:
	.align	2, 0
.L172:
	.word	sSavedPassData
	.word	CB2_ReturnFromRecord
.L164:
	ldr	r0, .L174
	bl	ShowPlayerTrainerCard
.L159:
	pop	{r0}
	bx	r0
.L175:
	.align	2, 0
.L174:
	.word	CB2_ReshowFrontierPass
.Lfe17:
	.size	 CB2_ShowFrontierPassFeature,.Lfe17-CB2_ShowFrontierPassFeature
	.align	2, 0
	.type	 TryCallPassAreaFunction,function
	.thumb_func
TryCallPassAreaFunction:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r4, r3, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x1
	blt	.L185	@cond_branch
	cmp	r1, #0x2
	ble	.L181	@cond_branch
	cmp	r1, #0x3
	bne	.L185	@cond_branch
	ldr	r0, .L186
	ldr	r2, [r0]
	ldrb	r1, [r2, #0xe]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L179	@cond_branch
.L185:
	mov	r0, #0x0
	b	.L184
.L187:
	.align	2, 0
.L186:
	.word	sPassData
.L179:
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x6
	orr	r0, r0, r1
	strb	r0, [r2, #0xe]
	add	r0, r3, #0
	bl	DestroyTask
	ldr	r0, .L188
	bl	SetMainCallback2
	b	.L177
.L189:
	.align	2, 0
.L188:
	.word	CB2_ShowFrontierPassFeature
.L181:
	ldr	r0, .L190
	ldr	r3, [r0]
	mov	r0, #0x7
	and	r2, r2, r0
	lsl	r2, r2, #0x1
	ldrb	r1, [r3, #0xe]
	sub	r0, r0, #0x16
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0xe]
	ldr	r1, .L190+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L190+0x8
	str	r1, [r0]
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
.L177:
	ldr	r0, .L190
	ldr	r2, [r0]
	ldr	r0, .L190+0xc
	ldr	r1, [r0]
	ldr	r0, [r1]
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2, #0x8]
	ldr	r0, [r1]
	ldrh	r0, [r0, #0x22]
	strh	r0, [r2, #0xa]
	mov	r0, #0x1
.L184:
	pop	{r4}
	pop	{r1}
	bx	r1
.L191:
	.align	2, 0
.L190:
	.word	sPassData
	.word	gTasks
	.word	Task_DoFadeEffect
	.word	sPassGfx
.Lfe18:
	.size	 TryCallPassAreaFunction,.Lfe18-TryCallPassAreaFunction
	.align	2, 0
	.type	 Task_HandleFrontierPassInput,function
	.thumb_func
Task_HandleFrontierPassInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	ldr	r2, .L210
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L193	@cond_branch
	ldr	r0, .L210+0x4
	ldr	r4, [r0]
	ldr	r1, [r4]
	ldrh	r3, [r1, #0x22]
	mov	r7, #0x22
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x8
	ble	.L193	@cond_branch
	sub	r0, r3, #0x2
	strh	r0, [r1, #0x22]
	ldr	r1, [r4]
	mov	r3, #0x22
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x7
	bgt	.L194	@cond_branch
	mov	r0, #0x2
	strh	r0, [r1, #0x22]
.L194:
	mov	r5, #0x1
.L193:
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L195	@cond_branch
	ldr	r0, .L210+0x4
	ldr	r4, [r0]
	ldr	r1, [r4]
	ldrh	r3, [r1, #0x22]
	mov	r7, #0x22
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x87
	bgt	.L195	@cond_branch
	add	r0, r3, #0x2
	strh	r0, [r1, #0x22]
	ldr	r1, [r4]
	mov	r3, #0x22
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x88
	ble	.L196	@cond_branch
	mov	r0, #0x88
	strh	r0, [r1, #0x22]
.L196:
	mov	r5, #0x1
.L195:
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L197	@cond_branch
	ldr	r0, .L210+0x4
	ldr	r4, [r0]
	ldr	r1, [r4]
	ldrh	r3, [r1, #0x20]
	mov	r7, #0x20
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x5
	ble	.L197	@cond_branch
	sub	r0, r3, #0x2
	strh	r0, [r1, #0x20]
	ldr	r1, [r4]
	mov	r3, #0x20
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x4
	bgt	.L198	@cond_branch
	mov	r0, #0x5
	strh	r0, [r1, #0x20]
.L198:
	mov	r5, #0x1
.L197:
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L199	@cond_branch
	ldr	r0, .L210+0x4
	ldr	r4, [r0]
	ldr	r1, [r4]
	ldrh	r3, [r1, #0x20]
	mov	r7, #0x20
	ldrsh	r0, [r1, r7]
	cmp	r0, #0xe7
	bgt	.L199	@cond_branch
	add	r0, r3, #0x2
	strh	r0, [r1, #0x20]
	ldr	r1, [r4]
	mov	r3, #0x20
	ldrsh	r0, [r1, r3]
	cmp	r0, #0xe8
	ble	.L200	@cond_branch
	mov	r0, #0xe8
	strh	r0, [r1, #0x20]
.L200:
	mov	r5, #0x1
.L199:
	cmp	r5, #0
	bne	.L201	@cond_branch
	ldr	r4, .L210+0x8
	ldr	r0, [r4]
	ldrb	r3, [r0, #0xc]
	cmp	r3, #0
	beq	.L202	@cond_branch
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L202	@cond_branch
	cmp	r3, #0x3
	bhi	.L203	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xc]
	add	r0, r6, #0
	bl	TryCallPassAreaFunction
	cmp	r0, #0
	bne	.L192	@cond_branch
	b	.L202
.L211:
	.align	2, 0
.L210:
	.word	gMain
	.word	sPassGfx
	.word	sPassData
.L203:
	cmp	r3, #0x4
	bne	.L202	@cond_branch
	mov	r0, #0x3
	bl	PlaySE
	ldr	r0, .L212
	bl	SetMainCallback2
	add	r0, r6, #0
	bl	DestroyTask
.L202:
	ldr	r0, .L212+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L192	@cond_branch
	mov	r0, #0x3
	bl	PlaySE
	ldr	r0, .L212
	bl	SetMainCallback2
	add	r0, r6, #0
	bl	DestroyTask
	b	.L192
.L213:
	.align	2, 0
.L212:
	.word	CB2_HideFrontierPass
	.word	gMain
.L201:
	ldr	r0, .L214
	ldr	r0, [r0]
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x20]
	sub	r0, r0, #0x5
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldrh	r1, [r1, #0x22]
	add	r1, r1, #0x5
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetCursorAreaFromCoords
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L214+0x4
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xc]
	cmp	r0, r5
	beq	.L192	@cond_branch
	add	r0, r5, #0
	bl	PrintAreaDescription
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xc]
	strb	r0, [r1, #0xd]
	ldr	r0, [r4]
	strb	r5, [r0, #0xc]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xc]
	ldrb	r1, [r1, #0xd]
	bl	sub_80C6104
.L192:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L215:
	.align	2, 0
.L214:
	.word	sPassGfx
	.word	sPassData
.Lfe19:
	.size	 Task_HandleFrontierPassInput,.Lfe19-Task_HandleFrontierPassInput
	.align	2, 0
	.type	 Task_DoFadeEffect,function
	.thumb_func
Task_DoFadeEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r5, r0, #0x3
	ldr	r0, .L235
	mov	r8, r0
	add	r6, r5, r0
	ldr	r7, .L235+0x4
	ldr	r0, [r7]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0x1
	beq	.L221	@cond_branch
	cmp	r0, #0x1
	bgt	.L233	@cond_branch
	cmp	r0, #0
	beq	.L218	@cond_branch
	b	.L217
.L236:
	.align	2, 0
.L235:
	.word	gTasks+0x8
	.word	sPassData
.L233:
	cmp	r0, #0x2
	bne	.LCB1876
	b	.L226	@long jump
.LCB1876:
	b	.L217
.L218:
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L219	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	sub_80C5F58
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r1, #0
	strh	r0, [r6, #0x2]
	strh	r0, [r6, #0x4]
	mov	r0, #0x15
	strh	r0, [r6, #0x6]
	strh	r0, [r6, #0x8]
	mov	r0, #0x1
	neg	r0, r0
	ldr	r1, .L237
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L220
.L238:
	.align	2, 0
.L237:
	.word	0x7fff
.L219:
	mov	r1, #0xfe
	lsl	r1, r1, #0x1
	add	r0, r1, #0
	strh	r0, [r6, #0x2]
	strh	r0, [r6, #0x4]
	mov	r1, #0x15
	neg	r1, r1
	add	r0, r1, #0
	strh	r0, [r6, #0x6]
	strh	r0, [r6, #0x8]
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	bl	LoadCursorAndSymbolSprites
	ldr	r0, .L239
	bl	SetVBlankCallback
	mov	r5, #0x1
	neg	r5, r5
	ldr	r4, .L239+0x4
	add	r0, r5, #0
	mov	r1, #0x10
	add	r2, r4, #0
	bl	BlendPalettes
	str	r4, [sp]
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L220:
	ldr	r4, .L239+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x2c
	mov	r1, #0x1
	strb	r1, [r0]
	mov	r1, #0x2
	ldrsh	r0, [r6, r1]
	bl	MathUtil_Inv16
	ldr	r1, [r4]
	strh	r0, [r1, #0x2e]
	mov	r1, #0x4
	ldrsh	r0, [r6, r1]
	bl	MathUtil_Inv16
	ldr	r1, [r4]
	strh	r0, [r1, #0x30]
	b	.L217
.L240:
	.align	2, 0
.L239:
	.word	VblankCb_FrontierPass
	.word	0x7fff
	.word	sPassGfx
.L221:
	bl	UpdatePaletteFade
	ldrh	r0, [r6, #0x6]
	ldrh	r1, [r6, #0x2]
	add	r0, r0, r1
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x8]
	ldrh	r1, [r6, #0x4]
	add	r0, r0, r1
	strh	r0, [r6, #0x4]
	mov	r1, #0x2
	ldrsh	r0, [r6, r1]
	bl	MathUtil_Inv16
	ldr	r4, .L241
	ldr	r1, [r4]
	strh	r0, [r1, #0x2e]
	mov	r1, #0x4
	ldrsh	r0, [r6, r1]
	bl	MathUtil_Inv16
	ldr	r1, [r4]
	strh	r0, [r1, #0x30]
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L222	@cond_branch
	mov	r0, #0x2
	ldrsh	r1, [r6, r0]
	mov	r0, #0xfe
	lsl	r0, r0, #0x1
	cmp	r1, r0
	ble	.L216	@cond_branch
	b	.L217
.L242:
	.align	2, 0
.L241:
	.word	sPassGfx
.L222:
	mov	r0, #0x2
	ldrsh	r1, [r6, r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L216	@cond_branch
	b	.L217
.L226:
	ldr	r0, .L243
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0x2c
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L227	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
.L227:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L216	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L229	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L243+0x4
	bl	SetMainCallback2
	b	.L230
.L244:
	.align	2, 0
.L243:
	.word	sPassGfx
	.word	CB2_ShowFrontierPassFeature
.L229:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_80C5F58
	ldr	r2, [r7]
	ldrb	r1, [r2, #0xe]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0xe]
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r5, r0
	ldr	r1, .L245
	str	r1, [r0]
.L230:
	mov	r0, #0x2
	mov	r1, #0x6
	mov	r2, #0x0
	bl	SetBgAttribute
	ldr	r0, .L245+0x4
	ldr	r1, [r0]
	mov	r0, #0x0
	b	.L234
.L246:
	.align	2, 0
.L245:
	.word	Task_HandleFrontierPassInput
	.word	sPassData
.L217:
	ldr	r0, .L247
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
.L234:
	strh	r0, [r1, #0x4]
.L216:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L248:
	.align	2, 0
.L247:
	.word	sPassData
.Lfe20:
	.size	 Task_DoFadeEffect,.Lfe20-Task_DoFadeEffect
	.align	2, 0
	.type	 ShowAndPrintWindows,function
	.thumb_func
ShowAndPrintWindows:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	mov	r4, #0x0
.L253:
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L253	@cond_branch
	ldr	r4, .L260
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x60
	bl	GetStringCenterAlignXOffset
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	ldr	r6, .L260+0x4
	str	r6, [sp]
	mov	r0, #0x0
	mov	r8, r0
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x5
	bl	AddTextPrinterParameterized3
	ldr	r4, .L260+0x8
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x60
	bl	GetStringCenterAlignXOffset
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, #0x5
	bl	AddTextPrinterParameterized3
	str	r6, [sp]
	mov	r0, r8
	str	r0, [sp, #0x4]
	ldr	r0, .L260+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x8
	mov	r2, #0x5
	mov	r3, #0x4
	bl	AddTextPrinterParameterized3
	ldr	r4, .L260+0x10
	ldr	r5, .L260+0x14
	ldr	r0, [r5]
	ldrh	r1, [r0, #0x6]
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x8
	add	r1, r4, #0
	mov	r2, #0x5b
	bl	GetStringRightAlignXOffset
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x8
	mov	r3, #0x10
	bl	AddTextPrinterParameterized3
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x8]
	sub	r0, r0, #0x5
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldrh	r1, [r1, #0xa]
	add	r1, r1, #0x5
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetCursorAreaFromCoords
	ldr	r1, [r5]
	strb	r0, [r1, #0xc]
	ldr	r0, [r5]
	mov	r1, r8
	strb	r1, [r0, #0xd]
	ldr	r0, [r5]
	ldrb	r0, [r0, #0xc]
	bl	PrintAreaDescription
	mov	r4, #0x0
.L258:
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L258	@cond_branch
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L261:
	.align	2, 0
.L260:
	.word	gText_SymbolsEarned
	.word	sTextColors
	.word	gText_BattleRecord
	.word	gText_BattlePoints
	.word	gStringVar4
	.word	sPassData
.Lfe21:
	.size	 ShowAndPrintWindows,.Lfe21-ShowAndPrintWindows
	.align	2, 0
	.type	 PrintAreaDescription,function
	.thumb_func
PrintAreaDescription:
	push	{r4, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x3
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	cmp	r4, #0x3
	bne	.L263	@cond_branch
	ldr	r0, .L266
	ldr	r0, [r0]
	ldrb	r0, [r0, #0xe]
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L263	@cond_branch
	ldr	r0, .L266+0x4
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r0, .L266+0x8
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	b	.L264
.L267:
	.align	2, 0
.L266:
	.word	sPassData
	.word	sTextColors+0x3
	.word	sPassAreaDescriptions
.L263:
	cmp	r4, #0
	beq	.L264	@cond_branch
	ldr	r0, .L268
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r1, .L268+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
.L264:
	mov	r0, #0x3
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L269:
	.align	2, 0
.L268:
	.word	sTextColors+0x3
	.word	sPassAreaDescriptions
.Lfe22:
	.size	 PrintAreaDescription,.Lfe22-PrintAreaDescription
	.align	2, 0
	.type	 sub_80C5F58,function
	.thumb_func
sub_80C5F58:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r0, .L282
	ldr	r0, [r0]
	ldrb	r0, [r0, #0xe]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1d
	cmp	r0, #0x1
	beq	.L272	@cond_branch
	cmp	r0, #0x2
	beq	.L275	@cond_branch
	b	.L270
.L283:
	.align	2, 0
.L282:
	.word	sPassData
.L272:
	cmp	r2, #0
	beq	.L273	@cond_branch
	ldr	r0, .L284
	ldr	r0, [r0]
	ldr	r1, [r0, #0x20]
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r2, #0x10
	mov	r3, #0x3
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L271
.L285:
	.align	2, 0
.L284:
	.word	sPassGfx
.L273:
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x3
	bl	FillBgTilemapBufferRect
	b	.L271
.L275:
	cmp	r2, #0
	beq	.L276	@cond_branch
	ldr	r0, .L286
	ldr	r0, [r0]
	ldr	r1, [r0, #0x20]
	add	r1, r1, #0x54
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r2, #0x10
	mov	r3, #0xa
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L271
.L287:
	.align	2, 0
.L286:
	.word	sPassGfx
.L276:
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0xa
	bl	FillBgTilemapBufferRect
.L271:
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	cmp	r7, #0
	beq	.L280	@cond_branch
	mov	r4, #0xfe
	lsl	r4, r4, #0x1
	add	r0, r4, #0
	bl	MathUtil_Inv16
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	asr	r6, r6, #0x10
	add	r0, r4, #0
	bl	MathUtil_Inv16
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r5, .L288
	ldr	r1, .L288+0x4
	ldr	r1, [r1]
	ldrb	r4, [r1, #0xe]
	lsl	r4, r4, #0x1c
	lsr	r1, r4, #0x1d
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r1, r1, #0x8
	lsr	r2, r4, #0x1d
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x2
	add	r3, r5, #0x2
	mov	r8, r3
	add	r2, r2, r8
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	lsl	r2, r2, #0x8
	lsr	r3, r4, #0x1d
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x2
	add	r3, r3, r5
	mov	r5, #0x0
	ldrsh	r3, [r3, r5]
	lsr	r4, r4, #0x1d
	sub	r4, r4, #0x1
	lsl	r4, r4, #0x2
	add	r4, r4, r8
	mov	r5, #0x0
	ldrsh	r4, [r4, r5]
	str	r4, [sp]
	str	r6, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	bl	SetBgAffine
	b	.L270
.L289:
	.align	2, 0
.L288:
	.word	gUnknown_085713E0
	.word	sPassData
.L280:
	mov	r4, #0x80
	lsl	r4, r4, #0x1
	add	r0, r4, #0
	bl	MathUtil_Inv16
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	asr	r6, r6, #0x10
	add	r0, r4, #0
	bl	MathUtil_Inv16
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r5, .L290
	ldr	r1, .L290+0x4
	ldr	r1, [r1]
	ldrb	r4, [r1, #0xe]
	lsl	r4, r4, #0x1c
	lsr	r1, r4, #0x1d
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r1, r1, #0x8
	lsr	r2, r4, #0x1d
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x2
	add	r3, r5, #0x2
	mov	r8, r3
	add	r2, r2, r8
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	lsl	r2, r2, #0x8
	lsr	r3, r4, #0x1d
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x2
	add	r3, r3, r5
	mov	r5, #0x0
	ldrsh	r3, [r3, r5]
	lsr	r4, r4, #0x1d
	sub	r4, r4, #0x1
	lsl	r4, r4, #0x2
	add	r4, r4, r8
	mov	r5, #0x0
	ldrsh	r4, [r4, r5]
	str	r4, [sp]
	str	r6, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r7, [sp, #0xc]
	mov	r0, #0x2
	bl	SetBgAffine
.L270:
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L291:
	.align	2, 0
.L290:
	.word	gUnknown_085713E0
	.word	sPassData
.Lfe23:
	.size	 sub_80C5F58,.Lfe23-sub_80C5F58
	.align	2, 0
	.type	 sub_80C6104,function
	.thumb_func
sub_80C6104:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	cmp	r5, #0x2
	beq	.L295	@cond_branch
	cmp	r5, #0x2
	bgt	.L304	@cond_branch
	cmp	r5, #0x1
	beq	.L294	@cond_branch
	b	.L301
.L304:
	cmp	r5, #0x3
	beq	.L296	@cond_branch
	cmp	r5, #0x4
	beq	.L300	@cond_branch
	b	.L301
.L294:
	ldr	r0, .L318
	ldr	r0, [r0]
	ldr	r1, [r0, #0x24]
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x10
	mov	r3, #0x3
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L293
.L319:
	.align	2, 0
.L318:
	.word	sPassGfx
.L295:
	ldr	r0, .L320
	ldr	r0, [r0]
	ldr	r1, [r0, #0x24]
	mov	r0, #0xa8
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x10
	b	.L316
.L321:
	.align	2, 0
.L320:
	.word	sPassGfx
.L296:
	ldr	r0, .L322
	ldr	r0, [r0]
	ldrb	r1, [r0, #0xe]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L301	@cond_branch
	ldr	r0, .L322+0x4
	ldr	r0, [r0]
	ldr	r1, [r0, #0x28]
	mov	r0, #0xc
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x2
.L316:
	mov	r3, #0xa
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L293
.L323:
	.align	2, 0
.L322:
	.word	sPassData
	.word	sPassGfx
.L300:
	ldr	r1, .L324
	mov	r0, #0x9
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x15
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L293
.L325:
	.align	2, 0
.L324:
	.word	gUnknown_08DE3350
.L301:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L292	@cond_branch
.L293:
	cmp	r4, #0x2
	beq	.L307	@cond_branch
	cmp	r4, #0x2
	bgt	.L315	@cond_branch
	cmp	r4, #0x1
	beq	.L306	@cond_branch
	b	.L312
.L315:
	cmp	r4, #0x3
	beq	.L308	@cond_branch
	cmp	r4, #0x4
	beq	.L311	@cond_branch
	b	.L312
.L306:
	ldr	r0, .L326
	ldr	r0, [r0]
	ldr	r1, [r0, #0x24]
	add	r1, r1, #0xa8
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x10
	mov	r3, #0x3
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L305
.L327:
	.align	2, 0
.L326:
	.word	sPassGfx
.L307:
	ldr	r0, .L328
	ldr	r0, [r0]
	ldr	r1, [r0, #0x24]
	mov	r0, #0xfc
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x7
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x10
	b	.L317
.L329:
	.align	2, 0
.L328:
	.word	sPassGfx
.L308:
	ldr	r0, .L330
	ldr	r0, [r0]
	ldrb	r1, [r0, #0xe]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L292	@cond_branch
	ldr	r0, .L330+0x4
	ldr	r0, [r0]
	ldr	r1, [r0, #0x28]
	add	r1, r1, #0x48
	mov	r0, #0xc
	str	r0, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x2
.L317:
	mov	r3, #0xa
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L305
.L331:
	.align	2, 0
.L330:
	.word	sPassData
	.word	sPassGfx
.L311:
	ldr	r1, .L332
	mov	r0, #0x9
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x15
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L305
.L333:
	.align	2, 0
.L332:
	.word	gUnknown_08DE3374
.L312:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L292	@cond_branch
.L305:
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
.L292:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 sub_80C6104,.Lfe24-sub_80C6104
	.align	2, 0
	.type	 sub_80C629C,function
	.thumb_func
sub_80C629C:
	push	{r4, lr}
	ldr	r1, .L335
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	ldr	r4, .L335+0x4
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xc]
	ldrb	r1, [r1, #0xd]
	bl	sub_80C6104
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xe]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	sub_80C5F58
	bl	ShowAndPrintWindows
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L336:
	.align	2, 0
.L335:
	.word	gUnknown_08DE3060
	.word	sPassData
.Lfe25:
	.size	 sub_80C629C,.Lfe25-sub_80C629C
	.align	2, 0
	.type	 LoadCursorAndSymbolSprites,function
	.thumb_func
LoadCursorAndSymbolSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	mov	r5, #0x0
	bl	FreeAllSpritePalettes
	bl	ResetAffineAnimData
	ldr	r0, .L344
	bl	LoadSpritePalettes
	ldr	r4, .L344+0x4
	add	r0, r4, #0
	bl	LoadCompressedSpriteSheet
	add	r4, r4, #0x10
	add	r0, r4, #0
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L344+0x8
	ldr	r1, .L344+0xc
	ldr	r2, [r1]
	mov	r3, #0x8
	ldrsh	r1, [r2, r3]
	mov	r6, #0xa
	ldrsh	r2, [r2, r6]
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L344+0x10
	ldr	r2, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L344+0x14
	add	r1, r1, r0
	str	r1, [r2]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	mov	r8, sp
	mov	r9, r3
.L341:
	ldr	r0, .L344+0xc
	ldr	r0, [r0]
	add	r0, r0, #0xf
	add	r2, r0, r5
	ldrb	r0, [r2]
	add	r4, r5, #0x1
	cmp	r0, #0
	beq	.L340	@cond_branch
	mov	r1, sp
	ldr	r0, .L344+0x18
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	mov	r7, r8
	ldrh	r0, [r7, #0x2]
	ldr	r1, .L344+0x1c
	add	r0, r0, r1
	ldrb	r2, [r2]
	add	r0, r0, r2
	strh	r0, [r7, #0x2]
	ldr	r1, .L344+0x20
	add	r0, r5, #0x6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x4]
	add	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	ldrh	r2, [r0]
	add	r2, r2, #0x6
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	lsl	r3, r4, #0x18
	lsr	r3, r3, #0x18
	mov	r0, sp
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r3, r9
	ldr	r2, [r3]
	lsl	r3, r5, #0x2
	add	r2, r2, #0x4
	add	r2, r2, r3
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L344+0x14
	add	r1, r1, r0
	str	r1, [r2]
	ldrb	r2, [r1, #0x5]
	mov	r6, #0xd
	neg	r6, r6
	add	r0, r6, #0
	and	r2, r2, r0
	mov	r0, #0x8
	orr	r2, r2, r0
	strb	r2, [r1, #0x5]
	mov	r7, r9
	ldr	r0, [r7]
	add	r0, r0, #0x4
	add	r0, r0, r3
	ldr	r0, [r0]
	add	r1, r5, #0
	bl	StartSpriteAnim
.L340:
	lsl	r0, r4, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x6
	bls	.L341	@cond_branch
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L345:
	.align	2, 0
.L344:
	.word	sSpritePalettes
	.word	sCursorSpriteSheets
	.word	sSpriteTemplates_Cursors
	.word	sPassData
	.word	sPassGfx
	.word	gSprites
	.word	sSpriteTemplate_Medal
	.word	0xffff
	.word	sPassAreasLayout
.Lfe26:
	.size	 LoadCursorAndSymbolSprites,.Lfe26-LoadCursorAndSymbolSprites
	.align	2, 0
	.type	 FreeCursorAndSymbolSprites,function
	.thumb_func
FreeCursorAndSymbolSprites:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r4, .L353
	ldr	r0, [r4]
	ldr	r0, [r0]
	bl	DestroySprite
	ldr	r0, [r4]
	str	r5, [r0]
	add	r6, r4, #0
.L350:
	ldr	r0, [r6]
	lsl	r4, r5, #0x2
	add	r0, r0, #0x4
	add	r0, r0, r4
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L349	@cond_branch
	bl	DestroySprite
	ldr	r0, [r6]
	add	r0, r0, #0x4
	add	r0, r0, r4
	mov	r1, #0x0
	str	r1, [r0]
.L349:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x6
	bls	.L350	@cond_branch
	bl	FreeAllSpritePalettes
	mov	r0, #0x2
	bl	FreeSpriteTilesByTag
	mov	r0, #0x0
	bl	FreeSpriteTilesByTag
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L354:
	.align	2, 0
.L353:
	.word	sPassGfx
.Lfe27:
	.size	 FreeCursorAndSymbolSprites,.Lfe27-FreeCursorAndSymbolSprites
	.align	2, 0
	.type	 SpriteCb_Dummy,function
	.thumb_func
SpriteCb_Dummy:
	bx	lr
.Lfe28:
	.size	 SpriteCb_Dummy,.Lfe28-SpriteCb_Dummy
	.align	2, 0
	.type	 ShowFrontierMap,function
	.thumb_func
ShowFrontierMap:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L358
	ldr	r0, [r5]
	cmp	r0, #0
	beq	.L357	@cond_branch
	add	r0, r4, #0
	bl	SetMainCallback2
.L357:
	ldr	r0, .L358+0x4
	bl	AllocZeroed
	str	r0, [r5]
	str	r4, [r0]
	bl	ResetTasks
	ldr	r0, .L358+0x8
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L358+0xc
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L359:
	.align	2, 0
.L358:
	.word	sMapData
	.word	0x3014
	.word	Task_HandleFrontierMap
	.word	CB2_FrontierPass
.Lfe29:
	.size	 ShowFrontierMap,.Lfe29-ShowFrontierMap
	.align	2, 0
	.type	 FreeFrontierMap,function
	.thumb_func
FreeFrontierMap:
	push	{r4, lr}
	bl	ResetTasks
	ldr	r4, .L361
	ldr	r0, [r4]
	ldr	r0, [r0]
	bl	SetMainCallback2
	ldr	r0, [r4]
	ldr	r2, .L361+0x4
	mov	r1, #0x0
	bl	memset
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	sMapData
	.word	0x3014
.Lfe30:
	.size	 FreeFrontierMap,.Lfe30-FreeFrontierMap
	.align	2, 0
	.type	 InitFrontierMap,function
	.thumb_func
InitFrontierMap:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L380
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0x7
	bls	.LCB3266
	b	.L364	@long jump
.LCB3266:
	lsl	r0, r0, #0x2
	ldr	r1, .L380+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L381:
	.align	2, 0
.L380:
	.word	sPassData
	.word	.L375
	.align	2, 0
	.align	2, 0
.L375:
	.word	.L365
	.word	.L366
	.word	.L367
	.word	.L368
	.word	.L369
	.word	.L370
	.word	.L372
	.word	.L373
.L365:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	bl	SetVBlankHBlankCallbacksToNull
	b	.L364
.L366:
	bl	ResetGpuRegsAndBgs
	b	.L364
.L367:
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetTempTileDataBuffers
	b	.L364
.L368:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L382
	mov	r0, #0x0
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r4, .L382+0x4
	ldr	r1, [r4]
	add	r1, r1, #0x12
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L382+0x8
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L382+0xc
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	mov	r5, #0x1e
	str	r5, [sp]
	mov	r4, #0x14
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L378
.L383:
	.align	2, 0
.L382:
	.word	sMapBgTemplates
	.word	sMapData
	.word	0x1012
	.word	0x2012
.L369:
	ldr	r0, .L384
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	bl	PrintOnFrontierMap
	ldr	r1, .L384+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L364
.L385:
	.align	2, 0
.L384:
	.word	sMapWindowTemplates
	.word	gUnknown_0856FBBC
.L370:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L379	@cond_branch
	ldr	r0, .L386
	mov	r2, #0xd0
	lsl	r2, r2, #0x1
	mov	r1, #0x0
	bl	LoadPalette
	mov	r0, #0x0
	bl	GetTextWindowPalette
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L386+0x4
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
.L378:
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	b	.L364
.L387:
	.align	2, 0
.L386:
	.word	gUnknown_08DE07C8
	.word	gUnknown_08570E00
.L372:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	bl	InitFrontierMapSprites
	ldr	r0, .L388
	bl	SetVBlankCallback
	mov	r5, #0x1
	neg	r5, r5
	ldr	r4, .L388+0x4
	add	r0, r5, #0
	mov	r1, #0x10
	add	r2, r4, #0
	bl	BlendPalettes
	str	r4, [sp]
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L364
.L389:
	.align	2, 0
.L388:
	.word	VblankCb_FrontierPass
	.word	0x7fff
.L373:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L379	@cond_branch
	ldr	r0, .L390
	ldr	r0, [r0]
	strh	r1, [r0, #0x4]
	mov	r0, #0x1
	b	.L377
.L391:
	.align	2, 0
.L390:
	.word	sPassData
.L364:
	ldr	r0, .L392
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
.L379:
	mov	r0, #0x0
.L377:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L393:
	.align	2, 0
.L392:
	.word	sPassData
.Lfe31:
	.size	 InitFrontierMap,.Lfe31-InitFrontierMap
	.align	2, 0
	.type	 ExitFrontierMap,function
	.thumb_func
ExitFrontierMap:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L410
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0x5
	bhi	.L395	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L410+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L411:
	.align	2, 0
.L410:
	.word	sPassData
	.word	.L406
	.align	2, 0
	.align	2, 0
.L406:
	.word	.L396
	.word	.L397
	.word	.L399
	.word	.L400
	.word	.L404
	.word	.L405
.L396:
	mov	r0, #0x1
	neg	r0, r0
	ldr	r1, .L412
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L395
.L413:
	.align	2, 0
.L412:
	.word	0x7fff
.L397:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L409	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	HideBg
	mov	r0, #0x1
	bl	HideBg
	mov	r0, #0x2
	bl	HideBg
	b	.L395
.L399:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	bl	SetVBlankHBlankCallbacksToNull
	b	.L395
.L400:
	ldr	r4, .L414
	ldr	r0, [r4]
	ldr	r0, [r0, #0x4]
	cmp	r0, #0
	beq	.L401	@cond_branch
	bl	DestroySprite
	mov	r0, #0x0
	bl	FreeSpriteTilesByTag
.L401:
	ldr	r0, [r4]
	ldr	r0, [r0, #0xc]
	cmp	r0, #0
	beq	.L402	@cond_branch
	bl	DestroySprite
	mov	r0, #0x1
	bl	FreeSpriteTilesByTag
.L402:
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L403	@cond_branch
	bl	DestroySprite
	mov	r0, #0x4
	bl	FreeSpriteTilesByTag
.L403:
	bl	FreeAllWindowBuffers
	b	.L395
.L415:
	.align	2, 0
.L414:
	.word	sMapData
.L404:
	bl	ResetGpuRegsAndBgs
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	b	.L395
.L405:
	mov	r0, #0x0
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	ldr	r0, .L416
	ldr	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r1, #0x4]
	mov	r0, #0x1
	b	.L408
.L417:
	.align	2, 0
.L416:
	.word	sPassData
.L395:
	ldr	r0, .L418
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
.L409:
	mov	r0, #0x0
.L408:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.L419:
	.align	2, 0
.L418:
	.word	sPassData
.Lfe32:
	.size	 ExitFrontierMap,.Lfe32-ExitFrontierMap
	.align	2, 0
	.type	 Task_HandleFrontierMap,function
	.thumb_func
Task_HandleFrontierMap:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L448
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x5
	bls	.LCB3692
	b	.L421	@long jump
.LCB3692:
	lsl	r0, r0, #0x2
	ldr	r1, .L448+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L449:
	.align	2, 0
.L448:
	.word	gTasks+0x8
	.word	.L443
	.align	2, 0
	.align	2, 0
.L443:
	.word	.L422
	.word	.L424
	.word	.L434
	.word	.L437
	.word	.L440
	.word	.L442
.L422:
	bl	InitFrontierMap
	b	.L445
.L424:
	ldr	r0, .L450
	ldrh	r1, [r0, #0x2e]
	mov	r2, #0x2
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L425	@cond_branch
	mov	r0, #0x3
	bl	PlaySE
	mov	r0, #0x4
	b	.L446
.L451:
	.align	2, 0
.L450:
	.word	gMain
.L425:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L427	@cond_branch
	ldr	r0, .L452
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x10]
	cmp	r0, #0x5
	bls	.L428	@cond_branch
	mov	r0, #0x0
	bl	HandleFrontierMapCursorMove
	b	.L420
.L453:
	.align	2, 0
.L452:
	.word	sMapData
.L428:
	strh	r2, [r4]
	b	.L420
.L427:
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L420	@cond_branch
	ldr	r0, .L454
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x10]
	cmp	r0, #0
	bne	.L432	@cond_branch
	mov	r0, #0x1
	bl	HandleFrontierMapCursorMove
	b	.L420
.L455:
	.align	2, 0
.L454:
	.word	sMapData
.L432:
	mov	r0, #0x3
	b	.L446
.L434:
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	ble	.L435	@cond_branch
	mov	r0, #0x0
	bl	HandleFrontierMapCursorMove
	mov	r0, #0x0
	strh	r0, [r4, #0x2]
	mov	r0, #0x1
	b	.L446
.L435:
	ldr	r0, .L456
	ldr	r0, [r0]
	ldr	r1, [r0, #0x4]
	ldrh	r0, [r1, #0x22]
	add	r0, r0, #0x4
	b	.L447
.L457:
	.align	2, 0
.L456:
	.word	sMapData
.L437:
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	ble	.L438	@cond_branch
	mov	r0, #0x1
	bl	HandleFrontierMapCursorMove
	mov	r0, #0x0
	strh	r0, [r4, #0x2]
	mov	r0, #0x1
	b	.L446
.L438:
	ldr	r0, .L458
	ldr	r0, [r0]
	ldr	r1, [r0, #0x4]
	ldrh	r0, [r1, #0x22]
	sub	r0, r0, #0x4
.L447:
	strh	r0, [r1, #0x22]
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	b	.L420
.L459:
	.align	2, 0
.L458:
	.word	sMapData
.L440:
	bl	ExitFrontierMap
.L445:
	cmp	r0, #0
	bne	.L421	@cond_branch
	b	.L420
.L442:
	add	r0, r2, #0
	bl	DestroyTask
	bl	FreeFrontierMap
	b	.L420
.L421:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
.L446:
	strh	r0, [r4]
.L420:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 Task_HandleFrontierMap,.Lfe33-Task_HandleFrontierMap
	.align	2, 0
	.type	 MapNumToFrontierFacilityId,function
	.thumb_func
MapNumToFrontierFacilityId:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r2, .L477
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	bls	.L462	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0xf
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bhi	.L461	@cond_branch
.L462:
	mov	r0, #0x1
	b	.L476
.L478:
	.align	2, 0
.L477:
	.word	-0x50000
.L461:
	add	r0, r1, #0
	sub	r0, r0, #0x12
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	bhi	.L464	@cond_branch
	mov	r0, #0x2
	b	.L476
.L464:
	add	r0, r1, #0
	sub	r0, r0, #0x16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bhi	.L466	@cond_branch
	mov	r0, #0x3
	b	.L476
.L466:
	add	r0, r1, #0
	sub	r0, r0, #0x1c
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bhi	.L468	@cond_branch
	mov	r0, #0x4
	b	.L476
.L468:
	add	r0, r1, #0
	sub	r0, r0, #0x1f
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bhi	.L470	@cond_branch
	mov	r0, #0x5
	b	.L476
.L470:
	add	r0, r1, #0
	sub	r0, r0, #0x22
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x5
	bhi	.L472	@cond_branch
	mov	r0, #0x6
	b	.L476
.L472:
	add	r0, r1, #0
	sub	r0, r0, #0x19
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bls	.L474	@cond_branch
	mov	r0, #0x0
	b	.L476
.L474:
	mov	r0, #0x7
.L476:
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 MapNumToFrontierFacilityId,.Lfe34-MapNumToFrontierFacilityId
	.align	2, 0
	.type	 InitFrontierMapSprites,function
	.thumb_func
InitFrontierMapSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	mov	r7, #0x0
	bl	FreeAllSpritePalettes
	ldr	r0, .L497
	bl	LoadSpritePalettes
	ldr	r6, .L497+0x4
	add	r0, r6, #0
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L497+0x8
	mov	r8, r0
	ldr	r4, .L497+0xc
	ldr	r0, [r4]
	ldrb	r2, [r0, #0x10]
	lsl	r2, r2, #0x4
	add	r2, r2, #0x8
	mov	r0, r8
	mov	r1, #0x9b
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, [r4]
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	ldr	r2, .L497+0x10
	mov	r9, r2
	add	r1, r1, r9
	str	r1, [r0, #0x4]
	ldrb	r2, [r1, #0x5]
	mov	r5, #0xd
	neg	r5, r5
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldr	r0, [r4]
	ldr	r1, [r0, #0x4]
	add	r1, r1, #0x3f
	ldrb	r0, [r1]
	mov	r2, #0x1
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r4]
	ldr	r0, [r0, #0x4]
	mov	r1, #0x1
	bl	StartSpriteAnim
	add	r6, r6, #0x8
	add	r0, r6, #0
	bl	LoadCompressedSpriteSheet
	mov	r3, #0x18
	add	r8, r8, r3
	ldr	r6, .L497+0x14
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x10]
	lsl	r0, r0, #0x4
	add	r0, r0, r6
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	mov	r3, #0xa
	ldrsh	r2, [r0, r3]
	mov	r0, r8
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, [r4]
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	str	r0, [r1, #0xc]
	ldrb	r1, [r0, #0x5]
	and	r5, r5, r1
	strb	r5, [r0, #0x5]
	ldr	r1, [r4]
	ldr	r0, [r1, #0xc]
	ldrb	r1, [r1, #0x10]
	lsl	r1, r1, #0x4
	add	r1, r1, r6
	ldrb	r1, [r1, #0xc]
	bl	StartSpriteAnim
	bl	GetCurrentRegionMapSectionId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3a
	beq	.L481	@cond_branch
	cmp	r5, #0xca
	beq	.LCB4096
	b	.L480	@long jump
.LCB4096:
.L481:
	ldr	r4, .L497+0x18
	ldr	r2, [r4]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, #0x4
	beq	.L483	@cond_branch
	cmp	r0, #0xe
	bne	.L482	@cond_branch
	mov	r7, #0x37
.L483:
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	ldrh	r6, [r2]
	add	r0, r0, r6
	ldrh	r4, [r2, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L484	@cond_branch
	add	r0, r0, #0x7
.L484:
	lsl	r0, r0, #0xd
	lsr	r7, r0, #0x10
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L485	@cond_branch
	add	r0, r0, #0x7
.L485:
	lsl	r0, r0, #0xd
	lsr	r4, r0, #0x10
	mov	r5, #0x0
	b	.L486
.L498:
	.align	2, 0
.L497:
	.word	sSpritePalettes
	.word	sCursorSpriteSheets
	.word	sSpriteTemplates_Cursors
	.word	sMapData
	.word	gSprites
	.word	sMapLandmarks
	.word	gSaveBlock1Ptr
.L482:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MapNumToFrontierFacilityId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L487	@cond_branch
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x4
	add	r0, r0, r6
	ldrh	r7, [r0, #0x8]
	ldrh	r4, [r0, #0xa]
	b	.L486
.L487:
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x25
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0xe
	bne	.L489	@cond_branch
	ldrh	r0, [r1, #0x28]
	add	r0, r0, #0x37
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	b	.L490
.L489:
	ldrh	r7, [r1, #0x28]
.L490:
	ldr	r0, .L499
	ldr	r0, [r0]
	ldrh	r4, [r0, #0x2a]
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L491	@cond_branch
	add	r0, r0, #0x7
.L491:
	lsl	r0, r0, #0xd
	lsr	r7, r0, #0x10
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L492	@cond_branch
	add	r0, r0, #0x7
.L492:
	lsl	r0, r0, #0xd
	lsr	r4, r0, #0x10
.L486:
	ldr	r0, .L499+0x4
	bl	LoadCompressedSpriteSheet
	mov	r1, sp
	ldr	r0, .L499+0x8
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	mov	r1, sp
	ldr	r0, .L499+0xc
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	add	r0, r0, #0x4
	strh	r0, [r1, #0x2]
	cmp	r5, #0
	beq	.L493	@cond_branch
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r4, #0x10
	b	.L496
.L500:
	.align	2, 0
.L499:
	.word	gSaveBlock1Ptr
	.word	sHeadsSpriteSheet
	.word	sSpriteTemplate_Head
	.word	gSaveBlock2Ptr
.L493:
	lsl	r1, r7, #0x13
	lsl	r2, r4, #0x13
	mov	r0, #0xa0
	lsl	r0, r0, #0xd
	add	r1, r1, r0
	asr	r1, r1, #0x10
	mov	r3, #0x90
	lsl	r3, r3, #0xe
	add	r2, r2, r3
.L496:
	asr	r2, r2, #0x10
	mov	r0, sp
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r4, .L501
	ldr	r2, [r4]
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	ldr	r0, .L501+0x4
	add	r1, r1, r0
	str	r1, [r2, #0x8]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldr	r0, .L501+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L480	@cond_branch
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	mov	r1, #0x1
	bl	StartSpriteAnim
.L480:
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L502:
	.align	2, 0
.L501:
	.word	sMapData
	.word	gSprites
	.word	gSaveBlock2Ptr
.Lfe35:
	.size	 InitFrontierMapSprites,.Lfe35-InitFrontierMapSprites
	.align	2, 0
	.type	 PrintOnFrontierMap,function
	.thumb_func
PrintOnFrontierMap:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	mov	r4, #0x0
.L507:
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L507	@cond_branch
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r5, .L521
.L512:
	ldr	r0, .L521+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x10]
	cmp	r4, r0
	bne	.L513	@cond_branch
	lsl	r1, r4, #0x4
	add	r3, r1, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L521+0x8
	str	r0, [sp]
	str	r6, [sp, #0x4]
	add	r1, r1, r5
	ldr	r0, [r1]
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x7
	mov	r2, #0x4
	bl	AddTextPrinterParameterized3
	b	.L511
.L522:
	.align	2, 0
.L521:
	.word	sMapLandmarks
	.word	sMapData
	.word	sTextColors+0x6
.L513:
	lsl	r1, r4, #0x4
	add	r3, r1, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L523
	str	r0, [sp]
	str	r6, [sp, #0x4]
	add	r1, r1, r5
	ldr	r0, [r1]
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x7
	mov	r2, #0x4
	bl	AddTextPrinterParameterized3
.L511:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L512	@cond_branch
	ldr	r0, .L523+0x4
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r1, .L523+0x8
	ldr	r0, .L523+0xc
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x10]
	lsl	r0, r0, #0x4
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x4
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	mov	r4, #0x0
.L519:
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L519	@cond_branch
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L524:
	.align	2, 0
.L523:
	.word	sTextColors+0x3
	.word	sTextColors
	.word	sMapLandmarks
	.word	sMapData
.Lfe36:
	.size	 PrintOnFrontierMap,.Lfe36-PrintOnFrontierMap
	.align	2, 0
	.type	 HandleFrontierMapCursorMove,function
	.thumb_func
HandleFrontierMapCursorMove:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L526	@cond_branch
	ldr	r0, .L534
	ldr	r4, [r0]
	ldrb	r5, [r4, #0x10]
	add	r0, r5, #0x6
	b	.L533
.L535:
	.align	2, 0
.L534:
	.word	sMapData
.L526:
	ldr	r0, .L536
	ldr	r4, [r0]
	ldrb	r5, [r4, #0x10]
	add	r0, r5, #0x1
.L533:
	mov	r1, #0x7
	bl	__modsi3
	strb	r0, [r4, #0x10]
	lsl	r0, r5, #0x4
	add	r3, r0, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r6, .L536+0x4
	str	r6, [sp]
	mov	r1, #0x0
	mov	r8, r1
	str	r1, [sp, #0x4]
	ldr	r4, .L536+0x8
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x7
	mov	r2, #0x4
	bl	AddTextPrinterParameterized3
	ldr	r5, .L536
	ldr	r1, [r5]
	ldrb	r3, [r1, #0x10]
	lsl	r3, r3, #0x4
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r6, #0x3
	str	r0, [sp]
	mov	r0, r8
	str	r0, [sp, #0x4]
	ldrb	r0, [r1, #0x10]
	lsl	r0, r0, #0x4
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x7
	mov	r2, #0x4
	bl	AddTextPrinterParameterized3
	ldr	r1, [r5]
	ldr	r2, [r1, #0x4]
	ldrb	r0, [r1, #0x10]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x8
	strh	r0, [r2, #0x22]
	ldr	r0, [r1, #0xc]
	ldrb	r1, [r1, #0x10]
	lsl	r1, r1, #0x4
	add	r1, r1, r4
	ldrb	r1, [r1, #0xc]
	bl	StartSpriteAnim
	ldr	r1, [r5]
	ldr	r2, [r1, #0xc]
	ldrb	r0, [r1, #0x10]
	lsl	r0, r0, #0x4
	add	r0, r0, r4
	ldrh	r0, [r0, #0x8]
	strh	r0, [r2, #0x20]
	ldr	r2, [r1, #0xc]
	ldrb	r0, [r1, #0x10]
	lsl	r0, r0, #0x4
	add	r0, r0, r4
	ldrh	r0, [r0, #0xa]
	strh	r0, [r2, #0x22]
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	sub	r6, r6, #0x3
	str	r6, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x10]
	lsl	r0, r0, #0x4
	add	r4, r4, #0x4
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x4
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	mov	r4, #0x0
.L531:
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L531	@cond_branch
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x6c
	bl	PlaySE
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L537:
	.align	2, 0
.L536:
	.word	sMapData
	.word	sTextColors+0x3
	.word	sMapLandmarks
.Lfe37:
	.size	 HandleFrontierMapCursorMove,.Lfe37-HandleFrontierMapCursorMove
.text
	.align	2, 0

