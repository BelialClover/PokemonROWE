@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gContestMoves
	.section .rodata
	.align	2, 0
	.type	 gContestMoves,object
	.size	 gContestMoves,6040
gContestMoves:
	.byte	0x0
	.space	7
	.byte	0x0
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x4
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x11
	.byte	0x4
	.byte	0x0
	.byte	0x1
	.space	4
	.byte	0x23
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x1c
	.byte	0x24
	.space	3
	.byte	0x2e
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x35
	.byte	0x4
	.space	2
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x4
	.space	3
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.byte	0x39
	.byte	0x2
	.byte	0x3
	.space	2
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.byte	0xa
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x6
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x7
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.space	4
	.byte	0x2b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x4
	.byte	0x0
	.byte	0x6
	.space	4
	.byte	0x13
	.byte	0x4
	.byte	0x0
	.byte	0x1
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0xa
	.space	4
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.byte	0x24
	.space	3
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x24
	.space	4
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x2
	.byte	0x8
	.byte	0x2a
	.byte	0x2d
	.space	3
	.byte	0xa
	.byte	0x4
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0xa
	.space	4
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0xd
	.space	3
	.byte	0x2d
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x1b
	.byte	0x1a
	.byte	0xa
	.space	2
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x4
	.byte	0x0
	.byte	0x1c
	.byte	0x1a
	.space	3
	.byte	0x12
	.byte	0x4
	.byte	0x0
	.byte	0x18
	.space	4
	.byte	0x1
	.byte	0x4
	.byte	0x0
	.byte	0x1c
	.byte	0x1a
	.space	3
	.byte	0x1e
	.byte	0x2
	.byte	0x0
	.byte	0x2f
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x0
	.byte	0xa
	.byte	0x18
	.byte	0x27
	.space	3
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0xa
	.byte	0x27
	.space	3
	.byte	0x1e
	.byte	0x2
	.byte	0x0
	.byte	0x2f
	.space	4
	.byte	0x2b
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0xb
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x5
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x3e
	.byte	0x34
	.byte	0x40
	.space	2
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x25
	.byte	0x1
	.byte	0xc
	.byte	0x3d
	.byte	0x34
	.space	3
	.byte	0x13
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.byte	0x26
	.space	3
	.byte	0x2b
	.byte	0x1
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0xd
	.byte	0x1
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x13
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.space	4
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.space	4
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x24
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x4
	.byte	0x0
	.byte	0x3a
	.space	4
	.byte	0x13
	.byte	0x4
	.byte	0x0
	.byte	0x36
	.space	4
	.byte	0x13
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0xb
	.byte	0x3
	.byte	0xe
	.byte	0xf
	.byte	0x45
	.space	3
	.byte	0x26
	.byte	0x1
	.byte	0xf
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x35
	.space	3
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x33
	.space	4
	.byte	0x2d
	.byte	0x3
	.byte	0x0
	.byte	0x33
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x33
	.space	4
	.byte	0x12
	.byte	0x1
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x10
	.byte	0x0
	.space	4
	.byte	0x21
	.byte	0x0
	.byte	0x11
	.byte	0x32
	.byte	0x42
	.byte	0x46
	.byte	0x4f
	.space	1
	.byte	0x2f
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0x2d
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0xb
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.byte	0x2c
	.byte	0x34
	.space	2
	.byte	0x23
	.byte	0x4
	.byte	0x12
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x13
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x4
	.byte	0x0
	.byte	0x13
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x14
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x15
	.byte	0x41
	.byte	0x20
	.byte	0x16
	.space	2
	.byte	0xd
	.byte	0x3
	.byte	0x16
	.byte	0x41
	.byte	0x15
	.byte	0x20
	.space	2
	.byte	0xd
	.byte	0x3
	.byte	0x17
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x19
	.space	4
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x19
	.space	4
	.byte	0x3
	.byte	0x0
	.byte	0x18
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x15
	.byte	0x19
	.byte	0x20
	.byte	0x16
	.space	1
	.byte	0x13
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x20
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x0
	.byte	0x19
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x4
	.byte	0x1a
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x3
	.byte	0x0
	.byte	0x1d
	.space	4
	.byte	0x2b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x4
	.byte	0x2
	.byte	0x1b
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x1
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0x1b
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0xd
	.byte	0x0
	.byte	0x1c
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x20
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x21
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x1d
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x1e
	.byte	0x29
	.space	4
	.byte	0x11
	.byte	0x4
	.byte	0x1f
	.byte	0x22
	.byte	0x2b
	.byte	0x54
	.space	2
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x1e
	.byte	0x4
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x2f
	.byte	0x4
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x1d
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x20
	.byte	0x15
	.byte	0x16
	.space	3
	.byte	0x0
	.byte	0x1
	.byte	0x21
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x24
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0xa
	.space	4
	.byte	0xb
	.byte	0x3
	.byte	0x0
	.byte	0x41
	.byte	0x17
	.space	3
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x0
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x3
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0x1e
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x4
	.byte	0x0
	.byte	0x34
	.byte	0x7
	.space	3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x4
	.byte	0x0
	.byte	0x5
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x22
	.byte	0x1f
	.byte	0x2b
	.byte	0x54
	.space	2
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.byte	0x28
	.byte	0x2f
	.byte	0x3c
	.space	2
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x12
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x1
	.byte	0x0
	.byte	0x2c
	.space	4
	.byte	0x2d
	.byte	0x4
	.byte	0x0
	.byte	0x27
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x7
	.space	3
	.byte	0x4
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.space	7
	.byte	0x20
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x1f
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x10
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x24
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x23
	.space	4
	.byte	0x29
	.byte	0x4
	.byte	0x25
	.byte	0x0
	.space	4
	.byte	0x21
	.byte	0x2
	.byte	0x0
	.byte	0x2e
	.space	4
	.byte	0x23
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x0
	.byte	0x0
	.byte	0x2e
	.space	4
	.byte	0x21
	.byte	0x4
	.byte	0x0
	.byte	0x25
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x26
	.byte	0x38
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x1a
	.space	4
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x4
	.byte	0x27
	.byte	0xa
	.byte	0x18
	.space	3
	.byte	0x1d
	.byte	0x3
	.byte	0x0
	.byte	0x36
	.byte	0xa
	.byte	0x1
	.space	2
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x2f
	.space	4
	.byte	0x26
	.byte	0x2
	.byte	0x28
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x4
	.byte	0x29
	.byte	0x1e
	.space	4
	.byte	0x11
	.byte	0x2
	.byte	0x2a
	.byte	0x3e
	.byte	0x8
	.byte	0x2d
	.space	2
	.byte	0x11
	.byte	0x4
	.byte	0x0
	.byte	0x2c
	.byte	0x34
	.space	3
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.byte	0x2c
	.space	3
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x25
	.byte	0x2e
	.byte	0x30
	.space	2
	.byte	0x2d
	.byte	0x1
	.byte	0x0
	.byte	0x30
	.byte	0xb
	.space	3
	.byte	0xd
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.space	4
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x3a
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x2b
	.byte	0x1f
	.byte	0x22
	.byte	0x1c
	.byte	0x54
	.space	1
	.byte	0x2f
	.byte	0x3
	.byte	0x2c
	.byte	0x0
	.space	4
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x4
	.byte	0x2d
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x3
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x4
	.byte	0x4
	.byte	0x2e
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x2
	.byte	0x2f
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x4
	.byte	0x0
	.byte	0x1b
	.byte	0x1a
	.space	3
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.space	4
	.byte	0x1d
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.space	4
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x1
	.byte	0x30
	.byte	0x25
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x23
	.space	4
	.byte	0x1e
	.byte	0x1
	.byte	0x31
	.byte	0x44
	.space	4
	.byte	0x2c
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2c
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0x2e
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x2e
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.byte	0x24
	.space	3
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x0
	.byte	0x32
	.byte	0x42
	.byte	0x11
	.byte	0x46
	.byte	0x4f
	.space	1
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x2
	.byte	0x33
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3f
	.space	4
	.byte	0x29
	.byte	0x0
	.byte	0x0
	.byte	0x36
	.space	4
	.byte	0x22
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x22
	.byte	0x3
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x22
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x3
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x2b
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x4
	.byte	0x34
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x1
	.byte	0x35
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x27
	.space	4
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x3a
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x0
	.byte	0x41
	.byte	0x15
	.byte	0x20
	.byte	0x16
	.space	1
	.byte	0x27
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x1
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x2d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x2
	.byte	0x36
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x4
	.byte	0x37
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x37
	.space	4
	.byte	0x26
	.byte	0x4
	.byte	0x0
	.byte	0x37
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0xd
	.byte	0x1
	.byte	0x38
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x2f
	.space	4
	.byte	0xc
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x2
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x29
	.byte	0x4
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x39
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x3a
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x22
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x4
	.byte	0x0
	.byte	0x2c
	.byte	0x24
	.space	3
	.byte	0x5
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x29
	.byte	0x4
	.byte	0x3b
	.byte	0x43
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x3c
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0x36
	.space	4
	.byte	0x1e
	.byte	0x4
	.byte	0x0
	.byte	0x2e
	.space	4
	.byte	0x21
	.byte	0x1
	.byte	0x0
	.byte	0x13
	.byte	0x2e
	.byte	0x35
	.space	2
	.byte	0x1f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x2
	.byte	0x0
	.byte	0xb
	.byte	0x40
	.space	3
	.byte	0x21
	.byte	0x4
	.byte	0x0
	.byte	0x25
	.space	4
	.byte	0x2d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x27
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x1
	.byte	0x3d
	.byte	0x34
	.byte	0xc
	.space	3
	.byte	0x11
	.byte	0x4
	.byte	0x0
	.byte	0x36
	.byte	0x1c
	.space	3
	.byte	0x25
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0x1e
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x12
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x3e
	.byte	0x2a
	.byte	0x2d
	.byte	0x40
	.space	2
	.byte	0x2f
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x21
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.space	4
	.byte	0x12
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x38
	.byte	0x34
	.byte	0x2d
	.byte	0x35
	.space	1
	.byte	0x1e
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x0
	.byte	0x12
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x3f
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x21
	.byte	0x1
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x2b
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x0
	.byte	0x2d
	.space	4
	.byte	0x2d
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.byte	0x24
	.space	3
	.byte	0x11
	.byte	0x4
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x2d
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x1d
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0x42
	.byte	0x11
	.byte	0x46
	.byte	0x4f
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x2d
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x1
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x40
	.byte	0x3e
	.byte	0x34
	.space	3
	.byte	0x4
	.byte	0x3
	.byte	0x41
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x0
	.byte	0x42
	.byte	0x32
	.byte	0x11
	.byte	0x46
	.byte	0x4f
	.space	1
	.byte	0x23
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0x2b
	.byte	0x1
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x2f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x3
	.byte	0x0
	.byte	0x41
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x47
	.space	4
	.byte	0xb
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x1e
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x28
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x3f
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x3
	.byte	0x0
	.byte	0x1c
	.byte	0x24
	.space	3
	.byte	0x2d
	.byte	0x0
	.byte	0x43
	.byte	0x3b
	.space	4
	.byte	0x1e
	.byte	0x1
	.byte	0x0
	.byte	0x43
	.byte	0x3b
	.space	3
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x2
	.byte	0x44
	.byte	0x31
	.space	4
	.byte	0x28
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x21
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x1
	.byte	0x45
	.byte	0xe
	.space	4
	.byte	0x1d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x3
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x28
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x7
	.space	4
	.byte	0xd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x0
	.byte	0x46
	.byte	0x32
	.byte	0x42
	.byte	0x11
	.byte	0x4f
	.space	1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x1
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0x28
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x1c
	.space	4
	.byte	0xd
	.byte	0x1
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x1
	.byte	0x2
	.byte	0x47
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x12
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x28
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x29
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x28
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x3
	.byte	0x48
	.byte	0x39
	.byte	0x4a
	.byte	0x49
	.space	2
	.byte	0x0
	.byte	0x0
	.byte	0x49
	.byte	0x4a
	.byte	0x48
	.space	3
	.byte	0x0
	.byte	0x1
	.byte	0x4a
	.byte	0x49
	.byte	0x48
	.space	3
	.byte	0x28
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x27
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x29
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x1
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x12
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x1
	.byte	0x0
	.byte	0x2f
	.space	4
	.byte	0x1a
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0x1
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x28
	.byte	0x1
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x25
	.byte	0x3
	.byte	0x4b
	.byte	0x4c
	.byte	0x4d
	.space	3
	.byte	0x5
	.byte	0x3
	.byte	0x4c
	.byte	0x4b
	.byte	0x4d
	.space	3
	.byte	0x13
	.byte	0x3
	.byte	0x4d
	.byte	0x4b
	.byte	0x4c
	.space	3
	.byte	0x1
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x4
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x4
	.byte	0x0
	.byte	0x14
	.space	4
	.byte	0x28
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x29
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x4e
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x14
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x29
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x29
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x0
	.byte	0x4f
	.byte	0x32
	.byte	0x42
	.byte	0x11
	.byte	0x46
	.space	1
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xb
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x4
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x4e
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x50
	.byte	0x53
	.space	4
	.byte	0x13
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x14
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x28
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x51
	.byte	0x52
	.space	4
	.byte	0x2d
	.byte	0x4
	.byte	0x52
	.byte	0x51
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.space	7
	.byte	0x1d
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x53
	.byte	0x50
	.space	4
	.byte	0x22
	.byte	0x2
	.byte	0x0
	.byte	0x2d
	.space	4
	.byte	0x1d
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x4e
	.space	4
	.byte	0xd
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.space	4
	.byte	0x22
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.space	4
	.byte	0x2f
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x4
	.byte	0x0
	.byte	0x14
	.space	4
	.byte	0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x26
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2e
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xa
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x21
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x35
	.space	4
	.byte	0x1f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1d
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x20
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x25
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xc
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0x42
	.byte	0x11
	.byte	0x46
	.byte	0x4f
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x5
	.byte	0x1
	.byte	0x0
	.byte	0x38
	.space	4
	.byte	0x1e
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0xd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x4
	.byte	0x54
	.byte	0x1f
	.byte	0x22
	.byte	0x2b
	.space	2
	.byte	0x28
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x10
	.byte	0x4
	.byte	0x0
	.byte	0x34
	.space	4
	.byte	0x12
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1f
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x13
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1e
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.space	4
	.byte	0x2d
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x2b
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x1b
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	4
	.byte	0x23
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.space	4
	.space	104
	.byte	0x3
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.space	4
	.space	520
	.globl	gContestEffects
	.align	2, 0
	.type	 gContestEffects,object
gContestEffects:
	.byte	0x0
	.byte	0x28
	.byte	0x0
	.space	1
	.byte	0x0
	.byte	0x3c
	.byte	0x0
	.space	1
	.byte	0x0
	.byte	0x50
	.byte	0x0
	.space	1
	.byte	0x0
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x1
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x1
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x1
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x1
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x2
	.byte	0x1e
	.byte	0x14
	.space	1
	.byte	0x3
	.byte	0x1e
	.byte	0xa
	.space	1
	.byte	0x2
	.byte	0x14
	.byte	0x1e
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0x14
	.space	1
	.byte	0x2
	.byte	0xa
	.byte	0x28
	.space	1
	.byte	0x3
	.byte	0xa
	.byte	0x1e
	.space	1
	.byte	0x2
	.byte	0x1e
	.byte	0x14
	.space	1
	.byte	0x3
	.byte	0x1e
	.byte	0xa
	.space	1
	.byte	0x4
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x3
	.byte	0x28
	.byte	0x28
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x4
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x4
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x4
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x3
	.byte	0x1e
	.byte	0xa
	.space	1
	.byte	0x5
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x6
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x6
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x6
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x6
	.byte	0x1e
	.byte	0x0
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x3
	.byte	0x14
	.byte	0xa
	.space	1
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x4
	.byte	0x1e
	.byte	0x0
	.space	1
	.size	 gContestEffects,192
	.globl	gContestEffectFuncs
	.align	2, 0
	.type	 gContestEffectFuncs,object
gContestEffectFuncs:
	.word	ContestEffect_HighlyAppealing
	.word	ContestEffect_UserMoreEasilyStartled
	.word	ContestEffect_GreatAppealButNoMoreMoves
	.word	ContestEffect_RepetitionNotBoring
	.word	ContestEffect_AvoidStartleOnce
	.word	ContestEffect_AvoidStartle
	.word	ContestEffect_AvoidStartleSlightly
	.word	ContestEffect_UserLessEasilyStartled
	.word	ContestEffect_StartleFrontMon
	.word	ContestEffect_StartlePrevMons
	.word	ContestEffect_StartleFrontMon
	.word	ContestEffect_StartlePrevMons
	.word	ContestEffect_StartleFrontMon
	.word	ContestEffect_StartlePrevMons
	.word	ContestEffect_StartlePrevMon2
	.word	ContestEffect_StartlePrevMons2
	.word	ContestEffect_ShiftJudgeAttention
	.word	ContestEffect_StartleMonWithJudgesAttention
	.word	ContestEffect_JamsOthersButMissOneTurn
	.word	ContestEffect_StartleMonsSameTypeAppeal
	.word	ContestEffect_StartleMonsCoolAppeal
	.word	ContestEffect_StartleMonsBeautyAppeal
	.word	ContestEffect_StartleMonsCuteAppeal
	.word	ContestEffect_StartleMonsSmartAppeal
	.word	ContestEffect_StartleMonsToughAppeal
	.word	ContestEffect_MakeFollowingMonNervous
	.word	ContestEffect_MakeFollowingMonsNervous
	.word	ContestEffect_WorsenConditionOfPrevMons
	.word	ContestEffect_BadlyStartlesMonsInGoodCondition
	.word	ContestEffect_BetterIfFirst
	.word	ContestEffect_BetterIfLast
	.word	ContestEffect_AppealAsGoodAsPrevOnes
	.word	ContestEffect_AppealAsGoodAsPrevOne
	.word	ContestEffect_BetterWhenLater
	.word	ContestEffect_QualityDependsOnTiming
	.word	ContestEffect_BetterIfSameType
	.word	ContestEffect_BetterIfDiffType
	.word	ContestEffect_AffectedByPrevAppeal
	.word	ContestEffect_ImproveConditionPreventNervousness
	.word	ContestEffect_BetterWithGoodCondition
	.word	ContestEffect_NextAppealEarlier
	.word	ContestEffect_NextAppealLater
	.word	ContestEffect_MakeScramblingTurnOrderEasier
	.word	ContestEffect_ScrambleNextTurnOrder
	.word	ContestEffect_ExciteAudienceInAnyContest
	.word	ContestEffect_BadlyStartleMonsWithGoodAppeals
	.word	ContestEffect_BetterWhenAudienceExcited
	.word	ContestEffect_DontExciteAudience
	.size	 gContestEffectFuncs,192
.text
	.align	2, 0
	.globl	AreMovesContestCombo
	.type	 AreMovesContestCombo,function
	.thumb_func
AreMovesContestCombo:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r4, .L14
	lsr	r0, r0, #0xd
	add	r0, r0, r4
	ldrb	r3, [r0, #0x2]
	cmp	r3, #0
	bne	.L3	@cond_branch
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	gContestMoves
.L12:
	mov	r0, #0x1
	b	.L11
.L3:
	mov	r2, #0x0
	lsl	r1, r1, #0x3
	add	r0, r4, #0x3
	add	r0, r1, r0
.L8:
	ldrb	r1, [r0]
	cmp	r3, r1
	beq	.L12	@cond_branch
	add	r0, r0, #0x1
	add	r2, r2, #0x1
	cmp	r2, #0x4
	ble	.L8	@cond_branch
.L13:
	mov	r0, #0x0
.L11:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 AreMovesContestCombo,.Lfe1-AreMovesContestCombo
	.align	2, 0
	.type	 ContestEffect_HighlyAppealing,function
	.thumb_func
ContestEffect_HighlyAppealing:
	bx	lr
.Lfe2:
	.size	 ContestEffect_HighlyAppealing,.Lfe2-ContestEffect_HighlyAppealing
	.align	2, 0
	.type	 ContestEffect_UserMoreEasilyStartled,function
	.thumb_func
ContestEffect_UserMoreEasilyStartled:
	push	{lr}
	ldr	r3, .L18
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x10]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x10]
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x0
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	gContestResources
.Lfe3:
	.size	 ContestEffect_UserMoreEasilyStartled,.Lfe3-ContestEffect_UserMoreEasilyStartled
	.align	2, 0
	.type	 ContestEffect_GreatAppealButNoMoreMoves,function
	.thumb_func
ContestEffect_GreatAppealButNoMoreMoves:
	push	{lr}
	ldr	r3, .L21
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x11]
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x11]
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	gContestResources
.Lfe4:
	.size	 ContestEffect_GreatAppealButNoMoreMoves,.Lfe4-ContestEffect_GreatAppealButNoMoreMoves
	.align	2, 0
	.type	 ContestEffect_RepetitionNotBoring,function
	.thumb_func
ContestEffect_RepetitionNotBoring:
	ldr	r3, .L24
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x10]
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x10]
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	ldr	r2, [r1, #0x4]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x15]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x15]
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	ldr	r2, [r1, #0x4]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0xb]
	mov	r0, #0x71
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0xb]
	bx	lr
.L25:
	.align	2, 0
.L24:
	.word	gContestResources
.Lfe5:
	.size	 ContestEffect_RepetitionNotBoring,.Lfe5-ContestEffect_RepetitionNotBoring
	.align	2, 0
	.type	 ContestEffect_AvoidStartleOnce,function
	.thumb_func
ContestEffect_AvoidStartleOnce:
	push	{lr}
	ldr	r3, .L27
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0, #0x12]
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x2
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	gContestResources
.Lfe6:
	.size	 ContestEffect_AvoidStartleOnce,.Lfe6-ContestEffect_AvoidStartleOnce
	.align	2, 0
	.type	 ContestEffect_AvoidStartle,function
	.thumb_func
ContestEffect_AvoidStartle:
	push	{lr}
	ldr	r3, .L30
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x10]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r0, #0x10]
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x3
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L31:
	.align	2, 0
.L30:
	.word	gContestResources
.Lfe7:
	.size	 ContestEffect_AvoidStartle,.Lfe7-ContestEffect_AvoidStartle
	.align	2, 0
	.type	 ContestEffect_AvoidStartleSlightly,function
	.thumb_func
ContestEffect_AvoidStartleSlightly:
	push	{lr}
	ldr	r3, .L33
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r1, #0x14
	strb	r1, [r0, #0xf]
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x4
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	gContestResources
.Lfe8:
	.size	 ContestEffect_AvoidStartleSlightly,.Lfe8-ContestEffect_AvoidStartleSlightly
	.align	2, 0
	.type	 ContestEffect_UserLessEasilyStartled,function
	.thumb_func
ContestEffect_UserLessEasilyStartled:
	push	{lr}
	ldr	r3, .L36
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x10]
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0, #0x10]
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x5
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	gContestResources
.Lfe9:
	.size	 ContestEffect_UserLessEasilyStartled,.Lfe9-ContestEffect_UserLessEasilyStartled
	.align	2, 0
	.type	 ContestEffect_StartleFrontMon,function
	.thumb_func
ContestEffect_StartleFrontMon:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r5, .L47
	ldr	r0, [r5]
	ldr	r1, [r0, #0x8]
	ldrb	r4, [r1, #0x11]
	add	r3, r1, r4
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L39	@cond_branch
	sub	r0, r0, #0x1
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L41	@cond_branch
	add	r3, r5, #0
.L42:
	add	r2, r2, #0x1
	cmp	r2, #0x3
	bgt	.L41	@cond_branch
	ldr	r0, [r3]
	ldr	r1, [r0, #0x8]
	add	r0, r1, r4
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r1, r1, r2
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L42	@cond_branch
.L41:
	ldr	r1, .L47
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	strb	r2, [r0, #0x8]
	ldr	r0, [r1]
	ldr	r1, [r0, #0x8]
	mov	r0, #0xff
	strb	r0, [r1, #0x9]
	bl	WasAtLeastOneOpponentJammed
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L39:
	cmp	r2, #0
	bne	.L46	@cond_branch
	ldr	r0, .L47
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L46:
	ldr	r0, .L47
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gContestResources
.Lfe10:
	.size	 ContestEffect_StartleFrontMon,.Lfe10-ContestEffect_StartleFrontMon
	.align	2, 0
	.type	 ContestEffect_StartlePrevMons,function
	.thumb_func
ContestEffect_StartlePrevMons:
	push	{r4, r5, r6, lr}
	mov	r1, #0x0
	ldr	r2, .L58
	ldr	r0, [r2]
	ldr	r0, [r0, #0x8]
	ldrb	r5, [r0, #0x11]
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L50	@cond_branch
	mov	r3, #0x0
	mov	r4, #0x0
	add	r6, r2, #0
.L54:
	ldr	r0, [r6]
	ldr	r2, [r0, #0x8]
	add	r0, r2, r5
	add	r1, r2, r3
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L53	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x8
	add	r0, r0, r4
	strb	r3, [r0]
	add	r4, r4, #0x1
.L53:
	add	r3, r3, #0x1
	cmp	r3, #0x3
	ble	.L54	@cond_branch
	ldr	r0, .L58
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	add	r0, r0, #0x8
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
	bl	WasAtLeastOneOpponentJammed
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
.L50:
	cmp	r1, #0
	bne	.L57	@cond_branch
	ldr	r0, .L58
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L57:
	ldr	r0, .L58
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	gContestResources
.Lfe11:
	.size	 ContestEffect_StartlePrevMons,.Lfe11-ContestEffect_StartlePrevMons
	.align	2, 0
	.type	 ContestEffect_StartlePrevMon2,function
	.thumb_func
ContestEffect_StartlePrevMon2:
	push	{lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x14
	cmp	r0, #0x1
	bls	.L62	@cond_branch
	mov	r1, #0x3c
	cmp	r0, #0x7
	bhi	.L62	@cond_branch
	mov	r1, #0x28
.L62:
	ldr	r0, .L65
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	strh	r1, [r0, #0x4]
	bl	ContestEffect_StartleFrontMon
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	gContestResources
.Lfe12:
	.size	 ContestEffect_StartlePrevMon2,.Lfe12-ContestEffect_StartlePrevMon2
	.align	2, 0
	.type	 ContestEffect_StartlePrevMons2,function
	.thumb_func
ContestEffect_StartlePrevMons2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r7, #0x0
	ldr	r1, .L87
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r5, [r0, #0x11]
	add	r0, r0, r5
	ldrb	r0, [r0]
	mov	r8, r1
	cmp	r0, #0
	beq	.L68	@cond_branch
	mov	r4, #0x0
	mov	r6, r8
.L72:
	ldr	r0, [r6]
	ldr	r2, [r0, #0x8]
	add	r0, r2, r5
	add	r1, r2, r4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L71	@cond_branch
	strb	r4, [r2, #0x8]
	ldr	r0, [r6]
	ldr	r1, [r0, #0x8]
	mov	r0, #0xff
	strb	r0, [r1, #0x9]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	cmp	r0, #0
	beq	.L75	@cond_branch
	mov	r1, #0xa
	cmp	r0, #0x2
	bls	.L75	@cond_branch
	mov	r1, #0x14
	cmp	r0, #0x4
	bls	.L75	@cond_branch
	mov	r1, #0x1e
	cmp	r0, #0x6
	bls	.L75	@cond_branch
	mov	r1, #0x3c
	cmp	r0, #0x8
	bhi	.L75	@cond_branch
	mov	r1, #0x28
.L75:
	ldr	r0, [r6]
	ldr	r0, [r0, #0x8]
	strh	r1, [r0, #0x4]
	bl	WasAtLeastOneOpponentJammed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L71	@cond_branch
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L71:
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L72	@cond_branch
.L68:
	mov	r1, r8
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	cmp	r7, #0
	bne	.L86	@cond_branch
	mov	r1, r8
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L86:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L88:
	.align	2, 0
.L87:
	.word	gContestResources
.Lfe13:
	.size	 ContestEffect_StartlePrevMons2,.Lfe13-ContestEffect_StartlePrevMons2
	.align	2, 0
	.type	 ContestEffect_ShiftJudgeAttention,function
	.thumb_func
ContestEffect_ShiftJudgeAttention:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r0, #0x0
	mov	r9, r0
	ldr	r1, .L98
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r2, [r0, #0x11]
	mov	r8, r2
	add	r0, r0, r8
	ldrb	r0, [r0]
	mov	sl, r1
	cmp	r0, #0
	beq	.L90	@cond_branch
	mov	r6, #0x0
	mov	r7, sl
	mov	r5, #0x0
.L94:
	ldr	r2, [r7]
	ldr	r0, [r2, #0x8]
	mov	r3, r8
	add	r1, r0, r3
	add	r0, r0, r6
	ldrb	r1, [r1]
	ldrb	r0, [r0]
	cmp	r1, r0
	bls	.L93	@cond_branch
	ldr	r0, [r2, #0x4]
	add	r0, r5, r0
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L93	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	CanUnnerveContestant
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L93	@cond_branch
	ldr	r0, [r7]
	ldr	r2, [r0, #0x4]
	add	r2, r5, r2
	ldrb	r0, [r2, #0x15]
	mov	r3, #0x11
	neg	r3, r3
	add	r1, r3, #0
	and	r0, r0, r1
	strb	r0, [r2, #0x15]
	ldr	r0, [r7]
	ldr	r2, [r0, #0x4]
	add	r2, r5, r2
	ldrb	r0, [r2, #0x15]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r2, #0x15]
	add	r0, r4, #0
	mov	r1, #0x8
	bl	SetContestantEffectStringID
	mov	r0, #0x1
	mov	r9, r0
.L93:
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L94	@cond_branch
.L90:
	mov	r1, sl
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x7
	bl	SetContestantEffectStringID
	mov	r2, r9
	cmp	r2, #0
	bne	.L97	@cond_branch
	mov	r3, sl
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L97:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L99:
	.align	2, 0
.L98:
	.word	gContestResources
.Lfe14:
	.size	 ContestEffect_ShiftJudgeAttention,.Lfe14-ContestEffect_ShiftJudgeAttention
	.align	2, 0
	.type	 ContestEffect_StartleMonWithJudgesAttention,function
	.thumb_func
ContestEffect_StartleMonWithJudgesAttention:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r0, #0x0
	mov	r9, r0
	ldr	r1, .L113
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r7, [r0, #0x11]
	add	r0, r0, r7
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0
	beq	.L101	@cond_branch
	mov	r5, #0x0
	mov	r6, #0x0
	mov	r8, r4
.L105:
	ldr	r3, [r4]
	ldr	r2, [r3, #0x8]
	add	r0, r2, r7
	add	r1, r2, r5
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L104	@cond_branch
	ldr	r0, [r3, #0x4]
	add	r0, r6, r0
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L107	@cond_branch
	mov	r0, #0x32
	b	.L112
.L114:
	.align	2, 0
.L113:
	.word	gContestResources
.L107:
	mov	r0, #0xa
.L112:
	strh	r0, [r2, #0x4]
	mov	r1, r8
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	strb	r5, [r0, #0x8]
	ldr	r0, [r1]
	ldr	r1, [r0, #0x8]
	mov	r0, #0xff
	strb	r0, [r1, #0x9]
	bl	WasAtLeastOneOpponentJammed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L104	@cond_branch
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
.L104:
	add	r6, r6, #0x1c
	add	r5, r5, #0x1
	ldr	r4, .L115
	cmp	r5, #0x3
	ble	.L105	@cond_branch
.L101:
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	mov	r0, r9
	cmp	r0, #0
	bne	.L111	@cond_branch
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L111:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	gContestResources
.Lfe15:
	.size	 ContestEffect_StartleMonWithJudgesAttention,.Lfe15-ContestEffect_StartleMonWithJudgesAttention
	.align	2, 0
	.type	 ContestEffect_JamsOthersButMissOneTurn,function
	.thumb_func
ContestEffect_JamsOthersButMissOneTurn:
	push	{r4, lr}
	ldr	r4, .L118
	ldr	r1, [r4]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x11]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x11]
	bl	ContestEffect_StartlePrevMons
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r4}
	pop	{r0}
	bx	r0
.L119:
	.align	2, 0
.L118:
	.word	gContestResources
.Lfe16:
	.size	 ContestEffect_JamsOthersButMissOneTurn,.Lfe16-ContestEffect_JamsOthersButMissOneTurn
	.align	2, 0
	.type	 ContestEffect_StartleMonsSameTypeAppeal,function
	.thumb_func
ContestEffect_StartleMonsSameTypeAppeal:
	push	{r4, lr}
	ldr	r4, .L121
	ldr	r1, [r4]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0, #0x6]
	ldr	r1, .L121+0x4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	bl	JamByMoveCategory
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r4}
	pop	{r0}
	bx	r0
.L122:
	.align	2, 0
.L121:
	.word	gContestResources
	.word	gContestMoves
.Lfe17:
	.size	 ContestEffect_StartleMonsSameTypeAppeal,.Lfe17-ContestEffect_StartleMonsSameTypeAppeal
	.align	2, 0
	.type	 ContestEffect_StartleMonsCoolAppeal,function
	.thumb_func
ContestEffect_StartleMonsCoolAppeal:
	push	{lr}
	mov	r0, #0x0
	bl	JamByMoveCategory
	ldr	r0, .L124
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	gContestResources
.Lfe18:
	.size	 ContestEffect_StartleMonsCoolAppeal,.Lfe18-ContestEffect_StartleMonsCoolAppeal
	.align	2, 0
	.type	 ContestEffect_StartleMonsBeautyAppeal,function
	.thumb_func
ContestEffect_StartleMonsBeautyAppeal:
	push	{lr}
	mov	r0, #0x1
	bl	JamByMoveCategory
	ldr	r0, .L127
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	gContestResources
.Lfe19:
	.size	 ContestEffect_StartleMonsBeautyAppeal,.Lfe19-ContestEffect_StartleMonsBeautyAppeal
	.align	2, 0
	.type	 ContestEffect_StartleMonsCuteAppeal,function
	.thumb_func
ContestEffect_StartleMonsCuteAppeal:
	push	{lr}
	mov	r0, #0x2
	bl	JamByMoveCategory
	ldr	r0, .L130
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	gContestResources
.Lfe20:
	.size	 ContestEffect_StartleMonsCuteAppeal,.Lfe20-ContestEffect_StartleMonsCuteAppeal
	.align	2, 0
	.type	 ContestEffect_StartleMonsSmartAppeal,function
	.thumb_func
ContestEffect_StartleMonsSmartAppeal:
	push	{lr}
	mov	r0, #0x3
	bl	JamByMoveCategory
	ldr	r0, .L133
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L134:
	.align	2, 0
.L133:
	.word	gContestResources
.Lfe21:
	.size	 ContestEffect_StartleMonsSmartAppeal,.Lfe21-ContestEffect_StartleMonsSmartAppeal
	.align	2, 0
	.type	 ContestEffect_StartleMonsToughAppeal,function
	.thumb_func
ContestEffect_StartleMonsToughAppeal:
	push	{lr}
	mov	r0, #0x4
	bl	JamByMoveCategory
	ldr	r0, .L136
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	gContestResources
.Lfe22:
	.size	 ContestEffect_StartleMonsToughAppeal,.Lfe22-ContestEffect_StartleMonsToughAppeal
	.align	2, 0
	.type	 ContestEffect_MakeFollowingMonNervous,function
	.thumb_func
ContestEffect_MakeFollowingMonNervous:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r2, .L150
	ldr	r0, [r2]
	ldr	r0, [r0, #0x8]
	ldrb	r1, [r0, #0x11]
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r6, r2, #0
	cmp	r0, #0x3
	beq	.L139	@cond_branch
	mov	r5, #0x0
.L143:
	ldr	r0, .L150
	ldr	r0, [r0]
	ldr	r1, [r0, #0x8]
	ldrb	r0, [r1, #0x11]
	add	r0, r1, r0
	ldrb	r0, [r0]
	add	r0, r0, #0x1
	add	r1, r1, r5
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L142	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	CanUnnerveContestant
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L145	@cond_branch
	add	r0, r4, #0
	bl	MakeContestantNervous
	add	r0, r4, #0
	mov	r1, #0xa
	b	.L149
.L151:
	.align	2, 0
.L150:
	.word	gContestResources
.L145:
	add	r0, r4, #0
	mov	r1, #0x3c
.L149:
	bl	SetContestantEffectStringID
	mov	r4, #0x1
.L142:
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L143	@cond_branch
.L139:
	ldr	r0, [r6]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x9
	bl	SetContestantEffectStringID
	cmp	r4, #0
	bne	.L148	@cond_branch
	ldr	r0, [r6]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L148:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 ContestEffect_MakeFollowingMonNervous,.Lfe23-ContestEffect_MakeFollowingMonNervous
	.align	2, 0
	.type	 ContestEffect_MakeFollowingMonsNervous,function
	.thumb_func
ContestEffect_MakeFollowingMonsNervous:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	mov	r0, #0x0
	mov	r9, r0
	mov	r1, #0x0
	str	r1, [sp, #0x18]
	mov	r0, sp
	mov	r1, #0xff
	mov	r2, #0x5
	bl	memset
	mov	r5, #0x0
	mov	r4, #0x0
	add	r7, sp, #0x10
	add	r3, sp, #0x8
	mov	sl, r3
	mov	r6, #0x0
.L156:
	ldr	r0, .L192
	ldr	r2, [r0]
	ldr	r1, [r2, #0x8]
	ldrb	r0, [r1, #0x11]
	add	r0, r1, r0
	add	r1, r1, r5
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcs	.L155	@cond_branch
	ldr	r0, [r2, #0x4]
	add	r0, r6, r0
	ldrb	r1, [r0, #0xc]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L155	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	Contest_IsMonsTurnDisabled
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L155	@cond_branch
	mov	r1, sp
	add	r0, r1, r4
	strb	r5, [r0]
	add	r4, r4, #0x1
.L155:
	add	r6, r6, #0x1c
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L156	@cond_branch
	cmp	r4, #0x1
	bne	.L159	@cond_branch
	mov	r0, #0x3c
	strh	r0, [r7]
	b	.L160
.L193:
	.align	2, 0
.L192:
	.word	gContestResources
.L159:
	cmp	r4, #0x2
	bne	.L161	@cond_branch
	mov	r0, #0x1e
	strh	r0, [r7]
	strh	r0, [r7, #0x2]
	b	.L160
.L161:
	cmp	r4, #0x3
	bne	.L163	@cond_branch
	mov	r0, #0x14
	strh	r0, [r7]
	strh	r0, [r7, #0x2]
	strh	r0, [r7, #0x4]
	b	.L160
.L163:
	add	r1, r7, #0
	mov	r2, #0x0
	add	r0, r7, #0x6
.L168:
	strh	r2, [r0]
	sub	r0, r0, #0x2
	cmp	r0, r1
	bge	.L168	@cond_branch
.L160:
	mov	r5, #0x0
	ldr	r3, .L194
	mov	r8, r3
	mov	r6, #0x0
	mov	r4, sl
.L173:
	mov	r1, r8
	ldr	r0, [r1]
	ldr	r0, [r0, #0x4]
	add	r0, r6, r0
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L174	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	IsContestantAllowedToCombo
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L174	@cond_branch
	mov	r3, r8
	ldr	r0, [r3]
	ldr	r0, [r0, #0x4]
	add	r0, r6, r0
	ldrh	r0, [r0, #0x8]
	lsl	r0, r0, #0x3
	ldr	r1, .L194+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	mov	r1, #0x0
	cmp	r0, #0
	beq	.L175	@cond_branch
	mov	r1, #0xa
.L175:
	strh	r1, [r4]
	b	.L177
.L195:
	.align	2, 0
.L194:
	.word	gContestResources
	.word	gContestMoves
.L174:
	mov	r0, #0x0
	strh	r0, [r4]
.L177:
	mov	r3, r8
	ldr	r0, [r3]
	ldr	r0, [r0, #0x4]
	add	r0, r6, r0
	ldrb	r0, [r0, #0xd]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r1, #0xa
	bl	__divsi3
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrh	r0, [r4]
	sub	r0, r0, r1
	strh	r0, [r4]
	add	r6, r6, #0x1c
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L173	@cond_branch
	mov	r6, #0x0
	ldrsh	r0, [r7, r6]
	cmp	r0, #0
	beq	.L179	@cond_branch
	mov	r5, #0x0
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0xff
	beq	.L179	@cond_branch
	mov	r4, sp
.L183:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r5, #0x1
	add	r1, r7, r1
	mov	r3, #0x0
	ldrsh	r2, [r1, r3]
	ldrb	r3, [r4]
	lsl	r1, r3, #0x1
	add	r1, r1, sl
	mov	r6, #0x0
	ldrsh	r1, [r1, r6]
	add	r2, r2, r1
	cmp	r0, r2
	bge	.L184	@cond_branch
	add	r0, r3, #0
	bl	CanUnnerveContestant
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L191	@cond_branch
	ldrb	r0, [r4]
	bl	MakeContestantNervous
	ldrb	r0, [r4]
	mov	r1, #0xa
	bl	SetContestantEffectStringID
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	b	.L187
.L184:
	mov	r0, #0x1
	str	r0, [sp, #0x18]
.L187:
	ldr	r1, [sp, #0x18]
	cmp	r1, #0
	beq	.L188	@cond_branch
.L191:
	mov	r3, #0x0
	str	r3, [sp, #0x18]
	ldrb	r0, [r4]
	mov	r1, #0x3c
	bl	SetContestantEffectStringID
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
.L188:
	ldr	r0, .L196
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	add	r0, r0, #0xd
	ldrb	r6, [r4]
	add	r0, r0, r6
	mov	r1, #0x1
	strb	r1, [r0]
	add	r4, r4, #0x1
	add	r5, r5, #0x1
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L183	@cond_branch
.L179:
	ldr	r1, .L196
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0xb
	bl	SetContestantEffectStringID
	mov	r3, r9
	cmp	r3, #0
	bne	.L190	@cond_branch
	ldr	r6, .L196
	ldr	r0, [r6]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L190:
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	gContestResources
.Lfe24:
	.size	 ContestEffect_MakeFollowingMonsNervous,.Lfe24-ContestEffect_MakeFollowingMonsNervous
	.align	2, 0
	.type	 ContestEffect_WorsenConditionOfPrevMons,function
	.thumb_func
ContestEffect_WorsenConditionOfPrevMons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r0, #0x0
	mov	r8, r0
	mov	r6, #0x0
	ldr	r7, .L206
	mov	r5, #0x0
.L202:
	ldr	r2, [r7]
	ldr	r0, [r2, #0x8]
	ldrb	r1, [r0, #0x11]
	add	r1, r0, r1
	add	r0, r0, r6
	ldrb	r1, [r1]
	ldrb	r0, [r0]
	cmp	r1, r0
	bls	.L201	@cond_branch
	ldr	r0, [r2, #0x4]
	add	r0, r5, r0
	ldrb	r0, [r0, #0xd]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0
	ble	.L201	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	CanUnnerveContestant
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L201	@cond_branch
	ldr	r0, [r7]
	ldr	r0, [r0, #0x4]
	add	r0, r5, r0
	mov	r1, #0x0
	strb	r1, [r0, #0xd]
	ldr	r0, [r7]
	ldr	r2, [r0, #0x4]
	add	r2, r5, r2
	ldrb	r1, [r2, #0x10]
	mov	r3, #0x31
	neg	r3, r3
	add	r0, r3, #0
	and	r1, r1, r0
	mov	r0, #0x20
	orr	r1, r1, r0
	strb	r1, [r2, #0x10]
	add	r0, r4, #0
	mov	r1, #0xd
	bl	SetContestantEffectStringID
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
.L201:
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L202	@cond_branch
	ldr	r4, .L206
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0xc
	bl	SetContestantEffectStringID
	mov	r0, r8
	cmp	r0, #0
	bne	.L205	@cond_branch
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x39
	bl	SetContestantEffectStringID2
.L205:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L207:
	.align	2, 0
.L206:
	.word	gContestResources
.Lfe25:
	.size	 ContestEffect_WorsenConditionOfPrevMons,.Lfe25-ContestEffect_WorsenConditionOfPrevMons
	.align	2, 0
	.type	 ContestEffect_BadlyStartlesMonsInGoodCondition,function
	.thumb_func
ContestEffect_BadlyStartlesMonsInGoodCondition:
	push	{r4, r5, r6, r7, lr}
	mov	r7, #0x0
	mov	r4, #0x0
	ldr	r5, .L220
	mov	r6, #0x0
.L212:
	ldr	r3, [r5]
	ldr	r2, [r3, #0x8]
	ldrb	r0, [r2, #0x11]
	add	r0, r2, r0
	add	r1, r2, r4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L211	@cond_branch
	ldr	r0, [r3, #0x4]
	add	r0, r6, r0
	ldrb	r0, [r0, #0xd]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0
	ble	.L214	@cond_branch
	mov	r0, #0x28
	b	.L219
.L221:
	.align	2, 0
.L220:
	.word	gContestResources
.L214:
	mov	r0, #0xa
.L219:
	strh	r0, [r2, #0x4]
	ldr	r0, [r5]
	ldr	r0, [r0, #0x8]
	strb	r4, [r0, #0x8]
	ldr	r0, [r5]
	ldr	r1, [r0, #0x8]
	mov	r0, #0xff
	strb	r0, [r1, #0x9]
	bl	WasAtLeastOneOpponentJammed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L211	@cond_branch
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L211:
	add	r6, r6, #0x1c
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L212	@cond_branch
	ldr	r4, .L222
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0xe
	bl	SetContestantEffectStringID
	cmp	r7, #0
	bne	.L218	@cond_branch
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x39
	bl	SetContestantEffectStringID2
.L218:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gContestResources
.Lfe26:
	.size	 ContestEffect_BadlyStartlesMonsInGoodCondition,.Lfe26-ContestEffect_BadlyStartlesMonsInGoodCondition
	.align	2, 0
	.type	 ContestEffect_BetterIfFirst,function
	.thumb_func
ContestEffect_BetterIfFirst:
	push	{r4, lr}
	ldr	r1, .L226
	ldr	r0, .L226+0x4
	ldr	r4, [r0]
	ldr	r0, [r4, #0x8]
	ldrb	r2, [r0, #0x11]
	add	r1, r2, r1
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L225	@cond_branch
	ldr	r0, [r4, #0x4]
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x6]
	ldr	r3, .L226+0x8
	ldr	r2, .L226+0xc
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1
	ldrh	r2, [r1, #0x2]
	add	r0, r0, r2
	strh	r0, [r1, #0x2]
	ldr	r0, [r4, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0xf
	bl	SetContestantEffectStringID
.L225:
	pop	{r4}
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	gContestantTurnOrder
	.word	gContestResources
	.word	gContestEffects
	.word	gContestMoves
.Lfe27:
	.size	 ContestEffect_BetterIfFirst,.Lfe27-ContestEffect_BetterIfFirst
	.align	2, 0
	.type	 ContestEffect_BetterIfLast,function
	.thumb_func
ContestEffect_BetterIfLast:
	push	{r4, lr}
	ldr	r1, .L230
	ldr	r0, .L230+0x4
	ldr	r4, [r0]
	ldr	r0, [r4, #0x8]
	ldrb	r2, [r0, #0x11]
	add	r1, r2, r1
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bne	.L229	@cond_branch
	ldr	r0, [r4, #0x4]
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x6]
	ldr	r3, .L230+0x8
	ldr	r2, .L230+0xc
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1
	ldrh	r2, [r1, #0x2]
	add	r0, r0, r2
	strh	r0, [r1, #0x2]
	ldr	r0, [r4, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x10
	bl	SetContestantEffectStringID
.L229:
	pop	{r4}
	pop	{r0}
	bx	r0
.L231:
	.align	2, 0
.L230:
	.word	gContestantTurnOrder
	.word	gContestResources
	.word	gContestEffects
	.word	gContestMoves
.Lfe28:
	.size	 ContestEffect_BetterIfLast,.Lfe28-ContestEffect_BetterIfLast
	.align	2, 0
	.type	 ContestEffect_AppealAsGoodAsPrevOnes,function
	.thumb_func
ContestEffect_AppealAsGoodAsPrevOnes:
	push	{r4, r5, r6, r7, lr}
	mov	r1, #0x0
	mov	r5, #0x0
	ldr	r0, .L243
	ldr	r4, [r0]
	ldr	r2, [r4, #0x8]
	ldrb	r0, [r2, #0x11]
	add	r0, r2, r0
	ldrb	r6, [r0]
	mov	r3, #0x0
.L236:
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r6, r0
	bls	.L235	@cond_branch
	ldr	r0, [r4, #0x4]
	add	r0, r3, r0
	mov	r7, #0x2
	ldrsh	r0, [r0, r7]
	add	r5, r5, r0
.L235:
	add	r3, r3, #0x1c
	add	r1, r1, #0x1
	cmp	r1, #0x3
	ble	.L236	@cond_branch
	cmp	r5, #0
	bge	.L239	@cond_branch
	mov	r5, #0x0
.L239:
	ldr	r0, .L243
	ldr	r3, [r0]
	ldr	r0, [r3, #0x8]
	ldrb	r2, [r0, #0x11]
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L241	@cond_branch
	cmp	r5, #0
	bne	.L240	@cond_branch
.L241:
	add	r0, r2, #0
	mov	r1, #0x12
	bl	SetContestantEffectStringID
	b	.L242
.L244:
	.align	2, 0
.L243:
	.word	gContestResources
.L240:
	ldr	r0, [r3, #0x4]
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	lsr	r0, r5, #0x1f
	add	r0, r5, r0
	asr	r0, r0, #0x1
	ldrh	r2, [r1, #0x2]
	add	r0, r0, r2
	strh	r0, [r1, #0x2]
	ldr	r0, [r3, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x11
	bl	SetContestantEffectStringID
.L242:
	ldr	r4, .L245
	ldr	r1, [r4]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r7, #0x2
	ldrsh	r0, [r0, r7]
	bl	RoundTowardsZero
	ldr	r2, [r4]
	ldr	r1, [r2, #0x8]
	ldrb	r3, [r1, #0x11]
	ldr	r2, [r2, #0x4]
	lsl	r1, r3, #0x3
	sub	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	strh	r0, [r1, #0x2]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	gContestResources
.Lfe29:
	.size	 ContestEffect_AppealAsGoodAsPrevOnes,.Lfe29-ContestEffect_AppealAsGoodAsPrevOnes
	.align	2, 0
	.type	 ContestEffect_AppealAsGoodAsPrevOne,function
	.thumb_func
ContestEffect_AppealAsGoodAsPrevOne:
	push	{r4, r5, r6, r7, lr}
	mov	r6, #0x0
	ldr	r0, .L258
	ldr	r4, [r0]
	ldr	r2, [r4, #0x8]
	ldrb	r1, [r2, #0x11]
	add	r3, r2, r1
	ldrb	r1, [r3]
	add	r7, r0, #0
	cmp	r1, #0
	beq	.L256	@cond_branch
	mov	r1, #0x0
	add	r5, r4, #0
	add	r4, r2, #0
	ldrb	r0, [r3]
	sub	r3, r0, #0x1
	mov	r2, #0x0
.L252:
	add	r0, r4, r1
	ldrb	r0, [r0]
	cmp	r3, r0
	bne	.L251	@cond_branch
	ldr	r0, [r5, #0x4]
	add	r0, r2, r0
	ldrh	r6, [r0, #0x2]
.L251:
	add	r2, r2, #0x1c
	add	r1, r1, #0x1
	cmp	r1, #0x3
	ble	.L252	@cond_branch
	ldr	r3, [r7]
	ldr	r0, [r3, #0x8]
	ldrb	r2, [r0, #0x11]
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L256	@cond_branch
	lsl	r0, r6, #0x10
	asr	r4, r0, #0x10
	cmp	r4, #0
	bgt	.L255	@cond_branch
.L256:
	ldr	r0, [r7]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x14
	bl	SetContestantEffectStringID
	b	.L257
.L259:
	.align	2, 0
.L258:
	.word	gContestResources
.L255:
	ldr	r1, [r3, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0, #0x2]
	add	r1, r4, r1
	strh	r1, [r0, #0x2]
	ldr	r0, [r3, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x13
	bl	SetContestantEffectStringID
.L257:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 ContestEffect_AppealAsGoodAsPrevOne,.Lfe30-ContestEffect_AppealAsGoodAsPrevOne
	.align	2, 0
	.type	 ContestEffect_BetterWhenLater,function
	.thumb_func
ContestEffect_BetterWhenLater:
	push	{r4, r5, lr}
	ldr	r1, .L270
	ldr	r3, [r1]
	ldr	r0, [r3, #0x8]
	ldrb	r2, [r0, #0x11]
	add	r0, r0, r2
	ldrb	r4, [r0]
	add	r5, r1, #0
	cmp	r4, #0
	bne	.L261	@cond_branch
	ldr	r0, [r3, #0x4]
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0xa
	b	.L269
.L271:
	.align	2, 0
.L270:
	.word	gContestResources
.L261:
	ldr	r0, [r3, #0x4]
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x2
.L269:
	strh	r0, [r1, #0x2]
	cmp	r4, #0
	bne	.L263	@cond_branch
	ldr	r0, [r5]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x15
	bl	SetContestantEffectStringID
	b	.L264
.L263:
	cmp	r4, #0x1
	bne	.L265	@cond_branch
	ldr	r0, [r5]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x16
	bl	SetContestantEffectStringID
	b	.L264
.L265:
	cmp	r4, #0x2
	bne	.L267	@cond_branch
	ldr	r0, [r5]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x17
	bl	SetContestantEffectStringID
	b	.L264
.L267:
	ldr	r0, [r5]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x18
	bl	SetContestantEffectStringID
.L264:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 ContestEffect_BetterWhenLater,.Lfe31-ContestEffect_BetterWhenLater
	.align	2, 0
	.type	 ContestEffect_QualityDependsOnTiming,function
	.thumb_func
ContestEffect_QualityDependsOnTiming:
	push	{r4, lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x2
	bhi	.L273	@cond_branch
	mov	r4, #0xa
	ldr	r0, .L281
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1a
	bl	SetContestantEffectStringID
	b	.L274
.L282:
	.align	2, 0
.L281:
	.word	gContestResources
.L273:
	cmp	r0, #0x5
	bhi	.L275	@cond_branch
	mov	r4, #0x14
	ldr	r0, .L283
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1b
	bl	SetContestantEffectStringID
	b	.L274
.L284:
	.align	2, 0
.L283:
	.word	gContestResources
.L275:
	cmp	r0, #0x7
	bhi	.L277	@cond_branch
	mov	r4, #0x28
	ldr	r0, .L285
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1c
	bl	SetContestantEffectStringID
	b	.L274
.L286:
	.align	2, 0
.L285:
	.word	gContestResources
.L277:
	cmp	r1, #0x8
	bhi	.L279	@cond_branch
	mov	r4, #0x3c
	ldr	r0, .L287
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1d
	bl	SetContestantEffectStringID
	b	.L274
.L288:
	.align	2, 0
.L287:
	.word	gContestResources
.L279:
	mov	r4, #0x50
	ldr	r0, .L289
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1e
	bl	SetContestantEffectStringID
.L274:
	ldr	r0, .L289
	ldr	r1, [r0]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	strh	r4, [r0, #0x2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L290:
	.align	2, 0
.L289:
	.word	gContestResources
.Lfe32:
	.size	 ContestEffect_QualityDependsOnTiming,.Lfe32-ContestEffect_QualityDependsOnTiming
	.align	2, 0
	.type	 ContestEffect_BetterIfSameType,function
	.thumb_func
ContestEffect_BetterIfSameType:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r2, .L308
	ldr	r0, [r2]
	ldr	r3, [r0, #0x8]
	ldrb	r0, [r3, #0x11]
	add	r0, r3, r0
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r8, r2
	cmp	r1, #0
	beq	.L291	@cond_branch
	mov	r7, r8
	ldrb	r6, [r3]
.L295:
	mov	r2, #0x0
	lsl	r0, r4, #0x18
	asr	r1, r0, #0x18
	add	r5, r0, #0
	cmp	r6, r1
	beq	.L297	@cond_branch
	ldr	r4, .L308
.L298:
	lsl	r0, r2, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r2, r0, #0x18
	asr	r3, r0, #0x18
	cmp	r3, #0x3
	bgt	.L297	@cond_branch
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, r1
	bne	.L298	@cond_branch
.L297:
	ldr	r0, [r7]
	lsl	r3, r2, #0x18
	asr	r1, r3, #0x18
	ldr	r2, [r0, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r0, r2
	ldrb	r1, [r2, #0xb]
	mov	r0, #0x80
	and	r0, r0, r1
	mov	ip, r3
	cmp	r0, #0
	bne	.L303	@cond_branch
	ldrb	r1, [r2, #0xc]
	mov	r0, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L294	@cond_branch
.L303:
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r5, r1
	lsr	r4, r0, #0x18
	cmp	r0, #0
	blt	.L291	@cond_branch
	b	.L295
.L309:
	.align	2, 0
.L308:
	.word	gContestResources
.L294:
	mov	r2, r8
	ldr	r6, [r2]
	ldr	r0, [r6, #0x8]
	ldrb	r1, [r0, #0x11]
	ldr	r4, [r6, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r4
	ldrh	r0, [r5, #0x6]
	ldr	r3, .L310
	lsl	r0, r0, #0x3
	add	r7, r0, r3
	ldrb	r2, [r7, #0x1]
	lsl	r2, r2, #0x1d
	mov	r0, ip
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x6]
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1d
	cmp	r2, r0
	bne	.L291	@cond_branch
	ldr	r1, .L310+0x4
	ldrb	r0, [r7]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1
	ldrh	r1, [r5, #0x2]
	add	r0, r0, r1
	strh	r0, [r5, #0x2]
	ldr	r0, [r6, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1f
	bl	SetContestantEffectStringID
.L291:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L311:
	.align	2, 0
.L310:
	.word	gContestMoves
	.word	gContestEffects
.Lfe33:
	.size	 ContestEffect_BetterIfSameType,.Lfe33-ContestEffect_BetterIfSameType
	.align	2, 0
	.type	 ContestEffect_BetterIfDiffType,function
	.thumb_func
ContestEffect_BetterIfDiffType:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r0, .L320
	ldr	r3, [r0]
	ldr	r1, [r3, #0x8]
	ldrb	r2, [r1, #0x11]
	add	r1, r1, r2
	ldrb	r1, [r1]
	mov	r9, r0
	cmp	r1, #0
	beq	.L313	@cond_branch
	ldr	r1, [r3, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0, #0x6]
	mov	r8, r0
	mov	r6, #0x0
	ldr	r0, .L320+0x4
	mov	ip, r0
	mov	r7, #0x0
.L317:
	mov	r1, r9
	ldr	r4, [r1]
	ldr	r0, [r4, #0x8]
	ldrb	r2, [r0, #0x11]
	add	r1, r0, r2
	ldrb	r1, [r1]
	sub	r1, r1, #0x1
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L316	@cond_branch
	mov	r1, r8
	lsl	r0, r1, #0x3
	mov	r1, ip
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1]
	lsl	r1, r1, #0x1d
	ldr	r3, [r4, #0x4]
	add	r0, r7, r3
	ldrh	r0, [r0, #0x6]
	lsl	r0, r0, #0x3
	add	r0, r0, ip
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1d
	cmp	r1, r0
	beq	.L316	@cond_branch
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r2, .L320+0x8
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1
	ldrh	r2, [r1, #0x2]
	add	r0, r0, r2
	strh	r0, [r1, #0x2]
	ldr	r0, [r4, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x20
	bl	SetContestantEffectStringID
	b	.L313
.L321:
	.align	2, 0
.L320:
	.word	gContestResources
	.word	gContestMoves
	.word	gContestEffects
.L316:
	add	r7, r7, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L317	@cond_branch
.L313:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 ContestEffect_BetterIfDiffType,.Lfe34-ContestEffect_BetterIfDiffType
	.align	2, 0
	.type	 ContestEffect_AffectedByPrevAppeal,function
	.thumb_func
ContestEffect_AffectedByPrevAppeal:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L333
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r1, [r0, #0x11]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L323	@cond_branch
	mov	r5, #0x0
	mov	r6, #0x0
.L327:
	ldr	r0, .L333
	ldr	r4, [r0]
	ldr	r1, [r4, #0x8]
	ldrb	r2, [r1, #0x11]
	add	r0, r1, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r1, r1, r5
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L326	@cond_branch
	ldr	r1, [r4, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r0, r1
	add	r1, r6, r1
	mov	r0, #0x2
	ldrsh	r2, [r3, r0]
	mov	r7, #0x2
	ldrsh	r0, [r1, r7]
	cmp	r2, r0
	ble	.L329	@cond_branch
	add	r0, r2, #0
	lsl	r0, r0, #0x1
	strh	r0, [r3, #0x2]
	ldr	r0, [r4, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x21
	bl	SetContestantEffectStringID
	b	.L326
.L334:
	.align	2, 0
.L333:
	.word	gContestResources
.L329:
	cmp	r2, r0
	bge	.L326	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0x2]
	ldr	r0, [r4, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x22
	bl	SetContestantEffectStringID
.L326:
	add	r6, r6, #0x1c
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L327	@cond_branch
.L323:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 ContestEffect_AffectedByPrevAppeal,.Lfe35-ContestEffect_AffectedByPrevAppeal
	.align	2, 0
	.type	 ContestEffect_ImproveConditionPreventNervousness,function
	.thumb_func
ContestEffect_ImproveConditionPreventNervousness:
	push	{r4, lr}
	ldr	r4, .L338
	ldr	r1, [r4]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r1
	ldrb	r3, [r1, #0xd]
	mov	r0, #0xd
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1d
	bgt	.L336	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0xa
	strb	r0, [r1, #0xd]
	ldr	r1, [r4]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0, #0x10]
	mov	r1, #0x31
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x10
	orr	r1, r1, r2
	strb	r1, [r0, #0x10]
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x23
	bl	SetContestantEffectStringID
	b	.L337
.L339:
	.align	2, 0
.L338:
	.word	gContestResources
.L336:
	add	r0, r2, #0
	mov	r1, #0x3a
	bl	SetContestantEffectStringID
.L337:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 ContestEffect_ImproveConditionPreventNervousness,.Lfe36-ContestEffect_ImproveConditionPreventNervousness
	.align	2, 0
	.type	 ContestEffect_BetterWithGoodCondition,function
	.thumb_func
ContestEffect_BetterWithGoodCondition:
	push	{lr}
	ldr	r3, .L343
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x11]
	mov	r2, #0x20
	orr	r1, r1, r2
	strb	r1, [r0, #0x11]
	ldr	r1, [r3]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0xd]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0
	beq	.L341	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x24
	bl	SetContestantEffectStringID
	b	.L342
.L344:
	.align	2, 0
.L343:
	.word	gContestResources
.L341:
	add	r0, r2, #0
	mov	r1, #0x3b
	bl	SetContestantEffectStringID
.L342:
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 ContestEffect_BetterWithGoodCondition,.Lfe37-ContestEffect_BetterWithGoodCondition
	.align	2, 0
	.type	 ContestEffect_NextAppealEarlier,function
	.thumb_func
ContestEffect_NextAppealEarlier:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L369
	ldr	r2, [r0]
	ldr	r1, [r2]
	ldrb	r1, [r1, #0x1]
	mov	ip, r0
	cmp	r1, #0x4
	bne	.LCB2909
	b	.L346	@long jump
.LCB2909:
	mov	r6, #0x0
	add	r4, r2, #0
.L350:
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	mov	r0, sp
	add	r3, r0, r1
	ldr	r2, [r4, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x19]
	strb	r0, [r3]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	asr	r1, r1, #0x18
	cmp	r1, #0x3
	ble	.L350	@cond_branch
	mov	r1, ip
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r2, sp
	add	r1, r2, r0
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r6, #0x0
	mov	r3, ip
	ldr	r7, [r3]
.L355:
	mov	r5, #0x0
.L359:
	lsl	r0, r5, #0x18
	asr	r2, r0, #0x18
	ldr	r0, [r7, #0x8]
	ldrb	r0, [r0, #0x11]
	cmp	r2, r0
	beq	.L358	@cond_branch
	lsl	r0, r6, #0x18
	asr	r3, r0, #0x18
	mov	r0, sp
	add	r4, r0, r2
	ldrb	r1, [r4]
	cmp	r3, r1
	bne	.L358	@cond_branch
	ldr	r0, [r7, #0x4]
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1, #0x19]
	cmp	r0, r1
	bne	.L358	@cond_branch
	add	r0, r3, #0x1
	strb	r0, [r4]
	b	.L357
.L370:
	.align	2, 0
.L369:
	.word	gContestResources
.L358:
	lsl	r0, r5, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r5, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x3
	ble	.L359	@cond_branch
.L357:
	cmp	r5, #0x4
	beq	.L353	@cond_branch
	lsl	r0, r6, #0x18
	mov	r3, #0x80
	lsl	r3, r3, #0x11
	add	r0, r0, r3
	lsr	r6, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x3
	ble	.L355	@cond_branch
.L353:
	mov	r4, ip
	ldr	r1, [r4]
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r3, sp
	add	r2, r3, r0
	mov	r0, #0x0
	strb	r0, [r2]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0, #0x10]
	mov	r1, #0x3f
	and	r1, r1, r2
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0, #0x10]
	mov	r6, #0x0
	mov	r3, ip
.L367:
	ldr	r0, [r3]
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	ldr	r2, [r0, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r4, sp
	add	r2, r4, r1
	ldrb	r2, [r2]
	strb	r2, [r0, #0x19]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	asr	r1, r1, #0x18
	cmp	r1, #0x3
	ble	.L367	@cond_branch
	mov	r0, ip
	ldr	r1, [r0]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0, #0x11]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0, #0x11]
	mov	r1, ip
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x25
	bl	SetContestantEffectStringID
.L346:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 ContestEffect_NextAppealEarlier,.Lfe38-ContestEffect_NextAppealEarlier
	.align	2, 0
	.type	 ContestEffect_NextAppealLater,function
	.thumb_func
ContestEffect_NextAppealLater:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	ldr	r0, .L395
	ldr	r2, [r0]
	ldr	r1, [r2]
	ldrb	r1, [r1, #0x1]
	mov	ip, r0
	cmp	r1, #0x4
	bne	.LCB3140
	b	.L372	@long jump
.LCB3140:
	mov	r6, #0x0
	add	r4, r2, #0
.L376:
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	mov	r0, sp
	add	r3, r0, r1
	ldr	r2, [r4, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x19]
	strb	r0, [r3]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	asr	r1, r1, #0x18
	cmp	r1, #0x3
	ble	.L376	@cond_branch
	mov	r1, ip
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r2, sp
	add	r1, r2, r0
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r6, #0x3
	mov	r3, ip
	ldr	r7, [r3]
	mov	r4, #0x1
	neg	r4, r4
	mov	r8, r4
.L381:
	mov	r5, #0x0
.L385:
	lsl	r0, r5, #0x18
	asr	r2, r0, #0x18
	ldr	r0, [r7, #0x8]
	ldrb	r0, [r0, #0x11]
	cmp	r2, r0
	beq	.L384	@cond_branch
	lsl	r0, r6, #0x18
	asr	r3, r0, #0x18
	mov	r0, sp
	add	r4, r0, r2
	ldrb	r1, [r4]
	cmp	r3, r1
	bne	.L384	@cond_branch
	ldr	r0, [r7, #0x4]
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1, #0x19]
	cmp	r0, r1
	bne	.L384	@cond_branch
	sub	r0, r3, #0x1
	strb	r0, [r4]
	b	.L383
.L396:
	.align	2, 0
.L395:
	.word	gContestResources
.L384:
	lsl	r0, r5, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r5, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x3
	ble	.L385	@cond_branch
.L383:
	cmp	r5, #0x4
	beq	.L379	@cond_branch
	lsl	r0, r6, #0x18
	mov	r3, #0xff
	lsl	r3, r3, #0x18
	add	r0, r0, r3
	lsr	r6, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, r8
	bgt	.L381	@cond_branch
.L379:
	mov	r4, ip
	ldr	r1, [r4]
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r3, sp
	add	r2, r3, r0
	mov	r0, #0x3
	strb	r0, [r2]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0, #0x10]
	mov	r1, #0x3f
	and	r1, r1, r2
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0, #0x10]
	mov	r6, #0x0
	mov	r3, ip
.L393:
	ldr	r0, [r3]
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	ldr	r2, [r0, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r4, sp
	add	r2, r4, r1
	ldrb	r2, [r2]
	strb	r2, [r0, #0x19]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	asr	r1, r1, #0x18
	cmp	r1, #0x3
	ble	.L393	@cond_branch
	mov	r0, ip
	ldr	r1, [r0]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0, #0x11]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r0, #0x11]
	mov	r1, ip
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x26
	bl	SetContestantEffectStringID
.L372:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 ContestEffect_NextAppealLater,.Lfe39-ContestEffect_NextAppealLater
	.align	2, 0
	.type	 ContestEffect_MakeScramblingTurnOrderEasier,function
	.thumb_func
ContestEffect_MakeScramblingTurnOrderEasier:
	bx	lr
.Lfe40:
	.size	 ContestEffect_MakeScramblingTurnOrderEasier,.Lfe40-ContestEffect_MakeScramblingTurnOrderEasier
	.align	2, 0
	.type	 ContestEffect_ScrambleNextTurnOrder,function
	.thumb_func
ContestEffect_ScrambleNextTurnOrder:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L423
	ldr	r1, [r0]
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x4
	beq	.L399	@cond_branch
	mov	r6, #0x0
	add	r5, sp, #0x4
	add	r4, r1, #0
	add	r7, r5, #0
.L403:
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	mov	r0, sp
	add	r3, r0, r1
	ldr	r2, [r4, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x19]
	strb	r0, [r3]
	add	r0, r7, r1
	strb	r6, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	asr	r1, r1, #0x18
	cmp	r1, #0x3
	ble	.L403	@cond_branch
	mov	r6, #0x0
	add	r7, r5, #0
.L408:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r2, r6, #0x18
	asr	r2, r2, #0x18
	mov	r1, #0x4
	sub	r1, r1, r2
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, #0x0
.L412:
	lsl	r0, r1, #0x18
	asr	r2, r0, #0x18
	add	r3, r7, r2
	ldrb	r1, [r3]
	add	r5, r0, #0
	cmp	r1, #0xff
	beq	.L411	@cond_branch
	cmp	r4, #0
	bne	.L414	@cond_branch
	mov	r1, sp
	add	r0, r1, r2
	strb	r6, [r0]
	mov	r0, #0xff
	strb	r0, [r3]
	b	.L407
.L424:
	.align	2, 0
.L423:
	.word	gContestResources
.L414:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L411:
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r5, r1
	lsr	r1, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x3
	ble	.L412	@cond_branch
.L407:
	lsl	r0, r6, #0x18
	mov	r6, #0x80
	lsl	r6, r6, #0x11
	add	r0, r0, r6
	lsr	r6, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x3
	ble	.L408	@cond_branch
	mov	r6, #0x0
	ldr	r5, .L425
	add	r4, r5, #0
.L421:
	ldr	r0, [r4]
	lsl	r3, r6, #0x18
	asr	r3, r3, #0x18
	ldr	r1, [r0, #0x4]
	lsl	r2, r3, #0x3
	sub	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r1, r2, r1
	mov	r6, sp
	add	r0, r6, r3
	ldrb	r0, [r0]
	strb	r0, [r1, #0x19]
	ldr	r0, [r4]
	ldr	r0, [r0, #0x4]
	add	r2, r2, r0
	ldrb	r1, [r2, #0x10]
	mov	r0, #0x3f
	and	r0, r0, r1
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x10]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r6, r3, #0x18
	asr	r3, r3, #0x18
	cmp	r3, #0x3
	ble	.L421	@cond_branch
	ldr	r1, [r5]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x11]
	mov	r2, #0x3
	orr	r1, r1, r2
	strb	r1, [r0, #0x11]
	ldr	r0, [r5]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x27
	bl	SetContestantEffectStringID
.L399:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L426:
	.align	2, 0
.L425:
	.word	gContestResources
.Lfe41:
	.size	 ContestEffect_ScrambleNextTurnOrder,.Lfe41-ContestEffect_ScrambleNextTurnOrder
	.align	2, 0
	.type	 ContestEffect_ExciteAudienceInAnyContest,function
	.thumb_func
ContestEffect_ExciteAudienceInAnyContest:
	push	{lr}
	ldr	r3, .L429
	ldr	r0, .L429+0x4
	ldr	r1, [r0]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r2, r0, r1
	ldrh	r0, [r2, #0x6]
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1d
	ldr	r1, .L429+0x8
	lsr	r0, r0, #0x1d
	ldrh	r1, [r1]
	cmp	r0, r1
	beq	.L428	@cond_branch
	ldrb	r0, [r2, #0x11]
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0x11]
.L428:
	pop	{r0}
	bx	r0
.L430:
	.align	2, 0
.L429:
	.word	gContestMoves
	.word	gContestResources
	.word	gSpecialVar_ContestCategory
.Lfe42:
	.size	 ContestEffect_ExciteAudienceInAnyContest,.Lfe42-ContestEffect_ExciteAudienceInAnyContest
	.align	2, 0
	.type	 ContestEffect_BadlyStartleMonsWithGoodAppeals,function
	.thumb_func
ContestEffect_BadlyStartleMonsWithGoodAppeals:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r0, #0x0
	mov	r8, r0
	mov	r4, #0x0
	ldr	r5, .L442
	mov	r6, #0x0
.L435:
	ldr	r3, [r5]
	ldr	r2, [r3, #0x8]
	ldrb	r0, [r2, #0x11]
	add	r0, r2, r0
	add	r1, r2, r4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L434	@cond_branch
	ldr	r0, [r3, #0x4]
	add	r1, r6, r0
	mov	r7, #0x2
	ldrsh	r0, [r1, r7]
	cmp	r0, #0
	ble	.L437	@cond_branch
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	strh	r0, [r2, #0x4]
	ldr	r0, [r3, #0x8]
	mov	r1, #0x4
	ldrsh	r0, [r0, r1]
	bl	RoundUp
	ldr	r1, [r5]
	ldr	r1, [r1, #0x8]
	strh	r0, [r1, #0x4]
	b	.L438
.L443:
	.align	2, 0
.L442:
	.word	gContestResources
.L437:
	mov	r0, #0xa
	strh	r0, [r2, #0x4]
.L438:
	ldr	r0, [r5]
	ldr	r0, [r0, #0x8]
	strb	r4, [r0, #0x8]
	ldr	r0, [r5]
	ldr	r1, [r0, #0x8]
	mov	r0, #0xff
	strb	r0, [r1, #0x9]
	bl	WasAtLeastOneOpponentJammed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L434	@cond_branch
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
.L434:
	add	r6, r6, #0x1c
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L435	@cond_branch
	mov	r7, r8
	cmp	r7, #0
	bne	.L441	@cond_branch
	ldr	r0, .L444
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L441:
	ldr	r0, .L444
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x30
	bl	SetContestantEffectStringID
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L445:
	.align	2, 0
.L444:
	.word	gContestResources
.Lfe43:
	.size	 ContestEffect_BadlyStartleMonsWithGoodAppeals,.Lfe43-ContestEffect_BadlyStartleMonsWithGoodAppeals
	.align	2, 0
	.type	 ContestEffect_BetterWhenAudienceExcited,function
	.thumb_func
ContestEffect_BetterWhenAudienceExcited:
	push	{r4, lr}
	ldr	r0, .L455
	ldr	r1, [r0]
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x13]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0
	bne	.L447	@cond_branch
	mov	r4, #0xa
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1a
	bl	SetContestantEffectStringID
	b	.L448
.L456:
	.align	2, 0
.L455:
	.word	gContestResources
.L447:
	cmp	r0, #0x1
	bne	.L449	@cond_branch
	mov	r4, #0x14
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1b
	bl	SetContestantEffectStringID
	b	.L448
.L449:
	cmp	r0, #0x2
	bne	.L451	@cond_branch
	mov	r4, #0x1e
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1c
	bl	SetContestantEffectStringID
	b	.L448
.L451:
	cmp	r0, #0x3
	bne	.L453	@cond_branch
	mov	r4, #0x32
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1d
	bl	SetContestantEffectStringID
	b	.L448
.L453:
	mov	r4, #0x3c
	ldr	r0, [r1, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x1e
	bl	SetContestantEffectStringID
.L448:
	ldr	r0, .L457
	ldr	r1, [r0]
	ldr	r0, [r1, #0x8]
	ldrb	r2, [r0, #0x11]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	strh	r4, [r0, #0x2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L458:
	.align	2, 0
.L457:
	.word	gContestResources
.Lfe44:
	.size	 ContestEffect_BetterWhenAudienceExcited,.Lfe44-ContestEffect_BetterWhenAudienceExcited
	.align	2, 0
	.type	 ContestEffect_DontExciteAudience,function
	.thumb_func
ContestEffect_DontExciteAudience:
	push	{r4, lr}
	ldr	r4, .L461
	ldr	r0, [r4]
	ldr	r2, [r0, #0x10]
	ldrb	r1, [r2, #0x1]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L460	@cond_branch
	mov	r0, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldr	r0, [r4]
	ldr	r3, [r0, #0x10]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrb	r2, [r3, #0x1]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x1]
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x3d
	bl	SetContestantEffectStringID
.L460:
	pop	{r4}
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	gContestResources
.Lfe45:
	.size	 ContestEffect_DontExciteAudience,.Lfe45-ContestEffect_DontExciteAudience
	.align	2, 0
	.type	 JamByMoveCategory,function
	.thumb_func
JamByMoveCategory:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r7, #0x0
	mov	r4, #0x0
	ldr	r6, .L475
	ldr	r0, .L475+0x4
	mov	r9, r0
	mov	r5, #0x0
.L467:
	ldr	r3, [r6]
	ldr	r2, [r3, #0x8]
	ldrb	r0, [r2, #0x11]
	add	r0, r2, r0
	add	r1, r2, r4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L466	@cond_branch
	ldr	r0, [r3, #0x4]
	add	r0, r5, r0
	ldrh	r0, [r0, #0x6]
	lsl	r0, r0, #0x3
	add	r0, r0, r9
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r8, r0
	bne	.L469	@cond_branch
	mov	r0, #0x28
	b	.L474
.L476:
	.align	2, 0
.L475:
	.word	gContestResources
	.word	gContestMoves
.L469:
	mov	r0, #0xa
.L474:
	strh	r0, [r2, #0x4]
	ldr	r0, [r6]
	ldr	r0, [r0, #0x8]
	strb	r4, [r0, #0x8]
	ldr	r0, [r6]
	ldr	r1, [r0, #0x8]
	mov	r0, #0xff
	strb	r0, [r1, #0x9]
	bl	WasAtLeastOneOpponentJammed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L466	@cond_branch
	add	r7, r7, #0x1
.L466:
	add	r5, r5, #0x1c
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L467	@cond_branch
	cmp	r7, #0
	bne	.L473	@cond_branch
	ldr	r0, .L477
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x11]
	mov	r1, #0x36
	bl	SetContestantEffectStringID2
.L473:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L478:
	.align	2, 0
.L477:
	.word	gContestResources
.Lfe46:
	.size	 JamByMoveCategory,.Lfe46-JamByMoveCategory
	.align	2, 0
	.type	 CanUnnerveContestant,function
	.thumb_func
CanUnnerveContestant:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L488
	ldr	r0, [r2]
	ldr	r0, [r0, #0x8]
	add	r0, r0, #0xd
	add	r0, r0, r3
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r1, [r0, #0x4]
	lsl	r0, r3, #0x3
	sub	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r2, r0, r1
	ldrb	r1, [r2, #0x10]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L480	@cond_branch
	add	r0, r3, #0
	mov	r1, #0x2d
	b	.L487
.L489:
	.align	2, 0
.L488:
	.word	gContestResources
.L480:
	ldrb	r0, [r2, #0x12]
	cmp	r0, #0
	bne	.L482	@cond_branch
	ldrb	r1, [r2, #0xb]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L484	@cond_branch
	ldrb	r1, [r2, #0xc]
	mov	r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L484	@cond_branch
	mov	r0, #0x1
	b	.L486
.L482:
	sub	r0, r0, #0x1
	strb	r0, [r2, #0x12]
	add	r0, r3, #0
	mov	r1, #0x2c
.L487:
	bl	SetContestantEffectStringID
.L484:
	mov	r0, #0x0
.L486:
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 CanUnnerveContestant,.Lfe47-CanUnnerveContestant
	.align	2, 0
	.type	 WasAtLeastOneOpponentJammed,function
	.thumb_func
WasAtLeastOneOpponentJammed:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	mov	r7, #0x0
	ldr	r4, .L509
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0xff
	beq	.L492	@cond_branch
	mov	r8, r4
.L494:
	mov	r1, r8
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	add	r0, r0, #0x8
	add	r0, r0, r7
	ldrb	r5, [r0]
	add	r6, r5, #0
	add	r0, r5, #0
	bl	CanUnnerveContestant
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L493	@cond_branch
	ldr	r2, [r4]
	ldr	r1, [r2, #0x8]
	ldrh	r0, [r1, #0x4]
	strh	r0, [r1, #0x6]
	ldr	r1, [r2, #0x4]
	lsl	r0, r5, #0x3
	sub	r0, r0, r5
	lsl	r4, r0, #0x2
	add	r1, r4, r1
	ldrb	r1, [r1, #0x10]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L496	@cond_branch
	ldr	r1, [r2, #0x8]
	mov	r2, #0x6
	ldrsh	r0, [r1, r2]
	lsl	r0, r0, #0x1
	strh	r0, [r1, #0x6]
.L496:
	mov	r0, r8
	ldr	r3, [r0]
	ldr	r0, [r3, #0x4]
	add	r1, r4, r0
	ldrb	r0, [r1, #0x10]
	mov	r4, #0x1
	and	r4, r4, r0
	cmp	r4, #0
	beq	.L497	@cond_branch
	ldr	r1, [r3, #0x8]
	mov	r0, #0xa
	strh	r0, [r1, #0x6]
	add	r0, r5, #0
	mov	r1, #0x2f
	bl	SetContestantEffectStringID
	b	.L493
.L510:
	.align	2, 0
.L509:
	.word	gContestResources
.L497:
	ldr	r2, [r3, #0x8]
	ldrb	r1, [r1, #0xf]
	ldrh	r0, [r2, #0x6]
	sub	r0, r0, r1
	strh	r0, [r2, #0x6]
	ldr	r2, [r3, #0x8]
	ldrh	r1, [r2, #0x6]
	mov	r3, #0x6
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	bgt	.L499	@cond_branch
	strh	r4, [r2, #0x6]
	add	r0, r5, #0
	mov	r1, #0x2e
	bl	SetContestantEffectStringID
	b	.L493
.L499:
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	JamContestant
	mov	r1, r8
	ldr	r0, [r1]
	ldr	r0, [r0, #0x8]
	ldrb	r1, [r0, #0x6]
	add	r0, r6, #0
	bl	SetStartledString
	lsl	r0, r6, #0x1
	mov	r2, sp
	add	r1, r2, r0
	mov	r3, r8
	ldr	r0, [r3]
	ldr	r0, [r0, #0x8]
	ldrh	r0, [r0, #0x6]
	strh	r0, [r1]
.L493:
	add	r7, r7, #0x1
	ldr	r4, .L511
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	add	r0, r0, #0x8
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L494	@cond_branch
.L492:
	mov	r7, #0x0
	mov	r1, sp
.L505:
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	beq	.L504	@cond_branch
	mov	r0, #0x1
	b	.L508
.L512:
	.align	2, 0
.L511:
	.word	gContestResources
.L504:
	add	r1, r1, #0x2
	add	r7, r7, #0x1
	cmp	r7, #0x3
	ble	.L505	@cond_branch
	mov	r0, #0x0
.L508:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 WasAtLeastOneOpponentJammed,.Lfe48-WasAtLeastOneOpponentJammed
	.align	2, 0
	.type	 JamContestant,function
	.thumb_func
JamContestant:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L514
	ldr	r4, [r2]
	ldr	r3, [r4, #0x4]
	lsl	r2, r0, #0x3
	sub	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r3, r2, r3
	ldrh	r0, [r3, #0x2]
	sub	r0, r0, r1
	strh	r0, [r3, #0x2]
	ldr	r0, [r4, #0x4]
	add	r2, r2, r0
	ldrb	r0, [r2, #0xe]
	add	r1, r1, r0
	strb	r1, [r2, #0xe]
	pop	{r4}
	pop	{r0}
	bx	r0
.L515:
	.align	2, 0
.L514:
	.word	gContestResources
.Lfe49:
	.size	 JamContestant,.Lfe49-JamContestant
	.align	2, 0
	.type	 RoundTowardsZero,function
	.thumb_func
RoundTowardsZero:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	asr	r4, r0, #0x10
	add	r0, r4, #0
	cmp	r4, #0
	bge	.L517	@cond_branch
	neg	r0, r4
.L517:
	mov	r1, #0xa
	bl	__modsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, #0
	bge	.L518	@cond_branch
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L520	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0xa
	add	r0, r1, r0
	b	.L521
.L518:
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	sub	r0, r4, r0
.L521:
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L520:
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 RoundTowardsZero,.Lfe50-RoundTowardsZero
	.align	2, 0
	.type	 RoundUp,function
	.thumb_func
RoundUp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	asr	r4, r0, #0x10
	add	r0, r4, #0
	cmp	r4, #0
	bge	.L523	@cond_branch
	neg	r0, r4
.L523:
	mov	r1, #0xa
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L524	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0xa
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L524:
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 RoundUp,.Lfe51-RoundUp
.text
	.align	2, 0

