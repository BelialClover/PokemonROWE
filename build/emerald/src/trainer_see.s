@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gApproachingTrainerId
	.section ewram_data,"aw"
	.type	 gApproachingTrainerId,object
	.size	 gApproachingTrainerId,1
gApproachingTrainerId:
	.byte	0x0
	.section .rodata
	.type	 sEmotion_ExclamationMarkGfx,object
sEmotion_ExclamationMarkGfx:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sEmotion_ExclamationMarkGfx,128
	.type	 sEmotion_QuestionMarkGfx,object
sEmotion_QuestionMarkGfx:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xfe
	.byte	0xef
	.byte	0xe0
	.byte	0xef
	.byte	0xfe
	.byte	0xef
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xfe
	.byte	0xef
	.byte	0xfe
	.byte	0xe
	.byte	0xfe
	.byte	0xef
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sEmotion_QuestionMarkGfx,128
	.type	 sEmotion_HeartGfx,object
sEmotion_HeartGfx:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xfe
	.byte	0xef
	.byte	0xe0
	.byte	0xef
	.byte	0x5f
	.byte	0xf5
	.byte	0xe0
	.byte	0xef
	.byte	0x5f
	.byte	0x55
	.byte	0xe0
	.byte	0xef
	.byte	0x5f
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xfe
	.byte	0xef
	.byte	0xfe
	.byte	0xe
	.byte	0x5f
	.byte	0xf5
	.byte	0xfe
	.byte	0xe
	.byte	0x55
	.byte	0xf5
	.byte	0xfe
	.byte	0xe
	.byte	0x55
	.byte	0xf5
	.byte	0xfe
	.byte	0xe
	.byte	0xe0
	.byte	0xef
	.byte	0x5f
	.byte	0x55
	.byte	0xe0
	.byte	0xef
	.byte	0xfe
	.byte	0x55
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0x5f
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0xf5
	.byte	0xfe
	.byte	0xe
	.byte	0x55
	.byte	0xef
	.byte	0xfe
	.byte	0xe
	.byte	0xf5
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sEmotion_HeartGfx,128
	.align	2, 0
	.type	 sDirectionalApproachDistanceFuncs,object
sDirectionalApproachDistanceFuncs:
	.word	GetTrainerApproachDistanceSouth
	.word	GetTrainerApproachDistanceNorth
	.word	GetTrainerApproachDistanceWest
	.word	GetTrainerApproachDistanceEast
	.size	 sDirectionalApproachDistanceFuncs,16
	.align	2, 0
	.type	 sTrainerSeeFuncList,object
sTrainerSeeFuncList:
	.word	sub_80B4178
	.word	TrainerExclamationMark
	.word	WaitTrainerExclamationMark
	.word	TrainerMoveToPlayer
	.word	PlayerFaceApproachingTrainer
	.word	WaitPlayerFaceApproachingTrainer
	.word	RevealDisguisedTrainer
	.word	WaitRevealDisguisedTrainer
	.word	RevealHiddenTrainer
	.word	PopOutOfAshHiddenTrainer
	.word	JumpInPlaceHiddenTrainer
	.word	WaitRevealHiddenTrainer
	.size	 sTrainerSeeFuncList,48
	.align	2, 0
	.type	 sTrainerSeeFuncList2,object
sTrainerSeeFuncList2:
	.word	RevealHiddenTrainer
	.word	PopOutOfAshHiddenTrainer
	.word	JumpInPlaceHiddenTrainer
	.word	WaitRevealHiddenTrainer
	.size	 sTrainerSeeFuncList2,16
	.align	2, 0
	.type	 sOamData_Icons,object
	.size	 sOamData_Icons,8
sOamData_Icons:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteImageTable_ExclamationQuestionMark,object
sSpriteImageTable_ExclamationQuestionMark:
	.word	sEmotion_ExclamationMarkGfx
	.short	0x80
	.space	2
	.word	sEmotion_QuestionMarkGfx
	.short	0x80
	.space	2
	.size	 sSpriteImageTable_ExclamationQuestionMark,16
	.align	2, 0
	.type	 sSpriteImageTable_HeartIcon,object
sSpriteImageTable_HeartIcon:
	.word	sEmotion_HeartGfx
	.short	0x80
	.space	2
	.size	 sSpriteImageTable_HeartIcon,8
	.align	2, 0
	.type	 sSpriteAnim_Icons1,object
sSpriteAnim_Icons1:
	.short	0x0
	.byte	0x3c
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Icons1,8
	.align	2, 0
	.type	 sSpriteAnim_Icons2,object
sSpriteAnim_Icons2:
	.short	0x1
	.byte	0x3c
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Icons2,8
	.align	2, 0
	.type	 sSpriteAnimTable_Icons,object
sSpriteAnimTable_Icons:
	.word	sSpriteAnim_Icons1
	.word	sSpriteAnim_Icons2
	.size	 sSpriteAnimTable_Icons,8
	.align	2, 0
	.type	 sSpriteTemplate_ExclamationQuestionMark,object
	.size	 sSpriteTemplate_ExclamationQuestionMark,24
sSpriteTemplate_ExclamationQuestionMark:
	.short	0xffff
	.short	0xffff
	.word	sOamData_Icons
	.word	sSpriteAnimTable_Icons
	.word	sSpriteImageTable_ExclamationQuestionMark
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_TrainerIcons
	.align	2, 0
	.type	 sSpriteTemplate_HeartIcon,object
	.size	 sSpriteTemplate_HeartIcon,24
sSpriteTemplate_HeartIcon:
	.short	0xffff
	.short	0x1004
	.word	sOamData_Icons
	.word	sSpriteAnimTable_Icons
	.word	sSpriteImageTable_HeartIcon
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_TrainerIcons
.text
	.align	2, 0
	.globl	CheckForTrainersWantingBattle
	.type	 CheckForTrainersWantingBattle,function
	.thumb_func
CheckForTrainersWantingBattle:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L24
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L24+0x4
	strb	r1, [r0]
	mov	r4, #0x0
	ldr	r6, .L24+0x8
.L6:
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r0, r6
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L5	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0x1
	beq	.L8	@cond_branch
	cmp	r0, #0x3
	bne	.L5	@cond_branch
.L8:
	add	r0, r4, #0
	bl	CheckTrainer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L4	@cond_branch
	cmp	r0, #0
	beq	.L5	@cond_branch
	ldr	r0, .L24
	ldrb	r1, [r0]
	add	r5, r0, #0
	cmp	r1, #0x1
	bhi	.L14	@cond_branch
	bl	GetMonsStateToDoubles_2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L4	@cond_branch
.L5:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L6	@cond_branch
.L4:
	ldr	r0, .L24
	ldrb	r4, [r0]
	add	r5, r0, #0
	cmp	r4, #0x1
	bne	.L14	@cond_branch
	bl	ResetTrainerOpponentIds
	ldr	r2, .L24+0xc
	ldrb	r0, [r5]
	sub	r0, r0, #0x1
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	ConfigureAndSetUpOneTrainerBattle
	ldr	r0, .L24+0x10
	strb	r4, [r0]
	mov	r0, #0x1
	b	.L23
.L25:
	.align	2, 0
.L24:
	.word	gNoOfApproachingTrainers
	.word	gApproachingTrainerId
	.word	gObjectEvents
	.word	gApproachingTrainers
	.word	gTrainerApproachedPlayer
.L14:
	ldrb	r0, [r5]
	cmp	r0, #0x2
	bne	.L16	@cond_branch
	bl	ResetTrainerOpponentIds
	mov	r4, #0x0
	ldrb	r5, [r5]
	cmp	r4, r5
	bcs	.L18	@cond_branch
	ldr	r6, .L26
	add	r7, r6, #0x4
	ldr	r5, .L26+0x4
.L20:
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r0, r1, r6
	ldrb	r0, [r0]
	add	r1, r1, r7
	ldr	r1, [r1]
	bl	ConfigureTwoTrainersBattle
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	ldr	r0, .L26+0x8
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L20	@cond_branch
.L18:
	bl	SetUpTwoTrainersBattle
	ldr	r1, .L26+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L26+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L23
.L27:
	.align	2, 0
.L26:
	.word	gApproachingTrainers
	.word	gApproachingTrainerId
	.word	gNoOfApproachingTrainers
	.word	gTrainerApproachedPlayer
.L16:
	ldr	r1, .L28
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x0
.L23:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L29:
	.align	2, 0
.L28:
	.word	gTrainerApproachedPlayer
.Lfe1:
	.size	 CheckForTrainersWantingBattle,.Lfe1-CheckForTrainersWantingBattle
	.align	2, 0
	.type	 CheckTrainer,function
	.thumb_func
CheckTrainer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x1
	mov	r9, r0
	bl	InTrainerHill
	cmp	r0, #0x1
	bne	.L31	@cond_branch
	bl	GetTrainerHillTrainerScript
	b	.L45
.L31:
	add	r0, r5, #0
	bl	GetObjectEventScriptPointerByObjectEventId
.L45:
	add	r7, r0, #0
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L33	@cond_branch
	add	r0, r5, #0
	bl	GetBattlePyramidTrainerFlag
.L46:
	lsl	r0, r0, #0x18
.L47:
	cmp	r0, #0
	beq	.L35	@cond_branch
	b	.L40
.L33:
	bl	InTrainerHill
	cmp	r0, #0x1
	bne	.L36	@cond_branch
	add	r0, r5, #0
	bl	GetHillTrainerFlag
	b	.L46
.L36:
	add	r0, r7, #0
	bl	GetTrainerFlagFromScriptPointer
	b	.L47
.L35:
	lsl	r4, r5, #0x3
	add	r0, r4, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L48
	add	r0, r0, r1
	bl	GetTrainerApproachDistance
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r8, r4
	cmp	r6, #0
	beq	.L40	@cond_branch
	ldrb	r0, [r7, #0x1]
	cmp	r0, #0x4
	beq	.L42	@cond_branch
	cmp	r0, #0x7
	beq	.L42	@cond_branch
	cmp	r0, #0x6
	bne	.L41	@cond_branch
.L42:
	bl	GetMonsStateToDoubles_2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L40	@cond_branch
	mov	r1, #0x2
	mov	r9, r1
.L41:
	ldr	r2, .L48+0x4
	ldr	r4, .L48+0x8
	ldrb	r1, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strb	r5, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r2, #0x4
	add	r0, r0, r1
	str	r7, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strb	r6, [r0, #0x1]
	mov	r1, r8
	add	r0, r1, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L48
	add	r0, r0, r1
	sub	r1, r6, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	TrainerApproachPlayer
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	mov	r0, r9
	b	.L44
.L49:
	.align	2, 0
.L48:
	.word	gObjectEvents
	.word	gApproachingTrainers
	.word	gNoOfApproachingTrainers
.L40:
	mov	r0, #0x0
.L44:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 CheckTrainer,.Lfe2-CheckTrainer
	.align	2, 0
	.type	 GetTrainerApproachDistance,function
	.thumb_func
GetTrainerApproachDistance:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r7, r0, #0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	ldrb	r0, [r7, #0x7]
	mov	r8, r4
	cmp	r0, #0x1
	bne	.L51	@cond_branch
	ldr	r1, .L61
	ldrb	r0, [r7, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1a
	sub	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r1, [r7, #0x1d]
	mov	r2, sp
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r5, #0x0
	ldrsh	r3, [r4, r5]
	ldr	r4, [r0]
	add	r0, r7, #0
	bl	_call_via_r4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldrb	r2, [r7, #0x18]
	lsl	r2, r2, #0x1c
	lsr	r2, r2, #0x1c
	add	r0, r7, #0
	add	r1, r6, #0
	bl	CheckPathBetweenTrainerAndPlayer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L59
.L62:
	.align	2, 0
.L61:
	.word	sDirectionalApproachDistanceFuncs
.L60:
	add	r0, r6, #0
	b	.L59
.L51:
	mov	r5, #0x0
.L56:
	ldr	r0, .L63
	lsl	r4, r5, #0x2
	add	r4, r4, r0
	ldrb	r1, [r7, #0x1d]
	mov	r0, sp
	mov	r6, #0x0
	ldrsh	r2, [r0, r6]
	mov	r0, r8
	mov	r6, #0x0
	ldrsh	r3, [r0, r6]
	ldr	r4, [r4]
	add	r0, r7, #0
	bl	_call_via_r4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r7, #0
	add	r1, r6, #0
	add	r2, r4, #0
	bl	CheckPathBetweenTrainerAndPlayer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L60	@cond_branch
	add	r5, r4, #0
	cmp	r5, #0x3
	bls	.L56	@cond_branch
	mov	r0, #0x0
.L59:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L64:
	.align	2, 0
.L63:
	.word	sDirectionalApproachDistanceFuncs
.Lfe3:
	.size	 GetTrainerApproachDistance,.Lfe3-GetTrainerApproachDistance
	.align	2, 0
	.type	 GetTrainerApproachDistanceSouth,function
	.thumb_func
GetTrainerApproachDistanceSouth:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r3, r3, #0x10
	lsr	r5, r3, #0x10
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r0, r2
	bne	.L66	@cond_branch
	lsl	r0, r5, #0x10
	asr	r2, r0, #0x10
	ldrh	r3, [r4, #0x12]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r2, r0
	ble	.L66	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r1, r1, r0
	cmp	r2, r1
	bgt	.L66	@cond_branch
	sub	r0, r5, r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L68
.L66:
	mov	r0, #0x0
.L68:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 GetTrainerApproachDistanceSouth,.Lfe4-GetTrainerApproachDistanceSouth
	.align	2, 0
	.type	 GetTrainerApproachDistanceNorth,function
	.thumb_func
GetTrainerApproachDistanceNorth:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r3, r3, #0x10
	lsr	r5, r3, #0x10
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r0, r2
	bne	.L70	@cond_branch
	lsl	r0, r5, #0x10
	asr	r2, r0, #0x10
	ldrh	r3, [r4, #0x12]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r2, r0
	bge	.L70	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	sub	r1, r1, r0
	cmp	r2, r1
	blt	.L70	@cond_branch
	sub	r0, r3, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L72
.L70:
	mov	r0, #0x0
.L72:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 GetTrainerApproachDistanceNorth,.Lfe5-GetTrainerApproachDistanceNorth
	.align	2, 0
	.type	 GetTrainerApproachDistanceWest,function
	.thumb_func
GetTrainerApproachDistanceWest:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	cmp	r0, r3
	bne	.L74	@cond_branch
	lsl	r0, r5, #0x10
	asr	r3, r0, #0x10
	ldrh	r2, [r4, #0x10]
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r3, r0
	bge	.L74	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	sub	r1, r1, r0
	cmp	r3, r1
	blt	.L74	@cond_branch
	sub	r0, r2, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L76
.L74:
	mov	r0, #0x0
.L76:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 GetTrainerApproachDistanceWest,.Lfe6-GetTrainerApproachDistanceWest
	.align	2, 0
	.type	 GetTrainerApproachDistanceEast,function
	.thumb_func
GetTrainerApproachDistanceEast:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	cmp	r0, r3
	bne	.L78	@cond_branch
	lsl	r0, r5, #0x10
	asr	r3, r0, #0x10
	ldrh	r2, [r4, #0x10]
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r3, r0
	ble	.L78	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r1, r1, r0
	cmp	r3, r1
	bgt	.L78	@cond_branch
	sub	r0, r5, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L80
.L78:
	mov	r0, #0x0
.L80:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 GetTrainerApproachDistanceEast,.Lfe7-GetTrainerApproachDistanceEast
	.align	2, 0
	.type	 CheckPathBetweenTrainerAndPlayer,function
	.thumb_func
CheckPathBetweenTrainerAndPlayer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	cmp	r1, #0
	beq	.L92	@cond_branch
	ldrh	r1, [r6, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r6, #0x12]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	add	r0, r7, #0
	mov	r1, sp
	add	r2, r4, #0
	bl	MoveCoords
	mov	r5, #0x0
	mov	r8, r4
	mov	r4, r9
	sub	r4, r4, #0x1
	cmp	r5, r4
	bge	.L84	@cond_branch
.L86:
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r3, r8
	mov	r0, #0x0
	ldrsh	r2, [r3, r0]
	add	r0, r6, #0
	add	r3, r7, #0
	bl	GetCollisionFlagsAtCoords
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L85	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L91	@cond_branch
.L85:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r7, #0
	mov	r1, sp
	mov	r2, r8
	bl	MoveCoords
	cmp	r5, r4
	blt	.L86	@cond_branch
.L84:
	ldrb	r4, [r6, #0x19]
	lsl	r5, r4, #0x1c
	lsr	r5, r5, #0x1c
	lsr	r4, r4, #0x4
	mov	r0, #0x0
	strb	r0, [r6, #0x19]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r3, r8
	mov	r0, #0x0
	ldrsh	r2, [r3, r0]
	add	r0, r6, #0
	add	r3, r7, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r4, r4, #0x4
	orr	r5, r5, r4
	strb	r5, [r6, #0x19]
	cmp	r1, #0x4
	beq	.L89	@cond_branch
.L92:
.L91:
	mov	r0, #0x0
	b	.L90
.L89:
	mov	r0, r9
.L90:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 CheckPathBetweenTrainerAndPlayer,.Lfe8-CheckPathBetweenTrainerAndPlayer
	.align	2, 0
	.type	 TrainerApproachPlayer,function
	.thumb_func
TrainerApproachPlayer:
	push	{r4, r5, lr}
	lsl	r5, r1, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L94
	mov	r1, #0x50
	bl	CreateTask
	ldr	r4, .L94+0x4
	ldr	r3, .L94+0x8
	ldrb	r2, [r3]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	strb	r0, [r1, #0x8]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x8]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L94+0xc
	add	r1, r1, r0
	strh	r5, [r1, #0xe]
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0]
	strh	r0, [r1, #0x16]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L95:
	.align	2, 0
.L94:
	.word	Task_RunTrainerSeeFuncList
	.word	gApproachingTrainers
	.word	gNoOfApproachingTrainers
	.word	gTasks
.Lfe9:
	.size	 TrainerApproachPlayer,.Lfe9-TrainerApproachPlayer
	.align	2, 0
	.type	 sub_80B40C8,function
	.thumb_func
sub_80B40C8:
	push	{r4, r5, lr}
	add	r2, r0, #0
	ldr	r0, .L99
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L97	@cond_branch
	ldr	r0, .L99+0x4
	ldrb	r5, [r0, #0x8]
	b	.L98
.L100:
	.align	2, 0
.L99:
	.word	gApproachingTrainerId
	.word	gApproachingTrainers
.L97:
	ldr	r0, .L101
	ldrb	r5, [r0, #0x14]
.L98:
	ldr	r4, .L101+0x4
	add	r0, r5, #0
	add	r1, r4, #0
	bl	SetTaskFuncWithFollowupFunc
	ldr	r1, .L101+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	add	r0, r5, #0
	bl	_call_via_r4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	gApproachingTrainers
	.word	Task_RunTrainerSeeFuncList
	.word	gTasks
.Lfe10:
	.size	 sub_80B40C8,.Lfe10-sub_80B40C8
	.align	2, 0
	.type	 Task_RunTrainerSeeFuncList,function
	.thumb_func
Task_RunTrainerSeeFuncList:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L110
	add	r4, r0, r1
	mov	r0, #0x16
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L110+0x4
	add	r5, r0, r1
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	bne	.L104	@cond_branch
	add	r0, r6, #0
	bl	SwitchTaskToFollowupFunc
	b	.L105
.L111:
	.align	2, 0
.L110:
	.word	gTasks
	.word	gObjectEvents
.L104:
	ldr	r7, .L112
.L106:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r3, [r0]
	add	r0, r6, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L106	@cond_branch
.L105:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	sTrainerSeeFuncList
.Lfe11:
	.size	 Task_RunTrainerSeeFuncList,.Lfe11-Task_RunTrainerSeeFuncList
	.align	2, 0
	.type	 sub_80B4178,function
	.thumb_func
sub_80B4178:
	mov	r0, #0x0
	bx	lr
.Lfe12:
	.size	 sub_80B4178,.Lfe12-sub_80B4178
	.align	2, 0
	.type	 TrainerExclamationMark,function
	.thumb_func
TrainerExclamationMark:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r1, .L116
	add	r2, r1, #0x4
	add	r3, r1, #0
	add	r3, r3, #0x8
	add	r0, r4, #0
	bl	ObjectEventGetLocalIdAndMap
	mov	r0, #0x0
	bl	FieldEffectStart
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L117:
	.align	2, 0
.L116:
	.word	gFieldEffectArguments
.Lfe13:
	.size	 TrainerExclamationMark,.Lfe13-TrainerExclamationMark
	.align	2, 0
	.type	 WaitTrainerExclamationMark,function
	.thumb_func
WaitTrainerExclamationMark:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	mov	r0, #0x0
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L119	@cond_branch
	mov	r0, #0x0
	b	.L123
.L119:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	ldrb	r0, [r5, #0x6]
	sub	r0, r0, #0x39
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L121	@cond_branch
	mov	r0, #0x6
	strh	r0, [r4, #0x8]
.L121:
	ldrb	r0, [r5, #0x6]
	cmp	r0, #0x3f
	bne	.L122	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x8]
.L122:
	mov	r0, #0x1
.L123:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 WaitTrainerExclamationMark,.Lfe14-WaitTrainerExclamationMark
	.align	2, 0
	.type	 TrainerMoveToPlayer,function
	.thumb_func
TrainerMoveToPlayer:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L126	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L125	@cond_branch
.L126:
	mov	r1, #0xe
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L127	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetWalkNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0xe]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	b	.L125
.L127:
	add	r0, r4, #0
	mov	r1, #0x3e
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L125:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 TrainerMoveToPlayer,.Lfe15-TrainerMoveToPlayer
	.align	2, 0
	.type	 PlayerFaceApproachingTrainer,function
	.thumb_func
PlayerFaceApproachingTrainer:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	add	r5, r2, #0
	add	r0, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L130	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L133	@cond_branch
.L130:
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetTrainerFacingDirectionMovementType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	SetTrainerMovementType
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetTrainerFacingDirectionMovementType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	TryOverrideTemplateCoordsForObjectEvent
	add	r0, r5, #0
	bl	OverrideTemplateCoordsForObjectEvent
	ldr	r0, .L134
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L134+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L131	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L133	@cond_branch
.L131:
	bl	sub_808BCE8
	ldr	r0, .L134
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L134+0x4
	add	r4, r4, r0
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L133:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L135:
	.align	2, 0
.L134:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe16:
	.size	 PlayerFaceApproachingTrainer,.Lfe16-PlayerFaceApproachingTrainer
	.align	2, 0
	.type	 WaitPlayerFaceApproachingTrainer,function
	.thumb_func
WaitPlayerFaceApproachingTrainer:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L139
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L139+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L138	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L137	@cond_branch
.L138:
	add	r0, r5, #0
	bl	SwitchTaskToFollowupFunc
.L137:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L140:
	.align	2, 0
.L139:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe17:
	.size	 WaitPlayerFaceApproachingTrainer,.Lfe17-WaitPlayerFaceApproachingTrainer
	.align	2, 0
	.type	 RevealDisguisedTrainer,function
	.thumb_func
RevealDisguisedTrainer:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L143	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L142	@cond_branch
.L143:
	add	r0, r4, #0
	mov	r1, #0x59
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L142:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 RevealDisguisedTrainer,.Lfe18-RevealDisguisedTrainer
	.align	2, 0
	.type	 WaitRevealDisguisedTrainer,function
	.thumb_func
WaitRevealDisguisedTrainer:
	push	{r4, lr}
	add	r4, r1, #0
	add	r0, r2, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L145	@cond_branch
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
.L145:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 WaitRevealDisguisedTrainer,.Lfe19-WaitRevealDisguisedTrainer
	.align	2, 0
	.type	 RevealHiddenTrainer,function
	.thumb_func
RevealHiddenTrainer:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L148	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L147	@cond_branch
.L148:
	add	r0, r4, #0
	mov	r1, #0x3e
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L147:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 RevealHiddenTrainer,.Lfe20-RevealHiddenTrainer
	.align	2, 0
	.type	 PopOutOfAshHiddenTrainer,function
	.thumb_func
PopOutOfAshHiddenTrainer:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L150	@cond_branch
	ldr	r2, .L151
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	str	r0, [r2]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	str	r0, [r2, #0x4]
	ldr	r3, .L151+0x4
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	str	r0, [r2, #0x8]
	mov	r0, #0x2
	str	r0, [r2, #0xc]
	mov	r0, #0x31
	bl	FieldEffectStart
	strh	r0, [r5, #0x10]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L150:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L152:
	.align	2, 0
.L151:
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe21:
	.size	 PopOutOfAshHiddenTrainer,.Lfe21-PopOutOfAshHiddenTrainer
	.align	2, 0
	.type	 JumpInPlaceHiddenTrainer,function
	.thumb_func
JumpInPlaceHiddenTrainer:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r2, .L155
	mov	r1, #0x10
	ldrsh	r0, [r5, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x2b
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bne	.L154	@cond_branch
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x3]
	ldrb	r0, [r4]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r4]
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetJumpInPlaceMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L154:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L156:
	.align	2, 0
.L155:
	.word	gSprites
.Lfe22:
	.size	 JumpInPlaceHiddenTrainer,.Lfe22-JumpInPlaceHiddenTrainer
	.align	2, 0
	.type	 WaitRevealHiddenTrainer,function
	.thumb_func
WaitRevealHiddenTrainer:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r0, #0x31
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L158	@cond_branch
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
.L158:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 WaitRevealHiddenTrainer,.Lfe23-WaitRevealHiddenTrainer
	.align	2, 0
	.type	 sub_80B44C8,function
	.thumb_func
sub_80B44C8:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L163
	add	r4, r0, r1
	add	r0, r4, #0
	add	r0, r0, #0xa
	mov	r1, sp
	bl	LoadWordFromTwoHalfwords
	mov	r1, #0x16
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L160	@cond_branch
	ldr	r0, [sp]
	bl	ObjectEventClearHeldMovement
	ldrh	r0, [r4, #0x16]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x16]
.L160:
	ldr	r1, .L163+0x4
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [sp]
	ldr	r3, [r0]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	_call_via_r3
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	bne	.L161	@cond_branch
	mov	r0, #0x31
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L161	@cond_branch
	ldr	r4, [sp]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetTrainerFacingDirectionMovementType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	SetTrainerMovementType
	ldr	r4, [sp]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetTrainerFacingDirectionMovementType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	TryOverrideTemplateCoordsForObjectEvent
	add	r0, r5, #0
	bl	DestroyTask
	b	.L162
.L164:
	.align	2, 0
.L163:
	.word	gTasks
	.word	sTrainerSeeFuncList2
.L161:
	ldr	r2, [sp]
	ldrb	r1, [r2]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
.L162:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 sub_80B44C8,.Lfe24-sub_80B44C8
	.align	2, 0
	.globl	sub_80B4578
	.type	 sub_80B4578,function
	.thumb_func
sub_80B4578:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L166
	mov	r1, #0x0
	bl	CreateTask
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L166+0x4
	add	r0, r0, r1
	add	r0, r0, #0x2
	add	r1, r4, #0
	bl	StoreWordInTwoHalfwords
	pop	{r4}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	sub_80B44C8
	.word	gTasks+0x8
.Lfe25:
	.size	 sub_80B4578,.Lfe25-sub_80B4578
	.align	2, 0
	.globl	EndTrainerApproach
	.type	 EndTrainerApproach,function
	.thumb_func
EndTrainerApproach:
	push	{lr}
	ldr	r0, .L169
	bl	sub_80B40C8
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	Task_DestroyTrainerApproachTask
.Lfe26:
	.size	 EndTrainerApproach,.Lfe26-EndTrainerApproach
	.align	2, 0
	.type	 Task_DestroyTrainerApproachTask,function
	.thumb_func
Task_DestroyTrainerApproachTask:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	bl	EnableBothScriptContexts
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 Task_DestroyTrainerApproachTask,.Lfe27-Task_DestroyTrainerApproachTask
	.align	2, 0
	.globl	TryPrepareSecondApproachingTrainer
	.type	 TryPrepareSecondApproachingTrainer,function
	.thumb_func
TryPrepareSecondApproachingTrainer:
	push	{lr}
	ldr	r0, .L177
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L173	@cond_branch
	ldr	r1, .L177+0x4
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L174	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L177+0x8
	mov	r0, #0x1
	strh	r0, [r1]
	bl	UnfreezeObjectEvents
	ldr	r0, .L177+0xc
	ldrb	r0, [r0, #0xc]
	bl	FreezeObjectEventsExceptOne
	b	.L176
.L178:
	.align	2, 0
.L177:
	.word	gNoOfApproachingTrainers
	.word	gApproachingTrainerId
	.word	gSpecialVar_Result
	.word	gApproachingTrainers
.L174:
	mov	r0, #0x0
	strb	r0, [r1]
.L173:
	ldr	r1, .L179
	mov	r0, #0x0
	strh	r0, [r1]
.L176:
	pop	{r0}
	bx	r0
.L180:
	.align	2, 0
.L179:
	.word	gSpecialVar_Result
.Lfe28:
	.size	 TryPrepareSecondApproachingTrainer,.Lfe28-TryPrepareSecondApproachingTrainer
	.align	2, 0
	.globl	FldEff_ExclamationMarkIcon
	.type	 FldEff_ExclamationMarkIcon,function
	.thumb_func
FldEff_ExclamationMarkIcon:
	push	{lr}
	ldr	r0, .L183
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x53
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L182	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L183+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetIconSpriteData
.L182:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L184:
	.align	2, 0
.L183:
	.word	sSpriteTemplate_ExclamationQuestionMark
	.word	gSprites
.Lfe29:
	.size	 FldEff_ExclamationMarkIcon,.Lfe29-FldEff_ExclamationMarkIcon
	.align	2, 0
	.globl	FldEff_QuestionMarkIcon
	.type	 FldEff_QuestionMarkIcon,function
	.thumb_func
FldEff_QuestionMarkIcon:
	push	{lr}
	ldr	r0, .L187
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L186	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L187+0x4
	add	r0, r0, r1
	mov	r1, #0x21
	mov	r2, #0x1
	bl	SetIconSpriteData
.L186:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L188:
	.align	2, 0
.L187:
	.word	sSpriteTemplate_ExclamationQuestionMark
	.word	gSprites
.Lfe30:
	.size	 FldEff_QuestionMarkIcon,.Lfe30-FldEff_QuestionMarkIcon
	.align	2, 0
	.globl	FldEff_HeartIcon
	.type	 FldEff_HeartIcon,function
	.thumb_func
FldEff_HeartIcon:
	push	{r4, lr}
	ldr	r0, .L191
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L190	@cond_branch
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L191+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x2e
	mov	r2, #0x0
	bl	SetIconSpriteData
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
.L190:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L192:
	.align	2, 0
.L191:
	.word	sSpriteTemplate_HeartIcon
	.word	gSprites
.Lfe31:
	.size	 FldEff_HeartIcon,.Lfe31-FldEff_HeartIcon
	.align	2, 0
	.type	 SetIconSpriteData,function
	.thumb_func
SetIconSpriteData:
	push	{r4, lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r4, [r0, #0x5]
	mov	r3, #0xd
	neg	r3, r3
	and	r3, r3, r4
	mov	r4, #0x4
	orr	r3, r3, r4
	strb	r3, [r0, #0x5]
	mov	r3, #0x3e
	add	r3, r3, r0
	mov	ip, r3
	ldrb	r3, [r3]
	mov	r4, #0x2
	orr	r3, r3, r4
	mov	r4, ip
	strb	r3, [r4]
	ldr	r4, .L194
	ldr	r3, [r4]
	strh	r3, [r0, #0x2e]
	ldr	r3, [r4, #0x4]
	strh	r3, [r0, #0x30]
	ldr	r3, [r4, #0x8]
	strh	r3, [r0, #0x32]
	ldr	r3, .L194+0x4
	strh	r3, [r0, #0x34]
	strh	r1, [r0, #0x3c]
	add	r1, r2, #0
	bl	StartSpriteAnim
	pop	{r4}
	pop	{r0}
	bx	r0
.L195:
	.align	2, 0
.L194:
	.word	gFieldEffectArguments
	.word	0xfffb
.Lfe32:
	.size	 SetIconSpriteData,.Lfe32-SetIconSpriteData
	.align	2, 0
	.type	 SpriteCB_TrainerIcons,function
	.thumb_func
SpriteCB_TrainerIcons:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L198	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L197	@cond_branch
.L198:
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
	b	.L199
.L197:
	ldr	r2, .L202
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L202+0x4
	add	r1, r1, r0
	ldrh	r3, [r4, #0x34]
	ldrh	r0, [r4, #0x36]
	add	r2, r3, r0
	strh	r2, [r4, #0x36]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r1, #0x22]
	sub	r0, r0, #0x10
	strh	r0, [r4, #0x22]
	ldrh	r0, [r1, #0x24]
	strh	r0, [r4, #0x24]
	ldrh	r0, [r1, #0x26]
	add	r0, r0, r2
	strh	r0, [r4, #0x26]
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r2, #0
	beq	.L200	@cond_branch
	add	r0, r3, #0x1
	strh	r0, [r4, #0x34]
	b	.L199
.L203:
	.align	2, 0
.L202:
	.word	gObjectEvents
	.word	gSprites
.L200:
	strh	r2, [r4, #0x34]
.L199:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 SpriteCB_TrainerIcons,.Lfe33-SpriteCB_TrainerIcons
	.align	2, 0
	.globl	GetCurrentApproachingTrainerObjectEventId
	.type	 GetCurrentApproachingTrainerObjectEventId,function
	.thumb_func
GetCurrentApproachingTrainerObjectEventId:
	push	{lr}
	ldr	r0, .L209
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L205	@cond_branch
	ldr	r0, .L209+0x4
	ldrb	r0, [r0, #0xc]
	b	.L208
.L210:
	.align	2, 0
.L209:
	.word	gApproachingTrainerId
	.word	gApproachingTrainers
.L205:
	ldr	r0, .L211
	ldrb	r0, [r0]
.L208:
	pop	{r1}
	bx	r1
.L212:
	.align	2, 0
.L211:
	.word	gApproachingTrainers
.Lfe34:
	.size	 GetCurrentApproachingTrainerObjectEventId,.Lfe34-GetCurrentApproachingTrainerObjectEventId
	.align	2, 0
	.globl	GetChosenApproachingTrainerObjectEventId
	.type	 GetChosenApproachingTrainerObjectEventId,function
	.thumb_func
GetChosenApproachingTrainerObjectEventId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L214	@cond_branch
	mov	r0, #0x0
	b	.L218
.L214:
	cmp	r0, #0
	beq	.L216	@cond_branch
	ldr	r0, .L220
	ldrb	r0, [r0, #0xc]
	b	.L219
.L221:
	.align	2, 0
.L220:
	.word	gApproachingTrainers
.L216:
	ldr	r0, .L222
	ldrb	r0, [r0]
.L219:
.L218:
	pop	{r1}
	bx	r1
.L223:
	.align	2, 0
.L222:
	.word	gApproachingTrainers
.Lfe35:
	.size	 GetChosenApproachingTrainerObjectEventId,.Lfe35-GetChosenApproachingTrainerObjectEventId
	.align	2, 0
	.globl	PlayerFaceTrainerAfterBattle
	.type	 PlayerFaceTrainerAfterBattle,function
	.thumb_func
PlayerFaceTrainerAfterBattle:
	push	{lr}
	ldr	r0, .L227
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L225	@cond_branch
	ldr	r2, .L227+0x4
	ldr	r0, .L227+0x8
	ldrh	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L227+0xc
	add	r0, r0, r1
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionMovementAction
	ldr	r3, .L227+0x10
	strb	r0, [r3]
	mov	r0, #0xfe
	strb	r0, [r3, #0x1]
	ldr	r0, .L227+0x14
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0xff
	bl	ScriptMovement_StartObjectMovementScript
	b	.L226
.L228:
	.align	2, 0
.L227:
	.word	gTrainerApproachedPlayer
	.word	gApproachingTrainers
	.word	gWhichTrainerToFaceAfterBattle
	.word	gObjectEvents
	.word	gPostBattleMovementScript
	.word	gSaveBlock1Ptr
.L225:
	ldr	r0, .L229
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L229+0x4
	add	r0, r1, r0
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionMovementAction
	ldr	r3, .L229+0x8
	strb	r0, [r3]
	mov	r0, #0xfe
	strb	r0, [r3, #0x1]
	ldr	r0, .L229+0xc
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0xff
	bl	ScriptMovement_StartObjectMovementScript
.L226:
	mov	r0, #0xff
	bl	SetMovingNpcId
	pop	{r0}
	bx	r0
.L230:
	.align	2, 0
.L229:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gPostBattleMovementScript
	.word	gSaveBlock1Ptr
.Lfe36:
	.size	 PlayerFaceTrainerAfterBattle,.Lfe36-PlayerFaceTrainerAfterBattle
	.comm	gWhichTrainerToFaceAfterBattle, 4	@ 2
	.comm	gPostBattleMovementScript, 4	@ 4
	.comm	gApproachingTrainers, 24	@ 24
	.comm	gNoOfApproachingTrainers, 4	@ 1
	.comm	gTrainerApproachedPlayer, 4	@ 1
.text
	.align	2, 0

