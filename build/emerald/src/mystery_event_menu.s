@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sUnknown_0203BCF8,object
	.size	 sUnknown_0203BCF8,1
sUnknown_0203BCF8:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,4
sBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x4
	.byte	0xf
	.byte	0x16
	.byte	0x4
	.byte	0xe
	.short	0x14
	.byte	0x0
	.byte	0x7
	.byte	0x6
	.byte	0x10
	.byte	0x4
	.byte	0xe
	.short	0x6c
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,24
.text
	.align	2, 0
	.type	 VBlankCB,function
	.thumb_func
VBlankCB:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 VBlankCB,.Lfe1-VBlankCB
	.align	2, 0
	.type	 CheckLanguageMatch,function
	.thumb_func
CheckLanguageMatch:
	push	{lr}
	mov	r2, #0x0
	ldr	r1, .L5
	ldrh	r0, [r1, #0x1a]
	ldrh	r1, [r1, #0x36]
	cmp	r0, r1
	bne	.L4	@cond_branch
	mov	r2, #0x1
.L4:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L6:
	.align	2, 0
.L5:
	.word	gLinkPlayers
.Lfe2:
	.size	 CheckLanguageMatch,.Lfe2-CheckLanguageMatch
	.align	2, 0
	.globl	CB2_InitMysteryEventMenu
	.type	 CB2_InitMysteryEventMenu,function
	.thumb_func
CB2_InitMysteryEventMenu:
	push	{r4, lr}
	add	sp, sp, #-0x8
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L14
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L14+0x4
	mov	r0, #0x0
	mov	r2, #0x1
	bl	InitBgsFromTemplates
	ldr	r0, .L14+0x8
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L8	@cond_branch
	bl	DeactivateAllTextPrinters
	mov	r4, #0x0
.L12:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L12	@cond_branch
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0xe0
	bl	Menu_LoadStdPalAt
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L14+0xc
	mov	r1, #0x0
	bl	CreateTask
	bl	StopMapMusic
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	bl	FillPalette
	ldr	r0, .L14+0x10
	bl	SetMainCallback2
.L8:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	VBlankCB
	.word	sBgTemplates
	.word	sWindowTemplates
	.word	Task_DestroySelf
	.word	CB2_MysteryEventMenu
.Lfe3:
	.size	 CB2_InitMysteryEventMenu,.Lfe3-CB2_InitMysteryEventMenu
	.align	2, 0
	.type	 GetEventLoadMessage,function
	.thumb_func
GetEventLoadMessage:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	mov	r5, #0x1
	cmp	r4, #0
	bne	.L17	@cond_branch
	ldr	r1, .L20
	bl	StringCopy
	mov	r5, #0x0
.L17:
	cmp	r4, #0x2
	bne	.L18	@cond_branch
	mov	r5, #0x0
.L18:
	cmp	r4, #0x1
	bne	.L19	@cond_branch
	ldr	r1, .L20+0x4
	add	r0, r6, #0
	bl	StringCopy
.L19:
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L21:
	.align	2, 0
.L20:
	.word	gText_EventSafelyLoaded
	.word	gText_LoadErrorEndingSession
.Lfe4:
	.size	 GetEventLoadMessage,.Lfe4-GetEventLoadMessage
	.align	2, 0
	.type	 CB2_MysteryEventMenu,function
	.thumb_func
CB2_MysteryEventMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r1, .L75
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x10
	bls	.LCB206
	b	.L23	@long jump
.LCB206:
	lsl	r0, r0, #0x2
	ldr	r1, .L75+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L76:
	.align	2, 0
.L75:
	.word	gMain
	.word	.L66
	.align	2, 0
	.align	2, 0
.L66:
	.word	.L24
	.word	.L25
	.word	.L27
	.word	.L29
	.word	.L32
	.word	.L34
	.word	.L40
	.word	.L49
	.word	.L51
	.word	.L53
	.word	.L54
	.word	.L55
	.word	.L58
	.word	.L59
	.word	.L61
	.word	.L63
	.word	.L64
.L24:
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x1
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	b	.L69
.L25:
	ldr	r0, .L77
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB257
	b	.L23	@long jump
.LCB257:
	ldr	r1, .L77+0x4
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	ldr	r1, .L77+0x8
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L70
.L78:
	.align	2, 0
.L77:
	.word	gPaletteFade
	.word	gText_LinkStandby2
	.word	gMain
.L27:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.LCB289
	b	.L23	@long jump
.LCB289:
	ldr	r1, .L79
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L79+0x4
	ldr	r2, .L79+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	bl	OpenLink
	b	.L23
.L80:
	.align	2, 0
.L79:
	.word	gMain
	.word	gLinkType
	.word	0x5501
.L29:
	ldr	r0, .L81
	ldr	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB320
	b	.L41	@long jump
.LCB320:
	mov	r0, #0x1c
	and	r1, r1, r0
	cmp	r1, #0x4
	bhi	.LCB324
	b	.L41	@long jump
.LCB324:
	mov	r0, #0x15
	bl	PlaySE
	ldr	r1, .L81+0x4
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	ldr	r1, .L81+0x8
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L41
.L82:
	.align	2, 0
.L81:
	.word	gLinkStatus
	.word	gText_PressAToLoadEvent
	.word	gMain
.L32:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.LCB368
	b	.L23	@long jump
.LCB368:
	b	.L71
.L34:
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bne	.L73	@cond_branch
	ldr	r4, .L83
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L36	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	CheckShouldAdvanceLinkState
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x1
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r1, .L83+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r4, r2
	b	.L70
.L84:
	.align	2, 0
.L83:
	.word	gMain
	.word	gText_LoadingEvent
.L36:
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB435
	b	.L23	@long jump
.LCB435:
	mov	r0, #0x5
	bl	PlaySE
	bl	CloseLink
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r4, r0
	b	.L72
.L40:
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L41	@cond_branch
	ldr	r0, .L85
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB461
	b	.L23	@long jump
.LCB461:
	mov	r0, #0x2
	mov	r1, #0x2
	bl	GetLinkPlayerDataExchangeStatusTimed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L43	@cond_branch
	bl	SetCloseLinkCallback
	ldr	r4, .L85+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetEventLoadMessage
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	ldr	r0, .L85+0x8
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	b	.L74
.L86:
	.align	2, 0
.L85:
	.word	gReceivedRemoteLinkPlayers
	.word	gStringVar4
	.word	gMain
.L43:
	bl	CheckLanguageMatch
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L45	@cond_branch
	ldr	r1, .L87
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	b	.L71
.L88:
	.align	2, 0
.L87:
	.word	gText_DontRemoveCableTurnOff
.L45:
	bl	CloseLink
.L73:
	ldr	r4, .L89
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetEventLoadMessage
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	ldr	r0, .L89+0x4
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
.L74:
	mov	r1, #0xd
	strb	r1, [r0]
	b	.L23
.L90:
	.align	2, 0
.L89:
	.word	gStringVar4
	.word	gMain
.L41:
	ldr	r4, .L91
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB567
	b	.L23	@long jump
.LCB567:
	mov	r0, #0x5
	bl	PlaySE
	bl	CloseLink
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r4, r2
.L72:
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L23
.L92:
	.align	2, 0
.L91:
	.word	gMain
.L49:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.LCB594
	b	.L23	@long jump
.LCB594:
	b	.L71
.L51:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB604
	b	.L23	@long jump
.LCB604:
	bl	ResetBlockReceivedFlags
	ldr	r1, .L93
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L70
.L94:
	.align	2, 0
.L93:
	.word	gMain
.L53:
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r4, r0
	b	.L70
.L54:
	bl	SetCloseLinkCallback
	ldr	r1, .L95
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L70
.L96:
	.align	2, 0
.L95:
	.word	gMain
.L55:
	ldr	r0, .L97
	ldrb	r6, [r0]
	cmp	r6, #0
	bne	.L23	@cond_branch
	ldr	r5, .L97+0x4
	add	r0, r5, #0
	bl	RunMysteryEventScript
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	str	r6, [sp, #0x4]
	ldr	r2, .L97+0x8
	add	r0, sp, #0x4
	add	r1, r5, #0
	bl	CpuSet
	ldr	r0, .L97+0xc
	add	r1, r4, #0
	bl	GetEventLoadMessage
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L71	@cond_branch
	mov	r0, #0x0
	bl	TrySavingData
	b	.L71
.L98:
	.align	2, 0
.L97:
	.word	gReceivedRemoteLinkPlayers
	.word	gDecompressionBuffer
	.word	0x50001f5
	.word	gStringVar4
.L58:
	ldr	r1, .L99
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	ldr	r1, .L99+0x4
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L70
.L100:
	.align	2, 0
.L99:
	.word	gStringVar4
	.word	gMain
.L59:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	bne	.L23	@cond_branch
	ldr	r0, .L101
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	ldr	r0, .L101+0x4
	strb	r2, [r0]
	b	.L23
.L102:
	.align	2, 0
.L101:
	.word	gMain
	.word	sUnknown_0203BCF8
.L61:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L23	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r4, r2
	b	.L70
.L63:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
.L69:
	bl	BeginNormalPaletteFade
.L71:
	ldr	r1, .L103
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
.L70:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L23
.L104:
	.align	2, 0
.L103:
	.word	gMain
.L64:
	ldr	r0, .L105
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L23	@cond_branch
	bl	DoSoftReset
.L23:
	ldr	r0, .L105+0x4
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L68	@cond_branch
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L68	@cond_branch
	bl	CloseLink
	ldr	r4, .L105+0x8
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetEventLoadMessage
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	PrintMysteryMenuText
	ldr	r0, .L105+0xc
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0xd
	strb	r1, [r0]
.L68:
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	gPaletteFade
	.word	gLinkStatus
	.word	gStringVar4
	.word	gMain
.Lfe5:
	.size	 CB2_MysteryEventMenu,.Lfe5-CB2_MysteryEventMenu
	.align	2, 0
	.type	 PrintMysteryMenuText,function
	.thumb_func
PrintMysteryMenuText:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #-0x1c
	add	r5, r0, #0
	mov	sl, r1
	add	r6, r2, #0
	ldr	r4, [sp, #0x38]
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	mov	r9, r0
	mov	r1, #0x1
	mov	r8, r1
	add	r0, sp, #0x14
	mov	r1, r8
	strb	r1, [r0]
	add	r1, r0, #0
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	mov	r0, #0x3
	strb	r0, [r1, #0x2]
	add	r0, r1, #0
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	orr	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	str	r3, [sp, #0x18]
	bl	FillWindowPixelBuffer
	mov	r0, r9
	str	r0, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	add	r0, sp, #0x14
	str	r0, [sp, #0x8]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp, #0xc]
	mov	r1, sl
	str	r1, [sp, #0x10]
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r6, #0
	ldr	r3, [sp, #0x18]
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 PrintMysteryMenuText,.Lfe6-PrintMysteryMenuText
.text
	.align	2, 0

