@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_0203734C,object
	.size	 gUnknown_0203734C,1
gUnknown_0203734C:
	.byte	0x0
	.globl	gObjectEvents
	.align	2, 0
	.type	 gObjectEvents,object
	.size	 gObjectEvents,576
gObjectEvents:
	.space	576
	.globl	gPlayerAvatar
	.align	2, 0
	.type	 gPlayerAvatar,object
	.size	 gPlayerAvatar,36
gPlayerAvatar:
	.space	36
	.section .rodata
	.align	2, 0
	.type	 sForcedMovementTestFuncs,object
sForcedMovementTestFuncs:
	.word	MetatileBehavior_IsTrickHouseSlipperyFloor
	.word	MetatileBehavior_IsIce_2
	.word	MetatileBehavior_IsWalkSouth
	.word	MetatileBehavior_IsWalkNorth
	.word	MetatileBehavior_IsWalkWest
	.word	MetatileBehavior_IsWalkEast
	.word	MetatileBehavior_IsSouthwardCurrent
	.word	MetatileBehavior_IsNorthwardCurrent
	.word	MetatileBehavior_IsWestwardCurrent
	.word	MetatileBehavior_IsEastwardCurrent
	.word	MetatileBehavior_IsSlideSouth
	.word	MetatileBehavior_IsSlideNorth
	.word	MetatileBehavior_IsSlideWest
	.word	MetatileBehavior_IsSlideEast
	.word	MetatileBehavior_IsWaterfall
	.word	MetatileBehavior_IsSecretBaseJumpMat
	.word	MetatileBehavior_IsSecretBaseSpinMat
	.word	MetatileBehavior_IsMuddySlope
	.size	 sForcedMovementTestFuncs,72
	.align	2, 0
	.type	 sForcedMovementFuncs,object
sForcedMovementFuncs:
	.word	ForcedMovement_None
	.word	ForcedMovement_Slip
	.word	ForcedMovement_Slip
	.word	ForcedMovement_WalkSouth
	.word	ForcedMovement_WalkNorth
	.word	ForcedMovement_WalkWest
	.word	ForcedMovement_WalkEast
	.word	ForcedMovement_PushedSouthByCurrent
	.word	ForcedMovement_PushedNorthByCurrent
	.word	ForcedMovement_PushedWestByCurrent
	.word	ForcedMovement_PushedEastByCurrent
	.word	ForcedMovement_SlideSouth
	.word	ForcedMovement_SlideNorth
	.word	ForcedMovement_SlideWest
	.word	ForcedMovement_SlideEast
	.word	ForcedMovement_PushedSouthByCurrent
	.word	ForcedMovement_MatJump
	.word	ForcedMovement_MatSpin
	.word	ForcedMovement_MuddySlope
	.size	 sForcedMovementFuncs,76
	.align	2, 0
	.type	 gUnknown_08497490,object
gUnknown_08497490:
	.word	PlayerNotOnBikeNotMoving
	.word	PlayerNotOnBikeTurningInPlace
	.word	PlayerNotOnBikeMoving
	.size	 gUnknown_08497490,12
	.align	2, 0
	.type	 sAcroBikeTrickMetatiles,object
sAcroBikeTrickMetatiles:
	.word	MetatileBehavior_IsBumpySlope
	.word	MetatileBehavior_IsIsolatedVerticalRail
	.word	MetatileBehavior_IsIsolatedHorizontalRail
	.word	MetatileBehavior_IsVerticalRail
	.word	MetatileBehavior_IsHorizontalRail
	.size	 sAcroBikeTrickMetatiles,20
	.type	 sAcroBikeTrickCollisionTypes,object
sAcroBikeTrickCollisionTypes:
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.size	 sAcroBikeTrickCollisionTypes,5
	.align	2, 0
	.type	 sPlayerAvatarTransitionFuncs,object
sPlayerAvatarTransitionFuncs:
	.word	PlayerAvatarTransition_Normal
	.word	PlayerAvatarTransition_MachBike
	.word	PlayerAvatarTransition_AcroBike
	.word	PlayerAvatarTransition_Surfing
	.word	PlayerAvatarTransition_Underwater
	.word	PlayerAvatarTransition_ReturnToField
	.word	PlayerAvatarTransition_Dummy
	.word	PlayerAvatarTransition_Dummy
	.size	 sPlayerAvatarTransitionFuncs,32
	.align	2, 0
	.type	 sArrowWarpMetatileBehaviorChecks,object
sArrowWarpMetatileBehaviorChecks:
	.word	MetatileBehavior_IsSouthArrowWarp
	.word	MetatileBehavior_IsNorthArrowWarp
	.word	MetatileBehavior_IsWestArrowWarp
	.word	MetatileBehavior_IsEastArrowWarp
	.size	 sArrowWarpMetatileBehaviorChecks,16
	.type	 sRivalAvatarGfxIds,object
sRivalAvatarGfxIds:
	.byte	0x64
	.byte	0x69
	.byte	0x65
	.byte	0x6a
	.byte	0x66
	.byte	0x6b
	.byte	0x67
	.byte	0x6c
	.byte	0x6f
	.byte	0x70
	.byte	0x68
	.byte	0x6d
	.byte	0x89
	.byte	0x8a
	.byte	0xbf
	.byte	0xc0
	.size	 sRivalAvatarGfxIds,16
	.type	 sPlayerAvatarGfxIds,object
sPlayerAvatarGfxIds:
	.byte	0x0
	.byte	0x59
	.byte	0x1
	.byte	0x5a
	.byte	0x3f
	.byte	0x5b
	.byte	0x2
	.byte	0x5c
	.byte	0x6f
	.byte	0x70
	.byte	0x3
	.byte	0x5d
	.byte	0x89
	.byte	0x8a
	.byte	0xbf
	.byte	0xc0
	.size	 sPlayerAvatarGfxIds,16
	.type	 sFRLGAvatarGfxIds,object
sFRLGAvatarGfxIds:
	.byte	0xe6
	.byte	0xe7
	.size	 sFRLGAvatarGfxIds,2
	.type	 sRSAvatarGfxIds,object
sRSAvatarGfxIds:
	.byte	0xeb
	.byte	0xec
	.size	 sRSAvatarGfxIds,2
	.type	 sPlayerAvatarGfxToStateFlag,object
	.size	 sPlayerAvatarGfxToStateFlag,20
sPlayerAvatarGfxToStateFlag:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x3f
	.byte	0x4
	.byte	0x2
	.byte	0x8
	.byte	0x6f
	.byte	0x10
	.byte	0x59
	.byte	0x1
	.byte	0x5a
	.byte	0x2
	.byte	0x5b
	.byte	0x4
	.byte	0x5c
	.byte	0x8
	.byte	0x70
	.byte	0x10
	.align	2, 0
	.type	 sArrowWarpMetatileBehaviorChecks2,object
sArrowWarpMetatileBehaviorChecks2:
	.word	MetatileBehavior_IsSouthArrowWarp
	.word	MetatileBehavior_IsNorthArrowWarp
	.word	MetatileBehavior_IsWestArrowWarp
	.word	MetatileBehavior_IsEastArrowWarp
	.size	 sArrowWarpMetatileBehaviorChecks2,16
	.align	2, 0
	.type	 sPushBoulderFuncs,object
sPushBoulderFuncs:
	.word	PushBoulder_Start
	.word	PushBoulder_Move
	.word	PushBoulder_End
	.size	 sPushBoulderFuncs,12
	.align	2, 0
	.type	 sPlayerAvatarSecretBaseMatJump,object
sPlayerAvatarSecretBaseMatJump:
	.word	PlayerAvatar_DoSecretBaseMatJump
	.size	 sPlayerAvatarSecretBaseMatJump,4
	.align	2, 0
	.type	 sPlayerAvatarSecretBaseMatSpin,object
sPlayerAvatarSecretBaseMatSpin:
	.word	PlayerAvatar_SecretBaseMatSpinStep0
	.word	PlayerAvatar_SecretBaseMatSpinStep1
	.word	PlayerAvatar_SecretBaseMatSpinStep2
	.word	PlayerAvatar_SecretBaseMatSpinStep3
	.size	 sPlayerAvatarSecretBaseMatSpin,16
.text
	.align	2, 0
	.globl	MovementType_Player
	.type	 MovementType_Player,function
	.thumb_func
MovementType_Player:
	push	{lr}
	add	r1, r0, #0
	mov	r0, #0x2e
	ldrsh	r2, [r1, r0]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L3
	add	r0, r0, r2
	ldr	r2, .L3+0x4
	bl	UpdateObjectEventCurrentMovement
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gObjectEvents
	.word	ObjectEventCB2_NoMovement2
.Lfe1:
	.size	 MovementType_Player,.Lfe1-MovementType_Player
	.align	2, 0
	.type	 ObjectEventCB2_NoMovement2,function
	.thumb_func
ObjectEventCB2_NoMovement2:
	mov	r0, #0x0
	bx	lr
.Lfe2:
	.size	 ObjectEventCB2_NoMovement2,.Lfe2-ObjectEventCB2_NoMovement2
	.align	2, 0
	.globl	PlayerStep
	.type	 PlayerStep,function
	.thumb_func
PlayerStep:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	ldr	r4, .L10
	ldrb	r0, [r4, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L10+0x4
	add	r5, r1, r0
	add	r0, r5, #0
	bl	sub_808C280
	ldrb	r0, [r4, #0x6]
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r7, #0
	add	r1, r6, #0
	bl	Bike_TryAcroBikeHistoryUpdate
	add	r0, r5, #0
	mov	r1, r8
	bl	TryInterruptObjectEventSpecialAnim
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r5, #0
	bl	npc_clear_strange_bits
	bl	DoPlayerAvatarTransition
	bl	TryDoMetatileBehaviorForcedMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L7	@cond_branch
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	bl	MovePlayerAvatarUsingKeypadInput
	bl	PlayerAllowForcedMovementIfMovingSameDirection
.L7:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L11:
	.align	2, 0
.L10:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe3:
	.size	 PlayerStep,.Lfe3-PlayerStep
	.align	2, 0
	.type	 TryInterruptObjectEventSpecialAnim,function
	.thumb_func
TryInterruptObjectEventSpecialAnim:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	add	r6, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L13	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L13	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventGetHeldMovementActionId
	lsl	r0, r0, #0x18
	mov	r1, #0xe7
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L20	@cond_branch
	cmp	r5, #0
	bne	.L15	@cond_branch
.L20:
	mov	r0, #0x1
	b	.L18
.L15:
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	cmp	r0, r5
	beq	.L16	@cond_branch
.L19:
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovement
	b	.L13
.L16:
	add	r0, r6, #0
	bl	sub_808B028
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L19	@cond_branch
	b	.L20
.L13:
	mov	r0, #0x0
.L18:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 TryInterruptObjectEventSpecialAnim,.Lfe4-TryInterruptObjectEventSpecialAnim
	.align	2, 0
	.type	 npc_clear_strange_bits,function
	.thumb_func
npc_clear_strange_bits:
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x11
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x5
	neg	r2, r2
	and	r1, r1, r2
	add	r2, r2, #0x2
	and	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldr	r2, .L22
	ldrb	r1, [r2]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
	bx	lr
.L23:
	.align	2, 0
.L22:
	.word	gPlayerAvatar
.Lfe5:
	.size	 npc_clear_strange_bits,.Lfe5-npc_clear_strange_bits
	.align	2, 0
	.type	 MovePlayerAvatarUsingKeypadInput,function
	.thumb_func
MovePlayerAvatarUsingKeypadInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L27
	ldrb	r1, [r0]
	mov	r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L25	@cond_branch
	add	r0, r3, #0
	add	r1, r4, #0
	bl	MovePlayerOnBike
	b	.L26
.L28:
	.align	2, 0
.L27:
	.word	gPlayerAvatar
.L25:
	add	r0, r3, #0
	add	r1, r2, #0
	bl	MovePlayerNotOnBike
.L26:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 MovePlayerAvatarUsingKeypadInput,.Lfe6-MovePlayerAvatarUsingKeypadInput
	.align	2, 0
	.type	 PlayerAllowForcedMovementIfMovingSameDirection,function
	.thumb_func
PlayerAllowForcedMovementIfMovingSameDirection:
	push	{lr}
	ldr	r2, .L31
	ldrb	r0, [r2, #0x2]
	cmp	r0, #0x2
	bne	.L30	@cond_branch
	ldrb	r1, [r2]
	mov	r0, #0xdf
	and	r0, r0, r1
	strb	r0, [r2]
.L30:
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gPlayerAvatar
.Lfe7:
	.size	 PlayerAllowForcedMovementIfMovingSameDirection,.Lfe7-PlayerAllowForcedMovementIfMovingSameDirection
	.align	2, 0
	.type	 TryDoMetatileBehaviorForcedMovement,function
	.thumb_func
TryDoMetatileBehaviorForcedMovement:
	push	{r4, lr}
	ldr	r4, .L34
	bl	GetForcedMovementByMetatileBehavior
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L35:
	.align	2, 0
.L34:
	.word	sForcedMovementFuncs
.Lfe8:
	.size	 TryDoMetatileBehaviorForcedMovement,.Lfe8-TryDoMetatileBehaviorForcedMovement
	.align	2, 0
	.type	 GetForcedMovementByMetatileBehavior,function
	.thumb_func
GetForcedMovementByMetatileBehavior:
	push	{r4, r5, r6, lr}
	ldr	r3, .L45
	ldrb	r1, [r3]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L37	@cond_branch
	ldr	r2, .L45+0x4
	ldrb	r1, [r3, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r5, [r0, #0x1e]
	mov	r4, #0x0
	ldr	r6, .L45+0x8
.L41:
	lsl	r0, r4, #0x2
	add	r0, r0, r6
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L40	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L44
.L46:
	.align	2, 0
.L45:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	sForcedMovementTestFuncs
.L40:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x11
	bls	.L41	@cond_branch
.L37:
	mov	r0, #0x0
.L44:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 GetForcedMovementByMetatileBehavior,.Lfe9-GetForcedMovementByMetatileBehavior
	.align	2, 0
	.type	 ForcedMovement_None,function
	.thumb_func
ForcedMovement_None:
	push	{r4, lr}
	ldr	r4, .L49
	ldrb	r1, [r4]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L48	@cond_branch
	ldrb	r1, [r4, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L49+0x4
	add	r0, r0, r1
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x3
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldrb	r1, [r0, #0x18]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	bl	SetObjectEventDirection
	ldrb	r1, [r4]
	mov	r0, #0xbf
	and	r0, r0, r1
	strb	r0, [r4]
.L48:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L50:
	.align	2, 0
.L49:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe10:
	.size	 ForcedMovement_None,.Lfe10-ForcedMovement_None
	.align	2, 0
	.type	 DoForcedMovement,function
	.thumb_func
DoForcedMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r6, .L59
	add	r0, r5, #0
	bl	CheckForPlayerAvatarCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	ldrb	r0, [r6]
	mov	r1, #0x40
	mov	sl, r1
	mov	r1, #0x0
	mov	r8, r1
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r6]
	cmp	r4, #0
	beq	.L52	@cond_branch
	bl	ForcedMovement_None
	cmp	r4, #0x4
	bhi	.L53	@cond_branch
	mov	r0, #0x0
	b	.L57
.L60:
	.align	2, 0
.L59:
	.word	gPlayerAvatar
.L53:
	cmp	r7, #0x6
	bne	.L55	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
.L55:
	ldrb	r0, [r6]
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r6]
	mov	r0, #0x2
	strb	r0, [r6, #0x2]
	b	.L58
.L52:
	mov	r0, #0x2
	strb	r0, [r6, #0x2]
	add	r0, r5, #0
	bl	_call_via_r9
.L58:
	mov	r0, #0x1
.L57:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 DoForcedMovement,.Lfe11-DoForcedMovement
	.align	2, 0
	.type	 DoForcedMovementInCurrentDirection,function
	.thumb_func
DoForcedMovementInCurrentDirection:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L62
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L62+0x4
	add	r2, r2, r0
	ldrb	r0, [r2, #0x1]
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x18]
	lsr	r0, r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L63:
	.align	2, 0
.L62:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe12:
	.size	 DoForcedMovementInCurrentDirection,.Lfe12-DoForcedMovementInCurrentDirection
	.align	2, 0
	.type	 ForcedMovement_Slip,function
	.thumb_func
ForcedMovement_Slip:
	push	{lr}
	ldr	r0, .L65
	bl	DoForcedMovementInCurrentDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L66:
	.align	2, 0
.L65:
	.word	PlayerGoSpeed2
.Lfe13:
	.size	 ForcedMovement_Slip,.Lfe13-ForcedMovement_Slip
	.align	2, 0
	.type	 ForcedMovement_WalkSouth,function
	.thumb_func
ForcedMovement_WalkSouth:
	push	{lr}
	ldr	r1, .L68
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L69:
	.align	2, 0
.L68:
	.word	PlayerGoSpeed1
.Lfe14:
	.size	 ForcedMovement_WalkSouth,.Lfe14-ForcedMovement_WalkSouth
	.align	2, 0
	.type	 ForcedMovement_WalkNorth,function
	.thumb_func
ForcedMovement_WalkNorth:
	push	{lr}
	ldr	r1, .L71
	mov	r0, #0x2
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L72:
	.align	2, 0
.L71:
	.word	PlayerGoSpeed1
.Lfe15:
	.size	 ForcedMovement_WalkNorth,.Lfe15-ForcedMovement_WalkNorth
	.align	2, 0
	.type	 ForcedMovement_WalkWest,function
	.thumb_func
ForcedMovement_WalkWest:
	push	{lr}
	ldr	r1, .L74
	mov	r0, #0x3
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L75:
	.align	2, 0
.L74:
	.word	PlayerGoSpeed1
.Lfe16:
	.size	 ForcedMovement_WalkWest,.Lfe16-ForcedMovement_WalkWest
	.align	2, 0
	.type	 ForcedMovement_WalkEast,function
	.thumb_func
ForcedMovement_WalkEast:
	push	{lr}
	ldr	r1, .L77
	mov	r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L78:
	.align	2, 0
.L77:
	.word	PlayerGoSpeed1
.Lfe17:
	.size	 ForcedMovement_WalkEast,.Lfe17-ForcedMovement_WalkEast
	.align	2, 0
	.type	 ForcedMovement_PushedSouthByCurrent,function
	.thumb_func
ForcedMovement_PushedSouthByCurrent:
	push	{lr}
	ldr	r1, .L80
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L81:
	.align	2, 0
.L80:
	.word	PlayerRideWaterCurrent
.Lfe18:
	.size	 ForcedMovement_PushedSouthByCurrent,.Lfe18-ForcedMovement_PushedSouthByCurrent
	.align	2, 0
	.type	 ForcedMovement_PushedNorthByCurrent,function
	.thumb_func
ForcedMovement_PushedNorthByCurrent:
	push	{lr}
	ldr	r1, .L83
	mov	r0, #0x2
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L84:
	.align	2, 0
.L83:
	.word	PlayerRideWaterCurrent
.Lfe19:
	.size	 ForcedMovement_PushedNorthByCurrent,.Lfe19-ForcedMovement_PushedNorthByCurrent
	.align	2, 0
	.type	 ForcedMovement_PushedWestByCurrent,function
	.thumb_func
ForcedMovement_PushedWestByCurrent:
	push	{lr}
	ldr	r1, .L86
	mov	r0, #0x3
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L87:
	.align	2, 0
.L86:
	.word	PlayerRideWaterCurrent
.Lfe20:
	.size	 ForcedMovement_PushedWestByCurrent,.Lfe20-ForcedMovement_PushedWestByCurrent
	.align	2, 0
	.type	 ForcedMovement_PushedEastByCurrent,function
	.thumb_func
ForcedMovement_PushedEastByCurrent:
	push	{lr}
	ldr	r1, .L89
	mov	r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L90:
	.align	2, 0
.L89:
	.word	PlayerRideWaterCurrent
.Lfe21:
	.size	 ForcedMovement_PushedEastByCurrent,.Lfe21-ForcedMovement_PushedEastByCurrent
	.align	2, 0
	.type	 ForcedMovement_Slide,function
	.thumb_func
ForcedMovement_Slide:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L92
	ldrb	r2, [r2, #0x5]
	lsl	r2, r2, #0x19
	lsr	r2, r2, #0x19
	lsl	r3, r2, #0x3
	add	r3, r3, r2
	lsl	r3, r3, #0x2
	ldr	r2, .L92+0x4
	add	r3, r3, r2
	ldrb	r2, [r3, #0x1]
	mov	r4, #0x4
	orr	r2, r2, r4
	mov	r4, #0x2
	orr	r2, r2, r4
	strb	r2, [r3, #0x1]
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L93:
	.align	2, 0
.L92:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe22:
	.size	 ForcedMovement_Slide,.Lfe22-ForcedMovement_Slide
	.align	2, 0
	.type	 ForcedMovement_SlideSouth,function
	.thumb_func
ForcedMovement_SlideSouth:
	push	{lr}
	ldr	r1, .L95
	mov	r0, #0x1
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L96:
	.align	2, 0
.L95:
	.word	PlayerGoSpeed2
.Lfe23:
	.size	 ForcedMovement_SlideSouth,.Lfe23-ForcedMovement_SlideSouth
	.align	2, 0
	.type	 ForcedMovement_SlideNorth,function
	.thumb_func
ForcedMovement_SlideNorth:
	push	{lr}
	ldr	r1, .L98
	mov	r0, #0x2
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L99:
	.align	2, 0
.L98:
	.word	PlayerGoSpeed2
.Lfe24:
	.size	 ForcedMovement_SlideNorth,.Lfe24-ForcedMovement_SlideNorth
	.align	2, 0
	.type	 ForcedMovement_SlideWest,function
	.thumb_func
ForcedMovement_SlideWest:
	push	{lr}
	ldr	r1, .L101
	mov	r0, #0x3
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L102:
	.align	2, 0
.L101:
	.word	PlayerGoSpeed2
.Lfe25:
	.size	 ForcedMovement_SlideWest,.Lfe25-ForcedMovement_SlideWest
	.align	2, 0
	.type	 ForcedMovement_SlideEast,function
	.thumb_func
ForcedMovement_SlideEast:
	push	{lr}
	ldr	r1, .L104
	mov	r0, #0x4
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L105:
	.align	2, 0
.L104:
	.word	PlayerGoSpeed2
.Lfe26:
	.size	 ForcedMovement_SlideEast,.Lfe26-ForcedMovement_SlideEast
	.align	2, 0
	.type	 ForcedMovement_MatJump,function
	.thumb_func
ForcedMovement_MatJump:
	push	{lr}
	bl	DoPlayerMatJump
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 ForcedMovement_MatJump,.Lfe27-ForcedMovement_MatJump
	.align	2, 0
	.type	 ForcedMovement_MatSpin,function
	.thumb_func
ForcedMovement_MatSpin:
	push	{lr}
	bl	DoPlayerMatSpin
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 ForcedMovement_MatSpin,.Lfe28-ForcedMovement_MatSpin
	.align	2, 0
	.type	 ForcedMovement_MuddySlope,function
	.thumb_func
ForcedMovement_MuddySlope:
	push	{r4, lr}
	ldr	r0, .L113
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L113+0x4
	add	r4, r1, r0
	ldrb	r1, [r4, #0x18]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0x20
	bne	.L110	@cond_branch
	bl	GetPlayerSpeed
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bgt	.L109	@cond_branch
.L110:
	mov	r0, #0x0
	bl	Bike_UpdateBikeCounterSpeed
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r1, .L113+0x8
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L112
.L114:
	.align	2, 0
.L113:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	PlayerGoSpeed2
.L109:
	mov	r0, #0x0
.L112:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 ForcedMovement_MuddySlope,.Lfe29-ForcedMovement_MuddySlope
	.align	2, 0
	.type	 MovePlayerNotOnBike,function
	.thumb_func
MovePlayerNotOnBike:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L116
	add	r0, r4, #0
	bl	CheckMovementInputNotOnBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r6
	ldr	r2, [r0]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	_call_via_r2
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	gUnknown_08497490
.Lfe30:
	.size	 MovePlayerNotOnBike,.Lfe30-MovePlayerNotOnBike
	.align	2, 0
	.type	 CheckMovementInputNotOnBike,function
	.thumb_func
CheckMovementInputNotOnBike:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L119	@cond_branch
	ldr	r0, .L126
	strb	r4, [r0, #0x2]
	mov	r0, #0x0
	b	.L123
.L127:
	.align	2, 0
.L126:
	.word	gPlayerAvatar
.L119:
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	beq	.L121	@cond_branch
	ldr	r1, .L128
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x2
	beq	.L121	@cond_branch
	mov	r0, #0x1
	b	.L125
.L129:
	.align	2, 0
.L128:
	.word	gPlayerAvatar
.L121:
	ldr	r1, .L130
	mov	r0, #0x2
.L125:
	strb	r0, [r1, #0x2]
.L123:
	pop	{r4}
	pop	{r1}
	bx	r1
.L131:
	.align	2, 0
.L130:
	.word	gPlayerAvatar
.Lfe31:
	.size	 CheckMovementInputNotOnBike,.Lfe31-CheckMovementInputNotOnBike
	.align	2, 0
	.type	 PlayerNotOnBikeNotMoving,function
	.thumb_func
PlayerNotOnBikeNotMoving:
	push	{lr}
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerFaceDirection
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 PlayerNotOnBikeNotMoving,.Lfe32-PlayerNotOnBikeNotMoving
	.align	2, 0
	.type	 PlayerNotOnBikeTurningInPlace,function
	.thumb_func
PlayerNotOnBikeTurningInPlace:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerTurnInPlace
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 PlayerNotOnBikeTurningInPlace,.Lfe33-PlayerNotOnBikeTurningInPlace
	.align	2, 0
	.type	 PlayerNotOnBikeMoving,function
	.thumb_func
PlayerNotOnBikeMoving:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	add	r0, r5, #0
	bl	CheckForPlayerAvatarCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L135	@cond_branch
	cmp	r4, #0x6
	bne	.L136	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
	b	.L134
.L136:
	cmp	r4, #0x4
	bne	.L138	@cond_branch
	add	r0, r5, #0
	bl	IsPlayerCollidingWithFarawayIslandMew
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L138	@cond_branch
	add	r0, r5, #0
	bl	PlayerNotOnBikeCollideWithFarawayIslandMew
	b	.L134
.L138:
	sub	r0, r4, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.LCB1238
	b	.L134	@long jump
.LCB1238:
	add	r0, r5, #0
	bl	PlayerNotOnBikeCollide
	b	.L134
.L135:
	ldr	r4, .L153
	ldrb	r1, [r4]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L141	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L142	@cond_branch
	add	r0, r5, #0
	bl	PlayerGoSpeed4
	b	.L134
.L154:
	.align	2, 0
.L153:
	.word	gPlayerAvatar
.L142:
	ldr	r0, .L155
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L144	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L144	@cond_branch
	ldrb	r0, [r4, #0x5]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	b	.L152
.L156:
	.align	2, 0
.L155:
	.word	0x882
.L144:
	ldr	r2, .L157
	ldrb	r1, [r2, #0x5]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x5]
	add	r0, r5, #0
	bl	PlayerGoSpeed2
	b	.L134
.L158:
	.align	2, 0
.L157:
	.word	gPlayerAvatar
.L141:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L146	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L146	@cond_branch
	mov	r0, #0x8c
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L146	@cond_branch
	ldr	r2, .L159
	ldrb	r1, [r4, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1e]
	bl	IsRunningDisallowed
	cmp	r0, #0
	bne	.L146	@cond_branch
	add	r0, r5, #0
	bl	PlayerRun
	ldrb	r1, [r4]
	mov	r0, #0x80
	orr	r0, r0, r1
	strb	r0, [r4]
	b	.L134
.L160:
	.align	2, 0
.L159:
	.word	gObjectEvents
.L146:
	ldr	r0, .L161
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L148	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L149	@cond_branch
	ldr	r0, .L161+0x4
	ldrb	r1, [r0, #0x5]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	add	r0, r5, #0
	bl	PlayerGoSlow
	b	.L134
.L162:
	.align	2, 0
.L161:
	.word	0x882
	.word	gPlayerAvatar
.L149:
	ldr	r2, .L163
	ldrb	r1, [r2, #0x5]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x5]
.L152:
	add	r0, r5, #0
	bl	PlayerGoSpeed1
	b	.L134
.L164:
	.align	2, 0
.L163:
	.word	gPlayerAvatar
.L148:
	add	r0, r5, #0
	bl	PlayerGoSpeed1
.L134:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 PlayerNotOnBikeMoving,.Lfe34-PlayerNotOnBikeMoving
	.align	2, 0
	.type	 CheckForPlayerAvatarCollision,function
	.thumb_func
CheckForPlayerAvatarCollision:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L166
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L166+0x4
	add	r4, r4, r0
	ldrh	r1, [r4, #0x10]
	add	r0, sp, #0x4
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	mov	r5, sp
	add	r5, r5, #0x6
	strh	r0, [r5]
	add	r0, r6, #0
	add	r1, sp, #0x4
	add	r2, r5, #0
	bl	MoveCoords
	add	r0, sp, #0x4
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, sp, #0x4
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r3, #0x0
	ldrsh	r2, [r5, r3]
	str	r0, [sp]
	add	r0, r4, #0
	add	r3, r6, #0
	bl	CheckForObjectEventCollision
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L167:
	.align	2, 0
.L166:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe35:
	.size	 CheckForPlayerAvatarCollision,.Lfe35-CheckForPlayerAvatarCollision
	.align	2, 0
	.type	 sub_808B028,function
	.thumb_func
sub_808B028:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L169
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L169+0x4
	add	r4, r4, r0
	ldrh	r1, [r4, #0x10]
	add	r0, sp, #0x4
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	mov	r5, sp
	add	r5, r5, #0x6
	strh	r0, [r5]
	add	r0, r6, #0
	add	r1, sp, #0x4
	add	r2, r5, #0
	bl	MoveCoords
	add	r0, sp, #0x4
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, sp, #0x4
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r3, #0x0
	ldrsh	r2, [r5, r3]
	str	r0, [sp]
	add	r0, r4, #0
	add	r3, r6, #0
	bl	sub_808B164
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L170:
	.align	2, 0
.L169:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe36:
	.size	 sub_808B028,.Lfe36-sub_808B028
	.align	2, 0
	.globl	CheckForObjectEventCollision
	.type	 CheckForObjectEventCollision,function
	.thumb_func
CheckForObjectEventCollision:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0x24]
	lsl	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r6, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	sl, r4
	lsr	r7, r1, #0x10
	asr	r5, r1, #0x10
	lsr	r1, r2, #0x10
	mov	r9, r1
	asr	r4, r2, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	strb	r0, [r1]
	cmp	r0, #0x3
	bne	.L172	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	CanStopSurfing
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L172	@cond_branch
	mov	r0, #0x5
	b	.L177
.L172:
	lsl	r5, r7, #0x10
	asr	r0, r5, #0x10
	mov	r8, r0
	mov	r1, r9
	lsl	r4, r1, #0x10
	asr	r7, r4, #0x10
	add	r1, r7, #0
	add	r2, r6, #0
	bl	ShouldJumpLedge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L173	@cond_branch
	mov	r0, #0x2b
	bl	IncrementGameStat
	mov	r0, #0x6
	b	.L177
.L173:
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L174	@cond_branch
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	bl	TryPushBoulder
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L174	@cond_branch
	mov	r0, #0x7
	b	.L177
.L174:
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L175	@cond_branch
	asr	r5, r5, #0x10
	asr	r4, r4, #0x10
	add	r0, r6, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	CheckForRotatingGatePuzzleCollision
	cmp	r0, #0
	beq	.L176	@cond_branch
	mov	r0, #0x8
	b	.L177
.L176:
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, sl
	mov	r3, sp
	bl	CheckAcroBikeCollision
.L175:
	mov	r0, sp
	ldrb	r0, [r0]
.L177:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe37:
	.size	 CheckForObjectEventCollision,.Lfe37-CheckForObjectEventCollision
	.align	2, 0
	.type	 sub_808B164,function
	.thumb_func
sub_808B164:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0x18]
	lsl	r3, r3, #0x18
	lsr	r6, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r7, r4, #0x18
	lsl	r1, r1, #0x10
	asr	r5, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r4, r2, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	strb	r0, [r1]
	cmp	r0, #0
	bne	.L179	@cond_branch
	add	r0, r6, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	CheckForRotatingGatePuzzleCollisionWithoutAnimation
	cmp	r0, #0
	beq	.L180	@cond_branch
	mov	r0, #0x8
	b	.L181
.L180:
	add	r0, r5, #0
	add	r1, r4, #0
	add	r2, r7, #0
	mov	r3, sp
	bl	CheckAcroBikeCollision
.L179:
	mov	r0, sp
	ldrb	r0, [r0]
.L181:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 sub_808B164,.Lfe38-sub_808B164
	.align	2, 0
	.type	 CanStopSurfing,function
	.thumb_func
CanStopSurfing:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L186
	ldrb	r1, [r0]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L183	@cond_branch
	lsl	r5, r3, #0x10
	asr	r0, r5, #0x10
	lsl	r4, r4, #0x10
	asr	r1, r4, #0x10
	bl	MapGridGetZCoordAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L183	@cond_branch
	lsr	r0, r5, #0x10
	lsr	r1, r4, #0x10
	mov	r2, #0x3
	bl	GetObjectEventIdByXYZ
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x10
	bne	.L183	@cond_branch
	add	r0, r6, #0
	bl	CreateStopSurfingTask
	mov	r0, #0x1
	b	.L185
.L187:
	.align	2, 0
.L186:
	.word	gPlayerAvatar
.L183:
	mov	r0, #0x0
.L185:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 CanStopSurfing,.Lfe39-CanStopSurfing
	.align	2, 0
	.type	 ShouldJumpLedge,function
	.thumb_func
ShouldJumpLedge:
	push	{lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetLedgeJumpDirection
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L189	@cond_branch
	mov	r0, #0x0
	b	.L191
.L189:
	mov	r0, #0x1
.L191:
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 ShouldJumpLedge,.Lfe40-ShouldJumpLedge
	.align	2, 0
	.type	 TryPushBoulder,function
	.thumb_func
TryPushBoulder:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	mov	r3, sp
	strh	r0, [r3]
	mov	r5, sp
	add	r5, r5, #0x2
	strh	r1, [r5]
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r0, .L197
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L193	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	GetObjectEventIdByXY
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x10
	beq	.L193	@cond_branch
	ldr	r0, .L197+0x4
	lsl	r1, r6, #0x3
	add	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r4, r1, r0
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0x57
	bne	.L193	@cond_branch
	ldrh	r1, [r4, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	strh	r0, [r5]
	add	r0, r7, #0
	mov	r1, sp
	add	r2, r5, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r0, #0x0
	ldrsh	r2, [r5, r0]
	add	r0, r4, #0
	add	r3, r7, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L193	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L193	@cond_branch
	add	r0, r6, #0
	add	r1, r7, #0
	bl	StartStrengthAnim
	mov	r0, #0x1
	b	.L196
.L198:
	.align	2, 0
.L197:
	.word	0x889
	.word	gObjectEvents
.L193:
	mov	r0, #0x0
.L196:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 TryPushBoulder,.Lfe41-TryPushBoulder
	.align	2, 0
	.type	 CheckAcroBikeCollision,function
	.thumb_func
CheckAcroBikeCollision:
	push	{r4, r5, r6, r7, lr}
	add	r6, r3, #0
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r4, #0x0
	ldr	r7, .L206
.L203:
	lsl	r0, r4, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L202	@cond_branch
	ldr	r0, .L206+0x4
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r6]
	b	.L199
.L207:
	.align	2, 0
.L206:
	.word	sAcroBikeTrickMetatiles
	.word	sAcroBikeTrickCollisionTypes
.L202:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L203	@cond_branch
.L199:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 CheckAcroBikeCollision,.Lfe42-CheckAcroBikeCollision
	.align	2, 0
	.globl	IsPlayerCollidingWithFarawayIslandMew
	.type	 IsPlayerCollidingWithFarawayIslandMew,function
	.thumb_func
IsPlayerCollidingWithFarawayIslandMew:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L215
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r2, r1, #0x3
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	ldr	r5, .L215+0x4
	add	r3, r2, r5
	ldrh	r2, [r3, #0x10]
	mov	r1, sp
	strh	r2, [r1]
	ldrh	r1, [r3, #0x12]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r1, [r4]
	mov	r1, sp
	add	r2, r4, #0
	bl	MoveCoords
	mov	r0, #0x1
	mov	r1, #0x39
	mov	r2, #0x1a
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r6, r4, #0
	cmp	r1, #0x10
	beq	.L210	@cond_branch
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r5
	mov	r0, sp
	mov	r1, #0x14
	ldrsh	r2, [r3, r1]
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp	r2, r0
	bne	.L210	@cond_branch
	mov	r5, #0x16
	ldrsh	r1, [r3, r5]
	mov	r4, #0x0
	ldrsh	r0, [r6, r4]
	ldrh	r4, [r3, #0x16]
	cmp	r1, r0
	bne	.L212	@cond_branch
	mov	r5, #0x10
	ldrsh	r0, [r3, r5]
	cmp	r0, r2
	bne	.L212	@cond_branch
	mov	r2, #0x12
	ldrsh	r0, [r3, r2]
	cmp	r0, r1
	beq	.L210	@cond_branch
.L212:
	mov	r0, sp
	mov	r5, #0x14
	ldrsh	r1, [r3, r5]
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r1, r0
	bne	.L210	@cond_branch
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	mov	r4, #0x0
	ldrsh	r1, [r6, r4]
	cmp	r0, r1
	bne	.L210	@cond_branch
	mov	r0, #0x1
	b	.L214
.L216:
	.align	2, 0
.L215:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L210:
	mov	r0, #0x0
.L214:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 IsPlayerCollidingWithFarawayIslandMew,.Lfe43-IsPlayerCollidingWithFarawayIslandMew
	.align	2, 0
	.globl	SetPlayerAvatarTransitionFlags
	.type	 SetPlayerAvatarTransitionFlags,function
	.thumb_func
SetPlayerAvatarTransitionFlags:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L218
	ldrb	r1, [r2, #0x1]
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	bl	DoPlayerAvatarTransition
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	gPlayerAvatar
.Lfe44:
	.size	 SetPlayerAvatarTransitionFlags,.Lfe44-SetPlayerAvatarTransitionFlags
	.align	2, 0
	.type	 DoPlayerAvatarTransition,function
	.thumb_func
DoPlayerAvatarTransition:
	push	{r4, r5, lr}
	ldr	r0, .L228
	ldrb	r4, [r0, #0x1]
	cmp	r4, #0
	beq	.L221	@cond_branch
	mov	r5, #0x0
.L225:
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L224	@cond_branch
	ldr	r0, .L228+0x4
	lsl	r2, r5, #0x2
	add	r2, r2, r0
	ldr	r0, .L228
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L228+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	bl	_call_via_r1
.L224:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsr	r4, r4, #0x1
	cmp	r5, #0x7
	bls	.L225	@cond_branch
	ldr	r1, .L228
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
.L221:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gPlayerAvatar
	.word	sPlayerAvatarTransitionFuncs
	.word	gObjectEvents
.Lfe45:
	.size	 DoPlayerAvatarTransition,.Lfe45-DoPlayerAvatarTransition
	.align	2, 0
	.type	 PlayerAvatarTransition_Dummy,function
	.thumb_func
PlayerAvatarTransition_Dummy:
	bx	lr
.Lfe46:
	.size	 PlayerAvatarTransition_Dummy,.Lfe46-PlayerAvatarTransition_Dummy
	.align	2, 0
	.type	 PlayerAvatarTransition_Normal,function
	.thumb_func
PlayerAvatarTransition_Normal:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	mov	r0, #0x1
	bl	SetPlayerAvatarStateMask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 PlayerAvatarTransition_Normal,.Lfe47-PlayerAvatarTransition_Normal
	.align	2, 0
	.type	 PlayerAvatarTransition_MachBike,function
	.thumb_func
PlayerAvatarTransition_MachBike:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	mov	r0, #0x2
	bl	SetPlayerAvatarStateMask
	mov	r0, #0x0
	mov	r1, #0x0
	bl	BikeClearState
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 PlayerAvatarTransition_MachBike,.Lfe48-PlayerAvatarTransition_MachBike
	.align	2, 0
	.type	 PlayerAvatarTransition_AcroBike,function
	.thumb_func
PlayerAvatarTransition_AcroBike:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	mov	r0, #0x4
	bl	SetPlayerAvatarStateMask
	mov	r0, #0x0
	mov	r1, #0x0
	bl	BikeClearState
	bl	Bike_HandleBumpySlopeJump
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 PlayerAvatarTransition_AcroBike,.Lfe49-PlayerAvatarTransition_AcroBike
	.align	2, 0
	.type	 PlayerAvatarTransition_Surfing,function
	.thumb_func
PlayerAvatarTransition_Surfing:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x3
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	mov	r0, #0x8
	bl	SetPlayerAvatarStateMask
	ldr	r1, .L235
	mov	r2, #0x10
	ldrsh	r0, [r4, r2]
	str	r0, [r1]
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	str	r0, [r1, #0x4]
	ldr	r0, .L235+0x4
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	str	r0, [r1, #0x8]
	mov	r0, #0x8
	bl	FieldEffectStart
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strb	r0, [r4, #0x1a]
	mov	r1, #0x1
	bl	SetSurfBobState
	pop	{r4}
	pop	{r0}
	bx	r0
.L236:
	.align	2, 0
.L235:
	.word	gFieldEffectArguments
	.word	gPlayerAvatar
.Lfe50:
	.size	 PlayerAvatarTransition_Surfing,.Lfe50-PlayerAvatarTransition_Surfing
	.align	2, 0
	.type	 PlayerAvatarTransition_Underwater,function
	.thumb_func
PlayerAvatarTransition_Underwater:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x4
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	mov	r0, #0x10
	bl	SetPlayerAvatarStateMask
	ldrb	r0, [r4, #0x4]
	bl	sub_8155800
	strb	r0, [r4, #0x1a]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 PlayerAvatarTransition_Underwater,.Lfe51-PlayerAvatarTransition_Underwater
	.align	2, 0
	.type	 PlayerAvatarTransition_ReturnToField,function
	.thumb_func
PlayerAvatarTransition_ReturnToField:
	ldr	r2, .L239
	ldrb	r1, [r2]
	mov	r0, #0x20
	orr	r0, r0, r1
	strb	r0, [r2]
	bx	lr
.L240:
	.align	2, 0
.L239:
	.word	gPlayerAvatar
.Lfe52:
	.size	 PlayerAvatarTransition_ReturnToField,.Lfe52-PlayerAvatarTransition_ReturnToField
	.align	2, 0
	.globl	UpdatePlayerAvatarTransitionState
	.type	 UpdatePlayerAvatarTransitionState,function
	.thumb_func
UpdatePlayerAvatarTransitionState:
	push	{r4, lr}
	ldr	r4, .L248
	mov	r0, #0x0
	strb	r0, [r4, #0x3]
	bl	PlayerIsAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L242	@cond_branch
	bl	PlayerCheckIfAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L243	@cond_branch
	bl	player_is_anim_in_certain_ranges
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L242	@cond_branch
	mov	r0, #0x1
	b	.L247
.L249:
	.align	2, 0
.L248:
	.word	gPlayerAvatar
.L243:
	bl	sub_808B618
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L242	@cond_branch
	mov	r0, #0x2
.L247:
	strb	r0, [r4, #0x3]
.L242:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 UpdatePlayerAvatarTransitionState,.Lfe53-UpdatePlayerAvatarTransitionState
	.align	2, 0
	.type	 player_is_anim_in_certain_ranges,function
	.thumb_func
player_is_anim_in_certain_ranges:
	push	{lr}
	ldr	r2, .L255
	ldr	r0, .L255+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1c]
	cmp	r1, #0x3
	bls	.L252	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bls	.L252	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x19
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bls	.L252	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x64
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xb
	bls	.L252	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x7c
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L251	@cond_branch
.L252:
	mov	r0, #0x1
	b	.L254
.L256:
	.align	2, 0
.L255:
	.word	gObjectEvents
	.word	gPlayerAvatar
.L251:
	mov	r0, #0x0
.L254:
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 player_is_anim_in_certain_ranges,.Lfe54-player_is_anim_in_certain_ranges
	.align	2, 0
	.type	 sub_808B618,function
	.thumb_func
sub_808B618:
	push	{lr}
	bl	player_is_anim_in_certain_ranges
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L258	@cond_branch
	ldr	r0, .L261
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x1
	beq	.L258	@cond_branch
	mov	r0, #0x1
	b	.L260
.L262:
	.align	2, 0
.L261:
	.word	gPlayerAvatar
.L258:
	mov	r0, #0x0
.L260:
	pop	{r1}
	bx	r1
.Lfe55:
	.size	 sub_808B618,.Lfe55-sub_808B618
	.align	2, 0
	.type	 PlayerIsAnimActive,function
	.thumb_func
PlayerIsAnimActive:
	push	{lr}
	ldr	r0, .L264
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L264+0x4
	add	r0, r0, r1
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L265:
	.align	2, 0
.L264:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe56:
	.size	 PlayerIsAnimActive,.Lfe56-PlayerIsAnimActive
	.align	2, 0
	.type	 PlayerCheckIfAnimFinishedOrInactive,function
	.thumb_func
PlayerCheckIfAnimFinishedOrInactive:
	push	{lr}
	ldr	r0, .L267
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L267+0x4
	add	r0, r0, r1
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L268:
	.align	2, 0
.L267:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe57:
	.size	 PlayerCheckIfAnimFinishedOrInactive,.Lfe57-PlayerCheckIfAnimFinishedOrInactive
	.align	2, 0
	.type	 PlayerSetCopyableMovement,function
	.thumb_func
PlayerSetCopyableMovement:
	ldr	r3, .L270
	ldr	r1, .L270+0x4
	ldrb	r2, [r1, #0x5]
	lsl	r2, r2, #0x19
	lsr	r2, r2, #0x19
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	add	r1, r1, #0x22
	strb	r0, [r1]
	bx	lr
.L271:
	.align	2, 0
.L270:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe58:
	.size	 PlayerSetCopyableMovement,.Lfe58-PlayerSetCopyableMovement
	.align	2, 0
	.globl	PlayerGetCopyableMovement
	.type	 PlayerGetCopyableMovement,function
	.thumb_func
PlayerGetCopyableMovement:
	ldr	r2, .L273
	ldr	r0, .L273+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x22
	ldrb	r0, [r0]
	bx	lr
.L274:
	.align	2, 0
.L273:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe59:
	.size	 PlayerGetCopyableMovement,.Lfe59-PlayerGetCopyableMovement
	.align	2, 0
	.type	 sub_808B6BC,function
	.thumb_func
sub_808B6BC:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L276
	ldrb	r2, [r0, #0x5]
	lsl	r2, r2, #0x19
	lsr	r2, r2, #0x19
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L276+0x4
	add	r0, r0, r2
	bl	ObjectEventForceSetHeldMovement
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe60:
	.size	 sub_808B6BC,.Lfe60-sub_808B6BC
	.align	2, 0
	.globl	PlayerSetAnimId
	.type	 PlayerSetAnimId,function
	.thumb_func
PlayerSetAnimId:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	PlayerIsAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L279	@cond_branch
	add	r0, r4, #0
	bl	PlayerSetCopyableMovement
	ldr	r0, .L280
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L280+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	bl	ObjectEventSetHeldMovement
.L279:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L281:
	.align	2, 0
.L280:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe61:
	.size	 PlayerSetAnimId,.Lfe61-PlayerSetAnimId
	.align	2, 0
	.type	 PlayerGoSlow,function
	.thumb_func
PlayerGoSlow:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkSlowMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe62:
	.size	 PlayerGoSlow,.Lfe62-PlayerGoSlow
	.align	2, 0
	.globl	PlayerGoSpeed1
	.type	 PlayerGoSpeed1,function
	.thumb_func
PlayerGoSpeed1:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkNormalMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe63:
	.size	 PlayerGoSpeed1,.Lfe63-PlayerGoSpeed1
	.align	2, 0
	.globl	PlayerGoSpeed2
	.type	 PlayerGoSpeed2,function
	.thumb_func
PlayerGoSpeed2:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkFastMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 PlayerGoSpeed2,.Lfe64-PlayerGoSpeed2
	.align	2, 0
	.globl	PlayerRideWaterCurrent
	.type	 PlayerRideWaterCurrent,function
	.thumb_func
PlayerRideWaterCurrent:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetRideWaterCurrentMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 PlayerRideWaterCurrent,.Lfe65-PlayerRideWaterCurrent
	.align	2, 0
	.globl	PlayerGoSpeed4
	.type	 PlayerGoSpeed4,function
	.thumb_func
PlayerGoSpeed4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkFastestMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 PlayerGoSpeed4,.Lfe66-PlayerGoSpeed4
	.align	2, 0
	.type	 PlayerRun,function
	.thumb_func
PlayerRun:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetPlayerRunMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 PlayerRun,.Lfe67-PlayerRun
	.align	2, 0
	.globl	PlayerOnBikeCollide
	.type	 PlayerOnBikeCollide,function
	.thumb_func
PlayerOnBikeCollide:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PlayCollisionSoundIfNotFacingWarp
	add	r0, r4, #0
	bl	GetWalkInPlaceNormalMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe68:
	.size	 PlayerOnBikeCollide,.Lfe68-PlayerOnBikeCollide
	.align	2, 0
	.globl	PlayerOnBikeCollideWithFarawayIslandMew
	.type	 PlayerOnBikeCollideWithFarawayIslandMew,function
	.thumb_func
PlayerOnBikeCollideWithFarawayIslandMew:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceNormalMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe69:
	.size	 PlayerOnBikeCollideWithFarawayIslandMew,.Lfe69-PlayerOnBikeCollideWithFarawayIslandMew
	.align	2, 0
	.type	 PlayerNotOnBikeCollide,function
	.thumb_func
PlayerNotOnBikeCollide:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PlayCollisionSoundIfNotFacingWarp
	add	r0, r4, #0
	bl	GetWalkInPlaceSlowMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 PlayerNotOnBikeCollide,.Lfe70-PlayerNotOnBikeCollide
	.align	2, 0
	.type	 PlayerNotOnBikeCollideWithFarawayIslandMew,function
	.thumb_func
PlayerNotOnBikeCollideWithFarawayIslandMew:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceSlowMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 PlayerNotOnBikeCollideWithFarawayIslandMew,.Lfe71-PlayerNotOnBikeCollideWithFarawayIslandMew
	.align	2, 0
	.globl	PlayerFaceDirection
	.type	 PlayerFaceDirection,function
	.thumb_func
PlayerFaceDirection:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 PlayerFaceDirection,.Lfe72-PlayerFaceDirection
	.align	2, 0
	.globl	PlayerTurnInPlace
	.type	 PlayerTurnInPlace,function
	.thumb_func
PlayerTurnInPlace:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceFastMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 PlayerTurnInPlace,.Lfe73-PlayerTurnInPlace
	.align	2, 0
	.globl	PlayerJumpLedge
	.type	 PlayerJumpLedge,function
	.thumb_func
PlayerJumpLedge:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0xa
	bl	PlaySE
	add	r0, r4, #0
	bl	GetJump2MovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x8
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 PlayerJumpLedge,.Lfe74-PlayerJumpLedge
	.align	2, 0
	.globl	sub_808B864
	.type	 sub_808B864,function
	.thumb_func
sub_808B864:
	push	{r4, lr}
	ldr	r4, .L299
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	beq	.L297	@cond_branch
	cmp	r0, #0
	bne	.L296	@cond_branch
.L297:
	bl	player_should_look_direction_be_enforced_upon_movement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L296	@cond_branch
	ldr	r2, .L299+0x4
	ldrb	r1, [r4, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_808B6BC
.L296:
	pop	{r4}
	pop	{r0}
	bx	r0
.L300:
	.align	2, 0
.L299:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe75:
	.size	 sub_808B864,.Lfe75-sub_808B864
	.align	2, 0
	.globl	PlayerIdleWheelie
	.type	 PlayerIdleWheelie,function
	.thumb_func
PlayerIdleWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroWheelieFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 PlayerIdleWheelie,.Lfe76-PlayerIdleWheelie
	.align	2, 0
	.globl	PlayerStartWheelie
	.type	 PlayerStartWheelie,function
	.thumb_func
PlayerStartWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroPopWheelieFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 PlayerStartWheelie,.Lfe77-PlayerStartWheelie
	.align	2, 0
	.globl	PlayerEndWheelie
	.type	 PlayerEndWheelie,function
	.thumb_func
PlayerEndWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroEndWheelieFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 PlayerEndWheelie,.Lfe78-PlayerEndWheelie
	.align	2, 0
	.globl	PlayerStandingHoppingWheelie
	.type	 PlayerStandingHoppingWheelie,function
	.thumb_func
PlayerStandingHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieHopFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 PlayerStandingHoppingWheelie,.Lfe79-PlayerStandingHoppingWheelie
	.align	2, 0
	.globl	PlayerMovingHoppingWheelie
	.type	 PlayerMovingHoppingWheelie,function
	.thumb_func
PlayerMovingHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieHopDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 PlayerMovingHoppingWheelie,.Lfe80-PlayerMovingHoppingWheelie
	.align	2, 0
	.globl	PlayerLedgeHoppingWheelie
	.type	 PlayerLedgeHoppingWheelie,function
	.thumb_func
PlayerLedgeHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieJumpDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x8
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe81:
	.size	 PlayerLedgeHoppingWheelie,.Lfe81-PlayerLedgeHoppingWheelie
	.align	2, 0
	.globl	PlayerAcroTurnJump
	.type	 PlayerAcroTurnJump,function
	.thumb_func
PlayerAcroTurnJump:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	GetJumpInPlaceTurnAroundMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe82:
	.size	 PlayerAcroTurnJump,.Lfe82-PlayerAcroTurnJump
	.align	2, 0
	.globl	PlayerWheelieInPlace
	.type	 PlayerWheelieInPlace,function
	.thumb_func
PlayerWheelieInPlace:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieInPlaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe83:
	.size	 PlayerWheelieInPlace,.Lfe83-PlayerWheelieInPlace
	.align	2, 0
	.globl	PlayerPopWheelieWhileMoving
	.type	 PlayerPopWheelieWhileMoving,function
	.thumb_func
PlayerPopWheelieWhileMoving:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroPopWheelieMoveDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe84:
	.size	 PlayerPopWheelieWhileMoving,.Lfe84-PlayerPopWheelieWhileMoving
	.align	2, 0
	.globl	PlayerWheelieMove
	.type	 PlayerWheelieMove,function
	.thumb_func
PlayerWheelieMove:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroWheelieMoveDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe85:
	.size	 PlayerWheelieMove,.Lfe85-PlayerWheelieMove
	.align	2, 0
	.globl	PlayerEndWheelieWhileMoving
	.type	 PlayerEndWheelieWhileMoving,function
	.thumb_func
PlayerEndWheelieWhileMoving:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroEndWheelieMoveDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe86:
	.size	 PlayerEndWheelieWhileMoving,.Lfe86-PlayerEndWheelieWhileMoving
	.align	2, 0
	.type	 PlayCollisionSoundIfNotFacingWarp,function
	.thumb_func
PlayCollisionSoundIfNotFacingWarp:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L316
	ldr	r0, .L316+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1e]
	ldr	r2, .L316+0x8
	sub	r1, r4, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L312	@cond_branch
	cmp	r4, #0x2
	bne	.L314	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, #0x2
	mov	r1, sp
	add	r2, r4, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsWarpDoor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L312	@cond_branch
.L314:
	mov	r0, #0x7
	bl	PlaySE
.L312:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L317:
	.align	2, 0
.L316:
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	sArrowWarpMetatileBehaviorChecks
.Lfe87:
	.size	 PlayCollisionSoundIfNotFacingWarp,.Lfe87-PlayCollisionSoundIfNotFacingWarp
	.align	2, 0
	.globl	GetXYCoordsOneStepInFrontOfPlayer
	.type	 GetXYCoordsOneStepInFrontOfPlayer,function
	.thumb_func
GetXYCoordsOneStepInFrontOfPlayer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r3, .L319
	ldr	r0, .L319+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r2, r1, #0x19
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x10]
	strh	r0, [r4]
	add	r1, r2, #0
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x12]
	strh	r0, [r5]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	MoveCoords
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L320:
	.align	2, 0
.L319:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe88:
	.size	 GetXYCoordsOneStepInFrontOfPlayer,.Lfe88-GetXYCoordsOneStepInFrontOfPlayer
	.align	2, 0
	.globl	PlayerGetDestCoords
	.type	 PlayerGetDestCoords,function
	.thumb_func
PlayerGetDestCoords:
	push	{r4, r5, lr}
	ldr	r5, .L322
	ldr	r2, .L322+0x4
	ldrb	r3, [r2, #0x5]
	lsl	r3, r3, #0x19
	lsr	r4, r3, #0x19
	lsl	r2, r4, #0x3
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r2, [r2, #0x10]
	strh	r2, [r0]
	add	r3, r4, #0
	lsl	r0, r3, #0x3
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r0, [r0, #0x12]
	strh	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe89:
	.size	 PlayerGetDestCoords,.Lfe89-PlayerGetDestCoords
	.align	2, 0
	.globl	player_get_pos_including_state_based_drift
	.type	 player_get_pos_including_state_based_drift,function
	.thumb_func
player_get_pos_including_state_based_drift:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L340
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L340+0x4
	add	r3, r1, r0
	ldrb	r1, [r3]
	mov	r0, #0xc0
	and	r0, r0, r1
	cmp	r0, #0x40
	beq	.LCB3594
	b	.L325	@long jump
.LCB3594:
	ldr	r2, .L340+0x8
	ldrb	r1, [r3, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x32
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.LCB3605
	b	.L325	@long jump
.LCB3605:
	ldrh	r0, [r3, #0x10]
	strh	r0, [r4]
	ldrh	r0, [r3, #0x12]
	strh	r0, [r5]
	ldrb	r0, [r3, #0x1c]
	sub	r0, r0, #0x8
	cmp	r0, #0x30
	bls	.LCB3615
	b	.L325	@long jump
.LCB3615:
	lsl	r0, r0, #0x2
	ldr	r1, .L340+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L341:
	.align	2, 0
.L340:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	.L335
	.align	2, 0
	.align	2, 0
.L335:
	.word	.L328
	.word	.L330
	.word	.L332
	.word	.L334
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L325
	.word	.L328
	.word	.L330
	.word	.L332
	.word	.L334
.L328:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	b	.L338
.L330:
	ldrh	r0, [r5]
	sub	r0, r0, #0x1
.L338:
	strh	r0, [r5]
	mov	r0, #0x1
	b	.L337
.L332:
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	b	.L339
.L334:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
.L339:
	strh	r0, [r4]
	mov	r0, #0x1
	b	.L337
.L325:
	mov	r1, #0x1
	neg	r1, r1
	add	r0, r1, #0
	strh	r0, [r4]
	strh	r0, [r5]
	mov	r0, #0x0
.L337:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe90:
	.size	 player_get_pos_including_state_based_drift,.Lfe90-player_get_pos_including_state_based_drift
	.align	2, 0
	.globl	GetPlayerFacingDirection
	.type	 GetPlayerFacingDirection,function
	.thumb_func
GetPlayerFacingDirection:
	ldr	r2, .L343
	ldr	r0, .L343+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bx	lr
.L344:
	.align	2, 0
.L343:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe91:
	.size	 GetPlayerFacingDirection,.Lfe91-GetPlayerFacingDirection
	.align	2, 0
	.globl	GetPlayerMovementDirection
	.type	 GetPlayerMovementDirection,function
	.thumb_func
GetPlayerMovementDirection:
	ldr	r2, .L346
	ldr	r0, .L346+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsr	r0, r0, #0x4
	bx	lr
.L347:
	.align	2, 0
.L346:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe92:
	.size	 GetPlayerMovementDirection,.Lfe92-GetPlayerMovementDirection
	.align	2, 0
	.globl	PlayerGetZCoord
	.type	 PlayerGetZCoord,function
	.thumb_func
PlayerGetZCoord:
	ldr	r2, .L349
	ldr	r0, .L349+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0xb]
	lsr	r0, r0, #0x4
	bx	lr
.L350:
	.align	2, 0
.L349:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe93:
	.size	 PlayerGetZCoord,.Lfe93-PlayerGetZCoord
	.align	2, 0
	.globl	sub_808BC90
	.type	 sub_808BC90,function
	.thumb_func
sub_808BC90:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r0, .L352
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L352+0x4
	add	r0, r0, r1
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r3, #0
	bl	MoveObjectEventToMapCoords
	pop	{r0}
	bx	r0
.L353:
	.align	2, 0
.L352:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe94:
	.size	 sub_808BC90,.Lfe94-sub_808BC90
	.align	2, 0
	.globl	TestPlayerAvatarFlags
	.type	 TestPlayerAvatarFlags,function
	.thumb_func
TestPlayerAvatarFlags:
	ldr	r1, .L355
	ldrb	r1, [r1]
	and	r1, r1, r0
	add	r0, r1, #0
	bx	lr
.L356:
	.align	2, 0
.L355:
	.word	gPlayerAvatar
.Lfe95:
	.size	 TestPlayerAvatarFlags,.Lfe95-TestPlayerAvatarFlags
	.align	2, 0
	.globl	GetPlayerAvatarFlags
	.type	 GetPlayerAvatarFlags,function
	.thumb_func
GetPlayerAvatarFlags:
	ldr	r0, .L358
	ldrb	r0, [r0]
	bx	lr
.L359:
	.align	2, 0
.L358:
	.word	gPlayerAvatar
.Lfe96:
	.size	 GetPlayerAvatarFlags,.Lfe96-GetPlayerAvatarFlags
	.align	2, 0
	.globl	GetPlayerAvatarObjectId
	.type	 GetPlayerAvatarObjectId,function
	.thumb_func
GetPlayerAvatarObjectId:
	ldr	r0, .L361
	ldrb	r0, [r0, #0x4]
	bx	lr
.L362:
	.align	2, 0
.L361:
	.word	gPlayerAvatar
.Lfe97:
	.size	 GetPlayerAvatarObjectId,.Lfe97-GetPlayerAvatarObjectId
	.align	2, 0
	.globl	sub_808BCE8
	.type	 sub_808BCE8,function
	.thumb_func
sub_808BCE8:
	push	{lr}
	bl	ForcedMovement_None
	pop	{r0}
	bx	r0
.Lfe98:
	.size	 sub_808BCE8,.Lfe98-sub_808BCE8
	.align	2, 0
	.globl	sub_808BCF4
	.type	 sub_808BCF4,function
	.thumb_func
sub_808BCF4:
	push	{r4, lr}
	ldr	r0, .L366
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L366+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	bl	npc_clear_strange_bits
	ldrb	r1, [r4, #0x18]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	SetObjectEventDirection
	mov	r0, #0x6
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L365	@cond_branch
	bl	Bike_HandleBumpySlopeJump
	mov	r0, #0x0
	bl	Bike_UpdateBikeCounterSpeed
.L365:
	pop	{r4}
	pop	{r0}
	bx	r0
.L367:
	.align	2, 0
.L366:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe99:
	.size	 sub_808BCF4,.Lfe99-sub_808BCF4
	.align	2, 0
	.globl	GetRivalAvatarGraphicsIdByStateIdAndGender
	.type	 GetRivalAvatarGraphicsIdByStateIdAndGender,function
	.thumb_func
GetRivalAvatarGraphicsIdByStateIdAndGender:
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L369
	lsr	r0, r0, #0x17
	add	r1, r1, r0
	add	r1, r1, r2
	ldrb	r0, [r1]
	bx	lr
.L370:
	.align	2, 0
.L369:
	.word	sRivalAvatarGfxIds
.Lfe100:
	.size	 GetRivalAvatarGraphicsIdByStateIdAndGender,.Lfe100-GetRivalAvatarGraphicsIdByStateIdAndGender
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	.type	 GetPlayerAvatarGraphicsIdByStateIdAndGender,function
	.thumb_func
GetPlayerAvatarGraphicsIdByStateIdAndGender:
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L372
	lsr	r0, r0, #0x17
	add	r1, r1, r0
	add	r1, r1, r2
	ldrb	r0, [r1]
	bx	lr
.L373:
	.align	2, 0
.L372:
	.word	sPlayerAvatarGfxIds
.Lfe101:
	.size	 GetPlayerAvatarGraphicsIdByStateIdAndGender,.Lfe101-GetPlayerAvatarGraphicsIdByStateIdAndGender
	.align	2, 0
	.globl	GetFRLGAvatarGraphicsIdByGender
	.type	 GetFRLGAvatarGraphicsIdByGender,function
	.thumb_func
GetFRLGAvatarGraphicsIdByGender:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L375
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L376:
	.align	2, 0
.L375:
	.word	sFRLGAvatarGfxIds
.Lfe102:
	.size	 GetFRLGAvatarGraphicsIdByGender,.Lfe102-GetFRLGAvatarGraphicsIdByGender
	.align	2, 0
	.globl	GetRSAvatarGraphicsIdByGender
	.type	 GetRSAvatarGraphicsIdByGender,function
	.thumb_func
GetRSAvatarGraphicsIdByGender:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L378
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L379:
	.align	2, 0
.L378:
	.word	sRSAvatarGfxIds
.Lfe103:
	.size	 GetRSAvatarGraphicsIdByGender,.Lfe103-GetRSAvatarGraphicsIdByGender
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByStateId
	.type	 GetPlayerAvatarGraphicsIdByStateId,function
	.thumb_func
GetPlayerAvatarGraphicsIdByStateId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L381
	ldrb	r1, [r1, #0x7]
	bl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L382:
	.align	2, 0
.L381:
	.word	gPlayerAvatar
.Lfe104:
	.size	 GetPlayerAvatarGraphicsIdByStateId,.Lfe104-GetPlayerAvatarGraphicsIdByStateId
	.align	2, 0
	.globl	unref_GetRivalAvatarGenderByGraphicsId
	.type	 unref_GetRivalAvatarGenderByGraphicsId,function
	.thumb_func
unref_GetRivalAvatarGenderByGraphicsId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x70
	beq	.L392	@cond_branch
	cmp	r0, #0x70
	bgt	.L395	@cond_branch
	cmp	r0, #0x6d
	bgt	.L393	@cond_branch
	cmp	r0, #0x69
	blt	.L393	@cond_branch
	b	.L392
.L395:
	cmp	r1, #0x8a
	beq	.L392	@cond_branch
	cmp	r1, #0xc0
	bne	.L393	@cond_branch
.L392:
	mov	r0, #0x1
	b	.L396
.L393:
	mov	r0, #0x0
.L396:
	pop	{r1}
	bx	r1
.Lfe105:
	.size	 unref_GetRivalAvatarGenderByGraphicsId,.Lfe105-unref_GetRivalAvatarGenderByGraphicsId
	.align	2, 0
	.globl	GetPlayerAvatarGenderByGraphicsId
	.type	 GetPlayerAvatarGenderByGraphicsId,function
	.thumb_func
GetPlayerAvatarGenderByGraphicsId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x70
	beq	.L406	@cond_branch
	cmp	r0, #0x70
	bgt	.L409	@cond_branch
	cmp	r0, #0x5d
	bgt	.L407	@cond_branch
	cmp	r0, #0x59
	blt	.L407	@cond_branch
	b	.L406
.L409:
	cmp	r1, #0x8a
	beq	.L406	@cond_branch
	cmp	r1, #0xc0
	bne	.L407	@cond_branch
.L406:
	mov	r0, #0x1
	b	.L410
.L407:
	mov	r0, #0x0
.L410:
	pop	{r1}
	bx	r1
.Lfe106:
	.size	 GetPlayerAvatarGenderByGraphicsId,.Lfe106-GetPlayerAvatarGenderByGraphicsId
	.align	2, 0
	.globl	PartyHasMonWithSurf
	.type	 PartyHasMonWithSurf,function
	.thumb_func
PartyHasMonWithSurf:
	mov	r0, #0x1
	bx	lr
.Lfe107:
	.size	 PartyHasMonWithSurf,.Lfe107-PartyHasMonWithSurf
	.align	2, 0
	.globl	IsPlayerSurfingNorth
	.type	 IsPlayerSurfingNorth,function
	.thumb_func
IsPlayerSurfingNorth:
	push	{lr}
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L413	@cond_branch
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L413	@cond_branch
	mov	r0, #0x1
	b	.L415
.L413:
	mov	r0, #0x0
.L415:
	pop	{r1}
	bx	r1
.Lfe108:
	.size	 IsPlayerSurfingNorth,.Lfe108-IsPlayerSurfingNorth
	.align	2, 0
	.globl	IsPlayerFacingSurfableFishableWater
	.type	 IsPlayerFacingSurfableFishableWater,function
	.thumb_func
IsPlayerFacingSurfableFishableWater:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L420
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L420+0x4
	add	r4, r4, r0
	ldrh	r1, [r4, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	mov	r5, sp
	add	r5, r5, #0x2
	strh	r0, [r5]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	mov	r1, sp
	add	r2, r5, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r0, #0x0
	ldrsh	r2, [r5, r0]
	ldrb	r3, [r4, #0x18]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1c
	add	r0, r4, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L417	@cond_branch
	bl	PlayerGetZCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L417	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableFishableWater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L417	@cond_branch
	mov	r0, #0x1
	b	.L419
.L421:
	.align	2, 0
.L420:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L417:
	mov	r0, #0x0
.L419:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe109:
	.size	 IsPlayerFacingSurfableFishableWater,.Lfe109-IsPlayerFacingSurfableFishableWater
	.align	2, 0
	.globl	ClearPlayerAvatarInfo
	.type	 ClearPlayerAvatarInfo,function
	.thumb_func
ClearPlayerAvatarInfo:
	push	{lr}
	ldr	r0, .L423
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
	pop	{r0}
	bx	r0
.L424:
	.align	2, 0
.L423:
	.word	gPlayerAvatar
.Lfe110:
	.size	 ClearPlayerAvatarInfo,.Lfe110-ClearPlayerAvatarInfo
	.align	2, 0
	.globl	SetPlayerAvatarStateMask
	.type	 SetPlayerAvatarStateMask,function
	.thumb_func
SetPlayerAvatarStateMask:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L426
	ldrb	r2, [r3]
	mov	r1, #0xe0
	and	r1, r1, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	bx	lr
.L427:
	.align	2, 0
.L426:
	.word	gPlayerAvatar
.Lfe111:
	.size	 SetPlayerAvatarStateMask,.Lfe111-SetPlayerAvatarStateMask
	.align	2, 0
	.type	 GetPlayerAvatarStateTransitionByGraphicsId,function
	.thumb_func
GetPlayerAvatarStateTransitionByGraphicsId:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x0
	ldr	r3, .L436
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r4, r0, #0x1
	add	r6, r3, #0x1
.L432:
	lsl	r0, r2, #0x1
	add	r1, r0, r4
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, r5
	bne	.L431	@cond_branch
	add	r0, r1, r6
	ldrb	r0, [r0]
	b	.L435
.L437:
	.align	2, 0
.L436:
	.word	sPlayerAvatarGfxToStateFlag
.L431:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L432	@cond_branch
	mov	r0, #0x1
.L435:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe112:
	.size	 GetPlayerAvatarStateTransitionByGraphicsId,.Lfe112-GetPlayerAvatarStateTransitionByGraphicsId
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByCurrentState
	.type	 GetPlayerAvatarGraphicsIdByCurrentState,function
	.thumb_func
GetPlayerAvatarGraphicsIdByCurrentState:
	push	{r4, r5, r6, lr}
	ldr	r0, .L446
	ldrb	r5, [r0]
	mov	r2, #0x0
	ldr	r3, .L446+0x4
	ldrb	r1, [r0, #0x7]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r4, r0, #0x1
	add	r6, r3, #0x1
.L442:
	lsl	r0, r2, #0x1
	add	r1, r0, r4
	add	r0, r1, r6
	ldrb	r0, [r0]
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L441	@cond_branch
	add	r0, r1, r3
	ldrb	r0, [r0]
	b	.L445
.L447:
	.align	2, 0
.L446:
	.word	gPlayerAvatar
	.word	sPlayerAvatarGfxToStateFlag
.L441:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L442	@cond_branch
	mov	r0, #0x0
.L445:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe113:
	.size	 GetPlayerAvatarGraphicsIdByCurrentState,.Lfe113-GetPlayerAvatarGraphicsIdByCurrentState
	.align	2, 0
	.globl	SetPlayerAvatarExtraStateTransition
	.type	 SetPlayerAvatarExtraStateTransition,function
	.thumb_func
SetPlayerAvatarExtraStateTransition:
	push	{r4, r5, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L449
	ldrb	r1, [r5, #0x7]
	bl	GetPlayerAvatarStateTransitionByGraphicsId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	orr	r0, r0, r4
	ldrb	r1, [r5, #0x1]
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	bl	DoPlayerAvatarTransition
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L450:
	.align	2, 0
.L449:
	.word	gPlayerAvatar
.Lfe114:
	.size	 SetPlayerAvatarExtraStateTransition,.Lfe114-SetPlayerAvatarExtraStateTransition
	.align	2, 0
	.globl	InitPlayerAvatar
	.type	 InitPlayerAvatar,function
	.thumb_func
InitPlayerAvatar:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x18
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r8, r2
	mov	r9, r3
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r0, r8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r1, sp
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r0, #0x0
	mov	r1, r9
	bl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	mov	r1, sp
	mov	r3, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, sp
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	sub	r4, r4, #0x7
	mov	r6, #0x0
	strh	r4, [r0, #0x4]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	sub	r5, r5, #0x7
	strh	r5, [r0, #0x6]
	strb	r6, [r0, #0x8]
	mov	r0, #0xb
	strb	r0, [r1, #0x9]
	mov	r2, sp
	ldrb	r1, [r2, #0xa]
	sub	r0, r0, #0x1b
	and	r0, r0, r1
	strb	r0, [r2, #0xa]
	mov	r0, sp
	strb	r6, [r0, #0xa]
	strh	r3, [r0, #0xc]
	strh	r3, [r0, #0xe]
	str	r3, [sp, #0x10]
	strh	r3, [r0, #0x14]
	bl	SpawnSpecialObjectEvent
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x3
	add	r4, r4, r5
	lsl	r4, r4, #0x2
	ldr	r0, .L452
	add	r4, r4, r0
	ldrb	r0, [r4, #0x2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x2]
	bl	CreateWarpArrowSprite
	strb	r0, [r4, #0x1b]
	add	r0, r4, #0
	mov	r1, r8
	bl	ObjectEventTurn
	bl	ClearPlayerAvatarInfo
	ldr	r2, .L452+0x4
	strb	r6, [r2, #0x2]
	strb	r6, [r2, #0x3]
	mov	r1, #0x7f
	and	r1, r1, r5
	ldrb	r3, [r2, #0x5]
	mov	r0, #0x80
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldrb	r0, [r4, #0x4]
	strb	r0, [r2, #0x4]
	mov	r0, r9
	strb	r0, [r2, #0x7]
	mov	r0, #0x21
	bl	SetPlayerAvatarStateMask
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L453:
	.align	2, 0
.L452:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe115:
	.size	 InitPlayerAvatar,.Lfe115-InitPlayerAvatar
	.align	2, 0
	.globl	SetPlayerInvisibility
	.type	 SetPlayerInvisibility,function
	.thumb_func
SetPlayerInvisibility:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L456
	ldr	r5, .L456+0x4
	ldrb	r0, [r5, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	mov	r0, #0x1
	and	r4, r4, r0
	lsl	r3, r4, #0x5
	ldrb	r2, [r1, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L455	@cond_branch
	ldr	r2, .L456+0x8
	ldrb	r1, [r5, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0, #0x1a]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x3e
	lsl	r3, r4, #0x2
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1]
.L455:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L457:
	.align	2, 0
.L456:
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	gSprites
.Lfe116:
	.size	 SetPlayerInvisibility,.Lfe116-SetPlayerInvisibility
	.align	2, 0
	.globl	SetPlayerAvatarFieldMove
	.type	 SetPlayerAvatarFieldMove,function
	.thumb_func
SetPlayerAvatarFieldMove:
	push	{r4, r5, lr}
	ldr	r5, .L459
	ldrb	r0, [r5, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L459+0x4
	add	r4, r4, r0
	mov	r0, #0x5
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L459+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L460:
	.align	2, 0
.L459:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe117:
	.size	 SetPlayerAvatarFieldMove,.Lfe117-SetPlayerAvatarFieldMove
	.align	2, 0
	.type	 SetPlayerAvatarFishing,function
	.thumb_func
SetPlayerAvatarFishing:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L462
	ldrb	r0, [r6, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L462+0x4
	add	r4, r4, r0
	mov	r0, #0x6
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L462+0x8
	add	r4, r4, r0
	add	r0, r5, #0
	bl	GetFishingDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L463:
	.align	2, 0
.L462:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe118:
	.size	 SetPlayerAvatarFishing,.Lfe118-SetPlayerAvatarFishing
	.align	2, 0
	.globl	PlayerUseAcroBikeOnBumpySlope
	.type	 PlayerUseAcroBikeOnBumpySlope,function
	.thumb_func
PlayerUseAcroBikeOnBumpySlope:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L465
	ldrb	r0, [r6, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L465+0x4
	add	r4, r4, r0
	mov	r0, #0x2
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L465+0x8
	mov	r8, r0
	add	r4, r4, r8
	add	r0, r5, #0
	bl	GetAcroWheelieDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	ldrb	r1, [r6, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, #0x1
	bl	SeekSpriteAnim
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L466:
	.align	2, 0
.L465:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe119:
	.size	 PlayerUseAcroBikeOnBumpySlope,.Lfe119-PlayerUseAcroBikeOnBumpySlope
	.align	2, 0
	.globl	SetPlayerAvatarWatering
	.type	 SetPlayerAvatarWatering,function
	.thumb_func
SetPlayerAvatarWatering:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L468
	ldrb	r0, [r6, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L468+0x4
	add	r4, r4, r0
	mov	r0, #0x7
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L468+0x8
	add	r4, r4, r0
	add	r0, r5, #0
	bl	GetFaceDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L469:
	.align	2, 0
.L468:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe120:
	.size	 SetPlayerAvatarWatering,.Lfe120-SetPlayerAvatarWatering
	.align	2, 0
	.type	 sub_808C280,function
	.thumb_func
sub_808C280:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrb	r0, [r5, #0x1e]
	mov	r8, r0
	mov	r1, #0x0
	mov	r0, sp
	strh	r1, [r0]
	mov	r6, #0x1
	ldr	r1, .L477
	mov	r9, r1
	mov	r4, sp
	mov	r7, sp
	add	r7, r7, #0x2
.L474:
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldr	r1, [r0]
	mov	r0, r8
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L473	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	cmp	r6, r0
	bne	.L473	@cond_branch
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4]
	ldrh	r0, [r5, #0x12]
	strh	r0, [r7]
	add	r0, r6, #0
	mov	r1, sp
	add	r2, r7, #0
	bl	MoveCoords
	ldrb	r0, [r5, #0x1b]
	mov	r1, #0x0
	ldrsh	r2, [r4, r1]
	mov	r1, #0x0
	ldrsh	r3, [r7, r1]
	add	r1, r6, #0
	bl	ShowWarpArrowSprite
	b	.L470
.L478:
	.align	2, 0
.L477:
	.word	sArrowWarpMetatileBehaviorChecks2
.L473:
	ldrh	r1, [r4]
	add	r1, r1, #0x1
	strh	r1, [r4]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x3
	ble	.L474	@cond_branch
	ldrb	r0, [r5, #0x1b]
	bl	SetSpriteInvisible
.L470:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe121:
	.size	 sub_808C280,.Lfe121-sub_808C280
	.align	2, 0
	.type	 StartStrengthAnim,function
	.thumb_func
StartStrengthAnim:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L480
	add	r0, r6, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L480+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0xc]
	bl	_call_via_r6
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L481:
	.align	2, 0
.L480:
	.word	Task_PushBoulder
	.word	gTasks
.Lfe122:
	.size	 StartStrengthAnim,.Lfe122-StartStrengthAnim
	.align	2, 0
	.type	 Task_PushBoulder,function
	.thumb_func
Task_PushBoulder:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r6, .L487
	ldr	r2, .L487+0x4
	ldr	r5, .L487+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L483:
	mov	r0, #0x8
	ldrsh	r3, [r4, r0]
	lsl	r3, r3, #0x2
	add	r3, r3, r6
	ldr	r0, .L487+0xc
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r3, [r3]
	add	r0, r4, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L483	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L488:
	.align	2, 0
.L487:
	.word	sPushBoulderFuncs
	.word	gTasks
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe123:
	.size	 Task_PushBoulder,.Lfe123-Task_PushBoulder
	.align	2, 0
	.type	 PushBoulder_Start,function
	.thumb_func
PushBoulder_Start:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ScriptContext2_Enable
	ldr	r1, .L490
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L491:
	.align	2, 0
.L490:
	.word	gPlayerAvatar
.Lfe124:
	.size	 PushBoulder_Start,.Lfe124-PushBoulder_Start
	.align	2, 0
	.type	 PushBoulder_Move,function
	.thumb_func
PushBoulder_Move:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r5, #0
	bl	ObjectEventIsHeldMovementActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L493	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
.L493:
	add	r0, r4, #0
	bl	ObjectEventIsHeldMovementActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L494	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
.L494:
	add	r0, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L495	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L495	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	ldrb	r0, [r6, #0xc]
	bl	GetWalkInPlaceNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventSetHeldMovement
	ldrb	r0, [r6, #0xc]
	bl	GetWalkSlowMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldr	r2, .L496
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	str	r0, [r2]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	str	r0, [r2, #0x4]
	ldrb	r0, [r4, #0xb]
	lsr	r0, r0, #0x4
	str	r0, [r2, #0x8]
	ldr	r3, .L496+0x4
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	str	r0, [r2, #0xc]
	mov	r0, #0xa
	bl	FieldEffectStart
	mov	r0, #0xd6
	bl	PlaySE
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L495:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L497:
	.align	2, 0
.L496:
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe125:
	.size	 PushBoulder_Move,.Lfe125-PushBoulder_Move
	.align	2, 0
	.type	 PushBoulder_End,function
	.thumb_func
PushBoulder_End:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	add	r0, r4, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L499	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L499	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	ldr	r1, .L500
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	ScriptContext2_Disable
	ldr	r0, .L500+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L499:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L501:
	.align	2, 0
.L500:
	.word	gPlayerAvatar
	.word	Task_PushBoulder
.Lfe126:
	.size	 PushBoulder_End,.Lfe126-PushBoulder_End
	.align	2, 0
	.type	 DoPlayerMatJump,function
	.thumb_func
DoPlayerMatJump:
	push	{r4, lr}
	ldr	r4, .L503
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	DoPlayerAvatarSecretBaseMatJump
.Lfe127:
	.size	 DoPlayerMatJump,.Lfe127-DoPlayerMatJump
	.align	2, 0
	.type	 DoPlayerAvatarSecretBaseMatJump,function
	.thumb_func
DoPlayerAvatarSecretBaseMatJump:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L510
	ldr	r2, .L510+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L506:
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r0, .L510+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L510+0xc
	add	r1, r1, r0
	ldr	r2, [r2]
	add	r0, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L506	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L511:
	.align	2, 0
.L510:
	.word	sPlayerAvatarSecretBaseMatJump
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe128:
	.size	 DoPlayerAvatarSecretBaseMatJump,.Lfe128-DoPlayerAvatarSecretBaseMatJump
	.align	2, 0
	.type	 PlayerAvatar_DoSecretBaseMatJump,function
	.thumb_func
PlayerAvatar_DoSecretBaseMatJump:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	ldr	r5, .L515
	mov	r0, #0x1
	strb	r0, [r5, #0x6]
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L513	@cond_branch
	mov	r0, #0xa
	bl	PlaySE
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetJumpInPlaceMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r6, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r6, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L513	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5, #0x6]
	ldrb	r0, [r5, #0x1]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	ldr	r0, .L515+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L513:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L516:
	.align	2, 0
.L515:
	.word	gPlayerAvatar
	.word	DoPlayerAvatarSecretBaseMatJump
.Lfe129:
	.size	 PlayerAvatar_DoSecretBaseMatJump,.Lfe129-PlayerAvatar_DoSecretBaseMatJump
	.align	2, 0
	.type	 DoPlayerMatSpin,function
	.thumb_func
DoPlayerMatSpin:
	push	{r4, lr}
	ldr	r4, .L518
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L519:
	.align	2, 0
.L518:
	.word	PlayerAvatar_DoSecretBaseMatSpin
.Lfe130:
	.size	 DoPlayerMatSpin,.Lfe130-DoPlayerMatSpin
	.align	2, 0
	.type	 PlayerAvatar_DoSecretBaseMatSpin,function
	.thumb_func
PlayerAvatar_DoSecretBaseMatSpin:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L525
	ldr	r2, .L525+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L521:
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r0, .L525+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L525+0xc
	add	r1, r1, r0
	ldr	r2, [r2]
	add	r0, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L521	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L526:
	.align	2, 0
.L525:
	.word	sPlayerAvatarSecretBaseMatSpin
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe131:
	.size	 PlayerAvatar_DoSecretBaseMatSpin,.Lfe131-PlayerAvatar_DoSecretBaseMatSpin
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep0,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep0:
	push	{lr}
	ldrh	r2, [r0, #0x8]
	add	r2, r2, #0x1
	strh	r2, [r0, #0x8]
	ldrb	r1, [r1, #0x18]
	lsr	r1, r1, #0x4
	strh	r1, [r0, #0xa]
	ldr	r1, .L528
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	bl	ScriptContext2_Enable
	mov	r0, #0x2d
	bl	PlaySE
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L529:
	.align	2, 0
.L528:
	.word	gPlayerAvatar
.Lfe132:
	.size	 PlayerAvatar_SecretBaseMatSpinStep0,.Lfe132-PlayerAvatar_SecretBaseMatSpinStep0
	.section .rodata
.LC225:
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x1
.text
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep1,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep1:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r1, .L534
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L531	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	sub	r0, r0, #0x1
	add	r0, r0, sp
	ldrb	r6, [r0]
	add	r0, r6, #0
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventSetHeldMovement
	ldrb	r0, [r4, #0xa]
	cmp	r6, r0
	bne	.L532	@cond_branch
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
.L532:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	ble	.L531	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	bne	.L531	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L531:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L535:
	.align	2, 0
.L534:
	.word	.LC225
.Lfe133:
	.size	 PlayerAvatar_SecretBaseMatSpinStep1,.Lfe133-PlayerAvatar_SecretBaseMatSpinStep1
	.section .rodata
.LC227:
	.byte	0x10
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x13
.text
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep2,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep2:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L538
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L537	@cond_branch
	mov	r1, #0xc
	ldrsh	r0, [r5, r1]
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
.L537:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L539:
	.align	2, 0
.L538:
	.word	.LC227
.Lfe134:
	.size	 PlayerAvatar_SecretBaseMatSpinStep2,.Lfe134-PlayerAvatar_SecretBaseMatSpinStep2
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep3,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep3:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L541	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkSlowMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventSetHeldMovement
	bl	ScriptContext2_Disable
	ldr	r1, .L542
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	ldr	r0, .L542+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L541:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L543:
	.align	2, 0
.L542:
	.word	gPlayerAvatar
	.word	PlayerAvatar_DoSecretBaseMatSpin
.Lfe135:
	.size	 PlayerAvatar_SecretBaseMatSpinStep3,.Lfe135-PlayerAvatar_SecretBaseMatSpinStep3
	.align	2, 0
	.type	 CreateStopSurfingTask,function
	.thumb_func
CreateStopSurfingTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	bl	Overworld_ClearSavedMusic
	bl	Overworld_ChangeMusicToDefault
	ldr	r2, .L545
	ldrb	r1, [r2]
	mov	r0, #0xf7
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x1
	strb	r0, [r2, #0x6]
	ldr	r5, .L545+0x4
	add	r0, r5, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L545+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	bl	_call_via_r5
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L546:
	.align	2, 0
.L545:
	.word	gPlayerAvatar
	.word	Task_StopSurfingInit
	.word	gTasks
.Lfe136:
	.size	 CreateStopSurfingTask,.Lfe136-CreateStopSurfingTask
	.align	2, 0
	.type	 Task_StopSurfingInit,function
	.thumb_func
Task_StopSurfingInit:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L550
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L550+0x4
	add	r5, r1, r0
	add	r0, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L548	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L547	@cond_branch
.L548:
	ldrb	r0, [r5, #0x1a]
	mov	r1, #0x2
	bl	SetSurfBobState
	ldr	r0, .L550+0x8
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x8]
	bl	GetJumpSpecialMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventSetHeldMovement
	ldr	r0, .L550+0xc
	str	r0, [r4]
.L547:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L551:
	.align	2, 0
.L550:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gTasks
	.word	Task_WaitStopSurfing
.Lfe137:
	.size	 Task_StopSurfingInit,.Lfe137-Task_StopSurfingInit
	.align	2, 0
	.type	 Task_WaitStopSurfing,function
	.thumb_func
Task_WaitStopSurfing:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L554
	ldrb	r0, [r5, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L554+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L553	@cond_branch
	mov	r0, #0x0
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x0
	strb	r0, [r5, #0x6]
	bl	ScriptContext2_Disable
	ldrb	r1, [r4, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L554+0x8
	add	r0, r0, r1
	bl	DestroySprite
	ldrb	r0, [r4]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r0, r6, #0
	bl	DestroyTask
.L553:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L555:
	.align	2, 0
.L554:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe138:
	.size	 Task_WaitStopSurfing,.Lfe138-Task_WaitStopSurfing
	.section .rodata
	.align	2, 0
	.type	 sFishingStateFuncs,object
sFishingStateFuncs:
	.word	Fishing_Init
	.word	Fishing_GetRodOut
	.word	Fishing_WaitBeforeDots
	.word	Fishing_InitDots
	.word	Fishing_ShowDots
	.word	Fishing_CheckForBite
	.word	Fishing_MonOnHook
	.word	Fishing_StartEncounter
	.word	Fishing_NotEvenNibble
	.word	Fishing_NoMon
	.word	Fishing_PutRodAway
	.word	Fishing_EndNoMon
	.size	 sFishingStateFuncs,48
.text
	.align	2, 0
	.globl	StartFishing
	.type	 StartFishing,function
	.thumb_func
StartFishing:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L557
	add	r0, r5, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L557+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x26]
	bl	_call_via_r5
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L558:
	.align	2, 0
.L557:
	.word	Task_Fishing
	.word	gTasks
.Lfe139:
	.size	 StartFishing,.Lfe139-StartFishing
	.align	2, 0
	.type	 Task_Fishing,function
	.thumb_func
Task_Fishing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L564
	ldr	r2, .L564+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L560:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L560	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L565:
	.align	2, 0
.L564:
	.word	sFishingStateFuncs
	.word	gTasks
.Lfe140:
	.size	 Task_Fishing,.Lfe140-Task_Fishing
	.align	2, 0
	.type	 Fishing_Init,function
	.thumb_func
Fishing_Init:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ScriptContext2_Enable
	ldr	r1, .L567
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L568:
	.align	2, 0
.L567:
	.word	gPlayerAvatar
.Lfe141:
	.size	 Fishing_Init,.Lfe141-Fishing_Init
	.align	2, 0
	.type	 Fishing_GetRodOut,function
	.thumb_func
Fishing_GetRodOut:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r3, .L570
	ldr	r0, .L570+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r2, r1, #0x19
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	strh	r0, [r5, #0x24]
	add	r1, r2, #0
	lsl	r4, r1, #0x3
	add	r4, r4, r1
	lsl	r4, r4, #0x2
	add	r4, r4, r3
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfActive
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x8
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	SetPlayerAvatarFishing
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L571:
	.align	2, 0
.L570:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe142:
	.size	 Fishing_GetRodOut,.Lfe142-Fishing_GetRodOut
	.align	2, 0
	.type	 Fishing_WaitBeforeDots,function
	.thumb_func
Fishing_WaitBeforeDots:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3b
	ble	.L573	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L573:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe143:
	.size	 Fishing_WaitBeforeDots,.Lfe143-Fishing_WaitBeforeDots
	.align	2, 0
	.type	 Fishing_InitDots,function
	.thumb_func
Fishing_InitDots:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_819786C
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x8]
	strh	r1, [r4, #0xa]
	strh	r1, [r4, #0xc]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe144:
	.size	 Fishing_InitDots,.Lfe144-Fishing_InitDots
	.section .rodata
.LC255:
	.byte	0xaf
	.byte	0xff
.text
	.align	2, 0
	.type	 Fishing_ShowDots,function
	.thumb_func
Fishing_ShowDots:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	ldr	r1, .L579
	add	r0, sp, #0xc
	mov	r2, #0x2
	bl	memcpy
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x13
	ble	.L576	@cond_branch
	strh	r2, [r4, #0xa]
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	mov	r3, #0xe
	ldrsh	r0, [r4, r3]
	cmp	r1, r0
	blt	.L577	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L576
.L580:
	.align	2, 0
.L579:
	.word	.LC255
.L577:
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	lsl	r3, r0, #0x1
	add	r3, r3, r0
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	str	r2, [sp, #0x4]
	str	r2, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
.L576:
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe145:
	.size	 Fishing_ShowDots,.Lfe145-Fishing_ShowDots
	.align	2, 0
	.type	 Fishing_CheckForBite,function
	.thumb_func
Fishing_CheckForBite:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r6, #0x0
	bl	DoesCurrentMapHaveFishingMons
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L582	@cond_branch
	mov	r0, #0x8
	strh	r0, [r5, #0x8]
	b	.L583
.L582:
	ldr	r4, .L592
	add	r0, r4, #0
	mov	r1, #0x6
	bl	GetMonData
	cmp	r0, #0
	bne	.L584	@cond_branch
	add	r0, r4, #0
	bl	GetMonAbility
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x15
	beq	.L586	@cond_branch
	cmp	r0, #0x3c
	bne	.L584	@cond_branch
.L586:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xe
	bls	.L584	@cond_branch
	mov	r6, #0x1
.L584:
	cmp	r6, #0
	bne	.L588	@cond_branch
	bl	Random
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L589	@cond_branch
	mov	r0, #0x8
	strh	r0, [r5, #0x8]
	b	.L588
.L593:
	.align	2, 0
.L592:
	.word	gPlayerParty
.L589:
	mov	r6, #0x1
.L588:
	cmp	r6, #0x1
	bne	.L583	@cond_branch
	ldr	r0, .L594
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L594+0x4
	add	r4, r4, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFishingBiteDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
.L583:
	mov	r0, #0x1
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L595:
	.align	2, 0
.L594:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe146:
	.size	 Fishing_CheckForBite,.Lfe146-Fishing_CheckForBite
	.align	2, 0
	.type	 Fishing_MonOnHook,function
	.thumb_func
Fishing_MonOnHook:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	bl	AlignFishingAnimationFrames
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L597
	mov	r5, #0x0
	str	r5, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized2
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	strh	r5, [r4, #0xa]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L598:
	.align	2, 0
.L597:
	.word	gText_PokemonOnHook
.Lfe147:
	.size	 Fishing_MonOnHook,.Lfe147-Fishing_MonOnHook
	.align	2, 0
	.type	 Fishing_StartEncounter,function
	.thumb_func
Fishing_StartEncounter:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L600	@cond_branch
	bl	AlignFishingAnimationFrames
.L600:
	bl	RunTextPrinters
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L606	@cond_branch
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0
	bne	.L601	@cond_branch
	ldr	r7, .L607
	ldrb	r0, [r7, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L607+0x4
	mov	r8, r0
	add	r4, r4, r8
	ldrh	r1, [r5, #0x24]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	ldrb	r1, [r7]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L603	@cond_branch
	ldrb	r0, [r7, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r0, [r1, #0x1a]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetSurfBobWhileFishingState
.L603:
	ldr	r2, .L607+0x8
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r6, [r0, #0x24]
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r6, [r0, #0x26]
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	ldrh	r0, [r5, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xa]
	b	.L604
.L608:
	.align	2, 0
.L607:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.L601:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L604	@cond_branch
.L606:
	ldr	r1, .L609
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	ScriptContext2_Disable
	ldrh	r0, [r5, #0x26]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	FishingWildEncounter
	ldr	r0, .L609+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L604:
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L610:
	.align	2, 0
.L609:
	.word	gPlayerAvatar
	.word	Task_Fishing
.Lfe148:
	.size	 Fishing_StartEncounter,.Lfe148-Fishing_StartEncounter
	.align	2, 0
	.type	 Fishing_NotEvenNibble,function
	.thumb_func
Fishing_NotEvenNibble:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	bl	AlignFishingAnimationFrames
	ldr	r0, .L612
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L612+0x4
	add	r4, r4, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFishingNoCatchDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L612+0x8
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized2
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L613:
	.align	2, 0
.L612:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gText_NotEvenANibble
.Lfe149:
	.size	 Fishing_NotEvenNibble,.Lfe149-Fishing_NotEvenNibble
	.align	2, 0
	.type	 Fishing_NoMon,function
	.thumb_func
Fishing_NoMon:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe150:
	.size	 Fishing_NoMon,.Lfe150-Fishing_NoMon
	.align	2, 0
	.type	 Fishing_PutRodAway,function
	.thumb_func
Fishing_PutRodAway:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	AlignFishingAnimationFrames
	ldr	r7, .L618
	ldr	r5, .L618+0x4
	ldrb	r0, [r5, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x3f
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1b
	cmp	r0, #0
	bge	.L616	@cond_branch
	ldrb	r0, [r5, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L618+0x8
	mov	r8, r0
	add	r4, r4, r8
	ldrh	r1, [r6, #0x24]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	ldrb	r1, [r5]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L617	@cond_branch
	ldrb	r0, [r5, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r0, [r1, #0x1a]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetSurfBobWhileFishingState
.L617:
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	mov	r2, #0x0
	strh	r2, [r0, #0x24]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	strh	r2, [r0, #0x26]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L616:
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L619:
	.align	2, 0
.L618:
	.word	gSprites
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe151:
	.size	 Fishing_PutRodAway,.Lfe151-Fishing_PutRodAway
	.align	2, 0
	.type	 Fishing_EndNoMon,function
	.thumb_func
Fishing_EndNoMon:
	push	{lr}
	bl	RunTextPrinters
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	bne	.L621	@cond_branch
	ldr	r0, .L622
	strb	r1, [r0, #0x6]
	bl	ScriptContext2_Disable
	bl	UnfreezeObjectEvents
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	ldr	r0, .L622+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L621:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L623:
	.align	2, 0
.L622:
	.word	gPlayerAvatar
	.word	Task_Fishing
.Lfe152:
	.size	 Fishing_EndNoMon,.Lfe152-Fishing_EndNoMon
	.align	2, 0
	.type	 AlignFishingAnimationFrames,function
	.thumb_func
AlignFishingAnimationFrames:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L634
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L634+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	AnimateSprite
	mov	r0, #0x0
	strh	r0, [r4, #0x24]
	strh	r0, [r4, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r5, [r0]
	mov	r0, #0x2a
	add	r0, r0, r4
	mov	ip, r0
	ldrb	r0, [r0]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	lsl	r6, r5, #0x2
	add	r0, r6, r0
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r7, #0x1
	neg	r7, r7
	cmp	r0, r7
	beq	.L633	@cond_branch
	add	r3, r4, #0
	add	r3, r3, #0x2c
	ldrb	r2, [r3]
	lsl	r1, r2, #0x1a
	lsr	r1, r1, #0x1a
	add	r1, r1, #0x1
	mov	r0, #0x3f
	and	r1, r1, r0
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r1, ip
	ldrb	r0, [r1]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	add	r0, r6, r0
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, r7
	bne	.L626	@cond_branch
.L633:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L626:
	add	r0, r4, #0
	add	r0, r0, #0x2a
	ldrb	r0, [r0]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrb	r5, [r0]
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L628	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x24]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L628	@cond_branch
	ldr	r0, .L634+0x8
	strh	r0, [r4, #0x24]
.L628:
	cmp	r5, #0x5
	bne	.L630	@cond_branch
	ldr	r0, .L634+0x8
	strh	r0, [r4, #0x26]
.L630:
	add	r0, r5, #0
	sub	r0, r0, #0xa
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L631	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x26]
.L631:
	ldr	r3, .L634
	ldrb	r1, [r3]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L632	@cond_branch
	ldr	r2, .L634+0xc
	ldrb	r1, [r3, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1a]
	mov	r1, #0x26
	ldrsh	r2, [r4, r1]
	mov	r1, #0x1
	bl	SetSurfBobWhileFishingState
.L632:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L635:
	.align	2, 0
.L634:
	.word	gPlayerAvatar
	.word	gSprites
	.word	0xfff8
	.word	gObjectEvents
.Lfe153:
	.size	 AlignFishingAnimationFrames,.Lfe153-AlignFishingAnimationFrames
	.align	2, 0
	.globl	sub_808D074
	.type	 sub_808D074,function
	.thumb_func
sub_808D074:
	ldr	r1, .L637
	strb	r0, [r1]
	bx	lr
.L638:
	.align	2, 0
.L637:
	.word	gUnknown_0203734C
.Lfe154:
	.size	 sub_808D074,.Lfe154-sub_808D074
	.align	2, 0
	.type	 sub_808D080,function
	.thumb_func
sub_808D080:
	push	{lr}
	ldr	r1, .L642
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L641	@cond_branch
	mov	r0, #0x1
.L641:
	pop	{r1}
	bx	r1
.L643:
	.align	2, 0
.L642:
	.word	gUnknown_0203734C
.Lfe155:
	.size	 sub_808D080,.Lfe155-sub_808D080
	.align	2, 0
	.type	 sub_808D094,function
	.thumb_func
sub_808D094:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	ldr	r0, .L654
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L654+0x4
	add	r4, r1, r0
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L654+0x8
	add	r7, r0, r1
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L654+0xc
	add	r5, r0, r1
	mov	r0, #0x0
	ldrsh	r6, [r5, r0]
	cmp	r6, #0x1
	beq	.L648	@cond_branch
	cmp	r6, #0x1
	bgt	.L653	@cond_branch
	cmp	r6, #0
	beq	.L646	@cond_branch
	b	.L644
.L655:
	.align	2, 0
.L654:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	gTasks+0x8
.L653:
	cmp	r6, #0x2
	beq	.L650	@cond_branch
	b	.L644
.L646:
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L644	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	sub_808D074
	mov	r1, #0x0
	mov	r8, r1
	strh	r6, [r5, #0x2]
	mov	r0, #0x1
	strh	r0, [r5, #0x4]
	ldrh	r0, [r7, #0x26]
	ldrh	r2, [r7, #0x22]
	add	r0, r0, r2
	lsl	r0, r0, #0x4
	strh	r0, [r5, #0x6]
	strh	r6, [r7, #0x26]
	bl	CameraObjectReset2
	ldrb	r0, [r4, #0x3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r4, #0x3]
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r7, #0x5]
	add	r0, r7, #0
	add	r0, r0, #0x43
	mov	r1, r8
	strb	r1, [r0]
	add	r2, r7, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L648:
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	sub_808D38C
	ldrh	r0, [r5, #0x6]
	ldrh	r1, [r5, #0x4]
	sub	r0, r0, r1
	strh	r0, [r5, #0x6]
	add	r1, r1, #0x3
	strh	r1, [r5, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x14
	strh	r0, [r7, #0x22]
	mov	r2, #0x22
	ldrsh	r1, [r7, r2]
	ldr	r0, .L656
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	add	r1, r1, r0
	mov	r0, #0x20
	neg	r0, r0
	cmp	r1, r0
	bge	.L644	@cond_branch
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L644
.L657:
	.align	2, 0
.L656:
	.word	gTotalCameraPixelOffsetY
.L650:
	add	r0, r2, #0
	bl	DestroyTask
.L644:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe156:
	.size	 sub_808D094,.Lfe156-sub_808D094
	.align	2, 0
	.globl	sub_808D194
	.type	 sub_808D194,function
	.thumb_func
sub_808D194:
	push	{r4, lr}
	ldr	r4, .L659
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L660:
	.align	2, 0
.L659:
	.word	sub_808D1FC
.Lfe157:
	.size	 sub_808D194,.Lfe157-sub_808D194
	.align	2, 0
	.globl	sub_808D1B4
	.type	 sub_808D1B4,function
	.thumb_func
sub_808D1B4:
	push	{lr}
	ldr	r0, .L662
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L663:
	.align	2, 0
.L662:
	.word	sub_808D1FC
.Lfe158:
	.size	 sub_808D1B4,.Lfe158-sub_808D1B4
	.align	2, 0
	.globl	sub_808D1C8
	.type	 sub_808D1C8,function
	.thumb_func
sub_808D1C8:
	push	{r4, lr}
	ldr	r4, .L665
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L666:
	.align	2, 0
.L665:
	.word	sub_808D094
.Lfe159:
	.size	 sub_808D1C8,.Lfe159-sub_808D1C8
	.align	2, 0
	.globl	sub_808D1E8
	.type	 sub_808D1E8,function
	.thumb_func
sub_808D1E8:
	push	{lr}
	ldr	r0, .L668
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L669:
	.align	2, 0
.L668:
	.word	sub_808D094
.Lfe160:
	.size	 sub_808D1E8,.Lfe160-sub_808D1E8
	.section .rodata
	.type	 gUnknown_084975BC,object
gUnknown_084975BC:
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.size	 gUnknown_084975BC,5
.text
	.align	2, 0
	.type	 sub_808D1FC,function
	.thumb_func
sub_808D1FC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L684
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L684+0x4
	add	r4, r1, r0
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L684+0x8
	add	r7, r0, r1
	mov	r1, r8
	lsl	r0, r1, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	ldr	r1, .L684+0xc
	add	r5, r0, r1
	mov	r2, #0x0
	ldrsh	r6, [r5, r2]
	cmp	r6, #0x1
	beq	.L673	@cond_branch
	cmp	r6, #0x1
	bgt	.L682	@cond_branch
	cmp	r6, #0
	beq	.L672	@cond_branch
	b	.L671
.L685:
	.align	2, 0
.L684:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	gTasks+0x8
.L682:
	cmp	r6, #0x2
	beq	.L676	@cond_branch
	cmp	r6, #0x3
	beq	.L678	@cond_branch
	b	.L671
.L672:
	bl	sub_808D080
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	ldr	r1, .L686
	mov	r3, #0xa
	ldrsh	r0, [r5, r3]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventForceSetHeldMovement
	mov	r0, #0x0
	mov	r9, r0
	strh	r6, [r5, #0x2]
	mov	r0, #0x74
	strh	r0, [r5, #0x4]
	ldrh	r0, [r7, #0x22]
	strh	r0, [r5, #0x8]
	ldrb	r0, [r7, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	strh	r0, [r5, #0xc]
	mov	r1, #0x43
	add	r1, r1, r7
	mov	r8, r1
	ldrb	r0, [r1]
	strh	r0, [r5, #0xe]
	ldrh	r0, [r7, #0x26]
	add	r0, r0, #0x20
	neg	r0, r0
	lsl	r0, r0, #0x4
	strh	r0, [r5, #0x6]
	strh	r6, [r7, #0x26]
	bl	CameraObjectReset2
	ldrb	r0, [r4, #0x3]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r4, #0x3]
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r7, #0x5]
	mov	r3, r9
	mov	r2, r8
	strb	r3, [r2]
	add	r2, r7, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L673:
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	sub_808D38C
	ldrh	r0, [r5, #0x4]
	ldrh	r2, [r5, #0x6]
	add	r1, r0, r2
	strh	r1, [r5, #0x6]
	sub	r0, r0, #0x3
	strh	r0, [r5, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bgt	.L674	@cond_branch
	mov	r0, #0x4
	strh	r0, [r5, #0x4]
.L674:
	ldrh	r0, [r5, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x14
	strh	r0, [r7, #0x22]
	ldrh	r2, [r5, #0x8]
	mov	r3, #0x8
	ldrsh	r1, [r5, r3]
	cmp	r0, r1
	blt	.L671	@cond_branch
	strh	r2, [r7, #0x22]
	mov	r0, #0x0
	strh	r0, [r5, #0x10]
	b	.L683
.L687:
	.align	2, 0
.L686:
	.word	gUnknown_084975BC
.L676:
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	sub_808D38C
	ldrh	r0, [r5, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L671	@cond_branch
.L683:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L671
.L678:
	mov	r0, #0xa
	ldrsh	r6, [r5, r0]
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	sub_808D38C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	bne	.L671	@cond_branch
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x3]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r7, #0x5]
	ldrh	r1, [r5, #0xe]
	add	r0, r7, #0
	add	r0, r0, #0x43
	strb	r1, [r0]
	bl	CameraObjectReset1
	mov	r0, r8
	bl	DestroyTask
.L671:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe161:
	.size	 sub_808D1FC,.Lfe161-sub_808D1FC
	.align	2, 0
	.type	 sub_808D38C,function
	.thumb_func
sub_808D38C:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldrh	r1, [r6]
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp	r0, #0x7
	bgt	.L689	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L690	@cond_branch
.L689:
	add	r0, r5, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L690	@cond_branch
	ldr	r4, .L694
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventForceSetHeldMovement
	mov	r0, #0x0
	strh	r0, [r6]
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, r4
	ldrb	r0, [r0]
	b	.L693
.L695:
	.align	2, 0
.L694:
	.word	gUnknown_084975BC
.L690:
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
.L693:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe162:
	.size	 sub_808D38C,.Lfe162-sub_808D38C
.text
	.align	2, 0

