@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	s_mevent_client_ptr
	.section ewram_data,"aw"
	.align	2, 0
	.type	 s_mevent_client_ptr,object
	.size	 s_mevent_client_ptr,4
s_mevent_client_ptr:
	.word	0x0
.text
	.align	2, 0
	.globl	mevent_client_do_init
	.type	 mevent_client_do_init,function
	.thumb_func
mevent_client_do_init:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L3
	mov	r0, #0x50
	bl	AllocZeroed
	str	r0, [r4]
	mov	r1, #0x1
	mov	r2, #0x0
	bl	mevent_client_init
	ldr	r0, [r4]
	str	r5, [r0, #0x4c]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	s_mevent_client_ptr
.Lfe1:
	.size	 mevent_client_do_init,.Lfe1-mevent_client_do_init
	.align	2, 0
	.globl	mevent_client_do_exec
	.type	 mevent_client_do_exec,function
	.thumb_func
mevent_client_do_exec:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r4, .L9
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L6	@cond_branch
	mov	r0, #0x6
	b	.L8
.L10:
	.align	2, 0
.L9:
	.word	s_mevent_client_ptr
.L6:
	bl	mevent_client_exec
	add	r5, r0, #0
	cmp	r5, #0x6
	bne	.L7	@cond_branch
	ldr	r0, [r4]
	ldr	r1, [r0, #0x4]
	strh	r1, [r6]
	bl	mevent_client_free_resources
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L7:
	add	r0, r5, #0
.L8:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 mevent_client_do_exec,.Lfe2-mevent_client_do_exec
	.align	2, 0
	.globl	mevent_client_inc_flag
	.type	 mevent_client_inc_flag,function
	.thumb_func
mevent_client_inc_flag:
	ldr	r0, .L12
	ldr	r1, [r0]
	ldr	r0, [r1, #0xc]
	add	r0, r0, #0x1
	str	r0, [r1, #0xc]
	bx	lr
.L13:
	.align	2, 0
.L12:
	.word	s_mevent_client_ptr
.Lfe3:
	.size	 mevent_client_inc_flag,.Lfe3-mevent_client_inc_flag
	.align	2, 0
	.globl	mevent_client_get_buffer
	.type	 mevent_client_get_buffer,function
	.thumb_func
mevent_client_get_buffer:
	ldr	r0, .L15
	ldr	r0, [r0]
	ldr	r0, [r0, #0x20]
	bx	lr
.L16:
	.align	2, 0
.L15:
	.word	s_mevent_client_ptr
.Lfe4:
	.size	 mevent_client_get_buffer,.Lfe4-mevent_client_get_buffer
	.align	2, 0
	.globl	mevent_client_set_param
	.type	 mevent_client_set_param,function
	.thumb_func
mevent_client_set_param:
	ldr	r1, .L18
	ldr	r1, [r1]
	str	r0, [r1, #0x4]
	bx	lr
.L19:
	.align	2, 0
.L18:
	.word	s_mevent_client_ptr
.Lfe5:
	.size	 mevent_client_set_param,.Lfe5-mevent_client_set_param
	.align	2, 0
	.type	 mevent_client_init,function
	.thumb_func
mevent_client_init:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	mov	r0, #0x0
	str	r0, [r4]
	str	r0, [r4, #0x8]
	str	r0, [r4, #0xc]
	mov	r5, #0x80
	lsl	r5, r5, #0x3
	add	r0, r5, #0
	bl	AllocZeroed
	str	r0, [r4, #0x14]
	add	r0, r5, #0
	bl	AllocZeroed
	str	r0, [r4, #0x18]
	add	r0, r5, #0
	bl	AllocZeroed
	str	r0, [r4, #0x1c]
	mov	r0, #0x40
	bl	AllocZeroed
	str	r0, [r4, #0x20]
	add	r4, r4, #0x24
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, r8
	bl	mevent_srv_sub_init
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 mevent_client_init,.Lfe6-mevent_client_init
	.align	2, 0
	.type	 mevent_client_free_resources,function
	.thumb_func
mevent_client_free_resources:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, [r4, #0x14]
	bl	Free
	ldr	r0, [r4, #0x18]
	bl	Free
	ldr	r0, [r4, #0x1c]
	bl	Free
	ldr	r0, [r4, #0x20]
	bl	Free
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 mevent_client_free_resources,.Lfe7-mevent_client_free_resources
	.align	2, 0
	.type	 mevent_client_jmp_buffer,function
	.thumb_func
mevent_client_jmp_buffer:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, [r4, #0x1c]
	ldr	r1, [r4, #0x18]
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	bl	memcpy
	mov	r0, #0x0
	str	r0, [r4, #0x10]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 mevent_client_jmp_buffer,.Lfe8-mevent_client_jmp_buffer
	.align	2, 0
	.type	 mevent_client_send_word,function
	.thumb_func
mevent_client_send_word:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r6, r1, #0
	add	r5, r2, #0
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, [r4, #0x14]
	ldr	r2, .L24
	mov	r0, sp
	bl	CpuSet
	ldr	r2, [r4, #0x14]
	str	r5, [r2]
	add	r4, r4, #0x24
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r3, #0x4
	bl	mevent_srv_sub_init_send
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	0x5000100
.Lfe9:
	.size	 mevent_client_send_word,.Lfe9-mevent_client_send_word
	.align	2, 0
	.type	 mainseq_0,function
	.thumb_func
mainseq_0:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, [r4, #0x1c]
	ldr	r1, .L27
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	bl	memcpy
	mov	r1, #0x0
	str	r1, [r4, #0x10]
	mov	r0, #0x4
	str	r0, [r4, #0x8]
	str	r1, [r4, #0xc]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L28:
	.align	2, 0
.L27:
	.word	gUnknown_082F2598
.Lfe10:
	.size	 mainseq_0,.Lfe10-mainseq_0
	.align	2, 0
	.type	 mainseq_1,function
	.thumb_func
mainseq_1:
	mov	r0, #0x6
	bx	lr
.Lfe11:
	.size	 mainseq_1,.Lfe11-mainseq_1
	.align	2, 0
	.type	 mainseq_2,function
	.thumb_func
mainseq_2:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x24
	bl	mevent_srv_sub_recv
	cmp	r0, #0
	beq	.L31	@cond_branch
	mov	r0, #0x4
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
.L31:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 mainseq_2,.Lfe12-mainseq_2
	.align	2, 0
	.type	 mainseq_3,function
	.thumb_func
mainseq_3:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x24
	bl	mevent_srv_sub_send
	cmp	r0, #0
	beq	.L33	@cond_branch
	mov	r0, #0x4
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
.L33:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 mainseq_3,.Lfe13-mainseq_3
	.align	2, 0
	.type	 mainseq_4,function
	.thumb_func
mainseq_4:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, [r4, #0x10]
	lsl	r2, r0, #0x3
	ldr	r1, [r4, #0x1c]
	add	r2, r1, r2
	add	r0, r0, #0x1
	str	r0, [r4, #0x10]
	ldr	r0, [r2]
	cmp	r0, #0x15
	bls	.LCB364
	b	.L35	@long jump
.LCB364:
	lsl	r0, r0, #0x2
	ldr	r1, .L66
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L67:
	.align	2, 0
.L66:
	.word	.L62
	.align	2, 0
	.align	2, 0
.L62:
	.word	.L35
	.word	.L37
	.word	.L38
	.word	.L39
	.word	.L46
	.word	.L47
	.word	.L42
	.word	.L44
	.word	.L51
	.word	.L54
	.word	.L53
	.word	.L48
	.word	.L49
	.word	.L50
	.word	.L52
	.word	.L57
	.word	.L58
	.word	.L59
	.word	.L60
	.word	.L41
	.word	.L40
	.word	.L61
.L37:
	ldr	r0, [r2, #0x4]
	str	r0, [r4, #0x4]
	mov	r0, #0x1
	b	.L65
.L38:
	add	r0, r4, #0
	add	r0, r0, #0x24
	ldr	r1, [r2, #0x4]
	ldr	r2, [r4, #0x18]
	bl	mevent_srv_sub_init_recv
	mov	r0, #0x2
	b	.L65
.L39:
	mov	r0, #0x3
	b	.L65
.L40:
	add	r0, r4, #0
	add	r0, r0, #0x24
	ldr	r2, [r4, #0x14]
	mov	r1, #0x14
	mov	r3, #0x0
	bl	mevent_srv_sub_init_send
	mov	r0, #0x3
	b	.L65
.L41:
	ldrb	r0, [r2, #0x4]
	bl	GetGameStat
	add	r2, r0, #0
	add	r0, r4, #0
	mov	r1, #0x12
	bl	mevent_client_send_word
	mov	r0, #0x3
	b	.L65
.L42:
	ldr	r0, [r4, #0x4]
	cmp	r0, #0
	beq	.LCB434
	b	.L35	@long jump
.LCB434:
	b	.L46
.L44:
	ldr	r0, [r4, #0x4]
	cmp	r0, #0x1
	bne	.L35	@cond_branch
.L46:
	add	r0, r4, #0
	bl	mevent_client_jmp_buffer
	b	.L35
.L47:
	ldr	r0, [r4, #0x20]
	ldr	r1, [r4, #0x18]
	mov	r2, #0x40
	bl	memcpy
	mov	r0, #0x5
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
	mov	r0, #0x2
	b	.L64
.L48:
	ldr	r0, [r4, #0x20]
	ldr	r1, [r4, #0x18]
	mov	r2, #0x40
	bl	memcpy
	mov	r0, #0x5
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
	mov	r0, #0x3
	b	.L64
.L49:
	ldr	r0, [r4, #0x20]
	ldr	r1, [r4, #0x18]
	mov	r2, #0x40
	bl	memcpy
	mov	r0, #0x5
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
	mov	r0, #0x5
	b	.L64
.L50:
	mov	r0, #0x5
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
	mov	r0, #0x4
	b	.L64
.L51:
	ldr	r0, [r4, #0x14]
	ldr	r1, [r4, #0x4c]
	bl	sub_801B580
	add	r0, r4, #0
	add	r0, r0, #0x24
	ldr	r2, [r4, #0x14]
	mov	r1, #0x11
	mov	r3, #0x64
	bl	mevent_srv_sub_init_send
	b	.L35
.L52:
	ldr	r2, [r4, #0x4]
	add	r0, r4, #0
	mov	r1, #0x13
	bl	mevent_client_send_word
	b	.L35
.L53:
	ldr	r0, [r4, #0x18]
	bl	sub_801B21C
	b	.L35
.L54:
	ldr	r0, [r4, #0x18]
	bl	sub_801B1A4
	cmp	r0, #0
	bne	.L55	@cond_branch
	ldr	r0, [r4, #0x18]
	bl	sub_801B078
	add	r0, r4, #0
	mov	r1, #0x13
	mov	r2, #0x0
	bl	mevent_client_send_word
	b	.L35
.L55:
	add	r0, r4, #0
	mov	r1, #0x13
	mov	r2, #0x1
	bl	mevent_client_send_word
	b	.L35
.L57:
	mov	r0, #0x6
	b	.L65
.L58:
	ldr	r0, [r4, #0x18]
	bl	sub_801B508
	b	.L35
.L59:
	ldr	r0, [r4, #0x18]
	mov	r1, #0xfa
	lsl	r1, r1, #0x2
	bl	InitRamScript_NoObjectEvent
	b	.L35
.L60:
	ldr	r0, .L68
	ldr	r0, [r0]
	ldr	r1, .L68+0x4
	add	r0, r0, r1
	ldr	r1, [r4, #0x18]
	mov	r2, #0xbc
	bl	memcpy
	bl	ValidateEReaderTrainer
	b	.L35
.L69:
	.align	2, 0
.L68:
	.word	gSaveBlock2Ptr
	.word	0xb74
.L61:
	ldr	r0, .L70
	ldr	r1, [r4, #0x18]
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	bl	memcpy
	mov	r0, #0x7
.L65:
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
.L35:
	mov	r0, #0x1
.L64:
	pop	{r4}
	pop	{r1}
	bx	r1
.L71:
	.align	2, 0
.L70:
	.word	gDecompressionBuffer
.Lfe14:
	.size	 mainseq_4,.Lfe14-mainseq_4
	.align	2, 0
	.type	 mainseq_5,function
	.thumb_func
mainseq_5:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, [r1, #0xc]
	cmp	r0, #0
	beq	.L73	@cond_branch
	mov	r0, #0x4
	str	r0, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [r1, #0xc]
.L73:
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 mainseq_5,.Lfe15-mainseq_5
	.align	2, 0
	.type	 mainseq_6,function
	.thumb_func
mainseq_6:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, [r4, #0xc]
	cmp	r0, #0
	beq	.L76	@cond_branch
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	b	.L75
.L76:
	ldr	r0, [r4, #0x18]
	bl	sub_8153870
	ldr	r0, [r4, #0xc]
	add	r0, r0, #0x1
	str	r0, [r4, #0xc]
	b	.L75
.L77:
	add	r0, r4, #0x4
	bl	sub_8153884
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L75	@cond_branch
	mov	r0, #0x4
	str	r0, [r4, #0x8]
	str	r1, [r4, #0xc]
.L75:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 mainseq_6,.Lfe16-mainseq_6
	.align	2, 0
	.type	 mainseq_7,function
	.thumb_func
mainseq_7:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r3, .L83
	add	r0, r4, #0x4
	ldr	r1, .L83+0x4
	ldr	r1, [r1]
	ldr	r2, .L83+0x8
	ldr	r2, [r2]
	bl	_call_via_r3
	cmp	r0, #0x1
	bne	.L82	@cond_branch
	mov	r0, #0x4
	str	r0, [r4, #0x8]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
.L82:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.L84:
	.align	2, 0
.L83:
	.word	gDecompressionBuffer
	.word	gSaveBlock2Ptr
	.word	gSaveBlock1Ptr
.Lfe17:
	.size	 mainseq_7,.Lfe17-mainseq_7
	.section .rodata
	.align	2, 0
.LC12:
	.word	mainseq_0
	.word	mainseq_1
	.word	mainseq_2
	.word	mainseq_3
	.word	mainseq_4
	.word	mainseq_5
	.word	mainseq_6
	.word	mainseq_7
.text
	.align	2, 0
	.type	 mevent_client_exec,function
	.thumb_func
mevent_client_exec:
	push	{r4, r5, lr}
	add	sp, sp, #-0x20
	mov	r2, sp
	ldr	r1, .L86
	ldmia	r1!, {r3, r4, r5}
	stmia	r2!, {r3, r4, r5}
	ldmia	r1!, {r3, r4, r5}
	stmia	r2!, {r3, r4, r5}
	ldmia	r1!, {r3, r4}
	stmia	r2!, {r3, r4}
	ldr	r1, [r0, #0x8]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	bl	_call_via_r1
	add	sp, sp, #0x20
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L87:
	.align	2, 0
.L86:
	.word	.LC12
.Lfe18:
	.size	 mevent_client_exec,.Lfe18-mevent_client_exec
.text
	.align	2, 0

