@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sSearchMonDataIds,object
sSearchMonDataIds:
	.word	0x16
	.word	0x17
	.word	0x18
	.word	0x21
	.word	0x2f
	.size	 sSearchMonDataIds,20
	.align	2, 0
	.type	 sConditionSearchLoopedTaskFuncs,object
sConditionSearchLoopedTaskFuncs:
	.word	BuildPartyMonSearchResults
	.word	InitBoxMonSearchResults
	.word	BuildBoxMonSearchResults
	.word	sub_81CF278
	.size	 sConditionSearchLoopedTaskFuncs,16
	.align	1, 0
	.type	 sConditionSearchResultFramePal,object
sConditionSearchResultFramePal:
	.short	0x300
	.short	0x72ac
	.short	0x7fff
	.short	0x3dcd
	.short	0x0
	.short	0x51eb
	.short	0x2506
	.short	0x7f78
	.short	0x6672
	.short	0x6693
	.short	0x6318
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sConditionSearchResultFramePal,32
	.align	2, 0
	.type	 sConditionSearchResultTiles,object
sConditionSearchResultTiles:
	.word	0x20010
	.word	-0x77777800
	.word	-0x66666678
	.word	0x38880099
	.word	0x69996666
	.word	-0x77ff8889
	.word	0x63777768
	.word	0xc777766
	.word	0x11117776
	.word	0x1f500310
	.word	0x66676666
	.word	0x1701500
	.word	0x1301111
	.word	0x7f03f60
	.word	-0x76f85f4f
	.word	0x1200410
	.word	0x996639
	.word	0x340af68
	.word	-0x67e1ffe9
	.word	0x67801a60
	.word	0x1b905f50
	.word	0x1f20c1
	.word	-0x6669a8fd
	.word	0x3405199
	.word	-0xf58af19
	.word	0x33003
	.word	-0x6ffe1000
	.word	-0x7cefff
	.word	0x37003f0
	.word	0x1f08750
	.word	-0x78affed0
	.word	-0x604ffc10
	.word	0x55666600
	.word	0x55633355
	.word	0x68880055
	.word	0x69995555
	.word	-0x77f3999a
	.word	0x10333338
	.word	0x554750cf
	.word	0x170cd55
	.word	0x33330311
	.word	-0x78bfe0d0
	.word	0x3e373157
	.word	0x47513399
	.word	0x3b503551
	.word	0x17033b0
	.word	-0x7cff31ab
	.word	-0x6c99fcf0
	.word	0x1cd03c00
	.word	0x100
	.size	 sConditionSearchResultTiles,200
	.align	2, 0
	.type	 sConditionSearchResultTilemap,object
sConditionSearchResultTilemap:
	.word	0x50010
	.word	-0xfeffdcf
	.word	0x11001
	.word	0x1f00110
	.word	0x1c086
	.word	-0x10000000
	.word	0x6013039
	.word	-0xff8efc1
	.word	-0xffe3fff
	.word	-0xfc00fc1
	.word	-0x1c00fff
	.word	0x3ff001f0
	.word	0x3ff001f0
	.word	0x1f03ff0
	.word	0x2e033fd0
	.word	0x1a00410
	.word	-0xfc00ffb
	.word	0x83f8001
	.word	-0x5ff6efd1
	.word	0x3ff00a01
	.word	0x3ff001f0
	.word	-0xf1dc010
	.word	0x3ff02f
	.word	0xe100d3f
	.word	-0xf0fe60
	.word	0x1f03ff0
	.word	0x3ff13ff1
	.word	0x3ff02ff0
	.word	0x3ff03ff0
	.word	-0xffe0f01
	.word	-0xffe0fc1
	.word	-0xffe0fc1
	.word	-0xfc00fc1
	.word	0x3ff0ff01
	.word	0x3ff001f0
	.word	0x3ff001f0
	.word	0x1f03ff0
	.word	-0xf00c010
	.word	-0xfc00fc5
	.word	-0xfc00fff
	.word	-0xffe0fc1
	.word	-0x70c00fc1
	.word	0x100b0140
	.word	-0x3ffe0ff4
	.word	-0xfc00fff
	.word	0x1f0fc01
	.word	0x3ff0a384
	.word	0x1f001f0
	.word	0x3fa0
	.size	 sConditionSearchResultTilemap,196
	.align	1, 0
	.type	 gUnknown_08623570,object
gUnknown_08623570:
	.short	0x300
	.short	0x72ac
	.short	0x7fff
	.short	0x3dcd
	.short	0x0
	.short	0x7f65
	.short	0x5560
	.short	0x669f
	.short	0x1072
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 gUnknown_08623570,32
	.align	2, 0
	.type	 sConditionSearchResultBgTemplates,object
	.size	 sConditionSearchResultBgTemplates,8
sConditionSearchResultBgTemplates:
	.byte	0x65
	.byte	0x20
	.byte	0x0
	.space	1
	.byte	0x7a
	.byte	0x30
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sSearchResultLoopTaskFuncs,object
sSearchResultLoopTaskFuncs:
	.word	0x0
	.word	LoopedTask_MoveSearchListCursorUp
	.word	LoopedTask_MoveSearchListCursorDown
	.word	LoopedTask_MoveSearchListPageUp
	.word	LoopedTask_MoveSearchListPageDown
	.word	LoopedTask_ExitConditionSearchMenu
	.word	LoopedTask_SelectSearchResult
	.size	 sSearchResultLoopTaskFuncs,28
	.align	2, 0
	.type	 sSearchResultListMenuWindowTemplate,object
	.size	 sSearchResultListMenuWindowTemplate,8
sSearchResultListMenuWindowTemplate:
	.byte	0x1
	.byte	0x1
	.byte	0x6
	.byte	0x7
	.byte	0x2
	.byte	0x1
	.short	0x14
	.type	 sText_MaleSymbol,object
sText_MaleSymbol:
	.byte	0xfc
	.byte	0x4
	.byte	0x5
	.byte	0x1
	.byte	0x6
	.byte	0xb5
	.byte	0xfc
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.byte	0x3
	.byte	0xff
	.size	 sText_MaleSymbol,12
	.type	 sText_FemaleSymbol,object
sText_FemaleSymbol:
	.byte	0xfc
	.byte	0x4
	.byte	0x7
	.byte	0x1
	.byte	0x8
	.byte	0xb6
	.byte	0xfc
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.byte	0x3
	.byte	0xff
	.size	 sText_FemaleSymbol,12
	.type	 sText_NoGenderSymbol,object
sText_NoGenderSymbol:
	.byte	0x77
	.byte	0xff
	.size	 sText_NoGenderSymbol,2
.text
	.align	2, 0
	.globl	PokenavCallback_Init_ConditionSearch
	.type	 PokenavCallback_Init_ConditionSearch,function
	.thumb_func
PokenavCallback_Init_ConditionSearch:
	push	{r4, lr}
	mov	r0, #0x7
	mov	r1, #0x24
	bl	AllocSubstruct
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L4	@cond_branch
	ldr	r1, .L6
	mov	r0, #0x12
	bl	AllocSubstruct
	str	r0, [r4, #0x20]
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldr	r0, .L6+0x4
	str	r0, [r4]
	ldr	r0, .L6+0x8
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r4, #0x4]
	mov	r0, #0x0
	str	r0, [r4, #0x18]
	bl	GetSelectedConditionSearch
	ldr	r1, .L6+0xc
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r4, #0x14]
	mov	r0, #0x1
	b	.L5
.L7:
	.align	2, 0
.L6:
	.word	0x6ac
	.word	HandleConditionSearchInput_WaitSetup
	.word	GetConditionSearchLoopedTask
	.word	sSearchMonDataIds
.L4:
	mov	r0, #0x0
.L5:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 PokenavCallback_Init_ConditionSearch,.Lfe1-PokenavCallback_Init_ConditionSearch
	.align	2, 0
	.globl	PokenavCallback_Init_ReturnToMonSearchList
	.type	 PokenavCallback_Init_ReturnToMonSearchList,function
	.thumb_func
PokenavCallback_Init_ReturnToMonSearchList:
	push	{r4, lr}
	mov	r0, #0x7
	mov	r1, #0x24
	bl	AllocSubstruct
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L9	@cond_branch
	mov	r0, #0x12
	bl	GetSubstructPtr
	str	r0, [r4, #0x20]
	ldr	r0, .L11
	str	r0, [r4]
	mov	r0, #0x1
	str	r0, [r4, #0x18]
	bl	GetSelectedConditionSearch
	ldr	r1, .L11+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r4, #0x14]
	mov	r0, #0x1
	b	.L10
.L12:
	.align	2, 0
.L11:
	.word	HandleConditionSearchInput
	.word	sSearchMonDataIds
.L9:
	mov	r0, #0x0
.L10:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 PokenavCallback_Init_ReturnToMonSearchList,.Lfe2-PokenavCallback_Init_ReturnToMonSearchList
	.align	2, 0
	.globl	GetConditionSearchResultsCallback
	.type	 GetConditionSearchResultsCallback,function
	.thumb_func
GetConditionSearchResultsCallback:
	push	{lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	ldr	r1, [r0]
	bl	_call_via_r1
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 GetConditionSearchResultsCallback,.Lfe3-GetConditionSearchResultsCallback
	.align	2, 0
	.globl	FreeSearchResultSubstruct1
	.type	 FreeSearchResultSubstruct1,function
	.thumb_func
FreeSearchResultSubstruct1:
	push	{lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x1c]
	cmp	r0, #0
	bne	.L15	@cond_branch
	mov	r0, #0x12
	bl	FreePokenavSubstruct
.L15:
	mov	r0, #0x7
	bl	FreePokenavSubstruct
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 FreeSearchResultSubstruct1,.Lfe4-FreeSearchResultSubstruct1
	.align	2, 0
	.type	 HandleConditionSearchInput_WaitSetup,function
	.thumb_func
HandleConditionSearchInput_WaitSetup:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, [r4, #0x4]
	bl	IsLoopedTaskActive
	cmp	r0, #0
	bne	.L17	@cond_branch
	ldr	r0, .L18
	str	r0, [r4]
.L17:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L19:
	.align	2, 0
.L18:
	.word	HandleConditionSearchInput
.Lfe5:
	.size	 HandleConditionSearchInput_WaitSetup,.Lfe5-HandleConditionSearchInput_WaitSetup
	.align	2, 0
	.type	 HandleConditionSearchInput,function
	.thumb_func
HandleConditionSearchInput:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r2, .L34
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L21	@cond_branch
	mov	r0, #0x1
	b	.L33
.L35:
	.align	2, 0
.L34:
	.word	gMain
.L21:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L23	@cond_branch
	mov	r0, #0x2
	b	.L33
.L23:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L25	@cond_branch
	mov	r0, #0x3
	b	.L33
.L25:
	mov	r0, #0x10
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	beq	.L27	@cond_branch
	mov	r0, #0x4
	b	.L33
.L27:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L29	@cond_branch
	str	r2, [r4, #0x1c]
	ldr	r0, .L36
	str	r0, [r4]
	mov	r0, #0x5
	b	.L33
.L37:
	.align	2, 0
.L36:
	.word	ReturnToConditionSearchList
.L29:
	mov	r5, #0x1
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L31	@cond_branch
	mov	r0, #0x0
	b	.L33
.L31:
	bl	GetSelectedPokenavListIndex
	ldr	r1, [r4, #0x20]
	strh	r0, [r1, #0x2]
	str	r5, [r4, #0x1c]
	ldr	r0, .L38
	str	r0, [r4]
	mov	r0, #0x6
.L33:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L39:
	.align	2, 0
.L38:
	.word	OpenConditionGraphFromSearchList
.Lfe6:
	.size	 HandleConditionSearchInput,.Lfe6-HandleConditionSearchInput
	.align	2, 0
	.type	 ReturnToConditionSearchList,function
	.thumb_func
ReturnToConditionSearchList:
	ldr	r0, .L41
	bx	lr
.L42:
	.align	2, 0
.L41:
	.word	0x186a3
.Lfe7:
	.size	 ReturnToConditionSearchList,.Lfe7-ReturnToConditionSearchList
	.align	2, 0
	.type	 OpenConditionGraphFromSearchList,function
	.thumb_func
OpenConditionGraphFromSearchList:
	ldr	r0, .L44
	bx	lr
.L45:
	.align	2, 0
.L44:
	.word	0x186a9
.Lfe8:
	.size	 OpenConditionGraphFromSearchList,.Lfe8-OpenConditionGraphFromSearchList
	.align	2, 0
	.type	 sub_81CF0C0,function
	.thumb_func
sub_81CF0C0:
	push	{lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x18]
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 sub_81CF0C0,.Lfe9-sub_81CF0C0
	.align	2, 0
	.type	 GetSearchResultsMonDataList,function
	.thumb_func
GetSearchResultsMonDataList:
	push	{lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x20]
	add	r0, r0, #0x4
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 GetSearchResultsMonDataList,.Lfe10-GetSearchResultsMonDataList
	.align	2, 0
	.type	 GetSearchResultsMonListCount,function
	.thumb_func
GetSearchResultsMonListCount:
	push	{lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x20]
	ldrh	r0, [r0]
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 GetSearchResultsMonListCount,.Lfe11-GetSearchResultsMonListCount
	.align	2, 0
	.type	 GetSearchResultsSelectedMonData,function
	.thumb_func
GetSearchResultsSelectedMonData:
	push	{r4, lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	add	r4, r0, #0
	bl	GetSelectedPokenavListIndex
	ldr	r1, [r4, #0x20]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x6]
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 GetSearchResultsSelectedMonData,.Lfe12-GetSearchResultsSelectedMonData
	.align	2, 0
	.type	 sub_81CF10C,function
	.thumb_func
sub_81CF10C:
	push	{lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x20]
	ldrh	r0, [r0, #0x2]
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 sub_81CF10C,.Lfe13-sub_81CF10C
	.align	2, 0
	.type	 GetConditionSearchLoopedTask,function
	.thumb_func
GetConditionSearchLoopedTask:
	push	{lr}
	ldr	r2, .L52
	lsl	r1, r0, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r1}
	bx	r1
.L53:
	.align	2, 0
.L52:
	.word	sConditionSearchLoopedTaskFuncs
.Lfe14:
	.size	 GetConditionSearchLoopedTask,.Lfe14-GetConditionSearchLoopedTask
	.align	2, 0
	.type	 BuildPartyMonSearchResults,function
	.thumb_func
BuildPartyMonSearchResults:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	mov	r0, #0x7
	bl	GetSubstructPtr
	add	r6, r0, #0
	ldr	r0, [r6, #0x20]
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, [r6, #0x20]
	strh	r1, [r0, #0x2]
	ldr	r1, .L64
	ldr	r0, [sp]
	and	r0, r0, r1
	mov	r1, #0xe
	orr	r0, r0, r1
	str	r0, [sp]
	mov	r5, #0x0
.L58:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L64+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x5
	bl	GetMonData
	cmp	r0, #0
	beq	.L63	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x6
	bl	GetMonData
	cmp	r0, #0
	bne	.L57	@cond_branch
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x10
	ldr	r2, .L64+0x8
	ldr	r0, [sp]
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp]
	ldr	r1, [r6, #0x14]
	add	r0, r4, #0
	bl	GetMonData
	lsl	r0, r0, #0x10
	ldr	r2, .L64+0xc
	ldr	r1, [sp]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	add	r0, r6, #0
	mov	r1, sp
	bl	sub_81CF2C4
.L57:
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L58	@cond_branch
.L63:
	mov	r0, #0x1
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L65:
	.align	2, 0
.L64:
	.word	-0x100
	.word	gPlayerParty
	.word	-0xff01
	.word	0xffff
.Lfe15:
	.size	 BuildPartyMonSearchResults,.Lfe15-BuildPartyMonSearchResults
	.align	2, 0
	.type	 InitBoxMonSearchResults,function
	.thumb_func
InitBoxMonSearchResults:
	push	{lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	mov	r1, #0x0
	str	r1, [r0, #0x10]
	str	r1, [r0, #0xc]
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 InitBoxMonSearchResults,.Lfe16-InitBoxMonSearchResults
	.align	2, 0
	.type	 BuildBoxMonSearchResults,function
	.thumb_func
BuildBoxMonSearchResults:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r0, #0x7
	bl	GetSubstructPtr
	add	r6, r0, #0
	ldr	r5, [r6, #0xc]
	ldr	r4, [r6, #0x10]
	mov	r0, #0x0
	mov	r8, r0
	cmp	r5, #0xd
	bgt	.L69	@cond_branch
.L70:
	cmp	r4, #0x1d
	bgt	.L72	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r7, r0, #0x18
.L73:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	CheckBoxMonSanityAt
	cmp	r0, #0
	beq	.L74	@cond_branch
	ldr	r1, .L79
	ldr	r0, [sp]
	and	r0, r0, r1
	orr	r0, r0, r7
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	lsl	r3, r1, #0x8
	ldr	r2, .L79+0x4
	and	r0, r0, r2
	orr	r0, r0, r3
	str	r0, [sp]
	ldr	r2, [r6, #0x14]
	add	r0, r7, #0
	bl	GetBoxMonDataAt
	lsl	r0, r0, #0x10
	ldr	r2, .L79+0x8
	ldr	r1, [sp]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	add	r0, r6, #0
	mov	r1, sp
	bl	sub_81CF2C4
.L74:
	mov	r0, #0x1
	add	r8, r8, r0
	add	r4, r4, #0x1
	mov	r0, r8
	cmp	r0, #0xe
	ble	.L71	@cond_branch
	str	r5, [r6, #0xc]
	str	r4, [r6, #0x10]
	mov	r0, #0x3
	b	.L78
.L80:
	.align	2, 0
.L79:
	.word	-0x100
	.word	-0xff01
	.word	0xffff
.L71:
	cmp	r4, #0x1d
	ble	.L73	@cond_branch
.L72:
	mov	r4, #0x0
	add	r5, r5, #0x1
	cmp	r5, #0xd
	ble	.L70	@cond_branch
.L69:
	mov	r0, #0x1
.L78:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 BuildBoxMonSearchResults,.Lfe17-BuildBoxMonSearchResults
	.align	2, 0
	.type	 sub_81CF278,function
	.thumb_func
sub_81CF278:
	push	{r4, r5, r6, lr}
	mov	r0, #0x7
	bl	GetSubstructPtr
	add	r5, r0, #0
	ldr	r0, [r5, #0x20]
	ldrh	r6, [r0]
	ldrh	r4, [r0, #0x6]
	mov	r1, #0x1
	strh	r1, [r0, #0x6]
	mov	r3, #0x1
	cmp	r3, r6
	bge	.L83	@cond_branch
.L85:
	ldr	r2, [r5, #0x20]
	lsl	r0, r3, #0x2
	add	r1, r2, r0
	ldrh	r0, [r1, #0x6]
	cmp	r0, r4
	bne	.L86	@cond_branch
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x2
	add	r0, r2, r0
	ldrh	r0, [r0, #0x6]
	strh	r0, [r1, #0x6]
	add	r0, r3, #0x1
	b	.L84
.L86:
	add	r4, r0, #0
	add	r0, r3, #0x1
	strh	r0, [r1, #0x6]
.L84:
	add	r3, r0, #0
	cmp	r3, r6
	blt	.L85	@cond_branch
.L83:
	mov	r0, #0x1
	str	r0, [r5, #0x18]
	mov	r0, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 sub_81CF278,.Lfe18-sub_81CF278
	.align	2, 0
	.type	 sub_81CF2C4,function
	.thumb_func
sub_81CF2C4:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	add	r7, r1, #0
	mov	r1, #0x0
	ldr	r0, [r5, #0x20]
	ldrh	r2, [r0]
	lsr	r3, r2, #0x1
	cmp	r2, r3
	beq	.L91	@cond_branch
	add	r6, r0, #0
	ldrh	r4, [r7, #0x2]
.L92:
	lsl	r0, r3, #0x2
	add	r0, r6, r0
	ldrh	r0, [r0, #0x6]
	cmp	r4, r0
	bls	.L93	@cond_branch
	add	r2, r3, #0
	b	.L94
.L93:
	add	r1, r3, #0x1
.L94:
	sub	r0, r2, r1
	lsr	r0, r0, #0x1
	add	r3, r1, r0
	cmp	r2, r3
	bne	.L92	@cond_branch
.L91:
	ldr	r0, [r5, #0x20]
	ldrh	r2, [r0]
	lsl	r6, r3, #0x2
	cmp	r2, r3
	bls	.L97	@cond_branch
	lsl	r0, r2, #0x2
	sub	r4, r0, #0x4
.L99:
	ldr	r0, [r5, #0x20]
	lsl	r1, r2, #0x2
	add	r0, r0, #0x4
	add	r1, r0, r1
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [r1]
	sub	r4, r4, #0x4
	sub	r2, r2, #0x1
	cmp	r2, r3
	bhi	.L99	@cond_branch
.L97:
	ldr	r0, [r5, #0x20]
	add	r0, r0, #0x4
	add	r0, r0, r6
	ldr	r1, [r7]
	str	r1, [r0]
	ldr	r1, [r5, #0x20]
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 sub_81CF2C4,.Lfe19-sub_81CF2C4
	.align	2, 0
	.globl	OpenConditionSearchResults
	.type	 OpenConditionSearchResults,function
	.thumb_func
OpenConditionSearchResults:
	push	{r4, lr}
	mov	r1, #0x81
	lsl	r1, r1, #0x4
	mov	r0, #0x8
	bl	AllocSubstruct
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L102	@cond_branch
	ldr	r0, .L104
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r4, #0x4]
	ldr	r0, .L104+0x4
	str	r0, [r4]
	mov	r0, #0x0
	str	r0, [r4, #0xc]
	mov	r0, #0x1
	b	.L103
.L105:
	.align	2, 0
.L104:
	.word	LoopedTask_OpenConditionSearchResults
	.word	GetSearchResultCurrentLoopedTaskActive
.L102:
	mov	r0, #0x0
.L103:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 OpenConditionSearchResults,.Lfe20-OpenConditionSearchResults
	.align	2, 0
	.globl	OpenConditionSearchListFromGraph
	.type	 OpenConditionSearchListFromGraph,function
	.thumb_func
OpenConditionSearchListFromGraph:
	push	{r4, lr}
	mov	r1, #0x81
	lsl	r1, r1, #0x4
	mov	r0, #0x8
	bl	AllocSubstruct
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L107	@cond_branch
	ldr	r0, .L109
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r4, #0x4]
	ldr	r0, .L109+0x4
	str	r0, [r4]
	mov	r0, #0x1
	str	r0, [r4, #0xc]
	b	.L108
.L110:
	.align	2, 0
.L109:
	.word	LoopedTask_OpenConditionSearchResults
	.word	GetSearchResultCurrentLoopedTaskActive
.L107:
	mov	r0, #0x0
.L108:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 OpenConditionSearchListFromGraph,.Lfe21-OpenConditionSearchListFromGraph
	.align	2, 0
	.globl	CreateSearchResultsLoopedTask
	.type	 CreateSearchResultsLoopedTask,function
	.thumb_func
CreateSearchResultsLoopedTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetSubstructPtr
	add	r5, r0, #0
	ldr	r0, .L112
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r5, #0x4]
	ldr	r0, .L112+0x4
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	sSearchResultLoopTaskFuncs
	.word	GetSearchResultCurrentLoopedTaskActive
.Lfe22:
	.size	 CreateSearchResultsLoopedTask,.Lfe22-CreateSearchResultsLoopedTask
	.align	2, 0
	.globl	IsSearchResultLoopedTaskActive
	.type	 IsSearchResultLoopedTaskActive,function
	.thumb_func
IsSearchResultLoopedTaskActive:
	push	{lr}
	mov	r0, #0x8
	bl	GetSubstructPtr
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 IsSearchResultLoopedTaskActive,.Lfe23-IsSearchResultLoopedTaskActive
	.align	2, 0
	.type	 GetSearchResultCurrentLoopedTaskActive,function
	.thumb_func
GetSearchResultCurrentLoopedTaskActive:
	push	{lr}
	mov	r0, #0x8
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x4]
	bl	IsLoopedTaskActive
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 GetSearchResultCurrentLoopedTaskActive,.Lfe24-GetSearchResultCurrentLoopedTaskActive
	.align	2, 0
	.globl	FreeSearchResultSubstruct2
	.type	 FreeSearchResultSubstruct2,function
	.thumb_func
FreeSearchResultSubstruct2:
	push	{r4, lr}
	mov	r0, #0x8
	bl	GetSubstructPtr
	add	r4, r0, #0
	bl	sub_81C8234
	ldrb	r0, [r4, #0x8]
	bl	RemoveWindow
	mov	r0, #0x8
	bl	FreePokenavSubstruct
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 FreeSearchResultSubstruct2,.Lfe25-FreeSearchResultSubstruct2
	.align	2, 0
	.type	 LoopedTask_OpenConditionSearchResults,function
	.thumb_func
LoopedTask_OpenConditionSearchResults:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x5
	bls	.LCB1029
	b	.L118	@long jump
.LCB1029:
	lsl	r0, r4, #0x2
	ldr	r1, .L141
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L142:
	.align	2, 0
.L141:
	.word	.L133
	.align	2, 0
	.align	2, 0
.L133:
	.word	.L119
	.word	.L120
	.word	.L123
	.word	.L125
	.word	.L127
	.word	.L130
.L119:
	ldr	r0, .L143
	mov	r1, #0x2
	bl	InitBgTemplates
	ldr	r1, .L143+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	add	r1, r5, #0
	add	r1, r1, #0x10
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, .L143+0x8
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L143+0xc
	mov	r1, #0x10
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
.L140:
	mov	r0, #0x0
	b	.L135
.L144:
	.align	2, 0
.L143:
	.word	sConditionSearchResultBgTemplates
	.word	sConditionSearchResultTiles
	.word	sConditionSearchResultTilemap
	.word	sConditionSearchResultFramePal
.L120:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L136	@cond_branch
	bl	sub_81CF0C0
	cmp	r0, #0
	beq	.L136	@cond_branch
	b	.L140
.L123:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L136	@cond_branch
	ldr	r0, .L145
	mov	r1, #0x20
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	bl	InitConditionSearchListMenuTemplate
	b	.L140
.L146:
	.align	2, 0
.L145:
	.word	gUnknown_08623570
.L125:
	bl	sub_81C8224
	cmp	r0, #0
	bne	.L136	@cond_branch
	add	r0, r5, #0
	bl	AddSearchResultListMenuWindow
	mov	r0, #0x3
	bl	PrintHelpBarText
	b	.L140
.L127:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L136	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	HideBg
	ldr	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L129	@cond_branch
	bl	GetSelectedConditionSearch
	add	r4, r0, #0
	add	r4, r4, #0x8
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	LoadLeftHeaderGfxForIndex
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
.L129:
	mov	r0, #0x1
	bl	PokenavFadeScreen
	b	.L140
.L130:
	bl	IsPaletteFadeActive
	cmp	r0, #0
	bne	.L136	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	beq	.L118	@cond_branch
.L136:
	mov	r0, #0x2
	b	.L135
.L118:
	mov	r0, #0x4
.L135:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 LoopedTask_OpenConditionSearchResults,.Lfe26-LoopedTask_OpenConditionSearchResults
	.align	2, 0
	.type	 LoopedTask_MoveSearchListCursorUp,function
	.thumb_func
LoopedTask_MoveSearchListCursorUp:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x1
	beq	.L157	@cond_branch
	cmp	r4, #0x1
	bgt	.L164	@cond_branch
	cmp	r4, #0
	beq	.L149	@cond_branch
	b	.L148
.L164:
	cmp	r4, #0x2
	beq	.L159	@cond_branch
	cmp	r4, #0x3
	beq	.L160	@cond_branch
	b	.L148
.L149:
	bl	MatchCall_MoveCursorUp
	cmp	r0, #0x1
	beq	.L152	@cond_branch
	cmp	r0, #0x1
	bgt	.L156	@cond_branch
	cmp	r0, #0
	beq	.L148	@cond_branch
	b	.L166
.L156:
	cmp	r0, #0x2
	beq	.L153	@cond_branch
	b	.L166
.L152:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x7
	b	.L165
.L153:
	mov	r0, #0x5
	bl	PlaySE
	b	.L166
.L157:
	bl	IsMonListLoopedTaskActive
	cmp	r0, #0
	bne	.L167	@cond_branch
.L159:
	add	r0, r5, #0
	bl	PrintSearchResultListMenuItems
.L166:
	mov	r0, #0x0
	b	.L165
.L160:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L148	@cond_branch
.L167:
	mov	r0, #0x2
	b	.L165
.L148:
	mov	r0, #0x4
.L165:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 LoopedTask_MoveSearchListCursorUp,.Lfe27-LoopedTask_MoveSearchListCursorUp
	.align	2, 0
	.type	 LoopedTask_MoveSearchListCursorDown,function
	.thumb_func
LoopedTask_MoveSearchListCursorDown:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x1
	beq	.L178	@cond_branch
	cmp	r4, #0x1
	bgt	.L185	@cond_branch
	cmp	r4, #0
	beq	.L170	@cond_branch
	b	.L169
.L185:
	cmp	r4, #0x2
	beq	.L180	@cond_branch
	cmp	r4, #0x3
	beq	.L181	@cond_branch
	b	.L169
.L170:
	bl	MatchCall_MoveCursorDown
	cmp	r0, #0x1
	beq	.L173	@cond_branch
	cmp	r0, #0x1
	bgt	.L177	@cond_branch
	cmp	r0, #0
	beq	.L169	@cond_branch
	b	.L187
.L177:
	cmp	r0, #0x2
	beq	.L174	@cond_branch
	b	.L187
.L173:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x7
	b	.L186
.L174:
	mov	r0, #0x5
	bl	PlaySE
	b	.L187
.L178:
	bl	IsMonListLoopedTaskActive
	cmp	r0, #0
	bne	.L188	@cond_branch
.L180:
	add	r0, r5, #0
	bl	PrintSearchResultListMenuItems
.L187:
	mov	r0, #0x0
	b	.L186
.L181:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L169	@cond_branch
.L188:
	mov	r0, #0x2
	b	.L186
.L169:
	mov	r0, #0x4
.L186:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 LoopedTask_MoveSearchListCursorDown,.Lfe28-LoopedTask_MoveSearchListCursorDown
	.align	2, 0
	.type	 LoopedTask_MoveSearchListPageUp,function
	.thumb_func
LoopedTask_MoveSearchListPageUp:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x1
	beq	.L199	@cond_branch
	cmp	r4, #0x1
	bgt	.L206	@cond_branch
	cmp	r4, #0
	beq	.L191	@cond_branch
	b	.L190
.L206:
	cmp	r4, #0x2
	beq	.L201	@cond_branch
	cmp	r4, #0x3
	beq	.L202	@cond_branch
	b	.L190
.L191:
	bl	MatchCall_PageUp
	cmp	r0, #0x1
	beq	.L194	@cond_branch
	cmp	r0, #0x1
	bgt	.L198	@cond_branch
	cmp	r0, #0
	beq	.L190	@cond_branch
	b	.L208
.L198:
	cmp	r0, #0x2
	beq	.L195	@cond_branch
	b	.L208
.L194:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x7
	b	.L207
.L195:
	mov	r0, #0x5
	bl	PlaySE
	b	.L208
.L199:
	bl	IsMonListLoopedTaskActive
	cmp	r0, #0
	bne	.L209	@cond_branch
.L201:
	add	r0, r5, #0
	bl	PrintSearchResultListMenuItems
.L208:
	mov	r0, #0x0
	b	.L207
.L202:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L190	@cond_branch
.L209:
	mov	r0, #0x2
	b	.L207
.L190:
	mov	r0, #0x4
.L207:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 LoopedTask_MoveSearchListPageUp,.Lfe29-LoopedTask_MoveSearchListPageUp
	.align	2, 0
	.type	 LoopedTask_MoveSearchListPageDown,function
	.thumb_func
LoopedTask_MoveSearchListPageDown:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x1
	beq	.L220	@cond_branch
	cmp	r4, #0x1
	bgt	.L227	@cond_branch
	cmp	r4, #0
	beq	.L212	@cond_branch
	b	.L211
.L227:
	cmp	r4, #0x2
	beq	.L222	@cond_branch
	cmp	r4, #0x3
	beq	.L223	@cond_branch
	b	.L211
.L212:
	bl	MatchCall_PageDown
	cmp	r0, #0x1
	beq	.L215	@cond_branch
	cmp	r0, #0x1
	bgt	.L219	@cond_branch
	cmp	r0, #0
	beq	.L211	@cond_branch
	b	.L229
.L219:
	cmp	r0, #0x2
	beq	.L216	@cond_branch
	b	.L229
.L215:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x7
	b	.L228
.L216:
	mov	r0, #0x5
	bl	PlaySE
	b	.L229
.L220:
	bl	IsMonListLoopedTaskActive
	cmp	r0, #0
	bne	.L230	@cond_branch
.L222:
	add	r0, r5, #0
	bl	PrintSearchResultListMenuItems
.L229:
	mov	r0, #0x0
	b	.L228
.L223:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L211	@cond_branch
.L230:
	mov	r0, #0x2
	b	.L228
.L211:
	mov	r0, #0x4
.L228:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 LoopedTask_MoveSearchListPageDown,.Lfe30-LoopedTask_MoveSearchListPageDown
	.align	2, 0
	.type	 LoopedTask_ExitConditionSearchMenu,function
	.thumb_func
LoopedTask_ExitConditionSearchMenu:
	push	{lr}
	cmp	r0, #0
	beq	.L233	@cond_branch
	cmp	r0, #0x1
	beq	.L234	@cond_branch
	b	.L232
.L233:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	PokenavFadeScreen
	bl	SlideMenuHeaderDown
	mov	r0, #0x0
	b	.L239
.L234:
	bl	IsPaletteFadeActive
	cmp	r0, #0
	bne	.L240	@cond_branch
	bl	MainMenuLoopedTaskIsBusy
	cmp	r0, #0
	beq	.L236	@cond_branch
.L240:
	mov	r0, #0x2
	b	.L239
.L236:
	bl	SetLeftHeaderSpritesInvisibility
.L232:
	mov	r0, #0x4
.L239:
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 LoopedTask_ExitConditionSearchMenu,.Lfe31-LoopedTask_ExitConditionSearchMenu
	.align	2, 0
	.type	 LoopedTask_SelectSearchResult,function
	.thumb_func
LoopedTask_SelectSearchResult:
	push	{lr}
	cmp	r0, #0
	beq	.L243	@cond_branch
	cmp	r0, #0x1
	beq	.L244	@cond_branch
	b	.L242
.L243:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	PokenavFadeScreen
	mov	r0, #0x0
	b	.L248
.L244:
	bl	IsPaletteFadeActive
	cmp	r0, #0
	beq	.L242	@cond_branch
	mov	r0, #0x2
	b	.L248
.L242:
	mov	r0, #0x4
.L248:
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 LoopedTask_SelectSearchResult,.Lfe32-LoopedTask_SelectSearchResult
	.align	2, 0
	.type	 AddSearchResultListMenuWindow,function
	.thumb_func
AddSearchResultListMenuWindow:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L250
	bl	AddWindow
	strh	r0, [r4, #0x8]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PutWindowTilemap
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x1
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	PrintSearchResultListMenuItems
	pop	{r4}
	pop	{r0}
	bx	r0
.L251:
	.align	2, 0
.L250:
	.word	sSearchResultListMenuWindowTemplate
.Lfe33:
	.size	 AddSearchResultListMenuWindow,.Lfe33-AddSearchResultListMenuWindow
	.align	2, 0
	.type	 PrintSearchResultListMenuItems,function
	.thumb_func
PrintSearchResultListMenuItems:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r8, r0
	bl	GetSearchResultsSelectedMonData
	add	r7, r0, #0
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r4, .L253
	mov	r0, #0x0
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0xff
	strb	r0, [r4]
	ldr	r5, .L253+0x4
	ldr	r1, .L253+0x8
	add	r0, r5, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	mov	r1, r8
	ldrb	r0, [r1, #0x8]
	mov	r1, #0x1
	mov	sl, r1
	str	r1, [sp]
	mov	r1, #0xff
	mov	r9, r1
	str	r1, [sp, #0x4]
	mov	r6, #0x0
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x4
	bl	AddTextPrinterParameterized
	add	r0, r4, #0
	add	r1, r7, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r1, r8
	ldrb	r0, [r1, #0x8]
	mov	r1, sl
	str	r1, [sp]
	mov	r1, r9
	str	r1, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x22
	bl	AddTextPrinterParameterized
	mov	r1, r8
	ldrb	r0, [r1, #0x8]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L254:
	.align	2, 0
.L253:
	.word	gStringVar1
	.word	gStringVar2
	.word	gText_NumberF700
.Lfe34:
	.size	 PrintSearchResultListMenuItems,.Lfe34-PrintSearchResultListMenuItems
	.align	2, 0
	.type	 InitConditionSearchListMenuTemplate,function
	.thumb_func
InitConditionSearchListMenuTemplate:
	push	{r4, lr}
	add	sp, sp, #-0x18
	bl	GetSearchResultsMonDataList
	str	r0, [sp]
	bl	GetSearchResultsMonListCount
	mov	r1, sp
	mov	r4, #0x0
	strh	r0, [r1, #0x4]
	mov	r0, #0x4
	strb	r0, [r1, #0x8]
	bl	sub_81CF10C
	mov	r1, sp
	strh	r0, [r1, #0x6]
	mov	r0, #0xd
	strb	r0, [r1, #0x9]
	mov	r0, #0x11
	strb	r0, [r1, #0xa]
	mov	r0, sp
	mov	r2, #0x1
	strb	r2, [r0, #0xb]
	mov	r0, #0x8
	strb	r0, [r1, #0xc]
	mov	r0, #0x2
	strb	r0, [r1, #0xd]
	mov	r0, sp
	strb	r2, [r0, #0xe]
	ldr	r0, .L256
	str	r0, [sp, #0x10]
	str	r4, [sp, #0x14]
	ldr	r0, .L256+0x4
	mov	r2, #0x0
	bl	sub_81C81D4
	add	sp, sp, #0x18
	pop	{r4}
	pop	{r0}
	bx	r0
.L257:
	.align	2, 0
.L256:
	.word	PrintSearchMonListItem
	.word	sConditionSearchResultBgTemplates+0x4
.Lfe35:
	.size	 InitConditionSearchListMenuTemplate,.Lfe35-InitConditionSearchListMenuTemplate
	.align	2, 0
	.type	 PrintSearchMonListItem,function
	.thumb_func
PrintSearchMonListItem:
	push	{r4, r5, r6, r7, lr}
	add	r2, r0, #0
	add	r6, r1, #0
	ldrb	r0, [r2]
	cmp	r0, #0xe
	bne	.L259	@cond_branch
	ldrb	r1, [r2, #0x1]
	mov	r0, #0x64
	mov	r4, r1
	mul	r4, r4, r0
	ldr	r0, .L266
	add	r4, r4, r0
	add	r0, r4, #0
	bl	GetMonGender
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	GetLevelFromMonExp
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L266+0x4
	add	r0, r4, #0
	mov	r1, #0x2
	bl	GetMonData
	b	.L260
.L267:
	.align	2, 0
.L266:
	.word	gPlayerParty
	.word	gStringVar3
.L259:
	ldrb	r0, [r2]
	ldrb	r1, [r2, #0x1]
	bl	GetBoxedMonPtr
	add	r4, r0, #0
	bl	GetBoxMonGender
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	GetLevelFromBoxMonExp
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L268
	add	r0, r4, #0
	mov	r1, #0x2
	bl	GetBoxMonData
.L260:
	ldr	r4, .L268
	add	r0, r4, #0
	bl	StringGetEnd10
	add	r0, r6, #0
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x3c
	bl	sub_81DB494
	add	r6, r0, #0
	cmp	r5, #0
	beq	.L263	@cond_branch
	cmp	r5, #0xfe
	beq	.L264	@cond_branch
	ldr	r1, .L268+0x4
	b	.L261
.L269:
	.align	2, 0
.L268:
	.word	gStringVar3
	.word	sText_NoGenderSymbol
.L263:
	ldr	r1, .L270
	b	.L261
.L271:
	.align	2, 0
.L270:
	.word	sText_MaleSymbol
.L264:
	ldr	r1, .L272
.L261:
	ldr	r4, .L272+0x4
	add	r0, r4, #0
	bl	StringCopy
	mov	r1, #0xba
	strb	r1, [r0]
	add	r0, r0, #0x1
	mov	r1, #0xf9
	strb	r1, [r0]
	add	r0, r0, #0x1
	mov	r1, #0x5
	strb	r1, [r0]
	add	r0, r0, #0x1
	add	r1, r7, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x28
	bl	sub_81DB494
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L273:
	.align	2, 0
.L272:
	.word	sText_FemaleSymbol
	.word	gStringVar1
.Lfe36:
	.size	 PrintSearchMonListItem,.Lfe36-PrintSearchMonListItem
.text
	.align	2, 0

