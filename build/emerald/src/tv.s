@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	sPokemonAnglerSpecies
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sPokemonAnglerSpecies,object
	.size	 sPokemonAnglerSpecies,2
sPokemonAnglerSpecies:
	.short	0x0
	.globl	sPokemonAnglerAttemptCounters
	.align	1, 0
	.type	 sPokemonAnglerAttemptCounters,object
	.size	 sPokemonAnglerAttemptCounters,2
sPokemonAnglerAttemptCounters:
	.short	0x0
	.globl	sFindThatGamerCoinsSpent
	.align	1, 0
	.type	 sFindThatGamerCoinsSpent,object
	.size	 sFindThatGamerCoinsSpent,2
sFindThatGamerCoinsSpent:
	.short	0x0
	.globl	sFindThatGamerWhichGame
	.type	 sFindThatGamerWhichGame,object
	.size	 sFindThatGamerWhichGame,1
sFindThatGamerWhichGame:
	.byte	0x0
	.globl	sRecordMixingPartnersWithoutShowsToShare
	.align	2, 0
	.type	 sRecordMixingPartnersWithoutShowsToShare,object
	.size	 sRecordMixingPartnersWithoutShowsToShare,1
sRecordMixingPartnersWithoutShowsToShare:
	.byte	0x0
	.globl	sTVShowState
	.align	2, 0
	.type	 sTVShowState,object
	.size	 sTVShowState,1
sTVShowState:
	.byte	0x0
	.globl	sTVSecretBaseSecretsRandomValues
	.type	 sTVSecretBaseSecretsRandomValues,object
	.size	 sTVSecretBaseSecretsRandomValues,3
sTVSecretBaseSecretsRandomValues:
	.space	3
	.section .rodata
	.align	2, 0
	.type	 sPokeOutbreakSpeciesList,object
sPokeOutbreakSpeciesList:
	.short	0x111
	.short	0x75
	.short	0x6a
	.short	0x49
	.space	2
	.byte	0x3
	.byte	0x11
	.short	0x112
	.short	0x6a
	.short	0x4a
	.short	0x10b
	.short	0x49
	.byte	0xf
	.byte	0x1d
	.short	0x111
	.short	0x6a
	.short	0x4a
	.short	0x10b
	.short	0x49
	.byte	0xd
	.byte	0x20
	.short	0x111
	.short	0xca
	.short	0xda
	.short	0x4c
	.short	0x49
	.byte	0x19
	.byte	0x23
	.short	0x12c
	.short	0x2d
	.short	0x21
	.short	0x27
	.short	0xd5
	.byte	0x8
	.byte	0x1f
	.size	 sPokeOutbreakSpeciesList,60
	.align	1, 0
	.type	 sGoldSymbolFlags,object
sGoldSymbolFlags:
	.short	0x8c5
	.short	0x8c7
	.short	0x8c9
	.short	0x8cb
	.short	0x8cd
	.short	0x8cf
	.short	0x8d1
	.size	 sGoldSymbolFlags,14
	.align	1, 0
	.type	 sSilverSymbolFlags,object
sSilverSymbolFlags:
	.short	0x8c4
	.short	0x8c6
	.short	0x8c8
	.short	0x8ca
	.short	0x8cc
	.short	0x8ce
	.short	0x8d0
	.size	 sSilverSymbolFlags,14
	.align	1, 0
	.type	 sNumberOneVarsAndThresholds,object
sNumberOneVarsAndThresholds:
	.short	0x40e6
	.short	0x64
	.short	0x40eb
	.short	0x32
	.short	0x40e7
	.short	0x64
	.short	0x40e8
	.short	0x14
	.short	0x40e9
	.short	0x14
	.short	0x40ea
	.short	0x14
	.short	0x40f1
	.short	0x1e
	.size	 sNumberOneVarsAndThresholds,28
	.align	2, 0
	.type	 sPokeNewsTextGroup_Upcoming,object
sPokeNewsTextGroup_Upcoming:
	.word	0x0
	.word	gPokeNewsTextSlateport_Upcoming
	.word	gPokeNewsTextGameCorner_Upcoming
	.word	gPokeNewsTextLilycove_Upcoming
	.word	gPokeNewsTextBlendMaster_Upcoming
	.size	 sPokeNewsTextGroup_Upcoming,20
	.align	2, 0
	.type	 sPokeNewsTextGroup_Ongoing,object
sPokeNewsTextGroup_Ongoing:
	.word	0x0
	.word	gPokeNewsTextSlateport_Ongoing
	.word	gPokeNewsTextGameCorner_Ongoing
	.word	gPokeNewsTextLilycove_Ongoing
	.word	gPokeNewsTextBlendMaster_Ongoing
	.size	 sPokeNewsTextGroup_Ongoing,20
	.align	2, 0
	.type	 sPokeNewsTextGroup_Ending,object
sPokeNewsTextGroup_Ending:
	.word	0x0
	.word	gPokeNewsTextSlateport_Ending
	.word	gPokeNewsTextGameCorner_Ending
	.word	gPokeNewsTextLilycove_Ending
	.word	gPokeNewsTextBlendMaster_Ending
	.size	 sPokeNewsTextGroup_Ending,20
	.globl	gTVStringVarPtrs
	.align	2, 0
	.type	 gTVStringVarPtrs,object
	.size	 gTVStringVarPtrs,12
gTVStringVarPtrs:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.align	2, 0
	.type	 sTVFanClubTextGroup,object
sTVFanClubTextGroup:
	.word	gTVFanClubText00
	.word	gTVFanClubText01
	.word	gTVFanClubText02
	.word	gTVFanClubText03
	.word	gTVFanClubText04
	.word	gTVFanClubText05
	.word	gTVFanClubText06
	.word	gTVFanClubText07
	.size	 sTVFanClubTextGroup,32
	.align	2, 0
	.type	 sTVRecentHappeninssTextGroup,object
sTVRecentHappeninssTextGroup:
	.word	gTVRecentHappeningsText00
	.word	gTVRecentHappeningsText01
	.word	gTVRecentHappeningsText02
	.word	gTVRecentHappeningsText03
	.word	gTVRecentHappeningsText04
	.word	gTVRecentHappeningsText05
	.size	 sTVRecentHappeninssTextGroup,24
	.align	2, 0
	.type	 sTVFanClubOpinionsTextGroup,object
sTVFanClubOpinionsTextGroup:
	.word	gTVFanClubOpinionsText00
	.word	gTVFanClubOpinionsText01
	.word	gTVFanClubOpinionsText02
	.word	gTVFanClubOpinionsText03
	.word	gTVFanClubOpinionsText04
	.size	 sTVFanClubOpinionsTextGroup,20
	.align	2, 0
	.type	 sTVMassOutbreakTextGroup,object
sTVMassOutbreakTextGroup:
	.word	gTVMassOutbreakText00
	.size	 sTVMassOutbreakTextGroup,4
	.align	2, 0
	.type	 sTVPokemonTodaySuccessfulTextGroup,object
sTVPokemonTodaySuccessfulTextGroup:
	.word	gTVPokemonTodaySuccessfulText00
	.word	gTVPokemonTodaySuccessfulText01
	.word	gTVPokemonTodaySuccessfulText02
	.word	gTVPokemonTodaySuccessfulText03
	.word	gTVPokemonTodaySuccessfulText04
	.word	gTVPokemonTodaySuccessfulText05
	.word	gTVPokemonTodaySuccessfulText06
	.word	gTVPokemonTodaySuccessfulText07
	.word	gTVPokemonTodaySuccessfulText08
	.word	gTVPokemonTodaySuccessfulText09
	.word	gTVPokemonTodaySuccessfulText10
	.word	gTVPokemonTodaySuccessfulText11
	.size	 sTVPokemonTodaySuccessfulTextGroup,48
	.align	2, 0
	.type	 sTVTodaysSmartShopperTextGroup,object
sTVTodaysSmartShopperTextGroup:
	.word	gTVTodaysSmartShopperText00
	.word	gTVTodaysSmartShopperText01
	.word	gTVTodaysSmartShopperText02
	.word	gTVTodaysSmartShopperText03
	.word	gTVTodaysSmartShopperText04
	.word	gTVTodaysSmartShopperText05
	.word	gTVTodaysSmartShopperText06
	.word	gTVTodaysSmartShopperText07
	.word	gTVTodaysSmartShopperText08
	.word	gTVTodaysSmartShopperText09
	.word	gTVTodaysSmartShopperText10
	.word	gTVTodaysSmartShopperText11
	.word	gTVTodaysSmartShopperText12
	.size	 sTVTodaysSmartShopperTextGroup,52
	.align	2, 0
	.type	 sTVBravoTrainerTextGroup,object
sTVBravoTrainerTextGroup:
	.word	gTVBravoTrainerText00
	.word	gTVBravoTrainerText01
	.word	gTVBravoTrainerText02
	.word	gTVBravoTrainerText03
	.word	gTVBravoTrainerText04
	.word	gTVBravoTrainerText05
	.word	gTVBravoTrainerText06
	.word	gTVBravoTrainerText07
	.word	gTVBravoTrainerText08
	.size	 sTVBravoTrainerTextGroup,36
	.align	2, 0
	.type	 sTV3CheersForPokeblocksTextGroup,object
sTV3CheersForPokeblocksTextGroup:
	.word	gTV3CheersForPokeblocksText00
	.word	gTV3CheersForPokeblocksText01
	.word	gTV3CheersForPokeblocksText02
	.word	gTV3CheersForPokeblocksText03
	.word	gTV3CheersForPokeblocksText04
	.word	gTV3CheersForPokeblocksText05
	.size	 sTV3CheersForPokeblocksTextGroup,24
	.align	2, 0
	.type	 sTVBravoTrainerBattleTowerTextGroup,object
sTVBravoTrainerBattleTowerTextGroup:
	.word	gTVBravoTrainerBattleTowerText00
	.word	gTVBravoTrainerBattleTowerText01
	.word	gTVBravoTrainerBattleTowerText02
	.word	gTVBravoTrainerBattleTowerText03
	.word	gTVBravoTrainerBattleTowerText04
	.word	gTVBravoTrainerBattleTowerText05
	.word	gTVBravoTrainerBattleTowerText06
	.word	gTVBravoTrainerBattleTowerText07
	.word	gTVBravoTrainerBattleTowerText08
	.word	gTVBravoTrainerBattleTowerText09
	.word	gTVBravoTrainerBattleTowerText10
	.word	gTVBravoTrainerBattleTowerText11
	.word	gTVBravoTrainerBattleTowerText12
	.word	gTVBravoTrainerBattleTowerText13
	.word	gTVBravoTrainerBattleTowerText14
	.size	 sTVBravoTrainerBattleTowerTextGroup,60
	.align	2, 0
	.type	 sTVContestLiveUpdatesTextGroup,object
sTVContestLiveUpdatesTextGroup:
	.word	ContestLiveUpdates_Text_Intro
	.word	ContestLiveUpdates_Text_WonBothRounds
	.word	ContestLiveUpdates_Text_BetterRound2
	.word	ContestLiveUpdates_Text_EqualRounds
	.word	ContestLiveUpdates_Text_BetterRound1
	.word	ContestLiveUpdates_Text_GotNervous
	.word	ContestLiveUpdates_Text_StartledFoes
	.word	ContestLiveUpdates_Text_UsedCombo
	.word	ContestLiveUpdates_Text_ExcitingAppeal
	.word	ContestLiveUpdates_Text_WasCool
	.word	ContestLiveUpdates_Text_WasBeautiful
	.word	ContestLiveUpdates_Text_WasCute
	.word	ContestLiveUpdates_Text_WasSmart
	.word	ContestLiveUpdates_Text_WasTough
	.word	ContestLiveUpdates_Text_VeryExcitingAppeal
	.word	ContestLiveUpdates_Text_VeryCool
	.word	ContestLiveUpdates_Text_VeryBeautiful
	.word	ContestLiveUpdates_Text_VeryCute
	.word	ContestLiveUpdates_Text_VerySmart
	.word	ContestLiveUpdates_Text_VeryTough
	.word	ContestLiveUpdates_Text_TookBreak
	.word	ContestLiveUpdates_Text_GotStartled
	.word	ContestLiveUpdates_Text_MoveWonderful
	.word	ContestLiveUpdates_Text_TalkAboutAnotherMon
	.word	ContestLiveUpdates_Text_FailedToAppeal
	.word	ContestLiveUpdates_Text_LastInBothRounds
	.word	ContestLiveUpdates_Text_NotExcitingEnough
	.word	ContestLiveUpdates_Text_LostAfterWinningRound1
	.word	ContestLiveUpdates_Text_NeverExciting
	.word	ContestLiveUpdates_Text_LostBySmallMargin
	.word	ContestLiveUpdates_Text_RepeatedAppeals
	.word	ContestLiveUpdates_Text_ValiantEffortButLost
	.word	ContestLiveUpdates_Text_Outro
	.size	 sTVContestLiveUpdatesTextGroup,132
	.align	2, 0
	.type	 sTVPokemonBattleUpdateTextGroup,object
sTVPokemonBattleUpdateTextGroup:
	.word	gTVPokemonBattleUpdateText00
	.word	gTVPokemonBattleUpdateText01
	.word	gTVPokemonBattleUpdateText02
	.word	gTVPokemonBattleUpdateText03
	.word	gTVPokemonBattleUpdateText04
	.word	gTVPokemonBattleUpdateText05
	.word	gTVPokemonBattleUpdateText06
	.word	gTVPokemonBattleUpdateText07
	.size	 sTVPokemonBattleUpdateTextGroup,32
	.align	2, 0
	.type	 sTVTrainerFanClubSpecialTextGroup,object
sTVTrainerFanClubSpecialTextGroup:
	.word	gTVTrainerFanClubSpecialText00
	.word	gTVTrainerFanClubSpecialText01
	.word	gTVTrainerFanClubSpecialText02
	.word	gTVTrainerFanClubSpecialText03
	.word	gTVTrainerFanClubSpecialText04
	.word	gTVTrainerFanClubSpecialText05
	.size	 sTVTrainerFanClubSpecialTextGroup,24
	.align	2, 0
	.type	 sTVNameRaterTextGroup,object
sTVNameRaterTextGroup:
	.word	gTVNameRaterText00
	.word	gTVNameRaterText01
	.word	gTVNameRaterText02
	.word	gTVNameRaterText03
	.word	gTVNameRaterText04
	.word	gTVNameRaterText05
	.word	gTVNameRaterText06
	.word	gTVNameRaterText07
	.word	gTVNameRaterText08
	.word	gTVNameRaterText09
	.word	gTVNameRaterText10
	.word	gTVNameRaterText11
	.word	gTVNameRaterText12
	.word	gTVNameRaterText13
	.word	gTVNameRaterText14
	.word	gTVNameRaterText15
	.word	gTVNameRaterText16
	.word	gTVNameRaterText17
	.word	gTVNameRaterText18
	.size	 sTVNameRaterTextGroup,76
	.align	2, 0
	.type	 sTVPokemonContestLiveUpdates2TextGroup,object
sTVPokemonContestLiveUpdates2TextGroup:
	.word	gTVPokemonContestLiveUpdates2Text00
	.word	gTVPokemonContestLiveUpdates2Text01
	.word	gTVPokemonContestLiveUpdates2Text02
	.word	gTVPokemonContestLiveUpdates2Text03
	.size	 sTVPokemonContestLiveUpdates2TextGroup,16
	.align	2, 0
	.type	 sTVPokemonTodayFailedTextGroup,object
sTVPokemonTodayFailedTextGroup:
	.word	gTVPokemonTodayFailedText00
	.word	gTVPokemonTodayFailedText01
	.word	gTVPokemonTodayFailedText02
	.word	gTVPokemonTodayFailedText03
	.word	gTVPokemonTodayFailedText04
	.word	gTVPokemonTodayFailedText05
	.word	gTVPokemonTodayFailedText06
	.size	 sTVPokemonTodayFailedTextGroup,28
	.align	2, 0
	.type	 sTVPokemonAnslerTextGroup,object
sTVPokemonAnslerTextGroup:
	.word	gTVPokemonAnglerText00
	.word	gTVPokemonAnglerText01
	.size	 sTVPokemonAnslerTextGroup,8
	.align	2, 0
	.type	 sTVWorldOfMastersTextGroup,object
sTVWorldOfMastersTextGroup:
	.word	gTVWorldOfMastersText00
	.word	gTVWorldOfMastersText01
	.word	gTVWorldOfMastersText02
	.size	 sTVWorldOfMastersTextGroup,12
	.align	2, 0
	.type	 sTVTodaysRivalTrainerTextGroup,object
sTVTodaysRivalTrainerTextGroup:
	.word	gTVTodaysRivalTrainerText00
	.word	gTVTodaysRivalTrainerText01
	.word	gTVTodaysRivalTrainerText02
	.word	gTVTodaysRivalTrainerText03
	.word	gTVTodaysRivalTrainerText04
	.word	gTVTodaysRivalTrainerText05
	.word	gTVTodaysRivalTrainerText06
	.word	gTVTodaysRivalTrainerText07
	.word	gTVTodaysRivalTrainerText08
	.word	gTVTodaysRivalTrainerText09
	.word	gTVTodaysRivalTrainerText10
	.size	 sTVTodaysRivalTrainerTextGroup,44
	.align	2, 0
	.type	 sTVDewfordTrendWatcherNetworkTextGroup,object
sTVDewfordTrendWatcherNetworkTextGroup:
	.word	gTVDewfordTrendWatcherNetworkText00
	.word	gTVDewfordTrendWatcherNetworkText01
	.word	gTVDewfordTrendWatcherNetworkText02
	.word	gTVDewfordTrendWatcherNetworkText03
	.word	gTVDewfordTrendWatcherNetworkText04
	.word	gTVDewfordTrendWatcherNetworkText05
	.word	gTVDewfordTrendWatcherNetworkText06
	.size	 sTVDewfordTrendWatcherNetworkTextGroup,28
	.align	2, 0
	.type	 sTVHoennTreasureInvestisatorsTextGroup,object
sTVHoennTreasureInvestisatorsTextGroup:
	.word	gTVHoennTreasureInvestigatorsText00
	.word	gTVHoennTreasureInvestigatorsText01
	.word	gTVHoennTreasureInvestigatorsText02
	.size	 sTVHoennTreasureInvestisatorsTextGroup,12
	.align	2, 0
	.type	 sTVFindThatGamerTextGroup,object
sTVFindThatGamerTextGroup:
	.word	gTVFindThatGamerText00
	.word	gTVFindThatGamerText01
	.word	gTVFindThatGamerText02
	.word	gTVFindThatGamerText03
	.size	 sTVFindThatGamerTextGroup,16
	.align	2, 0
	.type	 sTVBreakingNewsTextGroup,object
sTVBreakingNewsTextGroup:
	.word	gTVBreakingNewsText00
	.word	gTVBreakingNewsText01
	.word	gTVBreakingNewsText02
	.word	gTVBreakingNewsText03
	.word	gTVBreakingNewsText04
	.word	gTVBreakingNewsText05
	.word	gTVBreakingNewsText06
	.word	gTVBreakingNewsText07
	.word	gTVBreakingNewsText08
	.word	gTVBreakingNewsText09
	.word	gTVBreakingNewsText10
	.word	gTVBreakingNewsText11
	.word	gTVBreakingNewsText12
	.size	 sTVBreakingNewsTextGroup,52
	.align	2, 0
	.type	 sTVSecretBaseVisitTextGroup,object
sTVSecretBaseVisitTextGroup:
	.word	gTVSecretBaseVisitText00
	.word	gTVSecretBaseVisitText01
	.word	gTVSecretBaseVisitText02
	.word	gTVSecretBaseVisitText03
	.word	gTVSecretBaseVisitText04
	.word	gTVSecretBaseVisitText05
	.word	gTVSecretBaseVisitText06
	.word	gTVSecretBaseVisitText07
	.word	gTVSecretBaseVisitText08
	.word	gTVSecretBaseVisitText09
	.word	gTVSecretBaseVisitText10
	.word	gTVSecretBaseVisitText11
	.word	gTVSecretBaseVisitText12
	.word	gTVSecretBaseVisitText13
	.size	 sTVSecretBaseVisitTextGroup,56
	.align	2, 0
	.type	 sTVPokemonLotteryWinnerFlashReportTextGroup,object
sTVPokemonLotteryWinnerFlashReportTextGroup:
	.word	gTVPokemonLotteryWinnerFlashReportText00
	.size	 sTVPokemonLotteryWinnerFlashReportTextGroup,4
	.align	2, 0
	.type	 sTVThePokemonBattleSeminarTextGroup,object
sTVThePokemonBattleSeminarTextGroup:
	.word	gTVThePokemonBattleSeminarText00
	.word	gTVThePokemonBattleSeminarText01
	.word	gTVThePokemonBattleSeminarText02
	.word	gTVThePokemonBattleSeminarText03
	.word	gTVThePokemonBattleSeminarText04
	.word	gTVThePokemonBattleSeminarText05
	.word	gTVThePokemonBattleSeminarText06
	.size	 sTVThePokemonBattleSeminarTextGroup,28
	.align	2, 0
	.type	 sTVTrainerFanClubTextGroup,object
sTVTrainerFanClubTextGroup:
	.word	gTVTrainerFanClubText00
	.word	gTVTrainerFanClubText01
	.word	gTVTrainerFanClubText02
	.word	gTVTrainerFanClubText03
	.word	gTVTrainerFanClubText04
	.word	gTVTrainerFanClubText05
	.word	gTVTrainerFanClubText06
	.word	gTVTrainerFanClubText07
	.word	gTVTrainerFanClubText08
	.word	gTVTrainerFanClubText09
	.word	gTVTrainerFanClubText10
	.word	gTVTrainerFanClubText11
	.size	 sTVTrainerFanClubTextGroup,48
	.align	2, 0
	.type	 sTVCutiesTextGroup,object
sTVCutiesTextGroup:
	.word	gTVCutiesText00
	.word	gTVCutiesText01
	.word	gTVCutiesText02
	.word	gTVCutiesText03
	.word	gTVCutiesText04
	.word	gTVCutiesText05
	.word	gTVCutiesText06
	.word	gTVCutiesText07
	.word	gTVCutiesText08
	.word	gTVCutiesText09
	.word	gTVCutiesText10
	.word	gTVCutiesText11
	.word	gTVCutiesText12
	.word	gTVCutiesText13
	.word	gTVCutiesText14
	.word	gTVCutiesText15
	.size	 sTVCutiesTextGroup,64
	.align	2, 0
	.type	 sTVPokemonNewsBattleFrontierTextGroup,object
sTVPokemonNewsBattleFrontierTextGroup:
	.word	gTVPokemonNewsBattleFrontierText00
	.word	gTVPokemonNewsBattleFrontierText01
	.word	gTVPokemonNewsBattleFrontierText02
	.word	gTVPokemonNewsBattleFrontierText03
	.word	gTVPokemonNewsBattleFrontierText04
	.word	gTVPokemonNewsBattleFrontierText05
	.word	gTVPokemonNewsBattleFrontierText06
	.word	gTVPokemonNewsBattleFrontierText07
	.word	gTVPokemonNewsBattleFrontierText08
	.word	gTVPokemonNewsBattleFrontierText09
	.word	gTVPokemonNewsBattleFrontierText10
	.word	gTVPokemonNewsBattleFrontierText11
	.word	gTVPokemonNewsBattleFrontierText12
	.word	gTVPokemonNewsBattleFrontierText13
	.word	gTVPokemonNewsBattleFrontierText14
	.word	gTVPokemonNewsBattleFrontierText15
	.word	gTVPokemonNewsBattleFrontierText16
	.word	gTVPokemonNewsBattleFrontierText17
	.word	gTVPokemonNewsBattleFrontierText18
	.size	 sTVPokemonNewsBattleFrontierTextGroup,76
	.align	2, 0
	.type	 sTVWhatsNo1InHoennTodayTextGroup,object
sTVWhatsNo1InHoennTodayTextGroup:
	.word	gTVWhatsNo1InHoennTodayText00
	.word	gTVWhatsNo1InHoennTodayText01
	.word	gTVWhatsNo1InHoennTodayText02
	.word	gTVWhatsNo1InHoennTodayText03
	.word	gTVWhatsNo1InHoennTodayText04
	.word	gTVWhatsNo1InHoennTodayText05
	.word	gTVWhatsNo1InHoennTodayText06
	.word	gTVWhatsNo1InHoennTodayText07
	.word	gTVWhatsNo1InHoennTodayText08
	.size	 sTVWhatsNo1InHoennTodayTextGroup,36
	.align	2, 0
	.type	 sTVSecretBaseSecretsTextGroup,object
	.size	 sTVSecretBaseSecretsTextGroup,172
sTVSecretBaseSecretsTextGroup:
	.word	TVSecretBaseSecrets_Text_Intro
	.word	TVSecretBaseSecrets_Text_WhatWillPlayerDoNext1
	.word	TVSecretBaseSecrets_Text_WhatWillPlayerDoNext2
	.word	TVSecretBaseSecrets_Text_TookXStepsBeforeLeaving
	.word	TVSecretBaseSecrets_Text_BaseFailedToInterestPlayer
	.word	TVSecretBaseSecrets_Text_PlayerEnjoyedBase
	.word	TVSecretBaseSecrets_Text_PlayerHugeFanOfBase
	.word	TVSecretBaseSecrets_Text_Outro
	.word	TVSecretBaseSecrets_Text_StoppedMoving1
	.word	TVSecretBaseSecrets_Text_StoppedMoving2
	.word	TVSecretBaseSecrets_Text_UsedChair
	.word	TVSecretBaseSecrets_Text_UsedBalloon
	.word	TVSecretBaseSecrets_Text_UsedTent
	.word	TVSecretBaseSecrets_Text_UsedPlant
	.word	TVSecretBaseSecrets_Text_UsedGoldShield
	.word	TVSecretBaseSecrets_Text_UsedSilverShield
	.word	TVSecretBaseSecrets_Text_UsedGlassOrnament
	.word	TVSecretBaseSecrets_Text_UsedTV
	.word	TVSecretBaseSecrets_Text_UsedMudBall
	.word	TVSecretBaseSecrets_Text_UsedBag
	.word	TVSecretBaseSecrets_Text_UsedCushion
	.word	TVSecretBaseSecrets_Text_HitCushion
	.word	TVSecretBaseSecrets_Text_HuggedCushion
	.word	TVSecretBaseSecrets_Text_BattledWon
	.word	TVSecretBaseSecrets_Text_BattledLost
	.word	TVSecretBaseSecrets_Text_DeclinedBattle
	.word	TVSecretBaseSecrets_Text_UsedPoster
	.word	TVSecretBaseSecrets_Text_UsedNoteMat
	.word	TVSecretBaseSecrets_Text_BattledDraw
	.word	TVSecretBaseSecrets_Text_UsedSpinMat
	.word	TVSecretBaseSecrets_Text_UsedSandOrnament
	.word	TVSecretBaseSecrets_Text_UsedDesk
	.word	TVSecretBaseSecrets_Text_UsedBrick
	.word	TVSecretBaseSecrets_Text_UsedSolidBoard
	.word	TVSecretBaseSecrets_Text_UsedFence
	.word	TVSecretBaseSecrets_Text_UsedGlitterMat
	.word	TVSecretBaseSecrets_Text_UsedTire
	.word	TVSecretBaseSecrets_Text_UsedStand
	.word	TVSecretBaseSecrets_Text_BrokeDoor
	.word	TVSecretBaseSecrets_Text_UsedDoll
	.word	TVSecretBaseSecrets_Text_UsedSlide
	.word	TVSecretBaseSecrets_Text_UsedSlideButDidntGoDown
	.word	TVSecretBaseSecrets_Text_UsedJumpMat
	.align	2, 0
	.type	 sTVSafariFanClubTextGroup,object
sTVSafariFanClubTextGroup:
	.word	gTVSafariFanClubText00
	.word	gTVSafariFanClubText01
	.word	gTVSafariFanClubText02
	.word	gTVSafariFanClubText03
	.word	gTVSafariFanClubText04
	.word	gTVSafariFanClubText05
	.word	gTVSafariFanClubText06
	.word	gTVSafariFanClubText07
	.word	gTVSafariFanClubText08
	.word	gTVSafariFanClubText09
	.word	gTVSafariFanClubText10
	.size	 sTVSafariFanClubTextGroup,44
	.align	2, 0
	.type	 sTVInSearchOfTrainersTextGroup,object
sTVInSearchOfTrainersTextGroup:
	.word	gTVInSearchOfTrainersText00
	.word	gTVInSearchOfTrainersText01
	.word	gTVInSearchOfTrainersText02
	.word	gTVInSearchOfTrainersText03
	.word	gTVInSearchOfTrainersText04
	.word	gTVInSearchOfTrainersText05
	.word	gTVInSearchOfTrainersText06
	.word	gTVInSearchOfTrainersText07
	.word	gTVInSearchOfTrainersText08
	.size	 sTVInSearchOfTrainersTextGroup,36
	.globl	sTVSecretBaseSecretsActions
	.type	 sTVSecretBaseSecretsActions,object
	.size	 sTVSecretBaseSecretsActions,32
sTVSecretBaseSecretsActions:
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x13
	.byte	0x14
	.byte	0x17
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.byte	0x1b
	.byte	0x1c
	.byte	0x1d
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.byte	0x22
	.byte	0x23
	.byte	0x24
	.byte	0x25
	.byte	0x26
	.byte	0x27
	.byte	0x28
	.byte	0x29
	.byte	0x2a
	.byte	0x2b
.text
	.align	2, 0
	.globl	ClearTVShowData
	.type	 ClearTVShowData,function
	.thumb_func
ClearTVShowData:
	push	{r4, r5, r6, r7, lr}
	mov	r3, #0x0
	ldr	r6, .L13
	mov	r5, #0x0
	ldr	r7, .L13+0x4
.L6:
	ldr	r0, [r6]
	lsl	r1, r3, #0x3
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r2, .L13+0x8
	add	r0, r0, r2
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r2, r2, #0x1
	add	r0, r0, r2
	strb	r5, [r0]
	mov	r2, #0x0
	add	r4, r3, #0x1
	add	r3, r1, #0
.L10:
	ldr	r0, [r6]
	add	r1, r2, r3
	add	r0, r0, r7
	add	r0, r0, r1
	strb	r5, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x21
	bls	.L10	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x18
	bls	.L6	@cond_branch
	bl	ClearPokemonNews
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	gSaveBlock1Ptr
	.word	0x244e
	.word	0x244c
.Lfe1:
	.size	 ClearTVShowData,.Lfe1-ClearTVShowData
	.align	2, 0
	.globl	GetRandomActiveShowIdx
	.type	 GetRandomActiveShowIdx,function
	.thumb_func
GetRandomActiveShowIdx:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x5
	ldr	r1, .L35
	ldr	r0, [r1]
	mov	r2, #0x94
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L17	@cond_branch
	add	r3, r1, #0
	sub	r2, r2, #0xb4
.L18:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x17
	bhi	.L17	@cond_branch
	ldr	r0, [r3]
	lsl	r1, r4, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L18	@cond_branch
.L17:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	ldr	r6, .L35
.L22:
	ldr	r1, [r6]
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r4, r0, #0x2
	add	r1, r1, r4
	ldr	r0, .L35+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	GetTVChannelByShowType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	beq	.L25	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L35+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	b	.L34
.L36:
	.align	2, 0
.L35:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	0x244d
.L25:
	ldr	r2, .L37
	add	r0, r4, r2
	ldr	r1, [r6]
	add	r1, r1, r0
	ldrh	r0, [r1, #0x16]
	cmp	r0, #0
	bne	.L27	@cond_branch
	ldrb	r0, [r1, #0x1]
.L34:
	cmp	r0, #0x1
	bne	.L27	@cond_branch
	add	r0, r5, #0
	b	.L33
.L38:
	.align	2, 0
.L37:
	.word	0x244c
.L27:
	cmp	r5, #0
	bne	.L29	@cond_branch
	mov	r5, #0x17
	b	.L24
.L29:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L24:
	cmp	r5, r7
	bne	.L22	@cond_branch
	mov	r0, #0xff
.L33:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetRandomActiveShowIdx,.Lfe2-GetRandomActiveShowIdx
	.align	2, 0
	.globl	FindAnyTVShowOnTheAir
	.type	 FindAnyTVShowOnTheAir,function
	.thumb_func
FindAnyTVShowOnTheAir:
	push	{lr}
	bl	GetRandomActiveShowIdx
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	bne	.L40	@cond_branch
	mov	r0, #0xff
	b	.L42
.L40:
	ldr	r0, .L43
	ldr	r2, [r0]
	ldr	r3, .L43+0x4
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L41	@cond_branch
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r2, r0
	ldr	r2, .L43+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L41	@cond_branch
	bl	FindFirstActiveTVShowThatIsNotAMassOutbreak
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L42
.L44:
	.align	2, 0
.L43:
	.word	gSaveBlock1Ptr
	.word	0x2810
	.word	0x244c
.L41:
	add	r0, r1, #0
.L42:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 FindAnyTVShowOnTheAir,.Lfe3-FindAnyTVShowOnTheAir
	.align	2, 0
	.globl	UpdateTVScreensOnMap
	.type	 UpdateTVScreensOnMap,function
	.thumb_func
UpdateTVScreensOnMap:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L56
	bl	FlagSet
	bl	CheckForBigMovieOrEmergencyNewsOnTV
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L55	@cond_branch
	cmp	r0, #0x2
	beq	.L46	@cond_branch
	ldr	r0, .L56+0x4
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0xd
	bne	.L50	@cond_branch
.L55:
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
	b	.L46
.L57:
	.align	2, 0
.L56:
	.word	0x891
	.word	gSaveBlock1Ptr
.L50:
	ldr	r0, .L58
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
	bl	FindAnyTVShowOnTheAir
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L53	@cond_branch
	bl	FindAnyTVNewsOnTheAir
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L53	@cond_branch
	bl	IsTVShowInSearchOfTrainersAiring
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
.L53:
	ldr	r0, .L58+0x4
	bl	FlagClear
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
.L46:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	0x892
	.word	0x891
.Lfe4:
	.size	 UpdateTVScreensOnMap,.Lfe4-UpdateTVScreensOnMap
	.align	2, 0
	.globl	SetTVMetatilesOnMap
	.type	 SetTVMetatilesOnMap,function
	.thumb_func
SetTVMetatilesOnMap:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r0
	mov	sl, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r5, #0x0
	cmp	r5, sl
	bge	.L62	@cond_branch
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r0, r1, #0
	mov	r8, r2
	mov	r1, r8
	orr	r1, r1, r0
	mov	r8, r1
.L64:
	mov	r4, #0x0
	add	r7, r5, #0x1
	cmp	r4, r9
	bge	.L63	@cond_branch
	mov	r0, r8
	lsl	r6, r0, #0x10
.L68:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileBehaviorAt
	cmp	r0, #0x86
	bne	.L67	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	lsr	r2, r6, #0x10
	bl	MapGridSetMetatileIdAt
.L67:
	add	r4, r4, #0x1
	cmp	r4, r9
	blt	.L68	@cond_branch
.L63:
	add	r5, r7, #0
	cmp	r5, sl
	blt	.L64	@cond_branch
.L62:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 SetTVMetatilesOnMap,.Lfe5-SetTVMetatilesOnMap
	.align	2, 0
	.globl	TurnOffTVScreen
	.type	 TurnOffTVScreen,function
	.thumb_func
TurnOffTVScreen:
	push	{lr}
	ldr	r1, .L73
	ldr	r0, [r1]
	ldr	r1, [r1, #0x4]
	mov	r2, #0x2
	bl	SetTVMetatilesOnMap
	bl	DrawWholeMapView
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	gBackupMapLayout
.Lfe6:
	.size	 TurnOffTVScreen,.Lfe6-TurnOffTVScreen
	.align	2, 0
	.globl	TurnOnTVScreen
	.type	 TurnOnTVScreen,function
	.thumb_func
TurnOnTVScreen:
	push	{lr}
	ldr	r1, .L76
	ldr	r0, [r1]
	ldr	r1, [r1, #0x4]
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
	bl	DrawWholeMapView
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	gBackupMapLayout
.Lfe7:
	.size	 TurnOnTVScreen,.Lfe7-TurnOnTVScreen
	.align	2, 0
	.globl	GetSelectedTVShow
	.type	 GetSelectedTVShow,function
	.thumb_func
GetSelectedTVShow:
	ldr	r0, .L79
	ldr	r1, [r0]
	ldr	r0, .L79+0x4
	ldrh	r2, [r0]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L79+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	bx	lr
.L80:
	.align	2, 0
.L79:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
.Lfe8:
	.size	 GetSelectedTVShow,.Lfe8-GetSelectedTVShow
	.align	2, 0
	.globl	FindFirstActiveTVShowThatIsNotAMassOutbreak
	.type	 FindFirstActiveTVShowThatIsNotAMassOutbreak,function
	.thumb_func
FindFirstActiveTVShowThatIsNotAMassOutbreak:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r0, .L89
	ldr	r3, [r0]
.L85:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r3, r0
	ldr	r4, .L89+0x4
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L84	@cond_branch
	cmp	r0, #0x29
	beq	.L84	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L84	@cond_branch
	add	r0, r2, #0
	b	.L88
.L90:
	.align	2, 0
.L89:
	.word	gSaveBlock1Ptr
	.word	0x244c
.L84:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L85	@cond_branch
	mov	r0, #0xff
.L88:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 FindFirstActiveTVShowThatIsNotAMassOutbreak,.Lfe9-FindFirstActiveTVShowThatIsNotAMassOutbreak
	.align	2, 0
	.globl	GetNextActiveShowIfMassOutbreak
	.type	 GetNextActiveShowIfMassOutbreak,function
	.thumb_func
GetNextActiveShowIfMassOutbreak:
	push	{lr}
	ldr	r3, .L95
	ldr	r2, .L95+0x4
	ldrh	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L95+0x8
	add	r0, r0, r1
	ldr	r3, [r3]
	add	r0, r3, r0
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L92	@cond_branch
	ldr	r1, .L95+0xc
	add	r0, r3, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L92	@cond_branch
	bl	FindFirstActiveTVShowThatIsNotAMassOutbreak
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L94
.L96:
	.align	2, 0
.L95:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	0x2810
.L92:
	ldrb	r0, [r2]
.L94:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 GetNextActiveShowIfMassOutbreak,.Lfe10-GetNextActiveShowIfMassOutbreak
	.align	2, 0
	.globl	ResetGabbyAndTy
	.type	 ResetGabbyAndTy,function
	.thumb_func
ResetGabbyAndTy:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	ldr	r3, .L98
	ldr	r2, [r3]
	ldr	r1, .L98+0x4
	add	r0, r2, r1
	mov	r4, #0x0
	mov	sl, r4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r4, .L98+0x8
	add	r0, r2, r4
	strh	r1, [r0]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	ldr	r0, .L98+0xc
	add	r1, r2, r0
	ldr	r0, .L98+0x10
	strh	r0, [r1]
	add	r4, r4, #0x6
	add	r2, r2, r4
	ldrb	r1, [r2]
	mov	r0, #0x2
	neg	r0, r0
	mov	r9, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	mov	r8, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r6, #0x5
	neg	r6, r6
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r5, #0x9
	neg	r5, r5
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r0, #0x1f
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r3]
	ldr	r2, .L98+0x14
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r4, r9
	and	r4, r4, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r4, r8
	and	r4, r4, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r0, r0, r2
	ldrb	r1, [r0]
	and	r6, r6, r1
	strb	r6, [r0]
	ldr	r0, [r3]
	add	r0, r0, r2
	ldrb	r1, [r0]
	and	r5, r5, r1
	strb	r5, [r0]
	ldr	r1, [r3]
	add	r1, r1, r2
	ldrb	r2, [r1]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r3]
	ldr	r1, .L98+0x18
	add	r0, r0, r1
	mov	r4, sl
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r1, r1, #0x1
	add	r0, r0, r1
	strb	r4, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L99:
	.align	2, 0
.L98:
	.word	gSaveBlock1Ptr
	.word	0x2824
	.word	0x2826
	.word	0x282a
	.word	0xffff
	.word	0x282f
	.word	0x282c
.Lfe11:
	.size	 ResetGabbyAndTy,.Lfe11-ResetGabbyAndTy
	.align	2, 0
	.globl	GabbyAndTyBeforeInterview
	.type	 GabbyAndTyBeforeInterview,function
	.thumb_func
GabbyAndTyBeforeInterview:
	push	{r4, lr}
	ldr	r3, .L119
	ldr	r2, [r3]
	ldr	r0, .L119+0x4
	mov	ip, r0
	ldrh	r1, [r0, #0x6]
	ldr	r4, .L119+0x8
	add	r0, r2, r4
	strh	r1, [r0]
	mov	r0, ip
	ldrh	r1, [r0, #0x26]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	mov	r0, ip
	ldrh	r1, [r0, #0x22]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	ldr	r0, .L119+0xc
	add	r2, r2, r0
	ldrb	r1, [r2]
	add	r0, r1, #0
	add	r4, r3, #0
	cmp	r0, #0xff
	beq	.L101	@cond_branch
	add	r0, r1, #0x1
	strb	r0, [r2]
.L101:
	ldr	r2, [r4]
	mov	r0, ip
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x1f
	ldr	r0, .L119+0x10
	add	r2, r2, r0
	lsr	r1, r1, #0x1f
	ldrb	r3, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r1, ip
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L102	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L119+0x10
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r2, #0x2
	orr	r1, r1, r2
	b	.L116
.L120:
	.align	2, 0
.L119:
	.word	gSaveBlock1Ptr
	.word	gBattleResults
	.word	0x2824
	.word	0x282d
	.word	0x282e
.L102:
	ldr	r0, [r4]
	ldr	r1, .L121
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r1, #0x3
	neg	r1, r1
	and	r1, r1, r2
.L116:
	strb	r1, [r0]
	mov	r1, ip
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L104	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L121
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	b	.L117
.L122:
	.align	2, 0
.L121:
	.word	0x282e
.L104:
	ldr	r0, [r4]
	ldr	r1, .L123
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
.L117:
	strb	r1, [r0]
	mov	r0, ip
	ldrb	r1, [r0, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L106	@cond_branch
	mov	r1, #0x0
	mov	r0, ip
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L106	@cond_branch
.L109:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x19
	bhi	.L113	@cond_branch
	mov	r0, ip
	add	r0, r0, #0x36
	add	r0, r1, r0
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L109	@cond_branch
	ldr	r0, [r4]
	ldr	r4, .L123
	add	r0, r0, r4
	b	.L118
.L124:
	.align	2, 0
.L123:
	.word	0x282e
.L106:
	ldr	r0, [r4]
	ldr	r1, .L125
	add	r0, r0, r1
.L118:
	ldrb	r1, [r0]
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0]
.L113:
	bl	TakeTVShowInSearchOfTrainersOffTheAir
	ldr	r0, .L125+0x4
	ldr	r0, [r0]
	ldr	r4, .L125+0x8
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L114	@cond_branch
	mov	r0, #0x1
	bl	FlagSet
.L114:
	pop	{r4}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	0x282e
	.word	gSaveBlock1Ptr
	.word	0x2828
.Lfe12:
	.size	 GabbyAndTyBeforeInterview,.Lfe12-GabbyAndTyBeforeInterview
	.align	2, 0
	.globl	GabbyAndTyAfterInterview
	.type	 GabbyAndTyAfterInterview,function
	.thumb_func
GabbyAndTyAfterInterview:
	push	{r4, r5, r6, lr}
	ldr	r5, .L128
	ldr	r2, [r5]
	ldr	r6, .L128+0x4
	add	r0, r2, r6
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1f
	ldr	r4, .L128+0x8
	add	r2, r2, r4
	lsr	r1, r1, #0x1f
	ldrb	r3, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r2, [r5]
	add	r0, r2, r6
	ldrb	r0, [r0]
	add	r2, r2, r4
	mov	r1, #0x2
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r2, [r5]
	add	r0, r2, r6
	ldrb	r0, [r0]
	add	r2, r2, r4
	mov	r1, #0x4
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r2, [r5]
	add	r0, r2, r6
	ldrb	r0, [r0]
	add	r2, r2, r4
	mov	r1, #0x8
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x9
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, [r5]
	add	r1, r1, r6
	ldrb	r0, [r1]
	mov	r2, #0x10
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	ldr	r1, .L128+0xc
	ldrb	r1, [r1, #0x14]
	ldr	r2, .L128+0x10
	add	r0, r0, r2
	strb	r1, [r0]
	mov	r0, #0x6
	bl	IncrementGameStat
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gSaveBlock1Ptr
	.word	0x282e
	.word	0x282f
	.word	gMapHeader
	.word	0x282c
.Lfe13:
	.size	 GabbyAndTyAfterInterview,.Lfe13-GabbyAndTyAfterInterview
	.align	2, 0
	.globl	TakeTVShowInSearchOfTrainersOffTheAir
	.type	 TakeTVShowInSearchOfTrainersOffTheAir,function
	.thumb_func
TakeTVShowInSearchOfTrainersOffTheAir:
	ldr	r0, .L131
	ldr	r1, [r0]
	ldr	r0, .L131+0x4
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	bx	lr
.L132:
	.align	2, 0
.L131:
	.word	gSaveBlock1Ptr
	.word	0x282e
.Lfe14:
	.size	 TakeTVShowInSearchOfTrainersOffTheAir,.Lfe14-TakeTVShowInSearchOfTrainersOffTheAir
	.align	2, 0
	.globl	GabbyAndTyGetBattleNum
	.type	 GabbyAndTyGetBattleNum,function
	.thumb_func
GabbyAndTyGetBattleNum:
	push	{lr}
	ldr	r0, .L136
	ldr	r0, [r0]
	ldr	r2, .L136+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0x5
	bls	.L135	@cond_branch
	ldrb	r0, [r1]
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, #0x6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L135:
	pop	{r1}
	bx	r1
.L137:
	.align	2, 0
.L136:
	.word	gSaveBlock1Ptr
	.word	0x282d
.Lfe15:
	.size	 GabbyAndTyGetBattleNum,.Lfe15-GabbyAndTyGetBattleNum
	.align	2, 0
	.globl	IsTVShowInSearchOfTrainersAiring
	.type	 IsTVShowInSearchOfTrainersAiring,function
	.thumb_func
IsTVShowInSearchOfTrainersAiring:
	ldr	r0, .L139
	ldr	r0, [r0]
	ldr	r1, .L139+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1f
	bx	lr
.L140:
	.align	2, 0
.L139:
	.word	gSaveBlock1Ptr
	.word	0x282e
.Lfe16:
	.size	 IsTVShowInSearchOfTrainersAiring,.Lfe16-IsTVShowInSearchOfTrainersAiring
	.align	2, 0
	.globl	GabbyAndTyGetLastQuote
	.type	 GabbyAndTyGetLastQuote,function
	.thumb_func
GabbyAndTyGetLastQuote:
	push	{r4, r5, lr}
	ldr	r5, .L144
	ldr	r0, [r5]
	ldr	r2, .L144+0x4
	add	r1, r0, r2
	ldrh	r0, [r1]
	ldr	r4, .L144+0x8
	cmp	r0, r4
	beq	.L142	@cond_branch
	ldr	r0, .L144+0xc
	ldrh	r1, [r1]
	bl	CopyEasyChatWord
	ldr	r1, [r5]
	ldr	r0, .L144+0x4
	add	r1, r1, r0
	ldrh	r2, [r1]
	add	r0, r4, #0
	orr	r0, r0, r2
	strh	r0, [r1]
	mov	r0, #0x1
	b	.L143
.L145:
	.align	2, 0
.L144:
	.word	gSaveBlock1Ptr
	.word	0x282a
	.word	0xffff
	.word	gStringVar1
.L142:
	mov	r0, #0x0
.L143:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 GabbyAndTyGetLastQuote,.Lfe17-GabbyAndTyGetLastQuote
	.align	2, 0
	.globl	GabbyAndTyGetLastBattleTrivia
	.type	 GabbyAndTyGetLastBattleTrivia,function
	.thumb_func
GabbyAndTyGetLastBattleTrivia:
	push	{lr}
	ldr	r0, .L152
	ldr	r0, [r0]
	ldr	r1, .L152+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L147	@cond_branch
	mov	r0, #0x1
	b	.L151
.L153:
	.align	2, 0
.L152:
	.word	gSaveBlock1Ptr
	.word	0x282f
.L147:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L148	@cond_branch
	mov	r0, #0x2
	b	.L151
.L148:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L149	@cond_branch
	mov	r0, #0x3
	b	.L151
.L149:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L150	@cond_branch
	mov	r0, #0x0
	b	.L151
.L150:
	mov	r0, #0x4
.L151:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 GabbyAndTyGetLastBattleTrivia,.Lfe18-GabbyAndTyGetLastBattleTrivia
	.align	2, 0
	.globl	GabbyAndTySetScriptVarsToObjectEventLocalIds
	.type	 GabbyAndTySetScriptVarsToObjectEventLocalIds,function
	.thumb_func
GabbyAndTySetScriptVarsToObjectEventLocalIds:
	push	{lr}
	bl	GabbyAndTyGetBattleNum
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x7
	bhi	.L155	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L167
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L168:
	.align	2, 0
.L167:
	.word	.L164
	.align	2, 0
	.align	2, 0
.L164:
	.word	.L156
	.word	.L157
	.word	.L158
	.word	.L159
	.word	.L160
	.word	.L161
	.word	.L162
	.word	.L163
.L156:
	ldr	r1, .L169
	mov	r0, #0xe
	strh	r0, [r1]
	ldr	r1, .L169+0x4
	mov	r0, #0xd
	b	.L166
.L170:
	.align	2, 0
.L169:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L157:
	ldr	r1, .L171
	mov	r0, #0x5
	strh	r0, [r1]
	ldr	r1, .L171+0x4
	mov	r0, #0x6
	b	.L166
.L172:
	.align	2, 0
.L171:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L158:
	ldr	r1, .L173
	mov	r0, #0x12
	strh	r0, [r1]
	ldr	r1, .L173+0x4
	mov	r0, #0x11
	b	.L166
.L174:
	.align	2, 0
.L173:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L159:
	ldr	r1, .L175
	mov	r0, #0x15
	strh	r0, [r1]
	ldr	r1, .L175+0x4
	mov	r0, #0x16
	b	.L166
.L176:
	.align	2, 0
.L175:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L160:
	ldr	r1, .L177
	mov	r0, #0x8
	strh	r0, [r1]
	ldr	r1, .L177+0x4
	mov	r0, #0x9
	b	.L166
.L178:
	.align	2, 0
.L177:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L161:
	ldr	r1, .L179
	mov	r0, #0x13
	strh	r0, [r1]
	ldr	r1, .L179+0x4
	mov	r0, #0x14
	b	.L166
.L180:
	.align	2, 0
.L179:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L162:
	ldr	r1, .L181
	mov	r0, #0x17
	strh	r0, [r1]
	ldr	r1, .L181+0x4
	mov	r0, #0x18
	b	.L166
.L182:
	.align	2, 0
.L181:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L163:
	ldr	r1, .L183
	mov	r0, #0xa
	strh	r0, [r1]
	ldr	r1, .L183+0x4
	mov	r0, #0xb
.L166:
	strh	r0, [r1]
.L155:
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.Lfe19:
	.size	 GabbyAndTySetScriptVarsToObjectEventLocalIds,.Lfe19-GabbyAndTySetScriptVarsToObjectEventLocalIds
	.align	2, 0
	.globl	InterviewAfter
	.type	 InterviewAfter,function
	.thumb_func
InterviewAfter:
	push	{lr}
	ldr	r0, .L196
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x7
	bhi	.L186	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L196+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L197:
	.align	2, 0
.L196:
	.word	gSpecialVar_0x8005
	.word	.L194
	.align	2, 0
	.align	2, 0
.L194:
	.word	.L187
	.word	.L188
	.word	.L189
	.word	.L190
	.word	.L186
	.word	.L191
	.word	.L192
	.word	.L193
.L187:
	bl	InterviewAfter_FanClubLetter
	b	.L186
.L188:
	bl	InterviewAfter_RecentHappenings
	b	.L186
.L189:
	bl	InterviewAfter_PkmnFanClubOpinions
	b	.L186
.L190:
	bl	InterviewAfter_DummyShow4
	b	.L186
.L191:
	bl	InterviewAfter_BravoTrainerPokemonProfile
	b	.L186
.L192:
	bl	InterviewAfter_BravoTrainerBattleTowerProfile
	b	.L186
.L193:
	bl	InterviewAfter_ContestLiveUpdates
.L186:
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 InterviewAfter,.Lfe20-InterviewAfter
	.align	2, 0
	.globl	PutPokemonTodayCaughtOnAir
	.type	 PutPokemonTodayCaughtOnAir,function
	.thumb_func
PutPokemonTodayCaughtOnAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r4, #0x0
	bl	sub_80EED88
	bl	sub_80ED718
	ldr	r5, .L218
	ldrh	r0, [r5, #0x28]
	cmp	r0, #0
	bne	.L199	@cond_branch
	bl	PutPokemonTodayFailedOnTheAir
	b	.L200
.L219:
	.align	2, 0
.L218:
	.word	gBattleResults
.L199:
	bl	UpdateWorldOfMastersAndPutItOnTheAir
	ldr	r0, .L220
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1580
	b	.L200	@long jump
.LCB1580:
	ldrh	r1, [r5, #0x28]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r1, .L220+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x2a
	bl	StringCompare
	cmp	r0, #0
	bne	.LCB1593
	b	.L200	@long jump
.LCB1593:
	ldr	r0, .L220+0x8
	ldr	r0, [r0]
	ldr	r1, .L220+0xc
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L220+0x10
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L200	@cond_branch
	mov	r0, #0x15
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L200	@cond_branch
	mov	r2, #0x0
	add	r1, r5, #0
	add	r1, r1, #0x36
.L206:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x19
	bls	.L206	@cond_branch
	cmp	r4, #0
	bne	.L209	@cond_branch
	ldrb	r1, [r5, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L200	@cond_branch
.L209:
	mov	r4, #0x0
	ldr	r2, .L220+0x8
	ldr	r0, .L220+0x10
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L220+0xc
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	mov	r0, #0x15
	strb	r0, [r6]
	strb	r4, [r6, #0x1]
	ldrb	r1, [r5, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L210	@cond_branch
	mov	r4, #0x1
	mov	r0, #0x1
	add	r3, r6, #0
	add	r3, r3, #0x13
	ldr	r1, .L220+0x14
	mov	r8, r1
	add	r7, r6, #0x4
	b	.L211
.L221:
	.align	2, 0
.L220:
	.word	0xffff
	.word	gSpeciesNames
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
.L210:
	mov	r2, #0x0
	ldr	r0, .L222
	mov	ip, r0
	add	r3, r6, #0
	add	r3, r3, #0x13
	ldr	r1, .L222+0x4
	mov	r8, r1
	add	r7, r6, #0x4
	add	r1, r5, #0
	add	r1, r1, #0x36
.L215:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x19
	bls	.L215	@cond_branch
	cmp	r4, #0xff
	bls	.L217	@cond_branch
	mov	r4, #0xff
.L217:
	mov	r1, ip
	ldrh	r0, [r1]
.L211:
	strb	r4, [r6, #0x12]
	strb	r0, [r6, #0xf]
	mov	r0, r8
	ldr	r1, [r0]
	add	r0, r3, #0
	bl	StringCopy
	ldr	r4, .L222+0x8
	add	r0, r7, #0
	add	r1, r4, #0
	bl	StringCopy
	add	r0, r7, #0
	bl	sub_81DB604
	add	r5, r0, #0
	add	r0, r7, #0
	bl	StripExtCtrlCodes
	sub	r4, r4, #0x2a
	ldrh	r0, [r4, #0x28]
	strh	r0, [r6, #0x10]
	add	r0, r6, #0
	bl	tv_store_id_3x
	ldr	r0, .L222+0xc
	ldrb	r0, [r0]
	strb	r0, [r6, #0x2]
	strb	r5, [r6, #0x3]
.L200:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gLastUsedItem
	.word	gSaveBlock2Ptr
	.word	gBattleResults+0x2a
	.word	gGameLanguage
.Lfe21:
	.size	 PutPokemonTodayCaughtOnAir,.Lfe21-PutPokemonTodayCaughtOnAir
	.align	2, 0
	.globl	UpdateWorldOfMastersAndPutItOnTheAir
	.type	 UpdateWorldOfMastersAndPutItOnTheAir,function
	.thumb_func
UpdateWorldOfMastersAndPutItOnTheAir:
	push	{r4, lr}
	ldr	r0, .L226
	ldr	r1, [r0]
	ldr	r0, .L226+0x4
	add	r4, r1, r0
	ldrb	r0, [r4]
	cmp	r0, #0x19
	beq	.L225	@cond_branch
	ldr	r2, .L226+0x8
	add	r0, r1, r2
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	mov	r0, #0x5
	bl	GetGameStat
	strh	r0, [r4, #0x6]
	mov	r0, #0x19
	strb	r0, [r4]
.L225:
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	ldr	r1, .L226+0xc
	ldrh	r0, [r1, #0x28]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0x8]
	ldr	r0, .L226+0x10
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0xa]
	pop	{r4}
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
	.word	gBattleResults
	.word	gMapHeader
.Lfe22:
	.size	 UpdateWorldOfMastersAndPutItOnTheAir,.Lfe22-UpdateWorldOfMastersAndPutItOnTheAir
	.align	2, 0
	.globl	PutPokemonTodayFailedOnTheAir
	.type	 PutPokemonTodayFailedOnTheAir,function
	.thumb_func
PutPokemonTodayFailedOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L239
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L229	@cond_branch
	mov	r1, #0x0
	mov	r5, #0x0
	ldr	r2, .L239+0x4
.L233:
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x19
	bls	.L233	@cond_branch
	cmp	r5, #0xff
	bls	.L235	@cond_branch
	mov	r5, #0xff
.L235:
	cmp	r5, #0x2
	bls	.L229	@cond_branch
	ldr	r0, .L239+0x8
	mov	r8, r0
	ldrb	r0, [r0]
	cmp	r0, #0x6
	beq	.L237	@cond_branch
	cmp	r0, #0x1
	bne	.L229	@cond_branch
.L237:
	ldr	r7, .L239+0xc
	ldr	r0, [r7]
	ldr	r6, .L239+0x10
	add	r0, r0, r6
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L239+0x14
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L229	@cond_branch
	mov	r0, #0x17
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L229	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r4, [r7]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x17
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L239+0x18
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0xc]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r4, #0xe]
	strb	r5, [r4, #0x10]
	mov	r1, r8
	ldrb	r0, [r1]
	strb	r0, [r4, #0x11]
	ldr	r0, .L239+0x1c
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0x12]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L239+0x20
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L239+0x24
	ldrb	r0, [r0]
	strb	r0, [r4, #0x2]
.L229:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L240:
	.align	2, 0
.L239:
	.word	0xffff
	.word	gBattleResults+0x36
	.word	gBattleOutcome
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gBattleResults
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe23:
	.size	 PutPokemonTodayFailedOnTheAir,.Lfe23-PutPokemonTodayFailedOnTheAir
	.align	2, 0
	.globl	tv_store_id_3x
	.type	 tv_store_id_3x,function
	.thumb_func
tv_store_id_3x:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerIDAsU32
	strb	r0, [r4, #0x1e]
	lsr	r2, r0, #0x8
	strb	r2, [r4, #0x1f]
	add	r1, r4, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	add	r1, r1, #0x1
	strb	r2, [r1]
	add	r1, r1, #0x1
	strb	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x23
	strb	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 tv_store_id_3x,.Lfe24-tv_store_id_3x
	.align	2, 0
	.globl	tv_store_id_2x
	.type	 tv_store_id_2x,function
	.thumb_func
tv_store_id_2x:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerIDAsU32
	add	r1, r4, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	lsr	r1, r0, #0x8
	add	r2, r4, #0
	add	r2, r2, #0x21
	strb	r1, [r2]
	add	r2, r2, #0x1
	strb	r0, [r2]
	add	r0, r4, #0
	add	r0, r0, #0x23
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 tv_store_id_2x,.Lfe25-tv_store_id_2x
	.align	2, 0
	.type	 InterviewAfter_ContestLiveUpdates,function
	.thumb_func
InterviewAfter_ContestLiveUpdates:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L245
	mov	r8, r0
	ldr	r7, [r0]
	ldr	r1, .L245+0x4
	add	r6, r7, r1
	ldrb	r1, [r6]
	cmp	r1, #0x8
	bne	.L244	@cond_branch
	ldr	r0, .L245+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r5, .L245+0xc
	add	r4, r4, r5
	add	r4, r7, r4
	strb	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x14
	ldr	r1, .L245+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L245+0x14
	ldrh	r0, [r0]
	strb	r0, [r4, #0x1c]
	ldr	r0, .L245+0x18
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L245+0x1c
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x12]
	ldrh	r0, [r6, #0x2]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r6, #0xc]
	strb	r0, [r4, #0xc]
	ldrb	r0, [r6, #0xd]
	strb	r0, [r4, #0xd]
	ldrb	r0, [r6, #0xe]
	strb	r0, [r4, #0xe]
	ldrh	r0, [r6, #0x10]
	strh	r0, [r4, #0x10]
	ldrb	r0, [r6, #0xf]
	strb	r0, [r4, #0xf]
	add	r0, r4, #0x4
	ldr	r2, .L245+0x20
	add	r1, r7, r2
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L245+0x24
	ldrb	r0, [r0]
	strb	r0, [r4, #0x1d]
	ldrb	r0, [r6, #0x1e]
	strb	r0, [r4, #0x1e]
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r5
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L244:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_ContestCategory
	.word	gContestMonPartyIndex
	.word	gPlayerParty
	.word	0x27b0
	.word	gGameLanguage
.Lfe26:
	.size	 InterviewAfter_ContestLiveUpdates,.Lfe26-InterviewAfter_ContestLiveUpdates
	.align	2, 0
	.globl	PutBattleUpdateOnTheAir
	.type	 PutBattleUpdateOnTheAir,function
	.thumb_func
PutBattleUpdateOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	sl, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r9, r2
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	r8, r3
	ldr	r6, .L257
	ldr	r0, [r6]
	ldr	r5, .L257+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r4, .L257+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L248	@cond_branch
	mov	r0, #0xa
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L257+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L248	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r6]
	add	r4, r1, r0
	mov	r0, #0xa
	strb	r0, [r4]
	mov	r5, #0x1
	strb	r5, [r4, #0x1]
	add	r0, r4, #0x4
	ldr	r1, .L257+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L257+0x14
	ldr	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L250	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L252	@cond_branch
	strb	r5, [r4, #0x18]
	b	.L251
.L258:
	.align	2, 0
.L257:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSpecialVar_Result
	.word	gSaveBlock2Ptr
	.word	gBattleTypeFlags
.L250:
	mov	r0, #0x2
.L252:
	strb	r0, [r4, #0x18]
.L251:
	mov	r0, sl
	strh	r0, [r4, #0x14]
	mov	r0, r9
	strh	r0, [r4, #0x16]
	mov	r0, r8
	strh	r0, [r4, #0x2]
	lsl	r0, r7, #0x3
	sub	r0, r0, r7
	lsl	r5, r0, #0x2
	ldr	r6, .L259
	add	r1, r5, r6
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r4, #0
	add	r0, r0, #0xc
	mov	r1, sp
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L259+0x4
	ldrb	r0, [r0]
	strb	r0, [r4, #0x19]
	cmp	r0, #0x1
	beq	.L255	@cond_branch
	add	r0, r6, r5
	ldrh	r0, [r0, #0x12]
	cmp	r0, #0x1
	bne	.L254	@cond_branch
.L255:
	mov	r0, #0x1
.L254:
	strb	r0, [r4, #0x1a]
.L248:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gLinkPlayers+0x8
	.word	gGameLanguage
.Lfe27:
	.size	 PutBattleUpdateOnTheAir,.Lfe27-PutBattleUpdateOnTheAir
	.align	2, 0
	.globl	Put3CheersForPokeblocksOnTheAir
	.type	 Put3CheersForPokeblocksOnTheAir,function
	.thumb_func
Put3CheersForPokeblocksOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x24
	mov	sl, r0
	ldr	r0, [sp, #0x44]
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r3, [sp, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r0, .L269
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r7, .L269+0x4
	add	r0, r0, r7
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r4, .L269+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L268	@cond_branch
	mov	r0, #0x9
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L269+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L263	@cond_branch
.L268:
	mov	r0, #0x0
	b	.L267
.L270:
	.align	2, 0
.L269:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSpecialVar_Result
.L263:
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	mov	r2, r8
	ldr	r1, [r2]
	add	r4, r1, r0
	mov	r0, #0x9
	strb	r0, [r4]
	mov	r7, #0x1
	strb	r7, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0xc
	ldr	r1, .L271
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, sp
	mov	r1, sl
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r4, #0x4
	mov	r1, sp
	bl	StringCopy
	mov	r0, #0x7
	and	r5, r5, r0
	ldrb	r1, [r4, #0x3]
	sub	r0, r0, #0xf
	and	r0, r0, r1
	orr	r0, r0, r5
	mov	r1, #0x3
	and	r6, r6, r1
	lsl	r2, r6, #0x3
	sub	r1, r1, #0x1c
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4, #0x3]
	add	r0, sp, #0x20
	ldrb	r0, [r0]
	strb	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L271+0x4
	ldrb	r0, [r0]
	strb	r0, [r4, #0x14]
	cmp	r0, #0x1
	beq	.L265	@cond_branch
	mov	r1, r9
	cmp	r1, #0x1
	bne	.L264	@cond_branch
.L265:
	strb	r7, [r4, #0x15]
	b	.L266
.L272:
	.align	2, 0
.L271:
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.L264:
	mov	r2, r9
	strb	r2, [r4, #0x15]
.L266:
	mov	r0, #0x1
.L267:
	add	sp, sp, #0x24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 Put3CheersForPokeblocksOnTheAir,.Lfe28-Put3CheersForPokeblocksOnTheAir
	.align	2, 0
	.globl	PutFanClubSpecialOnTheAir
	.type	 PutFanClubSpecialOnTheAir,function
	.thumb_func
PutFanClubSpecialOnTheAir:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x20
	ldr	r6, .L277
	ldr	r0, .L277+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L277+0x8
	add	r0, r0, r1
	ldr	r1, [r6]
	add	r4, r1, r0
	ldr	r0, .L277+0xc
	ldrh	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	strb	r0, [r4, #0x16]
	add	r0, r4, #0x2
	ldr	r1, .L277+0x10
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0xb
	strb	r0, [r4]
	mov	r5, #0x1
	strb	r5, [r4, #0x1]
	bl	GetPlayerIDAsU32
	strb	r0, [r4, #0xa]
	lsr	r0, r0, #0x8
	strb	r0, [r4, #0xb]
	ldr	r1, .L277+0x14
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r4, #0
	add	r0, r0, #0xc
	mov	r1, sp
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L277+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x17]
	cmp	r0, #0x1
	beq	.L275	@cond_branch
	ldr	r0, [r6]
	ldr	r1, .L277+0x1c
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L274	@cond_branch
.L275:
	strb	r5, [r4, #0x18]
	b	.L276
.L278:
	.align	2, 0
.L277:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8006
	.word	0x244c
	.word	gSpecialVar_0x8005
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gGameLanguage
	.word	0x2e20
.L274:
	strb	r0, [r4, #0x18]
.L276:
	add	sp, sp, #0x20
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 PutFanClubSpecialOnTheAir,.Lfe29-PutFanClubSpecialOnTheAir
	.align	2, 0
	.globl	ContestLiveUpdates_Init
	.type	 ContestLiveUpdates_Init,function
	.thumb_func
ContestLiveUpdates_Init:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L281
	ldr	r0, [r5]
	ldr	r4, .L281+0x4
	add	r0, r0, r4
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L281+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L280	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L281+0xc
	add	r0, r0, r1
	strb	r6, [r0, #0xd]
	mov	r1, #0x8
	strb	r1, [r0]
.L280:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	0x27ac
.Lfe30:
	.size	 ContestLiveUpdates_Init,.Lfe30-ContestLiveUpdates_Init
	.align	2, 0
	.globl	ContestLiveUpdates_SetRound2Placing
	.type	 ContestLiveUpdates_SetRound2Placing,function
	.thumb_func
ContestLiveUpdates_SetRound2Placing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L285
	ldr	r0, [r0]
	ldr	r1, .L285+0x4
	add	r4, r0, r1
	ldr	r1, .L285+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L285+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L284	@cond_branch
	strb	r5, [r4, #0xe]
.L284:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L286:
	.align	2, 0
.L285:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
	.word	sCurTVShowSlot
.Lfe31:
	.size	 ContestLiveUpdates_SetRound2Placing,.Lfe31-ContestLiveUpdates_SetRound2Placing
	.align	2, 0
	.globl	ContestLiveUpdates_SetWinnerAppealFlag
	.type	 ContestLiveUpdates_SetWinnerAppealFlag,function
	.thumb_func
ContestLiveUpdates_SetWinnerAppealFlag:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L289
	ldr	r0, [r0]
	ldr	r1, .L289+0x4
	add	r4, r0, r1
	ldr	r1, .L289+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L289+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L288	@cond_branch
	strb	r5, [r4, #0xf]
.L288:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L290:
	.align	2, 0
.L289:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
	.word	sCurTVShowSlot
.Lfe32:
	.size	 ContestLiveUpdates_SetWinnerAppealFlag,.Lfe32-ContestLiveUpdates_SetWinnerAppealFlag
	.align	2, 0
	.globl	ContestLiveUpdates_SetWinnerMoveUsed
	.type	 ContestLiveUpdates_SetWinnerMoveUsed,function
	.thumb_func
ContestLiveUpdates_SetWinnerMoveUsed:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, .L293
	ldr	r0, [r0]
	ldr	r1, .L293+0x4
	add	r4, r0, r1
	ldr	r1, .L293+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L293+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L292	@cond_branch
	strh	r5, [r4, #0x10]
.L292:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L294:
	.align	2, 0
.L293:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
	.word	sCurTVShowSlot
.Lfe33:
	.size	 ContestLiveUpdates_SetWinnerMoveUsed,.Lfe33-ContestLiveUpdates_SetWinnerMoveUsed
	.align	2, 0
	.globl	ContestLiveUpdates_SetLoserData
	.type	 ContestLiveUpdates_SetLoserData,function
	.thumb_func
ContestLiveUpdates_SetLoserData:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	ldr	r0, .L302
	ldr	r4, [r0]
	ldr	r0, .L302+0x4
	add	r5, r4, r0
	ldr	r1, .L302+0x8
	add	r0, r4, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L302+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L296	@cond_branch
	ldr	r2, .L302+0x10
	lsl	r1, r6, #0x6
	add	r0, r1, r2
	ldrh	r0, [r0]
	lsl	r0, r0, #0x15
	lsr	r0, r0, #0x15
	strh	r0, [r5, #0x2]
	ldr	r0, .L302+0x14
	add	r4, r4, r0
	add	r2, r2, #0xd
	add	r1, r1, r2
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	strb	r7, [r5, #0xc]
	add	r1, r6, #0x1
	ldr	r0, .L302+0x18
	ldrb	r0, [r0]
	cmp	r1, r0
	ble	.L297	@cond_branch
	ldr	r0, .L302+0x1c
	ldrh	r0, [r0, #0x1a]
	b	.L299
.L303:
	.align	2, 0
.L302:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gContestMons
	.word	0x27b0
	.word	gNumLinkContestPlayers
	.word	gLinkPlayers
.L297:
	ldr	r0, .L304
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L300	@cond_branch
	ldr	r1, .L304+0x4
	lsl	r0, r6, #0x3
	sub	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0, #0x1a]
	cmp	r0, #0x1
	bne	.L299	@cond_branch
.L300:
	mov	r0, #0x1
.L299:
	strb	r0, [r5, #0x1e]
.L296:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	gGameLanguage
	.word	gLinkPlayers
.Lfe34:
	.size	 ContestLiveUpdates_SetLoserData,.Lfe34-ContestLiveUpdates_SetLoserData
	.align	2, 0
	.type	 InterviewAfter_BravoTrainerPokemonProfile,function
	.thumb_func
InterviewAfter_BravoTrainerPokemonProfile:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L311
	ldr	r6, [r0]
	ldr	r0, .L311+0x4
	add	r5, r6, r0
	ldrb	r2, [r5]
	cmp	r2, #0x6
	bne	.L307	@cond_branch
	ldr	r0, .L311+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L311+0xc
	add	r0, r0, r1
	add	r4, r6, r0
	strb	r2, [r4]
	mov	r7, #0x1
	strb	r7, [r4, #0x1]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	add	r0, r0, #0x16
	ldr	r1, .L311+0x10
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	add	r0, r0, #0x8
	ldr	r2, .L311+0x14
	add	r1, r6, r2
	bl	StringCopy
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	ldrb	r2, [r4, #0x13]
	mov	r3, #0x8
	neg	r3, r3
	add	r1, r3, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x13]
	ldrb	r2, [r5, #0x13]
	mov	r0, #0x18
	and	r0, r0, r2
	mov	r2, #0x19
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r4, #0x13]
	ldrh	r0, [r5, #0x14]
	strh	r0, [r4, #0x14]
	ldrb	r0, [r5, #0x13]
	mov	r1, #0x60
	and	r1, r1, r0
	mov	r0, #0x61
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x13]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4, #0x13]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L311+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x1e]
	cmp	r0, #0x1
	beq	.L309	@cond_branch
	ldrb	r0, [r5, #0x1f]
	cmp	r0, #0x1
	bne	.L308	@cond_branch
.L309:
	strb	r7, [r4, #0x1f]
	b	.L310
.L312:
	.align	2, 0
.L311:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gSaveBlock2Ptr
	.word	0x27b4
	.word	gGameLanguage
.L308:
	strb	r0, [r4, #0x1f]
.L310:
	ldr	r0, .L313
	ldr	r0, [r0]
	ldr	r1, .L313+0x4
	add	r0, r0, r1
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L307:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	gSaveBlock1Ptr
	.word	0x244c
.Lfe35:
	.size	 InterviewAfter_BravoTrainerPokemonProfile,.Lfe35-InterviewAfter_BravoTrainerPokemonProfile
	.align	2, 0
	.globl	BravoTrainerPokemonProfile_BeforeInterview1
	.type	 BravoTrainerPokemonProfile_BeforeInterview1,function
	.thumb_func
BravoTrainerPokemonProfile_BeforeInterview1:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r4, .L317
	ldr	r0, [r4]
	ldr	r1, .L317+0x4
	add	r5, r0, r1
	bl	InterviewBefore_BravoTrainerPkmnProfile
	ldr	r0, [r4]
	ldr	r1, .L317+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L317+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L316	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L317+0x8
	add	r0, r0, r1
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	strh	r6, [r5, #0x14]
	mov	r0, #0x6
	strb	r0, [r5]
.L316:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
	.word	sCurTVShowSlot
.Lfe36:
	.size	 BravoTrainerPokemonProfile_BeforeInterview1,.Lfe36-BravoTrainerPokemonProfile_BeforeInterview1
	.align	2, 0
	.globl	BravoTrainerPokemonProfile_BeforeInterview2
	.type	 BravoTrainerPokemonProfile_BeforeInterview2,function
	.thumb_func
BravoTrainerPokemonProfile_BeforeInterview2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L321
	ldr	r4, [r0]
	ldr	r0, .L321+0x4
	add	r7, r4, r0
	ldr	r1, .L321+0x8
	add	r0, r4, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L321+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L320	@cond_branch
	mov	r3, #0x3
	add	r0, r5, #0
	and	r0, r0, r3
	lsl	r0, r0, #0x5
	ldrb	r1, [r7, #0x13]
	mov	r2, #0x61
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r7, #0x13]
	ldr	r0, .L321+0x10
	ldrb	r0, [r0]
	mov	r1, #0x7
	and	r1, r1, r0
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r7, #0x13]
	ldr	r1, .L321+0x14
	ldrb	r1, [r1]
	and	r3, r3, r1
	lsl	r3, r3, #0x3
	mov	r1, #0x19
	neg	r1, r1
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r7, #0x13]
	ldr	r0, .L321+0x18
	mov	r8, r0
	ldrb	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L321+0x1c
	add	r0, r0, r5
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x2]
	mov	r1, r8
	ldrb	r0, [r1]
	mul	r0, r0, r6
	add	r0, r0, r5
	ldr	r1, .L321+0x20
	add	r4, r4, r1
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	mov	r1, r8
	ldrb	r0, [r1]
	mul	r0, r0, r6
	add	r0, r0, r5
	mov	r1, #0x3
	bl	GetMonData
	strb	r0, [r7, #0x1f]
.L320:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSpecialVar_ContestCategory
	.word	gSpecialVar_ContestRank
	.word	gContestMonPartyIndex
	.word	gPlayerParty
	.word	0x27b4
.Lfe37:
	.size	 BravoTrainerPokemonProfile_BeforeInterview2,.Lfe37-BravoTrainerPokemonProfile_BeforeInterview2
	.align	2, 0
	.type	 InterviewAfter_BravoTrainerBattleTowerProfile,function
	.thumb_func
InterviewAfter_BravoTrainerBattleTowerProfile:
	push	{r4, r5, r6, lr}
	ldr	r2, .L330
	ldr	r0, .L330+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L330+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	mov	r0, #0x7
	strb	r0, [r6]
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
	add	r0, r6, #0x2
	ldr	r4, .L330+0xc
	ldr	r1, [r4]
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0xc
	ldr	r1, [r4]
	mov	r2, #0xb6
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, [r4]
	ldr	r2, .L330+0x10
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r6, #0xa]
	add	r2, r2, #0x2
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r6, #0x14]
	ldr	r5, .L330+0x14
	add	r1, r1, r5
	ldrb	r0, [r1]
	mov	r1, #0x0
	bl	GetCurrentBattleTowerWinStreak
	strh	r0, [r6, #0x16]
	ldr	r0, [r4]
	ldr	r1, .L330+0x18
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r6, #0x1c]
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L324	@cond_branch
	mov	r0, #0x32
	b	.L329
.L331:
	.align	2, 0
.L330:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gSaveBlock2Ptr
	.word	0xb5c
	.word	0xc8f
	.word	0xc8e
.L324:
	mov	r0, #0x64
.L329:
	strb	r0, [r6, #0x1a]
	ldr	r0, .L332
	ldrh	r0, [r0]
	strb	r0, [r6, #0x1b]
	add	r0, r6, #0
	bl	tv_store_id_2x
	ldr	r0, .L332+0x4
	ldrb	r0, [r0]
	strb	r0, [r6, #0x1d]
	cmp	r0, #0x1
	beq	.L327	@cond_branch
	ldr	r0, .L332+0x8
	ldr	r0, [r0]
	ldr	r2, .L332+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L326	@cond_branch
.L327:
	mov	r0, #0x1
.L326:
	strb	r0, [r6, #0x1e]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	gSpecialVar_0x8004
	.word	gGameLanguage
	.word	gSaveBlock2Ptr
	.word	0xb73
.Lfe38:
	.size	 InterviewAfter_BravoTrainerBattleTowerProfile,.Lfe38-InterviewAfter_BravoTrainerBattleTowerProfile
	.align	2, 0
	.globl	SaveRecordedItemPurchasesForTVShow
	.type	 SaveRecordedItemPurchasesForTVShow,function
	.thumb_func
SaveRecordedItemPurchasesForTVShow:
	push	{r4, r5, r6, r7, lr}
	ldr	r5, .L343
	ldr	r0, [r5]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L343+0x4
	cmp	r1, r0
	beq	.L335	@cond_branch
	ldr	r0, .L343+0x8
	cmp	r1, r0
	beq	.L335	@cond_branch
	ldr	r0, .L343+0xc
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L335	@cond_branch
	ldr	r0, [r5]
	ldr	r7, .L343+0x10
	add	r0, r0, r7
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r6, .L343+0x14
	strb	r0, [r6]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L335	@cond_branch
	mov	r0, #0x16
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L335	@cond_branch
	bl	TV_SortPurchasesByQuantity
	ldr	r2, .L343+0x18
	ldrh	r0, [r2, #0x2]
	cmp	r0, #0x13
	bls	.L335	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r6, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r1, [r5]
	add	r5, r1, r0
	mov	r0, #0x16
	strb	r0, [r5]
	strb	r4, [r5, #0x1]
	ldr	r0, .L343+0x1c
	ldrb	r0, [r0, #0x14]
	strb	r0, [r5, #0x12]
	mov	r4, #0x0
	add	r7, r5, #0x6
	mov	ip, r2
	add	r6, r5, #0
	add	r6, r6, #0xc
.L341:
	lsl	r2, r4, #0x1
	add	r3, r7, r2
	lsl	r1, r4, #0x2
	add	r1, r1, ip
	ldrh	r0, [r1]
	strh	r0, [r3]
	add	r2, r6, r2
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L341	@cond_branch
	mov	r0, #0x1
	bl	GetPriceReduction
	strb	r0, [r5, #0x2]
	add	r0, r5, #0
	add	r0, r0, #0x13
	ldr	r1, .L343+0x20
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r5, #0
	bl	tv_store_id_3x
	ldr	r0, .L343+0x24
	ldrb	r0, [r0]
	strb	r0, [r5, #0x3]
.L335:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	gSaveBlock1Ptr
	.word	0x3c1a
	.word	0x371a
	.word	0x5555
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gMartPurchaseHistory
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe39:
	.size	 SaveRecordedItemPurchasesForTVShow,.Lfe39-SaveRecordedItemPurchasesForTVShow
	.align	2, 0
	.globl	PutNameRaterShowOnTheAir
	.type	 PutNameRaterShowOnTheAir,function
	.thumb_func
PutNameRaterShowOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	bl	InterviewBefore_NameRater
	ldr	r0, .L348
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L346	@cond_branch
	ldr	r0, .L348+0x4
	mov	r8, r0
	ldrh	r0, [r0]
	mov	r7, #0x64
	mul	r0, r0, r7
	ldr	r6, .L348+0x8
	add	r0, r0, r6
	ldr	r4, .L348+0xc
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	ldr	r1, .L348+0x10
	mov	r9, r1
	ldr	r0, [r1]
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L346	@cond_branch
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L346	@cond_branch
	ldr	r2, .L348+0x14
	ldr	r0, .L348+0x18
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L348+0x1c
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r0, #0x5
	strb	r0, [r4]
	mov	r5, #0x1
	strb	r5, [r4, #0x1]
	mov	r2, r8
	ldrh	r0, [r2]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x2]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	strb	r0, [r4, #0x1a]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	and	r0, r0, r5
	strb	r0, [r4, #0x1b]
	ldrh	r0, [r4, #0x2]
	bl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	strh	r0, [r4, #0x1c]
	add	r0, r4, #0
	add	r0, r0, #0xf
	mov	r2, r9
	ldr	r1, [r2]
	bl	StringCopy
	mov	r1, r8
	ldrh	r0, [r1]
	mul	r0, r0, r7
	add	r0, r0, r6
	add	r5, r4, #0x4
	mov	r1, #0x2
	add	r2, r5, #0
	bl	GetMonData
	add	r0, r5, #0
	bl	StripExtCtrlCodes
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L348+0x20
	ldrb	r0, [r0]
	strb	r0, [r4, #0x1e]
	mov	r2, r8
	ldrh	r0, [r2]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x3
	bl	GetMonData
	strb	r0, [r4, #0x1f]
.L346:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSaveBlock2Ptr
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gGameLanguage
.Lfe40:
	.size	 PutNameRaterShowOnTheAir,.Lfe40-PutNameRaterShowOnTheAir
	.align	2, 0
	.globl	StartMassOutbreak
	.type	 StartMassOutbreak,function
	.thumb_func
StartMassOutbreak:
	push	{r4, r5, lr}
	ldr	r4, .L351
	ldr	r0, .L351+0x4
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L351+0x8
	add	r1, r1, r0
	ldr	r2, [r4]
	add	r1, r2, r1
	ldrh	r3, [r1, #0xc]
	ldr	r5, .L351+0xc
	add	r0, r2, r5
	strh	r3, [r0]
	ldrb	r0, [r1, #0x10]
	ldr	r3, .L351+0x10
	add	r2, r2, r3
	strb	r0, [r2]
	ldr	r0, [r4]
	ldrb	r2, [r1, #0x11]
	add	r5, r5, #0x3
	add	r0, r0, r5
	strb	r2, [r0]
	ldr	r0, [r4]
	ldrb	r2, [r1, #0x14]
	add	r3, r3, #0x2
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r4]
	ldrb	r2, [r1, #0x2]
	add	r5, r5, #0x2
	add	r0, r0, r5
	strb	r2, [r0]
	ldr	r2, [r4]
	ldrh	r3, [r1, #0xe]
	add	r5, r5, #0x1
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0x4]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0x6]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0x8]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0xa]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrb	r0, [r1, #0x3]
	ldr	r3, .L351+0x14
	add	r2, r2, r3
	strb	r0, [r2]
	ldr	r0, [r4]
	ldrb	r1, [r1, #0x13]
	add	r5, r5, #0x3
	add	r0, r0, r5
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L351+0x18
	add	r0, r0, r1
	mov	r1, #0x2
	strh	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L352:
	.align	2, 0
.L351:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	0x2810
	.word	0x2812
	.word	0x2820
	.word	0x2822
.Lfe41:
	.size	 StartMassOutbreak,.Lfe41-StartMassOutbreak
	.align	2, 0
	.globl	PutLilycoveContestLadyShowOnTheAir
	.type	 PutLilycoveContestLadyShowOnTheAir,function
	.thumb_func
PutLilycoveContestLadyShowOnTheAir:
	push	{r4, lr}
	bl	sub_80EFA88
	ldr	r0, .L355
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L354	@cond_branch
	ldr	r2, .L355+0x4
	ldr	r0, .L355+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L355+0xc
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	add	r0, r4, #0
	add	r0, r0, #0x17
	bl	BufferContestLadyLanguage
	mov	r0, #0x2
	strb	r0, [r4, #0x18]
	mov	r0, #0xc
	strb	r0, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0x2
	bl	BufferContestLadyPlayerName
	add	r0, r4, #0
	add	r0, r0, #0xa
	add	r1, r4, #0
	add	r1, r1, #0xb
	bl	BufferContestLadyMonName
	bl	sub_818E880
	strb	r0, [r4, #0x16]
	add	r0, r4, #0
	bl	tv_store_id_2x
.L354:
	pop	{r4}
	pop	{r0}
	bx	r0
.L356:
	.align	2, 0
.L355:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x244c
.Lfe42:
	.size	 PutLilycoveContestLadyShowOnTheAir,.Lfe42-PutLilycoveContestLadyShowOnTheAir
	.align	2, 0
	.type	 InterviewAfter_FanClubLetter,function
	.thumb_func
InterviewAfter_FanClubLetter:
	push	{r4, lr}
	ldr	r2, .L358
	ldr	r0, .L358+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L358+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r0, #0x1
	strb	r0, [r4]
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldr	r1, .L358+0xc
	ldr	r1, [r1]
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L358+0x10
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L358+0x14
	ldrb	r0, [r0]
	strb	r0, [r4, #0x18]
	pop	{r4}
	pop	{r0}
	bx	r0
.L359:
	.align	2, 0
.L358:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gSaveBlock2Ptr
	.word	gPlayerParty
	.word	gGameLanguage
.Lfe43:
	.size	 InterviewAfter_FanClubLetter,.Lfe43-InterviewAfter_FanClubLetter
	.align	2, 0
	.type	 InterviewAfter_RecentHappenings,function
	.thumb_func
InterviewAfter_RecentHappenings:
	push	{r4, r5, lr}
	ldr	r2, .L361
	ldr	r0, .L361+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L361+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r5, #0x0
	mov	r0, #0x2
	strb	r0, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldr	r1, .L361+0xc
	ldr	r1, [r1]
	bl	StringCopy
	strh	r5, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L361+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x18]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe44:
	.size	 InterviewAfter_RecentHappenings,.Lfe44-InterviewAfter_RecentHappenings
	.align	2, 0
	.type	 InterviewAfter_PkmnFanClubOpinions,function
	.thumb_func
InterviewAfter_PkmnFanClubOpinions:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r2, .L368
	ldr	r0, .L368+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L368+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	mov	r0, #0x3
	strb	r0, [r5]
	mov	r0, #0x1
	mov	r8, r0
	mov	r1, r8
	strb	r1, [r5, #0x1]
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r7, #0x64
	mul	r0, r0, r7
	ldr	r6, .L368+0xc
	add	r0, r0, r6
	mov	r1, #0x20
	mov	r2, #0x0
	bl	GetMonData
	lsr	r0, r0, #0x4
	mov	r1, #0xf
	and	r0, r0, r1
	ldrb	r2, [r5, #0x4]
	mov	r1, #0x10
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x4]
	ldr	r0, .L368+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	mov	r2, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x4]
	add	r0, r5, #0x5
	ldr	r1, .L368+0x14
	ldr	r1, [r1]
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	add	r4, r5, #0
	add	r4, r4, #0x10
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r5, #0x2]
	add	r0, r5, #0
	bl	tv_store_id_2x
	ldr	r0, .L368+0x18
	ldrb	r0, [r0]
	strb	r0, [r5, #0xd]
	cmp	r0, #0x1
	beq	.L365	@cond_branch
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L364	@cond_branch
.L365:
	mov	r0, r8
	b	.L367
.L369:
	.align	2, 0
.L368:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gPlayerParty
	.word	gSpecialVar_0x8007
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.L364:
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x3
	bl	GetMonData
.L367:
	strb	r0, [r5, #0xe]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 InterviewAfter_PkmnFanClubOpinions,.Lfe45-InterviewAfter_PkmnFanClubOpinions
	.align	2, 0
	.type	 InterviewAfter_DummyShow4,function
	.thumb_func
InterviewAfter_DummyShow4:
	bx	lr
.Lfe46:
	.size	 InterviewAfter_DummyShow4,.Lfe46-InterviewAfter_DummyShow4
	.align	2, 0
	.type	 sub_80ED718,function
	.thumb_func
sub_80ED718:
	push	{r4, r5, r6, lr}
	ldr	r0, .L381
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L371	@cond_branch
	mov	r1, #0x0
	ldr	r0, .L381+0x4
	ldr	r2, [r0]
	ldr	r3, .L381+0x8
.L376:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r2, r0
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0x29
	beq	.L371	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x17
	bls	.L376	@cond_branch
	ldr	r0, .L381+0xc
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L371	@cond_branch
	ldr	r6, .L381+0x4
	ldr	r0, [r6]
	ldr	r1, .L381+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r4, .L381+0x10
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L371	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, #0x0
	ldrsb	r2, [r4, r2]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L381+0x8
	add	r1, r1, r2
	ldr	r4, [r6]
	add	r4, r4, r1
	mov	r1, #0x29
	strb	r1, [r4]
	mov	r3, #0x1
	strb	r3, [r4, #0x1]
	ldr	r2, .L381+0x14
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0xa]
	strb	r0, [r4, #0x14]
	strb	r5, [r4, #0x2]
	strb	r5, [r4, #0x3]
	ldrh	r0, [r1]
	mov	r2, #0x0
	strh	r0, [r4, #0xc]
	strh	r5, [r4, #0xe]
	ldrh	r0, [r1, #0x2]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x4]
	strh	r0, [r4, #0x6]
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0x8]
	ldrh	r0, [r1, #0x8]
	strh	r0, [r4, #0xa]
	ldrb	r0, [r1, #0xb]
	strb	r0, [r4, #0x10]
	strb	r2, [r4, #0x11]
	strb	r2, [r4, #0x12]
	mov	r0, #0x32
	strb	r0, [r4, #0x13]
	strb	r2, [r4, #0x15]
	strh	r3, [r4, #0x16]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L381+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x18]
.L371:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L382:
	.align	2, 0
.L381:
	.word	0x864
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	0x147
	.word	sCurTVShowSlot
	.word	sPokeOutbreakSpeciesList
	.word	gGameLanguage
.Lfe47:
	.size	 sub_80ED718,.Lfe47-sub_80ED718
	.align	2, 0
	.globl	EndMassOutbreak
	.type	 EndMassOutbreak,function
	.thumb_func
EndMassOutbreak:
	push	{r4, r5, lr}
	ldr	r3, .L384
	ldr	r0, [r3]
	ldr	r2, .L384+0x4
	add	r1, r0, r2
	mov	r4, #0x0
	mov	r2, #0x0
	strh	r2, [r1]
	ldr	r5, .L384+0x8
	add	r0, r0, r5
	strb	r4, [r0]
	ldr	r0, [r3]
	ldr	r1, .L384+0xc
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r5, r5, #0x2
	add	r0, r0, r5
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r1, r1, #0x2
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	ldr	r1, .L384+0x10
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r5, r5, #0x3
	add	r0, r0, r5
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r1, r1, #0x2
	add	r0, r0, r1
	strh	r2, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L385:
	.align	2, 0
.L384:
	.word	gSaveBlock1Ptr
	.word	0x2810
	.word	0x2812
	.word	0x2813
	.word	0x2820
.Lfe48:
	.size	 EndMassOutbreak,.Lfe48-EndMassOutbreak
	.align	2, 0
	.globl	UpdateTVShowsPerDay
	.type	 UpdateTVShowsPerDay,function
	.thumb_func
UpdateTVShowsPerDay:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r4, #0
	bl	UpdateMassOutbreakTimeLeft
	add	r0, r4, #0
	bl	TryEndMassOutbreak
	add	r0, r4, #0
	bl	sub_80EF120
	add	r0, r4, #0
	bl	sub_80EDA48
	add	r0, r4, #0
	bl	sub_80EEB98
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 UpdateTVShowsPerDay,.Lfe49-UpdateTVShowsPerDay
	.align	2, 0
	.type	 UpdateMassOutbreakTimeLeft,function
	.thumb_func
UpdateMassOutbreakTimeLeft:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r1, .L397
	ldr	r0, [r1]
	ldr	r2, .L397+0x4
	add	r0, r0, r2
	ldrh	r0, [r0]
	mov	ip, r1
	cmp	r0, #0
	bne	.L388	@cond_branch
	mov	r1, #0x0
	ldr	r6, .L397+0x8
.L392:
	mov	r7, ip
	ldr	r4, [r7]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r3, r0, #0x2
	add	r2, r4, r3
	add	r0, r2, r6
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L391	@cond_branch
	ldr	r7, .L397+0xc
	add	r0, r2, r7
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L391	@cond_branch
	add	r0, r3, r6
	add	r1, r4, r0
	ldrh	r0, [r1, #0x16]
	cmp	r0, r5
	bcs	.L394	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x16]
	b	.L388
.L398:
	.align	2, 0
.L397:
	.word	gSaveBlock1Ptr
	.word	0x2810
	.word	0x244c
	.word	0x244d
.L394:
	sub	r0, r0, r5
	strh	r0, [r1, #0x16]
	b	.L388
.L391:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x17
	bls	.L392	@cond_branch
.L388:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 UpdateMassOutbreakTimeLeft,.Lfe50-UpdateMassOutbreakTimeLeft
	.align	2, 0
	.type	 TryEndMassOutbreak,function
	.thumb_func
TryEndMassOutbreak:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L402
	ldr	r0, [r0]
	ldr	r3, .L402+0x4
	add	r1, r0, r3
	ldrh	r0, [r1]
	cmp	r0, r2
	bhi	.L400	@cond_branch
	bl	EndMassOutbreak
	b	.L401
.L403:
	.align	2, 0
.L402:
	.word	gSaveBlock1Ptr
	.word	0x2822
.L400:
	sub	r0, r0, r2
	strh	r0, [r1]
.L401:
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 TryEndMassOutbreak,.Lfe51-TryEndMassOutbreak
	.align	2, 0
	.globl	RecordFishingAttemptForTV
	.type	 RecordFishingAttemptForTV,function
	.thumb_func
RecordFishingAttemptForTV:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L405	@cond_branch
	ldr	r4, .L412
	ldrh	r0, [r4]
	lsr	r0, r0, #0x8
	cmp	r0, #0x4
	bls	.L406	@cond_branch
	bl	PutFishingAdviceShowOnTheAir
.L406:
	ldrb	r0, [r4]
	strh	r0, [r4]
	cmp	r0, #0xff
	beq	.L408	@cond_branch
	add	r0, r0, #0x1
	b	.L411
.L413:
	.align	2, 0
.L412:
	.word	sPokemonAnglerAttemptCounters
.L405:
	ldr	r4, .L414
	ldrb	r0, [r4]
	cmp	r0, #0x4
	bls	.L409	@cond_branch
	bl	PutFishingAdviceShowOnTheAir
.L409:
	ldrh	r0, [r4]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	strh	r1, [r4]
	lsr	r0, r1, #0x8
	cmp	r0, #0xff
	beq	.L408	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r1, r2
.L411:
	strh	r0, [r4]
.L408:
	pop	{r4}
	pop	{r0}
	bx	r0
.L415:
	.align	2, 0
.L414:
	.word	sPokemonAnglerAttemptCounters
.Lfe52:
	.size	 RecordFishingAttemptForTV,.Lfe52-RecordFishingAttemptForTV
	.align	2, 0
	.globl	PutFishingAdviceShowOnTheAir
	.type	 PutFishingAdviceShowOnTheAir,function
	.thumb_func
PutFishingAdviceShowOnTheAir:
	push	{r4, r5, r6, lr}
	ldr	r6, .L418
	ldr	r0, [r6]
	ldr	r5, .L418+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L418+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L417	@cond_branch
	mov	r0, #0x18
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L417	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x18
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L418+0xc
	ldrh	r0, [r1]
	strb	r0, [r4, #0x2]
	ldrh	r0, [r1]
	lsr	r0, r0, #0x8
	strb	r0, [r4, #0x3]
	ldr	r0, .L418+0x10
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L418+0x14
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L418+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x6]
.L417:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L419:
	.align	2, 0
.L418:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	sPokemonAnglerAttemptCounters
	.word	sPokemonAnglerSpecies
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe53:
	.size	 PutFishingAdviceShowOnTheAir,.Lfe53-PutFishingAdviceShowOnTheAir
	.align	2, 0
	.globl	SetPokemonAnglerSpecies
	.type	 SetPokemonAnglerSpecies,function
	.thumb_func
SetPokemonAnglerSpecies:
	ldr	r1, .L421
	strh	r0, [r1]
	bx	lr
.L422:
	.align	2, 0
.L421:
	.word	sPokemonAnglerSpecies
.Lfe54:
	.size	 SetPokemonAnglerSpecies,.Lfe54-SetPokemonAnglerSpecies
	.align	2, 0
	.type	 sub_80EDA48,function
	.thumb_func
sub_80EDA48:
	push	{r4, lr}
	ldr	r4, .L426
	ldr	r0, [r4]
	ldr	r2, .L426+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0x19
	bne	.L424	@cond_branch
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0x13
	bls	.L425	@cond_branch
	bl	sub_80EDA80
.L425:
	ldr	r0, [r4]
	ldr	r1, .L426+0x8
	add	r0, r0, r1
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L424:
	pop	{r4}
	pop	{r0}
	bx	r0
.L427:
	.align	2, 0
.L426:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0x244c
.Lfe55:
	.size	 sub_80EDA48,.Lfe55-sub_80EDA48
	.align	2, 0
	.globl	sub_80EDA80
	.type	 sub_80EDA80,function
	.thumb_func
sub_80EDA80:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r7, .L431
	ldr	r0, [r7]
	ldr	r1, .L431+0x4
	add	r5, r0, r1
	ldr	r0, .L431+0x8
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	bne	.L429	@cond_branch
	ldr	r0, [r7]
	ldr	r1, .L431+0xc
	mov	r8, r1
	add	r0, r0, r8
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L431+0x10
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L429	@cond_branch
	mov	r0, #0x19
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L429	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldr	r4, [r7]
	add	r4, r4, r0
	mov	r0, #0x19
	strb	r0, [r4]
	strb	r6, [r4, #0x1]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x2]
	mov	r0, #0x5
	bl	GetGameStat
	ldrh	r1, [r5, #0x6]
	sub	r0, r0, r1
	strh	r0, [r4, #0x6]
	ldrh	r0, [r5, #0x4]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r4, #0x8]
	ldrb	r0, [r5, #0xa]
	strb	r0, [r4, #0xa]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L431+0x14
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L431+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0xb]
	ldr	r0, [r7]
	add	r0, r0, r8
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L429:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L432:
	.align	2, 0
.L431:
	.word	gSaveBlock1Ptr
	.word	0x27ac
	.word	0xffff
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe56:
	.size	 sub_80EDA80,.Lfe56-sub_80EDA80
	.align	2, 0
	.globl	TryPutTodaysRivalTrainerOnAir
	.type	 TryPutTodaysRivalTrainerOnAir,function
	.thumb_func
TryPutTodaysRivalTrainerOnAir:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0x1a
	mov	r1, #0x1
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	ldr	r4, .L451
	ldr	r0, [r4]
	ldr	r1, .L451+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L451+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L434	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L451+0x4
	add	r0, r0, r2
	ldr	r1, [r4]
	add	r4, r1, r0
	mov	r1, #0x0
	mov	r0, #0x1a
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r6, .L451+0xc
	mov	r5, #0x0
.L438:
	lsl	r0, r6, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L437	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L437:
	add	r6, r6, #0x1
	ldr	r0, .L451+0x10
	cmp	r6, r0
	bls	.L438	@cond_branch
	strb	r5, [r4, #0x4]
	bl	IsNationalPokedexEnabled
	cmp	r0, #0
	beq	.L441	@cond_branch
	mov	r0, #0x1
	bl	GetNationalPokedexCount
	b	.L450
.L452:
	.align	2, 0
.L451:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	0x867
	.word	0x86e
.L441:
	mov	r0, #0x1
	bl	GetHoennPokedexCount
.L450:
	strh	r0, [r4, #0x2]
	ldr	r1, .L453
	ldrb	r0, [r1, #0x14]
	strb	r0, [r4, #0x7]
	ldrh	r0, [r1, #0x12]
	mov	r1, #0x0
	strh	r0, [r4, #0xa]
	strb	r1, [r4, #0x5]
	strb	r1, [r4, #0x6]
	mov	r6, #0x0
	add	r7, r4, #0
	add	r7, r7, #0x13
.L446:
	ldr	r0, .L453+0x4
	lsl	r5, r6, #0x1
	add	r0, r5, r0
	ldrh	r0, [r0]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L447	@cond_branch
	ldrb	r0, [r4, #0x5]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x5]
.L447:
	ldr	r0, .L453+0x8
	add	r0, r5, r0
	ldrh	r0, [r0]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L445	@cond_branch
	ldrb	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x6]
.L445:
	add	r6, r6, #0x1
	cmp	r6, #0x6
	bls	.L446	@cond_branch
	ldr	r0, .L453+0xc
	ldr	r1, [r0]
	mov	r2, #0xe4
	lsl	r2, r2, #0x4
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r4, #0x8]
	add	r0, r7, #0
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L453+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0xc]
.L434:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L454:
	.align	2, 0
.L453:
	.word	gMapHeader
	.word	sSilverSymbolFlags
	.word	sGoldSymbolFlags
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe57:
	.size	 TryPutTodaysRivalTrainerOnAir,.Lfe57-TryPutTodaysRivalTrainerOnAir
	.align	2, 0
	.globl	sub_80EDC60
	.type	 sub_80EDC60,function
	.thumb_func
sub_80EDC60:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	ldr	r7, .L457
	ldr	r0, [r7]
	ldr	r6, .L457+0x4
	add	r0, r0, r6
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L457+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L456	@cond_branch
	mov	r0, #0x1b
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L456	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r4, [r7]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1b
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L457+0xc
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x8]
	strb	r0, [r4, #0x8]
	ldrh	r0, [r5]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x6]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L457+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x9]
.L456:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L458:
	.align	2, 0
.L457:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe58:
	.size	 sub_80EDC60,.Lfe58-sub_80EDC60
	.align	2, 0
	.globl	TryPutTreasureInvestigatorsOnAir
	.type	 TryPutTreasureInvestigatorsOnAir,function
	.thumb_func
TryPutTreasureInvestigatorsOnAir:
	push	{r4, r5, r6, lr}
	ldr	r6, .L461
	ldr	r0, [r6]
	ldr	r5, .L461+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L461+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L460	@cond_branch
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L460	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1c
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r0, .L461+0xc
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	ldr	r1, .L461+0x10
	ldrb	r0, [r1, #0x14]
	strb	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x12]
	strh	r0, [r4, #0x6]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L461+0x14
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L461+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x5]
.L460:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSpecialVar_0x8005
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe59:
	.size	 TryPutTreasureInvestigatorsOnAir,.Lfe59-TryPutTreasureInvestigatorsOnAir
	.align	2, 0
	.globl	AlertTVOfNewCoinTotal
	.type	 AlertTVOfNewCoinTotal,function
	.thumb_func
AlertTVOfNewCoinTotal:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L476
	ldr	r0, [r0]
	ldr	r1, .L476+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L476+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L463	@cond_branch
	mov	r0, #0x1d
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L463	@cond_branch
	mov	r5, #0x0
	ldr	r0, .L476+0xc
	ldrb	r1, [r0]
	add	r6, r0, #0
	cmp	r1, #0
	beq	.L466	@cond_branch
	cmp	r1, #0x1
	beq	.L469	@cond_branch
	b	.L463
.L477:
	.align	2, 0
.L476:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	sFindThatGamerWhichGame
.L466:
	ldr	r0, .L478
	ldrh	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xc8
	cmp	r4, r0
	blt	.L467	@cond_branch
	mov	r5, #0x1
	sub	r0, r4, r1
	b	.L474
.L479:
	.align	2, 0
.L478:
	.word	sFindThatGamerCoinsSpent
.L467:
	cmp	r1, #0x63
	bls	.L463	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x64
	b	.L475
.L469:
	ldr	r0, .L480
	ldrh	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x32
	cmp	r4, r0
	blt	.L470	@cond_branch
	mov	r5, #0x1
	sub	r0, r4, r1
	b	.L474
.L481:
	.align	2, 0
.L480:
	.word	sFindThatGamerCoinsSpent
.L470:
	cmp	r1, #0x31
	bls	.L463	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x32
.L475:
	cmp	r4, r0
	bgt	.L463	@cond_branch
	sub	r0, r1, r4
.L474:
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r2, .L482
	ldr	r0, .L482+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L482+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1d
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	strh	r3, [r4, #0x4]
	ldrb	r0, [r6]
	strb	r0, [r4, #0x3]
	strb	r5, [r4, #0x2]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L482+0xc
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L482+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x8]
.L463:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L483:
	.align	2, 0
.L482:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x244c
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe60:
	.size	 AlertTVOfNewCoinTotal,.Lfe60-AlertTVOfNewCoinTotal
	.align	2, 0
	.globl	AlertTVThatPlayerPlayedSlotMachine
	.type	 AlertTVThatPlayerPlayedSlotMachine,function
	.thumb_func
AlertTVThatPlayerPlayedSlotMachine:
	ldr	r2, .L485
	mov	r1, #0x0
	strb	r1, [r2]
	ldr	r1, .L485+0x4
	strh	r0, [r1]
	bx	lr
.L486:
	.align	2, 0
.L485:
	.word	sFindThatGamerWhichGame
	.word	sFindThatGamerCoinsSpent
.Lfe61:
	.size	 AlertTVThatPlayerPlayedSlotMachine,.Lfe61-AlertTVThatPlayerPlayedSlotMachine
	.align	2, 0
	.globl	AlertTVThatPlayerPlayedRoulette
	.type	 AlertTVThatPlayerPlayedRoulette,function
	.thumb_func
AlertTVThatPlayerPlayedRoulette:
	ldr	r2, .L488
	mov	r1, #0x1
	strb	r1, [r2]
	ldr	r1, .L488+0x4
	strh	r0, [r1]
	bx	lr
.L489:
	.align	2, 0
.L488:
	.word	sFindThatGamerWhichGame
	.word	sFindThatGamerCoinsSpent
.Lfe62:
	.size	 AlertTVThatPlayerPlayedRoulette,.Lfe62-AlertTVThatPlayerPlayedRoulette
	.align	2, 0
	.type	 sub_80EDE98,function
	.thumb_func
sub_80EDE98:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r8, r0
	mov	r3, #0x0
	ldr	r6, .L527
	ldr	r7, .L527+0x4
	add	r2, r6, #0
	mov	r1, #0x0
.L494:
	add	r0, r3, r2
	strb	r1, [r0]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xf
	bls	.L494	@cond_branch
	mov	r3, #0x0
	mov	r5, #0x0
.L499:
	ldr	r0, [r7]
	ldr	r1, .L527+0x8
	add	r0, r0, r1
	add	r0, r0, r3
	ldrb	r4, [r0]
	add	r3, r3, #0x1
	cmp	r4, #0
	beq	.L498	@cond_branch
	mov	r1, #0x0
	ldrb	r0, [r6]
	cmp	r0, #0
	bne	.L505	@cond_branch
	strb	r4, [r6]
	b	.L526
.L528:
	.align	2, 0
.L527:
	.word	sTV_DecorationsBuffer
	.word	gSaveBlock1Ptr
	.word	0x208e
.L505:
	add	r0, r1, r6
	ldrb	r0, [r0]
	cmp	r0, r4
	beq	.L498	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bhi	.L498	@cond_branch
	add	r2, r1, r6
	ldrb	r0, [r2]
	cmp	r0, #0
	bne	.L505	@cond_branch
	strb	r4, [r2]
.L526:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L498:
	lsl	r0, r3, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xf
	bls	.L499	@cond_branch
	cmp	r5, #0x4
	bls	.L509	@cond_branch
	mov	r0, #0x4
	mov	r1, r8
	strb	r0, [r1, #0x3]
	b	.L510
.L509:
	mov	r0, r8
	strb	r5, [r0, #0x3]
.L510:
	mov	r1, r8
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L511	@cond_branch
	cmp	r0, #0x1
	bne	.L514	@cond_branch
	ldrb	r0, [r6]
	strb	r0, [r1, #0x4]
	b	.L511
.L514:
	mov	r6, #0x0
	mov	r7, r5
	mul	r7, r7, r5
	cmp	r6, r7
	bge	.L516	@cond_branch
	ldr	r0, .L529
	mov	r9, r0
.L518:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r0, r9
	add	r2, r4, r0
	ldrb	r3, [r2]
	add	r1, r1, r9
	ldrb	r0, [r1]
	strb	r0, [r2]
	strb	r3, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, r7
	blt	.L518	@cond_branch
.L516:
	mov	r3, #0x0
	mov	r1, r8
	ldrb	r1, [r1, #0x3]
	cmp	r3, r1
	bcs	.L511	@cond_branch
	mov	r2, r8
	add	r2, r2, #0x4
	ldr	r4, .L529
.L523:
	add	r1, r2, r3
	add	r0, r3, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r0, r8
	ldrb	r0, [r0, #0x3]
	cmp	r3, r0
	bcc	.L523	@cond_branch
.L511:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L530:
	.align	2, 0
.L529:
	.word	sTV_DecorationsBuffer
.Lfe63:
	.size	 sub_80EDE98,.Lfe63-sub_80EDE98
	.align	2, 0
	.type	 sub_80EDFB4,function
	.thumb_func
sub_80EDFB4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	sl, r0
	mov	r7, #0x0
	mov	r0, #0x0
	mov	r9, r0
	ldr	r1, .L547
	mov	r8, r1
.L535:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L547+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L534	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L534	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	ldr	r2, .L547+0x8
	mov	r3, r9
	lsl	r1, r3, #0x3
	add	r6, r1, r2
	strb	r0, [r6]
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	strh	r0, [r6, #0x2]
	mov	r5, #0x0
	add	r0, r4, #0
	mov	r1, #0xd
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L537	@cond_branch
	mov	r0, r8
	strh	r1, [r0]
	mov	r5, #0x1
.L537:
	add	r0, r4, #0
	mov	r1, #0xe
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L538	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r0, r8
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L538:
	add	r0, r4, #0
	mov	r1, #0xf
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L539	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r0, r8
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L539:
	add	r0, r4, #0
	mov	r1, #0x10
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L540	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r0, r8
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L540:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	strh	r0, [r6, #0x4]
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
.L534:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x5
	bls	.L535	@cond_branch
	mov	r7, #0x0
	mov	r1, #0x0
	cmp	r1, r9
	bcs	.L543	@cond_branch
	ldr	r2, .L547+0x8
.L545:
	lsl	r0, r7, #0x3
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r0, r1, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, r9
	bcc	.L545	@cond_branch
.L543:
	add	r0, r1, #0
	mov	r1, r9
	bl	__divsi3
	mov	r1, sl
	strb	r0, [r1, #0x2]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, r9
	bl	__modsi3
	lsl	r0, r0, #0x10
	ldr	r1, .L547+0x8
	lsr	r0, r0, #0xd
	add	r0, r0, r1
	ldrh	r1, [r0, #0x2]
	mov	r2, sl
	strh	r1, [r2, #0x8]
	ldrh	r0, [r0, #0x4]
	strh	r0, [r2, #0xa]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L548:
	.align	2, 0
.L547:
	.word	sTV_SecretBaseVisitMovesTemp
	.word	gPlayerParty
	.word	sTV_SecretBaseVisitMonsTemp
.Lfe64:
	.size	 sub_80EDFB4,.Lfe64-sub_80EDFB4
	.align	2, 0
	.globl	TV_PutSecretBaseVisitOnTheAir
	.type	 TV_PutSecretBaseVisitOnTheAir,function
	.thumb_func
TV_PutSecretBaseVisitOnTheAir:
	push	{r4, lr}
	mov	r0, #0x1f
	mov	r1, #0x1
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	ldr	r4, .L551
	ldr	r0, [r4]
	ldr	r1, .L551+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L551+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L550	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L551+0x4
	add	r0, r0, r1
	ldr	r4, [r4]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1f
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L551+0xc
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	sub_80EDE98
	add	r0, r4, #0
	bl	sub_80EDFB4
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L551+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0xc]
.L550:
	pop	{r4}
	pop	{r0}
	bx	r0
.L552:
	.align	2, 0
.L551:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe65:
	.size	 TV_PutSecretBaseVisitOnTheAir,.Lfe65-TV_PutSecretBaseVisitOnTheAir
	.align	2, 0
	.globl	sub_80EE184
	.type	 sub_80EE184,function
	.thumb_func
sub_80EE184:
	push	{r4, r5, r6, r7, lr}
	ldr	r6, .L585
	ldr	r0, [r6]
	ldr	r5, .L585+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L585+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.LCB5772
	b	.L553	@long jump
.LCB5772:
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB5780
	b	.L553	@long jump
.LCB5780:
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r6]
	add	r4, r1, r0
	mov	r1, #0x0
	mov	r0, #0x1e
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	mov	r5, #0x0
	ldr	r6, .L585+0xc
	ldr	r3, .L585+0x10
	ldr	r7, .L585+0x14
	add	r2, r6, #0
	add	r2, r2, #0x36
.L558:
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x19
	bls	.L558	@cond_branch
	ldrb	r1, [r6, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L560	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L560:
	ldrb	r0, [r3, #0x14]
	strb	r0, [r4, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, [r7]
	bl	StringCopy
	ldrh	r0, [r6, #0x6]
	strh	r0, [r4, #0xa]
	ldr	r0, .L585+0x18
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x9
	bhi	.L561	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L585+0x1c
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L586:
	.align	2, 0
.L585:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gBattleResults
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gBattleOutcome
	.word	.L571
	.align	2, 0
	.align	2, 0
.L571:
	.word	.L565
	.word	.L563
	.word	.L563
	.word	.L568
	.word	.L568
	.word	.L570
	.word	.L564
	.word	.L568
	.word	.L561
	.word	.L570
.L563:
	mov	r0, #0x0
	strb	r0, [r4]
	b	.L553
.L564:
	mov	r0, #0x0
	b	.L583
.L565:
	mov	r0, #0x1
	b	.L583
.L568:
	mov	r0, #0x2
	b	.L583
.L570:
	mov	r0, #0x3
.L583:
	strb	r0, [r4, #0x5]
.L561:
	ldr	r1, .L587
	ldrh	r0, [r1, #0x20]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0x1
	beq	.L577	@cond_branch
	cmp	r0, #0x1
	bgt	.L573	@cond_branch
	cmp	r0, #0
	bne	.L573	@cond_branch
	ldrb	r1, [r1, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L575	@cond_branch
	mov	r0, #0x1
	b	.L584
.L588:
	.align	2, 0
.L587:
	.word	gBattleResults
.L575:
	lsl	r0, r1, #0x1a
	lsr	r0, r0, #0x1c
.L584:
	strh	r0, [r4, #0x6]
	strh	r5, [r4, #0x8]
	b	.L573
.L577:
	ldrh	r0, [r1, #0x22]
	strh	r0, [r4, #0xc]
.L573:
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L589
	ldrb	r0, [r0]
	strb	r0, [r4, #0xe]
.L553:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L590:
	.align	2, 0
.L589:
	.word	gGameLanguage
.Lfe66:
	.size	 sub_80EE184,.Lfe66-sub_80EE184
	.align	2, 0
	.globl	TryPutLotteryWinnerReportOnAir
	.type	 TryPutLotteryWinnerReportOnAir,function
	.thumb_func
TryPutLotteryWinnerReportOnAir:
	push	{r4, r5, r6, lr}
	ldr	r6, .L593
	ldr	r0, [r6]
	ldr	r5, .L593+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L593+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L592	@cond_branch
	mov	r0, #0x20
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L592	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x20
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L593+0xc
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L593+0x10
	ldrb	r1, [r0]
	mov	r0, #0x4
	sub	r0, r0, r1
	strb	r0, [r4, #0x4]
	ldr	r0, .L593+0x14
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L593+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x5]
.L592:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L594:
	.align	2, 0
.L593:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	gGameLanguage
.Lfe67:
	.size	 TryPutLotteryWinnerReportOnAir,.Lfe67-TryPutLotteryWinnerReportOnAir
	.align	2, 0
	.globl	sub_80EE35C
	.type	 sub_80EE35C,function
	.thumb_func
sub_80EE35C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r7, r3, #0
	ldr	r3, [sp, #0x24]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	str	r3, [sp]
	ldr	r0, .L603
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r5, .L603+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L603+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L596	@cond_branch
	mov	r0, #0x21
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L596	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r2, r8
	ldr	r1, [r2]
	add	r4, r1, r0
	mov	r1, #0x0
	mov	r0, #0x21
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L603+0xc
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, sl
	strh	r0, [r4, #0x4]
	mov	r1, r9
	strh	r1, [r4, #0x6]
	lsl	r0, r6, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	mov	r2, #0x0
	mov	r3, #0x0
	add	r5, r4, #0
	add	r5, r5, #0x8
.L600:
	cmp	r2, r6
	beq	.L599	@cond_branch
	lsl	r0, r2, #0x1
	add	r0, r0, r7
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L599	@cond_branch
	lsl	r0, r3, #0x1
	add	r0, r5, r0
	strh	r1, [r0]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L599:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L600	@cond_branch
	strb	r3, [r4, #0x10]
	mov	r2, sp
	ldrh	r2, [r2]
	strh	r2, [r4, #0xe]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L603+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x11]
.L596:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L604:
	.align	2, 0
.L603:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe68:
	.size	 sub_80EE35C,.Lfe68-sub_80EE35C
	.align	2, 0
	.globl	sub_80EE44C
	.type	 sub_80EE44C,function
	.thumb_func
sub_80EE44C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r6, .L607
	ldr	r0, [r6]
	ldr	r5, .L607+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L607+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L606	@cond_branch
	mov	r0, #0x27
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L606	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x27
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L607+0xc
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, r8
	strb	r0, [r4, #0x2]
	strb	r7, [r4, #0x3]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L607+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x4]
.L606:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L608:
	.align	2, 0
.L607:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe69:
	.size	 sub_80EE44C,.Lfe69-sub_80EE44C
	.align	2, 0
	.globl	TryPutSpotTheCutiesOnAir
	.type	 TryPutSpotTheCutiesOnAir,function
	.thumb_func
TryPutSpotTheCutiesOnAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	ldr	r7, .L615
	ldr	r0, [r7]
	ldr	r5, .L615+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L615+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L610	@cond_branch
	mov	r0, #0x23
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L610	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r7]
	add	r5, r1, r0
	mov	r1, #0x0
	mov	r0, #0x23
	strb	r0, [r5]
	strb	r1, [r5, #0x1]
	add	r0, r5, #0
	add	r0, r0, #0x13
	ldr	r1, .L615+0xc
	ldr	r1, [r1]
	bl	StringCopy
	add	r4, r5, #0x4
	add	r0, r6, #0
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	add	r0, r6, #0
	bl	GetRibbonCount
	strb	r0, [r5, #0x2]
	mov	r0, r8
	bl	TV_MonDataIdxToRibbon
	strb	r0, [r5, #0x3]
	add	r0, r5, #0
	bl	tv_store_id_3x
	ldr	r0, .L615+0x10
	ldrb	r0, [r0]
	strb	r0, [r5, #0xf]
	cmp	r0, #0x1
	beq	.L612	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L611	@cond_branch
.L612:
	mov	r0, #0x1
	b	.L614
.L616:
	.align	2, 0
.L615:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.L611:
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetMonData
.L614:
	strb	r0, [r5, #0x10]
.L610:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 TryPutSpotTheCutiesOnAir,.Lfe70-TryPutSpotTheCutiesOnAir
	.align	2, 0
	.globl	GetRibbonCount
	.type	 GetRibbonCount,function
	.thumb_func
GetRibbonCount:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r1, #0x32
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x33
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x34
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x35
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x36
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x43
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x44
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x45
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x46
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x47
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x48
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x49
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4a
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4b
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4c
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4d
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4e
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 GetRibbonCount,.Lfe71-GetRibbonCount
	.align	2, 0
	.globl	TV_MonDataIdxToRibbon
	.type	 TV_MonDataIdxToRibbon,function
	.thumb_func
TV_MonDataIdxToRibbon:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x43
	beq	.L637	@cond_branch
	cmp	r0, #0x32
	bne	.L620	@cond_branch
	mov	r0, #0x1
	b	.L636
.L620:
	cmp	r0, #0x33
	bne	.L621	@cond_branch
	mov	r0, #0x5
	b	.L636
.L621:
	cmp	r0, #0x34
	bne	.L622	@cond_branch
	mov	r0, #0x9
	b	.L636
.L622:
	cmp	r0, #0x35
	bne	.L623	@cond_branch
	mov	r0, #0xd
	b	.L636
.L623:
	cmp	r0, #0x36
	bne	.L624	@cond_branch
	mov	r0, #0x11
	b	.L636
.L624:
	cmp	r0, #0x44
	bne	.L625	@cond_branch
	mov	r0, #0x15
	b	.L636
.L625:
	cmp	r0, #0x45
	bne	.L626	@cond_branch
	mov	r0, #0x16
	b	.L636
.L626:
	cmp	r0, #0x46
	bne	.L627	@cond_branch
	mov	r0, #0x17
	b	.L636
.L627:
	cmp	r0, #0x47
	bne	.L628	@cond_branch
	mov	r0, #0x18
	b	.L636
.L628:
	cmp	r0, #0x48
	bne	.L629	@cond_branch
	mov	r0, #0x19
	b	.L636
.L629:
	cmp	r0, #0x49
	bne	.L630	@cond_branch
	mov	r0, #0x1a
	b	.L636
.L630:
	cmp	r0, #0x4a
	bne	.L631	@cond_branch
	mov	r0, #0x1b
	b	.L636
.L631:
	cmp	r0, #0x4b
	bne	.L632	@cond_branch
	mov	r0, #0x1c
	b	.L636
.L632:
	cmp	r0, #0x4c
	bne	.L633	@cond_branch
	mov	r0, #0x1d
	b	.L636
.L633:
	cmp	r0, #0x4d
	bne	.L634	@cond_branch
	mov	r0, #0x1e
	b	.L636
.L634:
	cmp	r0, #0x4e
	beq	.L635	@cond_branch
.L637:
	mov	r0, #0x0
	b	.L636
.L635:
	mov	r0, #0x1f
.L636:
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 TV_MonDataIdxToRibbon,.Lfe72-TV_MonDataIdxToRibbon
	.align	2, 0
	.globl	TrySetUpTrainerFanClubSpecial
	.type	 TrySetUpTrainerFanClubSpecial,function
	.thumb_func
TrySetUpTrainerFanClubSpecial:
	push	{r4, r5, r6, lr}
	ldr	r5, .L640
	ldr	r0, [r5]
	ldr	r6, .L640+0x4
	add	r0, r0, r6
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L640+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L639	@cond_branch
	mov	r0, #0x22
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L639	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r4, [r5]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x22
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L640+0xc
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, [r5]
	ldr	r2, .L640+0x10
	add	r1, r0, r2
	ldrh	r1, [r1]
	strh	r1, [r4, #0x4]
	ldr	r1, .L640+0x14
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r4, #0x6]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L640+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x8]
.L639:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L641:
	.align	2, 0
.L640:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	0x2830
	.word	0x2832
	.word	gGameLanguage
.Lfe73:
	.size	 TrySetUpTrainerFanClubSpecial,.Lfe73-TrySetUpTrainerFanClubSpecial
	.align	2, 0
	.globl	ShouldHideFanClubInterviewer
	.type	 ShouldHideFanClubInterviewer,function
	.thumb_func
ShouldHideFanClubInterviewer:
	push	{r4, lr}
	ldr	r4, .L647
	ldr	r0, [r4]
	ldr	r1, .L647+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L647+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L645	@cond_branch
	mov	r0, #0xb
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L647+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L645	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L647+0x10
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	beq	.L645	@cond_branch
	mov	r0, #0x0
	b	.L646
.L648:
	.align	2, 0
.L647:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSpecialVar_Result
	.word	0x2dd0
.L645:
	mov	r0, #0x1
.L646:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 ShouldHideFanClubInterviewer,.Lfe74-ShouldHideFanClubInterviewer
	.align	2, 0
	.globl	ShouldAirFrontierTVShow
	.type	 ShouldAirFrontierTVShow,function
	.thumb_func
ShouldAirFrontierTVShow:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0x24
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L650	@cond_branch
	ldr	r0, .L660
	ldr	r0, [r0]
	ldr	r1, .L660+0x4
	add	r7, r0, r1
	bl	GetPlayerIDAsU32
	add	r4, r0, #0
	mov	r6, #0x5
	lsr	r5, r4, #0x8
.L654:
	lsl	r0, r6, #0x3
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r1, r0, r7
	ldrb	r0, [r1]
	cmp	r0, #0x24
	bne	.L653	@cond_branch
	mov	r3, #0xff
	add	r0, r4, #0
	and	r0, r0, r3
	add	r2, r1, #0
	add	r2, r2, #0x22
	ldrb	r2, [r2]
	cmp	r0, r2
	bne	.L653	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r3
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L659	@cond_branch
.L653:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x17
	bls	.L654	@cond_branch
.L650:
	ldr	r0, .L660
	ldr	r0, [r0]
	ldr	r1, .L660+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L660+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L657	@cond_branch
	mov	r0, #0x1
	b	.L658
.L661:
	.align	2, 0
.L660:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
.L659:
	ldr	r5, .L662
	ldr	r0, [r5]
	ldr	r4, .L662+0x4
	add	r0, r0, r4
	add	r1, r6, #0
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
	mov	r0, #0x1
	b	.L658
.L663:
	.align	2, 0
.L662:
	.word	gSaveBlock1Ptr
	.word	0x244c
.L657:
	mov	r0, #0x0
.L658:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 ShouldAirFrontierTVShow,.Lfe75-ShouldAirFrontierTVShow
	.align	2, 0
	.globl	TryPutFrontierTVShowOnAir
	.type	 TryPutFrontierTVShowOnAir,function
	.thumb_func
TryPutFrontierTVShowOnAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r5, .L683
	ldr	r0, [r5]
	ldr	r1, .L683+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L683+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.LCB6914
	b	.L665	@long jump
.LCB6914:
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L683+0x4
	add	r0, r0, r2
	ldr	r1, [r5]
	add	r7, r1, r0
	mov	r1, #0x0
	mov	r0, #0x24
	strb	r0, [r7]
	strb	r1, [r7, #0x1]
	add	r0, r7, #0
	add	r0, r0, #0x13
	ldr	r1, .L683+0xc
	ldr	r1, [r1]
	bl	StringCopy
	strh	r6, [r7, #0x2]
	strb	r4, [r7, #0xd]
	sub	r0, r4, #0x1
	cmp	r0, #0xc
	bls	.LCB6940
	b	.L666	@long jump
.LCB6940:
	lsl	r0, r0, #0x2
	ldr	r1, .L683+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L684:
	.align	2, 0
.L683:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	.L680
	.align	2, 0
	.align	2, 0
.L680:
	.word	.L676
	.word	.L677
	.word	.L678
	.word	.L679
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
.L676:
	ldr	r4, .L685
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x64
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x6]
	add	r4, r4, #0xc8
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x8]
	b	.L666
.L686:
	.align	2, 0
.L685:
	.word	gPlayerParty
.L677:
	ldr	r4, .L687
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x64
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x6]
	add	r0, r4, #0
	add	r0, r0, #0xc8
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x8]
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0xa]
	b	.L666
.L688:
	.align	2, 0
.L687:
	.word	gPlayerParty
.L678:
	ldr	r4, .L689
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	add	r4, r4, #0x64
	add	r0, r4, #0
	b	.L682
.L690:
	.align	2, 0
.L689:
	.word	gPlayerParty
.L679:
	ldr	r2, .L691
	mov	r8, r2
	ldr	r6, .L691+0x4
	ldr	r0, [r6]
	ldr	r1, .L691+0x8
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r5, #0x64
	mov	r1, r0
	mul	r1, r1, r5
	mov	r4, #0xea
	lsl	r4, r4, #0x1
	add	r1, r1, r4
	ldr	r0, [r2]
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	ldr	r0, [r6]
	ldr	r2, .L691+0xc
	add	r0, r0, r2
	ldrh	r0, [r0]
	mov	r1, r0
	mul	r1, r1, r5
	add	r1, r1, r4
	mov	r2, r8
	ldr	r0, [r2]
	add	r0, r0, r1
.L682:
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x6]
.L666:
	add	r0, r7, #0
	bl	tv_store_id_3x
	ldr	r0, .L691+0x10
	ldrb	r0, [r0]
	strb	r0, [r7, #0xc]
.L665:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L692:
	.align	2, 0
.L691:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
	.word	0xc32
	.word	0xc34
	.word	gGameLanguage
.Lfe76:
	.size	 TryPutFrontierTVShowOnAir,.Lfe76-TryPutFrontierTVShowOnAir
	.align	2, 0
	.globl	TryPutSecretBaseSecretsOnAir
	.type	 TryPutSecretBaseSecretsOnAir,function
	.thumb_func
TryPutSecretBaseSecretsOnAir:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x20
	mov	r0, #0x26
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB7127
	b	.L694	@long jump
.LCB7127:
	ldr	r7, .L700
	ldr	r0, [r7]
	ldr	r1, .L700+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L700+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L694	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L700+0x4
	add	r0, r0, r1
	ldr	r1, [r7]
	add	r5, r1, r0
	mov	r1, #0x0
	mov	r0, #0x26
	strb	r0, [r5]
	strb	r1, [r5, #0x1]
	add	r0, r5, #0
	add	r0, r0, #0x13
	ldr	r1, .L700+0xc
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L700+0x10
	bl	VarGet
	strh	r0, [r5, #0x2]
	bl	CopyCurSecretBaseOwnerName_StrVar1
	ldr	r1, .L700+0x14
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r5, #0x4
	mov	r1, sp
	bl	StringCopy
	ldr	r0, .L700+0x18
	bl	VarGet
	strh	r0, [r5, #0x10]
	ldr	r0, .L700+0x1c
	bl	VarGet
	add	r4, r0, #0
	ldr	r0, .L700+0x20
	bl	VarGet
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x10
	add	r4, r4, r0
	str	r4, [r5, #0xc]
	add	r0, r5, #0
	bl	tv_store_id_3x
	ldr	r0, .L700+0x24
	ldrb	r0, [r0]
	strb	r0, [r5, #0x1b]
	cmp	r0, #0x1
	beq	.L697	@cond_branch
	ldr	r4, [r7]
	ldr	r6, .L700+0x28
	add	r0, r6, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r4, r4, r1
	ldr	r0, .L700+0x2c
	add	r4, r4, r0
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L696	@cond_branch
.L697:
	mov	r0, #0x1
	b	.L699
.L701:
	.align	2, 0
.L700:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	0x40ec
	.word	gStringVar1
	.word	0x40ed
	.word	0x40ee
	.word	0x40ef
	.word	gGameLanguage
	.word	0x4054
	.word	0x2089
.L696:
	add	r0, r6, #0
	bl	VarGet
	ldr	r2, [r7]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r2, r2, r1
	ldr	r1, .L702
	add	r2, r2, r1
	ldrb	r0, [r2]
.L699:
	strb	r0, [r5, #0x1c]
.L694:
	add	sp, sp, #0x20
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L703:
	.align	2, 0
.L702:
	.word	0x2089
.Lfe77:
	.size	 TryPutSecretBaseSecretsOnAir,.Lfe77-TryPutSecretBaseSecretsOnAir
	.align	2, 0
	.type	 sub_80EEB98,function
	.thumb_func
sub_80EEB98:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0x0
	ldr	r6, .L716
	add	r7, r6, #0x2
	b	.L705
.L717:
	.align	2, 0
.L716:
	.word	sNumberOneVarsAndThresholds
.L707:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L705:
	cmp	r5, #0x6
	bhi	.L706	@cond_branch
	lsl	r4, r5, #0x2
	add	r0, r4, r6
	ldrh	r0, [r0]
	bl	VarGet
	add	r4, r4, r7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r4, [r4]
	cmp	r0, r4
	bcc	.L707	@cond_branch
	add	r0, r5, #0
	bl	sub_80EEBF4
.L706:
	mov	r5, #0x0
	ldr	r4, .L718
.L714:
	lsl	r0, r5, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0]
	mov	r1, #0x0
	bl	VarSet
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x6
	bls	.L714	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L719:
	.align	2, 0
.L718:
	.word	sNumberOneVarsAndThresholds
.Lfe78:
	.size	 sub_80EEB98,.Lfe78-sub_80EEB98
	.align	2, 0
	.type	 sub_80EEBF4,function
	.thumb_func
sub_80EEBF4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x25
	mov	r1, #0x1
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	ldr	r4, .L722
	ldr	r0, [r4]
	ldr	r1, .L722+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L722+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L721	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L722+0x4
	add	r0, r0, r1
	ldr	r4, [r4]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x25
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L722+0xc
	ldr	r1, [r1]
	bl	StringCopy
	strb	r5, [r4, #0x4]
	ldr	r1, .L722+0x10
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	VarGet
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L722+0x14
	ldrb	r0, [r0]
	strb	r0, [r4, #0x5]
.L721:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L723:
	.align	2, 0
.L722:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	sNumberOneVarsAndThresholds
	.word	gGameLanguage
.Lfe79:
	.size	 sub_80EEBF4,.Lfe79-sub_80EEBF4
	.align	2, 0
	.globl	IncrementDailySlotsUses
	.type	 IncrementDailySlotsUses,function
	.thumb_func
IncrementDailySlotsUses:
	push	{r4, lr}
	ldr	r4, .L725
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L726:
	.align	2, 0
.L725:
	.word	0x40e6
.Lfe80:
	.size	 IncrementDailySlotsUses,.Lfe80-IncrementDailySlotsUses
	.align	2, 0
	.globl	IncrementDailyRouletteUses
	.type	 IncrementDailyRouletteUses,function
	.thumb_func
IncrementDailyRouletteUses:
	push	{r4, lr}
	ldr	r4, .L728
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L729:
	.align	2, 0
.L728:
	.word	0x40eb
.Lfe81:
	.size	 IncrementDailyRouletteUses,.Lfe81-IncrementDailyRouletteUses
	.align	2, 0
	.globl	IncrementDailyWildBattles
	.type	 IncrementDailyWildBattles,function
	.thumb_func
IncrementDailyWildBattles:
	push	{r4, lr}
	ldr	r4, .L731
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L732:
	.align	2, 0
.L731:
	.word	0x40e7
.Lfe82:
	.size	 IncrementDailyWildBattles,.Lfe82-IncrementDailyWildBattles
	.align	2, 0
	.globl	IncrementDailyBerryBlender
	.type	 IncrementDailyBerryBlender,function
	.thumb_func
IncrementDailyBerryBlender:
	push	{r4, lr}
	ldr	r4, .L734
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L735:
	.align	2, 0
.L734:
	.word	0x40e8
.Lfe83:
	.size	 IncrementDailyBerryBlender,.Lfe83-IncrementDailyBerryBlender
	.align	2, 0
	.globl	IncrementDailyPlantedBerries
	.type	 IncrementDailyPlantedBerries,function
	.thumb_func
IncrementDailyPlantedBerries:
	push	{r4, lr}
	ldr	r4, .L737
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L738:
	.align	2, 0
.L737:
	.word	0x40e9
.Lfe84:
	.size	 IncrementDailyPlantedBerries,.Lfe84-IncrementDailyPlantedBerries
	.align	2, 0
	.globl	IncrementDailyPickedBerries
	.type	 IncrementDailyPickedBerries,function
	.thumb_func
IncrementDailyPickedBerries:
	push	{r4, lr}
	ldr	r4, .L740
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	ldr	r0, .L740+0x4
	ldrh	r0, [r0]
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L741:
	.align	2, 0
.L740:
	.word	0x40ea
	.word	gSpecialVar_0x8006
.Lfe85:
	.size	 IncrementDailyPickedBerries,.Lfe85-IncrementDailyPickedBerries
	.align	2, 0
	.globl	IncrementDailyBattlePoints
	.type	 IncrementDailyBattlePoints,function
	.thumb_func
IncrementDailyBattlePoints:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r5, .L743
	add	r0, r5, #0
	bl	VarGet
	add	r4, r4, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	VarSet
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L744:
	.align	2, 0
.L743:
	.word	0x40f1
.Lfe86:
	.size	 IncrementDailyBattlePoints,.Lfe86-IncrementDailyBattlePoints
	.align	2, 0
	.type	 sub_80EED88,function
	.thumb_func
sub_80EED88:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L749
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L746	@cond_branch
	ldr	r6, .L749+0x4
	ldr	r0, [r6]
	ldr	r7, .L749+0x8
	add	r0, r0, r7
	bl	sub_80EEE30
	ldr	r5, .L749+0xc
	strb	r0, [r5]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L746	@cond_branch
	ldr	r0, .L749+0x10
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L746	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r4, r0, #0x1
	add	r0, r4, #0
	bl	sub_80EF0E4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L746	@cond_branch
	ldr	r1, [r6]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r1, r1, r7
	strb	r4, [r1]
	ldr	r2, [r6]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r0, r2, r0
	ldr	r1, .L749+0x14
	add	r0, r0, r1
	mov	r1, #0x4
	strh	r1, [r0]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L749+0x18
	add	r2, r2, r0
	mov	r0, #0x1
	strb	r0, [r2]
.L746:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L750:
	.align	2, 0
.L749:
	.word	0x864
	.word	gSaveBlock1Ptr
	.word	0x27d0
	.word	sCurTVShowSlot
	.word	0x28f
	.word	0x27d2
	.word	0x27d1
.Lfe87:
	.size	 sub_80EED88,.Lfe87-sub_80EED88
	.align	2, 0
	.globl	sub_80EEE30
	.type	 sub_80EEE30,function
	.thumb_func
sub_80EEE30:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x0
.L755:
	lsl	r0, r1, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L754	@cond_branch
	add	r0, r1, #0
	b	.L758
.L754:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0xf
	ble	.L755	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L758:
	pop	{r1}
	bx	r1
.Lfe88:
	.size	 sub_80EEE30,.Lfe88-sub_80EEE30
	.align	2, 0
	.globl	ClearPokemonNews
	.type	 ClearPokemonNews,function
	.thumb_func
ClearPokemonNews:
	push	{r4, lr}
	mov	r4, #0x0
.L763:
	add	r0, r4, #0
	bl	ClearPokemonNewsI
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L763	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe89:
	.size	 ClearPokemonNews,.Lfe89-ClearPokemonNews
	.align	2, 0
	.globl	ClearPokemonNewsI
	.type	 ClearPokemonNewsI,function
	.thumb_func
ClearPokemonNewsI:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	ldr	r3, .L766
	ldr	r1, [r3]
	lsr	r0, r0, #0x16
	add	r1, r1, r0
	ldr	r2, .L766+0x4
	add	r1, r1, r2
	mov	r2, #0x0
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r4, .L766+0x8
	add	r1, r1, r4
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L766+0xc
	add	r1, r1, r0
	strh	r2, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L767:
	.align	2, 0
.L766:
	.word	gSaveBlock1Ptr
	.word	0x27d0
	.word	0x27d1
	.word	0x27d2
.Lfe90:
	.size	 ClearPokemonNewsI,.Lfe90-ClearPokemonNewsI
	.align	2, 0
	.type	 sub_80EEEB8,function
	.thumb_func
sub_80EEEB8:
	push	{r4, r5, r6, r7, lr}
	mov	r2, #0x0
	ldr	r6, .L782
.L772:
	ldr	r0, .L782
	ldr	r0, [r0]
	lsl	r1, r2, #0x2
	add	r0, r0, r1
	ldr	r3, .L782+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	add	r5, r2, #0x1
	cmp	r0, #0
	bne	.L771	@cond_branch
	lsl	r0, r5, #0x18
	b	.L781
.L783:
	.align	2, 0
.L782:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.L777:
	ldr	r3, [r6]
	lsl	r4, r2, #0x2
	add	r0, r3, r4
	ldr	r7, .L784
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L776	@cond_branch
	add	r0, r3, r7
	add	r1, r0, r1
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r2, #0
	bl	ClearPokemonNewsI
	b	.L771
.L785:
	.align	2, 0
.L784:
	.word	0x27d0
.L776:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
.L781:
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L777	@cond_branch
.L771:
	lsl	r0, r5, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xe
	bls	.L772	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 sub_80EEEB8,.Lfe91-sub_80EEEB8
	.align	2, 0
	.globl	FindAnyTVNewsOnTheAir
	.type	 FindAnyTVNewsOnTheAir,function
	.thumb_func
FindAnyTVNewsOnTheAir:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r0, .L794
	ldr	r3, [r0]
.L790:
	lsl	r0, r2, #0x2
	add	r1, r3, r0
	ldr	r4, .L794+0x4
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L789	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L789	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrh	r0, [r0]
	cmp	r0, #0x2
	bhi	.L789	@cond_branch
	add	r0, r2, #0
	b	.L793
.L795:
	.align	2, 0
.L794:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.L789:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L790	@cond_branch
	mov	r0, #0xff
.L793:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe92:
	.size	 FindAnyTVNewsOnTheAir,.Lfe92-FindAnyTVNewsOnTheAir
	.align	2, 0
	.globl	DoPokeNews
	.type	 DoPokeNews,function
	.thumb_func
DoPokeNews:
	push	{r4, r5, lr}
	bl	FindAnyTVNewsOnTheAir
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	bne	.L797	@cond_branch
	ldr	r1, .L805
	mov	r0, #0x0
	b	.L803
.L806:
	.align	2, 0
.L805:
	.word	gSpecialVar_Result
.L797:
	ldr	r5, .L807
	ldr	r0, [r5]
	lsl	r4, r2, #0x2
	add	r1, r0, r4
	ldr	r0, .L807+0x4
	add	r2, r1, r0
	ldrh	r0, [r2]
	cmp	r0, #0
	bne	.L799	@cond_branch
	ldr	r2, .L807+0x8
	add	r1, r1, r2
	mov	r0, #0x2
	strb	r0, [r1]
	ldr	r0, .L807+0xc
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x13
	bgt	.L800	@cond_branch
	ldr	r1, .L807+0x10
	ldr	r0, [r5]
	add	r0, r0, r4
	sub	r2, r2, #0x1
	b	.L804
.L808:
	.align	2, 0
.L807:
	.word	gSaveBlock1Ptr
	.word	0x27d2
	.word	0x27d1
	.word	gLocalTime
	.word	sPokeNewsTextGroup_Ongoing
.L800:
	ldr	r1, .L809
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r2, .L809+0x4
.L804:
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	b	.L802
.L810:
	.align	2, 0
.L809:
	.word	sPokeNewsTextGroup_Ending
	.word	0x27d0
.L799:
	ldrh	r1, [r2]
	ldr	r0, .L811
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L811+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r1, .L811+0x8
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r2, .L811+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
.L802:
	ldr	r1, .L811+0x10
	mov	r0, #0x1
.L803:
	strh	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L812:
	.align	2, 0
.L811:
	.word	gStringVar1
	.word	0x27d1
	.word	sPokeNewsTextGroup_Upcoming
	.word	0x27d0
	.word	gSpecialVar_Result
.Lfe93:
	.size	 DoPokeNews,.Lfe93-DoPokeNews
	.align	2, 0
	.globl	GetPriceReduction
	.type	 GetPriceReduction,function
	.thumb_func
GetPriceReduction:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0
	bne	.L814	@cond_branch
	b	.L824
.L823:
	mov	r0, #0x1
	b	.L822
.L814:
	mov	r2, #0x0
	ldr	r4, .L825
.L818:
	ldr	r1, [r4]
	lsl	r0, r2, #0x2
	add	r1, r1, r0
	ldr	r5, .L825+0x4
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L817	@cond_branch
	ldr	r2, .L825+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L824	@cond_branch
	add	r0, r3, #0
	bl	IsPriceDiscounted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L823	@cond_branch
	b	.L824
.L826:
	.align	2, 0
.L825:
	.word	gSaveBlock1Ptr
	.word	0x27d0
	.word	0x27d1
.L817:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L818	@cond_branch
.L824:
	mov	r0, #0x0
.L822:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 GetPriceReduction,.Lfe94-GetPriceReduction
	.align	2, 0
	.globl	IsPriceDiscounted
	.type	 IsPriceDiscounted,function
	.thumb_func
IsPriceDiscounted:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L829	@cond_branch
	cmp	r0, #0x3
	beq	.L831	@cond_branch
.L837:
	mov	r0, #0x1
	b	.L835
.L829:
	ldr	r0, .L838
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L832	@cond_branch
	ldr	r0, .L838+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x19
	beq	.L837	@cond_branch
	b	.L832
.L839:
	.align	2, 0
.L838:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_LastTalked
.L831:
	ldr	r0, .L840
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L840+0x4
	cmp	r1, r0
	beq	.L837	@cond_branch
.L832:
	mov	r0, #0x0
.L835:
	pop	{r1}
	bx	r1
.L841:
	.align	2, 0
.L840:
	.word	gSaveBlock1Ptr
	.word	0x150d
.Lfe95:
	.size	 IsPriceDiscounted,.Lfe95-IsPriceDiscounted
	.align	2, 0
	.globl	sub_80EF0E4
	.type	 sub_80EF0E4,function
	.thumb_func
sub_80EF0E4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L843	@cond_branch
.L852:
	mov	r0, #0x1
	b	.L850
.L843:
	mov	r1, #0x0
	ldr	r0, .L853
	ldr	r3, [r0]
	ldr	r4, .L853+0x4
.L847:
	lsl	r0, r1, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, r2
	beq	.L852	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L847	@cond_branch
	mov	r0, #0x0
.L850:
	pop	{r4}
	pop	{r1}
	bx	r1
.L854:
	.align	2, 0
.L853:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.Lfe96:
	.size	 sub_80EF0E4,.Lfe96-sub_80EF0E4
	.align	2, 0
	.type	 sub_80EF120,function
	.thumb_func
sub_80EF120:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r6, #0x0
	ldr	r0, .L865
	mov	r8, r0
.L859:
	mov	r1, r8
	ldr	r0, [r1]
	lsl	r1, r6, #0x2
	add	r2, r0, r1
	ldr	r3, .L865+0x4
	add	r0, r2, r3
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0
	beq	.L858	@cond_branch
	ldr	r1, .L865+0x8
	add	r0, r2, r1
	ldrh	r0, [r0]
	cmp	r0, r7
	bcs	.L861	@cond_branch
	add	r0, r6, #0
	bl	ClearPokemonNewsI
	b	.L858
.L866:
	.align	2, 0
.L865:
	.word	gSaveBlock1Ptr
	.word	0x27d0
	.word	0x27d2
.L861:
	ldr	r5, .L867
	add	r0, r2, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L863	@cond_branch
	ldr	r0, .L867+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1
	bne	.L863	@cond_branch
	mov	r2, r8
	ldr	r0, [r2]
	add	r0, r0, r4
	add	r0, r0, r5
	strb	r1, [r0]
.L863:
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r4
	ldr	r0, .L867+0x8
	add	r1, r1, r0
	ldrh	r0, [r1]
	sub	r0, r0, r7
	strh	r0, [r1]
.L858:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0xf
	bls	.L859	@cond_branch
	bl	sub_80EEEB8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L868:
	.align	2, 0
.L867:
	.word	0x27d1
	.word	0x864
	.word	0x27d2
.Lfe97:
	.size	 sub_80EF120,.Lfe97-sub_80EF120
	.align	2, 0
	.globl	CopyContestRankToStringVar
	.type	 CopyContestRankToStringVar,function
	.thumb_func
CopyContestRankToStringVar:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x1
	beq	.L872	@cond_branch
	cmp	r1, #0x1
	bgt	.L877	@cond_branch
	cmp	r1, #0
	beq	.L871	@cond_branch
	b	.L870
.L877:
	cmp	r2, #0x2
	beq	.L873	@cond_branch
	cmp	r2, #0x3
	beq	.L874	@cond_branch
	b	.L870
.L871:
	ldr	r1, .L878
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L878+0x4
	ldr	r1, [r1, #0x14]
	bl	StringCopy
	b	.L870
.L879:
	.align	2, 0
.L878:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.L872:
	ldr	r1, .L880
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L880+0x4
	ldr	r1, [r1, #0x18]
	bl	StringCopy
	b	.L870
.L881:
	.align	2, 0
.L880:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.L873:
	ldr	r1, .L882
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L882+0x4
	ldr	r1, [r1, #0x1c]
	bl	StringCopy
	b	.L870
.L883:
	.align	2, 0
.L882:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.L874:
	ldr	r1, .L884
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L884+0x4
	ldr	r1, [r1, #0x20]
	bl	StringCopy
.L870:
	pop	{r0}
	bx	r0
.L885:
	.align	2, 0
.L884:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.Lfe98:
	.size	 CopyContestRankToStringVar,.Lfe98-CopyContestRankToStringVar
	.align	2, 0
	.globl	CopyContestCategoryToStringVar
	.type	 CopyContestCategoryToStringVar,function
	.thumb_func
CopyContestCategoryToStringVar:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r0, r1, #0x18
	cmp	r0, #0x4
	bhi	.L887	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L895
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L896:
	.align	2, 0
.L895:
	.word	.L893
	.align	2, 0
	.align	2, 0
.L893:
	.word	.L888
	.word	.L889
	.word	.L890
	.word	.L891
	.word	.L892
.L888:
	ldr	r1, .L897
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L897+0x4
	ldr	r1, [r1]
	bl	StringCopy
	b	.L887
.L898:
	.align	2, 0
.L897:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.L889:
	ldr	r1, .L899
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L899+0x4
	ldr	r1, [r1, #0x4]
	bl	StringCopy
	b	.L887
.L900:
	.align	2, 0
.L899:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.L890:
	ldr	r1, .L901
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L901+0x4
	ldr	r1, [r1, #0x8]
	bl	StringCopy
	b	.L887
.L902:
	.align	2, 0
.L901:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.L891:
	ldr	r1, .L903
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L903+0x4
	ldr	r1, [r1, #0xc]
	bl	StringCopy
	b	.L887
.L904:
	.align	2, 0
.L903:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.L892:
	ldr	r1, .L905
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L905+0x4
	ldr	r1, [r1, #0x10]
	bl	StringCopy
.L887:
	pop	{r0}
	bx	r0
.L906:
	.align	2, 0
.L905:
	.word	gTVStringVarPtrs
	.word	gStdStrings
.Lfe99:
	.size	 CopyContestCategoryToStringVar,.Lfe99-CopyContestCategoryToStringVar
	.align	2, 0
	.globl	SetContestCategoryStringVarForInterview
	.type	 SetContestCategoryStringVarForInterview,function
	.thumb_func
SetContestCategoryStringVarForInterview:
	push	{lr}
	ldr	r2, .L908
	ldr	r0, .L908+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L908+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r1, r1, r0
	ldrb	r1, [r1, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	pop	{r0}
	bx	r0
.L909:
	.align	2, 0
.L908:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
.Lfe100:
	.size	 SetContestCategoryStringVarForInterview,.Lfe100-SetContestCategoryStringVarForInterview
	.align	2, 0
	.globl	TV_PrintIntToStringVar
	.type	 TV_PrintIntToStringVar,function
	.thumb_func
TV_PrintIntToStringVar:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	CountDigits
	add	r3, r0, #0
	ldr	r0, .L911
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r1, r5, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L912:
	.align	2, 0
.L911:
	.word	gTVStringVarPtrs
.Lfe101:
	.size	 TV_PrintIntToStringVar,.Lfe101-TV_PrintIntToStringVar
	.align	2, 0
	.globl	CountDigits
	.type	 CountDigits,function
	.thumb_func
CountDigits:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xa
	bl	__divsi3
	cmp	r0, #0
	beq	.L923	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__divsi3
	cmp	r0, #0
	bne	.L915	@cond_branch
	mov	r0, #0x2
	b	.L922
.L915:
	mov	r1, #0xfa
	lsl	r1, r1, #0x2
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L916	@cond_branch
	mov	r0, #0x3
	b	.L922
.L916:
	ldr	r1, .L924
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L917	@cond_branch
	mov	r0, #0x4
	b	.L922
.L925:
	.align	2, 0
.L924:
	.word	0x2710
.L917:
	ldr	r1, .L926
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L918	@cond_branch
	mov	r0, #0x5
	b	.L922
.L927:
	.align	2, 0
.L926:
	.word	0x186a0
.L918:
	ldr	r1, .L928
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L919	@cond_branch
	mov	r0, #0x6
	b	.L922
.L929:
	.align	2, 0
.L928:
	.word	0xf4240
.L919:
	ldr	r1, .L930
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L920	@cond_branch
	mov	r0, #0x7
	b	.L922
.L931:
	.align	2, 0
.L930:
	.word	0x989680
.L920:
	ldr	r1, .L932
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	beq	.L921	@cond_branch
.L923:
	mov	r0, #0x1
	b	.L922
.L933:
	.align	2, 0
.L932:
	.word	0x5f5e100
.L921:
	mov	r0, #0x8
.L922:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe102:
	.size	 CountDigits,.Lfe102-CountDigits
	.align	2, 0
	.type	 sub_80EF40C,function
	.thumb_func
sub_80EF40C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r7, #0x0
	mov	r5, #0x0
.L938:
	lsl	r4, r5, #0x1
	add	r0, r6, #0x6
	add	r1, r0, r4
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L937	@cond_branch
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r1, r1, #0xc
	add	r1, r1, r4
	ldrh	r1, [r1]
	mul	r0, r0, r1
	add	r7, r7, r0
.L937:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L938	@cond_branch
	ldrb	r0, [r6, #0x2]
	cmp	r0, #0x1
	bne	.L941	@cond_branch
	asr	r1, r7, #0x1
	mov	r0, r8
	bl	TV_PrintIntToStringVar
	b	.L942
.L941:
	mov	r0, r8
	add	r1, r7, #0
	bl	TV_PrintIntToStringVar
.L942:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe103:
	.size	 sub_80EF40C,.Lfe103-sub_80EF40C
	.align	2, 0
	.globl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	.type	 HasMixableShowAlreadyBeenSpawnedWithPlayerID,function
	.thumb_func
HasMixableShowAlreadyBeenSpawnedWithPlayerID:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	ldr	r5, .L952
	ldr	r0, [r5]
	ldr	r4, .L952+0x4
	add	r0, r0, r4
	mov	r8, r0
	bl	GetPlayerIDAsU32
	add	r7, r0, #0
	mov	r6, #0x5
.L947:
	lsl	r0, r6, #0x3
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	mov	r2, r8
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, sl
	bne	.L946	@cond_branch
	mov	r3, #0xff
	add	r0, r7, #0
	and	r0, r0, r3
	add	r2, r1, #0
	add	r2, r2, #0x22
	ldrb	r2, [r2]
	cmp	r0, r2
	bne	.L946	@cond_branch
	lsr	r0, r7, #0x8
	and	r0, r0, r3
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L946	@cond_branch
	mov	r0, r9
	cmp	r0, #0x1
	bne	.L949	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r1, r6, #0
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
.L949:
	mov	r0, #0x1
	b	.L951
.L953:
	.align	2, 0
.L952:
	.word	gSaveBlock1Ptr
	.word	0x244c
.L946:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x17
	bls	.L947	@cond_branch
	mov	r0, #0x0
.L951:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 HasMixableShowAlreadyBeenSpawnedWithPlayerID,.Lfe104-HasMixableShowAlreadyBeenSpawnedWithPlayerID
	.align	2, 0
	.globl	TV_SortPurchasesByQuantity
	.type	 TV_SortPurchasesByQuantity,function
	.thumb_func
TV_SortPurchasesByQuantity:
	push	{r4, r5, r6, r7, lr}
	mov	r2, #0x0
.L958:
	add	r1, r2, #0x1
	lsl	r0, r1, #0x18
	lsr	r5, r0, #0x18
	add	r7, r1, #0
	cmp	r5, #0x2
	bhi	.L957	@cond_branch
	ldr	r6, .L966
	lsl	r0, r2, #0x2
	add	r4, r0, r6
.L962:
	lsl	r0, r5, #0x2
	add	r3, r0, r6
	ldrh	r0, [r4, #0x2]
	ldrh	r1, [r3, #0x2]
	cmp	r0, r1
	bcs	.L961	@cond_branch
	ldrh	r1, [r4]
	add	r2, r0, #0
	ldrh	r0, [r3]
	strh	r0, [r4]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r4, #0x2]
	strh	r1, [r3]
	strh	r2, [r3, #0x2]
.L961:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L962	@cond_branch
.L957:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1
	bls	.L958	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L967:
	.align	2, 0
.L966:
	.word	gMartPurchaseHistory
.Lfe105:
	.size	 TV_SortPurchasesByQuantity,.Lfe105-TV_SortPurchasesByQuantity
	.align	2, 0
	.globl	FindActiveBroadcastByShowType_SetScriptResult
	.type	 FindActiveBroadcastByShowType_SetScriptResult,function
	.thumb_func
FindActiveBroadcastByShowType_SetScriptResult:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r1, #0x0
	ldr	r5, .L977
	ldr	r4, .L977+0x4
.L972:
	ldr	r3, [r5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r3, r0
	add	r0, r2, r4
	ldrb	r0, [r0]
	cmp	r0, r6
	bne	.L971	@cond_branch
	ldr	r6, .L977+0x8
	add	r0, r2, r6
	ldrb	r2, [r0]
	cmp	r2, #0x1
	bne	.L974	@cond_branch
	ldr	r0, .L977+0xc
	strh	r2, [r0]
	b	.L968
.L978:
	.align	2, 0
.L977:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	0x244d
	.word	gSpecialVar_Result
.L974:
	add	r0, r3, r4
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
	bl	sub_80EFA88
	b	.L968
.L971:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L972	@cond_branch
	bl	sub_80EFA88
.L968:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe106:
	.size	 FindActiveBroadcastByShowType_SetScriptResult,.Lfe106-FindActiveBroadcastByShowType_SetScriptResult
	.align	2, 0
	.globl	InterviewBefore
	.type	 InterviewBefore,function
	.thumb_func
InterviewBefore:
	push	{lr}
	ldr	r1, .L993
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L993+0x4
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xa
	bhi	.L980	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L993+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L994:
	.align	2, 0
.L993:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8005
	.word	.L991
	.align	2, 0
	.align	2, 0
.L991:
	.word	.L981
	.word	.L982
	.word	.L983
	.word	.L984
	.word	.L985
	.word	.L986
	.word	.L987
	.word	.L988
	.word	.L989
	.word	.L980
	.word	.L990
.L981:
	bl	InterviewBefore_FanClubLetter
	b	.L980
.L982:
	bl	InterviewBefore_RecentHappenings
	b	.L980
.L983:
	bl	InterviewBefore_PkmnFanClubOpinions
	b	.L980
.L984:
	bl	InterviewBefore_Dummy
	b	.L980
.L985:
	bl	InterviewBefore_NameRater
	b	.L980
.L986:
	bl	InterviewBefore_BravoTrainerPkmnProfile
	b	.L980
.L987:
	bl	InterviewBefore_BravoTrainerBTProfile
	b	.L980
.L988:
	bl	InterviewBefore_ContestLiveUpdates
	b	.L980
.L989:
	bl	InterviewBefore_3CheersForPokeblocks
	b	.L980
.L990:
	bl	InterviewBefore_FanClubSpecial
.L980:
	pop	{r0}
	bx	r0
.Lfe107:
	.size	 InterviewBefore,.Lfe107-InterviewBefore
	.align	2, 0
	.type	 InterviewBefore_FanClubLetter,function
	.thumb_func
InterviewBefore_FanClubLetter:
	push	{r4, lr}
	mov	r0, #0x1
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L997
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L996	@cond_branch
	ldr	r4, .L997+0x4
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L997+0x8
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L997+0xc
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r2, .L997+0x10
	ldr	r0, .L997+0x14
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L997+0x18
	add	r0, r0, r1
	mov	r1, #0x6
	bl	InitializeEasyChatWordArray
.L996:
	pop	{r4}
	pop	{r0}
	bx	r0
.L998:
	.align	2, 0
.L997:
	.word	gSpecialVar_Result
	.word	gStringVar1
	.word	gPlayerParty
	.word	gSpeciesNames
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x2450
.Lfe108:
	.size	 InterviewBefore_FanClubLetter,.Lfe108-InterviewBefore_FanClubLetter
	.align	2, 0
	.type	 InterviewBefore_RecentHappenings,function
	.thumb_func
InterviewBefore_RecentHappenings:
	push	{lr}
	mov	r0, #0x2
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1001
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1000	@cond_branch
	ldr	r2, .L1001+0x4
	ldr	r0, .L1001+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1001+0xc
	add	r0, r0, r1
	mov	r1, #0x6
	bl	InitializeEasyChatWordArray
.L1000:
	pop	{r0}
	bx	r0
.L1002:
	.align	2, 0
.L1001:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x2450
.Lfe109:
	.size	 InterviewBefore_RecentHappenings,.Lfe109-InterviewBefore_RecentHappenings
	.align	2, 0
	.type	 InterviewBefore_PkmnFanClubOpinions,function
	.thumb_func
InterviewBefore_PkmnFanClubOpinions:
	push	{r4, r5, r6, lr}
	mov	r0, #0x3
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1005
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1004	@cond_branch
	ldr	r6, .L1005+0x4
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L1005+0x8
	add	r0, r0, r4
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1005+0xc
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r4
	ldr	r4, .L1005+0x10
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGetEnd10
	ldr	r2, .L1005+0x14
	ldr	r0, .L1005+0x18
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1005+0x1c
	add	r0, r0, r1
	mov	r1, #0x2
	bl	InitializeEasyChatWordArray
.L1004:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1006:
	.align	2, 0
.L1005:
	.word	gSpecialVar_Result
	.word	gStringVar1
	.word	gPlayerParty
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x2468
.Lfe110:
	.size	 InterviewBefore_PkmnFanClubOpinions,.Lfe110-InterviewBefore_PkmnFanClubOpinions
	.align	2, 0
	.type	 InterviewBefore_Dummy,function
	.thumb_func
InterviewBefore_Dummy:
	ldr	r1, .L1008
	mov	r0, #0x1
	strh	r0, [r1]
	bx	lr
.L1009:
	.align	2, 0
.L1008:
	.word	gSpecialVar_Result
.Lfe111:
	.size	 InterviewBefore_Dummy,.Lfe111-InterviewBefore_Dummy
	.align	2, 0
	.type	 InterviewBefore_NameRater,function
	.thumb_func
InterviewBefore_NameRater:
	push	{lr}
	mov	r0, #0x5
	bl	FindActiveBroadcastByShowType_SetScriptResult
	pop	{r0}
	bx	r0
.Lfe112:
	.size	 InterviewBefore_NameRater,.Lfe112-InterviewBefore_NameRater
	.align	2, 0
	.type	 InterviewBefore_BravoTrainerPkmnProfile,function
	.thumb_func
InterviewBefore_BravoTrainerPkmnProfile:
	push	{lr}
	mov	r0, #0x6
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1013
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1012	@cond_branch
	ldr	r2, .L1013+0x4
	ldr	r0, .L1013+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1013+0xc
	add	r0, r0, r1
	mov	r1, #0x2
	bl	InitializeEasyChatWordArray
.L1012:
	pop	{r0}
	bx	r0
.L1014:
	.align	2, 0
.L1013:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x2450
.Lfe113:
	.size	 InterviewBefore_BravoTrainerPkmnProfile,.Lfe113-InterviewBefore_BravoTrainerPkmnProfile
	.align	2, 0
	.type	 InterviewBefore_ContestLiveUpdates,function
	.thumb_func
InterviewBefore_ContestLiveUpdates:
	push	{lr}
	mov	r0, #0x8
	bl	FindActiveBroadcastByShowType_SetScriptResult
	pop	{r0}
	bx	r0
.Lfe114:
	.size	 InterviewBefore_ContestLiveUpdates,.Lfe114-InterviewBefore_ContestLiveUpdates
	.align	2, 0
	.type	 InterviewBefore_3CheersForPokeblocks,function
	.thumb_func
InterviewBefore_3CheersForPokeblocks:
	push	{lr}
	mov	r0, #0x9
	bl	FindActiveBroadcastByShowType_SetScriptResult
	pop	{r0}
	bx	r0
.Lfe115:
	.size	 InterviewBefore_3CheersForPokeblocks,.Lfe115-InterviewBefore_3CheersForPokeblocks
	.align	2, 0
	.type	 InterviewBefore_BravoTrainerBTProfile,function
	.thumb_func
InterviewBefore_BravoTrainerBTProfile:
	push	{lr}
	mov	r0, #0x7
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1019
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1018	@cond_branch
	ldr	r2, .L1019+0x4
	ldr	r0, .L1019+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1019+0xc
	add	r0, r0, r1
	mov	r1, #0x1
	bl	InitializeEasyChatWordArray
.L1018:
	pop	{r0}
	bx	r0
.L1020:
	.align	2, 0
.L1019:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x2464
.Lfe116:
	.size	 InterviewBefore_BravoTrainerBTProfile,.Lfe116-InterviewBefore_BravoTrainerBTProfile
	.align	2, 0
	.type	 InterviewBefore_FanClubSpecial,function
	.thumb_func
InterviewBefore_FanClubSpecial:
	push	{lr}
	mov	r0, #0xb
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1023
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1022	@cond_branch
	ldr	r2, .L1023+0x4
	ldr	r0, .L1023+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1023+0xc
	add	r0, r0, r1
	mov	r1, #0x1
	bl	InitializeEasyChatWordArray
.L1022:
	pop	{r0}
	bx	r0
.L1024:
	.align	2, 0
.L1023:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x2460
.Lfe117:
	.size	 InterviewBefore_FanClubSpecial,.Lfe117-InterviewBefore_FanClubSpecial
	.align	2, 0
	.type	 IsPartyMonNicknamedOrNotEnglish,function
	.thumb_func
IsPartyMonNicknamedOrNotEnglish:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1028
	add	r5, r1, r0
	ldr	r6, .L1028+0x4
	add	r0, r5, #0
	mov	r1, #0x2
	add	r2, r6, #0
	bl	GetMonData
	mov	r4, sp
	add	r0, r5, #0
	mov	r1, #0x3
	mov	r2, sp
	bl	GetMonData
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L1026	@cond_branch
	add	r0, r5, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r0, r0, r1
	ldr	r1, .L1028+0x8
	add	r0, r0, r1
	add	r1, r6, #0
	bl	StringCompare
	cmp	r0, #0
	bne	.L1026	@cond_branch
	mov	r0, #0x0
	b	.L1027
.L1029:
	.align	2, 0
.L1028:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSpeciesNames
.L1026:
	mov	r0, #0x1
.L1027:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe118:
	.size	 IsPartyMonNicknamedOrNotEnglish,.Lfe118-IsPartyMonNicknamedOrNotEnglish
	.align	2, 0
	.globl	IsLeadMonNicknamedOrNotEnglish
	.type	 IsLeadMonNicknamedOrNotEnglish,function
	.thumb_func
IsLeadMonNicknamedOrNotEnglish:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsPartyMonNicknamedOrNotEnglish
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe119:
	.size	 IsLeadMonNicknamedOrNotEnglish,.Lfe119-IsLeadMonNicknamedOrNotEnglish
	.align	2, 0
	.globl	DeleteTVShowInArrayByIdx
	.type	 DeleteTVShowInArrayByIdx,function
	.thumb_func
DeleteTVShowInArrayByIdx:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r1, #0x3
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	mov	r0, #0x0
	strb	r0, [r2]
	strb	r0, [r2, #0x1]
	mov	r1, #0x0
	add	r2, r2, #0x2
	mov	r3, #0x0
.L1035:
	add	r0, r2, r1
	strb	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x21
	bls	.L1035	@cond_branch
	pop	{r0}
	bx	r0
.Lfe120:
	.size	 DeleteTVShowInArrayByIdx,.Lfe120-DeleteTVShowInArrayByIdx
	.align	2, 0
	.type	 sub_80EF93C,function
	.thumb_func
sub_80EF93C:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	mov	r5, #0x0
.L1041:
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r1, r0, #0x2
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1040	@cond_branch
	add	r0, r5, #0x1
	b	.L1062
.L1046:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r0, r4
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L1045	@cond_branch
	add	r1, r1, r4
	add	r0, r3, #0
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	add	r0, r4, #0
	add	r1, r2, #0
	bl	DeleteTVShowInArrayByIdx
	b	.L1040
.L1045:
	add	r0, r2, #0x1
.L1062:
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L1046	@cond_branch
.L1040:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L1041	@cond_branch
	mov	r5, #0x5
.L1053:
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r1, r0, #0x2
	add	r0, r1, r4
	ldrb	r0, [r0]
	add	r5, r5, #0x1
	cmp	r0, #0
	bne	.L1052	@cond_branch
	lsl	r0, r5, #0x18
	b	.L1063
.L1058:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r0, r4
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L1057	@cond_branch
	add	r1, r1, r4
	add	r0, r3, #0
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	add	r0, r4, #0
	add	r1, r2, #0
	bl	DeleteTVShowInArrayByIdx
	b	.L1052
.L1057:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
.L1063:
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L1058	@cond_branch
.L1052:
	lsl	r0, r5, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x17
	bls	.L1053	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe121:
	.size	 sub_80EF93C,.Lfe121-sub_80EF93C
	.align	2, 0
	.globl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName
	.type	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName,function
	.thumb_func
TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L1065
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	mov	r1, #0xb
	mul	r1, r1, r5
	ldr	r2, .L1065+0x4
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1066:
	.align	2, 0
.L1065:
	.word	gTVStringVarPtrs
	.word	gSpeciesNames
.Lfe122:
	.size	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName,.Lfe122-TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName
	.align	2, 0
	.globl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	.type	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer,function
	.thumb_func
TV_GetSomeOtherSpeciesAlreadySeenByPlayer:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1077
	bl	__umodsi3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r6, r4, #0
	b	.L1068
.L1078:
	.align	2, 0
.L1077:
	.word	0x4b6
.L1070:
	cmp	r4, #0x1
	bne	.L1071	@cond_branch
	ldr	r4, .L1079
	b	.L1072
.L1080:
	.align	2, 0
.L1079:
	.word	0x4b6
.L1071:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L1072:
	cmp	r4, r6
	bne	.L1068	@cond_branch
	add	r4, r5, #0
	b	.L1076
.L1068:
	add	r0, r4, #0
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1070	@cond_branch
	cmp	r4, r5
	beq	.L1070	@cond_branch
.L1076:
	add	r0, r4, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe123:
	.size	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer,.Lfe123-TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	.align	2, 0
	.type	 sub_80EFA88,function
	.thumb_func
sub_80EFA88:
	push	{lr}
	ldr	r0, .L1085
	ldr	r0, [r0]
	ldr	r1, .L1085+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L1085+0x8
	strb	r0, [r1]
	ldr	r2, .L1085+0xc
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	strh	r1, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L1082	@cond_branch
	ldr	r1, .L1085+0x10
	mov	r0, #0x1
	b	.L1084
.L1086:
	.align	2, 0
.L1085:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	sCurTVShowSlot
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_Result
.L1082:
	ldr	r1, .L1087
	mov	r0, #0x0
.L1084:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L1088:
	.align	2, 0
.L1087:
	.word	gSpecialVar_Result
.Lfe124:
	.size	 sub_80EFA88,.Lfe124-sub_80EFA88
	.align	2, 0
	.globl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	.type	 FindEmptyTVSlotWithinFirstFiveShowsOfArray,function
	.thumb_func
FindEmptyTVSlotWithinFirstFiveShowsOfArray:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x0
.L1093:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1092	@cond_branch
	lsl	r0, r1, #0x18
	asr	r0, r0, #0x18
	b	.L1096
.L1092:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L1093	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1096:
	pop	{r1}
	bx	r1
.Lfe125:
	.size	 FindEmptyTVSlotWithinFirstFiveShowsOfArray,.Lfe125-FindEmptyTVSlotWithinFirstFiveShowsOfArray
	.align	2, 0
	.globl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	.type	 FindEmptyTVSlotBeyondFirstFiveShowsOfArray,function
	.thumb_func
FindEmptyTVSlotBeyondFirstFiveShowsOfArray:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x5
.L1101:
	lsl	r0, r1, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1100	@cond_branch
	add	r0, r1, #0
	b	.L1104
.L1100:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x17
	ble	.L1101	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1104:
	pop	{r1}
	bx	r1
.Lfe126:
	.size	 FindEmptyTVSlotBeyondFirstFiveShowsOfArray,.Lfe126-FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	.align	2, 0
	.globl	TV_BernoulliTrial
	.type	 TV_BernoulliTrial,function
	.thumb_func
TV_BernoulliTrial:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r4
	bls	.L1106	@cond_branch
	mov	r0, #0x1
	b	.L1107
.L1106:
	mov	r0, #0x0
.L1107:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe127:
	.size	 TV_BernoulliTrial,.Lfe127-TV_BernoulliTrial
	.align	2, 0
	.globl	TV_FanClubLetter_RandomWordToStringVar3
	.type	 TV_FanClubLetter_RandomWordToStringVar3,function
	.thumb_func
TV_FanClubLetter_RandomWordToStringVar3:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r5, r4, #0x4
	ldr	r6, .L1115
	b	.L1111
.L1116:
	.align	2, 0
.L1115:
	.word	0xffff
.L1113:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L1111:
	cmp	r2, #0x6
	bne	.L1112	@cond_branch
	mov	r2, #0x0
.L1112:
	lsl	r1, r2, #0x1
	add	r0, r5, r1
	ldrh	r0, [r0]
	add	r3, r4, #0x4
	cmp	r0, r6
	beq	.L1113	@cond_branch
	ldr	r0, .L1117
	add	r1, r3, r1
	ldrh	r1, [r1]
	bl	CopyEasyChatWord
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1118:
	.align	2, 0
.L1117:
	.word	gStringVar3
.Lfe128:
	.size	 TV_FanClubLetter_RandomWordToStringVar3,.Lfe128-TV_FanClubLetter_RandomWordToStringVar3
	.align	2, 0
	.globl	TV_GetNicknameSumMod8
	.type	 TV_GetNicknameSumMod8,function
	.thumb_func
TV_GetNicknameSumMod8:
	push	{lr}
	add	r2, r0, #0
	mov	r3, #0x0
	mov	r1, #0x0
	ldrb	r0, [r2, #0x4]
	cmp	r0, #0xff
	beq	.L1121	@cond_branch
	add	r2, r2, #0x4
.L1124:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r3, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bhi	.L1121	@cond_branch
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L1124	@cond_branch
.L1121:
	mov	r0, #0x7
	and	r3, r3, r0
	add	r0, r3, #0
	pop	{r1}
	bx	r1
.Lfe129:
	.size	 TV_GetNicknameSumMod8,.Lfe129-TV_GetNicknameSumMod8
	.align	2, 0
	.globl	TV_GetNicknameSubstring
	.type	 TV_GetNicknameSubstring,function
	.thumb_func
TV_GetNicknameSubstring:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	ldr	r4, [sp, #0x2c]
	ldr	r5, [sp, #0x30]
	mov	r8, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r2, #0x0
	mov	r7, #0xff
.L1130:
	mov	r1, sp
	add	r0, r1, r2
	ldrb	r1, [r0]
	orr	r1, r1, r7
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L1130	@cond_branch
	cmp	r3, #0
	bne	.L1132	@cond_branch
	mov	r4, r8
	add	r4, r4, #0xf
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L1133	@cond_branch
	mov	r0, sp
	add	r1, r4, r5
	b	.L1154
.L1133:
	cmp	r6, #0x1
	bne	.L1135	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r4, r1
.L1154:
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1134
.L1135:
	cmp	r6, #0x2
	bne	.L1137	@cond_branch
	mov	r1, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	b	.L1155
.L1137:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
.L1155:
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
.L1134:
	mov	r2, r8
	ldrb	r1, [r2, #0x1e]
	b	.L1156
.L1132:
	cmp	r3, #0x1
	bne	.L1140	@cond_branch
	mov	r4, r8
	add	r4, r4, #0x4
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L1141	@cond_branch
	mov	r0, sp
	add	r1, r4, r5
	b	.L1157
.L1141:
	cmp	r6, #0x1
	bne	.L1143	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r4, r1
.L1157:
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1142
.L1143:
	cmp	r6, #0x2
	bne	.L1145	@cond_branch
	mov	r1, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	b	.L1158
.L1145:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
.L1158:
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
.L1142:
	mov	r5, r8
	ldrb	r1, [r5, #0x1f]
.L1156:
	mov	r0, sp
	bl	ConvertInternationalString
	b	.L1139
.L1140:
	mov	r0, #0xb
	mul	r4, r4, r0
	ldr	r7, .L1161
	add	r0, r4, r7
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L1148	@cond_branch
	mov	r0, sp
	add	r1, r5, r4
	b	.L1159
.L1162:
	.align	2, 0
.L1161:
	.word	gSpeciesNames
.L1148:
	cmp	r6, #0x1
	bne	.L1150	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r1, r4
.L1159:
	add	r1, r1, r7
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1139
.L1150:
	cmp	r6, #0x2
	bne	.L1152	@cond_branch
	mov	r1, sp
	add	r0, r5, r4
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r4, #0x1
	add	r0, r5, r0
	b	.L1160
.L1152:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r0, r4
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
	add	r0, r0, r4
.L1160:
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
.L1139:
	ldr	r0, .L1163
	mov	r2, r9
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	mov	r1, sp
	bl	StringCopy
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1164:
	.align	2, 0
.L1163:
	.word	gTVStringVarPtrs
.Lfe130:
	.size	 TV_GetNicknameSubstring,.Lfe130-TV_GetNicknameSubstring
	.align	2, 0
	.globl	TV_IsScriptShowKindAlreadyInQueue
	.type	 TV_IsScriptShowKindAlreadyInQueue,function
	.thumb_func
TV_IsScriptShowKindAlreadyInQueue:
	push	{r4, lr}
	mov	r1, #0x0
	ldr	r0, .L1173
	ldr	r3, [r0]
	ldr	r0, .L1173+0x4
	ldrh	r2, [r0]
	ldr	r4, .L1173+0x8
.L1169:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, r2
	bne	.L1168	@cond_branch
	mov	r0, #0x1
	b	.L1172
.L1174:
	.align	2, 0
.L1173:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
.L1168:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L1169	@cond_branch
	mov	r0, #0x0
.L1172:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe131:
	.size	 TV_IsScriptShowKindAlreadyInQueue,.Lfe131-TV_IsScriptShowKindAlreadyInQueue
	.align	2, 0
	.globl	TryPutNameRaterShowOnTheAir
	.type	 TryPutNameRaterShowOnTheAir,function
	.thumb_func
TryPutNameRaterShowOnTheAir:
	push	{r4, lr}
	ldr	r0, .L1178
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1178+0x4
	add	r0, r0, r1
	ldr	r4, .L1178+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	ldr	r0, .L1178+0xc
	add	r1, r4, #0
	bl	StringCompare
	cmp	r0, #0
	beq	.L1176	@cond_branch
	bl	PutNameRaterShowOnTheAir
	mov	r0, #0x1
	b	.L1177
.L1179:
	.align	2, 0
.L1178:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar3
.L1176:
	mov	r0, #0x0
.L1177:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe132:
	.size	 TryPutNameRaterShowOnTheAir,.Lfe132-TryPutNameRaterShowOnTheAir
	.align	2, 0
	.globl	ChangePokemonNickname
	.type	 ChangePokemonNickname,function
	.thumb_func
ChangePokemonNickname:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	ldr	r0, .L1181
	mov	r9, r0
	ldrh	r0, [r0]
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r6, .L1181+0x4
	add	r0, r0, r6
	ldr	r2, .L1181+0x8
	mov	r1, #0x2
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	ldr	r7, .L1181+0xc
	mov	r1, #0x2
	add	r2, r7, #0
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	bl	GetMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	mov	sl, r0
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0x59
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sl
	str	r1, [sp]
	ldr	r1, .L1181+0x10
	str	r1, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r7, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	DoNamingScreen
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1182:
	.align	2, 0
.L1181:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar3
	.word	gStringVar2
	.word	ChangePokemonNickname_CB
.Lfe133:
	.size	 ChangePokemonNickname,.Lfe133-ChangePokemonNickname
	.align	2, 0
	.globl	ChangePokemonNickname_CB
	.type	 ChangePokemonNickname_CB,function
	.thumb_func
ChangePokemonNickname_CB:
	push	{lr}
	ldr	r0, .L1184
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1184+0x4
	add	r0, r0, r1
	ldr	r2, .L1184+0x8
	mov	r1, #0x2
	bl	SetMonData
	bl	CB2_ReturnToFieldContinueScriptPlayMapMusic
	pop	{r0}
	bx	r0
.L1185:
	.align	2, 0
.L1184:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar2
.Lfe134:
	.size	 ChangePokemonNickname_CB,.Lfe134-ChangePokemonNickname_CB
	.align	2, 0
	.globl	ChangeBoxPokemonNickname
	.type	 ChangeBoxPokemonNickname,function
	.thumb_func
ChangeBoxPokemonNickname:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	ldr	r0, .L1187
	ldrb	r0, [r0]
	ldr	r1, .L1187+0x4
	ldrb	r1, [r1]
	bl	GetBoxedMonPtr
	add	r5, r0, #0
	ldr	r2, .L1187+0x8
	mov	r1, #0x2
	bl	GetBoxMonData
	ldr	r0, .L1187+0xc
	mov	r9, r0
	add	r0, r5, #0
	mov	r1, #0x2
	mov	r2, r9
	bl	GetBoxMonData
	add	r0, r5, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetBoxMonData
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	add	r0, r5, #0
	bl	GetBoxMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetBoxMonData
	mov	r8, r0
	add	r0, r5, #0
	mov	r1, #0x59
	mov	r2, #0x0
	bl	GetBoxMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	str	r1, [sp]
	ldr	r1, .L1187+0x10
	str	r1, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r9
	add	r2, r6, #0
	add	r3, r4, #0
	bl	DoNamingScreen
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1188:
	.align	2, 0
.L1187:
	.word	gSpecialVar_MonBoxId
	.word	gSpecialVar_MonBoxPos
	.word	gStringVar3
	.word	gStringVar2
	.word	ChangeBoxPokemonNickname_CB
.Lfe135:
	.size	 ChangeBoxPokemonNickname,.Lfe135-ChangeBoxPokemonNickname
	.align	2, 0
	.globl	ChangeBoxPokemonNickname_CB
	.type	 ChangeBoxPokemonNickname_CB,function
	.thumb_func
ChangeBoxPokemonNickname_CB:
	push	{lr}
	ldr	r0, .L1190
	ldrb	r0, [r0]
	ldr	r1, .L1190+0x4
	ldrb	r1, [r1]
	ldr	r2, .L1190+0x8
	bl	SetBoxMonNickAt
	bl	CB2_ReturnToFieldContinueScriptPlayMapMusic
	pop	{r0}
	bx	r0
.L1191:
	.align	2, 0
.L1190:
	.word	gSpecialVar_MonBoxId
	.word	gSpecialVar_MonBoxPos
	.word	gStringVar2
.Lfe136:
	.size	 ChangeBoxPokemonNickname_CB,.Lfe136-ChangeBoxPokemonNickname_CB
	.align	2, 0
	.globl	BufferMonNickname
	.type	 BufferMonNickname,function
	.thumb_func
BufferMonNickname:
	push	{r4, lr}
	ldr	r0, .L1193
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1193+0x4
	add	r0, r0, r1
	ldr	r4, .L1193+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGetEnd10
	pop	{r4}
	pop	{r0}
	bx	r0
.L1194:
	.align	2, 0
.L1193:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
.Lfe137:
	.size	 BufferMonNickname,.Lfe137-BufferMonNickname
	.align	2, 0
	.globl	IsMonOTIDNotPlayers
	.type	 IsMonOTIDNotPlayers,function
	.thumb_func
IsMonOTIDNotPlayers:
	push	{r4, lr}
	bl	GetPlayerIDAsU32
	add	r4, r0, #0
	ldr	r0, .L1199
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1199+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	cmp	r4, r0
	bne	.L1196	@cond_branch
	ldr	r1, .L1199+0x8
	mov	r0, #0x0
	b	.L1198
.L1200:
	.align	2, 0
.L1199:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_Result
.L1196:
	ldr	r1, .L1201
	mov	r0, #0x1
.L1198:
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1202:
	.align	2, 0
.L1201:
	.word	gSpecialVar_Result
.Lfe138:
	.size	 IsMonOTIDNotPlayers,.Lfe138-IsMonOTIDNotPlayers
	.align	2, 0
	.globl	GetTVChannelByShowType
	.type	 GetTVChannelByShowType,function
	.thumb_func
GetTVChannelByShowType:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	cmp	r1, #0
	beq	.L1209	@cond_branch
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L1205	@cond_branch
	mov	r0, #0x2
	b	.L1208
.L1205:
	add	r0, r1, #0
	sub	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L1206	@cond_branch
	mov	r0, #0x3
	b	.L1208
.L1206:
	add	r0, r2, #0
	sub	r0, r0, #0x29
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bls	.L1207	@cond_branch
.L1209:
	mov	r0, #0x0
	b	.L1208
.L1207:
	mov	r0, #0x4
.L1208:
	pop	{r1}
	bx	r1
.Lfe139:
	.size	 GetTVChannelByShowType,.Lfe139-GetTVChannelByShowType
	.align	2, 0
	.globl	GetPlayerIDAsU32
	.type	 GetPlayerIDAsU32,function
	.thumb_func
GetPlayerIDAsU32:
	ldr	r0, .L1211
	ldr	r2, [r0]
	ldrb	r0, [r2, #0xd]
	lsl	r0, r0, #0x18
	ldrb	r1, [r2, #0xc]
	lsl	r1, r1, #0x10
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xb]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xa]
	orr	r0, r0, r1
	bx	lr
.L1212:
	.align	2, 0
.L1211:
	.word	gSaveBlock2Ptr
.Lfe140:
	.size	 GetPlayerIDAsU32,.Lfe140-GetPlayerIDAsU32
	.align	2, 0
	.globl	CheckForBigMovieOrEmergencyNewsOnTV
	.type	 CheckForBigMovieOrEmergencyNewsOnTV,function
	.thumb_func
CheckForBigMovieOrEmergencyNewsOnTV:
	push	{lr}
	ldr	r0, .L1225
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	bne	.L1223	@cond_branch
	ldr	r0, .L1225+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L1215	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	beq	.L1217	@cond_branch
.L1223:
	mov	r0, #0x0
	b	.L1221
.L1226:
	.align	2, 0
.L1225:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
.L1215:
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L1223	@cond_branch
.L1217:
	ldr	r0, .L1227
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1224	@cond_branch
	mov	r0, #0x89
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1220	@cond_branch
.L1224:
	mov	r0, #0x1
	b	.L1221
.L1228:
	.align	2, 0
.L1227:
	.word	0x8bd
.L1220:
	mov	r0, #0x2
.L1221:
	pop	{r1}
	bx	r1
.Lfe141:
	.size	 CheckForBigMovieOrEmergencyNewsOnTV,.Lfe141-CheckForBigMovieOrEmergencyNewsOnTV
	.align	2, 0
	.globl	GetMomOrDadStringForTVMessage
	.type	 GetMomOrDadStringForTVMessage,function
	.thumb_func
GetMomOrDadStringForTVMessage:
	push	{r4, lr}
	ldr	r0, .L1246
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	bne	.L1230	@cond_branch
	ldr	r0, .L1246+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L1231	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	bne	.L1230	@cond_branch
	ldr	r0, .L1246+0x8
	ldr	r1, .L1246+0xc
	bl	StringCopy
	ldr	r0, .L1246+0x10
	mov	r1, #0x1
	bl	VarSet
	b	.L1230
.L1247:
	.align	2, 0
.L1246:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gText_Mom
	.word	0x4003
.L1231:
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L1230	@cond_branch
	ldr	r0, .L1248
	ldr	r1, .L1248+0x4
	bl	StringCopy
	ldr	r0, .L1248+0x8
	mov	r1, #0x1
	bl	VarSet
.L1230:
	ldr	r4, .L1248+0x8
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L1245	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	beq	.L1240	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bls	.L1239	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1240	@cond_branch
.L1245:
	ldr	r0, .L1248
	ldr	r1, .L1248+0x4
	bl	StringCopy
	b	.L1236
.L1249:
	.align	2, 0
.L1248:
	.word	gStringVar1
	.word	gText_Mom
	.word	0x4003
.L1240:
	ldr	r0, .L1250
	ldr	r1, .L1250+0x4
	bl	StringCopy
	b	.L1236
.L1251:
	.align	2, 0
.L1250:
	.word	gStringVar1
	.word	gText_Dad
.L1239:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1243	@cond_branch
	ldr	r0, .L1252
	ldr	r1, .L1252+0x4
	bl	StringCopy
	add	r0, r4, #0
	mov	r1, #0x1
	bl	VarSet
	b	.L1236
.L1253:
	.align	2, 0
.L1252:
	.word	gStringVar1
	.word	gText_Mom
.L1243:
	ldr	r0, .L1254
	ldr	r1, .L1254+0x4
	bl	StringCopy
	add	r0, r4, #0
	mov	r1, #0x2
	bl	VarSet
.L1236:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1255:
	.align	2, 0
.L1254:
	.word	gStringVar1
	.word	gText_Dad
.Lfe142:
	.size	 GetMomOrDadStringForTVMessage,.Lfe142-GetMomOrDadStringForTVMessage
	.align	2, 0
	.globl	HideBattleTowerReporter
	.type	 HideBattleTowerReporter,function
	.thumb_func
HideBattleTowerReporter:
	push	{lr}
	ldr	r0, .L1257
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L1257+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0x5
	bl	RemoveObjectEventByLocalIdAndMap
	ldr	r0, .L1257+0x8
	bl	FlagSet
	pop	{r0}
	bx	r0
.L1258:
	.align	2, 0
.L1257:
	.word	0x40bc
	.word	gSaveBlock1Ptr
	.word	0x396
.Lfe143:
	.size	 HideBattleTowerReporter,.Lfe143-HideBattleTowerReporter
	.align	2, 0
	.globl	ReceiveTvShowsData
	.type	 ReceiveTvShowsData,function
	.thumb_func
ReceiveTvShowsData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	add	r5, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r0, #0xe1
	lsl	r0, r0, #0x4
	bl	Alloc
	mov	r8, r0
	cmp	r0, #0
	bne	.LCB11471
	b	.L1260	@long jump
.LCB11471:
	mov	r4, #0x0
.L1264:
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x5
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, r4
	mul	r1, r1, r5
	add	r1, r7, r1
	mov	r2, #0xe1
	lsl	r2, r2, #0x2
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L1264	@cond_branch
	mov	r5, r8
	mov	r4, #0x0
	ldr	r7, .L1283
	b	.L1266
.L1284:
	.align	2, 0
.L1283:
	.word	gLinkPlayers
.L1269:
	lsl	r0, r4, #0x3
	sub	r2, r0, r4
	lsl	r0, r2, #0x2
	add	r3, r0, r7
	ldrb	r1, [r3]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L1270	@cond_branch
	lsl	r0, r2, #0x5
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r5, r0
	bl	sub_80F1254
	b	.L1268
.L1270:
	cmp	r1, #0x3
	bne	.L1268	@cond_branch
	ldrh	r0, [r3, #0x1a]
	cmp	r0, #0x1
	bne	.L1268	@cond_branch
	lsl	r0, r2, #0x5
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r5, r0
	bl	sub_80F12A4
.L1268:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1266:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L1269	@cond_branch
	cmp	r6, #0x1
	beq	.L1276	@cond_branch
	cmp	r6, #0x1
	bgt	.L1281	@cond_branch
	cmp	r6, #0
	beq	.L1275	@cond_branch
	b	.L1274
.L1281:
	cmp	r6, #0x2
	beq	.L1277	@cond_branch
	cmp	r6, #0x3
	beq	.L1278	@cond_branch
	b	.L1274
.L1275:
	ldr	r0, .L1285
	ldr	r0, [r0]
	ldr	r1, .L1285+0x4
	add	r0, r0, r1
	mov	r2, #0xe1
	lsl	r2, r2, #0x2
	add	r1, r5, r2
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r5, r3
	ldr	r4, .L1285+0x8
	add	r3, r5, r4
	bl	sub_80F0358
	b	.L1274
.L1286:
	.align	2, 0
.L1285:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	0xa8c
.L1276:
	ldr	r0, .L1287
	ldr	r1, [r0]
	ldr	r0, .L1287+0x4
	add	r1, r1, r0
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r5, r3
	b	.L1282
.L1288:
	.align	2, 0
.L1287:
	.word	gSaveBlock1Ptr
	.word	0x244c
.L1277:
	mov	r0, #0xe1
	lsl	r0, r0, #0x2
	add	r1, r5, r0
	ldr	r0, .L1289
	ldr	r2, [r0]
	ldr	r3, .L1289+0x4
	add	r2, r2, r3
.L1282:
	ldr	r4, .L1289+0x8
	add	r3, r5, r4
	add	r0, r5, #0
	bl	sub_80F0358
	b	.L1274
.L1290:
	.align	2, 0
.L1289:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	0xa8c
.L1278:
	mov	r0, #0xe1
	lsl	r0, r0, #0x2
	add	r1, r5, r0
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r5, r3
	ldr	r0, .L1291
	ldr	r3, [r0]
	ldr	r4, .L1291+0x4
	add	r3, r3, r4
	add	r0, r5, #0
	bl	sub_80F0358
.L1274:
	ldr	r5, .L1291
	ldr	r0, [r5]
	ldr	r4, .L1291+0x4
	add	r0, r0, r4
	bl	sub_80EF93C
	bl	sub_80F0C04
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
	bl	sub_80F0708
	bl	sub_80F0B64
	mov	r0, r8
	bl	Free
.L1260:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1292:
	.align	2, 0
.L1291:
	.word	gSaveBlock1Ptr
	.word	0x244c
.Lfe144:
	.size	 ReceiveTvShowsData,.Lfe144-ReceiveTvShowsData
	.align	2, 0
	.type	 sub_80F0358,function
	.thumb_func
sub_80F0358:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	str	r0, [sp, #0x10]
	str	r1, [sp, #0x14]
	str	r2, [sp, #0x18]
	str	r3, [sp, #0x1c]
	add	r0, sp, #0x10
	str	r0, [sp]
	add	r0, sp, #0x14
	str	r0, [sp, #0x4]
	add	r0, sp, #0x18
	str	r0, [sp, #0x8]
	add	r0, sp, #0x1c
	str	r0, [sp, #0xc]
	bl	GetLinkPlayerCount
	ldr	r1, .L1314
	strb	r0, [r1]
.L1296:
	mov	r6, #0x0
	ldr	r0, .L1314
	ldrb	r1, [r0]
	cmp	r6, r1
	bcs	.L1296	@cond_branch
	mov	sl, r0
.L1300:
	cmp	r6, #0
	bne	.L1301	@cond_branch
	ldr	r2, .L1314+0x4
	strb	r6, [r2]
.L1301:
	lsl	r4, r6, #0x2
	mov	r3, sp
	add	r0, r3, r4
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	sub_80F06D0
	ldr	r1, .L1314+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	add	r7, r4, #0
	cmp	r0, r1
	bne	.L1302	@cond_branch
	ldr	r1, .L1314+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, sl
	ldrb	r2, [r2]
	cmp	r0, r2
	beq	.L1293	@cond_branch
	add	r6, r6, #0x1
	mov	r9, r6
	b	.L1299
.L1315:
	.align	2, 0
.L1314:
	.word	sTVShowMixingNumPlayers
	.word	sRecordMixingPartnersWithoutShowsToShare
	.word	sTVShowMixingCurSlot
.L1302:
	mov	r5, #0x0
	mov	r3, sl
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
	add	r2, r6, #0x1
	mov	r9, r2
	cmp	r5, r0
	bge	.L1306	@cond_branch
	ldr	r3, .L1316
	mov	r8, r3
.L1308:
	add	r0, r6, r5
	add	r4, r0, #0x1
	mov	r0, r8
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L1316+0x4
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1307	@cond_branch
	mov	r2, r8
	ldrb	r1, [r2]
	add	r0, r4, #0
	bl	__modsi3
	add	r2, r0, #0
	lsl	r0, r2, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	mov	r3, sp
	add	r1, r3, r7
	ldr	r1, [r1]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	bl	sub_80F049C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1306	@cond_branch
.L1307:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, r8
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L1308	@cond_branch
.L1306:
	mov	r2, sl
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	cmp	r5, r0
	bne	.L1299	@cond_branch
	mov	r3, sp
	add	r0, r3, r7
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldr	r1, .L1316+0x8
	ldrb	r1, [r1]
	bl	DeleteTVShowInArrayByIdx
.L1299:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r6, r0, #0x18
	mov	r2, sl
	ldrb	r2, [r2]
	cmp	r6, r2
	bcc	.L1300	@cond_branch
	b	.L1296
.L1317:
	.align	2, 0
.L1316:
	.word	sTVShowMixingNumPlayers
	.word	sCurTVShowSlot
	.word	sTVShowMixingCurSlot
.L1293:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe145:
	.size	 sub_80F0358,.Lfe145-sub_80F0358
	.align	2, 0
	.type	 sub_80F049C,function
	.thumb_func
sub_80F049C:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r4, [r0]
	ldr	r6, [r1]
	mov	r5, #0x0
	ldr	r2, .L1329
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0]
	str	r2, [sp]
	bl	GetTVChannelByShowType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	ldr	r2, [sp]
	cmp	r0, #0x3
	beq	.L1321	@cond_branch
	cmp	r0, #0x3
	bgt	.L1325	@cond_branch
	cmp	r0, #0x2
	beq	.L1320	@cond_branch
	b	.L1319
.L1330:
	.align	2, 0
.L1329:
	.word	sTVShowMixingCurSlot
.L1325:
	cmp	r1, #0x4
	beq	.L1322	@cond_branch
	b	.L1319
.L1320:
	ldr	r0, .L1331
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80F0580
	b	.L1328
.L1332:
	.align	2, 0
.L1331:
	.word	sCurTVShowSlot
.L1321:
	ldr	r0, .L1333
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80F05E8
	b	.L1328
.L1334:
	.align	2, 0
.L1333:
	.word	sCurTVShowSlot
.L1322:
	ldr	r0, .L1335
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80F0668
.L1328:
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1319:
	cmp	r5, #0x1
	beq	.L1326	@cond_branch
	mov	r0, #0x0
	b	.L1327
.L1336:
	.align	2, 0
.L1335:
	.word	sCurTVShowSlot
.L1326:
	ldr	r0, .L1337
	ldrb	r1, [r0]
	add	r0, r6, #0
	bl	DeleteTVShowInArrayByIdx
	mov	r0, #0x1
.L1327:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1338:
	.align	2, 0
.L1337:
	.word	sTVShowMixingCurSlot
.Lfe146:
	.size	 sub_80F049C,.Lfe146-sub_80F049C
	.align	2, 0
	.type	 sub_80F0580,function
	.thumb_func
sub_80F0580:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r5, r0, #0
	mov	r2, #0xff
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1340	@cond_branch
	lsr	r0, r5, #0x8
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1340	@cond_branch
	mov	r0, #0x0
	b	.L1341
.L1340:
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	add	r2, r4, #0
	add	r2, r2, #0x22
	strb	r0, [r2]
	add	r3, r4, #0
	add	r3, r3, #0x21
	ldrb	r0, [r3]
	add	r2, r2, #0x1
	strb	r0, [r2]
	strb	r5, [r1]
	lsr	r0, r5, #0x8
	strb	r0, [r3]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
.L1341:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe147:
	.size	 sub_80F0580,.Lfe147-sub_80F0580
	.align	2, 0
	.type	 sub_80F05E8,function
	.thumb_func
sub_80F05E8:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r2, r0, #0
	mov	r3, #0xff
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1343	@cond_branch
	lsr	r0, r2, #0x8
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x21
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L1346	@cond_branch
.L1343:
	mov	r3, #0xff
	add	r0, r2, #0
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x22
	lsr	r5, r2, #0x8
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1344	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1344	@cond_branch
.L1346:
	mov	r0, #0x0
	b	.L1345
.L1344:
	ldrb	r1, [r4, #0x1e]
	add	r0, r4, #0
	add	r0, r0, #0x20
	strb	r1, [r0]
	ldrb	r0, [r4, #0x1f]
	add	r1, r4, #0
	add	r1, r1, #0x21
	strb	r0, [r1]
	strb	r2, [r4, #0x1e]
	strb	r5, [r4, #0x1f]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
.L1345:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe148:
	.size	 sub_80F05E8,.Lfe148-sub_80F05E8
	.align	2, 0
	.type	 sub_80F0668,function
	.thumb_func
sub_80F0668:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r5, r0, #0
	mov	r2, #0xff
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1348	@cond_branch
	lsr	r0, r5, #0x8
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1348	@cond_branch
	mov	r0, #0x0
	b	.L1349
.L1348:
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	add	r2, r4, #0
	add	r2, r2, #0x22
	strb	r0, [r2]
	add	r3, r4, #0
	add	r3, r3, #0x21
	ldrb	r0, [r3]
	add	r2, r2, #0x1
	strb	r0, [r2]
	strb	r5, [r1]
	lsr	r0, r5, #0x8
	strb	r0, [r3]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
	strh	r0, [r6, #0x16]
.L1349:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe149:
	.size	 sub_80F0668,.Lfe149-sub_80F0668
	.align	2, 0
	.type	 sub_80F06D0,function
	.thumb_func
sub_80F06D0:
	push	{lr}
	add	r3, r0, #0
	mov	r2, #0x0
.L1354:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r3
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	bne	.L1353	@cond_branch
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bhi	.L1353	@cond_branch
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	b	.L1357
.L1353:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L1354	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1357:
	pop	{r1}
	bx	r1
.Lfe150:
	.size	 sub_80F06D0,.Lfe150-sub_80F06D0
	.align	2, 0
	.type	 sub_80F0708,function
	.thumb_func
sub_80F0708:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	mov	r9, r0
.L1362:
	ldr	r3, .L1412
	ldr	r1, [r3]
	mov	r4, r9
	lsl	r2, r4, #0x3
	add	r0, r2, r4
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L1412+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r7, r2, #0
	cmp	r0, #0x29
	bls	.LCB12395
	b	.L1405	@long jump
.LCB12395:
	lsl	r0, r0, #0x2
	ldr	r1, .L1412+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1413:
	.align	2, 0
.L1412:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	.L1406
	.align	2, 0
	.align	2, 0
.L1406:
	.word	.L1361
	.word	.L1370
	.word	.L1361
	.word	.L1372
	.word	.L1373
	.word	.L1374
	.word	.L1375
	.word	.L1376
	.word	.L1364
	.word	.L1361
	.word	.L1366
	.word	.L1361
	.word	.L1361
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1377
	.word	.L1361
	.word	.L1379
	.word	.L1380
	.word	.L1381
	.word	.L1361
	.word	.L1361
	.word	.L1361
	.word	.L1361
	.word	.L1386
	.word	.L1387
	.word	.L1361
	.word	.L1389
	.word	.L1361
	.word	.L1361
	.word	.L1392
	.word	.L1361
	.word	.L1361
	.word	.L1361
	.word	.L1405
	.word	.L1361
.L1364:
	ldr	r0, [r3]
	mov	r1, r9
	add	r4, r7, r1
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1414
	add	r0, r0, r6
	ldrh	r0, [r0, #0x12]
	lsl	r5, r1, #0x18
	lsr	r5, r5, #0x18
	add	r1, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r6
	ldrh	r0, [r4, #0x2]
	b	.L1408
.L1415:
	.align	2, 0
.L1414:
	.word	0x244c
.L1366:
	ldr	r0, [r3]
	mov	r2, r9
	add	r4, r7, r2
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1416
	add	r0, r0, r6
	ldrh	r0, [r0, #0x16]
	lsl	r5, r2, #0x18
	lsr	r5, r5, #0x18
	add	r1, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r6
	ldrh	r0, [r4, #0x2]
	b	.L1408
.L1417:
	.align	2, 0
.L1416:
	.word	0x244c
.L1370:
	ldr	r0, [r3]
	mov	r4, r9
	add	r1, r7, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, .L1418
	add	r1, r1, r0
	ldrh	r0, [r1, #0x2]
	b	.L1409
.L1419:
	.align	2, 0
.L1418:
	.word	0x244c
.L1372:
	ldr	r0, [r3]
	mov	r2, r9
	add	r1, r7, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r4, .L1420
	add	r1, r1, r4
	ldrh	r0, [r1, #0x2]
	lsl	r1, r2, #0x18
	b	.L1410
.L1421:
	.align	2, 0
.L1420:
	.word	0x244c
.L1373:
	ldr	r0, [r3]
	mov	r2, r9
	add	r1, r7, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r4, .L1422
	add	r1, r1, r4
	ldrh	r0, [r1, #0x6]
	lsl	r1, r2, #0x18
	b	.L1410
.L1423:
	.align	2, 0
.L1422:
	.word	0x244c
.L1374:
	ldr	r0, [r3]
	mov	r1, r9
	add	r4, r7, r1
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1424
	add	r0, r0, r6
	ldrh	r0, [r0, #0x2]
	lsl	r5, r1, #0x18
	lsr	r5, r5, #0x18
	add	r1, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r6
	ldrh	r0, [r4, #0x1c]
	b	.L1408
.L1425:
	.align	2, 0
.L1424:
	.word	0x244c
.L1375:
	ldr	r0, [r3]
	mov	r2, r9
	add	r1, r7, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r4, .L1426
	add	r1, r1, r4
	ldrh	r0, [r1, #0x2]
	lsl	r1, r2, #0x18
	b	.L1410
.L1427:
	.align	2, 0
.L1426:
	.word	0x244c
.L1376:
	ldr	r0, [r3]
	mov	r1, r9
	add	r4, r7, r1
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1428
	add	r0, r0, r6
	ldrh	r0, [r0, #0xa]
	lsl	r5, r1, #0x18
	lsr	r5, r5, #0x18
	add	r1, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r6
	ldrh	r0, [r4, #0x14]
	b	.L1408
.L1429:
	.align	2, 0
.L1428:
	.word	0x244c
.L1377:
	ldr	r0, [r3]
	mov	r2, r9
	add	r1, r7, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r4, .L1430
	add	r1, r1, r4
	ldrh	r0, [r1, #0x10]
	lsl	r1, r2, #0x18
	b	.L1410
.L1431:
	.align	2, 0
.L1430:
	.word	0x244c
.L1379:
	ldr	r0, [r3]
	mov	r1, r9
	add	r4, r7, r1
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1432
	add	r0, r0, r6
	ldrh	r0, [r0, #0xc]
	lsl	r5, r1, #0x18
	lsr	r5, r5, #0x18
	add	r1, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r6
	ldrh	r0, [r4, #0xe]
	b	.L1408
.L1433:
	.align	2, 0
.L1432:
	.word	0x244c
.L1380:
	ldr	r0, [r3]
	mov	r2, r9
	add	r1, r7, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r4, .L1434
	add	r1, r1, r4
	ldrh	r0, [r1, #0x4]
	lsl	r1, r2, #0x18
	b	.L1410
.L1435:
	.align	2, 0
.L1434:
	.word	0x244c
.L1381:
	ldr	r0, [r3]
	mov	r1, r9
	add	r4, r7, r1
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1436
	add	r0, r0, r6
	ldrh	r0, [r0, #0x8]
	b	.L1411
.L1437:
	.align	2, 0
.L1436:
	.word	0x244c
.L1386:
	ldr	r0, [r3]
	mov	r2, r9
	add	r4, r7, r2
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1438
	add	r0, r0, r6
	ldrh	r0, [r0, #0x2]
	lsl	r5, r2, #0x18
	lsr	r5, r5, #0x18
	add	r1, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r6
	ldrh	r0, [r4, #0xa]
	b	.L1408
.L1439:
	.align	2, 0
.L1438:
	.word	0x244c
.L1387:
	ldr	r0, [r3]
	mov	r4, r9
	add	r1, r7, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, .L1440
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
.L1409:
	lsl	r1, r4, #0x18
.L1410:
	lsr	r1, r1, #0x18
	bl	sub_80F0B24
	b	.L1361
.L1441:
	.align	2, 0
.L1440:
	.word	0x244c
.L1389:
	ldr	r0, [r3]
	mov	r1, r9
	add	r4, r7, r1
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r6, .L1442
	add	r0, r0, r6
	ldrh	r0, [r0, #0x6]
.L1411:
	lsl	r5, r1, #0x18
	lsr	r5, r5, #0x18
	add	r1, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r6
	ldrh	r0, [r4, #0x4]
.L1408:
	add	r1, r5, #0
	bl	sub_80F0B24
	b	.L1361
.L1443:
	.align	2, 0
.L1442:
	.word	0x244c
.L1392:
	ldr	r0, [r3]
	mov	r2, r9
	add	r4, r7, r2
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r5, .L1444
	add	r0, r0, r5
	ldrh	r0, [r0, #0x4]
	lsl	r2, r2, #0x18
	mov	r8, r2
	lsr	r6, r2, #0x18
	add	r1, r6, #0
	str	r3, [sp, #0x4]
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r0, r4, r0
	add	r0, r0, r5
	ldrh	r0, [r0, #0x6]
	add	r1, r6, #0
	bl	sub_80F0B24
	ldr	r3, [sp, #0x4]
	ldr	r0, [r3]
	add	r4, r4, r0
	add	r4, r4, r5
	ldrb	r0, [r4, #0xd]
	sub	r0, r0, #0x1
	mov	r6, r8
	cmp	r0, #0xc
	bhi	.L1361	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1444+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1445:
	.align	2, 0
.L1444:
	.word	0x244c
	.word	.L1399
	.align	2, 0
	.align	2, 0
.L1399:
	.word	.L1397
	.word	.L1398
	.word	.L1361
	.word	.L1361
	.word	.L1397
	.word	.L1397
	.word	.L1397
	.word	.L1397
	.word	.L1397
	.word	.L1397
	.word	.L1397
	.word	.L1397
	.word	.L1397
.L1397:
	ldr	r0, .L1446
	ldr	r1, [r0]
	mov	r4, r9
	add	r0, r7, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L1446+0x4
	add	r0, r0, r1
	ldrh	r0, [r0, #0x8]
	lsr	r1, r6, #0x18
	bl	sub_80F0B24
	b	.L1361
.L1447:
	.align	2, 0
.L1446:
	.word	gSaveBlock1Ptr
	.word	0x244c
.L1398:
	ldr	r2, .L1448
	ldr	r0, [r2]
	mov	r1, r9
	add	r4, r7, r1
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldr	r5, .L1448+0x4
	add	r0, r0, r5
	ldrh	r0, [r0, #0x8]
	lsr	r6, r6, #0x18
	add	r1, r6, #0
	str	r2, [sp]
	bl	sub_80F0B24
	ldr	r2, [sp]
	ldr	r0, [r2]
	add	r4, r4, r0
	add	r4, r4, r5
	ldrh	r0, [r4, #0xa]
	add	r1, r6, #0
	bl	sub_80F0B24
	b	.L1361
.L1449:
	.align	2, 0
.L1448:
	.word	gSaveBlock1Ptr
	.word	0x244c
.L1405:
	mov	r2, r9
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	SetTvShowInactive
.L1361:
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	cmp	r0, #0x17
	bhi	.LCB12952
	b	.L1362	@long jump
.LCB12952:
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe151:
	.size	 sub_80F0708,.Lfe151-sub_80F0708
	.align	2, 0
	.globl	SetTvShowInactive
	.type	 SetTvShowInactive,function
	.thumb_func
SetTvShowInactive:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1451
	ldr	r2, [r1]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r2, r2, r1
	ldr	r0, .L1451+0x4
	add	r2, r2, r0
	mov	r0, #0x0
	strb	r0, [r2]
	bx	lr
.L1452:
	.align	2, 0
.L1451:
	.word	gSaveBlock1Ptr
	.word	0x244d
.Lfe152:
	.size	 SetTvShowInactive,.Lfe152-SetTvShowInactive
	.align	2, 0
	.type	 sub_80F0B24,function
	.thumb_func
sub_80F0B24:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L1454	@cond_branch
	ldr	r0, .L1455
	ldr	r1, [r0]
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L1455+0x4
	add	r1, r1, r0
	strb	r2, [r1]
.L1454:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1456:
	.align	2, 0
.L1455:
	.word	gSaveBlock1Ptr
	.word	0x244d
.Lfe153:
	.size	 sub_80F0B24,.Lfe153-sub_80F0B24
	.align	2, 0
	.type	 sub_80F0B64,function
	.thumb_func
sub_80F0B64:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1468
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1458	@cond_branch
	mov	r2, #0x0
	ldr	r4, .L1468+0x4
	mov	r3, #0x0
	ldr	r5, .L1468+0x8
.L1462:
	ldr	r0, [r5]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r0, r1
	ldr	r6, .L1468+0xc
	add	r0, r1, r6
	ldrb	r0, [r0]
	cmp	r0, #0x7
	beq	.L1467	@cond_branch
	cmp	r0, #0x29
	bne	.L1461	@cond_branch
.L1467:
	add	r0, r1, r4
	strb	r3, [r0]
.L1461:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x17
	bls	.L1462	@cond_branch
.L1458:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1469:
	.align	2, 0
.L1468:
	.word	0x864
	.word	0x244d
	.word	gSaveBlock1Ptr
	.word	0x244c
.Lfe154:
	.size	 sub_80F0B64,.Lfe154-sub_80F0B64
	.align	2, 0
	.globl	sub_80F0BB8
	.type	 sub_80F0BB8,function
	.thumb_func
sub_80F0BB8:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r6, .L1477
.L1474:
	ldr	r1, [r6]
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r4, r0, #0x2
	add	r1, r1, r4
	ldr	r0, .L1477+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	GetTVChannelByShowType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L1473	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1477+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L1473:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L1474	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1478:
	.align	2, 0
.L1477:
	.word	gSaveBlock1Ptr
	.word	0x244c
	.word	0x244d
.Lfe155:
	.size	 sub_80F0BB8,.Lfe155-sub_80F0BB8
	.align	2, 0
	.type	 sub_80F0C04,function
	.thumb_func
sub_80F0C04:
	push	{r4, r5, lr}
	mov	r3, #0x0
	mov	r2, #0x5
	ldr	r0, .L1491
	ldr	r4, [r0]
	ldr	r5, .L1491+0x4
.L1483:
	lsl	r0, r2, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1482	@cond_branch
	lsl	r0, r3, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r3, r0, #0x18
.L1482:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x17
	ble	.L1483	@cond_branch
	mov	r2, #0x0
	lsl	r0, r3, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x5
	sub	r0, r1, r0
	cmp	r2, r0
	bge	.L1487	@cond_branch
	add	r5, r0, #0
.L1489:
	ldr	r0, .L1491
	ldr	r0, [r0]
	ldr	r1, .L1491+0x4
	add	r0, r0, r1
	lsl	r1, r2, #0x18
	asr	r4, r1, #0x18
	mov	r2, #0xa0
	lsl	r2, r2, #0x13
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r2, r4, #0x18
	asr	r4, r4, #0x18
	cmp	r4, r5
	blt	.L1489	@cond_branch
.L1487:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1492:
	.align	2, 0
.L1491:
	.word	gSaveBlock1Ptr
	.word	0x244c
.Lfe156:
	.size	 sub_80F0C04,.Lfe156-sub_80F0C04
	.align	2, 0
	.globl	ReceivePokeNewsData
	.type	 ReceivePokeNewsData,function
	.thumb_func
ReceivePokeNewsData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	Alloc
	add	r5, r0, #0
	cmp	r5, #0
	beq	.L1494	@cond_branch
	mov	r4, #0x0
.L1498:
	lsl	r0, r4, #0x6
	add	r0, r0, r5
	mov	r1, r4
	mul	r1, r1, r7
	add	r1, r1, r8
	mov	r2, #0x40
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L1498	@cond_branch
	cmp	r6, #0x1
	beq	.L1502	@cond_branch
	cmp	r6, #0x1
	bgt	.L1507	@cond_branch
	cmp	r6, #0
	beq	.L1501	@cond_branch
	b	.L1500
.L1507:
	cmp	r6, #0x2
	beq	.L1503	@cond_branch
	cmp	r6, #0x3
	beq	.L1504	@cond_branch
	b	.L1500
.L1501:
	ldr	r0, .L1509
	ldr	r0, [r0]
	ldr	r1, .L1509+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x40
	add	r2, r5, #0
	add	r2, r2, #0x80
	add	r3, r5, #0
	add	r3, r3, #0xc0
	bl	sub_80F0D60
	b	.L1500
.L1510:
	.align	2, 0
.L1509:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.L1502:
	ldr	r0, .L1511
	ldr	r1, [r0]
	ldr	r0, .L1511+0x4
	add	r1, r1, r0
	add	r2, r5, #0
	add	r2, r2, #0x80
	b	.L1508
.L1512:
	.align	2, 0
.L1511:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.L1503:
	add	r1, r5, #0
	add	r1, r1, #0x40
	ldr	r0, .L1513
	ldr	r2, [r0]
	ldr	r0, .L1513+0x4
	add	r2, r2, r0
.L1508:
	add	r3, r5, #0
	add	r3, r3, #0xc0
	add	r0, r5, #0
	bl	sub_80F0D60
	b	.L1500
.L1514:
	.align	2, 0
.L1513:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.L1504:
	add	r1, r5, #0
	add	r1, r1, #0x40
	add	r2, r5, #0
	add	r2, r2, #0x80
	ldr	r0, .L1515
	ldr	r3, [r0]
	ldr	r0, .L1515+0x4
	add	r3, r3, r0
	add	r0, r5, #0
	bl	sub_80F0D60
.L1500:
	bl	sub_80F0EEC
	bl	sub_80F0F24
	add	r0, r5, #0
	bl	Free
.L1494:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1516:
	.align	2, 0
.L1515:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.Lfe157:
	.size	 ReceivePokeNewsData,.Lfe157-ReceivePokeNewsData
	.align	2, 0
	.type	 sub_80F0D60,function
	.thumb_func
sub_80F0D60:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x24
	str	r0, [sp, #0x10]
	str	r1, [sp, #0x14]
	str	r2, [sp, #0x18]
	str	r3, [sp, #0x1c]
	add	r0, sp, #0x10
	str	r0, [sp]
	add	r0, sp, #0x14
	str	r0, [sp, #0x4]
	add	r0, sp, #0x18
	str	r0, [sp, #0x8]
	add	r0, sp, #0x1c
	str	r0, [sp, #0xc]
	bl	GetLinkPlayerCount
	ldr	r1, .L1536
	strb	r0, [r1]
	mov	r0, #0x0
	mov	sl, r0
.L1521:
	mov	r7, #0x0
	mov	r1, sl
	add	r1, r1, #0x1
	str	r1, [sp, #0x20]
	b	.L1535
.L1537:
	.align	2, 0
.L1536:
	.word	sTVShowNewsMixingNumPlayers
.L1525:
	lsl	r4, r7, #0x2
	mov	r1, sp
	add	r0, r1, r4
	ldr	r0, [r0]
	ldr	r0, [r0]
	mov	r1, sl
	bl	sub_80F0ECC
	ldr	r1, .L1538
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r8, r4
	add	r1, r7, #0x1
	mov	r9, r1
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1524	@cond_branch
	mov	r5, #0x0
	ldr	r1, .L1538+0x4
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	bge	.L1524	@cond_branch
	add	r6, r1, #0
.L1530:
	add	r0, r7, r5
	add	r4, r0, #0x1
	ldrb	r1, [r6]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	sub_80EEE30
	ldr	r1, .L1538+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1529	@cond_branch
	ldrb	r1, [r6]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	mov	r1, sp
	add	r1, r1, r8
	ldr	r1, [r1]
	bl	sub_80F0E58
.L1529:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrb	r0, [r6]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L1530	@cond_branch
.L1524:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r7, r0, #0x18
.L1535:
	ldr	r0, .L1538+0x4
	ldrb	r0, [r0]
	cmp	r7, r0
	bcc	.L1525	@cond_branch
	ldr	r1, [sp, #0x20]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	cmp	r0, #0xf
	bls	.L1521	@cond_branch
	add	sp, sp, #0x24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1539:
	.align	2, 0
.L1538:
	.word	sTVShowMixingCurSlot
	.word	sTVShowNewsMixingNumPlayers
	.word	sCurTVShowSlot
.Lfe158:
	.size	 sub_80F0D60,.Lfe158-sub_80F0D60
	.align	2, 0
	.type	 sub_80F0E58,function
	.thumb_func
sub_80F0E58:
	push	{lr}
	ldr	r0, [r0]
	ldr	r1, [r1]
	ldr	r2, .L1541
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	ldr	r2, .L1541+0x4
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	bl	sub_80F0E84
	pop	{r0}
	bx	r0
.L1542:
	.align	2, 0
.L1541:
	.word	sTVShowMixingCurSlot
	.word	sCurTVShowSlot
.Lfe159:
	.size	 sub_80F0E58,.Lfe159-sub_80F0E58
	.align	2, 0
	.type	 sub_80F0E84,function
	.thumb_func
sub_80F0E84:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r3, [r5]
	add	r0, r3, #0
	cmp	r0, #0
	bne	.L1544	@cond_branch
.L1553:
	mov	r0, #0x0
	b	.L1551
.L1544:
	mov	r1, #0x0
	add	r2, r3, #0
	add	r3, r0, #0
.L1548:
	lsl	r0, r1, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, r3
	beq	.L1553	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L1548	@cond_branch
	lsl	r0, r6, #0x18
	asr	r0, r0, #0x16
	add	r0, r0, r4
	strb	r2, [r0]
	mov	r1, #0x1
	strb	r1, [r0, #0x1]
	ldrh	r1, [r5, #0x2]
	strh	r1, [r0, #0x2]
	mov	r0, #0x1
.L1551:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe160:
	.size	 sub_80F0E84,.Lfe160-sub_80F0E84
	.align	2, 0
	.type	 sub_80F0ECC,function
	.thumb_func
sub_80F0ECC:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1555	@cond_branch
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	b	.L1556
.L1555:
	mov	r0, #0x1
	neg	r0, r0
.L1556:
	pop	{r1}
	bx	r1
.Lfe161:
	.size	 sub_80F0ECC,.Lfe161-sub_80F0ECC
	.align	2, 0
	.type	 sub_80F0EEC,function
	.thumb_func
sub_80F0EEC:
	push	{r4, lr}
	mov	r4, #0x0
.L1561:
	ldr	r0, .L1564
	ldr	r0, [r0]
	lsl	r1, r4, #0x2
	add	r0, r0, r1
	ldr	r1, .L1564+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.L1560	@cond_branch
	add	r0, r4, #0
	bl	ClearPokemonNewsI
.L1560:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L1561	@cond_branch
	bl	sub_80EEEB8
	pop	{r4}
	pop	{r0}
	bx	r0
.L1565:
	.align	2, 0
.L1564:
	.word	gSaveBlock1Ptr
	.word	0x27d0
.Lfe162:
	.size	 sub_80F0EEC,.Lfe162-sub_80F0EEC
	.align	2, 0
	.type	 sub_80F0F24,function
	.thumb_func
sub_80F0F24:
	push	{r4, r5, lr}
	ldr	r0, .L1573
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1567	@cond_branch
	mov	r2, #0x0
	ldr	r5, .L1573+0x4
	ldr	r4, .L1573+0x8
	mov	r3, #0x0
.L1571:
	ldr	r0, [r5]
	lsl	r1, r2, #0x2
	add	r0, r0, r1
	add	r0, r0, r4
	strb	r3, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L1571	@cond_branch
.L1567:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1574:
	.align	2, 0
.L1573:
	.word	0x864
	.word	gSaveBlock1Ptr
	.word	0x27d1
.Lfe163:
	.size	 sub_80F0F24,.Lfe163-sub_80F0F24
	.align	2, 0
	.type	 sub_80F0F64,function
	.thumb_func
sub_80F0F64:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	mov	r0, #0x2c
	bl	AllocZeroed
	add	r4, r0, #0
	mov	r7, #0x0
.L1579:
	lsl	r0, r7, #0x3
	add	r1, r0, r7
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1]
	sub	r1, r1, #0x1
	add	r2, r0, #0
	cmp	r1, #0x28
	bls	.LCB13851
	b	.L1578	@long jump
.LCB13851:
	lsl	r0, r1, #0x2
	ldr	r1, .L1629
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1630:
	.align	2, 0
.L1629:
	.word	.L1623
	.align	2, 0
	.align	2, 0
.L1623:
	.word	.L1582
	.word	.L1582
	.word	.L1585
	.word	.L1578
	.word	.L1608
	.word	.L1603
	.word	.L1598
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1590
	.word	.L1595
	.word	.L1613
	.word	.L1616
	.word	.L1619
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1578
	.word	.L1622
.L1582:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4]
	add	r0, r0, #0x10
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1583	@cond_branch
	ldr	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r1, #0x18]
	b	.L1578
.L1583:
	ldr	r0, [r4]
	b	.L1626
.L1585:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x4]
	add	r0, r0, #0x5
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1586	@cond_branch
	ldr	r1, [r4, #0x4]
	mov	r0, #0x1
	strb	r0, [r1, #0xd]
	b	.L1587
.L1586:
	ldr	r0, [r4, #0x4]
	strb	r5, [r0, #0xd]
.L1587:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x10
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1588	@cond_branch
	ldr	r1, [r4, #0x4]
	mov	r0, #0x1
	strb	r0, [r1, #0xe]
	b	.L1578
.L1588:
	ldr	r0, [r4, #0x4]
	strb	r5, [r0, #0xe]
	b	.L1578
.L1590:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x18]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1591	@cond_branch
	ldr	r1, [r4, #0x18]
	mov	r0, #0x1
	strb	r0, [r1, #0x2]
	b	.L1592
.L1591:
	ldr	r0, [r4, #0x18]
	strb	r5, [r0, #0x2]
.L1592:
	ldr	r0, [r4, #0x18]
	add	r0, r0, #0x4
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1593	@cond_branch
	ldr	r1, [r4, #0x18]
	b	.L1627
.L1593:
	ldr	r0, [r4, #0x18]
	strb	r5, [r0, #0x3]
	b	.L1578
.L1595:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x1c]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1596	@cond_branch
	ldr	r1, [r4, #0x1c]
.L1627:
	mov	r0, #0x1
	strb	r0, [r1, #0x3]
	b	.L1578
.L1596:
	ldr	r0, [r4, #0x1c]
	strb	r5, [r0, #0x3]
	b	.L1578
.L1598:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x14]
	add	r0, r0, #0x2
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1599	@cond_branch
	ldr	r1, [r4, #0x14]
	mov	r0, #0x1
	strb	r0, [r1, #0x1d]
	b	.L1600
.L1599:
	ldr	r0, [r4, #0x14]
	strb	r5, [r0, #0x1d]
.L1600:
	ldr	r0, [r4, #0x14]
	add	r0, r0, #0xc
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1601	@cond_branch
	ldr	r1, [r4, #0x14]
	mov	r0, #0x1
	strb	r0, [r1, #0x1e]
	b	.L1578
.L1601:
	ldr	r0, [r4, #0x14]
	strb	r5, [r0, #0x1e]
	b	.L1578
.L1603:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x10]
	add	r0, r0, #0x16
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1604	@cond_branch
	ldr	r1, [r4, #0x10]
	mov	r0, #0x1
	strb	r0, [r1, #0x1e]
	b	.L1605
.L1604:
	ldr	r0, [r4, #0x10]
	strb	r5, [r0, #0x1e]
.L1605:
	ldr	r0, [r4, #0x10]
	add	r0, r0, #0x8
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1606	@cond_branch
	ldr	r1, [r4, #0x10]
	b	.L1628
.L1606:
	ldr	r0, [r4, #0x10]
	strb	r5, [r0, #0x1f]
	b	.L1578
.L1608:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0xc]
	add	r0, r0, #0xf
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1609	@cond_branch
	ldr	r1, [r4, #0xc]
	mov	r0, #0x1
	strb	r0, [r1, #0x1e]
	b	.L1610
.L1609:
	ldr	r0, [r4, #0xc]
	strb	r5, [r0, #0x1e]
.L1610:
	ldr	r0, [r4, #0xc]
	add	r0, r0, #0x4
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1611	@cond_branch
	ldr	r1, [r4, #0xc]
.L1628:
	mov	r0, #0x1
	strb	r0, [r1, #0x1f]
	b	.L1578
.L1611:
	ldr	r0, [r4, #0xc]
	strb	r5, [r0, #0x1f]
	b	.L1578
.L1613:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x8]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1614	@cond_branch
	ldr	r1, [r4, #0x8]
	mov	r0, #0x1
	strb	r0, [r1, #0x2]
	b	.L1578
.L1614:
	ldr	r0, [r4, #0x8]
	strb	r5, [r0, #0x2]
	b	.L1578
.L1616:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x20]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1617	@cond_branch
	ldr	r1, [r4, #0x20]
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	b	.L1578
.L1617:
	ldr	r0, [r4, #0x20]
	strb	r5, [r0, #0x6]
	b	.L1578
.L1619:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x24]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1620	@cond_branch
	ldr	r1, [r4, #0x24]
	mov	r0, #0x1
	strb	r0, [r1, #0xb]
	b	.L1578
.L1620:
	ldr	r0, [r4, #0x24]
	strb	r5, [r0, #0xb]
	b	.L1578
.L1622:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x28]
.L1626:
	strb	r5, [r0, #0x18]
.L1578:
	add	r7, r7, #0x1
	cmp	r7, #0x17
	bgt	.LCB14209
	b	.L1579	@long jump
.LCB14209:
	add	r0, r4, #0
	bl	Free
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe164:
	.size	 sub_80F0F64,.Lfe164-sub_80F0F64
	.align	2, 0
	.globl	sub_80F1208
	.type	 sub_80F1208,function
	.thumb_func
sub_80F1208:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_80F14F8
	add	r4, r5, #0
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	cmp	r4, r0
	bcs	.L1633	@cond_branch
.L1635:
	ldrb	r0, [r4]
	cmp	r0, #0x7
	bne	.L1634	@cond_branch
	ldrb	r0, [r4, #0x1d]
	cmp	r0, #0x1
	bne	.L1641	@cond_branch
	ldrb	r0, [r4, #0x1e]
	cmp	r0, #0x1
	bne	.L1638	@cond_branch
	b	.L1634
.L1641:
	ldrb	r0, [r4, #0x1e]
	cmp	r0, #0x1
	bne	.L1634	@cond_branch
.L1638:
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
.L1634:
	add	r4, r4, #0x24
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r5, r1
	cmp	r4, r0
	bcc	.L1635	@cond_branch
.L1633:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe165:
	.size	 sub_80F1208,.Lfe165-sub_80F1208
	.align	2, 0
	.type	 sub_80F1254,function
	.thumb_func
sub_80F1254:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r4, #0
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	cmp	r4, r0
	bcs	.L1644	@cond_branch
.L1646:
	ldrb	r0, [r4]
	cmp	r0, #0x7
	bne	.L1645	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0xc
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1648	@cond_branch
	mov	r0, #0x1
	b	.L1651
.L1648:
	mov	r0, #0x2
.L1651:
	strb	r0, [r4, #0x1e]
.L1645:
	add	r4, r4, #0x24
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r5, r1
	cmp	r4, r0
	bcc	.L1646	@cond_branch
.L1644:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe166:
	.size	 sub_80F1254,.Lfe166-sub_80F1254
	.align	2, 0
	.globl	TV_GetStringLanguage
	.type	 TV_GetStringLanguage,function
	.thumb_func
TV_GetStringLanguage:
	push	{lr}
	bl	IsStringJapanese
	mov	r1, #0x2
	cmp	r0, #0
	beq	.L1653	@cond_branch
	mov	r1, #0x1
.L1653:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.Lfe167:
	.size	 TV_GetStringLanguage,.Lfe167-TV_GetStringLanguage
	.align	2, 0
	.type	 sub_80F12A4,function
	.thumb_func
sub_80F12A4:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r4, #0
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	cmp	r4, r0
	bcc	.LCB14372
	b	.L1657	@long jump
.LCB14372:
.L1659:
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0x28
	bls	.LCB14379
	b	.L1658	@long jump
.LCB14379:
	lsl	r0, r0, #0x2
	ldr	r1, .L1701
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1702:
	.align	2, 0
.L1701:
	.word	.L1693
	.align	2, 0
	.align	2, 0
.L1693:
	.word	.L1661
	.word	.L1662
	.word	.L1663
	.word	.L1664
	.word	.L1665
	.word	.L1666
	.word	.L1667
	.word	.L1668
	.word	.L1669
	.word	.L1670
	.word	.L1671
	.word	.L1672
	.word	.L1658
	.word	.L1658
	.word	.L1658
	.word	.L1658
	.word	.L1658
	.word	.L1658
	.word	.L1658
	.word	.L1658
	.word	.L1673
	.word	.L1674
	.word	.L1675
	.word	.L1676
	.word	.L1677
	.word	.L1686
	.word	.L1678
	.word	.L1689
	.word	.L1682
	.word	.L1679
	.word	.L1686
	.word	.L1689
	.word	.L1680
	.word	.L1682
	.word	.L1683
	.word	.L1686
	.word	.L1689
	.word	.L1690
	.word	.L1691
	.word	.L1658
	.word	.L1658
.L1661:
	add	r0, r4, #0
	add	r0, r0, #0x10
	b	.L1696
.L1662:
	add	r0, r4, #0
	add	r0, r0, #0x10
	b	.L1696
.L1663:
	add	r0, r4, #0x5
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xd]
	add	r0, r4, #0
	add	r0, r0, #0x10
	b	.L1697
.L1664:
	add	r0, r4, #0
	add	r0, r0, #0xb
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x17]
	b	.L1658
.L1665:
	add	r0, r4, #0
	add	r0, r0, #0xf
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1e]
	add	r0, r4, #0x4
	b	.L1698
.L1666:
	add	r0, r4, #0
	add	r0, r0, #0x16
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1e]
	add	r0, r4, #0
	add	r0, r0, #0x8
.L1698:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1f]
	b	.L1658
.L1667:
	add	r0, r4, #0x2
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1d]
	add	r0, r4, #0
	add	r0, r0, #0xc
	b	.L1699
.L1668:
	add	r0, r4, #0
	add	r0, r0, #0x14
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1d]
	add	r0, r4, #0x4
.L1699:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1e]
	b	.L1658
.L1669:
	add	r0, r4, #0
	add	r0, r0, #0xc
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x14]
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x15]
	b	.L1658
.L1670:
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x19]
	add	r0, r4, #0
	add	r0, r0, #0xc
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1a]
	b	.L1658
.L1671:
	add	r0, r4, #0x2
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x17]
	add	r0, r4, #0
	add	r0, r0, #0xc
	b	.L1696
.L1672:
	add	r0, r4, #0x2
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x17]
	add	r0, r4, #0
	add	r0, r0, #0xb
.L1696:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x18]
	b	.L1658
.L1673:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x2]
	add	r0, r4, #0x4
	b	.L1700
.L1674:
	add	r0, r4, #0
	add	r0, r0, #0x13
.L1700:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x3]
	b	.L1658
.L1675:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x2]
	b	.L1658
.L1676:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x6]
	b	.L1658
.L1677:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xb]
	b	.L1658
.L1678:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x9]
	b	.L1658
.L1679:
	add	r0, r4, #0
	add	r0, r0, #0x13
.L1697:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xe]
	b	.L1658
.L1680:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x11]
	b	.L1658
.L1682:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x8]
	b	.L1658
.L1683:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xf]
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x10]
	b	.L1658
.L1686:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xc]
	b	.L1658
.L1689:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x5]
	b	.L1658
.L1690:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1b]
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1c]
	b	.L1658
.L1691:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x4]
.L1658:
	add	r4, r4, #0x24
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r5, r1
	cmp	r4, r0
	bcs	.LCB14690
	b	.L1659	@long jump
.LCB14690:
.L1657:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe168:
	.size	 sub_80F12A4,.Lfe168-sub_80F12A4
	.align	2, 0
	.globl	sub_80F14F8
	.type	 sub_80F14F8,function
	.thumb_func
sub_80F14F8:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r4, r5, #0
	mov	r6, #0x17
.L1707:
	ldrb	r0, [r4]
	cmp	r0, #0x17
	beq	.L1711	@cond_branch
	cmp	r0, #0x19
	bne	.L1706	@cond_branch
	ldrb	r0, [r4, #0xa]
	cmp	r0, #0x58
	bls	.L1706	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
	b	.L1706
.L1711:
	ldrb	r0, [r4, #0x12]
	cmp	r0, #0x58
	bls	.L1706	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
.L1706:
	add	r4, r4, #0x24
	add	r5, r5, #0x24
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L1707	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe169:
	.size	 sub_80F14F8,.Lfe169-sub_80F14F8
	.align	2, 0
	.globl	DoTVShow
	.type	 DoTVShow,function
	.thumb_func
DoTVShow:
	push	{lr}
	ldr	r0, .L1753
	ldr	r2, [r0]
	ldr	r0, .L1753+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r1, .L1753+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB14782
	b	.L1717	@long jump
.LCB14782:
	sub	r1, r1, #0x1
	add	r0, r2, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x28
	bls	.LCB14790
	b	.L1717	@long jump
.LCB14790:
	lsl	r0, r0, #0x2
	ldr	r1, .L1753+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1754:
	.align	2, 0
.L1753:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244d
	.word	.L1751
	.align	2, 0
	.align	2, 0
.L1751:
	.word	.L1719
	.word	.L1720
	.word	.L1721
	.word	.L1722
	.word	.L1728
	.word	.L1724
	.word	.L1725
	.word	.L1729
	.word	.L1731
	.word	.L1730
	.word	.L1743
	.word	.L1750
	.word	.L1717
	.word	.L1717
	.word	.L1717
	.word	.L1717
	.word	.L1717
	.word	.L1717
	.word	.L1717
	.word	.L1717
	.word	.L1726
	.word	.L1727
	.word	.L1732
	.word	.L1733
	.word	.L1734
	.word	.L1735
	.word	.L1736
	.word	.L1737
	.word	.L1738
	.word	.L1739
	.word	.L1740
	.word	.L1741
	.word	.L1742
	.word	.L1744
	.word	.L1745
	.word	.L1746
	.word	.L1747
	.word	.L1748
	.word	.L1749
	.word	.L1717
	.word	.L1723
.L1719:
	bl	DoTVShowPokemonFanClubLetter
	b	.L1717
.L1720:
	bl	DoTVShowRecentHappenings
	b	.L1717
.L1721:
	bl	DoTVShowPokemonFanClubOpinions
	b	.L1717
.L1722:
	bl	DoTVShowDummiedOut
	b	.L1717
.L1723:
	bl	DoTVShowPokemonNewsMassOutbreak
	b	.L1717
.L1724:
	bl	DoTVShowBravoTrainerPokemonProfile
	b	.L1717
.L1725:
	bl	DoTVShowBravoTrainerBattleTower
	b	.L1717
.L1726:
	bl	DoTVShowPokemonTodaySuccessfulCapture
	b	.L1717
.L1727:
	bl	DoTVShowTodaysSmartShopper
	b	.L1717
.L1728:
	bl	DoTVShowTheNameRaterShow
	b	.L1717
.L1729:
	bl	DoTVShowPokemonContestLiveUpdates
	b	.L1717
.L1730:
	bl	DoTVShowPokemonBattleUpdate
	b	.L1717
.L1731:
	bl	DoTVShow3CheersForPokeblocks
	b	.L1717
.L1732:
	bl	DoTVShowPokemonTodayFailedCapture
	b	.L1717
.L1733:
	bl	DoTVShowPokemonAngler
	b	.L1717
.L1734:
	bl	DoTVShowTheWorldOfMasters
	b	.L1717
.L1735:
	bl	DoTVShowTodaysRivalTrainer
	b	.L1717
.L1736:
	bl	DoTVShowDewfordTrendWatcherNetwork
	b	.L1717
.L1737:
	bl	DoTVShowHoennTreasureInvestigators
	b	.L1717
.L1738:
	bl	DoTVShowFindThatGamer
	b	.L1717
.L1739:
	bl	DoTVShowBreakingNewsTV
	b	.L1717
.L1740:
	bl	DoTVShowSecretBaseVisit
	b	.L1717
.L1741:
	bl	DoTVShowPokemonLotteryWinnerFlashReport
	b	.L1717
.L1742:
	bl	DoTVShowThePokemonBattleSeminar
	b	.L1717
.L1743:
	bl	DoTVShowTrainerFanClubSpecial
	b	.L1717
.L1744:
	bl	DoTVShowTrainerFanClub
	b	.L1717
.L1745:
	bl	DoTVShowSpotTheCuties
	b	.L1717
.L1746:
	bl	DoTVShowPokemonNewsBattleFrontier
	b	.L1717
.L1747:
	bl	DoTVShowWhatsNo1InHoennToday
	b	.L1717
.L1748:
	bl	DoTVShowSecretBaseSecrets
	b	.L1717
.L1749:
	bl	DoTVShowSafariFanClub
	b	.L1717
.L1750:
	bl	DoTVShowPokemonContestLiveUpdates2
.L1717:
	pop	{r0}
	bx	r0
.Lfe170:
	.size	 DoTVShow,.Lfe170-DoTVShow
	.align	2, 0
	.type	 DoTVShowBravoTrainerPokemonProfile,function
	.thumb_func
DoTVShowBravoTrainerPokemonProfile:
	push	{r4, r5, lr}
	ldr	r2, .L1776
	ldr	r0, .L1776+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1776+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L1776+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1776+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x8
	bls	.LCB14966
	b	.L1756	@long jump
.LCB14966:
	lsl	r0, r5, #0x2
	ldr	r1, .L1776+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1777:
	.align	2, 0
.L1776:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1772
	.align	2, 0
	.align	2, 0
.L1772:
	.word	.L1757
	.word	.L1760
	.word	.L1761
	.word	.L1764
	.word	.L1765
	.word	.L1766
	.word	.L1769
	.word	.L1770
	.word	.L1771
.L1757:
	ldr	r0, .L1778
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x1e
	mov	r0, #0x2
	bl	CopyContestRankToStringVar
	ldrh	r1, [r4, #0x2]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r1, .L1778+0x4
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	bl	StringCompare
	cmp	r0, #0
	bne	.L1758	@cond_branch
	ldr	r1, .L1778+0x8
	mov	r0, #0x8
	b	.L1774
.L1779:
	.align	2, 0
.L1778:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	sTVShowState
.L1758:
	ldr	r1, .L1780
	mov	r0, #0x1
	b	.L1774
.L1781:
	.align	2, 0
.L1780:
	.word	sTVShowState
.L1760:
	ldr	r0, .L1782
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1782+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1782+0x8
	add	r1, r4, #0
	add	r1, r1, #0x8
	ldrb	r2, [r4, #0x1f]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x2
	bl	CopyContestCategoryToStringVar
	b	.L1775
.L1783:
	.align	2, 0
.L1782:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L1761:
	ldr	r0, .L1784
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	mov	r0, #0x60
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1762	@cond_branch
	ldr	r1, .L1784+0x4
	mov	r0, #0x3
	b	.L1774
.L1785:
	.align	2, 0
.L1784:
	.word	gStringVar1
	.word	sTVShowState
.L1762:
	ldr	r1, .L1786
	mov	r0, #0x4
	b	.L1774
.L1787:
	.align	2, 0
.L1786:
	.word	sTVShowState
.L1764:
	ldr	r0, .L1788
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1788+0x4
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x1e
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L1788+0x8
	mov	r0, #0x5
	b	.L1774
.L1789:
	.align	2, 0
.L1788:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1765:
	ldr	r0, .L1790
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1790+0x4
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x1e
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L1790+0x8
	mov	r0, #0x5
	b	.L1774
.L1791:
	.align	2, 0
.L1790:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1766:
	ldr	r0, .L1792
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	ldr	r0, .L1792+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldrh	r0, [r4, #0x14]
	cmp	r0, #0
	beq	.L1767	@cond_branch
	ldr	r1, .L1792+0x8
	mov	r0, #0x6
	b	.L1774
.L1793:
	.align	2, 0
.L1792:
	.word	gStringVar1
	.word	gStringVar3
	.word	sTVShowState
.L1767:
	ldr	r1, .L1794
	mov	r0, #0x7
	b	.L1774
.L1795:
	.align	2, 0
.L1794:
	.word	sTVShowState
.L1769:
	ldr	r0, .L1796
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1796+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1796+0x8
	ldrh	r2, [r4, #0x14]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L1796+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1796+0x10
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldr	r1, .L1796+0x14
	mov	r0, #0x7
	b	.L1774
.L1797:
	.align	2, 0
.L1796:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gMoveNames
	.word	gStringVar3
	.word	sTVShowState
.L1770:
	ldr	r0, .L1798
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1798+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1798+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
	b	.L1756
.L1799:
	.align	2, 0
.L1798:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L1771:
	ldr	r0, .L1800
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1800+0x4
	add	r1, r1, r2
	bl	StringCopy
.L1775:
	ldr	r1, .L1800+0x8
	mov	r0, #0x2
.L1774:
	strb	r0, [r1]
.L1756:
	ldr	r0, .L1800+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1801:
	.align	2, 0
.L1800:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	sTVShowState
	.word	sTVBravoTrainerTextGroup
.Lfe171:
	.size	 DoTVShowBravoTrainerPokemonProfile,.Lfe171-DoTVShowBravoTrainerPokemonProfile
	.align	2, 0
	.type	 DoTVShowBravoTrainerBattleTower,function
	.thumb_func
DoTVShowBravoTrainerBattleTower:
	push	{r4, r5, lr}
	ldr	r2, .L1838
	ldr	r0, .L1838+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1838+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L1838+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1838+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xe
	bls	.LCB15372
	b	.L1803	@long jump
.LCB15372:
	lsl	r0, r5, #0x2
	ldr	r1, .L1838+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1839:
	.align	2, 0
.L1838:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1833
	.align	2, 0
	.align	2, 0
.L1833:
	.word	.L1804
	.word	.L1807
	.word	.L1812
	.word	.L1815
	.word	.L1818
	.word	.L1821
	.word	.L1822
	.word	.L1823
	.word	.L1826
	.word	.L1826
	.word	.L1826
	.word	.L1827
	.word	.L1831
	.word	.L1831
	.word	.L1832
.L1804:
	ldr	r0, .L1840
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1840+0x4
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1840+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrh	r0, [r4, #0x16]
	cmp	r0, #0x6
	bls	.L1805	@cond_branch
	ldr	r1, .L1840+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1803
.L1841:
	.align	2, 0
.L1840:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1805:
	ldr	r1, .L1842
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1803
.L1843:
	.align	2, 0
.L1842:
	.word	sTVShowState
.L1807:
	ldrb	r0, [r4, #0x1a]
	cmp	r0, #0x32
	bne	.L1808	@cond_branch
	ldr	r0, .L1844
	ldr	r1, .L1844+0x4
	bl	StringCopy
	b	.L1809
.L1845:
	.align	2, 0
.L1844:
	.word	gStringVar1
	.word	gText_Lv50
.L1808:
	ldr	r0, .L1846
	ldr	r1, .L1846+0x4
	bl	StringCopy
.L1809:
	ldrh	r1, [r4, #0x16]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x1c]
	cmp	r0, #0x1
	bne	.L1810	@cond_branch
	ldr	r1, .L1846+0x8
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1803
.L1847:
	.align	2, 0
.L1846:
	.word	gStringVar1
	.word	gText_OpenLevel
	.word	sTVShowState
.L1810:
	ldr	r1, .L1848
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1803
.L1849:
	.align	2, 0
.L1848:
	.word	sTVShowState
.L1812:
	ldr	r0, .L1850
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x16]
	add	r1, r1, #0x1
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
.L1837:
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	beq	.L1835	@cond_branch
	b	.L1819
.L1851:
	.align	2, 0
.L1850:
	.word	gStringVar1
.L1815:
	ldr	r0, .L1852
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1852+0x4
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1852+0x8
	add	r1, r1, r2
	bl	StringCopy
	b	.L1837
.L1853:
	.align	2, 0
.L1852:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L1818:
	ldr	r0, .L1854
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1854+0x4
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1854+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	bne	.L1819	@cond_branch
.L1835:
	ldr	r1, .L1854+0xc
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1803
.L1855:
	.align	2, 0
.L1854:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1819:
	ldr	r1, .L1856
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1803
.L1857:
	.align	2, 0
.L1856:
	.word	sTVShowState
.L1821:
	ldr	r0, .L1858
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	b	.L1836
.L1859:
	.align	2, 0
.L1858:
	.word	gStringVar1
.L1822:
	ldr	r0, .L1860
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	b	.L1836
.L1861:
	.align	2, 0
.L1860:
	.word	gStringVar1
.L1823:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L1803
.L1826:
	ldr	r0, .L1862
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
.L1836:
	bl	TVShowConvertInternationalString
	ldr	r1, .L1862+0x4
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1803
.L1863:
	.align	2, 0
.L1862:
	.word	gStringVar1
	.word	sTVShowState
.L1827:
	ldr	r0, .L1864
	ldrh	r1, [r4, #0x18]
	bl	CopyEasyChatWord
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	bne	.L1828	@cond_branch
	ldr	r1, .L1864+0x4
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1803
.L1865:
	.align	2, 0
.L1864:
	.word	gStringVar1
	.word	sTVShowState
.L1828:
	ldr	r1, .L1866
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L1803
.L1867:
	.align	2, 0
.L1866:
	.word	sTVShowState
.L1831:
	ldr	r0, .L1868
	ldrh	r1, [r4, #0x18]
	bl	CopyEasyChatWord
	ldr	r0, .L1868+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1868+0x8
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r1, .L1868+0xc
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L1803
.L1869:
	.align	2, 0
.L1868:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L1832:
	ldr	r0, .L1870
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1870+0x4
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1870+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L1803:
	ldr	r0, .L1870+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1871:
	.align	2, 0
.L1870:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVBravoTrainerBattleTowerTextGroup
.Lfe172:
	.size	 DoTVShowBravoTrainerBattleTower,.Lfe172-DoTVShowBravoTrainerBattleTower
	.align	2, 0
	.type	 DoTVShowTodaysSmartShopper,function
	.thumb_func
DoTVShowTodaysSmartShopper:
	push	{r4, r5, r6, lr}
	ldr	r2, .L1909
	ldr	r0, .L1909+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1909+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L1909+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1909+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xc
	bls	.LCB15808
	b	.L1873	@long jump
.LCB15808:
	lsl	r0, r6, #0x2
	ldr	r1, .L1909+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1910:
	.align	2, 0
.L1909:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1905
	.align	2, 0
	.align	2, 0
.L1905:
	.word	.L1874
	.word	.L1877
	.word	.L1880
	.word	.L1883
	.word	.L1880
	.word	.L1880
	.word	.L1886
	.word	.L1891
	.word	.L1894
	.word	.L1897
	.word	.L1898
	.word	.L1901
	.word	.L1904
.L1874:
	ldr	r0, .L1911
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1911+0x4
	ldrb	r1, [r5, #0x12]
	mov	r2, #0x0
	bl	GetMapName
	ldrh	r0, [r5, #0xc]
	cmp	r0, #0xfe
	bls	.L1875	@cond_branch
	ldr	r1, .L1911+0x8
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1873
.L1912:
	.align	2, 0
.L1911:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1875:
	ldr	r1, .L1913
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1873
.L1914:
	.align	2, 0
.L1913:
	.word	sTVShowState
.L1877:
	ldr	r0, .L1915
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1915+0x4
	ldrh	r0, [r5, #0x6]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0xc]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r4, .L1915+0x8
	bl	Random
	ldrb	r2, [r4]
	add	r2, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r0, r0, r2
	strb	r0, [r4]
	b	.L1873
.L1916:
	.align	2, 0
.L1915:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1880:
	ldrh	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L1881	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L1873
.L1881:
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L1873
.L1883:
	ldrh	r1, [r5, #0xc]
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L1884	@cond_branch
	ldr	r1, .L1917
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1873
.L1918:
	.align	2, 0
.L1917:
	.word	sTVShowState
.L1884:
	ldr	r1, .L1919
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L1873
.L1920:
	.align	2, 0
.L1919:
	.word	sTVShowState
.L1886:
	ldr	r4, .L1921
	ldrh	r0, [r5, #0x8]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0xe]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r5, #0xa]
	cmp	r0, #0
	beq	.L1908	@cond_branch
	ldr	r1, .L1921+0x4
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L1873
.L1922:
	.align	2, 0
.L1921:
	.word	gStringVar2
	.word	sTVShowState
.L1891:
	ldr	r4, .L1923
	ldrh	r0, [r5, #0xa]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0x10]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
.L1908:
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	beq	.L1907	@cond_branch
	ldr	r1, .L1923+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L1873
.L1924:
	.align	2, 0
.L1923:
	.word	gStringVar2
	.word	sTVShowState
.L1894:
	ldrh	r0, [r5, #0xc]
	cmp	r0, #0xfe
	bls	.L1899	@cond_branch
	mov	r0, #0xc
	strb	r0, [r2]
	b	.L1873
.L1897:
	mov	r0, #0x1
	add	r1, r5, #0
	bl	sub_80EF40C
	bl	TVShowDone
	b	.L1873
.L1898:
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	bne	.L1899	@cond_branch
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L1873
.L1899:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L1873
.L1901:
	ldr	r0, .L1925
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1925+0x4
	ldrh	r0, [r5, #0x6]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	bne	.L1902	@cond_branch
.L1907:
	ldr	r1, .L1925+0x8
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L1873
.L1926:
	.align	2, 0
.L1925:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1902:
	ldr	r1, .L1927
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1873
.L1928:
	.align	2, 0
.L1927:
	.word	sTVShowState
.L1904:
	ldr	r0, .L1929
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L1873:
	ldr	r0, .L1929+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1930:
	.align	2, 0
.L1929:
	.word	gStringVar1
	.word	sTVTodaysSmartShopperTextGroup
.Lfe173:
	.size	 DoTVShowTodaysSmartShopper,.Lfe173-DoTVShowTodaysSmartShopper
	.align	2, 0
	.type	 DoTVShowTheNameRaterShow,function
	.thumb_func
DoTVShowTheNameRaterShow:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r2, .L1965
	ldr	r0, .L1965+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1965+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L1965+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1965+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0x12
	bls	.LCB16188
	b	.L1932	@long jump
.LCB16188:
	lsl	r0, r6, #0x2
	ldr	r1, .L1965+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1966:
	.align	2, 0
.L1965:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1962
	.align	2, 0
	.align	2, 0
.L1962:
	.word	.L1933
	.word	.L1940
	.word	.L1946
	.word	.L1940
	.word	.L1940
	.word	.L1940
	.word	.L1940
	.word	.L1940
	.word	.L1940
	.word	.L1954
	.word	.L1954
	.word	.L1954
	.word	.L1960
	.word	.L1955
	.word	.L1956
	.word	.L1957
	.word	.L1958
	.word	.L1959
	.word	.L1961
.L1933:
	ldr	r0, .L1967
	add	r1, r5, #0
	add	r1, r1, #0xf
	ldrb	r2, [r5, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1967+0x4
	ldrh	r2, [r5, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1967+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1967+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1f]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1967+0x10
	add	r0, r5, #0
	bl	TV_GetNicknameSumMod8
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1932
.L1968:
	.align	2, 0
.L1967:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L1940:
	ldrb	r0, [r5, #0x1a]
	cmp	r0, #0
	bne	.L1941	@cond_branch
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L1932
.L1941:
	cmp	r0, #0x1
	bne	.L1943	@cond_branch
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L1932
.L1943:
	cmp	r0, #0x2
	beq	.LCB16277
	b	.L1932	@long jump
.LCB16277:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L1932
.L1946:
	ldr	r0, .L1969
	add	r1, r5, #0
	add	r1, r1, #0xf
	ldrb	r2, [r5, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0x1a]
	cmp	r0, #0
	bne	.L1947	@cond_branch
	ldr	r1, .L1969+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L1932
.L1970:
	.align	2, 0
.L1969:
	.word	gStringVar1
	.word	sTVShowState
.L1947:
	cmp	r0, #0x1
	bne	.L1949	@cond_branch
	ldr	r1, .L1971
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L1932
.L1972:
	.align	2, 0
.L1971:
	.word	sTVShowState
.L1949:
	cmp	r0, #0x2
	beq	.LCB16328
	b	.L1932	@long jump
.LCB16328:
	ldr	r1, .L1973
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1932
.L1974:
	.align	2, 0
.L1973:
	.word	sTVShowState
.L1954:
	ldr	r0, .L1975
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1f]
	bl	TVShowConvertInternationalString
	mov	r4, #0x0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1975+0x4
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1932
.L1976:
	.align	2, 0
.L1975:
	.word	gStringVar1
	.word	sTVShowState
.L1955:
	ldr	r0, .L1977
	add	r1, r5, #0
	add	r1, r1, #0xf
	ldrb	r2, [r5, #0x1e]
	bl	TVShowConvertInternationalString
	mov	r4, #0x0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x0
	bl	TV_GetNicknameSubstring
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1977+0x4
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L1932
.L1978:
	.align	2, 0
.L1977:
	.word	gStringVar1
	.word	sTVShowState
.L1956:
	mov	r4, #0x0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x0
	b	.L1964
.L1957:
	mov	r0, #0x0
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r0, .L1979
	ldrh	r2, [r5, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1979+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrh	r0, [r5, #0x2]
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x2
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1979+0x8
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L1932
.L1980:
	.align	2, 0
.L1979:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1958:
	ldrh	r0, [r5, #0x2]
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	TV_GetNicknameSubstring
	mov	r0, #0x0
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1981
	mov	r0, #0x11
	strb	r0, [r1]
	b	.L1932
.L1982:
	.align	2, 0
.L1981:
	.word	sTVShowState
.L1959:
	mov	r0, #0x0
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r0, .L1983
	ldrh	r2, [r5, #0x1c]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1983+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrh	r0, [r5, #0x1c]
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x2
.L1964:
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1983+0x8
	mov	r0, #0x12
	strb	r0, [r1]
	b	.L1932
.L1984:
	.align	2, 0
.L1983:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1960:
	mov	r6, #0x12
	strb	r6, [r2]
.L1961:
	ldr	r0, .L1985
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1f]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L1932:
	ldr	r0, .L1985+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1986:
	.align	2, 0
.L1985:
	.word	gStringVar1
	.word	sTVNameRaterTextGroup
.Lfe174:
	.size	 DoTVShowTheNameRaterShow,.Lfe174-DoTVShowTheNameRaterShow
	.align	2, 0
	.type	 DoTVShowPokemonTodaySuccessfulCapture,function
	.thumb_func
DoTVShowPokemonTodaySuccessfulCapture:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2009
	ldr	r0, .L2009+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2009+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2009+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2009+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xb
	bls	.LCB16595
	b	.L1988	@long jump
.LCB16595:
	lsl	r0, r6, #0x2
	ldr	r1, .L2009+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2010:
	.align	2, 0
.L2009:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2005
	.align	2, 0
	.align	2, 0
.L2005:
	.word	.L1989
	.word	.L1992
	.word	.L1993
	.word	.L1996
	.word	.L1997
	.word	.L1998
	.word	.L1999
	.word	.L2001
	.word	.L2001
	.word	.L2003
	.word	.L2003
	.word	.L2004
.L1989:
	ldr	r0, .L2011
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2011+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2011+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2011+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0xf]
	cmp	r0, #0x1
	bne	.L1990	@cond_branch
	ldr	r1, .L2011+0x10
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1988
.L2012:
	.align	2, 0
.L2011:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L1990:
	ldr	r1, .L2013
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1988
.L2014:
	.align	2, 0
.L2013:
	.word	sTVShowState
.L1992:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L1988
.L1993:
	ldr	r4, .L2015
	ldrb	r0, [r5, #0xf]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5, #0x12]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r5, #0x12]
	cmp	r0, #0x3
	bhi	.L1994	@cond_branch
	ldr	r1, .L2015+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1988
.L2016:
	.align	2, 0
.L2015:
	.word	gStringVar2
	.word	sTVShowState
.L1994:
	ldr	r1, .L2017
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1988
.L2018:
	.align	2, 0
.L2017:
	.word	sTVShowState
.L1996:
	ldr	r0, .L2019
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2019+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2019+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2019+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	b	.L2007
.L2020:
	.align	2, 0
.L2019:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L1997:
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L1988
.L1998:
	ldr	r0, .L2021
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2021+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2021+0x8
	add	r1, r1, r2
	bl	StringCopy
.L2007:
	ldr	r1, .L2021+0xc
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1988
.L2022:
	.align	2, 0
.L2021:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1999:
	ldr	r0, .L2023
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2023+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2023+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2023+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L2023+0x10
	bl	Random
	ldrb	r2, [r4]
	add	r2, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r0, r0, r2
	strb	r0, [r4]
	b	.L1988
.L2024:
	.align	2, 0
.L2023:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2001:
	ldr	r0, .L2025
	ldrh	r1, [r5, #0x10]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L2025+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2025+0x8
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r5, #0x10]
	mov	r0, #0x2
	bl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName
	b	.L2008
.L2026:
	.align	2, 0
.L2025:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L2003:
	ldr	r0, .L2027
	ldrh	r1, [r5, #0x10]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L2027+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2027+0x8
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
.L2008:
	ldr	r0, .L2027+0xc
	strb	r4, [r0]
	b	.L1988
.L2028:
	.align	2, 0
.L2027:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	sTVShowState
.L2004:
	bl	TVShowDone
.L1988:
	ldr	r0, .L2029
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2030:
	.align	2, 0
.L2029:
	.word	sTVPokemonTodaySuccessfulTextGroup
.Lfe175:
	.size	 DoTVShowPokemonTodaySuccessfulCapture,.Lfe175-DoTVShowPokemonTodaySuccessfulCapture
	.align	2, 0
	.type	 DoTVShowPokemonTodayFailedCapture,function
	.thumb_func
DoTVShowPokemonTodayFailedCapture:
	push	{r4, r5, lr}
	ldr	r2, .L2046
	ldr	r0, .L2046+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2046+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2046+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2046+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x6
	bls	.LCB16956
	b	.L2032	@long jump
.LCB16956:
	lsl	r0, r5, #0x2
	ldr	r1, .L2046+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2047:
	.align	2, 0
.L2046:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2044
	.align	2, 0
	.align	2, 0
.L2044:
	.word	.L2033
	.word	.L2034
	.word	.L2038
	.word	.L2038
	.word	.L2042
	.word	.L2042
	.word	.L2043
.L2033:
	ldr	r0, .L2048
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2048+0x4
	ldrh	r2, [r4, #0xc]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2048+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2048+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2032
.L2049:
	.align	2, 0
.L2048:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L2034:
	ldr	r0, .L2050
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2050+0x4
	ldrb	r1, [r4, #0x12]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L2050+0x8
	ldrh	r2, [r4, #0xe]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2050+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r4, #0x11]
	cmp	r0, #0x1
	bne	.L2035	@cond_branch
	ldr	r1, .L2050+0x10
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2032
.L2051:
	.align	2, 0
.L2050:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	sTVShowState
.L2035:
	ldr	r1, .L2052
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2032
.L2053:
	.align	2, 0
.L2052:
	.word	sTVShowState
.L2038:
	ldr	r0, .L2054
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x10]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L2039	@cond_branch
	ldr	r1, .L2054+0x4
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2032
.L2055:
	.align	2, 0
.L2054:
	.word	gStringVar1
	.word	sTVShowState
.L2039:
	ldr	r1, .L2056
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2032
.L2057:
	.align	2, 0
.L2056:
	.word	sTVShowState
.L2042:
	ldr	r0, .L2058
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2058+0x4
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2032
.L2059:
	.align	2, 0
.L2058:
	.word	gStringVar1
	.word	sTVShowState
.L2043:
	bl	TVShowDone
.L2032:
	ldr	r0, .L2060
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2061:
	.align	2, 0
.L2060:
	.word	sTVPokemonTodayFailedTextGroup
.Lfe176:
	.size	 DoTVShowPokemonTodayFailedCapture,.Lfe176-DoTVShowPokemonTodayFailedCapture
	.align	2, 0
	.type	 DoTVShowPokemonFanClubLetter,function
	.thumb_func
DoTVShowPokemonFanClubLetter:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2078
	ldr	r0, .L2078+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2078+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2078+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2078+0x10
	ldrb	r7, [r0]
	add	r6, r0, #0
	cmp	r7, #0x33
	bls	.LCB17186
	b	.L2063	@long jump
.LCB17186:
	lsl	r0, r7, #0x2
	ldr	r1, .L2078+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2079:
	.align	2, 0
.L2078:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2076
	.align	2, 0
	.align	2, 0
.L2076:
	.word	.L2064
	.word	.L2065
	.word	.L2068
	.word	.L2069
	.word	.L2072
	.word	.L2072
	.word	.L2072
	.word	.L2073
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2063
	.word	.L2074
	.word	.L2075
.L2064:
	ldr	r0, .L2080
	add	r1, r5, #0
	add	r1, r1, #0x10
	ldrb	r2, [r5, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2080+0x4
	ldrh	r2, [r5, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2080+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2080+0xc
	mov	r0, #0x32
	strb	r0, [r1]
	b	.L2063
.L2081:
	.align	2, 0
.L2080:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L2065:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r2, r0, #0x1
	cmp	r2, #0x1
	bne	.L2066	@cond_branch
	ldr	r1, .L2082
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2063
.L2083:
	.align	2, 0
.L2082:
	.word	sTVShowState
.L2066:
	ldr	r1, .L2084
	add	r0, r2, #0x2
	strb	r0, [r1]
	b	.L2063
.L2085:
	.align	2, 0
.L2084:
	.word	sTVShowState
.L2068:
	mov	r0, #0x33
	strb	r0, [r6]
	b	.L2063
.L2069:
	bl	Random
	ldrb	r4, [r6]
	add	r4, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, r4
	strb	r0, [r6]
	b	.L2063
.L2072:
	add	r0, r5, #0
	bl	TV_FanClubLetter_RandomWordToStringVar3
	ldr	r1, .L2086
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2063
.L2087:
	.align	2, 0
.L2086:
	.word	sTVShowState
.L2073:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1f
	bl	__umodsi3
	add	r0, r0, #0x46
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r0, #0x2
	add	r1, r2, #0
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
	b	.L2063
.L2074:
	ldr	r4, .L2088
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L2088+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2062
.L2089:
	.align	2, 0
.L2088:
	.word	gStringVar4
	.word	sTVShowState
.L2075:
	ldr	r4, .L2090
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L2090+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2062
.L2091:
	.align	2, 0
.L2090:
	.word	gStringVar4
	.word	sTVShowState
.L2063:
	ldr	r0, .L2092
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
.L2062:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2093:
	.align	2, 0
.L2092:
	.word	sTVFanClubTextGroup
.Lfe177:
	.size	 DoTVShowPokemonFanClubLetter,.Lfe177-DoTVShowPokemonFanClubLetter
	.align	2, 0
	.type	 DoTVShowRecentHappenings,function
	.thumb_func
DoTVShowRecentHappenings:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2105
	ldr	r0, .L2105+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2105+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2105+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2105+0x10
	ldrb	r6, [r0]
	add	r7, r0, #0
	cmp	r6, #0x32
	bls	.LCB17418
	b	.L2095	@long jump
.LCB17418:
	lsl	r0, r6, #0x2
	ldr	r1, .L2105+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2106:
	.align	2, 0
.L2105:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2103
	.align	2, 0
	.align	2, 0
.L2103:
	.word	.L2096
	.word	.L2097
	.word	.L2100
	.word	.L2100
	.word	.L2100
	.word	.L2101
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2095
	.word	.L2102
.L2096:
	ldr	r0, .L2107
	add	r1, r5, #0
	add	r1, r1, #0x10
	ldrb	r2, [r5, #0x18]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	TV_FanClubLetter_RandomWordToStringVar3
	ldr	r1, .L2107+0x4
	mov	r0, #0x32
	strb	r0, [r1]
	b	.L2095
.L2108:
	.align	2, 0
.L2107:
	.word	gStringVar1
	.word	sTVShowState
.L2097:
	bl	Random
	ldrb	r4, [r7]
	add	r4, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, r4
	strb	r0, [r7]
	b	.L2095
.L2100:
	mov	r0, #0x5
	strb	r0, [r7]
	b	.L2095
.L2101:
	bl	TVShowDone
	b	.L2095
.L2102:
	ldr	r4, .L2109
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L2109+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2094
.L2110:
	.align	2, 0
.L2109:
	.word	gStringVar4
	.word	sTVShowState
.L2095:
	ldr	r0, .L2111
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
.L2094:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2112:
	.align	2, 0
.L2111:
	.word	sTVRecentHappeninssTextGroup
.Lfe178:
	.size	 DoTVShowRecentHappenings,.Lfe178-DoTVShowRecentHappenings
	.align	2, 0
	.type	 DoTVShowPokemonFanClubOpinions,function
	.thumb_func
DoTVShowPokemonFanClubOpinions:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2123
	ldr	r0, .L2123+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2123+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2123+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L2123+0x10
	ldrb	r5, [r6]
	cmp	r5, #0x3
	bgt	.L2122	@cond_branch
	cmp	r5, #0x1
	bge	.L2118	@cond_branch
	cmp	r5, #0
	beq	.L2115	@cond_branch
	b	.L2114
.L2124:
	.align	2, 0
.L2123:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2122:
	cmp	r5, #0x4
	beq	.L2119	@cond_branch
	b	.L2114
.L2115:
	ldr	r0, .L2125
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2125+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2125+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2125+0xc
	add	r1, r4, #0
	add	r1, r1, #0x10
	ldrb	r2, [r4, #0xe]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x4]
	lsr	r0, r0, #0x4
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L2114
.L2126:
	.align	2, 0
.L2125:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2118:
	ldr	r0, .L2127
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2127+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2127+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2127+0xc
	ldrh	r1, [r4, #0x1c]
	bl	CopyEasyChatWord
	mov	r0, #0x4
	strb	r0, [r6]
	b	.L2114
.L2128:
	.align	2, 0
.L2127:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2119:
	ldr	r0, .L2129
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2129+0x4
	ldrh	r1, [r4, #0x1e]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L2114:
	ldr	r0, .L2129+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2130:
	.align	2, 0
.L2129:
	.word	gStringVar1
	.word	gStringVar3
	.word	sTVFanClubOpinionsTextGroup
.Lfe179:
	.size	 DoTVShowPokemonFanClubOpinions,.Lfe179-DoTVShowPokemonFanClubOpinions
	.align	2, 0
	.type	 DoTVShowDummiedOut,function
	.thumb_func
DoTVShowDummiedOut:
	bx	lr
.Lfe180:
	.size	 DoTVShowDummiedOut,.Lfe180-DoTVShowDummiedOut
	.align	2, 0
	.type	 DoTVShowPokemonNewsMassOutbreak,function
	.thumb_func
DoTVShowPokemonNewsMassOutbreak:
	push	{r4, lr}
	ldr	r2, .L2133
	ldr	r0, .L2133+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2133+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	ldr	r0, .L2133+0xc
	ldrb	r1, [r4, #0x10]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L2133+0x10
	ldrh	r2, [r4, #0xc]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2133+0x14
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
	bl	StartMassOutbreak
	ldr	r1, .L2133+0x18
	ldr	r0, .L2133+0x1c
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r4}
	pop	{r0}
	bx	r0
.L2134:
	.align	2, 0
.L2133:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVMassOutbreakTextGroup
	.word	sTVShowState
.Lfe181:
	.size	 DoTVShowPokemonNewsMassOutbreak,.Lfe181-DoTVShowPokemonNewsMassOutbreak
	.align	2, 0
	.type	 DoTVShowPokemonContestLiveUpdates,function
	.thumb_func
DoTVShowPokemonContestLiveUpdates:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2279
	ldr	r0, .L2279+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2279+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L2279+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2279+0x10
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x20
	bls	.LCB17781
	b	.L2136	@long jump
.LCB17781:
	lsl	r0, r7, #0x2
	ldr	r1, .L2279+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2280:
	.align	2, 0
.L2279:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2270
	.align	2, 0
	.align	2, 0
.L2270:
	.word	.L2137
	.word	.L2144
	.word	.L2159
	.word	.L2174
	.word	.L2189
	.word	.L2212
	.word	.L2213
	.word	.L2214
	.word	.L2215
	.word	.L2224
	.word	.L2225
	.word	.L2226
	.word	.L2227
	.word	.L2228
	.word	.L2229
	.word	.L2238
	.word	.L2239
	.word	.L2240
	.word	.L2241
	.word	.L2242
	.word	.L2243
	.word	.L2244
	.word	.L2245
	.word	.L2246
	.word	.L2261
	.word	.L2262
	.word	.L2268
	.word	.L2268
	.word	.L2263
	.word	.L2264
	.word	.L2268
	.word	.L2268
	.word	.L2269
.L2137:
	ldr	r0, .L2281
	ldrb	r1, [r6, #0x1c]
	bl	BufferContestName
	ldr	r0, .L2281+0x4
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2281+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2281+0xc
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r6, #0xd]
	ldrb	r1, [r6, #0xe]
	cmp	r0, r1
	bne	.L2138	@cond_branch
	cmp	r0, #0
	bne	.L2139	@cond_branch
	ldr	r1, .L2281+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2136
.L2282:
	.align	2, 0
.L2281:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2139:
	ldr	r1, .L2283
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2136
.L2284:
	.align	2, 0
.L2283:
	.word	sTVShowState
.L2138:
	cmp	r0, r1
	bls	.L2142	@cond_branch
	ldr	r1, .L2285
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2136
.L2286:
	.align	2, 0
.L2285:
	.word	sTVShowState
.L2142:
	ldr	r1, .L2287
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2136
.L2288:
	.align	2, 0
.L2287:
	.word	sTVShowState
.L2144:
	ldr	r0, .L2289
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2289+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r6, #0xf]
	cmp	r1, #0x8
	bne	.LCB17908
	b	.L2202	@long jump
.LCB17908:
	cmp	r1, #0x8
	bgt	.L2156	@cond_branch
.L2277:
	cmp	r1, #0x2
	bne	.LCB17913
	b	.L2200	@long jump
.LCB17913:
	cmp	r1, #0x2
	bgt	.LCB17915
	b	.L2275	@long jump
.LCB17915:
	b	.L2210
.L2290:
	.align	2, 0
.L2289:
	.word	gStringVar2
	.word	gSpeciesNames
.L2156:
	cmp	r1, #0x20
	bne	.LCB17927
	b	.L2204	@long jump
.LCB17927:
	cmp	r1, #0x20
	bgt	.LCB17929
	b	.L2276	@long jump
.LCB17929:
	cmp	r1, #0x40
	bne	.LCB17931
	b	.L2205	@long jump
.LCB17931:
	cmp	r1, #0x80
	beq	.LCB17933
	b	.L2136	@long jump
.LCB17933:
	b	.L2206
.L2159:
	ldr	r0, .L2291
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2291+0x4
	add	r1, r1, r2
	bl	StringCopy
.L2278:
	ldrb	r1, [r6, #0xf]
	cmp	r1, #0x8
	bne	.LCB17952
	b	.L2202	@long jump
.LCB17952:
	cmp	r1, #0x8
	ble	.L2277	@cond_branch
	b	.L2156
.L2292:
	.align	2, 0
.L2291:
	.word	gStringVar2
	.word	gSpeciesNames
.L2174:
	ldr	r0, .L2293
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2293+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2293+0x8
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	b	.L2278
.L2294:
	.align	2, 0
.L2293:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2189:
	ldrb	r0, [r6, #0x1c]
	cmp	r0, #0x4
	bhi	.L2190	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2295
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2296:
	.align	2, 0
.L2295:
	.word	.L2196
	.align	2, 0
	.align	2, 0
.L2196:
	.word	.L2191
	.word	.L2192
	.word	.L2193
	.word	.L2194
	.word	.L2195
.L2191:
	ldr	r0, .L2297
	ldr	r1, .L2297+0x4
	bl	StringCopy
	b	.L2190
.L2298:
	.align	2, 0
.L2297:
	.word	gStringVar1
	.word	gText_Cool
.L2192:
	ldr	r0, .L2299
	ldr	r1, .L2299+0x4
	bl	StringCopy
	b	.L2190
.L2300:
	.align	2, 0
.L2299:
	.word	gStringVar1
	.word	gText_Beauty
.L2193:
	ldr	r0, .L2301
	ldr	r1, .L2301+0x4
	bl	StringCopy
	b	.L2190
.L2302:
	.align	2, 0
.L2301:
	.word	gStringVar1
	.word	gText_Cute
.L2194:
	ldr	r0, .L2303
	ldr	r1, .L2303+0x4
	bl	StringCopy
	b	.L2190
.L2304:
	.align	2, 0
.L2303:
	.word	gStringVar1
	.word	gText_Smart
.L2195:
	ldr	r0, .L2305
	ldr	r1, .L2305+0x4
	bl	StringCopy
.L2190:
	ldr	r0, .L2305+0x8
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2305+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r6, #0xf]
	cmp	r1, #0x8
	beq	.L2202	@cond_branch
	cmp	r1, #0x8
	bgt	.L2209	@cond_branch
	cmp	r1, #0x2
	beq	.L2200	@cond_branch
	cmp	r1, #0x2
	bgt	.L2210	@cond_branch
.L2275:
	cmp	r1, #0x1
	beq	.L2199	@cond_branch
	b	.L2136
.L2306:
	.align	2, 0
.L2305:
	.word	gStringVar1
	.word	gText_Tough
	.word	gStringVar2
	.word	gSpeciesNames
.L2210:
	cmp	r1, #0x4
	beq	.L2201	@cond_branch
	b	.L2136
.L2209:
	cmp	r1, #0x20
	beq	.L2204	@cond_branch
	cmp	r1, #0x20
	bgt	.L2211	@cond_branch
.L2276:
	cmp	r1, #0x10
	beq	.L2203	@cond_branch
	b	.L2136
.L2211:
	cmp	r1, #0x40
	beq	.L2205	@cond_branch
	cmp	r1, #0x80
	beq	.L2206	@cond_branch
	b	.L2136
.L2199:
	ldr	r1, .L2307
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2136
.L2308:
	.align	2, 0
.L2307:
	.word	sTVShowState
.L2200:
	ldr	r1, .L2309
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2136
.L2310:
	.align	2, 0
.L2309:
	.word	sTVShowState
.L2201:
	ldr	r1, .L2311
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L2136
.L2312:
	.align	2, 0
.L2311:
	.word	sTVShowState
.L2202:
	ldr	r1, .L2313
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2136
.L2314:
	.align	2, 0
.L2313:
	.word	sTVShowState
.L2203:
	ldr	r1, .L2315
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2136
.L2316:
	.align	2, 0
.L2315:
	.word	sTVShowState
.L2204:
	ldr	r1, .L2317
	mov	r0, #0x14
	strb	r0, [r1]
	b	.L2136
.L2318:
	.align	2, 0
.L2317:
	.word	sTVShowState
.L2205:
	ldr	r1, .L2319
	mov	r0, #0x15
	strb	r0, [r1]
	b	.L2136
.L2320:
	.align	2, 0
.L2319:
	.word	sTVShowState
.L2206:
	ldr	r1, .L2321
	mov	r0, #0x16
	strb	r0, [r1]
	b	.L2136
.L2322:
	.align	2, 0
.L2321:
	.word	sTVShowState
.L2212:
	ldr	r0, .L2323
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2323+0x4
	b	.L2272
.L2324:
	.align	2, 0
.L2323:
	.word	gStringVar2
	.word	gSpeciesNames
.L2213:
	ldr	r0, .L2325
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2325+0x4
	b	.L2272
.L2326:
	.align	2, 0
.L2325:
	.word	gStringVar2
	.word	gSpeciesNames
.L2214:
	ldr	r0, .L2327
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2327+0x4
	b	.L2272
.L2328:
	.align	2, 0
.L2327:
	.word	gStringVar2
	.word	gSpeciesNames
.L2215:
	ldr	r0, .L2329
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2329+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r6, #0x1c]
	cmp	r0, #0x4
	bls	.LCB18304
	b	.L2136	@long jump
.LCB18304:
	lsl	r0, r0, #0x2
	ldr	r1, .L2329+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2330:
	.align	2, 0
.L2329:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	.L2222
	.align	2, 0
	.align	2, 0
.L2222:
	.word	.L2217
	.word	.L2218
	.word	.L2219
	.word	.L2220
	.word	.L2221
.L2217:
	ldr	r1, .L2331
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2136
.L2332:
	.align	2, 0
.L2331:
	.word	sTVShowState
.L2218:
	ldr	r1, .L2333
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2136
.L2334:
	.align	2, 0
.L2333:
	.word	sTVShowState
.L2219:
	ldr	r1, .L2335
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L2136
.L2336:
	.align	2, 0
.L2335:
	.word	sTVShowState
.L2220:
	ldr	r1, .L2337
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L2136
.L2338:
	.align	2, 0
.L2337:
	.word	sTVShowState
.L2221:
	ldr	r1, .L2339
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L2136
.L2340:
	.align	2, 0
.L2339:
	.word	sTVShowState
.L2224:
	ldr	r0, .L2341
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2341+0x4
	b	.L2272
.L2342:
	.align	2, 0
.L2341:
	.word	gStringVar2
	.word	gSpeciesNames
.L2225:
	ldr	r0, .L2343
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2343+0x4
	b	.L2272
.L2344:
	.align	2, 0
.L2343:
	.word	gStringVar2
	.word	gSpeciesNames
.L2226:
	ldr	r0, .L2345
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2345+0x4
	b	.L2272
.L2346:
	.align	2, 0
.L2345:
	.word	gStringVar2
	.word	gSpeciesNames
.L2227:
	ldr	r0, .L2347
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2347+0x4
	b	.L2272
.L2348:
	.align	2, 0
.L2347:
	.word	gStringVar2
	.word	gSpeciesNames
.L2228:
	ldr	r0, .L2349
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2349+0x4
	b	.L2272
.L2350:
	.align	2, 0
.L2349:
	.word	gStringVar2
	.word	gSpeciesNames
.L2229:
	ldr	r0, .L2351
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2351+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r6, #0x1c]
	cmp	r0, #0x4
	bls	.LCB18482
	b	.L2136	@long jump
.LCB18482:
	lsl	r0, r0, #0x2
	ldr	r1, .L2351+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2352:
	.align	2, 0
.L2351:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	.L2236
	.align	2, 0
	.align	2, 0
.L2236:
	.word	.L2231
	.word	.L2232
	.word	.L2233
	.word	.L2234
	.word	.L2235
.L2231:
	ldr	r1, .L2353
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L2136
.L2354:
	.align	2, 0
.L2353:
	.word	sTVShowState
.L2232:
	ldr	r1, .L2355
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L2136
.L2356:
	.align	2, 0
.L2355:
	.word	sTVShowState
.L2233:
	ldr	r1, .L2357
	mov	r0, #0x11
	strb	r0, [r1]
	b	.L2136
.L2358:
	.align	2, 0
.L2357:
	.word	sTVShowState
.L2234:
	ldr	r1, .L2359
	mov	r0, #0x12
	strb	r0, [r1]
	b	.L2136
.L2360:
	.align	2, 0
.L2359:
	.word	sTVShowState
.L2235:
	ldr	r1, .L2361
	mov	r0, #0x13
	strb	r0, [r1]
	b	.L2136
.L2362:
	.align	2, 0
.L2361:
	.word	sTVShowState
.L2238:
	ldr	r0, .L2363
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2363+0x4
	b	.L2272
.L2364:
	.align	2, 0
.L2363:
	.word	gStringVar2
	.word	gSpeciesNames
.L2239:
	ldr	r0, .L2365
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2365+0x4
	b	.L2272
.L2366:
	.align	2, 0
.L2365:
	.word	gStringVar2
	.word	gSpeciesNames
.L2240:
	ldr	r0, .L2367
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2367+0x4
	b	.L2272
.L2368:
	.align	2, 0
.L2367:
	.word	gStringVar2
	.word	gSpeciesNames
.L2241:
	ldr	r0, .L2369
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2369+0x4
	b	.L2272
.L2370:
	.align	2, 0
.L2369:
	.word	gStringVar2
	.word	gSpeciesNames
.L2242:
	ldr	r0, .L2371
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2371+0x4
	b	.L2272
.L2372:
	.align	2, 0
.L2371:
	.word	gStringVar2
	.word	gSpeciesNames
.L2243:
	ldr	r0, .L2373
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2373+0x4
	b	.L2272
.L2374:
	.align	2, 0
.L2373:
	.word	gStringVar2
	.word	gSpeciesNames
.L2244:
	ldr	r0, .L2375
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2375+0x4
	b	.L2272
.L2376:
	.align	2, 0
.L2375:
	.word	gStringVar2
	.word	gSpeciesNames
.L2245:
	ldr	r0, .L2377
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2377+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2377+0x8
	ldrh	r2, [r6, #0x10]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2377+0xc
.L2272:
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2377+0x10
	mov	r0, #0x17
	strb	r0, [r1]
	b	.L2136
.L2378:
	.align	2, 0
.L2377:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2246:
	ldr	r0, .L2379
	ldrh	r1, [r6, #0x12]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2379+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2379+0x8
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2379+0xc
	ldrh	r1, [r6, #0x2]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldrb	r0, [r6, #0xc]
	cmp	r0, #0x8
	beq	.L2251	@cond_branch
	cmp	r0, #0x8
	bgt	.L2258	@cond_branch
	cmp	r0, #0x2
	beq	.L2249	@cond_branch
	cmp	r0, #0x2
	bgt	.L2259	@cond_branch
	cmp	r0, #0x1
	beq	.L2248	@cond_branch
	b	.L2136
.L2380:
	.align	2, 0
.L2379:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar3
.L2259:
	cmp	r0, #0x4
	beq	.L2250	@cond_branch
	b	.L2136
.L2258:
	cmp	r0, #0x20
	beq	.L2253	@cond_branch
	cmp	r0, #0x20
	bgt	.L2260	@cond_branch
	cmp	r0, #0x10
	beq	.L2252	@cond_branch
	b	.L2136
.L2260:
	cmp	r0, #0x40
	beq	.L2254	@cond_branch
	cmp	r0, #0x80
	beq	.L2255	@cond_branch
	b	.L2136
.L2248:
	ldr	r1, .L2381
	mov	r0, #0x1f
	strb	r0, [r1]
	b	.L2136
.L2382:
	.align	2, 0
.L2381:
	.word	sTVShowState
.L2249:
	ldr	r1, .L2383
	mov	r0, #0x1e
	strb	r0, [r1]
	b	.L2136
.L2384:
	.align	2, 0
.L2383:
	.word	sTVShowState
.L2250:
	ldr	r1, .L2385
	mov	r0, #0x1d
	strb	r0, [r1]
	b	.L2136
.L2386:
	.align	2, 0
.L2385:
	.word	sTVShowState
.L2251:
	ldr	r1, .L2387
	mov	r0, #0x1c
	strb	r0, [r1]
	b	.L2136
.L2388:
	.align	2, 0
.L2387:
	.word	sTVShowState
.L2252:
	ldr	r1, .L2389
	mov	r0, #0x1b
	strb	r0, [r1]
	b	.L2136
.L2390:
	.align	2, 0
.L2389:
	.word	sTVShowState
.L2253:
	ldr	r1, .L2391
	mov	r0, #0x1a
	strb	r0, [r1]
	b	.L2136
.L2392:
	.align	2, 0
.L2391:
	.word	sTVShowState
.L2254:
	ldr	r1, .L2393
	mov	r0, #0x19
	strb	r0, [r1]
	b	.L2136
.L2394:
	.align	2, 0
.L2393:
	.word	sTVShowState
.L2255:
	ldr	r1, .L2395
	mov	r0, #0x18
	strb	r0, [r1]
	b	.L2136
.L2396:
	.align	2, 0
.L2395:
	.word	sTVShowState
.L2261:
	ldr	r0, .L2397
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2397+0x4
	add	r1, r1, r2
	bl	StringCopy
	b	.L2273
.L2398:
	.align	2, 0
.L2397:
	.word	gStringVar1
	.word	gSpeciesNames
.L2262:
	ldr	r0, .L2399
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2399+0x4
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2399+0x8
	add	r1, r1, r2
	bl	StringCopy
	b	.L2273
.L2400:
	.align	2, 0
.L2399:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L2263:
	mov	r0, #0x20
	strb	r0, [r2]
	b	.L2136
.L2264:
	ldr	r0, .L2401
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2401+0x4
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2401+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2401+0xc
	b	.L2274
.L2402:
	.align	2, 0
.L2401:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2268:
	ldr	r0, .L2403
.L2274:
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
.L2273:
	ldr	r1, .L2403+0x4
	mov	r0, #0x20
	strb	r0, [r1]
	b	.L2136
.L2404:
	.align	2, 0
.L2403:
	.word	gStringVar1
	.word	sTVShowState
.L2269:
	ldr	r0, .L2405
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2405+0x4
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2405+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L2136:
	ldr	r0, .L2405+0xc
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2406:
	.align	2, 0
.L2405:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVContestLiveUpdatesTextGroup
.Lfe182:
	.size	 DoTVShowPokemonContestLiveUpdates,.Lfe182-DoTVShowPokemonContestLiveUpdates
	.align	2, 0
	.type	 DoTVShowPokemonBattleUpdate,function
	.thumb_func
DoTVShowPokemonBattleUpdate:
	push	{r4, r5, lr}
	ldr	r2, .L2427
	ldr	r0, .L2427+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2427+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2427+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2427+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0x7
	bls	.LCB19054
	b	.L2408	@long jump
.LCB19054:
	lsl	r0, r5, #0x2
	ldr	r1, .L2427+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2428:
	.align	2, 0
.L2427:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2425
	.align	2, 0
	.align	2, 0
.L2425:
	.word	.L2409
	.word	.L2416
	.word	.L2419
	.word	.L2420
	.word	.L2421
	.word	.L2422
	.word	.L2423
	.word	.L2424
.L2409:
	ldrb	r1, [r4, #0x18]
	cmp	r1, #0
	bge	.LCB19081
	b	.L2408	@long jump
.LCB19081:
	cmp	r1, #0x1
	ble	.L2412	@cond_branch
	cmp	r1, #0x2
	beq	.L2413	@cond_branch
	b	.L2408
.L2412:
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L2408
.L2413:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2408
.L2416:
	ldr	r0, .L2429
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2429+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x18]
	cmp	r0, #0
	bne	.L2417	@cond_branch
	ldr	r0, .L2429+0x8
	ldr	r1, .L2429+0xc
	bl	StringCopy
	b	.L2418
.L2430:
	.align	2, 0
.L2429:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_Single
.L2417:
	ldr	r0, .L2431
	ldr	r1, .L2431+0x4
	bl	StringCopy
.L2418:
	ldr	r1, .L2431+0x8
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2408
.L2432:
	.align	2, 0
.L2431:
	.word	gStringVar3
	.word	gText_Double
	.word	sTVShowState
.L2419:
	ldr	r0, .L2433
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2433+0x4
	ldrh	r2, [r4, #0x16]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2433+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2433+0xc
	ldrh	r2, [r4, #0x14]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2433+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2433+0x14
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2408
.L2434:
	.align	2, 0
.L2433:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2420:
	ldr	r0, .L2435
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2435+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2435+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2435+0xc
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2408
.L2436:
	.align	2, 0
.L2435:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L2421:
	ldr	r0, .L2437
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2437+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
	b	.L2408
.L2438:
	.align	2, 0
.L2437:
	.word	gStringVar1
	.word	gStringVar2
.L2422:
	ldr	r0, .L2439
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2439+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2439+0x8
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2408
.L2440:
	.align	2, 0
.L2439:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2423:
	ldr	r0, .L2441
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2441+0x4
	ldrh	r2, [r4, #0x16]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2441+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2441+0xc
	ldrh	r2, [r4, #0x14]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2441+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2441+0x14
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2408
.L2442:
	.align	2, 0
.L2441:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2424:
	ldr	r0, .L2443
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2443+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2443+0x8
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2443+0xc
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L2408:
	ldr	r0, .L2443+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2444:
	.align	2, 0
.L2443:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	sTVPokemonBattleUpdateTextGroup
.Lfe183:
	.size	 DoTVShowPokemonBattleUpdate,.Lfe183-DoTVShowPokemonBattleUpdate
	.align	2, 0
	.type	 DoTVShow3CheersForPokeblocks,function
	.thumb_func
DoTVShow3CheersForPokeblocks:
	push	{r4, r5, lr}
	ldr	r2, .L2482
	ldr	r0, .L2482+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2482+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2482+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2482+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x5
	bls	.LCB19405
	b	.L2446	@long jump
.LCB19405:
	lsl	r0, r5, #0x2
	ldr	r1, .L2482+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2483:
	.align	2, 0
.L2482:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2479
	.align	2, 0
	.align	2, 0
.L2479:
	.word	.L2447
	.word	.L2450
	.word	.L2463
	.word	.L2464
	.word	.L2477
	.word	.L2478
.L2447:
	ldr	r0, .L2484
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x14
	bls	.L2448	@cond_branch
	ldr	r1, .L2484+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2446
.L2485:
	.align	2, 0
.L2484:
	.word	gStringVar1
	.word	sTVShowState
.L2448:
	ldr	r1, .L2486
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2446
.L2487:
	.align	2, 0
.L2486:
	.word	sTVShowState
.L2450:
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0x4
	bhi	.L2451	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2488
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2489:
	.align	2, 0
.L2488:
	.word	.L2457
	.align	2, 0
	.align	2, 0
.L2457:
	.word	.L2452
	.word	.L2453
	.word	.L2454
	.word	.L2455
	.word	.L2456
.L2452:
	ldr	r0, .L2490
	ldr	r1, .L2490+0x4
	bl	StringCopy
	b	.L2451
.L2491:
	.align	2, 0
.L2490:
	.word	gStringVar1
	.word	gText_Spicy2
.L2453:
	ldr	r0, .L2492
	ldr	r1, .L2492+0x4
	bl	StringCopy
	b	.L2451
.L2493:
	.align	2, 0
.L2492:
	.word	gStringVar1
	.word	gText_Dry2
.L2454:
	ldr	r0, .L2494
	ldr	r1, .L2494+0x4
	bl	StringCopy
	b	.L2451
.L2495:
	.align	2, 0
.L2494:
	.word	gStringVar1
	.word	gText_Sweet2
.L2455:
	ldr	r0, .L2496
	ldr	r1, .L2496+0x4
	bl	StringCopy
	b	.L2451
.L2497:
	.align	2, 0
.L2496:
	.word	gStringVar1
	.word	gText_Bitter2
.L2456:
	ldr	r0, .L2498
	ldr	r1, .L2498+0x4
	bl	StringCopy
.L2451:
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x18
	bls	.L2459	@cond_branch
	ldr	r0, .L2498+0x8
	ldr	r1, .L2498+0xc
	bl	StringCopy
	b	.L2460
.L2499:
	.align	2, 0
.L2498:
	.word	gStringVar1
	.word	gText_Sour2
	.word	gStringVar2
	.word	gText_Excellent
.L2459:
	cmp	r0, #0x16
	bls	.L2461	@cond_branch
	ldr	r0, .L2500
	ldr	r1, .L2500+0x4
	bl	StringCopy
	b	.L2460
.L2501:
	.align	2, 0
.L2500:
	.word	gStringVar2
	.word	gText_VeryGood
.L2461:
	ldr	r0, .L2502
	ldr	r1, .L2502+0x4
	bl	StringCopy
.L2460:
	ldr	r0, .L2502+0x8
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2502+0xc
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2446
.L2503:
	.align	2, 0
.L2502:
	.word	gStringVar2
	.word	gText_Good
	.word	gStringVar3
	.word	sTVShowState
.L2463:
	ldr	r0, .L2504
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x15]
	b	.L2481
.L2505:
	.align	2, 0
.L2504:
	.word	gStringVar1
.L2464:
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0x4
	bhi	.L2465	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2506
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2507:
	.align	2, 0
.L2506:
	.word	.L2471
	.align	2, 0
	.align	2, 0
.L2471:
	.word	.L2466
	.word	.L2467
	.word	.L2468
	.word	.L2469
	.word	.L2470
.L2466:
	ldr	r0, .L2508
	ldr	r1, .L2508+0x4
	bl	StringCopy
	b	.L2465
.L2509:
	.align	2, 0
.L2508:
	.word	gStringVar1
	.word	gText_Spicy2
.L2467:
	ldr	r0, .L2510
	ldr	r1, .L2510+0x4
	bl	StringCopy
	b	.L2465
.L2511:
	.align	2, 0
.L2510:
	.word	gStringVar1
	.word	gText_Dry2
.L2468:
	ldr	r0, .L2512
	ldr	r1, .L2512+0x4
	bl	StringCopy
	b	.L2465
.L2513:
	.align	2, 0
.L2512:
	.word	gStringVar1
	.word	gText_Sweet2
.L2469:
	ldr	r0, .L2514
	ldr	r1, .L2514+0x4
	bl	StringCopy
	b	.L2465
.L2515:
	.align	2, 0
.L2514:
	.word	gStringVar1
	.word	gText_Bitter2
.L2470:
	ldr	r0, .L2516
	ldr	r1, .L2516+0x4
	bl	StringCopy
.L2465:
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x10
	bls	.L2473	@cond_branch
	ldr	r0, .L2516+0x8
	ldr	r1, .L2516+0xc
	bl	StringCopy
	b	.L2474
.L2517:
	.align	2, 0
.L2516:
	.word	gStringVar1
	.word	gText_Sour2
	.word	gStringVar2
	.word	gText_SoSo
.L2473:
	cmp	r0, #0xd
	bls	.L2475	@cond_branch
	ldr	r0, .L2518
	ldr	r1, .L2518+0x4
	bl	StringCopy
	b	.L2474
.L2519:
	.align	2, 0
.L2518:
	.word	gStringVar2
	.word	gText_Bad
.L2475:
	ldr	r0, .L2520
	ldr	r1, .L2520+0x4
	bl	StringCopy
.L2474:
	ldr	r0, .L2520+0x8
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2520+0xc
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2446
.L2521:
	.align	2, 0
.L2520:
	.word	gStringVar2
	.word	gText_TheWorst
	.word	gStringVar3
	.word	sTVShowState
.L2477:
	ldr	r0, .L2522
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x15]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2522+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
.L2481:
	bl	TVShowConvertInternationalString
	ldr	r1, .L2522+0x8
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2446
.L2523:
	.align	2, 0
.L2522:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2478:
	bl	TVShowDone
.L2446:
	ldr	r0, .L2524
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2525:
	.align	2, 0
.L2524:
	.word	sTV3CheersForPokeblocksTextGroup
.Lfe184:
	.size	 DoTVShow3CheersForPokeblocks,.Lfe184-DoTVShow3CheersForPokeblocks
	.align	2, 0
	.globl	DoTVShowInSearchOfTrainers
	.type	 DoTVShowInSearchOfTrainers,function
	.thumb_func
DoTVShowInSearchOfTrainers:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L2549
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L2549+0x4
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x8
	bls	.LCB19877
	b	.L2527	@long jump
.LCB19877:
	lsl	r0, r7, #0x2
	ldr	r1, .L2549+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2550:
	.align	2, 0
.L2549:
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2547
	.align	2, 0
	.align	2, 0
.L2547:
	.word	.L2528
	.word	.L2531
	.word	.L2532
	.word	.L2541
	.word	.L2545
	.word	.L2545
	.word	.L2545
	.word	.L2545
	.word	.L2546
.L2528:
	ldr	r0, .L2551
	ldr	r4, .L2551+0x4
	ldr	r1, [r4]
	ldr	r2, .L2551+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, [r4]
	ldr	r1, .L2551+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bls	.L2529	@cond_branch
	ldr	r1, .L2551+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2527
.L2552:
	.align	2, 0
.L2551:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	0x282c
	.word	0x282d
	.word	sTVShowState
.L2529:
	ldr	r1, .L2553
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2527
.L2554:
	.align	2, 0
.L2553:
	.word	sTVShowState
.L2531:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L2527
.L2532:
	ldr	r0, .L2555
	ldr	r0, [r0]
	ldr	r1, .L2555+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2533	@cond_branch
	mov	r0, #0x4
	strb	r0, [r2]
	b	.L2527
.L2556:
	.align	2, 0
.L2555:
	.word	gSaveBlock1Ptr
	.word	0x282e
.L2533:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2535	@cond_branch
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2527
.L2535:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2537	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L2527
.L2537:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2539	@cond_branch
	mov	r0, #0x7
	strb	r0, [r2]
	b	.L2527
.L2539:
	mov	r0, #0x3
	strb	r0, [r2]
	b	.L2527
.L2541:
	ldr	r0, .L2557
	ldr	r4, .L2557+0x4
	ldr	r1, [r4]
	ldr	r2, .L2557+0x8
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r6, #0xb
	mul	r1, r1, r6
	ldr	r5, .L2557+0xc
	add	r1, r1, r5
	bl	StringCopy
	ldr	r0, .L2557+0x10
	ldr	r1, [r4]
	ldr	r2, .L2557+0x14
	add	r1, r1, r2
	ldrh	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2557+0x18
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2557+0x1c
	ldr	r1, [r4]
	ldr	r2, .L2557+0x20
	add	r1, r1, r2
	ldrh	r1, [r1]
	mul	r1, r1, r6
	add	r1, r1, r5
	bl	StringCopy
	ldr	r1, .L2557+0x24
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2527
.L2558:
	.align	2, 0
.L2557:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	0x2824
	.word	gSpeciesNames
	.word	gStringVar2
	.word	0x2828
	.word	gMoveNames
	.word	gStringVar3
	.word	0x2826
	.word	sTVShowState
.L2545:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L2527
.L2546:
	ldr	r0, .L2559
	ldr	r4, .L2559+0x4
	ldr	r1, [r4]
	ldr	r2, .L2559+0x8
	add	r1, r1, r2
	ldrh	r1, [r1]
	bl	CopyEasyChatWord
	ldr	r0, .L2559+0xc
	ldr	r1, [r4]
	ldr	r2, .L2559+0x10
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r6, #0xb
	mul	r1, r1, r6
	ldr	r5, .L2559+0x14
	add	r1, r1, r5
	bl	StringCopy
	ldr	r0, .L2559+0x18
	ldr	r1, [r4]
	ldr	r2, .L2559+0x1c
	add	r1, r1, r2
	ldrh	r1, [r1]
	mul	r1, r1, r6
	add	r1, r1, r5
	bl	StringCopy
	ldr	r1, .L2559+0x20
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L2559+0x24
	mov	r0, #0x0
	strb	r0, [r1]
	bl	TakeTVShowInSearchOfTrainersOffTheAir
.L2527:
	ldr	r0, .L2559+0x28
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2560:
	.align	2, 0
.L2559:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	0x282a
	.word	gStringVar2
	.word	0x2824
	.word	gSpeciesNames
	.word	gStringVar3
	.word	0x2826
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	sTVInSearchOfTrainersTextGroup
.Lfe185:
	.size	 DoTVShowInSearchOfTrainers,.Lfe185-DoTVShowInSearchOfTrainers
	.align	2, 0
	.type	 DoTVShowPokemonAngler,function
	.thumb_func
DoTVShowPokemonAngler:
	push	{r4, r5, lr}
	ldr	r2, .L2569
	ldr	r0, .L2569+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2569+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r0, .L2569+0xc
	mov	r1, #0x0
	strh	r1, [r0]
	ldrb	r0, [r4, #0x2]
	ldrb	r2, [r4, #0x3]
	cmp	r0, r2
	bcs	.L2562	@cond_branch
	ldr	r0, .L2569+0x10
	strb	r1, [r0]
	b	.L2563
.L2570:
	.align	2, 0
.L2569:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2562:
	ldr	r1, .L2571
	mov	r0, #0x1
	strb	r0, [r1]
	add	r0, r1, #0
.L2563:
	ldrb	r5, [r0]
	cmp	r5, #0
	beq	.L2565	@cond_branch
	cmp	r5, #0x1
	beq	.L2566	@cond_branch
	b	.L2564
.L2572:
	.align	2, 0
.L2571:
	.word	sTVShowState
.L2565:
	ldr	r0, .L2573
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x6]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2573+0x4
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2573+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
	b	.L2564
.L2574:
	.align	2, 0
.L2573:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L2566:
	ldr	r0, .L2575
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x6]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2575+0x4
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2575+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
.L2564:
	ldr	r0, .L2575+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2576:
	.align	2, 0
.L2575:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVPokemonAnslerTextGroup
.Lfe186:
	.size	 DoTVShowPokemonAngler,.Lfe186-DoTVShowPokemonAngler
	.align	2, 0
	.type	 DoTVShowTheWorldOfMasters,function
	.thumb_func
DoTVShowTheWorldOfMasters:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2585
	ldr	r0, .L2585+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2585+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2585+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L2585+0x10
	ldrb	r5, [r6]
	cmp	r5, #0x1
	beq	.L2580	@cond_branch
	cmp	r5, #0x1
	bgt	.L2584	@cond_branch
	cmp	r5, #0
	beq	.L2579	@cond_branch
	b	.L2578
.L2586:
	.align	2, 0
.L2585:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2584:
	cmp	r5, #0x2
	beq	.L2581	@cond_branch
	b	.L2578
.L2579:
	ldr	r0, .L2587
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xb]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x6]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	mov	r0, #0x1
	strb	r0, [r6]
	b	.L2578
.L2588:
	.align	2, 0
.L2587:
	.word	gStringVar1
.L2580:
	ldr	r0, .L2589
	ldrh	r2, [r4, #0x8]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2589+0x4
	add	r1, r1, r2
	bl	StringCopy
	mov	r0, #0x2
	strb	r0, [r6]
	b	.L2578
.L2590:
	.align	2, 0
.L2589:
	.word	gStringVar1
	.word	gSpeciesNames
.L2581:
	ldr	r0, .L2591
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xb]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2591+0x4
	ldrb	r1, [r4, #0xa]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L2591+0x8
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2591+0xc
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L2578:
	ldr	r0, .L2591+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2592:
	.align	2, 0
.L2591:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	sTVWorldOfMastersTextGroup
.Lfe187:
	.size	 DoTVShowTheWorldOfMasters,.Lfe187-DoTVShowTheWorldOfMasters
	.align	2, 0
	.type	 DoTVShowTodaysRivalTrainer,function
	.thumb_func
DoTVShowTodaysRivalTrainer:
	push	{r4, r5, lr}
	ldr	r2, .L2643
	ldr	r0, .L2643+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2643+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2643+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2643+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xa
	bls	.LCB20474
	b	.L2594	@long jump
.LCB20474:
	lsl	r0, r5, #0x2
	ldr	r1, .L2643+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2644:
	.align	2, 0
.L2643:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2637
	.align	2, 0
	.align	2, 0
.L2637:
	.word	.L2595
	.word	.L2619
	.word	.L2624
	.word	.L2629
	.word	.L2632
	.word	.L2635
	.word	.L2636
	.word	.L2607
	.word	.L2610
	.word	.L2613
	.word	.L2616
.L2595:
	ldrb	r0, [r4, #0x7]
	cmp	r0, #0x56
	beq	.L2598	@cond_branch
	cmp	r0, #0x57
	beq	.L2599	@cond_branch
	mov	r0, #0x7
	strb	r0, [r2]
	b	.L2594
.L2598:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L2594
.L2599:
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L2645
	cmp	r1, r0
	bgt	.L2604	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	blt	.L2604	@cond_branch
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L2594
.L2646:
	.align	2, 0
.L2645:
	.word	0x117
.L2604:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L2594
.L2607:
	ldr	r0, .L2647
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r0, .L2647+0x4
	ldrb	r1, [r4, #0x7]
	mov	r2, #0x0
	bl	GetMapName
.L2642:
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0
	bne	.L2639	@cond_branch
	b	.L2617
.L2648:
	.align	2, 0
.L2647:
	.word	gStringVar1
	.word	gStringVar3
.L2610:
	ldr	r0, .L2649
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	b	.L2642
.L2650:
	.align	2, 0
.L2649:
	.word	gStringVar1
.L2613:
	ldr	r0, .L2651
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	b	.L2642
.L2652:
	.align	2, 0
.L2651:
	.word	gStringVar1
.L2616:
	ldr	r0, .L2653
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0
	beq	.L2617	@cond_branch
.L2639:
	ldr	r1, .L2653+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2594
.L2654:
	.align	2, 0
.L2653:
	.word	gStringVar1
	.word	sTVShowState
.L2617:
	ldr	r1, .L2655
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2594
.L2656:
	.align	2, 0
.L2655:
	.word	sTVShowState
.L2619:
	ldrb	r1, [r4, #0x4]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	ldr	r0, .L2657
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2641	@cond_branch
	ldr	r0, [r4, #0x4]
	ldr	r1, .L2657+0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2640	@cond_branch
	b	.L2626
.L2658:
	.align	2, 0
.L2657:
	.word	0x8a8
	.word	0xffff00
.L2624:
	ldr	r0, .L2659
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2641	@cond_branch
	ldr	r0, [r4, #0x4]
	ldr	r1, .L2659+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2626	@cond_branch
.L2640:
	ldr	r1, .L2659+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2594
.L2660:
	.align	2, 0
.L2659:
	.word	0x8a8
	.word	0xffff00
	.word	sTVShowState
.L2626:
	ldr	r1, .L2661
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2594
.L2662:
	.align	2, 0
.L2661:
	.word	sTVShowState
.L2629:
	ldrh	r0, [r4, #0x8]
	cmp	r0, #0
	bne	.L2630	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L2594
.L2630:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2594
.L2632:
	ldrb	r1, [r4, #0x6]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	ldrb	r1, [r4, #0x5]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r4, #0x8]
	cmp	r0, #0
	beq	.L2641	@cond_branch
	ldr	r1, .L2663
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2594
.L2664:
	.align	2, 0
.L2663:
	.word	sTVShowState
.L2635:
	ldrh	r1, [r4, #0x8]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
.L2641:
	ldr	r1, .L2665
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2594
.L2666:
	.align	2, 0
.L2665:
	.word	sTVShowState
.L2636:
	ldr	r0, .L2667
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L2594:
	ldr	r0, .L2667+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2668:
	.align	2, 0
.L2667:
	.word	gStringVar1
	.word	sTVTodaysRivalTrainerTextGroup
.Lfe188:
	.size	 DoTVShowTodaysRivalTrainer,.Lfe188-DoTVShowTodaysRivalTrainer
	.align	2, 0
	.type	 DoTVShowDewfordTrendWatcherNetwork,function
	.thumb_func
DoTVShowDewfordTrendWatcherNetwork:
	push	{r4, r5, lr}
	ldr	r2, .L2684
	ldr	r0, .L2684+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2684+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2684+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2684+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x6
	bls	.LCB20867
	b	.L2670	@long jump
.LCB20867:
	lsl	r0, r5, #0x2
	ldr	r1, .L2684+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2685:
	.align	2, 0
.L2684:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2682
	.align	2, 0
	.align	2, 0
.L2682:
	.word	.L2671
	.word	.L2675
	.word	.L2675
	.word	.L2676
	.word	.L2680
	.word	.L2680
	.word	.L2681
.L2671:
	ldr	r0, .L2686
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2686+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0
	bne	.L2672	@cond_branch
	ldr	r1, .L2686+0x8
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2670
.L2687:
	.align	2, 0
.L2686:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2672:
	ldr	r1, .L2688
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2670
.L2689:
	.align	2, 0
.L2688:
	.word	sTVShowState
.L2675:
	ldr	r0, .L2690
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2690+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldr	r0, .L2690+0x8
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x9]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2690+0xc
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2670
.L2691:
	.align	2, 0
.L2690:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L2676:
	ldr	r0, .L2692
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2692+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0
	bne	.L2677	@cond_branch
	ldr	r1, .L2692+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2670
.L2693:
	.align	2, 0
.L2692:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2677:
	ldr	r1, .L2694
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2670
.L2695:
	.align	2, 0
.L2694:
	.word	sTVShowState
.L2680:
	ldr	r0, .L2696
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2696+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldr	r0, .L2696+0x8
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x9]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2696+0xc
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2670
.L2697:
	.align	2, 0
.L2696:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L2681:
	ldr	r0, .L2698
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2698+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L2670:
	ldr	r0, .L2698+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2699:
	.align	2, 0
.L2698:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVDewfordTrendWatcherNetworkTextGroup
.Lfe189:
	.size	 DoTVShowDewfordTrendWatcherNetwork,.Lfe189-DoTVShowDewfordTrendWatcherNetwork
	.align	2, 0
	.type	 DoTVShowHoennTreasureInvestigators,function
	.thumb_func
DoTVShowHoennTreasureInvestigators:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2716
	ldr	r0, .L2716+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2716+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2716+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r7, .L2716+0x10
	ldrb	r6, [r7]
	cmp	r6, #0x1
	beq	.L2711	@cond_branch
	cmp	r6, #0x1
	bgt	.L2715	@cond_branch
	cmp	r6, #0
	beq	.L2702	@cond_branch
	b	.L2701
.L2717:
	.align	2, 0
.L2716:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2715:
	cmp	r6, #0x2
	beq	.L2712	@cond_branch
	b	.L2701
.L2702:
	ldr	r4, .L2718
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r0, [r5, #0x4]
	cmp	r0, #0x57
	bne	.L2703	@cond_branch
	ldrh	r1, [r5, #0x6]
	ldr	r0, .L2718+0x4
	cmp	r1, r0
	bgt	.L2708	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	blt	.L2708	@cond_branch
	mov	r0, #0x2
	strb	r0, [r7]
	b	.L2701
.L2719:
	.align	2, 0
.L2718:
	.word	gStringVar1
	.word	0x117
.L2708:
	ldr	r1, .L2720
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2701
.L2721:
	.align	2, 0
.L2720:
	.word	sTVShowState
.L2703:
	mov	r0, #0x1
	strb	r0, [r7]
	b	.L2701
.L2711:
	ldr	r4, .L2722
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L2722+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x5]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2722+0x8
	ldrb	r1, [r5, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	bl	TVShowDone
	b	.L2701
.L2723:
	.align	2, 0
.L2722:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.L2712:
	ldr	r4, .L2724
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L2724+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x5]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L2701:
	ldr	r0, .L2724+0x8
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2725:
	.align	2, 0
.L2724:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVHoennTreasureInvestisatorsTextGroup
.Lfe190:
	.size	 DoTVShowHoennTreasureInvestigators,.Lfe190-DoTVShowHoennTreasureInvestigators
	.align	2, 0
	.type	 DoTVShowFindThatGamer,function
	.thumb_func
DoTVShowFindThatGamer:
	push	{r4, r5, lr}
	ldr	r2, .L2757
	ldr	r0, .L2757+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2757+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2757+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2757+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x1
	beq	.L2736	@cond_branch
	cmp	r5, #0x1
	bgt	.L2756	@cond_branch
	cmp	r5, #0
	beq	.L2728	@cond_branch
	b	.L2727
.L2758:
	.align	2, 0
.L2757:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2756:
	cmp	r5, #0x2
	beq	.L2742	@cond_branch
	cmp	r5, #0x3
	bne	.LCB21292
	b	.L2748	@long jump
.LCB21292:
	b	.L2727
.L2728:
	ldr	r0, .L2759
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L2730	@cond_branch
	cmp	r0, #0x1
	beq	.L2731	@cond_branch
	b	.L2729
.L2760:
	.align	2, 0
.L2759:
	.word	gStringVar1
.L2730:
	ldr	r0, .L2761
	ldr	r1, .L2761+0x4
	bl	StringCopy
	b	.L2729
.L2762:
	.align	2, 0
.L2761:
	.word	gStringVar2
	.word	gText_Slots
.L2731:
	ldr	r0, .L2763
	ldr	r1, .L2763+0x4
	bl	StringCopy
.L2729:
	ldrb	r1, [r4, #0x2]
	cmp	r1, #0x1
	bne	.L2734	@cond_branch
	ldr	r0, .L2763+0x8
	strb	r1, [r0]
	b	.L2727
.L2764:
	.align	2, 0
.L2763:
	.word	gStringVar2
	.word	gText_Roulette
	.word	sTVShowState
.L2734:
	ldr	r1, .L2765
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2727
.L2766:
	.align	2, 0
.L2765:
	.word	sTVShowState
.L2736:
	ldr	r0, .L2767
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L2738	@cond_branch
	cmp	r0, #0x1
	beq	.L2739	@cond_branch
	b	.L2737
.L2768:
	.align	2, 0
.L2767:
	.word	gStringVar1
.L2738:
	ldr	r0, .L2769
	ldr	r1, .L2769+0x4
	bl	StringCopy
	b	.L2737
.L2770:
	.align	2, 0
.L2769:
	.word	gStringVar2
	.word	gText_Slots
.L2739:
	ldr	r0, .L2771
	ldr	r1, .L2771+0x4
	bl	StringCopy
.L2737:
	ldrh	r1, [r4, #0x4]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
	b	.L2727
.L2772:
	.align	2, 0
.L2771:
	.word	gStringVar2
	.word	gText_Roulette
.L2742:
	ldr	r0, .L2773
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L2744	@cond_branch
	cmp	r0, #0x1
	beq	.L2745	@cond_branch
	b	.L2743
.L2774:
	.align	2, 0
.L2773:
	.word	gStringVar1
.L2744:
	ldr	r0, .L2775
	ldr	r1, .L2775+0x4
	bl	StringCopy
	b	.L2743
.L2776:
	.align	2, 0
.L2775:
	.word	gStringVar2
	.word	gText_Slots
.L2745:
	ldr	r0, .L2777
	ldr	r1, .L2777+0x4
	bl	StringCopy
.L2743:
	ldrh	r1, [r4, #0x4]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L2777+0x8
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2727
.L2778:
	.align	2, 0
.L2777:
	.word	gStringVar2
	.word	gText_Roulette
	.word	sTVShowState
.L2748:
	ldr	r0, .L2779
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x3]
	cmp	r1, #0
	beq	.L2750	@cond_branch
	cmp	r1, #0x1
	beq	.L2751	@cond_branch
	b	.L2749
.L2780:
	.align	2, 0
.L2779:
	.word	gStringVar1
.L2750:
	ldr	r0, .L2781
	ldr	r1, .L2781+0x4
	bl	StringCopy
	b	.L2749
.L2782:
	.align	2, 0
.L2781:
	.word	gStringVar2
	.word	gText_Roulette
.L2751:
	ldr	r0, .L2783
	ldr	r1, .L2783+0x4
	bl	StringCopy
.L2749:
	bl	TVShowDone
.L2727:
	ldr	r0, .L2783+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2784:
	.align	2, 0
.L2783:
	.word	gStringVar2
	.word	gText_Slots
	.word	sTVFindThatGamerTextGroup
.Lfe191:
	.size	 DoTVShowFindThatGamer,.Lfe191-DoTVShowFindThatGamer
	.align	2, 0
	.type	 DoTVShowBreakingNewsTV,function
	.thumb_func
DoTVShowBreakingNewsTV:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2814
	ldr	r0, .L2814+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2814+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L2814+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2814+0x10
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0xc
	bls	.LCB21597
	b	.L2786	@long jump
.LCB21597:
	lsl	r0, r7, #0x2
	ldr	r1, .L2814+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2815:
	.align	2, 0
.L2814:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2811
	.align	2, 0
	.align	2, 0
.L2811:
	.word	.L2787
	.word	.L2790
	.word	.L2791
	.word	.L2792
	.word	.L2793
	.word	.L2794
	.word	.L2795
	.word	.L2805
	.word	.L2807
	.word	.L2809
	.word	.L2809
	.word	.L2810
	.word	.L2806
.L2787:
	ldrb	r0, [r6, #0x5]
	cmp	r0, #0
	bne	.L2788	@cond_branch
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L2786
.L2788:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2786
.L2790:
	ldr	r0, .L2816
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2816+0x4
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2816+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2816+0xc
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r1, .L2816+0x10
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2786
.L2817:
	.align	2, 0
.L2816:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2791:
	ldr	r0, .L2818
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2818+0x4
	ldrh	r1, [r6, #0x2]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2818+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2818+0xc
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r1, .L2818+0x10
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2786
.L2819:
	.align	2, 0
.L2818:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2792:
	ldrh	r1, [r6, #0x8]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	ldr	r4, .L2820
	ldrh	r0, [r6, #0x6]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L2820+0x4
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2786
.L2821:
	.align	2, 0
.L2820:
	.word	gStringVar2
	.word	sTVShowState
.L2793:
	ldr	r0, .L2822
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2822+0x4
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	bl	TVShowDone
	b	.L2786
.L2823:
	.align	2, 0
.L2822:
	.word	gStringVar1
	.word	gStringVar2
.L2794:
	ldr	r0, .L2824
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2824+0x4
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2824+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2824+0xc
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r1, .L2824+0x10
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2786
.L2825:
	.align	2, 0
.L2824:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2795:
	ldr	r0, .L2826
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2826+0x4
	ldrh	r1, [r6, #0x2]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2826+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2826+0xc
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldrb	r0, [r6, #0x5]
	cmp	r0, #0x2
	beq	.L2800	@cond_branch
	cmp	r0, #0x2
	bgt	.L2804	@cond_branch
	cmp	r0, #0x1
	beq	.L2797	@cond_branch
	b	.L2786
.L2827:
	.align	2, 0
.L2826:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2804:
	cmp	r0, #0x3
	beq	.L2801	@cond_branch
	b	.L2786
.L2797:
	ldrh	r0, [r6, #0xc]
	cmp	r0, #0
	bne	.L2798	@cond_branch
	ldr	r1, .L2828
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L2786
.L2829:
	.align	2, 0
.L2828:
	.word	sTVShowState
.L2798:
	ldr	r1, .L2830
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2786
.L2831:
	.align	2, 0
.L2830:
	.word	sTVShowState
.L2800:
	ldr	r1, .L2832
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2786
.L2833:
	.align	2, 0
.L2832:
	.word	sTVShowState
.L2801:
	ldr	r1, .L2834
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2786
.L2835:
	.align	2, 0
.L2834:
	.word	sTVShowState
.L2805:
	ldr	r0, .L2836
	ldrh	r2, [r6, #0xc]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2836+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2836+0x8
	ldrh	r2, [r6, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2836+0xc
	add	r1, r1, r2
	b	.L2813
.L2837:
	.align	2, 0
.L2836:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
	.word	gSpeciesNames
.L2806:
	ldr	r0, .L2838
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2838+0x4
	ldrh	r1, [r6, #0x2]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2838+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2838+0xc
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
.L2813:
	bl	StringCopy
	ldr	r1, .L2838+0x10
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2786
.L2839:
	.align	2, 0
.L2838:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2807:
	ldr	r0, .L2840
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2840+0x4
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r1, .L2840+0x8
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L2786
.L2841:
	.align	2, 0
.L2840:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2809:
	ldr	r0, .L2842
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2842+0x4
	ldrh	r1, [r6, #0x2]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L2842+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2842+0xc
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L2842+0x10
	strb	r4, [r0]
	b	.L2786
.L2843:
	.align	2, 0
.L2842:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2810:
	ldr	r0, .L2844
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L2786:
	ldr	r0, .L2844+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2845:
	.align	2, 0
.L2844:
	.word	gStringVar1
	.word	sTVBreakingNewsTextGroup
.Lfe192:
	.size	 DoTVShowBreakingNewsTV,.Lfe192-DoTVShowBreakingNewsTV
	.align	2, 0
	.type	 DoTVShowSecretBaseVisit,function
	.thumb_func
DoTVShowSecretBaseVisit:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2882
	ldr	r0, .L2882+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2882+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2882+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2882+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xd
	bls	.LCB22103
	b	.L2847	@long jump
.LCB22103:
	lsl	r0, r6, #0x2
	ldr	r1, .L2882+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2883:
	.align	2, 0
.L2882:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2879
	.align	2, 0
	.align	2, 0
.L2879:
	.word	.L2848
	.word	.L2851
	.word	.L2866
	.word	.L2854
	.word	.L2866
	.word	.L2862
	.word	.L2863
	.word	.L2866
	.word	.L2867
	.word	.L2877
	.word	.L2877
	.word	.L2877
	.word	.L2877
	.word	.L2878
.L2848:
	ldr	r0, .L2884
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0xc]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0x3]
	cmp	r0, #0
	bne	.L2849	@cond_branch
	ldr	r1, .L2884+0x4
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2847
.L2885:
	.align	2, 0
.L2884:
	.word	gStringVar1
	.word	sTVShowState
.L2849:
	ldr	r1, .L2886
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2847
.L2887:
	.align	2, 0
.L2886:
	.word	sTVShowState
.L2851:
	ldr	r0, .L2888
	ldrb	r1, [r5, #0x4]
	lsl	r1, r1, #0x5
	ldr	r2, .L2888+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r5, #0x3]
	cmp	r0, #0x1
	bne	.L2852	@cond_branch
	ldr	r1, .L2888+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2847
.L2889:
	.align	2, 0
.L2888:
	.word	gStringVar2
	.word	gDecorations+0x1
	.word	sTVShowState
.L2852:
	ldr	r1, .L2890
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2847
.L2891:
	.align	2, 0
.L2890:
	.word	sTVShowState
.L2854:
	ldr	r0, .L2892
	ldrb	r1, [r5, #0x5]
	lsl	r1, r1, #0x5
	ldr	r2, .L2892+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r5, #0x3]
	cmp	r1, #0x3
	beq	.L2857	@cond_branch
	cmp	r1, #0x3
	bgt	.L2861	@cond_branch
	cmp	r1, #0x2
	beq	.L2856	@cond_branch
	b	.L2847
.L2893:
	.align	2, 0
.L2892:
	.word	gStringVar2
	.word	gDecorations+0x1
.L2861:
	cmp	r1, #0x4
	beq	.L2858	@cond_branch
	b	.L2847
.L2856:
	ldr	r1, .L2894
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2847
.L2895:
	.align	2, 0
.L2894:
	.word	sTVShowState
.L2857:
	ldr	r1, .L2896
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2847
.L2897:
	.align	2, 0
.L2896:
	.word	sTVShowState
.L2858:
	ldr	r1, .L2898
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2847
.L2899:
	.align	2, 0
.L2898:
	.word	sTVShowState
.L2862:
	ldr	r0, .L2900
	ldrb	r1, [r5, #0x6]
	lsl	r1, r1, #0x5
	ldr	r4, .L2900+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2900+0x8
	ldrb	r1, [r5, #0x7]
	lsl	r1, r1, #0x5
	add	r1, r1, r4
	b	.L2881
.L2901:
	.align	2, 0
.L2900:
	.word	gStringVar2
	.word	gDecorations+0x1
	.word	gStringVar3
.L2863:
	ldr	r0, .L2902
	ldrb	r1, [r5, #0x6]
	lsl	r1, r1, #0x5
	ldr	r2, .L2902+0x4
	add	r1, r1, r2
.L2881:
	bl	StringCopy
	ldr	r1, .L2902+0x8
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2847
.L2903:
	.align	2, 0
.L2902:
	.word	gStringVar2
	.word	gDecorations+0x1
	.word	sTVShowState
.L2866:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L2847
.L2867:
	ldr	r0, .L2904
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0xc]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r5, #0x2]
	cmp	r1, #0x18
	bhi	.L2868	@cond_branch
	ldr	r1, .L2904+0x4
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L2847
.L2905:
	.align	2, 0
.L2904:
	.word	gStringVar1
	.word	sTVShowState
.L2868:
	cmp	r1, #0x31
	bhi	.L2870	@cond_branch
	ldr	r1, .L2906
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L2847
.L2907:
	.align	2, 0
.L2906:
	.word	sTVShowState
.L2870:
	cmp	r1, #0x45
	bhi	.L2872	@cond_branch
	ldr	r1, .L2908
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2847
.L2909:
	.align	2, 0
.L2908:
	.word	sTVShowState
.L2872:
	ldr	r1, .L2910
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2847
.L2911:
	.align	2, 0
.L2910:
	.word	sTVShowState
.L2877:
	ldr	r0, .L2912
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0xc]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2912+0x4
	ldrh	r2, [r5, #0x8]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2912+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2912+0xc
	ldrh	r2, [r5, #0xa]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2912+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2912+0x14
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L2847
.L2913:
	.align	2, 0
.L2912:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2878:
	bl	TVShowDone
.L2847:
	ldr	r0, .L2914
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2915:
	.align	2, 0
.L2914:
	.word	sTVSecretBaseVisitTextGroup
.Lfe193:
	.size	 DoTVShowSecretBaseVisit,.Lfe193-DoTVShowSecretBaseVisit
	.align	2, 0
	.type	 DoTVShowPokemonLotteryWinnerFlashReport,function
	.thumb_func
DoTVShowPokemonLotteryWinnerFlashReport:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2923
	ldr	r0, .L2923+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2923+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2923+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2923+0x10
	ldrb	r6, [r0]
	ldr	r0, .L2923+0x14
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x5]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0x4]
	cmp	r0, #0
	bne	.L2917	@cond_branch
	ldr	r0, .L2923+0x18
	ldr	r1, .L2923+0x1c
	bl	StringCopy
	b	.L2918
.L2924:
	.align	2, 0
.L2923:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	gStringVar1
	.word	gStringVar2
	.word	gText_Jackpot
.L2917:
	cmp	r0, #0x1
	bne	.L2919	@cond_branch
	ldr	r0, .L2925
	ldr	r1, .L2925+0x4
	bl	StringCopy
	b	.L2918
.L2926:
	.align	2, 0
.L2925:
	.word	gStringVar2
	.word	gText_First
.L2919:
	cmp	r0, #0x2
	bne	.L2921	@cond_branch
	ldr	r0, .L2927
	ldr	r1, .L2927+0x4
	bl	StringCopy
	b	.L2918
.L2928:
	.align	2, 0
.L2927:
	.word	gStringVar2
	.word	gText_Second
.L2921:
	ldr	r0, .L2929
	ldr	r1, .L2929+0x4
	bl	StringCopy
.L2918:
	ldr	r4, .L2929+0x8
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	bl	TVShowDone
	ldr	r1, .L2929+0xc
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2930:
	.align	2, 0
.L2929:
	.word	gStringVar2
	.word	gText_Third
	.word	gStringVar3
	.word	sTVPokemonLotteryWinnerFlashReportTextGroup
.Lfe194:
	.size	 DoTVShowPokemonLotteryWinnerFlashReport,.Lfe194-DoTVShowPokemonLotteryWinnerFlashReport
	.align	2, 0
	.type	 DoTVShowThePokemonBattleSeminar,function
	.thumb_func
DoTVShowThePokemonBattleSeminar:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2951
	ldr	r0, .L2951+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2951+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L2951+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2951+0x10
	ldrb	r7, [r0]
	cmp	r7, #0x6
	bls	.LCB22616
	b	.L2932	@long jump
.LCB22616:
	lsl	r0, r7, #0x2
	ldr	r1, .L2951+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2952:
	.align	2, 0
.L2951:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2947
	.align	2, 0
	.align	2, 0
.L2947:
	.word	.L2933
	.word	.L2934
	.word	.L2935
	.word	.L2943
	.word	.L2944
	.word	.L2945
	.word	.L2946
.L2933:
	ldr	r0, .L2953
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0x11]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2953+0x4
	ldrh	r1, [r6, #0x6]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2953+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2953+0xc
	ldrh	r1, [r6, #0x4]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r1, .L2953+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2932
.L2954:
	.align	2, 0
.L2953:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2934:
	ldr	r0, .L2955
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0x11]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2955+0x4
	ldrh	r2, [r6, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2955+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2955+0xc
	ldrh	r2, [r6, #0x2]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2955+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2955+0x14
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2932
.L2956:
	.align	2, 0
.L2955:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2935:
	ldr	r0, .L2957
	ldrh	r2, [r6, #0x6]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2957+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r6, #0x10]
	cmp	r1, #0x2
	beq	.L2938	@cond_branch
	cmp	r1, #0x2
	bgt	.L2942	@cond_branch
	cmp	r1, #0x1
	beq	.L2937	@cond_branch
	b	.L2949
.L2958:
	.align	2, 0
.L2957:
	.word	gStringVar1
	.word	gSpeciesNames
.L2942:
	cmp	r1, #0x3
	beq	.L2939	@cond_branch
	b	.L2949
.L2937:
	ldr	r1, .L2959
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2932
.L2960:
	.align	2, 0
.L2959:
	.word	sTVShowState
.L2938:
	ldr	r1, .L2961
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2932
.L2962:
	.align	2, 0
.L2961:
	.word	sTVShowState
.L2939:
	ldr	r0, .L2963
	strb	r1, [r0]
	b	.L2932
.L2964:
	.align	2, 0
.L2963:
	.word	sTVShowState
.L2943:
	ldr	r0, .L2965
	ldrh	r2, [r6, #0x8]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r4, .L2965+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2965+0x8
	ldrh	r2, [r6, #0xa]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2965+0xc
	ldrh	r2, [r6, #0xc]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	add	r1, r1, r4
	b	.L2950
.L2966:
	.align	2, 0
.L2965:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
	.word	gStringVar3
.L2944:
	ldr	r0, .L2967
	ldrh	r2, [r6, #0x8]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r4, .L2967+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2967+0x8
	ldrh	r2, [r6, #0xa]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	add	r1, r1, r4
	b	.L2950
.L2968:
	.align	2, 0
.L2967:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
.L2945:
	ldr	r0, .L2969
	ldrh	r2, [r6, #0x8]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L2969+0x4
	add	r1, r1, r2
.L2950:
	bl	StringCopy
.L2949:
	ldr	r1, .L2969+0x8
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2932
.L2970:
	.align	2, 0
.L2969:
	.word	gStringVar2
	.word	gMoveNames
	.word	sTVShowState
.L2946:
	ldr	r0, .L2971
	ldrh	r2, [r6, #0xe]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	ldr	r4, .L2971+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2971+0x8
	ldrh	r2, [r6, #0x2]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	add	r1, r1, r4
	bl	StringCopy
	bl	TVShowDone
.L2932:
	ldr	r0, .L2971+0xc
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2972:
	.align	2, 0
.L2971:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
	.word	sTVThePokemonBattleSeminarTextGroup
.Lfe195:
	.size	 DoTVShowThePokemonBattleSeminar,.Lfe195-DoTVShowThePokemonBattleSeminar
	.align	2, 0
	.type	 DoTVShowTrainerFanClubSpecial,function
	.thumb_func
DoTVShowTrainerFanClubSpecial:
	push	{r4, r5, lr}
	ldr	r2, .L2989
	ldr	r0, .L2989+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2989+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2989+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2989+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x5
	bls	.LCB22943
	b	.L2974	@long jump
.LCB22943:
	lsl	r0, r5, #0x2
	ldr	r1, .L2989+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2990:
	.align	2, 0
.L2989:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2987
	.align	2, 0
	.align	2, 0
.L2987:
	.word	.L2975
	.word	.L2985
	.word	.L2985
	.word	.L2984
	.word	.L2985
	.word	.L2986
.L2975:
	ldr	r0, .L2991
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2991+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2991+0x8
	ldrh	r1, [r4, #0x14]
	bl	CopyEasyChatWord
	ldrb	r1, [r4, #0x16]
	cmp	r1, #0x59
	bls	.L2976	@cond_branch
	ldr	r1, .L2991+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2974
.L2992:
	.align	2, 0
.L2991:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L2976:
	cmp	r1, #0x45
	bls	.L2978	@cond_branch
	ldr	r1, .L2993
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2974
.L2994:
	.align	2, 0
.L2993:
	.word	sTVShowState
.L2978:
	cmp	r1, #0x1d
	bls	.L2980	@cond_branch
	ldr	r1, .L2995
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2974
.L2996:
	.align	2, 0
.L2995:
	.word	sTVShowState
.L2980:
	ldr	r1, .L2997
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2974
.L2998:
	.align	2, 0
.L2997:
	.word	sTVShowState
.L2984:
.L2985:
	ldr	r0, .L2999
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2999+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x16]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L2999+0x8
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2974
.L3000:
	.align	2, 0
.L2999:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2986:
	ldr	r0, .L3001
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3001+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3001+0x8
	ldrh	r1, [r4, #0x14]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L2974:
	ldr	r0, .L3001+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3002:
	.align	2, 0
.L3001:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVTrainerFanClubSpecialTextGroup
.Lfe196:
	.size	 DoTVShowTrainerFanClubSpecial,.Lfe196-DoTVShowTrainerFanClubSpecial
	.align	2, 0
	.type	 DoTVShowTrainerFanClub,function
	.thumb_func
DoTVShowTrainerFanClub:
	push	{r4, r5, lr}
	ldr	r2, .L3032
	ldr	r0, .L3032+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3032+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3032+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3032+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xb
	bls	.LCB23173
	b	.L3004	@long jump
.LCB23173:
	lsl	r0, r5, #0x2
	ldr	r1, .L3032+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3033:
	.align	2, 0
.L3032:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3030
	.align	2, 0
	.align	2, 0
.L3030:
	.word	.L3005
	.word	.L3028
	.word	.L3028
	.word	.L3028
	.word	.L3028
	.word	.L3028
	.word	.L3028
	.word	.L3028
	.word	.L3028
	.word	.L3027
	.word	.L3028
	.word	.L3029
.L3005:
	ldr	r0, .L3034
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	add	r0, r4, #0
	add	r0, r0, #0x23
	ldrb	r0, [r0]
	lsl	r0, r0, #0x8
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	add	r0, r0, r1
	mov	r1, #0xa
	bl	__umodsi3
	cmp	r0, #0x9
	bls	.LCB23219
	b	.L3004	@long jump
.LCB23219:
	lsl	r0, r0, #0x2
	ldr	r1, .L3034+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3035:
	.align	2, 0
.L3034:
	.word	gStringVar1
	.word	.L3017
	.align	2, 0
	.align	2, 0
.L3017:
	.word	.L3007
	.word	.L3008
	.word	.L3009
	.word	.L3010
	.word	.L3011
	.word	.L3012
	.word	.L3013
	.word	.L3014
	.word	.L3015
	.word	.L3016
.L3007:
	ldr	r1, .L3036
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L3004
.L3037:
	.align	2, 0
.L3036:
	.word	sTVShowState
.L3008:
	ldr	r1, .L3038
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L3004
.L3039:
	.align	2, 0
.L3038:
	.word	sTVShowState
.L3009:
	ldr	r1, .L3040
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L3004
.L3041:
	.align	2, 0
.L3040:
	.word	sTVShowState
.L3010:
	ldr	r1, .L3042
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3004
.L3043:
	.align	2, 0
.L3042:
	.word	sTVShowState
.L3011:
	ldr	r1, .L3044
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L3004
.L3045:
	.align	2, 0
.L3044:
	.word	sTVShowState
.L3012:
	ldr	r1, .L3046
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L3004
.L3047:
	.align	2, 0
.L3046:
	.word	sTVShowState
.L3013:
	ldr	r1, .L3048
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3004
.L3049:
	.align	2, 0
.L3048:
	.word	sTVShowState
.L3014:
	ldr	r1, .L3050
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3004
.L3051:
	.align	2, 0
.L3050:
	.word	sTVShowState
.L3015:
	ldr	r1, .L3052
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L3004
.L3053:
	.align	2, 0
.L3052:
	.word	sTVShowState
.L3016:
	ldr	r1, .L3054
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L3004
.L3055:
	.align	2, 0
.L3054:
	.word	sTVShowState
.L3027:
.L3028:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L3004
.L3029:
	ldr	r0, .L3056
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3056+0x4
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L3056+0x8
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L3004:
	ldr	r0, .L3056+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3057:
	.align	2, 0
.L3056:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVTrainerFanClubTextGroup
.Lfe197:
	.size	 DoTVShowTrainerFanClub,.Lfe197-DoTVShowTrainerFanClub
	.align	2, 0
	.type	 DoTVShowSpotTheCuties,function
	.thumb_func
DoTVShowSpotTheCuties:
	push	{r4, r5, lr}
	ldr	r2, .L3110
	ldr	r0, .L3110+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3110+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3110+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3110+0x10
	ldrb	r5, [r0]
	cmp	r5, #0xf
	bls	.LCB23439
	b	.L3059	@long jump
.LCB23439:
	lsl	r0, r5, #0x2
	ldr	r1, .L3110+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3111:
	.align	2, 0
.L3110:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3108
	.align	2, 0
	.align	2, 0
.L3108:
	.word	.L3060
	.word	.L3067
	.word	.L3067
	.word	.L3067
	.word	.L3068
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3106
	.word	.L3107
.L3060:
	ldr	r0, .L3112
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xf]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3112+0x4
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	cmp	r1, #0x9
	bhi	.L3061	@cond_branch
	ldr	r1, .L3112+0x8
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L3059
.L3113:
	.align	2, 0
.L3112:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3061:
	cmp	r1, #0x13
	bhi	.L3063	@cond_branch
	ldr	r1, .L3114
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L3059
.L3115:
	.align	2, 0
.L3114:
	.word	sTVShowState
.L3063:
	ldr	r1, .L3116
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L3059
.L3117:
	.align	2, 0
.L3116:
	.word	sTVShowState
.L3067:
	ldr	r0, .L3118
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xf]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3118+0x4
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3118+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3059
.L3119:
	.align	2, 0
.L3118:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3068:
	ldr	r0, .L3120
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x18
	bls	.LCB23569
	b	.L3059	@long jump
.LCB23569:
	lsl	r0, r0, #0x2
	ldr	r1, .L3120+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3121:
	.align	2, 0
.L3120:
	.word	gStringVar2
	.word	.L3095
	.align	2, 0
	.align	2, 0
.L3095:
	.word	.L3070
	.word	.L3074
	.word	.L3074
	.word	.L3074
	.word	.L3074
	.word	.L3078
	.word	.L3078
	.word	.L3078
	.word	.L3078
	.word	.L3082
	.word	.L3082
	.word	.L3082
	.word	.L3082
	.word	.L3086
	.word	.L3086
	.word	.L3086
	.word	.L3086
	.word	.L3090
	.word	.L3090
	.word	.L3090
	.word	.L3090
	.word	.L3091
	.word	.L3092
	.word	.L3093
	.word	.L3094
.L3070:
	ldr	r1, .L3122
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L3059
.L3123:
	.align	2, 0
.L3122:
	.word	sTVShowState
.L3074:
	ldr	r1, .L3124
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L3059
.L3125:
	.align	2, 0
.L3124:
	.word	sTVShowState
.L3078:
	ldr	r1, .L3126
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3059
.L3127:
	.align	2, 0
.L3126:
	.word	sTVShowState
.L3082:
	ldr	r1, .L3128
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3059
.L3129:
	.align	2, 0
.L3128:
	.word	sTVShowState
.L3086:
	ldr	r1, .L3130
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L3059
.L3131:
	.align	2, 0
.L3130:
	.word	sTVShowState
.L3090:
	ldr	r1, .L3132
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L3059
.L3133:
	.align	2, 0
.L3132:
	.word	sTVShowState
.L3091:
	ldr	r1, .L3134
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L3059
.L3135:
	.align	2, 0
.L3134:
	.word	sTVShowState
.L3092:
	ldr	r1, .L3136
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L3059
.L3137:
	.align	2, 0
.L3136:
	.word	sTVShowState
.L3093:
	ldr	r1, .L3138
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L3059
.L3139:
	.align	2, 0
.L3138:
	.word	sTVShowState
.L3094:
	ldr	r1, .L3140
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L3059
.L3141:
	.align	2, 0
.L3140:
	.word	sTVShowState
.L3106:
	ldr	r0, .L3142
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldr	r1, .L3142+0x4
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L3059
.L3143:
	.align	2, 0
.L3142:
	.word	gStringVar2
	.word	sTVShowState
.L3107:
	bl	TVShowDone
.L3059:
	ldr	r0, .L3144
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3145:
	.align	2, 0
.L3144:
	.word	sTVCutiesTextGroup
.Lfe198:
	.size	 DoTVShowSpotTheCuties,.Lfe198-DoTVShowSpotTheCuties
	.align	2, 0
	.type	 DoTVShowPokemonNewsBattleFrontier,function
	.thumb_func
DoTVShowPokemonNewsBattleFrontier:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L3186
	ldr	r0, .L3186+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3186+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L3186+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3186+0x10
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x12
	bls	.LCB23773
	b	.L3147	@long jump
.LCB23773:
	lsl	r0, r7, #0x2
	ldr	r1, .L3186+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3187:
	.align	2, 0
.L3186:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3183
	.align	2, 0
	.align	2, 0
.L3183:
	.word	.L3148
	.word	.L3177
	.word	.L3166
	.word	.L3167
	.word	.L3168
	.word	.L3177
	.word	.L3177
	.word	.L3177
	.word	.L3177
	.word	.L3177
	.word	.L3177
	.word	.L3177
	.word	.L3176
	.word	.L3177
	.word	.L3178
	.word	.L3179
	.word	.L3180
	.word	.L3181
	.word	.L3182
.L3148:
	ldrb	r0, [r6, #0xd]
	sub	r0, r0, #0x1
	cmp	r0, #0xc
	bls	.LCB23801
	b	.L3147	@long jump
.LCB23801:
	lsl	r0, r0, #0x2
	ldr	r1, .L3188
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3189:
	.align	2, 0
.L3188:
	.word	.L3163
	.align	2, 0
	.align	2, 0
.L3163:
	.word	.L3150
	.word	.L3151
	.word	.L3152
	.word	.L3153
	.word	.L3154
	.word	.L3155
	.word	.L3156
	.word	.L3157
	.word	.L3158
	.word	.L3159
	.word	.L3160
	.word	.L3161
	.word	.L3162
.L3150:
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L3147
.L3151:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L3147
.L3152:
	mov	r0, #0x3
	strb	r0, [r2]
	b	.L3147
.L3153:
	mov	r0, #0x4
	strb	r0, [r2]
	b	.L3147
.L3154:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L3147
.L3155:
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L3147
.L3156:
	mov	r0, #0x7
	strb	r0, [r2]
	b	.L3147
.L3157:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L3147
.L3158:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L3147
.L3159:
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L3147
.L3160:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L3147
.L3161:
	mov	r0, #0xc
	strb	r0, [r2]
	b	.L3147
.L3162:
	mov	r0, #0xd
	strb	r0, [r2]
	b	.L3147
.L3166:
	ldr	r0, .L3190
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r6, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3190+0x4
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L3147
.L3191:
	.align	2, 0
.L3190:
	.word	gStringVar1
	.word	sTVShowState
.L3167:
.L3168:
	ldr	r0, .L3192
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r6, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3192+0x4
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L3147
.L3193:
	.align	2, 0
.L3192:
	.word	gStringVar1
	.word	sTVShowState
.L3176:
.L3177:
	ldr	r0, .L3194
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r6, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3194+0x4
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L3147
.L3195:
	.align	2, 0
.L3194:
	.word	gStringVar1
	.word	sTVShowState
.L3178:
	ldr	r0, .L3196
	ldrh	r1, [r6, #0x4]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L3196+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3196+0x8
	ldrh	r1, [r6, #0x6]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3196+0xc
	ldrh	r1, [r6, #0x8]
	mul	r1, r1, r5
	add	r1, r1, r4
	b	.L3185
.L3197:
	.align	2, 0
.L3196:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar3
.L3179:
	ldr	r0, .L3198
	ldrh	r1, [r6, #0x4]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L3198+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3198+0x8
	ldrh	r1, [r6, #0x6]
	mul	r1, r1, r5
	add	r1, r1, r4
	b	.L3185
.L3199:
	.align	2, 0
.L3198:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L3180:
	ldr	r0, .L3200
	ldrh	r1, [r6, #0x4]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L3200+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3200+0x8
	ldrh	r1, [r6, #0x6]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3200+0xc
	ldrh	r1, [r6, #0x8]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r1, .L3200+0x10
	mov	r0, #0x11
	strb	r0, [r1]
	b	.L3147
.L3201:
	.align	2, 0
.L3200:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L3181:
	ldr	r0, .L3202
	ldrh	r2, [r6, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L3202+0x4
	add	r1, r1, r2
.L3185:
	bl	StringCopy
	ldr	r1, .L3202+0x8
	mov	r0, #0x12
	strb	r0, [r1]
	b	.L3147
.L3203:
	.align	2, 0
.L3202:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	sTVShowState
.L3182:
	ldr	r0, .L3204
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L3147:
	ldr	r0, .L3204+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L3205:
	.align	2, 0
.L3204:
	.word	gStringVar1
	.word	sTVPokemonNewsBattleFrontierTextGroup
.Lfe199:
	.size	 DoTVShowPokemonNewsBattleFrontier,.Lfe199-DoTVShowPokemonNewsBattleFrontier
	.align	2, 0
	.type	 DoTVShowWhatsNo1InHoennToday,function
	.thumb_func
DoTVShowWhatsNo1InHoennToday:
	push	{r4, r5, lr}
	ldr	r2, .L3229
	ldr	r0, .L3229+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3229+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3229+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3229+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x8
	bls	.LCB24190
	b	.L3207	@long jump
.LCB24190:
	lsl	r0, r5, #0x2
	ldr	r1, .L3229+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3230:
	.align	2, 0
.L3229:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3227
	.align	2, 0
	.align	2, 0
.L3227:
	.word	.L3208
	.word	.L3225
	.word	.L3225
	.word	.L3225
	.word	.L3225
	.word	.L3225
	.word	.L3224
	.word	.L3225
	.word	.L3226
.L3208:
	ldr	r0, .L3231
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x5]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x6
	bhi	.L3207	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L3231+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3232:
	.align	2, 0
.L3231:
	.word	gStringVar1
	.word	.L3217
	.align	2, 0
	.align	2, 0
.L3217:
	.word	.L3210
	.word	.L3211
	.word	.L3212
	.word	.L3213
	.word	.L3214
	.word	.L3215
	.word	.L3216
.L3210:
	ldr	r1, .L3233
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L3207
.L3234:
	.align	2, 0
.L3233:
	.word	sTVShowState
.L3211:
	ldr	r1, .L3235
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L3207
.L3236:
	.align	2, 0
.L3235:
	.word	sTVShowState
.L3212:
	ldr	r1, .L3237
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L3207
.L3238:
	.align	2, 0
.L3237:
	.word	sTVShowState
.L3213:
	ldr	r1, .L3239
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3207
.L3240:
	.align	2, 0
.L3239:
	.word	sTVShowState
.L3214:
	ldr	r1, .L3241
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L3207
.L3242:
	.align	2, 0
.L3241:
	.word	sTVShowState
.L3215:
	ldr	r1, .L3243
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L3207
.L3244:
	.align	2, 0
.L3243:
	.word	sTVShowState
.L3216:
	ldr	r1, .L3245
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3207
.L3246:
	.align	2, 0
.L3245:
	.word	sTVShowState
.L3224:
.L3225:
	ldr	r0, .L3247
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x5]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3247+0x4
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3207
.L3248:
	.align	2, 0
.L3247:
	.word	gStringVar1
	.word	sTVShowState
.L3226:
	ldr	r0, .L3249
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x5]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L3207:
	ldr	r0, .L3249+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3250:
	.align	2, 0
.L3249:
	.word	gStringVar1
	.word	sTVWhatsNo1InHoennTodayTextGroup
.Lfe200:
	.size	 DoTVShowWhatsNo1InHoennToday,.Lfe200-DoTVShowWhatsNo1InHoennToday
	.align	2, 0
	.globl	SecretBaseSecrets_GetNumActionsTaken
	.type	 SecretBaseSecrets_GetNumActionsTaken,function
	.thumb_func
SecretBaseSecrets_GetNumActionsTaken:
	push	{r4, lr}
	mov	r1, #0x0
	mov	r2, #0x0
	ldr	r3, [r0, #0xc]
	mov	r4, #0x1
.L3255:
	add	r0, r3, #0
	lsr	r0, r0, r1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L3254	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L3254:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1f
	bls	.L3255	@cond_branch
	add	r0, r2, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe201:
	.size	 SecretBaseSecrets_GetNumActionsTaken,.Lfe201-SecretBaseSecrets_GetNumActionsTaken
	.align	2, 0
	.type	 SecretBaseSecrets_GetStateByFlagNumber,function
	.thumb_func
SecretBaseSecrets_GetStateByFlagNumber:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	mov	r2, #0x0
	mov	r3, #0x0
	ldr	r1, [r0, #0xc]
	mov	r5, #0x1
	ldr	r6, .L3267
.L3262:
	add	r0, r1, #0
	lsr	r0, r0, r2
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L3261	@cond_branch
	cmp	r3, r4
	bne	.L3264	@cond_branch
	add	r0, r2, r6
	ldrb	r0, [r0]
	b	.L3266
.L3268:
	.align	2, 0
.L3267:
	.word	sTVSecretBaseSecretsActions
.L3264:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L3261:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1f
	bls	.L3262	@cond_branch
	mov	r0, #0x0
.L3266:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe202:
	.size	 SecretBaseSecrets_GetStateByFlagNumber,.Lfe202-SecretBaseSecrets_GetStateByFlagNumber
	.align	2, 0
	.type	 DoTVShowSecretBaseSecrets,function
	.thumb_func
DoTVShowSecretBaseSecrets:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r2, .L3318
	ldr	r0, .L3318+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3318+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L3318+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3318+0x10
	ldrb	r2, [r0]
	mov	r9, r2
	add	r2, r0, #0
	mov	r0, r9
	cmp	r0, #0x2b
	bls	.LCB24535
	b	.L3270	@long jump
.LCB24535:
	lsl	r0, r0, #0x2
	ldr	r1, .L3318+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3319:
	.align	2, 0
.L3318:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3312
	.align	2, 0
	.align	2, 0
.L3312:
	.word	.L3271
	.word	.L3274
	.word	.L3288
	.word	.L3297
	.word	.L3302
	.word	.L3302
	.word	.L3302
	.word	.L3303
	.word	.L3304
	.word	.L3305
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3307
	.word	.L3308
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
	.word	.L3311
.L3271:
	ldr	r0, .L3320
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3320+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	SecretBaseSecrets_GetNumActionsTaken
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	bne	.L3272	@cond_branch
	ldr	r1, .L3320+0x8
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3270
.L3321:
	.align	2, 0
.L3320:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3272:
	mov	r0, #0x1
	strb	r0, [r5, #0x12]
	bl	Random
	ldr	r4, .L3322
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	strb	r0, [r4]
	ldrb	r1, [r4]
	b	.L3314
.L3323:
	.align	2, 0
.L3322:
	.word	sTVSecretBaseSecretsRandomValues
.L3274:
	ldr	r0, .L3324
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	SecretBaseSecrets_GetNumActionsTaken
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x1
	beq	.L3315	@cond_branch
	cmp	r6, #0x2
	beq	.L3277	@cond_branch
	mov	r4, #0x0
	b	.L3284
.L3325:
	.align	2, 0
.L3324:
	.word	gStringVar2
.L3277:
	strb	r6, [r5, #0x12]
	ldr	r0, .L3326
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L3278	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	b	.L3316
.L3327:
	.align	2, 0
.L3326:
	.word	sTVSecretBaseSecretsRandomValues
.L3278:
	add	r0, r5, #0
	mov	r1, #0x0
	b	.L3316
.L3284:
	bl	Random
	ldr	r7, .L3328
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	strb	r0, [r7, #0x1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r7]
	cmp	r0, r1
	bne	.L3282	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L3328+0x4
	cmp	r4, r0
	bls	.L3284	@cond_branch
.L3282:
	mov	r0, #0x2
	strb	r0, [r5, #0x12]
	ldrb	r1, [r7, #0x1]
	b	.L3314
.L3329:
	.align	2, 0
.L3328:
	.word	sTVSecretBaseSecretsRandomValues
	.word	0xfffe
.L3288:
	ldr	r0, .L3330
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	SecretBaseSecrets_GetNumActionsTaken
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bne	.L3289	@cond_branch
.L3315:
	ldr	r1, .L3330+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L3270
.L3331:
	.align	2, 0
.L3330:
	.word	gStringVar2
	.word	sTVShowState
.L3289:
	mov	r4, #0x0
	ldr	r7, .L3332
	ldr	r2, .L3332+0x4
	mov	r8, r2
.L3294:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	strb	r0, [r7, #0x2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r7]
	cmp	r0, r1
	beq	.L3293	@cond_branch
	ldrb	r2, [r7, #0x1]
	cmp	r0, r2
	bne	.L3292	@cond_branch
.L3293:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r8
	bls	.L3294	@cond_branch
.L3292:
	mov	r0, #0x3
	strb	r0, [r5, #0x12]
	ldr	r0, .L3332
	ldrb	r1, [r0, #0x2]
.L3314:
	add	r0, r5, #0
.L3316:
	bl	SecretBaseSecrets_GetStateByFlagNumber
	ldr	r1, .L3332+0x8
	strb	r0, [r1]
	b	.L3270
.L3333:
	.align	2, 0
.L3332:
	.word	sTVSecretBaseSecretsRandomValues
	.word	0xfffe
	.word	sTVShowState
.L3297:
	ldr	r0, .L3334
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3334+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r5, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r5, #0x2]
	cmp	r0, #0x1e
	bhi	.L3298	@cond_branch
	ldr	r1, .L3334+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3270
.L3335:
	.align	2, 0
.L3334:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3298:
	cmp	r0, #0x64
	bhi	.L3300	@cond_branch
	ldr	r1, .L3336
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L3270
.L3337:
	.align	2, 0
.L3336:
	.word	sTVShowState
.L3300:
	ldr	r1, .L3338
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L3270
.L3339:
	.align	2, 0
.L3338:
	.word	sTVShowState
.L3302:
	ldr	r0, .L3340
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3340+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	ldr	r1, .L3340+0x8
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3270
.L3341:
	.align	2, 0
.L3340:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3303:
	ldr	r0, .L3342
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3342+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
	b	.L3270
.L3343:
	.align	2, 0
.L3342:
	.word	gStringVar1
	.word	gStringVar2
.L3304:
	mov	r0, #0x3
	b	.L3317
.L3305:
	mov	r0, #0x3
	b	.L3317
.L3307:
	ldr	r4, .L3344
	ldrh	r0, [r5, #0x10]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L3344+0x4
	ldrb	r0, [r5, #0x12]
	strb	r0, [r1]
	b	.L3270
.L3345:
	.align	2, 0
.L3344:
	.word	gStringVar2
	.word	sTVShowState
.L3308:
	add	r0, r5, #0
	add	r0, r0, #0x22
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L3309	@cond_branch
	mov	r0, #0x16
	b	.L3317
.L3309:
	mov	r0, #0x15
	b	.L3317
.L3311:
	ldrb	r0, [r5, #0x12]
.L3317:
	strb	r0, [r2]
.L3270:
	ldr	r0, .L3346
	mov	r2, r9
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L3347:
	.align	2, 0
.L3346:
	.word	sTVSecretBaseSecretsTextGroup
.Lfe203:
	.size	 DoTVShowSecretBaseSecrets,.Lfe203-DoTVShowSecretBaseSecrets
	.align	2, 0
	.type	 DoTVShowSafariFanClub,function
	.thumb_func
DoTVShowSafariFanClub:
	push	{r4, r5, lr}
	ldr	r2, .L3374
	ldr	r0, .L3374+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3374+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3374+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3374+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xa
	bls	.LCB25049
	b	.L3349	@long jump
.LCB25049:
	lsl	r0, r5, #0x2
	ldr	r1, .L3374+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3375:
	.align	2, 0
.L3374:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3371
	.align	2, 0
	.align	2, 0
.L3371:
	.word	.L3350
	.word	.L3355
	.word	.L3358
	.word	.L3359
	.word	.L3369
	.word	.L3361
	.word	.L3364
	.word	.L3367
	.word	.L3368
	.word	.L3369
	.word	.L3370
.L3350:
	ldrb	r1, [r4, #0x2]
	cmp	r1, #0
	bne	.L3351	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L3349
.L3351:
	cmp	r1, #0x3
	bhi	.L3353	@cond_branch
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L3349
.L3353:
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L3349
.L3355:
	ldr	r0, .L3376
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	bne	.L3356	@cond_branch
	ldr	r1, .L3376+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L3349
.L3377:
	.align	2, 0
.L3376:
	.word	gStringVar1
	.word	sTVShowState
.L3356:
	ldr	r1, .L3378
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L3349
.L3379:
	.align	2, 0
.L3378:
	.word	sTVShowState
.L3358:
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3380
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3349
.L3381:
	.align	2, 0
.L3380:
	.word	sTVShowState
.L3359:
	mov	r0, #0x4
	strb	r0, [r2]
	b	.L3349
.L3361:
	ldr	r0, .L3382
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L3373	@cond_branch
	b	.L3365
.L3383:
	.align	2, 0
.L3382:
	.word	gStringVar1
.L3364:
	ldr	r0, .L3384
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	bne	.L3365	@cond_branch
.L3373:
	ldr	r1, .L3384+0x4
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3349
.L3385:
	.align	2, 0
.L3384:
	.word	gStringVar1
	.word	sTVShowState
.L3365:
	ldr	r1, .L3386
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3349
.L3387:
	.align	2, 0
.L3386:
	.word	sTVShowState
.L3367:
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3388
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L3349
.L3389:
	.align	2, 0
.L3388:
	.word	sTVShowState
.L3368:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L3349
.L3369:
	ldr	r0, .L3390
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldr	r1, .L3390+0x4
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L3349
.L3391:
	.align	2, 0
.L3390:
	.word	gStringVar1
	.word	sTVShowState
.L3370:
	bl	TVShowDone
.L3349:
	ldr	r0, .L3392
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3393:
	.align	2, 0
.L3392:
	.word	sTVSafariFanClubTextGroup
.Lfe204:
	.size	 DoTVShowSafariFanClub,.Lfe204-DoTVShowSafariFanClub
	.align	2, 0
	.type	 DoTVShowPokemonContestLiveUpdates2,function
	.thumb_func
DoTVShowPokemonContestLiveUpdates2:
	push	{r4, r5, r6, lr}
	ldr	r2, .L3407
	ldr	r0, .L3407+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3407+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3407+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L3407+0x10
	ldrb	r5, [r6]
	cmp	r5, #0x2
	bgt	.L3406	@cond_branch
	cmp	r5, #0x1
	bge	.L3402	@cond_branch
	cmp	r5, #0
	beq	.L3396	@cond_branch
	b	.L3395
.L3408:
	.align	2, 0
.L3407:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244c
	.word	gSpecialVar_Result
	.word	sTVShowState
.L3406:
	cmp	r5, #0x3
	beq	.L3403	@cond_branch
	b	.L3395
.L3396:
	ldr	r0, .L3409
	ldrb	r1, [r4, #0xa]
	bl	BufferContestName
	ldrb	r1, [r4, #0x16]
	cmp	r1, #0x1
	bne	.L3397	@cond_branch
	strb	r1, [r6]
	b	.L3395
.L3410:
	.align	2, 0
.L3409:
	.word	gStringVar1
.L3397:
	cmp	r1, #0
	bne	.L3399	@cond_branch
	mov	r0, #0x2
	strb	r0, [r6]
	b	.L3395
.L3399:
	mov	r0, #0x3
	strb	r0, [r6]
	b	.L3395
.L3402:
	ldr	r0, .L3411
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
.L3403:
	ldr	r0, .L3411+0x4
	add	r1, r4, #0
	add	r1, r1, #0xb
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L3395:
	ldr	r0, .L3411+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L3412:
	.align	2, 0
.L3411:
	.word	gStringVar3
	.word	gStringVar2
	.word	sTVPokemonContestLiveUpdates2TextGroup
.Lfe205:
	.size	 DoTVShowPokemonContestLiveUpdates2,.Lfe205-DoTVShowPokemonContestLiveUpdates2
	.align	2, 0
	.globl	TVShowDone
	.type	 TVShowDone,function
	.thumb_func
TVShowDone:
	ldr	r1, .L3414
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L3414+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L3414+0x8
	ldr	r2, [r0]
	ldr	r0, .L3414+0xc
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L3414+0x10
	add	r2, r2, r0
	mov	r0, #0x0
	strb	r0, [r2]
	bx	lr
.L3415:
	.align	2, 0
.L3414:
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x244d
.Lfe206:
	.size	 TVShowDone,.Lfe206-TVShowDone
	.align	2, 0
	.globl	ResetTVShowState
	.type	 ResetTVShowState,function
	.thumb_func
ResetTVShowState:
	ldr	r1, .L3417
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L3418:
	.align	2, 0
.L3417:
	.word	sTVShowState
.Lfe207:
	.size	 ResetTVShowState,.Lfe207-ResetTVShowState
	.comm	sCurTVShowSlot, 4	@ 1
	.comm	sTV_SecretBaseVisitMovesTemp, 16	@ 16
	.comm	sTV_DecorationsBuffer, 16	@ 16
	.comm	sTV_SecretBaseVisitMonsTemp, 80	@ 80

	.lcomm	sTVShowMixingNumPlayers,1

	.lcomm	sTVShowNewsMixingNumPlayers,1

	.lcomm	sTVShowMixingCurSlot,1
.text
	.align	2, 0

