@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gDecorationInventories
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gDecorationInventories,object
	.size	 gDecorationInventories,64
gDecorationInventories:
	.space	64
.text
	.align	2, 0
	.globl	SetDecorationInventoriesPointers
	.type	 SetDecorationInventoriesPointers,function
	.thumb_func
SetDecorationInventoriesPointers:
	push	{r4, lr}
	ldr	r0, .L3
	mov	ip, r0
	ldr	r0, .L3+0x4
	ldr	r1, [r0]
	ldr	r2, .L3+0x8
	add	r0, r1, r2
	mov	r4, ip
	str	r0, [r4]
	mov	r3, #0xa
	strb	r3, [r4, #0x4]
	add	r2, r2, #0xa
	add	r0, r1, r2
	str	r0, [r4, #0x8]
	strb	r3, [r4, #0xc]
	ldr	r4, .L3+0xc
	add	r0, r1, r4
	mov	r2, ip
	str	r0, [r2, #0x10]
	strb	r3, [r2, #0x14]
	add	r4, r4, #0xa
	add	r0, r1, r4
	str	r0, [r2, #0x18]
	mov	r2, #0x1e
	mov	r0, ip
	strb	r2, [r0, #0x1c]
	add	r4, r4, #0x1e
	add	r0, r1, r4
	mov	r4, ip
	str	r0, [r4, #0x20]
	mov	r0, ip
	add	r0, r0, #0x24
	strb	r2, [r0]
	ldr	r2, .L3+0x10
	add	r0, r1, r2
	str	r0, [r4, #0x28]
	mov	r0, ip
	add	r0, r0, #0x2c
	strb	r3, [r0]
	ldr	r4, .L3+0x14
	add	r0, r1, r4
	mov	r2, ip
	str	r0, [r2, #0x30]
	add	r2, r2, #0x34
	mov	r0, #0x28
	strb	r0, [r2]
	add	r4, r4, #0x28
	add	r1, r1, r4
	mov	r0, ip
	str	r1, [r0, #0x38]
	add	r0, r0, #0x3c
	strb	r3, [r0]
	bl	InitDecorationContextItems
	pop	{r4}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gDecorationInventories
	.word	gSaveBlock1Ptr
	.word	0x23b4
	.word	0x23c8
	.word	0x240e
	.word	0x2418
.Lfe1:
	.size	 SetDecorationInventoriesPointers,.Lfe1-SetDecorationInventoriesPointers
	.align	2, 0
	.type	 ClearDecorationInventory,function
	.thumb_func
ClearDecorationInventory:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	mov	r3, #0x0
	ldr	r1, .L11
	lsr	r2, r0, #0x15
	add	r0, r2, r1
	ldrb	r0, [r0, #0x4]
	cmp	r3, r0
	bcs	.L7	@cond_branch
	add	r5, r1, #0
	mov	r4, #0x0
.L9:
	add	r0, r2, r5
	ldr	r1, [r0]
	add	r1, r1, r3
	strb	r4, [r1]
	add	r1, r3, #0x1
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	ldrb	r0, [r0, #0x4]
	cmp	r3, r0
	bcc	.L9	@cond_branch
.L7:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	gDecorationInventories
.Lfe2:
	.size	 ClearDecorationInventory,.Lfe2-ClearDecorationInventory
	.align	2, 0
	.globl	ClearDecorationInventories
	.type	 ClearDecorationInventories,function
	.thumb_func
ClearDecorationInventories:
	push	{r4, lr}
	mov	r4, #0x0
.L17:
	add	r0, r4, #0
	bl	ClearDecorationInventory
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L17	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 ClearDecorationInventories,.Lfe3-ClearDecorationInventories
	.align	2, 0
	.globl	GetFirstEmptyDecorSlot
	.type	 GetFirstEmptyDecorSlot,function
	.thumb_func
GetFirstEmptyDecorSlot:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	mov	r2, #0x0
	ldr	r1, .L27
	lsr	r0, r0, #0x15
	add	r0, r0, r1
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	cmp	r2, r1
	bge	.L21	@cond_branch
	add	r4, r0, #0
	add	r3, r1, #0
.L23:
	lsl	r0, r2, #0x18
	asr	r1, r0, #0x18
	ldr	r0, [r4]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L22	@cond_branch
	add	r0, r1, #0
	b	.L26
.L28:
	.align	2, 0
.L27:
	.word	gDecorationInventories
.L22:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, r3
	blt	.L23	@cond_branch
.L21:
	mov	r0, #0x1
	neg	r0, r0
.L26:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 GetFirstEmptyDecorSlot,.Lfe4-GetFirstEmptyDecorSlot
	.align	2, 0
	.globl	CheckHasDecoration
	.type	 CheckHasDecoration,function
	.thumb_func
CheckHasDecoration:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L37
	lsl	r0, r3, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0x13]
	mov	r2, #0x0
	ldr	r1, .L37+0x4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r1, [r0, #0x4]
	cmp	r2, r1
	bcs	.L31	@cond_branch
	ldr	r4, [r0]
.L33:
	add	r0, r4, r2
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L32	@cond_branch
	mov	r0, #0x1
	b	.L36
.L38:
	.align	2, 0
.L37:
	.word	gDecorations
	.word	gDecorationInventories
.L32:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r1
	bcc	.L33	@cond_branch
.L31:
	mov	r0, #0x0
.L36:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 CheckHasDecoration,.Lfe5-CheckHasDecoration
	.align	2, 0
	.globl	DecorationAdd
	.type	 DecorationAdd,function
	.thumb_func
DecorationAdd:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L41	@cond_branch
	ldr	r1, .L43
	lsl	r0, r4, #0x5
	add	r0, r0, r1
	ldrb	r5, [r0, #0x13]
	add	r0, r5, #0
	bl	GetFirstEmptyDecorSlot
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	beq	.L41	@cond_branch
	ldr	r0, .L43+0x4
	lsl	r1, r5, #0x3
	add	r1, r1, r0
	ldr	r0, [r1]
	add	r0, r0, r2
	strb	r4, [r0]
	mov	r0, #0x1
	b	.L42
.L44:
	.align	2, 0
.L43:
	.word	gDecorations
	.word	gDecorationInventories
.L41:
	mov	r0, #0x0
.L42:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 DecorationAdd,.Lfe6-DecorationAdd
	.align	2, 0
	.globl	DecorationCheckSpace
	.type	 DecorationCheckSpace,function
	.thumb_func
DecorationCheckSpace:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L47	@cond_branch
	ldr	r1, .L49
	lsl	r0, r0, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0x13]
	bl	GetFirstEmptyDecorSlot
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L47	@cond_branch
	mov	r0, #0x1
	b	.L48
.L50:
	.align	2, 0
.L49:
	.word	gDecorations
.L47:
	mov	r0, #0x0
.L48:
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 DecorationCheckSpace,.Lfe7-DecorationCheckSpace
	.align	2, 0
	.globl	DecorationRemove
	.type	 DecorationRemove,function
	.thumb_func
DecorationRemove:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r3, #0x0
	cmp	r5, #0
	bne	.L52	@cond_branch
	b	.L54
.L60:
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r6, #0
	bl	CondenseDecorationsInCategory
	mov	r0, #0x1
	b	.L59
.L52:
	ldr	r2, .L61
	ldr	r1, .L61+0x4
	lsl	r0, r5, #0x5
	add	r0, r0, r1
	ldrb	r4, [r0, #0x13]
	lsl	r0, r4, #0x3
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	cmp	r3, r1
	bcs	.L54	@cond_branch
	add	r6, r4, #0
	add	r4, r0, #0
	add	r2, r1, #0
.L56:
	ldr	r0, [r4]
	add	r1, r0, r3
	ldrb	r0, [r1]
	cmp	r0, r5
	beq	.L60	@cond_branch
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, r2
	bcc	.L56	@cond_branch
.L54:
	mov	r0, #0x0
.L59:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L62:
	.align	2, 0
.L61:
	.word	gDecorationInventories
	.word	gDecorations
.Lfe8:
	.size	 DecorationRemove,.Lfe8-DecorationRemove
	.align	2, 0
	.globl	CondenseDecorationsInCategory
	.type	 CondenseDecorationsInCategory,function
	.thumb_func
CondenseDecorationsInCategory:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	mov	r6, #0x0
	ldr	r2, .L76
	lsr	r0, r0, #0x15
	add	r1, r0, r2
	ldrb	r3, [r1, #0x4]
	cmp	r6, r3
	bcs	.L65	@cond_branch
	add	r7, r0, #0
	mov	sl, r1
	mov	r0, sl
	str	r0, [sp]
.L67:
	add	r1, r6, #0x1
	lsl	r0, r1, #0x18
	lsr	r3, r0, #0x18
	add	r2, r7, #0
	mov	ip, r1
	mov	r1, sl
	ldrb	r1, [r1, #0x4]
	cmp	r3, r1
	bcs	.L66	@cond_branch
	ldr	r0, .L76
	mov	r9, r0
	add	r1, r0, #0
	mov	r8, r1
.L71:
	mov	r0, r9
	add	r5, r2, r0
	ldr	r1, [r5]
	add	r0, r1, r3
	ldrb	r4, [r0]
	add	r2, r4, #0
	cmp	r2, #0
	beq	.L70	@cond_branch
	add	r0, r1, r6
	ldrb	r1, [r0]
	cmp	r1, #0
	beq	.L73	@cond_branch
	cmp	r1, r2
	bls	.L70	@cond_branch
.L73:
	ldrb	r1, [r0]
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, r3
	strb	r1, [r0]
.L70:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r2, r7, #0
	mov	r1, r8
	add	r0, r2, r1
	ldrb	r0, [r0, #0x4]
	cmp	r3, r0
	bcc	.L71	@cond_branch
.L66:
	mov	r3, ip
	lsl	r0, r3, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, [sp]
	ldrb	r0, [r0, #0x4]
	cmp	r6, r0
	bcc	.L67	@cond_branch
.L65:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	gDecorationInventories
.Lfe9:
	.size	 CondenseDecorationsInCategory,.Lfe9-CondenseDecorationsInCategory
	.align	2, 0
	.globl	GetNumOwnedDecorationsInCategory
	.type	 GetNumOwnedDecorationsInCategory,function
	.thumb_func
GetNumOwnedDecorationsInCategory:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r2, .L85
	lsr	r1, r0, #0x15
	add	r0, r1, r2
	ldrb	r0, [r0, #0x4]
	cmp	r4, r0
	bcs	.L80	@cond_branch
	add	r5, r2, #0
.L82:
	add	r2, r1, r5
	ldr	r0, [r2]
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L81	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L81:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldrb	r2, [r2, #0x4]
	cmp	r3, r2
	bcc	.L82	@cond_branch
.L80:
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L86:
	.align	2, 0
.L85:
	.word	gDecorationInventories
.Lfe10:
	.size	 GetNumOwnedDecorationsInCategory,.Lfe10-GetNumOwnedDecorationsInCategory
	.align	2, 0
	.globl	GetNumOwnedDecorations
	.type	 GetNumOwnedDecorations,function
	.thumb_func
GetNumOwnedDecorations:
	push	{r4, r5, lr}
	mov	r5, #0x0
	mov	r4, #0x0
.L91:
	add	r0, r4, #0
	bl	GetNumOwnedDecorationsInCategory
	add	r0, r5, r0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L91	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 GetNumOwnedDecorations,.Lfe11-GetNumOwnedDecorations
.text
	.align	2, 0

