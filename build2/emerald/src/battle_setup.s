@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sTrainerBattleMode,object
	.size	 sTrainerBattleMode,2
sTrainerBattleMode:
	.short	0x0
	.globl	gTrainerBattleOpponent_A
	.align	1, 0
	.type	 gTrainerBattleOpponent_A,object
	.size	 gTrainerBattleOpponent_A,2
gTrainerBattleOpponent_A:
	.short	0x0
	.globl	gTrainerBattleOpponent_B
	.align	1, 0
	.type	 gTrainerBattleOpponent_B,object
	.size	 gTrainerBattleOpponent_B,2
gTrainerBattleOpponent_B:
	.short	0x0
	.globl	gPartnerTrainerId
	.align	1, 0
	.type	 gPartnerTrainerId,object
	.size	 gPartnerTrainerId,2
gPartnerTrainerId:
	.short	0x0
	.align	1, 0
	.type	 sTrainerObjectEventLocalId,object
	.size	 sTrainerObjectEventLocalId,2
sTrainerObjectEventLocalId:
	.short	0x0
	.align	2, 0
	.type	 sTrainerAIntroSpeech,object
	.size	 sTrainerAIntroSpeech,4
sTrainerAIntroSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerBIntroSpeech,object
	.size	 sTrainerBIntroSpeech,4
sTrainerBIntroSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerADefeatSpeech,object
	.size	 sTrainerADefeatSpeech,4
sTrainerADefeatSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerBDefeatSpeech,object
	.size	 sTrainerBDefeatSpeech,4
sTrainerBDefeatSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerVictorySpeech,object
	.size	 sTrainerVictorySpeech,4
sTrainerVictorySpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerCannotBattleSpeech,object
	.size	 sTrainerCannotBattleSpeech,4
sTrainerCannotBattleSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerBattleEndScript,object
	.size	 sTrainerBattleEndScript,4
sTrainerBattleEndScript:
	.word	0x0
	.align	2, 0
	.type	 sTrainerABattleScriptRetAddr,object
	.size	 sTrainerABattleScriptRetAddr,4
sTrainerABattleScriptRetAddr:
	.word	0x0
	.align	2, 0
	.type	 sTrainerBBattleScriptRetAddr,object
	.size	 sTrainerBBattleScriptRetAddr,4
sTrainerBBattleScriptRetAddr:
	.word	0x0
	.type	 sShouldCheckTrainerBScript,object
	.size	 sShouldCheckTrainerBScript,1
sShouldCheckTrainerBScript:
	.byte	0x0
	.type	 sNoOfPossibleTrainerRetScripts,object
	.size	 sNoOfPossibleTrainerRetScripts,1
sNoOfPossibleTrainerRetScripts:
	.byte	0x0
	.section .rodata
	.type	 sBattleTransitionTable_Wild,object
sBattleTransitionTable_Wild:
	.byte	0x8
	.byte	0x9
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.byte	0xa
	.byte	0x7
	.byte	0x6
	.size	 sBattleTransitionTable_Wild,8
	.type	 sBattleTransitionTable_Trainer,object
sBattleTransitionTable_Trainer:
	.byte	0x4
	.byte	0xb
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0xa
	.byte	0x1
	.byte	0x6
	.size	 sBattleTransitionTable_Trainer,8
	.type	 sBattleTransitionTable_BattleFrontier,object
sBattleTransitionTable_BattleFrontier:
	.byte	0x1d
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x22
	.byte	0x23
	.byte	0x24
	.byte	0x25
	.byte	0x26
	.byte	0x27
	.byte	0x28
	.byte	0x29
	.size	 sBattleTransitionTable_BattleFrontier,12
	.type	 sBattleTransitionTable_BattlePyramid,object
sBattleTransitionTable_BattlePyramid:
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.size	 sBattleTransitionTable_BattlePyramid,3
	.type	 sBattleTransitionTable_BattleDome,object
sBattleTransitionTable_BattleDome:
	.byte	0x1d
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.size	 sBattleTransitionTable_BattleDome,4
	.align	2, 0
	.type	 sOrdinaryBattleParams,object
sOrdinaryBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sOrdinaryBattleParams,72
	.align	2, 0
	.type	 sContinueScriptBattleParams,object
sContinueScriptBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x2
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sContinueScriptBattleParams,72
	.align	2, 0
	.type	 sDoubleBattleParams,object
sDoubleBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x2
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sDoubleBattleParams,72
	.align	2, 0
	.type	 sOrdinaryNoIntroBattleParams,object
sOrdinaryNoIntroBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x5
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sOrdinaryNoIntroBattleParams,72
	.align	2, 0
	.type	 sContinueScriptDoubleBattleParams,object
sContinueScriptDoubleBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x2
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x2
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sContinueScriptDoubleBattleParams,72
	.align	2, 0
	.type	 sTrainerBOrdinaryBattleParams,object
sTrainerBOrdinaryBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_B
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerBIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerBDefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerBBattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sTrainerBOrdinaryBattleParams,72
	.align	2, 0
	.type	 sTrainerBContinueScriptBattleParams,object
sTrainerBContinueScriptBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_B
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerBIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerBDefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerBBattleScriptRetAddr
	.byte	0x2
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sTrainerBContinueScriptBattleParams,72
	.globl	gRematchTable
	.align	2, 0
	.type	 gRematchTable,object
	.size	 gRematchTable,1248
gRematchTable:
	.short	0x25
	.short	0x28
	.short	0x29
	.short	0x2a
	.short	0x2b
	.short	0x0
	.short	0x21
	.space	2
	.short	0x2e1
	.short	0x32c
	.short	0x32d
	.short	0x32e
	.short	0x32f
	.short	0x0
	.short	0x14
	.space	2
	.short	0x2c
	.short	0x2f
	.short	0x30
	.short	0x31
	.short	0x32
	.short	0x0
	.short	0x1a
	.space	2
	.short	0x39
	.short	0x3c
	.short	0x3d
	.short	0x3e
	.short	0x3f
	.short	0x0
	.short	0x18
	.space	2
	.short	0x40
	.short	0x43
	.short	0x44
	.short	0x45
	.short	0x46
	.short	0x0
	.short	0x18
	.space	2
	.short	0x2af
	.short	0x2b0
	.short	0x2b1
	.short	0x2b2
	.short	0x2b3
	.short	0x0
	.short	0x27
	.space	2
	.short	0x2ff
	.short	0x33c
	.short	0x33d
	.short	0x33e
	.short	0x33f
	.short	0x0
	.short	0x24
	.space	2
	.short	0x5e
	.short	0x65
	.short	0x66
	.short	0x67
	.short	0x68
	.short	0x0
	.short	0x1a
	.space	2
	.short	0x4e
	.short	0x54
	.short	0x55
	.short	0x56
	.short	0x57
	.short	0x0
	.short	0x1a
	.space	2
	.short	0x6c
	.short	0x6e
	.short	0x6f
	.short	0x70
	.short	0x71
	.short	0x18
	.short	0x14
	.space	2
	.short	0x72
	.short	0x78
	.short	0x79
	.short	0x7a
	.short	0x7b
	.short	0x0
	.short	0x13
	.space	2
	.short	0x90
	.short	0x34c
	.short	0x34d
	.short	0x34e
	.short	0x34f
	.short	0x18
	.short	0x38
	.space	2
	.short	0x7f
	.short	0x84
	.short	0x85
	.short	0x86
	.short	0x87
	.short	0x0
	.short	0x24
	.space	2
	.short	0x88
	.short	0x8b
	.short	0x8c
	.short	0x8d
	.short	0x8e
	.short	0x0
	.short	0x13
	.space	2
	.short	0x8f
	.short	0x93
	.short	0x94
	.short	0x95
	.short	0x96
	.short	0x0
	.short	0x1d
	.space	2
	.short	0x9b
	.short	0xaf
	.short	0xb0
	.short	0xb1
	.short	0xb2
	.short	0x0
	.short	0x16
	.space	2
	.short	0xb7
	.short	0xb8
	.short	0xb9
	.short	0xba
	.short	0xbb
	.short	0x0
	.short	0x1e
	.space	2
	.short	0x2a0
	.short	0x338
	.short	0x339
	.short	0x33a
	.short	0x33b
	.short	0x0
	.short	0x2a
	.space	2
	.short	0xc3
	.short	0x340
	.short	0x341
	.short	0x342
	.short	0x343
	.short	0x0
	.short	0x26
	.space	2
	.short	0xc4
	.short	0xc5
	.short	0xc6
	.short	0xc7
	.short	0xc8
	.short	0x0
	.short	0x21
	.space	2
	.short	0xce
	.short	0xcf
	.short	0xd0
	.short	0xd1
	.short	0xd2
	.short	0x0
	.short	0x1d
	.space	2
	.short	0xd8
	.short	0xdb
	.short	0xdc
	.short	0xdd
	.short	0xde
	.short	0x18
	.short	0xd
	.space	2
	.short	0x2a9
	.short	0x2aa
	.short	0x2ab
	.short	0x2ac
	.short	0x2ad
	.short	0x18
	.short	0x1
	.space	2
	.short	0xe2
	.short	0xe4
	.short	0xe5
	.short	0xe6
	.short	0xe7
	.short	0x0
	.short	0x23
	.space	2
	.short	0xee
	.short	0xef
	.short	0xf0
	.short	0xf1
	.short	0xf2
	.short	0x0
	.short	0x26
	.space	2
	.short	0xf9
	.short	0xfa
	.short	0xfb
	.short	0xfc
	.short	0xfd
	.short	0x0
	.short	0x26
	.space	2
	.short	0xfe
	.short	0x101
	.short	0x102
	.short	0x103
	.short	0x104
	.short	0x0
	.short	0x24
	.space	2
	.short	0x118
	.short	0x11a
	.short	0x11b
	.short	0x11c
	.short	0x11d
	.short	0x0
	.short	0x1f
	.space	2
	.short	0x111
	.short	0x114
	.short	0x115
	.short	0x116
	.short	0x117
	.short	0x0
	.short	0x1f
	.space	2
	.short	0x11f
	.short	0x120
	.short	0x121
	.short	0x122
	.short	0x123
	.short	0x0
	.short	0x20
	.space	2
	.short	0x12e
	.short	0x12f
	.short	0x130
	.short	0x131
	.short	0x132
	.short	0x0
	.short	0x19
	.space	2
	.short	0x125
	.short	0x127
	.short	0x128
	.short	0x129
	.short	0x12a
	.short	0x0
	.short	0x12
	.space	2
	.short	0x133
	.short	0x134
	.short	0x135
	.short	0x136
	.short	0x137
	.short	0x0
	.short	0x1e
	.space	2
	.short	0x139
	.short	0x13a
	.short	0x13b
	.short	0x13c
	.short	0x13d
	.short	0x18
	.short	0xc
	.space	2
	.short	0x13e
	.short	0x148
	.short	0x149
	.short	0x14a
	.short	0x14b
	.short	0x0
	.short	0x11
	.space	2
	.short	0x153
	.short	0x15a
	.short	0x15b
	.short	0x15c
	.short	0x15d
	.short	0x0
	.short	0x15
	.space	2
	.short	0x178
	.short	0x17b
	.short	0x17c
	.short	0x17d
	.short	0x17e
	.short	0x0
	.short	0x2b
	.space	2
	.short	0x171
	.short	0x172
	.short	0x173
	.short	0x174
	.short	0x175
	.short	0x0
	.short	0x20
	.space	2
	.short	0x166
	.short	0x168
	.short	0x169
	.short	0x16a
	.short	0x16b
	.short	0x0
	.short	0x19
	.space	2
	.short	0x16c
	.short	0x16d
	.short	0x16e
	.short	0x16f
	.short	0x170
	.short	0x0
	.short	0x20
	.space	2
	.short	0x182
	.short	0x184
	.short	0x185
	.short	0x186
	.short	0x187
	.short	0x0
	.short	0x2b
	.space	2
	.short	0x161
	.short	0x162
	.short	0x163
	.short	0x164
	.short	0x165
	.short	0x0
	.short	0x19
	.space	2
	.short	0x179
	.short	0x334
	.short	0x335
	.short	0x336
	.short	0x337
	.short	0x0
	.short	0x29
	.space	2
	.short	0x188
	.short	0x189
	.short	0x18a
	.short	0x18b
	.short	0x18c
	.short	0x18
	.short	0x1
	.space	2
	.short	0x196
	.short	0x199
	.short	0x19a
	.short	0x19b
	.short	0x19c
	.short	0x0
	.short	0x23
	.space	2
	.short	0x1a3
	.short	0x1a5
	.short	0x1a6
	.short	0x1a7
	.short	0x1a8
	.short	0x0
	.short	0x1c
	.space	2
	.short	0x1ab
	.short	0x1ae
	.short	0x1af
	.short	0x1b0
	.short	0x1b1
	.short	0x0
	.short	0x1e
	.space	2
	.short	0x1b2
	.short	0x1b5
	.short	0x1b6
	.short	0x1b7
	.short	0x1b8
	.short	0x0
	.short	0x1c
	.space	2
	.short	0x1c1
	.short	0x1d1
	.short	0x1d2
	.short	0x1d3
	.short	0x1d4
	.short	0x0
	.short	0x27
	.space	2
	.short	0x1da
	.short	0x1dd
	.short	0x1de
	.short	0x1df
	.short	0x1e0
	.short	0x18
	.short	0xd
	.space	2
	.short	0x1e1
	.short	0x1e2
	.short	0x1e7
	.short	0x1e8
	.short	0x1e9
	.short	0x0
	.short	0x12
	.space	2
	.short	0x1ec
	.short	0x1f1
	.short	0x1f2
	.short	0x1f3
	.short	0x1f4
	.short	0x0
	.short	0x28
	.space	2
	.short	0x2e4
	.short	0x330
	.short	0x331
	.short	0x332
	.short	0x333
	.short	0x0
	.short	0x17
	.space	2
	.short	0x200
	.short	0x203
	.short	0x204
	.short	0x205
	.short	0x206
	.short	0x0
	.short	0x19
	.space	2
	.short	0x221
	.short	0x224
	.short	0x225
	.short	0x226
	.short	0x227
	.short	0x0
	.short	0x20
	.space	2
	.short	0x21a
	.short	0x21d
	.short	0x21e
	.short	0x21f
	.short	0x220
	.short	0x0
	.short	0x20
	.space	2
	.short	0x9
	.short	0x348
	.short	0x349
	.short	0x34a
	.short	0x34b
	.short	0x18
	.short	0x11
	.space	2
	.short	0x22f
	.short	0x232
	.short	0x233
	.short	0x234
	.short	0x235
	.short	0x0
	.short	0x22
	.space	2
	.short	0x228
	.short	0x22b
	.short	0x22c
	.short	0x22d
	.short	0x22e
	.short	0x0
	.short	0x22
	.space	2
	.short	0x25c
	.short	0x25f
	.short	0x260
	.short	0x261
	.short	0x262
	.short	0x0
	.short	0x13
	.space	2
	.short	0x26d
	.short	0x26e
	.short	0x26f
	.short	0x270
	.short	0x271
	.short	0x18
	.short	0xb
	.space	2
	.short	0x273
	.short	0x27c
	.short	0x27d
	.short	0x27e
	.short	0x27f
	.short	0x0
	.short	0x1b
	.space	2
	.short	0x1
	.short	0x344
	.short	0x345
	.short	0x346
	.short	0x347
	.short	0x18
	.short	0xc
	.space	2
	.short	0x282
	.short	0x283
	.short	0x284
	.short	0x285
	.short	0x286
	.short	0x18
	.short	0x3e
	.space	2
	.short	0x291
	.short	0x292
	.short	0x293
	.short	0x294
	.short	0x294
	.short	0x18
	.short	0x2b
	.space	2
	.short	0x109
	.short	0x302
	.short	0x303
	.short	0x304
	.short	0x305
	.short	0x0
	.short	0x3
	.space	2
	.short	0x10a
	.short	0x306
	.short	0x307
	.short	0x308
	.short	0x309
	.short	0x0
	.short	0xb
	.space	2
	.short	0x10b
	.short	0x30a
	.short	0x30b
	.short	0x30c
	.short	0x30d
	.short	0x0
	.short	0x2
	.space	2
	.short	0x10c
	.short	0x30e
	.short	0x30f
	.short	0x310
	.short	0x311
	.short	0x0
	.short	0xc
	.space	2
	.short	0x10d
	.short	0x312
	.short	0x313
	.short	0x314
	.short	0x315
	.short	0x0
	.short	0x0
	.space	2
	.short	0x10e
	.short	0x316
	.short	0x317
	.short	0x318
	.short	0x319
	.short	0x0
	.short	0x4
	.space	2
	.short	0x10f
	.short	0x31a
	.short	0x31b
	.short	0x31c
	.short	0x31d
	.short	0x0
	.short	0x6
	.space	2
	.short	0x110
	.short	0x31e
	.short	0x31f
	.short	0x320
	.short	0x321
	.short	0x0
	.short	0x7
	.space	2
	.short	0x105
	.short	0x105
	.short	0x105
	.short	0x105
	.short	0x105
	.short	0x0
	.short	0x8
	.space	2
	.short	0x106
	.short	0x106
	.short	0x106
	.short	0x106
	.short	0x106
	.short	0x0
	.short	0x8
	.space	2
	.short	0x107
	.short	0x107
	.short	0x107
	.short	0x107
	.short	0x107
	.short	0x0
	.short	0x8
	.space	2
	.short	0x108
	.short	0x108
	.short	0x108
	.short	0x108
	.short	0x108
	.short	0x0
	.short	0x8
	.space	2
	.short	0x14f
	.short	0x14f
	.short	0x14f
	.short	0x14f
	.short	0x14f
	.short	0x0
	.short	0x8
	.space	2
	.align	1, 0
	.type	 sBadgeFlags,object
	.size	 sBadgeFlags,16
sBadgeFlags:
	.short	0x867
	.short	0x868
	.short	0x869
	.short	0x86a
	.short	0x86b
	.short	0x86c
	.short	0x86d
	.short	0x86e
.text
	.align	2, 0
	.type	 Task_BattleStart,function
	.thumb_func
Task_BattleStart:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L10
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L4	@cond_branch
	cmp	r0, #0x1
	beq	.L6	@cond_branch
	b	.L3
.L11:
	.align	2, 0
.L10:
	.word	gTasks+0x8
.L4:
	bl	FldEffPoison_IsActive
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldrb	r0, [r4, #0x2]
	bl	BattleTransition_StartOnField
	bl	ClearMirageTowerPulseBlendEffect
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L3
.L6:
	bl	IsBattleTransitionDone
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L3	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L12
	bl	SetMainCallback2
	bl	RestartWildEncounterImmunitySteps
	bl	ClearPoisonStepCounter
	add	r0, r5, #0
	bl	DestroyTask
.L3:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	CB2_InitBattle
.Lfe1:
	.size	 Task_BattleStart,.Lfe1-Task_BattleStart
	.align	2, 0
	.type	 CreateBattleStartTask,function
	.thumb_func
CreateBattleStartTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L15
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L15+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	add	r0, r5, #0
	bl	PlayMapChosenOrBattleBGM
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	Task_BattleStart
	.word	gTasks
.Lfe2:
	.size	 CreateBattleStartTask,.Lfe2-CreateBattleStartTask
	.align	2, 0
	.globl	BattleSetup_StartWildBattle
	.type	 BattleSetup_StartWildBattle,function
	.thumb_func
BattleSetup_StartWildBattle:
	push	{lr}
	bl	GetSafariZoneFlag
	cmp	r0, #0
	beq	.L18	@cond_branch
	bl	DoSafariBattle
	b	.L19
.L18:
	mov	r0, #0x0
	bl	DoStandardWildBattle
.L19:
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 BattleSetup_StartWildBattle,.Lfe3-BattleSetup_StartWildBattle
	.align	2, 0
	.globl	BattleSetup_StartDoubleWildBattle
	.type	 BattleSetup_StartDoubleWildBattle,function
	.thumb_func
BattleSetup_StartDoubleWildBattle:
	push	{lr}
	mov	r0, #0x1
	bl	DoStandardWildBattle
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 BattleSetup_StartDoubleWildBattle,.Lfe4-BattleSetup_StartDoubleWildBattle
	.align	2, 0
	.globl	BattleSetup_StartBattlePikeWildBattle
	.type	 BattleSetup_StartBattlePikeWildBattle,function
	.thumb_func
BattleSetup_StartBattlePikeWildBattle:
	push	{lr}
	bl	DoBattlePikeWildBattle
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 BattleSetup_StartBattlePikeWildBattle,.Lfe5-BattleSetup_StartBattlePikeWildBattle
	.align	2, 0
	.type	 DoStandardWildBattle,function
	.thumb_func
DoStandardWildBattle:
	push	{r4, r5, lr}
	add	r4, r0, #0
	bl	ScriptContext2_Enable
	bl	FreezeObjectEvents
	bl	sub_808BCF4
	ldr	r1, .L25
	ldr	r0, .L25+0x4
	str	r0, [r1, #0x8]
	ldr	r5, .L25+0x8
	mov	r0, #0x0
	str	r0, [r5]
	cmp	r4, #0
	beq	.L23	@cond_branch
	mov	r0, #0x1
	str	r0, [r5]
.L23:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L24	@cond_branch
	ldr	r0, .L25+0xc
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, [r5]
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	orr	r0, r0, r1
	str	r0, [r5]
.L24:
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
	.word	0x400e
.Lfe6:
	.size	 DoStandardWildBattle,.Lfe6-DoStandardWildBattle
	.align	2, 0
	.globl	BattleSetup_StartRoamerBattle
	.type	 BattleSetup_StartRoamerBattle,function
	.thumb_func
BattleSetup_StartRoamerBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FreezeObjectEvents
	bl	sub_808BCF4
	ldr	r1, .L28
	ldr	r0, .L28+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L28+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r0}
	bx	r0
.L29:
	.align	2, 0
.L28:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
.Lfe7:
	.size	 BattleSetup_StartRoamerBattle,.Lfe7-BattleSetup_StartRoamerBattle
	.align	2, 0
	.type	 DoSafariBattle,function
	.thumb_func
DoSafariBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FreezeObjectEvents
	bl	sub_808BCF4
	ldr	r1, .L31
	ldr	r0, .L31+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L31+0x8
	mov	r0, #0x80
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gMain
	.word	CB2_EndSafariBattle
	.word	gBattleTypeFlags
.Lfe8:
	.size	 DoSafariBattle,.Lfe8-DoSafariBattle
	.align	2, 0
	.type	 DoBattlePikeWildBattle,function
	.thumb_func
DoBattlePikeWildBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FreezeObjectEvents
	bl	sub_808BCF4
	ldr	r1, .L34
	ldr	r0, .L34+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L34+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0xd
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r0}
	bx	r0
.L35:
	.align	2, 0
.L34:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
.Lfe9:
	.size	 DoBattlePikeWildBattle,.Lfe9-DoBattlePikeWildBattle
	.align	2, 0
	.type	 DoTrainerBattle,function
	.thumb_func
DoTrainerBattle:
	push	{lr}
	bl	GetTrainerBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x9
	bl	IncrementGameStat
	bl	TryUpdateGymLeaderRematchFromTrainer
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 DoTrainerBattle,.Lfe10-DoTrainerBattle
	.align	2, 0
	.type	 sub_80B0828,function
	.thumb_func
sub_80B0828:
	push	{lr}
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L38	@cond_branch
	mov	r0, #0xa
	bl	GetSpecialBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	b	.L39
.L38:
	mov	r0, #0xb
	bl	GetSpecialBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
.L39:
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x9
	bl	IncrementGameStat
	bl	TryUpdateGymLeaderRematchFromTrainer
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 sub_80B0828,.Lfe11-sub_80B0828
	.align	2, 0
	.globl	StartWallyTutorialBattle
	.type	 StartWallyTutorialBattle,function
	.thumb_func
StartWallyTutorialBattle:
	push	{lr}
	ldr	r0, .L41
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	mov	r2, #0x5
	mov	r3, #0x0
	bl	CreateMaleMon
	bl	ScriptContext2_Enable
	ldr	r1, .L41+0x4
	ldr	r0, .L41+0x8
	str	r0, [r1, #0x8]
	ldr	r1, .L41+0xc
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	str	r0, [r1]
	mov	r0, #0x8
	mov	r1, #0x0
	bl	CreateBattleStartTask
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	gEnemyParty
	.word	gMain
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	gBattleTypeFlags
.Lfe12:
	.size	 StartWallyTutorialBattle,.Lfe12-StartWallyTutorialBattle
	.align	2, 0
	.globl	BattleSetup_StartScriptedWildBattle
	.type	 BattleSetup_StartScriptedWildBattle,function
	.thumb_func
BattleSetup_StartScriptedWildBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L44
	ldr	r0, .L44+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L44+0x8
	mov	r0, #0x0
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe13:
	.size	 BattleSetup_StartScriptedWildBattle,.Lfe13-BattleSetup_StartScriptedWildBattle
	.align	2, 0
	.globl	BattleSetup_StartScriptedDoubleWildBattle
	.type	 BattleSetup_StartScriptedDoubleWildBattle,function
	.thumb_func
BattleSetup_StartScriptedDoubleWildBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L47
	ldr	r0, .L47+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L47+0x8
	mov	r0, #0x1
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe14:
	.size	 BattleSetup_StartScriptedDoubleWildBattle,.Lfe14-BattleSetup_StartScriptedDoubleWildBattle
	.align	2, 0
	.globl	BattleSetup_StartLatiBattle
	.type	 BattleSetup_StartLatiBattle,function
	.thumb_func
BattleSetup_StartLatiBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L50
	ldr	r0, .L50+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L50+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x6
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe15:
	.size	 BattleSetup_StartLatiBattle,.Lfe15-BattleSetup_StartLatiBattle
	.align	2, 0
	.globl	BattleSetup_StartLegendaryBattle
	.type	 BattleSetup_StartLegendaryBattle,function
	.thumb_func
BattleSetup_StartLegendaryBattle:
	push	{r4, lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L65
	ldr	r0, .L65+0x4
	str	r0, [r1, #0x8]
	ldr	r4, .L65+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x6
	str	r0, [r4]
	ldr	r0, .L65+0xc
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0xbf
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L56	@cond_branch
	cmp	r1, r0
	bhi	.L63	@cond_branch
	cmp	r1, #0x97
	beq	.L61	@cond_branch
	cmp	r1, #0x97
	bcc	.L55	@cond_branch
	cmp	r1, #0xfa
	bhi	.L55	@cond_branch
	cmp	r1, #0xf9
	bcc	.L55	@cond_branch
	ldr	r1, .L65+0x10
	b	.L64
.L66:
	.align	2, 0
.L65:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
	.word	gEnemyParty
	.word	0x229
.L63:
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L57	@cond_branch
	cmp	r1, r0
	bcc	.L55	@cond_branch
	add	r0, r0, #0x2
	cmp	r1, r0
	beq	.L58	@cond_branch
.L55:
	ldr	r2, .L67
	ldr	r0, [r2]
	mov	r1, #0x80
	lsl	r1, r1, #0x15
	orr	r0, r0, r1
	str	r0, [r2]
	mov	r1, #0xf0
	lsl	r1, r1, #0x1
	mov	r0, #0x17
	bl	CreateBattleStartTask
	b	.L53
.L68:
	.align	2, 0
.L67:
	.word	gBattleTypeFlags
.L56:
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x16
	orr	r0, r0, r1
	str	r0, [r4]
	mov	r1, #0xf0
	lsl	r1, r1, #0x1
	mov	r0, #0x16
	bl	CreateBattleStartTask
	b	.L53
.L57:
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x17
	orr	r0, r0, r1
	str	r0, [r4]
	mov	r1, #0xeb
	lsl	r1, r1, #0x1
	mov	r0, #0x18
	bl	CreateBattleStartTask
	b	.L53
.L58:
	ldr	r1, .L69
.L64:
	mov	r0, #0x0
	bl	CreateBattleStartTask
	b	.L53
.L70:
	.align	2, 0
.L69:
	.word	0x227
.L61:
	mov	r1, #0xec
	lsl	r1, r1, #0x1
	mov	r0, #0xa
	bl	CreateBattleStartTask
.L53:
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 BattleSetup_StartLegendaryBattle,.Lfe16-BattleSetup_StartLegendaryBattle
	.align	2, 0
	.globl	StartGroudonKyogreBattle
	.type	 StartGroudonKyogreBattle,function
	.thumb_func
StartGroudonKyogreBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L74
	ldr	r0, .L74+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L74+0x8
	mov	r0, #0xc0
	lsl	r0, r0, #0x6
	str	r0, [r1]
	ldr	r0, .L74+0xc
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L72	@cond_branch
	mov	r1, #0xf0
	lsl	r1, r1, #0x1
	mov	r0, #0xb
	bl	CreateBattleStartTask
	b	.L73
.L75:
	.align	2, 0
.L74:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
	.word	gGameVersion
.L72:
	mov	r1, #0xf0
	lsl	r1, r1, #0x1
	mov	r0, #0x6
	bl	CreateBattleStartTask
.L73:
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 StartGroudonKyogreBattle,.Lfe17-StartGroudonKyogreBattle
	.align	2, 0
	.globl	StartRegiBattle
	.type	 StartRegiBattle,function
	.thumb_func
StartRegiBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L84
	ldr	r0, .L84+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L84+0x8
	mov	r0, #0xc0
	lsl	r0, r0, #0x7
	str	r0, [r1]
	ldr	r0, .L84+0xc
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r2, r1, #0
	mov	r0, #0xbd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L79	@cond_branch
	cmp	r1, r0
	bgt	.L83	@cond_branch
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L78	@cond_branch
	b	.L81
.L85:
	.align	2, 0
.L84:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
	.word	gEnemyParty
.L83:
	ldr	r0, .L86
	cmp	r2, r0
	beq	.L80	@cond_branch
	b	.L81
.L87:
	.align	2, 0
.L86:
	.word	0x17b
.L78:
	mov	r0, #0x15
	b	.L77
.L79:
	mov	r0, #0x13
	b	.L77
.L80:
	mov	r0, #0x14
	b	.L77
.L81:
	mov	r0, #0xa
.L77:
	ldr	r1, .L88
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	0x1df
.Lfe18:
	.size	 StartRegiBattle,.Lfe18-StartRegiBattle
	.align	2, 0
	.type	 CB2_EndWildBattle,function
	.thumb_func
CB2_EndWildBattle:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L93
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	ldr	r0, .L93+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L91	@cond_branch
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L91	@cond_branch
	bl	InBattlePike
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L91	@cond_branch
	ldr	r0, .L93+0x8
	bl	SetMainCallback2
	b	.L92
.L94:
	.align	2, 0
.L93:
	.word	0x1000100
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L91:
	ldr	r0, .L95
	bl	SetMainCallback2
	ldr	r1, .L95+0x4
	ldr	r0, .L95+0x8
	str	r0, [r1]
.L92:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L96:
	.align	2, 0
.L95:
	.word	CB2_ReturnToField
	.word	gFieldCallback
	.word	sub_80AF6F0
.Lfe19:
	.size	 CB2_EndWildBattle,.Lfe19-CB2_EndWildBattle
	.align	2, 0
	.type	 CB2_EndScriptedWildBattle,function
	.thumb_func
CB2_EndScriptedWildBattle:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L102
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	ldr	r0, .L102+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L98	@cond_branch
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L99	@cond_branch
	ldr	r0, .L102+0x8
	bl	SetMainCallback2
	b	.L101
.L103:
	.align	2, 0
.L102:
	.word	0x1000100
	.word	gBattleOutcome
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.L99:
	ldr	r0, .L104
	bl	SetMainCallback2
	b	.L101
.L105:
	.align	2, 0
.L104:
	.word	CB2_WhiteOut
.L98:
	ldr	r0, .L106
	bl	SetMainCallback2
.L101:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe20:
	.size	 CB2_EndScriptedWildBattle,.Lfe20-CB2_EndScriptedWildBattle
	.align	2, 0
	.globl	BattleSetup_GetTerrainId
	.type	 BattleSetup_GetTerrainId,function
	.thumb_func
BattleSetup_GetTerrainId:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsTallGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L109	@cond_branch
	bl	GetCurrentTimeOfDay
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L111	@cond_branch
	cmp	r0, #0x3
	beq	.L112	@cond_branch
	mov	r0, #0x0
	b	.L139
.L111:
	mov	r0, #0xa
	b	.L139
.L112:
	mov	r0, #0xb
	b	.L139
.L109:
	add	r0, r4, #0
	bl	MetatileBehavior_IsLongGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L115	@cond_branch
	mov	r0, #0x1
	b	.L139
.L115:
	add	r0, r4, #0
	bl	MetatileBehavior_IsSandOrDeepSand
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L138	@cond_branch
	ldr	r0, .L144
	ldrb	r0, [r0, #0x17]
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bhi	.L117	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L144+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L145:
	.align	2, 0
.L144:
	.word	gMapHeader
	.word	.L129
	.align	2, 0
	.align	2, 0
.L129:
	.word	.L117
	.word	.L117
	.word	.L117
	.word	.L121
	.word	.L126
	.word	.L127
	.word	.L117
	.word	.L141
	.word	.L141
.L121:
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsIndoorEncounter
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L122	@cond_branch
.L141:
	mov	r0, #0x8
	b	.L139
.L122:
	add	r0, r4, #0
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L140	@cond_branch
	mov	r0, #0x7
	b	.L139
.L126:
	mov	r0, #0x3
	b	.L139
.L127:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L142	@cond_branch
	b	.L143
.L117:
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsDeepOrOceanWater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L142	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L140	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsMountain
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L133	@cond_branch
	mov	r0, #0x6
	b	.L139
.L133:
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L134	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L135	@cond_branch
.L140:
	mov	r0, #0x5
	b	.L139
.L135:
	add	r0, r4, #0
	bl	MetatileBehavior_IsBridge
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L134	@cond_branch
.L142:
	mov	r0, #0x4
	b	.L139
.L134:
	ldr	r0, .L146
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xe0
	lsl	r0, r0, #0x5
	cmp	r1, r0
	beq	.L138	@cond_branch
	bl	GetSav1Weather
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	beq	.L138	@cond_branch
.L143:
	mov	r0, #0x9
	b	.L139
.L147:
	.align	2, 0
.L146:
	.word	gSaveBlock1Ptr
.L138:
	mov	r0, #0x2
.L139:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 BattleSetup_GetTerrainId,.Lfe21-BattleSetup_GetTerrainId
	.align	2, 0
	.type	 GetBattleTransitionTypeByMap,function
	.thumb_func
GetBattleTransitionTypeByMap:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	Overworld_GetFlashLevel
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L149	@cond_branch
	mov	r0, #0x2
	b	.L156
.L149:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L150	@cond_branch
	ldr	r0, .L157
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x4
	beq	.L152	@cond_branch
	cmp	r0, #0x5
	beq	.L153	@cond_branch
	mov	r0, #0x0
	b	.L156
.L158:
	.align	2, 0
.L157:
	.word	gMapHeader
.L152:
	mov	r0, #0x1
	b	.L156
.L153:
.L150:
	mov	r0, #0x3
.L156:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 GetBattleTransitionTypeByMap,.Lfe22-GetBattleTransitionTypeByMap
	.align	2, 0
	.type	 GetSumOfPlayerPartyLevel,function
	.thumb_func
GetSumOfPlayerPartyLevel:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r7, #0x0
	mov	r6, #0x0
.L163:
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L167
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	ldr	r0, .L167+0x4
	cmp	r1, r0
	beq	.L162	@cond_branch
	cmp	r1, #0
	beq	.L162	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L162	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	add	r0, r7, r0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L161	@cond_branch
.L162:
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L163	@cond_branch
.L161:
	add	r0, r7, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L168:
	.align	2, 0
.L167:
	.word	gPlayerParty
	.word	0x4b7
.Lfe23:
	.size	 GetSumOfPlayerPartyLevel,.Lfe23-GetSumOfPlayerPartyLevel
	.align	2, 0
	.type	 GetSumOfEnemyPartyLevel,function
	.thumb_func
GetSumOfEnemyPartyLevel:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r5, .L199
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r5
	add	r0, r2, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	cmp	r0, r4
	bcs	.L170	@cond_branch
	add	r4, r0, #0
.L170:
	mov	r3, #0x0
	ldrb	r0, [r2]
	cmp	r0, #0x1
	beq	.L178	@cond_branch
	cmp	r0, #0x1
	bgt	.L198	@cond_branch
	cmp	r0, #0
	beq	.L172	@cond_branch
	b	.L171
.L200:
	.align	2, 0
.L199:
	.word	gTrainers
.L198:
	cmp	r0, #0x2
	beq	.L184	@cond_branch
	cmp	r0, #0x3
	beq	.L190	@cond_branch
	b	.L171
.L172:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L171	@cond_branch
.L176:
	lsl	r0, r2, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L176	@cond_branch
	b	.L171
.L178:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L171	@cond_branch
.L182:
	lsl	r0, r2, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L182	@cond_branch
	b	.L171
.L184:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L171	@cond_branch
.L188:
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L188	@cond_branch
	b	.L171
.L190:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L171	@cond_branch
.L194:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L194	@cond_branch
.L171:
	add	r0, r3, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 GetSumOfEnemyPartyLevel,.Lfe24-GetSumOfEnemyPartyLevel
	.align	2, 0
	.globl	GetWildBattleTransition
	.type	 GetWildBattleTransition,function
	.thumb_func
GetWildBattleTransition:
	push	{r4, r5, r6, lr}
	bl	GetBattleTransitionTypeByMap
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	ldr	r0, .L210
	mov	r1, #0x38
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcs	.L202	@cond_branch
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L203	@cond_branch
	mov	r0, #0x0
	b	.L208
.L211:
	.align	2, 0
.L210:
	.word	gEnemyParty
.L203:
	ldr	r0, .L212
	lsl	r1, r5, #0x1
	b	.L209
.L213:
	.align	2, 0
.L212:
	.word	sBattleTransitionTable_Wild
.L202:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L206	@cond_branch
	ldr	r0, .L214
	lsl	r1, r6, #0x1
	add	r0, r0, #0x1
.L209:
	add	r1, r1, r0
	ldrb	r0, [r1]
	b	.L208
.L215:
	.align	2, 0
.L214:
	.word	sBattleTransitionTable_Wild
.L206:
	mov	r0, #0xa
.L208:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 GetWildBattleTransition,.Lfe25-GetWildBattleTransition
	.align	2, 0
	.globl	GetTrainerBattleTransition
	.type	 GetTrainerBattleTransition,function
	.thumb_func
GetTrainerBattleTransition:
	push	{r4, r5, r6, lr}
	ldr	r4, .L236
	ldrh	r1, [r4]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	beq	.L233	@cond_branch
	ldr	r1, .L236+0x4
	ldrh	r2, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	cmp	r1, #0x1f
	bne	.L218	@cond_branch
	add	r1, r2, #0
	ldr	r0, .L236+0x8
	cmp	r1, r0
	bne	.L219	@cond_branch
	mov	r0, #0xc
	b	.L232
.L237:
	.align	2, 0
.L236:
	.word	gTrainerBattleOpponent_A
	.word	gTrainers
	.word	0x105
.L219:
	mov	r0, #0x83
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L220	@cond_branch
	mov	r0, #0xd
	b	.L232
.L220:
	ldr	r0, .L238
	cmp	r1, r0
	bne	.L221	@cond_branch
	mov	r0, #0xe
	b	.L232
.L239:
	.align	2, 0
.L238:
	.word	0x107
.L221:
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L233	@cond_branch
	mov	r0, #0xf
	b	.L232
.L218:
	cmp	r1, #0x26
	bne	.L223	@cond_branch
.L233:
	mov	r0, #0x10
	b	.L232
.L223:
	cmp	r1, #0x9
	beq	.L225	@cond_branch
	cmp	r1, #0x35
	beq	.L225	@cond_branch
	cmp	r1, #0x31
	bne	.L224	@cond_branch
.L225:
	mov	r0, #0x12
	b	.L232
.L224:
	cmp	r1, #0x3
	beq	.L227	@cond_branch
	cmp	r1, #0xd
	beq	.L227	@cond_branch
	cmp	r1, #0xb
	bne	.L226	@cond_branch
.L227:
	mov	r0, #0x11
	b	.L232
.L226:
	ldrb	r0, [r0, #0x18]
	mov	r5, #0x1
	cmp	r0, #0x1
	bne	.L228	@cond_branch
	mov	r5, #0x2
.L228:
	bl	GetBattleTransitionTypeByMap
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldrh	r0, [r4]
	add	r1, r5, #0
	bl	GetSumOfEnemyPartyLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L230	@cond_branch
	ldr	r0, .L240
	lsl	r1, r6, #0x1
	add	r0, r0, #0x1
	b	.L235
.L241:
	.align	2, 0
.L240:
	.word	sBattleTransitionTable_Trainer
.L230:
	ldr	r0, .L242
	lsl	r1, r6, #0x1
.L235:
	add	r1, r1, r0
	ldrb	r0, [r1]
.L232:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L243:
	.align	2, 0
.L242:
	.word	sBattleTransitionTable_Trainer
.Lfe26:
	.size	 GetTrainerBattleTransition,.Lfe26-GetTrainerBattleTransition
	.align	2, 0
	.globl	GetSpecialBattleTransition
	.type	 GetSpecialBattleTransition,function
	.thumb_func
GetSpecialBattleTransition:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L277
	mov	r1, #0x38
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcs	.L245	@cond_branch
	cmp	r5, #0xa
	beq	.L250	@cond_branch
	cmp	r5, #0xa
	bgt	.L254	@cond_branch
	cmp	r5, #0x3
	beq	.L251	@cond_branch
	b	.L246
.L278:
	.align	2, 0
.L277:
	.word	gEnemyParty
.L254:
	cmp	r5, #0xd
	bgt	.L246	@cond_branch
	mov	r0, #0x4
	b	.L267
.L250:
	ldr	r4, .L279
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	b	.L269
.L280:
	.align	2, 0
.L279:
	.word	sBattleTransitionTable_BattlePyramid
.L251:
	ldr	r4, .L281
	bl	Random
	and	r5, r5, r0
	lsl	r0, r5, #0x10
	b	.L271
.L282:
	.align	2, 0
.L281:
	.word	sBattleTransitionTable_BattleDome
.L246:
	ldr	r0, .L283
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	beq	.L256	@cond_branch
	ldr	r4, .L283+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L273
.L284:
	.align	2, 0
.L283:
	.word	0x40ce
	.word	sBattleTransitionTable_BattleFrontier
.L245:
	cmp	r5, #0xa
	beq	.L261	@cond_branch
	cmp	r5, #0xa
	bgt	.L265	@cond_branch
	cmp	r5, #0x3
	beq	.L262	@cond_branch
	b	.L257
.L265:
	cmp	r5, #0xd
	bgt	.L257	@cond_branch
	mov	r0, #0x3
	b	.L267
.L261:
	ldr	r4, .L285
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	b	.L269
.L286:
	.align	2, 0
.L285:
	.word	sBattleTransitionTable_BattlePyramid
.L262:
	ldr	r4, .L287
	bl	Random
	and	r5, r5, r0
	lsl	r0, r5, #0x10
	b	.L271
.L288:
	.align	2, 0
.L287:
	.word	sBattleTransitionTable_BattleDome
.L257:
	ldr	r0, .L289
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	beq	.L256	@cond_branch
	ldr	r4, .L289+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L273
.L290:
	.align	2, 0
.L289:
	.word	0x40ce
	.word	sBattleTransitionTable_BattleFrontier
.L256:
	ldr	r0, .L291
	ldr	r1, [r0]
	ldr	r2, .L291+0x4
	add	r0, r1, r2
	ldrh	r0, [r0]
	lsl	r2, r0, #0x2
	ldr	r3, .L291+0x8
	add	r1, r1, r3
	add	r2, r1, r2
	lsl	r0, r0, #0x1
	add	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	ldrh	r2, [r2]
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L291+0xc
.L273:
	mov	r1, #0xc
.L269:
	bl	__umodsi3
	lsl	r0, r0, #0x10
.L271:
	lsr	r0, r0, #0x10
	add	r0, r0, r4
	ldrb	r0, [r0]
.L267:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L292:
	.align	2, 0
.L291:
	.word	gSaveBlock2Ptr
	.word	0xc3a
	.word	0xc3c
	.word	sBattleTransitionTable_BattleFrontier
.Lfe27:
	.size	 GetSpecialBattleTransition,.Lfe27-GetSpecialBattleTransition
	.align	2, 0
	.globl	ChooseStarter
	.type	 ChooseStarter,function
	.thumb_func
ChooseStarter:
	push	{lr}
	ldr	r0, .L294
	bl	SetMainCallback2
	ldr	r1, .L294+0x4
	ldr	r0, .L294+0x8
	str	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	CB2_ChooseStarter
	.word	gMain
	.word	CB2_GiveStarter
.Lfe28:
	.size	 ChooseStarter,.Lfe28-ChooseStarter
	.align	2, 0
	.type	 CB2_GiveStarter,function
	.thumb_func
CB2_GiveStarter:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L297
	bl	GetVarPointer
	ldr	r2, .L297+0x4
	ldrh	r1, [r2]
	strh	r1, [r0]
	ldrh	r0, [r2]
	bl	GetStarterPokemon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	mov	r1, #0x5
	mov	r2, #0x0
	mov	r3, #0x0
	bl	ScriptGiveMon
	bl	ResetTasks
	bl	PlayBattleBGM
	ldr	r0, .L297+0x8
	bl	SetMainCallback2
	mov	r0, #0x0
	bl	BattleTransition_Start
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L298:
	.align	2, 0
.L297:
	.word	0x4023
	.word	gSpecialVar_Result
	.word	CB2_StartFirstBattle
.Lfe29:
	.size	 CB2_GiveStarter,.Lfe29-CB2_GiveStarter
	.align	2, 0
	.type	 CB2_StartFirstBattle,function
	.thumb_func
CB2_StartFirstBattle:
	push	{lr}
	bl	UpdatePaletteFade
	bl	RunTasks
	bl	IsBattleTransitionDone
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L300	@cond_branch
	ldr	r1, .L301
	mov	r0, #0x10
	str	r0, [r1]
	ldr	r1, .L301+0x4
	ldr	r0, .L301+0x8
	str	r0, [r1, #0x8]
	bl	FreeAllWindowBuffers
	ldr	r0, .L301+0xc
	bl	SetMainCallback2
	bl	RestartWildEncounterImmunitySteps
	bl	ClearPoisonStepCounter
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	bl	IncrementDailyWildBattles
	bl	TryUpdateGymLeaderRematchFromWild
.L300:
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	gBattleTypeFlags
	.word	gMain
	.word	CB2_EndFirstBattle
	.word	CB2_InitBattle
.Lfe30:
	.size	 CB2_StartFirstBattle,.Lfe30-CB2_StartFirstBattle
	.align	2, 0
	.type	 CB2_EndFirstBattle,function
	.thumb_func
CB2_EndFirstBattle:
	push	{lr}
	bl	Overworld_ClearSavedMusic
	ldr	r0, .L304
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe31:
	.size	 CB2_EndFirstBattle,.Lfe31-CB2_EndFirstBattle
	.align	2, 0
	.type	 TryUpdateGymLeaderRematchFromWild,function
	.thumb_func
TryUpdateGymLeaderRematchFromWild:
	push	{lr}
	mov	r0, #0x8
	bl	GetGameStat
	mov	r1, #0x3c
	bl	__umodsi3
	cmp	r0, #0
	bne	.L307	@cond_branch
	bl	UpdateGymLeaderRematch
.L307:
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 TryUpdateGymLeaderRematchFromWild,.Lfe32-TryUpdateGymLeaderRematchFromWild
	.align	2, 0
	.type	 TryUpdateGymLeaderRematchFromTrainer,function
	.thumb_func
TryUpdateGymLeaderRematchFromTrainer:
	push	{lr}
	mov	r0, #0x9
	bl	GetGameStat
	mov	r1, #0x14
	bl	__umodsi3
	cmp	r0, #0
	bne	.L309	@cond_branch
	bl	UpdateGymLeaderRematch
.L309:
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 TryUpdateGymLeaderRematchFromTrainer,.Lfe33-TryUpdateGymLeaderRematchFromTrainer
	.align	2, 0
	.type	 TrainerBattleLoadArg32,function
	.thumb_func
TrainerBattleLoadArg32:
	add	r2, r0, #0
	ldrb	r0, [r2]
	ldrb	r1, [r2, #0x1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldrb	r1, [r2, #0x2]
	lsl	r1, r1, #0x10
	orr	r0, r0, r1
	ldrb	r1, [r2, #0x3]
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	bx	lr
.Lfe34:
	.size	 TrainerBattleLoadArg32,.Lfe34-TrainerBattleLoadArg32
	.align	2, 0
	.type	 TrainerBattleLoadArg16,function
	.thumb_func
TrainerBattleLoadArg16:
	add	r1, r0, #0
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	bx	lr
.Lfe35:
	.size	 TrainerBattleLoadArg16,.Lfe35-TrainerBattleLoadArg16
	.align	2, 0
	.type	 TrainerBattleLoadArg8,function
	.thumb_func
TrainerBattleLoadArg8:
	ldrb	r0, [r0]
	bx	lr
.Lfe36:
	.size	 TrainerBattleLoadArg8,.Lfe36-TrainerBattleLoadArg8
	.align	2, 0
	.type	 GetTrainerAFlag,function
	.thumb_func
GetTrainerAFlag:
	ldr	r1, .L314
	mov	r2, #0xa0
	lsl	r2, r2, #0x3
	add	r0, r2, #0
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.L315:
	.align	2, 0
.L314:
	.word	gTrainerBattleOpponent_A
.Lfe37:
	.size	 GetTrainerAFlag,.Lfe37-GetTrainerAFlag
	.align	2, 0
	.type	 GetTrainerBFlag,function
	.thumb_func
GetTrainerBFlag:
	ldr	r1, .L317
	mov	r2, #0xa0
	lsl	r2, r2, #0x3
	add	r0, r2, #0
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.L318:
	.align	2, 0
.L317:
	.word	gTrainerBattleOpponent_B
.Lfe38:
	.size	 GetTrainerBFlag,.Lfe38-GetTrainerBFlag
	.align	2, 0
	.type	 IsPlayerDefeated,function
	.thumb_func
IsPlayerDefeated:
	push	{lr}
	sub	r0, r0, #0x1
	cmp	r0, #0x6
	bhi	.L328	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L331
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L332:
	.align	2, 0
.L331:
	.word	.L329
	.align	2, 0
	.align	2, 0
.L329:
	.word	.L327
	.word	.L322
	.word	.L322
	.word	.L327
	.word	.L327
	.word	.L327
	.word	.L327
.L322:
	mov	r0, #0x1
	b	.L330
.L327:
.L328:
	mov	r0, #0x0
.L330:
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 IsPlayerDefeated,.Lfe39-IsPlayerDefeated
	.align	2, 0
	.globl	ResetTrainerOpponentIds
	.type	 ResetTrainerOpponentIds,function
	.thumb_func
ResetTrainerOpponentIds:
	ldr	r0, .L334
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L334+0x4
	strh	r1, [r0]
	bx	lr
.L335:
	.align	2, 0
.L334:
	.word	gTrainerBattleOpponent_A
	.word	gTrainerBattleOpponent_B
.Lfe40:
	.size	 ResetTrainerOpponentIds,.Lfe40-ResetTrainerOpponentIds
	.align	2, 0
	.type	 InitTrainerBattleVariables,function
	.thumb_func
InitTrainerBattleVariables:
	push	{lr}
	ldr	r0, .L340
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L340+0x4
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.L337	@cond_branch
	ldr	r0, .L340+0x8
	str	r1, [r0]
	ldr	r0, .L340+0xc
	str	r1, [r0]
	ldr	r0, .L340+0x10
	b	.L339
.L341:
	.align	2, 0
.L340:
	.word	sTrainerBattleMode
	.word	gApproachingTrainerId
	.word	sTrainerAIntroSpeech
	.word	sTrainerADefeatSpeech
	.word	sTrainerABattleScriptRetAddr
.L337:
	ldr	r0, .L342
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L342+0x4
	str	r1, [r0]
	ldr	r0, .L342+0x8
.L339:
	str	r1, [r0]
	ldr	r1, .L342+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L342+0x10
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L342+0x14
	str	r1, [r0]
	ldr	r0, .L342+0x18
	str	r1, [r0]
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	sTrainerBIntroSpeech
	.word	sTrainerBDefeatSpeech
	.word	sTrainerBBattleScriptRetAddr
	.word	sTrainerObjectEventLocalId
	.word	sTrainerVictorySpeech
	.word	sTrainerCannotBattleSpeech
	.word	sTrainerBattleEndScript
.Lfe41:
	.size	 InitTrainerBattleVariables,.Lfe41-InitTrainerBattleVariables
	.align	2, 0
	.type	 TrainerBattleLoadArgs,function
	.thumb_func
TrainerBattleLoadArgs:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
.L351:
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x6
	bhi	.L352	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L370
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L371:
	.align	2, 0
.L370:
	.word	.L367
	.align	2, 0
	.align	2, 0
.L367:
	.word	.L353
	.word	.L355
	.word	.L357
	.word	.L359
	.word	.L361
	.word	.L363
	.word	.L348
.L353:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg8
	ldr	r1, [r4]
	strb	r0, [r1]
	add	r5, r5, #0x1
	b	.L352
.L355:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg16
	ldr	r1, [r4]
	strh	r0, [r1]
	add	r5, r5, #0x2
	b	.L352
.L357:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg32
	ldr	r1, [r4]
	str	r0, [r1]
	add	r5, r5, #0x4
	b	.L352
.L359:
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L352
.L361:
	ldr	r1, [r4]
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L352
.L363:
	ldr	r1, [r4]
	mov	r0, #0x0
	str	r0, [r1]
.L352:
	add	r4, r4, #0x8
	b	.L351
.L348:
	ldr	r0, [r4]
	str	r5, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 TrainerBattleLoadArgs,.Lfe42-TrainerBattleLoadArgs
	.align	2, 0
	.globl	SetMapVarsToTrainer
	.type	 SetMapVarsToTrainer,function
	.thumb_func
SetMapVarsToTrainer:
	push	{lr}
	ldr	r0, .L374
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L373	@cond_branch
	ldr	r0, .L374+0x4
	strh	r1, [r0]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L374+0x8
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	bl	GetObjectEventIdByLocalIdAndMap
	ldr	r1, .L374+0xc
	strb	r0, [r1]
.L373:
	pop	{r0}
	bx	r0
.L375:
	.align	2, 0
.L374:
	.word	sTrainerObjectEventLocalId
	.word	gSpecialVar_LastTalked
	.word	gSaveBlock1Ptr
	.word	gSelectedObjectEvent
.Lfe43:
	.size	 SetMapVarsToTrainer,.Lfe43-SetMapVarsToTrainer
	.align	2, 0
	.globl	BattleSetup_ConfigureTrainerBattle
	.type	 BattleSetup_ConfigureTrainerBattle,function
	.thumb_func
BattleSetup_ConfigureTrainerBattle:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	TrainerBattleLoadArg8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xb
	beq	.L377	@cond_branch
	bl	InitTrainerBattleVariables
.L377:
	ldr	r4, .L410
	add	r0, r5, #0
	bl	TrainerBattleLoadArg8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0xb
	bls	.LCB2621
	b	.L397	@long jump
.LCB2621:
	lsl	r0, r0, #0x2
	ldr	r1, .L410+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L411:
	.align	2, 0
.L410:
	.word	sTrainerBattleMode
	.word	.L400
	.align	2, 0
	.align	2, 0
.L400:
	.word	.L384
	.word	.L381
	.word	.L379
	.word	.L380
	.word	.L388
	.word	.L386
	.word	.L387
	.word	.L386
	.word	.L389
	.word	.L392
	.word	.L393
	.word	.L394
.L379:
	ldr	r0, .L412
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	ldr	r0, .L412+0x4
	b	.L401
.L413:
	.align	2, 0
.L412:
	.word	sOrdinaryNoIntroBattleParams
	.word	EventScript_DoNoIntroTrainerBattle
.L380:
	ldr	r0, .L414
	b	.L402
.L415:
	.align	2, 0
.L414:
	.word	sDoubleBattleParams
.L381:
	ldr	r0, .L416
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L382	@cond_branch
	ldr	r0, .L416+0x4
	b	.L403
.L417:
	.align	2, 0
.L416:
	.word	gApproachingTrainerId
	.word	sContinueScriptBattleParams
.L382:
	ldr	r0, .L418
	b	.L408
.L419:
	.align	2, 0
.L418:
	.word	sTrainerBContinueScriptBattleParams
.L384:
	ldr	r0, .L420
	b	.L403
.L421:
	.align	2, 0
.L420:
	.word	sContinueScriptBattleParams
.L386:
	ldr	r0, .L422
.L402:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r0, .L422+0x4
	b	.L401
.L423:
	.align	2, 0
.L422:
	.word	sContinueScriptDoubleBattleParams
	.word	EventScript_TryDoDoubleTrainerBattle
.L387:
	ldr	r0, .L424
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r4, .L424+0x4
	ldrh	r0, [r4]
	bl	GetRematchTrainerId
	strh	r0, [r4]
	ldr	r0, .L424+0x8
	b	.L401
.L425:
	.align	2, 0
.L424:
	.word	sDoubleBattleParams
	.word	gTrainerBattleOpponent_A
	.word	EventScript_TryDoDoubleRematchBattle
.L388:
	ldr	r0, .L426
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r4, .L426+0x4
	ldrh	r0, [r4]
	bl	GetRematchTrainerId
	strh	r0, [r4]
	ldr	r0, .L426+0x8
	b	.L401
.L427:
	.align	2, 0
.L426:
	.word	sOrdinaryBattleParams
	.word	gTrainerBattleOpponent_A
	.word	EventScript_TryDoRematchBattle
.L389:
	ldr	r0, .L428
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L390	@cond_branch
	ldr	r0, .L428+0x4
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r0, .L428+0x8
	ldrb	r0, [r0]
	bl	LocalIdToPyramidTrainerId
	ldr	r1, .L428+0xc
	b	.L404
.L429:
	.align	2, 0
.L428:
	.word	gApproachingTrainerId
	.word	sOrdinaryBattleParams
	.word	gSpecialVar_LastTalked
	.word	gTrainerBattleOpponent_A
.L390:
	ldr	r0, .L430
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	ldr	r0, .L430+0x4
	ldrb	r0, [r0]
	bl	LocalIdToPyramidTrainerId
.L409:
	ldr	r1, .L430+0x8
.L404:
	strh	r0, [r1]
	b	.L399
.L431:
	.align	2, 0
.L430:
	.word	sTrainerBOrdinaryBattleParams
	.word	gSpecialVar_LastTalked
	.word	gTrainerBattleOpponent_B
.L392:
	ldr	r0, .L432
	b	.L405
.L433:
	.align	2, 0
.L432:
	.word	sOrdinaryBattleParams
.L393:
	ldr	r0, .L434
.L405:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	ldr	r0, .L434+0x4
	ldr	r0, [r0]
	b	.L401
.L435:
	.align	2, 0
.L434:
	.word	sTrainerBOrdinaryBattleParams
	.word	sTrainerBattleEndScript
.L394:
	ldr	r0, .L436
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L395	@cond_branch
	ldr	r0, .L436+0x4
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r0, .L436+0x8
	ldrb	r0, [r0]
	bl	LocalIdToHillTrainerId
	ldr	r1, .L436+0xc
	b	.L404
.L437:
	.align	2, 0
.L436:
	.word	gApproachingTrainerId
	.word	sOrdinaryBattleParams
	.word	gSpecialVar_LastTalked
	.word	gTrainerBattleOpponent_A
.L395:
	ldr	r0, .L438
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	ldr	r0, .L438+0x4
	ldrb	r0, [r0]
	bl	LocalIdToHillTrainerId
	b	.L409
.L439:
	.align	2, 0
.L438:
	.word	sTrainerBOrdinaryBattleParams
	.word	gSpecialVar_LastTalked
.L397:
	ldr	r0, .L440
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L398	@cond_branch
	ldr	r0, .L440+0x4
.L403:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	b	.L399
.L441:
	.align	2, 0
.L440:
	.word	gApproachingTrainerId
	.word	sOrdinaryBattleParams
.L398:
	ldr	r0, .L442
.L408:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
.L399:
	ldr	r0, .L442+0x4
.L401:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L443:
	.align	2, 0
.L442:
	.word	sTrainerBOrdinaryBattleParams
	.word	EventScript_TryDoNormalTrainerBattle
.Lfe44:
	.size	 BattleSetup_ConfigureTrainerBattle,.Lfe44-BattleSetup_ConfigureTrainerBattle
	.align	2, 0
	.globl	ConfigureAndSetUpOneTrainerBattle
	.type	 ConfigureAndSetUpOneTrainerBattle,function
	.thumb_func
ConfigureAndSetUpOneTrainerBattle:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L445
	strb	r0, [r2]
	ldr	r4, .L445+0x4
	ldr	r3, .L445+0x8
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrb	r0, [r2, #0x8]
	strh	r0, [r4]
	add	r1, r1, #0x1
	add	r0, r1, #0
	bl	BattleSetup_ConfigureTrainerBattle
	ldr	r0, .L445+0xc
	bl	ScriptContext1_SetupScript
	bl	ScriptContext2_Enable
	pop	{r4}
	pop	{r0}
	bx	r0
.L446:
	.align	2, 0
.L445:
	.word	gSelectedObjectEvent
	.word	gSpecialVar_LastTalked
	.word	gObjectEvents
	.word	EventScript_271354
.Lfe45:
	.size	 ConfigureAndSetUpOneTrainerBattle,.Lfe45-ConfigureAndSetUpOneTrainerBattle
	.align	2, 0
	.globl	ConfigureTwoTrainersBattle
	.type	 ConfigureTwoTrainersBattle,function
	.thumb_func
ConfigureTwoTrainersBattle:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L448
	strb	r0, [r2]
	ldr	r4, .L448+0x4
	ldr	r3, .L448+0x8
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrb	r0, [r2, #0x8]
	strh	r0, [r4]
	add	r1, r1, #0x1
	add	r0, r1, #0
	bl	BattleSetup_ConfigureTrainerBattle
	pop	{r4}
	pop	{r0}
	bx	r0
.L449:
	.align	2, 0
.L448:
	.word	gSelectedObjectEvent
	.word	gSpecialVar_LastTalked
	.word	gObjectEvents
.Lfe46:
	.size	 ConfigureTwoTrainersBattle,.Lfe46-ConfigureTwoTrainersBattle
	.align	2, 0
	.globl	SetUpTwoTrainersBattle
	.type	 SetUpTwoTrainersBattle,function
	.thumb_func
SetUpTwoTrainersBattle:
	push	{lr}
	ldr	r0, .L451
	bl	ScriptContext1_SetupScript
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L452:
	.align	2, 0
.L451:
	.word	EventScript_271354
.Lfe47:
	.size	 SetUpTwoTrainersBattle,.Lfe47-SetUpTwoTrainersBattle
	.align	2, 0
	.globl	GetTrainerFlagFromScriptPointer
	.type	 GetTrainerFlagFromScriptPointer,function
	.thumb_func
GetTrainerFlagFromScriptPointer:
	push	{lr}
	add	r0, r0, #0x2
	bl	TrainerBattleLoadArg16
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 GetTrainerFlagFromScriptPointer,.Lfe48-GetTrainerFlagFromScriptPointer
	.align	2, 0
	.globl	SetUpTrainerMovement
	.type	 SetUpTrainerMovement,function
	.thumb_func
SetUpTrainerMovement:
	push	{r4, lr}
	ldr	r0, .L455
	ldrb	r0, [r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L455+0x4
	add	r4, r4, r0
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetTrainerFacingDirectionMovementType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	SetTrainerMovementType
	pop	{r4}
	pop	{r0}
	bx	r0
.L456:
	.align	2, 0
.L455:
	.word	gSelectedObjectEvent
	.word	gObjectEvents
.Lfe49:
	.size	 SetUpTrainerMovement,.Lfe49-SetUpTrainerMovement
	.align	2, 0
	.globl	GetTrainerBattleMode
	.type	 GetTrainerBattleMode,function
	.thumb_func
GetTrainerBattleMode:
	ldr	r0, .L458
	ldrb	r0, [r0]
	bx	lr
.L459:
	.align	2, 0
.L458:
	.word	sTrainerBattleMode
.Lfe50:
	.size	 GetTrainerBattleMode,.Lfe50-GetTrainerBattleMode
	.align	2, 0
	.globl	GetTrainerFlag
	.type	 GetTrainerFlag,function
	.thumb_func
GetTrainerFlag:
	push	{lr}
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L461	@cond_branch
	ldr	r0, .L469
	ldrb	r0, [r0]
	bl	GetBattlePyramidTrainerFlag
	b	.L467
.L470:
	.align	2, 0
.L469:
	.word	gSelectedObjectEvent
.L461:
	bl	InTrainerHill
	cmp	r0, #0
	bne	.L463	@cond_branch
	bl	GetTrainerAFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	b	.L467
.L463:
	ldr	r0, .L471
	ldrb	r0, [r0]
	bl	GetHillTrainerFlag
.L467:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L472:
	.align	2, 0
.L471:
	.word	gSelectedObjectEvent
.Lfe51:
	.size	 GetTrainerFlag,.Lfe51-GetTrainerFlag
	.align	2, 0
	.type	 SetBattledTrainersFlags,function
	.thumb_func
SetBattledTrainersFlags:
	push	{lr}
	ldr	r0, .L475
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L474	@cond_branch
	bl	GetTrainerBFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
.L474:
	bl	GetTrainerAFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.L476:
	.align	2, 0
.L475:
	.word	gTrainerBattleOpponent_B
.Lfe52:
	.size	 SetBattledTrainersFlags,.Lfe52-SetBattledTrainersFlags
	.align	2, 0
	.type	 SetBattledTrainerFlag,function
	.thumb_func
SetBattledTrainerFlag:
	push	{lr}
	bl	GetTrainerAFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 SetBattledTrainerFlag,.Lfe53-SetBattledTrainerFlag
	.align	2, 0
	.globl	HasTrainerBeenFought
	.type	 HasTrainerBeenFought,function
	.thumb_func
HasTrainerBeenFought:
	push	{lr}
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 HasTrainerBeenFought,.Lfe54-HasTrainerBeenFought
	.align	2, 0
	.globl	SetTrainerFlag
	.type	 SetTrainerFlag,function
	.thumb_func
SetTrainerFlag:
	push	{lr}
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 SetTrainerFlag,.Lfe55-SetTrainerFlag
	.align	2, 0
	.globl	ClearTrainerFlag
	.type	 ClearTrainerFlag,function
	.thumb_func
ClearTrainerFlag:
	push	{lr}
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 ClearTrainerFlag,.Lfe56-ClearTrainerFlag
	.align	2, 0
	.globl	BattleSetup_StartTrainerBattle
	.type	 BattleSetup_StartTrainerBattle,function
	.thumb_func
BattleSetup_StartTrainerBattle:
	push	{r4, lr}
	ldr	r0, .L495
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L482	@cond_branch
	ldr	r1, .L495+0x4
	ldr	r0, .L495+0x8
	b	.L494
.L496:
	.align	2, 0
.L495:
	.word	gNoOfApproachingTrainers
	.word	gBattleTypeFlags
	.word	0x8009
.L482:
	ldr	r1, .L497
	mov	r0, #0x8
.L494:
	str	r0, [r1]
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L484	@cond_branch
	ldr	r0, .L497+0x4
	mov	r1, #0x0
	bl	VarSet
	ldr	r2, .L497
	ldr	r0, [r2]
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	orr	r0, r0, r1
	str	r0, [r2]
	ldr	r0, .L497+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L485	@cond_branch
	mov	r0, #0x1
	bl	FillFrontierTrainersParties
	ldr	r4, .L497+0xc
	add	r0, r4, #0
	bl	ZeroMonData
	add	r0, r4, #0
	add	r0, r0, #0x64
	bl	ZeroMonData
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	ZeroMonData
	mov	r1, #0xc8
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	bl	ZeroMonData
	b	.L486
.L498:
	.align	2, 0
.L497:
	.word	gBattleTypeFlags
	.word	0x400e
	.word	gNoOfApproachingTrainers
	.word	gEnemyParty+0x64
.L485:
	mov	r0, #0x1
	bl	FillFrontierTrainerParty
	ldr	r4, .L499
	add	r0, r4, #0
	bl	ZeroMonData
	add	r4, r4, #0x64
	add	r0, r4, #0
	bl	ZeroMonData
.L486:
	bl	MarkApproachingPyramidTrainersAsBattled
	b	.L487
.L500:
	.align	2, 0
.L499:
	.word	gEnemyParty+0x64
.L484:
	bl	InTrainerHillChallenge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L487	@cond_branch
	ldr	r2, .L501
	ldr	r0, [r2]
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	orr	r0, r0, r1
	str	r0, [r2]
	ldr	r0, .L501+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L489	@cond_branch
	bl	FillHillTrainersParties
	b	.L490
.L502:
	.align	2, 0
.L501:
	.word	gBattleTypeFlags
	.word	gNoOfApproachingTrainers
.L489:
	bl	FillHillTrainerParty
.L490:
	bl	SetHillTrainerFlag
.L487:
	ldr	r1, .L503
	ldr	r2, .L503+0x4
	ldrb	r0, [r2]
	strb	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r2]
	ldr	r0, .L503+0x8
	strb	r1, [r0]
	ldr	r1, .L503+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L503+0x10
	ldr	r0, .L503+0x14
	str	r0, [r1, #0x8]
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L492	@cond_branch
	bl	InTrainerHillChallenge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L491	@cond_branch
.L492:
	bl	sub_80B0828
	b	.L493
.L504:
	.align	2, 0
.L503:
	.word	sNoOfPossibleTrainerRetScripts
	.word	gNoOfApproachingTrainers
	.word	sShouldCheckTrainerBScript
	.word	gWhichTrainerToFaceAfterBattle
	.word	gMain
	.word	CB2_EndTrainerBattle
.L491:
	bl	DoTrainerBattle
.L493:
	bl	ScriptContext1_Stop
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe57:
	.size	 BattleSetup_StartTrainerBattle,.Lfe57-BattleSetup_StartTrainerBattle
	.align	2, 0
	.type	 CB2_EndTrainerBattle,function
	.thumb_func
CB2_EndTrainerBattle:
	push	{lr}
	ldr	r0, .L514
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	beq	.L510	@cond_branch
	ldr	r0, .L514+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L508	@cond_branch
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L510	@cond_branch
	bl	InTrainerHillChallenge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L509	@cond_branch
.L510:
	ldr	r0, .L514+0x8
	bl	SetMainCallback2
	b	.L507
.L515:
	.align	2, 0
.L514:
	.word	gTrainerBattleOpponent_A
	.word	gBattleOutcome
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.L509:
	ldr	r0, .L516
	bl	SetMainCallback2
	b	.L507
.L517:
	.align	2, 0
.L516:
	.word	CB2_WhiteOut
.L508:
	ldr	r0, .L518
	bl	SetMainCallback2
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L507	@cond_branch
	bl	InTrainerHillChallenge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L507	@cond_branch
	bl	RegisterTrainerInMatchCall
	bl	SetBattledTrainersFlags
.L507:
	pop	{r0}
	bx	r0
.L519:
	.align	2, 0
.L518:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe58:
	.size	 CB2_EndTrainerBattle,.Lfe58-CB2_EndTrainerBattle
	.align	2, 0
	.type	 CB2_EndRematchBattle,function
	.thumb_func
CB2_EndRematchBattle:
	push	{lr}
	ldr	r0, .L525
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L521	@cond_branch
	ldr	r0, .L525+0x4
	bl	SetMainCallback2
	b	.L522
.L526:
	.align	2, 0
.L525:
	.word	gTrainerBattleOpponent_A
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.L521:
	ldr	r0, .L527
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L523	@cond_branch
	ldr	r0, .L527+0x4
	bl	SetMainCallback2
	b	.L522
.L528:
	.align	2, 0
.L527:
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L523:
	ldr	r0, .L529
	bl	SetMainCallback2
	bl	RegisterTrainerInMatchCall
	bl	SetBattledTrainersFlags
	bl	HandleRematchVarsOnBattleEnd
.L522:
	pop	{r0}
	bx	r0
.L530:
	.align	2, 0
.L529:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe59:
	.size	 CB2_EndRematchBattle,.Lfe59-CB2_EndRematchBattle
	.align	2, 0
	.globl	BattleSetup_StartRematchBattle
	.type	 BattleSetup_StartRematchBattle,function
	.thumb_func
BattleSetup_StartRematchBattle:
	push	{lr}
	ldr	r1, .L532
	mov	r0, #0x8
	str	r0, [r1]
	ldr	r1, .L532+0x4
	ldr	r0, .L532+0x8
	str	r0, [r1, #0x8]
	bl	DoTrainerBattle
	bl	ScriptContext1_Stop
	pop	{r0}
	bx	r0
.L533:
	.align	2, 0
.L532:
	.word	gBattleTypeFlags
	.word	gMain
	.word	CB2_EndRematchBattle
.Lfe60:
	.size	 BattleSetup_StartRematchBattle,.Lfe60-BattleSetup_StartRematchBattle
	.align	2, 0
	.globl	ShowTrainerIntroSpeech
	.type	 ShowTrainerIntroSpeech,function
	.thumb_func
ShowTrainerIntroSpeech:
	push	{lr}
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L535	@cond_branch
	ldr	r0, .L544
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bhi	.L536	@cond_branch
	ldr	r0, .L544+0x4
	ldrb	r0, [r0]
	bl	LocalIdToPyramidTrainerId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	CopyPyramidTrainerSpeechBefore
	b	.L541
.L545:
	.align	2, 0
.L544:
	.word	gNoOfApproachingTrainers
	.word	gSpecialVar_LastTalked
.L536:
	ldr	r3, .L546
	ldr	r2, .L546+0x4
	ldr	r0, .L546+0x8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x8]
	bl	LocalIdToPyramidTrainerId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	CopyPyramidTrainerSpeechBefore
	b	.L543
.L547:
	.align	2, 0
.L546:
	.word	gObjectEvents
	.word	gApproachingTrainers
	.word	gApproachingTrainerId
.L535:
	bl	InTrainerHillChallenge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L539	@cond_branch
	ldr	r0, .L548
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bhi	.L540	@cond_branch
	ldr	r0, .L548+0x4
	ldrb	r0, [r0]
	bl	LocalIdToHillTrainerId
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x2
	bl	CopyTrainerHillTrainerText
	b	.L541
.L549:
	.align	2, 0
.L548:
	.word	gNoOfApproachingTrainers
	.word	gSpecialVar_LastTalked
.L540:
	ldr	r3, .L550
	ldr	r2, .L550+0x4
	ldr	r0, .L550+0x8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x8]
	bl	LocalIdToHillTrainerId
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x2
	bl	CopyTrainerHillTrainerText
.L543:
.L541:
	bl	ShowFieldMessageFromBuffer
	b	.L538
.L551:
	.align	2, 0
.L550:
	.word	gObjectEvents
	.word	gApproachingTrainers
	.word	gApproachingTrainerId
.L539:
	bl	GetIntroSpeechOfApproachingTrainer
	bl	ShowFieldMessage
.L538:
	pop	{r0}
	bx	r0
.Lfe61:
	.size	 ShowTrainerIntroSpeech,.Lfe61-ShowTrainerIntroSpeech
	.align	2, 0
	.globl	BattleSetup_GetScriptAddrAfterBattle
	.type	 BattleSetup_GetScriptAddrAfterBattle,function
	.thumb_func
BattleSetup_GetScriptAddrAfterBattle:
	push	{lr}
	ldr	r0, .L556
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L555	@cond_branch
	ldr	r0, .L556+0x4
.L555:
	pop	{r1}
	bx	r1
.L557:
	.align	2, 0
.L556:
	.word	sTrainerBattleEndScript
	.word	EventScript_TestSignpostMsg
.Lfe62:
	.size	 BattleSetup_GetScriptAddrAfterBattle,.Lfe62-BattleSetup_GetScriptAddrAfterBattle
	.align	2, 0
	.globl	BattleSetup_GetTrainerPostBattleScript
	.type	 BattleSetup_GetTrainerPostBattleScript,function
	.thumb_func
BattleSetup_GetTrainerPostBattleScript:
	push	{lr}
	ldr	r1, .L564
	ldrb	r2, [r1]
	cmp	r2, #0
	beq	.L559	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L564+0x4
	ldr	r2, [r0]
	cmp	r2, #0
	beq	.L561	@cond_branch
	ldr	r1, .L564+0x8
	mov	r0, #0x1
	strh	r0, [r1]
	add	r0, r2, #0
	b	.L563
.L565:
	.align	2, 0
.L564:
	.word	sShouldCheckTrainerBScript
	.word	sTrainerBBattleScriptRetAddr
	.word	gWhichTrainerToFaceAfterBattle
.L559:
	ldr	r0, .L566
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L561	@cond_branch
	ldr	r0, .L566+0x4
	strh	r2, [r0]
	add	r0, r1, #0
	b	.L563
.L567:
	.align	2, 0
.L566:
	.word	sTrainerABattleScriptRetAddr
	.word	gWhichTrainerToFaceAfterBattle
.L561:
	ldr	r0, .L568
.L563:
	pop	{r1}
	bx	r1
.L569:
	.align	2, 0
.L568:
	.word	EventScript_TryGetTrainerScript
.Lfe63:
	.size	 BattleSetup_GetTrainerPostBattleScript,.Lfe63-BattleSetup_GetTrainerPostBattleScript
	.align	2, 0
	.globl	ShowTrainerCantBattleSpeech
	.type	 ShowTrainerCantBattleSpeech,function
	.thumb_func
ShowTrainerCantBattleSpeech:
	push	{lr}
	bl	GetTrainerCantBattleSpeech
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 ShowTrainerCantBattleSpeech,.Lfe64-ShowTrainerCantBattleSpeech
	.align	2, 0
	.globl	SetUpTrainerEncounterMusic
	.type	 SetUpTrainerEncounterMusic,function
	.thumb_func
SetUpTrainerEncounterMusic:
	push	{lr}
	ldr	r0, .L592
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L572	@cond_branch
	ldr	r0, .L592+0x4
	b	.L591
.L593:
	.align	2, 0
.L592:
	.word	gApproachingTrainerId
	.word	gTrainerBattleOpponent_A
.L572:
	ldr	r0, .L594
.L591:
	ldrh	r1, [r0]
	ldr	r0, .L594+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L574	@cond_branch
	cmp	r0, #0x8
	beq	.L574	@cond_branch
	add	r0, r1, #0
	bl	GetTrainerEncounterMusicId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xd
	bhi	.L589	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L594+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L595:
	.align	2, 0
.L594:
	.word	gTrainerBattleOpponent_B
	.word	sTrainerBattleMode
	.word	.L590
	.align	2, 0
	.align	2, 0
.L590:
	.word	.L576
	.word	.L577
	.word	.L578
	.word	.L589
	.word	.L579
	.word	.L580
	.word	.L581
	.word	.L582
	.word	.L583
	.word	.L584
	.word	.L585
	.word	.L586
	.word	.L587
	.word	.L588
.L576:
	mov	r0, #0xbe
	lsl	r0, r0, #0x1
	b	.L575
.L577:
	ldr	r0, .L596
	b	.L575
.L597:
	.align	2, 0
.L596:
	.word	0x197
.L578:
	ldr	r0, .L598
	b	.L575
.L599:
	.align	2, 0
.L598:
	.word	0x17b
.L579:
	mov	r0, #0xd0
	lsl	r0, r0, #0x1
	b	.L575
.L580:
	ldr	r0, .L600
	b	.L575
.L601:
	.align	2, 0
.L600:
	.word	0x1a1
.L581:
	ldr	r0, .L602
	b	.L575
.L603:
	.align	2, 0
.L602:
	.word	0x1a3
.L582:
	ldr	r0, .L604
	b	.L575
.L605:
	.align	2, 0
.L604:
	.word	0x1b9
.L583:
	ldr	r0, .L606
	b	.L575
.L607:
	.align	2, 0
.L606:
	.word	0x181
.L584:
	ldr	r0, .L608
	b	.L575
.L609:
	.align	2, 0
.L608:
	.word	0x1c1
.L585:
	mov	r0, #0xe1
	lsl	r0, r0, #0x1
	b	.L575
.L586:
	ldr	r0, .L610
	b	.L575
.L611:
	.align	2, 0
.L610:
	.word	0x1c3
.L587:
	ldr	r0, .L612
	b	.L575
.L613:
	.align	2, 0
.L612:
	.word	0x1c5
.L588:
	ldr	r0, .L614
	b	.L575
.L615:
	.align	2, 0
.L614:
	.word	0x18d
.L589:
	ldr	r0, .L616
.L575:
	bl	PlayNewMapMusic
.L574:
	pop	{r0}
	bx	r0
.L617:
	.align	2, 0
.L616:
	.word	0x1a7
.Lfe65:
	.size	 SetUpTrainerEncounterMusic,.Lfe65-SetUpTrainerEncounterMusic
	.align	2, 0
	.type	 ReturnEmptyStringIfNull,function
	.thumb_func
ReturnEmptyStringIfNull:
	push	{lr}
	cmp	r0, #0
	bne	.L621	@cond_branch
	ldr	r0, .L622
.L621:
	pop	{r1}
	bx	r1
.L623:
	.align	2, 0
.L622:
	.word	gText_EmptyString2
.Lfe66:
	.size	 ReturnEmptyStringIfNull,.Lfe66-ReturnEmptyStringIfNull
	.align	2, 0
	.type	 GetIntroSpeechOfApproachingTrainer,function
	.thumb_func
GetIntroSpeechOfApproachingTrainer:
	push	{lr}
	ldr	r0, .L630
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L625	@cond_branch
	ldr	r0, .L630+0x4
	b	.L629
.L631:
	.align	2, 0
.L630:
	.word	gApproachingTrainerId
	.word	sTrainerBIntroSpeech
.L625:
	ldr	r0, .L632
.L629:
	ldr	r0, [r0]
	bl	ReturnEmptyStringIfNull
	pop	{r1}
	bx	r1
.L633:
	.align	2, 0
.L632:
	.word	sTrainerAIntroSpeech
.Lfe67:
	.size	 GetIntroSpeechOfApproachingTrainer,.Lfe67-GetIntroSpeechOfApproachingTrainer
	.align	2, 0
	.globl	GetTrainerALoseText
	.type	 GetTrainerALoseText,function
	.thumb_func
GetTrainerALoseText:
	push	{r4, lr}
	ldr	r0, .L637
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L635	@cond_branch
	bl	GetSecretBaseTrainerLoseText
	b	.L636
.L638:
	.align	2, 0
.L637:
	.word	gTrainerBattleOpponent_A
.L635:
	ldr	r0, .L639
	ldr	r0, [r0]
.L636:
	ldr	r4, .L639+0x4
	bl	ReturnEmptyStringIfNull
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L640:
	.align	2, 0
.L639:
	.word	sTrainerADefeatSpeech
	.word	gStringVar4
.Lfe68:
	.size	 GetTrainerALoseText,.Lfe68-GetTrainerALoseText
	.align	2, 0
	.globl	GetTrainerBLoseText
	.type	 GetTrainerBLoseText,function
	.thumb_func
GetTrainerBLoseText:
	push	{r4, lr}
	ldr	r4, .L642
	ldr	r0, .L642+0x4
	ldr	r0, [r0]
	bl	ReturnEmptyStringIfNull
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L643:
	.align	2, 0
.L642:
	.word	gStringVar4
	.word	sTrainerBDefeatSpeech
.Lfe69:
	.size	 GetTrainerBLoseText,.Lfe69-GetTrainerBLoseText
	.align	2, 0
	.globl	GetTrainerWonSpeech
	.type	 GetTrainerWonSpeech,function
	.thumb_func
GetTrainerWonSpeech:
	push	{lr}
	ldr	r0, .L645
	ldr	r0, [r0]
	bl	ReturnEmptyStringIfNull
	pop	{r1}
	bx	r1
.L646:
	.align	2, 0
.L645:
	.word	sTrainerVictorySpeech
.Lfe70:
	.size	 GetTrainerWonSpeech,.Lfe70-GetTrainerWonSpeech
	.align	2, 0
	.type	 GetTrainerCantBattleSpeech,function
	.thumb_func
GetTrainerCantBattleSpeech:
	push	{lr}
	ldr	r0, .L648
	ldr	r0, [r0]
	bl	ReturnEmptyStringIfNull
	pop	{r1}
	bx	r1
.L649:
	.align	2, 0
.L648:
	.word	sTrainerCannotBattleSpeech
.Lfe71:
	.size	 GetTrainerCantBattleSpeech,.Lfe71-GetTrainerCantBattleSpeech
	.align	2, 0
	.type	 FirstBattleTrainerIdToRematchTableId,function
	.thumb_func
FirstBattleTrainerIdToRematchTableId:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r3, #0x0
	add	r2, r0, #0
.L654:
	ldrh	r0, [r2]
	cmp	r0, r1
	bne	.L653	@cond_branch
	add	r0, r3, #0
	b	.L657
.L653:
	add	r2, r2, #0x10
	add	r3, r3, #0x1
	cmp	r3, #0x4d
	ble	.L654	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L657:
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 FirstBattleTrainerIdToRematchTableId,.Lfe72-FirstBattleTrainerIdToRematchTableId
	.align	2, 0
	.type	 TrainerIdToRematchTableId,function
	.thumb_func
TrainerIdToRematchTableId:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	mov	r4, #0x0
	add	r2, r0, #0
.L662:
	mov	r1, #0x0
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L661	@cond_branch
	mov	r3, #0x0
.L667:
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, r5
	bne	.L665	@cond_branch
	add	r0, r4, #0
	b	.L671
.L665:
	add	r3, r3, #0x2
	add	r1, r1, #0x1
	cmp	r1, #0x4
	bgt	.L661	@cond_branch
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L667	@cond_branch
.L661:
	add	r2, r2, #0x10
	add	r4, r4, #0x1
	cmp	r4, #0x4d
	ble	.L662	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L671:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 TrainerIdToRematchTableId,.Lfe73-TrainerIdToRematchTableId
	.align	2, 0
	.type	 sub_80B1D94,function
	.thumb_func
sub_80B1D94:
	push	{lr}
	cmp	r0, #0x48
	ble	.L673	@cond_branch
	mov	r0, #0x1
	b	.L678
.L673:
	cmp	r0, #0x40
	bne	.L675	@cond_branch
	mov	r0, #0x7e
	bl	FlagGet
	mov	r1, #0x0
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L676	@cond_branch
	mov	r1, #0x1
.L676:
	add	r0, r1, #0
	b	.L678
.L675:
	mov	r0, #0x0
.L678:
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 sub_80B1D94,.Lfe74-sub_80B1D94
	.align	2, 0
	.type	 SetRematchIdForTrainer,function
	.thumb_func
SetRematchIdForTrainer:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	mov	r5, #0x1
	lsl	r1, r6, #0x4
	add	r1, r1, r0
	add	r4, r1, #0x2
	b	.L680
.L682:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
.L680:
	cmp	r5, #0x4
	bgt	.L681	@cond_branch
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L681	@cond_branch
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L682	@cond_branch
.L681:
	ldr	r0, .L687
	ldr	r0, [r0]
	ldr	r1, .L687+0x4
	add	r0, r0, r1
	add	r0, r0, r6
	strb	r5, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L688:
	.align	2, 0
.L687:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.Lfe75:
	.size	 SetRematchIdForTrainer,.Lfe75-SetRematchIdForTrainer
	.align	2, 0
	.type	 UpdateRandomTrainerRematches,function
	.thumb_func
UpdateRandomTrainerRematches:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r8, r2
	mov	r7, #0x0
	mov	r5, #0x0
	add	r4, r6, #0
	add	r4, r4, #0xa
.L693:
	ldrh	r0, [r4]
	cmp	r0, r9
	bne	.L692	@cond_branch
	ldrh	r0, [r4, #0x2]
	cmp	r0, r8
	bne	.L692	@cond_branch
	add	r0, r5, #0
	bl	sub_80B1D94
	cmp	r0, #0
	bne	.L692	@cond_branch
	ldr	r0, .L700
	ldr	r0, [r0]
	ldr	r1, .L700+0x4
	add	r0, r0, r1
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L699	@cond_branch
	mov	r1, #0xae
	lsl	r1, r1, #0x1
	add	r0, r5, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L692	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1e
	bhi	.L692	@cond_branch
	add	r0, r6, #0
	add	r1, r5, #0
	bl	SetRematchIdForTrainer
.L699:
	mov	r7, #0x1
.L692:
	add	r4, r4, #0x10
	add	r5, r5, #0x1
	cmp	r5, #0x40
	ble	.L693	@cond_branch
	add	r0, r7, #0
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L701:
	.align	2, 0
.L700:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.Lfe76:
	.size	 UpdateRandomTrainerRematches,.Lfe76-UpdateRandomTrainerRematches
	.align	2, 0
	.globl	UpdateRematchIfDefeated
	.type	 UpdateRematchIfDefeated,function
	.thumb_func
UpdateRematchIfDefeated:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L704
	lsl	r0, r4, #0x4
	add	r0, r0, r5
	ldrh	r0, [r0]
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L703	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	SetRematchIdForTrainer
.L703:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L705:
	.align	2, 0
.L704:
	.word	gRematchTable
.Lfe77:
	.size	 UpdateRematchIfDefeated,.Lfe77-UpdateRematchIfDefeated
	.align	2, 0
	.type	 DoesSomeoneWantRematchIn_,function
	.thumb_func
DoesSomeoneWantRematchIn_:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r1, #0x0
	add	r3, r0, #0
	add	r3, r3, #0xa
	ldr	r5, .L714
.L710:
	ldrh	r0, [r3]
	cmp	r0, r4
	bne	.L709	@cond_branch
	ldrh	r0, [r3, #0x2]
	cmp	r0, r2
	bne	.L709	@cond_branch
	ldr	r0, [r5]
	ldr	r6, .L714+0x4
	add	r0, r0, r6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L709	@cond_branch
	mov	r0, #0x1
	b	.L713
.L715:
	.align	2, 0
.L714:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.L709:
	add	r3, r3, #0x10
	add	r1, r1, #0x1
	cmp	r1, #0x4d
	ble	.L710	@cond_branch
	mov	r0, #0x0
.L713:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe78:
	.size	 DoesSomeoneWantRematchIn_,.Lfe78-DoesSomeoneWantRematchIn_
	.align	2, 0
	.type	 IsRematchTrainerIn_,function
	.thumb_func
IsRematchTrainerIn_:
	push	{r4, lr}
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r1, #0x0
	add	r3, r0, #0
	add	r3, r3, #0xa
.L720:
	ldrh	r0, [r3]
	cmp	r0, r4
	bne	.L719	@cond_branch
	ldrh	r0, [r3, #0x2]
	cmp	r0, r2
	bne	.L719	@cond_branch
	mov	r0, #0x1
	b	.L723
.L719:
	add	r3, r3, #0x10
	add	r1, r1, #0x1
	cmp	r1, #0x4d
	ble	.L720	@cond_branch
	mov	r0, #0x0
.L723:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 IsRematchTrainerIn_,.Lfe79-IsRematchTrainerIn_
	.align	2, 0
	.type	 IsFirstTrainerIdReadyForRematch,function
	.thumb_func
IsFirstTrainerIdReadyForRematch:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	FirstBattleTrainerIdToRematchTableId
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L727	@cond_branch
	cmp	r1, #0x63
	bgt	.L727	@cond_branch
	ldr	r0, .L729
	ldr	r0, [r0]
	ldr	r2, .L729+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L727	@cond_branch
	mov	r0, #0x1
	b	.L728
.L730:
	.align	2, 0
.L729:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.L727:
	mov	r0, #0x0
.L728:
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 IsFirstTrainerIdReadyForRematch,.Lfe80-IsFirstTrainerIdReadyForRematch
	.align	2, 0
	.type	 IsTrainerReadyForRematch_,function
	.thumb_func
IsTrainerReadyForRematch_:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	TrainerIdToRematchTableId
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L734	@cond_branch
	cmp	r1, #0x63
	bgt	.L734	@cond_branch
	ldr	r0, .L736
	ldr	r0, [r0]
	ldr	r2, .L736+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L734	@cond_branch
	mov	r0, #0x1
	b	.L735
.L737:
	.align	2, 0
.L736:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.L734:
	mov	r0, #0x0
.L735:
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 IsTrainerReadyForRematch_,.Lfe81-IsTrainerReadyForRematch_
	.align	2, 0
	.type	 GetRematchTrainerIdFromTable,function
	.thumb_func
GetRematchTrainerIdFromTable:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	FirstBattleTrainerIdToRematchTableId
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	bne	.L739	@cond_branch
	mov	r0, #0x0
	b	.L747
.L748:
	sub	r0, r6, #0x1
	lsl	r0, r0, #0x1
	add	r0, r7, r0
	ldrh	r0, [r0]
	b	.L750
.L749:
	ldrh	r0, [r5]
	b	.L750
.L739:
	lsl	r0, r1, #0x4
	add	r7, r4, r0
	mov	r6, #0x1
	add	r5, r7, #0x2
	add	r4, r5, #0
.L743:
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L748	@cond_branch
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L749	@cond_branch
	add	r4, r4, #0x2
	add	r5, r5, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L743	@cond_branch
	ldrh	r0, [r7, #0x8]
.L750:
.L747:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe82:
	.size	 GetRematchTrainerIdFromTable,.Lfe82-GetRematchTrainerIdFromTable
	.align	2, 0
	.type	 GetLastBeatenRematchTrainerIdFromTable,function
	.thumb_func
GetLastBeatenRematchTrainerIdFromTable:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	FirstBattleTrainerIdToRematchTableId
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	bne	.L752	@cond_branch
	mov	r0, #0x0
	b	.L760
.L761:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x1
	add	r0, r6, r0
	ldrh	r0, [r0]
	b	.L763
.L762:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x1
	add	r0, r6, r0
	ldrh	r0, [r0]
	b	.L763
.L752:
	lsl	r0, r1, #0x4
	add	r6, r4, r0
	mov	r5, #0x1
	add	r4, r6, #0x2
.L756:
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L761	@cond_branch
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L762	@cond_branch
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L756	@cond_branch
	ldrh	r0, [r6, #0x8]
.L763:
.L760:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 GetLastBeatenRematchTrainerIdFromTable,.Lfe83-GetLastBeatenRematchTrainerIdFromTable
	.align	2, 0
	.type	 ClearTrainerWantRematchState,function
	.thumb_func
ClearTrainerWantRematchState:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	TrainerIdToRematchTableId
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L765	@cond_branch
	ldr	r0, .L766
	ldr	r0, [r0]
	ldr	r2, .L766+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L765:
	pop	{r0}
	bx	r0
.L767:
	.align	2, 0
.L766:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.Lfe84:
	.size	 ClearTrainerWantRematchState,.Lfe84-ClearTrainerWantRematchState
	.align	2, 0
	.type	 GetTrainerMatchCallFlag,function
	.thumb_func
GetTrainerMatchCallFlag:
	push	{r4, lr}
	add	r3, r0, #0
	mov	r1, #0x0
	mov	r4, #0xae
	lsl	r4, r4, #0x1
	ldr	r2, .L776
.L772:
	ldrh	r0, [r2]
	cmp	r0, r3
	bne	.L771	@cond_branch
	add	r0, r1, r4
	b	.L775
.L777:
	.align	2, 0
.L776:
	.word	gRematchTable
.L771:
	add	r2, r2, #0x10
	add	r1, r1, #0x1
	cmp	r1, #0x4d
	ble	.L772	@cond_branch
	ldr	r0, .L778
.L775:
	pop	{r4}
	pop	{r1}
	bx	r1
.L779:
	.align	2, 0
.L778:
	.word	0xffff
.Lfe85:
	.size	 GetTrainerMatchCallFlag,.Lfe85-GetTrainerMatchCallFlag
	.align	2, 0
	.type	 RegisterTrainerInMatchCall,function
	.thumb_func
RegisterTrainerInMatchCall:
	push	{lr}
	ldr	r0, .L783
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L781	@cond_branch
	ldr	r0, .L783+0x4
	ldrh	r0, [r0]
	bl	GetTrainerMatchCallFlag
	add	r1, r0, #0
	ldr	r0, .L783+0x8
	cmp	r1, r0
	beq	.L781	@cond_branch
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
.L781:
	pop	{r0}
	bx	r0
.L784:
	.align	2, 0
.L783:
	.word	0x12f
	.word	gTrainerBattleOpponent_A
	.word	0xffff
.Lfe86:
	.size	 RegisterTrainerInMatchCall,.Lfe86-RegisterTrainerInMatchCall
	.align	2, 0
	.type	 WasSecondRematchWon,function
	.thumb_func
WasSecondRematchWon:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	FirstBattleTrainerIdToRematchTableId
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L787	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r4
	ldrh	r0, [r0, #0x2]
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L787	@cond_branch
	mov	r0, #0x1
	b	.L788
.L787:
	mov	r0, #0x0
.L788:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 WasSecondRematchWon,.Lfe87-WasSecondRematchWon
	.align	2, 0
	.type	 HasAtLeastFiveBadges,function
	.thumb_func
HasAtLeastFiveBadges:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r4, .L798
.L793:
	ldrh	r0, [r4]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L792	@cond_branch
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L792	@cond_branch
	mov	r0, #0x1
	b	.L797
.L799:
	.align	2, 0
.L798:
	.word	sBadgeFlags
.L792:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x7
	bls	.L793	@cond_branch
	mov	r0, #0x0
.L797:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe88:
	.size	 HasAtLeastFiveBadges,.Lfe88-HasAtLeastFiveBadges
	.align	2, 0
	.globl	IncrementRematchStepCounter
	.type	 IncrementRematchStepCounter,function
	.thumb_func
IncrementRematchStepCounter:
	push	{lr}
	bl	HasAtLeastFiveBadges
	cmp	r0, #0
	beq	.L801	@cond_branch
	ldr	r0, .L805
	ldr	r0, [r0]
	ldr	r2, .L805+0x4
	add	r1, r0, r2
	ldrh	r0, [r1]
	cmp	r0, #0xfe
	bls	.L802	@cond_branch
	mov	r0, #0xff
	b	.L804
.L806:
	.align	2, 0
.L805:
	.word	gSaveBlock1Ptr
	.word	0xfa8
.L802:
	add	r0, r0, #0x1
.L804:
	strh	r0, [r1]
.L801:
	pop	{r0}
	bx	r0
.Lfe89:
	.size	 IncrementRematchStepCounter,.Lfe89-IncrementRematchStepCounter
	.align	2, 0
	.type	 IsRematchStepCounterMaxed,function
	.thumb_func
IsRematchStepCounterMaxed:
	push	{lr}
	bl	HasAtLeastFiveBadges
	cmp	r0, #0
	beq	.L808	@cond_branch
	ldr	r0, .L811
	ldr	r0, [r0]
	ldr	r1, .L811+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xfe
	bls	.L808	@cond_branch
	mov	r0, #0x1
	b	.L810
.L812:
	.align	2, 0
.L811:
	.word	gSaveBlock1Ptr
	.word	0xfa8
.L808:
	mov	r0, #0x0
.L810:
	pop	{r1}
	bx	r1
.Lfe90:
	.size	 IsRematchStepCounterMaxed,.Lfe90-IsRematchStepCounterMaxed
	.align	2, 0
	.globl	TryUpdateRandomTrainerRematches
	.type	 TryUpdateRandomTrainerRematches,function
	.thumb_func
TryUpdateRandomTrainerRematches:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	bl	IsRematchStepCounterMaxed
	cmp	r0, #0
	beq	.L814	@cond_branch
	ldr	r0, .L815
	add	r1, r5, #0
	add	r2, r4, #0
	bl	UpdateRandomTrainerRematches
	cmp	r0, #0x1
	bne	.L814	@cond_branch
	ldr	r0, .L815+0x4
	ldr	r0, [r0]
	ldr	r1, .L815+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
.L814:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L816:
	.align	2, 0
.L815:
	.word	gRematchTable
	.word	gSaveBlock1Ptr
	.word	0xfa8
.Lfe91:
	.size	 TryUpdateRandomTrainerRematches,.Lfe91-TryUpdateRandomTrainerRematches
	.align	2, 0
	.globl	DoesSomeoneWantRematchIn
	.type	 DoesSomeoneWantRematchIn,function
	.thumb_func
DoesSomeoneWantRematchIn:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L818
	add	r1, r3, #0
	bl	DoesSomeoneWantRematchIn_
	pop	{r1}
	bx	r1
.L819:
	.align	2, 0
.L818:
	.word	gRematchTable
.Lfe92:
	.size	 DoesSomeoneWantRematchIn,.Lfe92-DoesSomeoneWantRematchIn
	.align	2, 0
	.globl	IsRematchTrainerIn
	.type	 IsRematchTrainerIn,function
	.thumb_func
IsRematchTrainerIn:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L821
	add	r1, r3, #0
	bl	IsRematchTrainerIn_
	pop	{r1}
	bx	r1
.L822:
	.align	2, 0
.L821:
	.word	gRematchTable
.Lfe93:
	.size	 IsRematchTrainerIn,.Lfe93-IsRematchTrainerIn
	.align	2, 0
	.type	 GetRematchTrainerId,function
	.thumb_func
GetRematchTrainerId:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L824
	bl	GetRematchTrainerIdFromTable
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L825:
	.align	2, 0
.L824:
	.word	gRematchTable
.Lfe94:
	.size	 GetRematchTrainerId,.Lfe94-GetRematchTrainerId
	.align	2, 0
	.globl	GetLastBeatenRematchTrainerId
	.type	 GetLastBeatenRematchTrainerId,function
	.thumb_func
GetLastBeatenRematchTrainerId:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L827
	bl	GetLastBeatenRematchTrainerIdFromTable
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L828:
	.align	2, 0
.L827:
	.word	gRematchTable
.Lfe95:
	.size	 GetLastBeatenRematchTrainerId,.Lfe95-GetLastBeatenRematchTrainerId
	.align	2, 0
	.globl	ShouldTryRematchBattle
	.type	 ShouldTryRematchBattle,function
	.thumb_func
ShouldTryRematchBattle:
	push	{r4, r5, lr}
	ldr	r5, .L832
	ldr	r4, .L832+0x4
	ldrh	r1, [r4]
	add	r0, r5, #0
	bl	IsFirstTrainerIdReadyForRematch
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L830	@cond_branch
	ldrh	r1, [r4]
	add	r0, r5, #0
	bl	WasSecondRematchWon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L831
.L833:
	.align	2, 0
.L832:
	.word	gRematchTable
	.word	gTrainerBattleOpponent_A
.L830:
	mov	r0, #0x1
.L831:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe96:
	.size	 ShouldTryRematchBattle,.Lfe96-ShouldTryRematchBattle
	.align	2, 0
	.globl	IsTrainerReadyForRematch
	.type	 IsTrainerReadyForRematch,function
	.thumb_func
IsTrainerReadyForRematch:
	push	{lr}
	ldr	r0, .L835
	ldr	r1, .L835+0x4
	ldrh	r1, [r1]
	bl	IsTrainerReadyForRematch_
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L836:
	.align	2, 0
.L835:
	.word	gRematchTable
	.word	gTrainerBattleOpponent_A
.Lfe97:
	.size	 IsTrainerReadyForRematch,.Lfe97-IsTrainerReadyForRematch
	.align	2, 0
	.type	 HandleRematchVarsOnBattleEnd,function
	.thumb_func
HandleRematchVarsOnBattleEnd:
	push	{lr}
	ldr	r0, .L838
	ldr	r1, .L838+0x4
	ldrh	r1, [r1]
	bl	ClearTrainerWantRematchState
	bl	SetBattledTrainersFlags
	pop	{r0}
	bx	r0
.L839:
	.align	2, 0
.L838:
	.word	gRematchTable
	.word	gTrainerBattleOpponent_A
.Lfe98:
	.size	 HandleRematchVarsOnBattleEnd,.Lfe98-HandleRematchVarsOnBattleEnd
	.align	2, 0
	.globl	ShouldTryGetTrainerScript
	.type	 ShouldTryGetTrainerScript,function
	.thumb_func
ShouldTryGetTrainerScript:
	push	{lr}
	ldr	r1, .L844
	ldrb	r0, [r1]
	cmp	r0, #0x1
	bls	.L841	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L844+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L844+0x8
	mov	r0, #0x1
	b	.L843
.L845:
	.align	2, 0
.L844:
	.word	sNoOfPossibleTrainerRetScripts
	.word	sShouldCheckTrainerBScript
	.word	gSpecialVar_Result
.L841:
	ldr	r1, .L846
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L846+0x4
	mov	r0, #0x0
.L843:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L847:
	.align	2, 0
.L846:
	.word	sShouldCheckTrainerBScript
	.word	gSpecialVar_Result
.Lfe99:
	.size	 ShouldTryGetTrainerScript,.Lfe99-ShouldTryGetTrainerScript
	.align	2, 0
	.globl	CountBattledRematchTeams
	.type	 CountBattledRematchTeams,function
	.thumb_func
CountBattledRematchTeams:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	ldr	r7, .L858
	lsr	r4, r0, #0xc
	add	r6, r4, r7
	ldrh	r0, [r6]
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L849	@cond_branch
	mov	r0, #0x0
	b	.L857
.L859:
	.align	2, 0
.L858:
	.word	gRematchTable
.L849:
	mov	r5, #0x1
	add	r0, r4, #0x2
	add	r0, r0, r7
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L851	@cond_branch
	add	r4, r6, #0x2
.L854:
	ldrh	r0, [r4]
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L851	@cond_branch
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x4
	bgt	.L851	@cond_branch
	ldrh	r0, [r4]
	cmp	r0, #0
	bne	.L854	@cond_branch
.L851:
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
.L857:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe100:
	.size	 CountBattledRematchTeams,.Lfe100-CountBattledRematchTeams
.text
	.align	2, 0

