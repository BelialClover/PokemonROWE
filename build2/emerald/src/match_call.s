@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gMatchCallState
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gMatchCallState,object
	.size	 gMatchCallState,8
gMatchCallState:
	.word	0x0
	.space	4
	.globl	gBattleFrontierStreakInfo
	.align	2, 0
	.type	 gBattleFrontierStreakInfo,object
	.size	 gBattleFrontierStreakInfo,4
gBattleFrontierStreakInfo:
	.short	0x0
	.space	2
	.section .rodata
	.align	2, 0
	.type	 sMatchCallTrainers,object
sMatchCallTrainers:
	.short	0x25
	.short	0x0
	.short	0x108
	.short	0x208
	.short	0x308
	.short	0x103
	.byte	0x8
	.space	1
	.short	0x108
	.short	0x208
	.space	2
	.short	0x2e1
	.short	0x0
	.short	0x10c
	.short	0x20c
	.short	0x30c
	.short	0x13e
	.byte	0xc
	.space	1
	.short	0x10c
	.short	0x20c
	.space	2
	.short	0x2c
	.short	0x0
	.short	0x10c
	.short	0x20c
	.short	0x30c
	.short	0x104
	.byte	0xc
	.space	1
	.short	0x10c
	.short	0x20c
	.space	2
	.short	0x39
	.short	0x0
	.short	0x102
	.short	0x202
	.short	0x302
	.short	0x105
	.byte	0x2
	.space	1
	.short	0x102
	.short	0x202
	.space	2
	.short	0x40
	.short	0x0
	.short	0x101
	.short	0x201
	.short	0x301
	.short	0x106
	.byte	0x1
	.space	1
	.short	0x101
	.short	0x201
	.space	2
	.short	0x2af
	.short	0x4
	.short	0x101
	.short	0x201
	.short	0x301
	.short	0x13d
	.byte	0x1
	.space	1
	.short	0x101
	.short	0x201
	.space	2
	.short	0x2ff
	.short	0x0
	.short	0x10a
	.short	0x20a
	.short	0x30a
	.short	0x140
	.byte	0xa
	.space	1
	.short	0x10a
	.short	0x20a
	.space	2
	.short	0x5e
	.short	0x0
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x108
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x4e
	.short	0x0
	.short	0x106
	.short	0x206
	.short	0x306
	.short	0x107
	.byte	0x6
	.space	1
	.short	0x106
	.short	0x206
	.space	2
	.short	0x6c
	.short	0x0
	.short	0x108
	.short	0x208
	.short	0x308
	.short	0x109
	.byte	0x8
	.space	1
	.short	0x108
	.short	0x208
	.space	2
	.short	0x72
	.short	0x0
	.short	0x108
	.short	0x208
	.short	0x308
	.short	0x10a
	.byte	0x8
	.space	1
	.short	0x108
	.short	0x208
	.space	2
	.short	0x90
	.short	0x0
	.short	0x108
	.short	0x20a
	.short	0x30a
	.short	0x10e
	.byte	0xa
	.space	1
	.short	0x108
	.short	0x20a
	.space	2
	.short	0x7f
	.short	0x0
	.short	0x10a
	.short	0x20a
	.short	0x30a
	.short	0x10b
	.byte	0xa
	.space	1
	.short	0x108
	.short	0x20a
	.space	2
	.short	0x88
	.short	0x0
	.short	0x104
	.short	0x204
	.short	0x304
	.short	0x10c
	.byte	0x4
	.space	1
	.short	0x104
	.short	0x204
	.space	2
	.short	0x8f
	.short	0x0
	.short	0x107
	.short	0x207
	.short	0x307
	.short	0x10d
	.byte	0x7
	.space	1
	.short	0x107
	.short	0x207
	.space	2
	.short	0x9b
	.short	0x0
	.short	0x105
	.short	0x205
	.short	0x305
	.short	0x10f
	.byte	0x5
	.space	1
	.short	0x105
	.short	0x205
	.space	2
	.short	0xb7
	.short	0x0
	.short	0x103
	.short	0x203
	.short	0x303
	.short	0x110
	.byte	0x3
	.space	1
	.short	0x103
	.short	0x203
	.space	2
	.short	0x2a0
	.short	0x0
	.short	0x103
	.short	0x203
	.short	0x303
	.short	0x13b
	.byte	0x3
	.space	1
	.short	0x103
	.short	0x203
	.space	2
	.short	0xc3
	.short	0x0
	.short	0x106
	.short	0x206
	.short	0x306
	.short	0x111
	.byte	0x6
	.space	1
	.short	0x106
	.short	0x206
	.space	2
	.short	0xc4
	.short	0x0
	.short	0x104
	.short	0x204
	.short	0x304
	.short	0x112
	.byte	0x4
	.space	1
	.short	0x104
	.short	0x204
	.space	2
	.short	0xce
	.short	0x0
	.short	0x10b
	.short	0x20b
	.short	0x30b
	.short	0x113
	.byte	0xb
	.space	1
	.short	0x10b
	.short	0x20b
	.space	2
	.short	0xd8
	.short	0x0
	.short	0x101
	.short	0x201
	.short	0x301
	.short	0x114
	.byte	0x1
	.space	1
	.short	0x101
	.short	0x201
	.space	2
	.short	0x2a9
	.short	0x3
	.short	0x10c
	.short	0x20c
	.short	0x30c
	.short	0x13c
	.byte	0xc
	.space	1
	.short	0x10c
	.short	0x20c
	.space	2
	.short	0xe2
	.short	0x0
	.short	0x107
	.short	0x207
	.short	0x307
	.short	0x115
	.byte	0x7
	.space	1
	.short	0x107
	.short	0x207
	.space	2
	.short	0xee
	.short	0x0
	.short	0x104
	.short	0x204
	.short	0x304
	.short	0x116
	.byte	0x1
	.space	1
	.short	0x104
	.short	0x204
	.space	2
	.short	0xf9
	.short	0x0
	.short	0x108
	.short	0x208
	.short	0x308
	.short	0x117
	.byte	0x8
	.space	1
	.short	0x108
	.short	0x208
	.space	2
	.short	0xfe
	.short	0x0
	.short	0x10c
	.short	0x20c
	.short	0x30c
	.short	0x118
	.byte	0xc
	.space	1
	.short	0x10c
	.short	0x20c
	.space	2
	.short	0x118
	.short	0x0
	.short	0x102
	.short	0x202
	.short	0x302
	.short	0x11a
	.byte	0x2
	.space	1
	.short	0x102
	.short	0x202
	.space	2
	.short	0x111
	.short	0x0
	.short	0x101
	.short	0x201
	.short	0x301
	.short	0x119
	.byte	0x1
	.space	1
	.short	0x101
	.short	0x201
	.space	2
	.short	0x11f
	.short	0x6
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x11b
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x12e
	.short	0x0
	.short	0x10e
	.short	0x20e
	.short	0x30e
	.short	0x11d
	.byte	0xe
	.space	1
	.short	0x10e
	.short	0x20e
	.space	2
	.short	0x125
	.short	0x0
	.short	0x10b
	.short	0x20b
	.short	0x30b
	.short	0x11c
	.byte	0xb
	.space	1
	.short	0x10b
	.short	0x20b
	.space	2
	.short	0x133
	.short	0x0
	.short	0x10c
	.short	0x20c
	.short	0x30c
	.short	0x11e
	.byte	0xc
	.space	1
	.short	0x10c
	.short	0x20c
	.space	2
	.short	0x139
	.short	0x0
	.short	0x10d
	.short	0x20d
	.short	0x30d
	.short	0x11f
	.byte	0xd
	.space	1
	.short	0x10d
	.short	0x20d
	.space	2
	.short	0x13e
	.short	0x0
	.short	0x101
	.short	0x201
	.short	0x301
	.short	0x120
	.byte	0x1
	.space	1
	.short	0x101
	.short	0x201
	.space	2
	.short	0x153
	.short	0x0
	.short	0x103
	.short	0x203
	.short	0x303
	.short	0x121
	.byte	0x3
	.space	1
	.short	0x103
	.short	0x203
	.space	2
	.short	0x178
	.short	0x0
	.short	0x105
	.short	0x205
	.short	0x305
	.short	0x126
	.byte	0x5
	.space	1
	.short	0x105
	.short	0x205
	.space	2
	.short	0x171
	.short	0x0
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x125
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x166
	.short	0x0
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x123
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x16c
	.short	0x0
	.short	0x105
	.short	0x205
	.short	0x305
	.short	0x124
	.byte	0x5
	.space	1
	.short	0x105
	.short	0x205
	.space	2
	.short	0x182
	.short	0x0
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x128
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x161
	.short	0x0
	.short	0x105
	.short	0x205
	.short	0x305
	.short	0x122
	.byte	0x5
	.space	1
	.short	0x105
	.short	0x205
	.space	2
	.short	0x179
	.short	0x0
	.short	0x105
	.short	0x205
	.short	0x305
	.short	0x127
	.byte	0x5
	.space	1
	.short	0x105
	.short	0x205
	.space	2
	.short	0x188
	.short	0x0
	.short	0x104
	.short	0x204
	.short	0x304
	.short	0x129
	.byte	0x4
	.space	1
	.short	0x104
	.short	0x204
	.space	2
	.short	0x196
	.short	0x0
	.short	0x106
	.short	0x206
	.short	0x306
	.short	0x12a
	.byte	0x6
	.space	1
	.short	0x106
	.short	0x206
	.space	2
	.short	0x1a3
	.short	0x0
	.short	0x101
	.short	0x201
	.short	0x301
	.short	0x12b
	.byte	0x1
	.space	1
	.short	0x101
	.short	0x201
	.space	2
	.short	0x1ab
	.short	0x0
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x12c
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x1b2
	.short	0x0
	.short	0x108
	.short	0x208
	.short	0x308
	.short	0x12d
	.byte	0x8
	.space	1
	.short	0x108
	.short	0x208
	.space	2
	.short	0x1c1
	.short	0x0
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x12e
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x1da
	.short	0x0
	.short	0x102
	.short	0x202
	.short	0x302
	.short	0x12f
	.byte	0x2
	.space	1
	.short	0x102
	.short	0x202
	.space	2
	.short	0x1e1
	.short	0x2
	.short	0x102
	.short	0x202
	.short	0x302
	.short	0x130
	.byte	0x1
	.space	1
	.short	0x102
	.short	0x202
	.space	2
	.short	0x1ec
	.short	0x0
	.short	0x103
	.short	0x203
	.short	0x303
	.short	0x131
	.byte	0x3
	.space	1
	.short	0x103
	.short	0x203
	.space	2
	.short	0x2e4
	.short	0x0
	.short	0x103
	.short	0x203
	.short	0x303
	.short	0x13f
	.byte	0x3
	.space	1
	.short	0x103
	.short	0x203
	.space	2
	.short	0x200
	.short	0x0
	.short	0x107
	.short	0x207
	.short	0x307
	.short	0x132
	.byte	0x7
	.space	1
	.short	0x107
	.short	0x207
	.space	2
	.short	0x221
	.short	0x0
	.short	0x108
	.short	0x208
	.short	0x308
	.short	0x134
	.byte	0x8
	.space	1
	.short	0x108
	.short	0x208
	.space	2
	.short	0x21a
	.short	0x0
	.short	0x105
	.short	0x205
	.short	0x305
	.short	0x133
	.byte	0x5
	.space	1
	.short	0x105
	.short	0x205
	.space	2
	.short	0x9
	.short	0x0
	.short	0x108
	.short	0x208
	.short	0x308
	.short	0x102
	.byte	0x8
	.space	1
	.short	0x108
	.short	0x208
	.space	2
	.short	0x22f
	.short	0x0
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x136
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.short	0x228
	.short	0x0
	.short	0x105
	.short	0x205
	.short	0x305
	.short	0x135
	.byte	0x5
	.space	1
	.short	0x105
	.short	0x205
	.space	2
	.short	0x25c
	.short	0x0
	.short	0x102
	.short	0x202
	.short	0x302
	.short	0x137
	.byte	0x2
	.space	1
	.short	0x102
	.short	0x202
	.space	2
	.short	0x26d
	.short	0x0
	.short	0x101
	.short	0x201
	.short	0x301
	.short	0x138
	.byte	0x1
	.space	1
	.short	0x101
	.short	0x201
	.space	2
	.short	0x273
	.short	0x0
	.short	0x103
	.short	0x203
	.short	0x303
	.short	0x139
	.byte	0x3
	.space	1
	.short	0x103
	.short	0x203
	.space	2
	.short	0x1
	.short	0x0
	.short	0x10f
	.short	0x203
	.short	0x303
	.short	0x101
	.byte	0x3
	.space	1
	.short	0x103
	.short	0x203
	.space	2
	.short	0x282
	.short	0x1
	.short	0x109
	.short	0x209
	.short	0x309
	.short	0x13a
	.byte	0x9
	.space	1
	.short	0x109
	.short	0x209
	.space	2
	.size	 sMatchCallTrainers,1280
	.align	2, 0
	.type	 sMatchCallWildBattleTexts,object
sMatchCallWildBattleTexts:
	.word	MatchCall_WildBattleText1
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText2
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText3
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText4
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText5
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText6
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText7
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText8
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText9
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText10
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText11
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText12
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText13
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText14
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_WildBattleText15
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.size	 sMatchCallWildBattleTexts,120
	.align	2, 0
	.type	 sMatchCallNegativeBattleTexts,object
sMatchCallNegativeBattleTexts:
	.word	MatchCall_NegativeBattleText1
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText2
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText3
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText4
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText5
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText6
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText7
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText8
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText9
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText10
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText11
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText12
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText13
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_NegativeBattleText14
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.size	 sMatchCallNegativeBattleTexts,112
	.align	2, 0
	.type	 sMatchCallPositiveBattleTexts,object
sMatchCallPositiveBattleTexts:
	.word	MatchCall_PositiveBattleText1
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText2
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText3
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText4
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText5
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText6
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText7
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText8
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText9
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText10
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText11
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText12
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText13
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PositiveBattleText14
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.size	 sMatchCallPositiveBattleTexts,112
	.align	2, 0
	.type	 sMatchCallSameRouteBattleRequestTexts,object
sMatchCallSameRouteBattleRequestTexts:
	.word	MatchCall_SameRouteBattleRequestText1
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText2
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText3
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText4
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText5
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText6
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText7
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText8
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText9
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText10
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText11
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText12
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText13
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_SameRouteBattleRequestText14
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.size	 sMatchCallSameRouteBattleRequestTexts,112
	.align	2, 0
	.type	 sMatchCallDifferentRouteBattleRequestTexts,object
sMatchCallDifferentRouteBattleRequestTexts:
	.word	MatchCall_DifferentRouteBattleRequestText1
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText2
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText3
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText4
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText5
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText6
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText7
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText8
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText9
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText10
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText11
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText12
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText13
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_DifferentRouteBattleRequestText14
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.size	 sMatchCallDifferentRouteBattleRequestTexts,112
	.align	2, 0
	.type	 sMatchCallPersonalizedTexts,object
sMatchCallPersonalizedTexts:
	.word	MatchCall_PersonalizedText1
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText2
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText3
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText4
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText5
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText6
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText7
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText8
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText9
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText10
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText11
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText12
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText13
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText14
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText15
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText16
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText17
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText18
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText19
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText20
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText21
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText22
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText23
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText24
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText25
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText26
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText27
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText28
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText29
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText30
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText31
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText32
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText33
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText34
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText35
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText36
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText37
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText38
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText39
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText40
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText41
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText42
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText43
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText44
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText45
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText46
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText47
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText48
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText49
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText50
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText51
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText52
	.byte	0x0
	.byte	0x3
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText53
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText54
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText55
	.byte	0x0
	.byte	0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText56
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText57
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText58
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText59
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText60
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText61
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText62
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText63
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.word	MatchCall_PersonalizedText64
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.space	1
	.size	 sMatchCallPersonalizedTexts,512
	.align	2, 0
	.type	 sMatchCallBattleFrontierStreakTexts,object
sMatchCallBattleFrontierStreakTexts:
	.word	MatchCall_BattleFrontierStreakText1
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText2
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText3
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText4
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText5
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText6
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText7
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText8
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText9
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText10
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText11
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText12
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText13
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierStreakText14
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.size	 sMatchCallBattleFrontierStreakTexts,112
	.align	2, 0
	.type	 sMatchCallBattleFrontierRecordStreakTexts,object
sMatchCallBattleFrontierRecordStreakTexts:
	.word	MatchCall_BattleFrontierRecordStreakText1
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText2
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText3
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText4
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText5
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText6
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText7
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText8
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText9
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText10
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText11
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText12
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText13
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleFrontierRecordStreakText14
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.size	 sMatchCallBattleFrontierRecordStreakTexts,112
	.align	2, 0
	.type	 sMatchCallBattleDomeTexts,object
sMatchCallBattleDomeTexts:
	.word	MatchCall_BattleDomeText1
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText2
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText3
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText4
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText5
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText6
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText7
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText8
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText9
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText10
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText11
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText12
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText13
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattleDomeText14
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.size	 sMatchCallBattleDomeTexts,112
	.align	2, 0
	.type	 sMatchCallBattlePikeTexts,object
sMatchCallBattlePikeTexts:
	.word	MatchCall_BattlePikeText1
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText2
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText3
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText4
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText5
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText6
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText7
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText8
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText9
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText10
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText11
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText12
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText13
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePikeText14
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.size	 sMatchCallBattlePikeTexts,112
	.align	2, 0
	.type	 sMatchCallBattlePyramidTexts,object
sMatchCallBattlePyramidTexts:
	.word	MatchCall_BattlePyramidText1
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText2
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText3
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText4
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText5
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText6
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText7
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText8
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText9
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText10
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText11
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText12
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText13
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.word	MatchCall_BattlePyramidText14
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.space	1
	.size	 sMatchCallBattlePyramidTexts,112
	.align	2, 0
	.type	 sMatchCallBattleTopics,object
sMatchCallBattleTopics:
	.word	sMatchCallWildBattleTexts
	.word	sMatchCallNegativeBattleTexts
	.word	sMatchCallPositiveBattleTexts
	.size	 sMatchCallBattleTopics,12
	.align	2, 0
	.type	 sMatchCallBattleRequestTopics,object
sMatchCallBattleRequestTopics:
	.word	sMatchCallSameRouteBattleRequestTexts
	.word	sMatchCallDifferentRouteBattleRequestTexts
	.size	 sMatchCallBattleRequestTopics,8
	.align	2, 0
	.type	 sMatchCallGeneralTopics,object
sMatchCallGeneralTopics:
	.word	sMatchCallPersonalizedTexts
	.word	sMatchCallBattleFrontierStreakTexts
	.word	sMatchCallBattleFrontierRecordStreakTexts
	.word	sMatchCallBattleDomeTexts
	.word	sMatchCallBattlePikeTexts
	.word	sMatchCallBattlePyramidTexts
	.size	 sMatchCallGeneralTopics,24
.text
	.align	2, 0
	.globl	InitMatchCallCounters
	.type	 InitMatchCallCounters,function
	.thumb_func
InitMatchCallCounters:
	push	{lr}
	bl	RtcCalcLocalTime
	ldr	r0, .L3
	bl	GetCurrentTotalMinutes
	ldr	r1, .L3+0x4
	add	r0, r0, #0xa
	str	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gLocalTime
	.word	gMatchCallState
.Lfe1:
	.size	 InitMatchCallCounters,.Lfe1-InitMatchCallCounters
	.align	2, 0
	.type	 GetCurrentTotalMinutes,function
	.thumb_func
GetCurrentTotalMinutes:
	add	r3, r0, #0
	mov	r1, #0x0
	ldrsh	r0, [r3, r1]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x5
	mov	r2, #0x2
	ldrsb	r2, [r3, r2]
	lsl	r1, r2, #0x4
	sub	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x3
	ldrsb	r1, [r3, r1]
	add	r0, r0, r1
	bx	lr
.Lfe2:
	.size	 GetCurrentTotalMinutes,.Lfe2-GetCurrentTotalMinutes
	.align	2, 0
	.type	 UpdateMatchCallMinutesCounter,function
	.thumb_func
UpdateMatchCallMinutesCounter:
	push	{lr}
	bl	RtcCalcLocalTime
	ldr	r0, .L10
	bl	GetCurrentTotalMinutes
	add	r1, r0, #0
	ldr	r2, .L10+0x4
	ldr	r0, [r2]
	cmp	r0, r1
	bhi	.L8	@cond_branch
	sub	r0, r1, r0
	cmp	r0, #0x9
	bls	.L7	@cond_branch
.L8:
	str	r1, [r2]
	mov	r0, #0x1
	b	.L9
.L11:
	.align	2, 0
.L10:
	.word	gLocalTime
	.word	gMatchCallState
.L7:
	mov	r0, #0x0
.L9:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 UpdateMatchCallMinutesCounter,.Lfe3-UpdateMatchCallMinutesCounter
	.align	2, 0
	.type	 CheckMatchCallChance,function
	.thumb_func
CheckMatchCallChance:
	push	{r4, r5, lr}
	mov	r5, #0x1
	ldr	r4, .L17
	add	r0, r4, #0
	mov	r1, #0x6
	bl	GetMonData
	cmp	r0, #0
	bne	.L13	@cond_branch
	add	r0, r4, #0
	bl	GetMonAbility
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1f
	bne	.L13	@cond_branch
	mov	r5, #0x2
.L13:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r5, #0x1
	add	r1, r1, r5
	cmp	r0, r1
	blt	.L14	@cond_branch
	mov	r0, #0x0
	b	.L16
.L18:
	.align	2, 0
.L17:
	.word	gPlayerParty
.L14:
	mov	r0, #0x1
.L16:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 CheckMatchCallChance,.Lfe4-CheckMatchCallChance
	.align	2, 0
	.type	 MapAllowsMatchCall,function
	.thumb_func
MapAllowsMatchCall:
	push	{r4, lr}
	ldr	r4, .L26
	ldrb	r0, [r4, #0x17]
	bl	Overworld_MapTypeAllowsTeleportAndFly
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L25	@cond_branch
	ldrb	r0, [r4, #0x14]
	cmp	r0, #0x39
	beq	.L25	@cond_branch
	cmp	r0, #0xe
	bne	.L22	@cond_branch
	mov	r0, #0xf9
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L22	@cond_branch
	mov	r0, #0xdc
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L25	@cond_branch
.L22:
	ldr	r0, .L26
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0x38
	bne	.L23	@cond_branch
	mov	r0, #0xcf
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L23	@cond_branch
	mov	r0, #0x8b
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L23	@cond_branch
.L25:
	mov	r0, #0x0
	b	.L24
.L27:
	.align	2, 0
.L26:
	.word	gMapHeader
.L23:
	mov	r0, #0x1
.L24:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 MapAllowsMatchCall,.Lfe5-MapAllowsMatchCall
	.align	2, 0
	.type	 UpdateMatchCallStepCounter,function
	.thumb_func
UpdateMatchCallStepCounter:
	push	{lr}
	ldr	r1, .L32
	ldrb	r0, [r1, #0x6]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x6]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bhi	.L29	@cond_branch
	mov	r0, #0x0
	b	.L31
.L33:
	.align	2, 0
.L32:
	.word	gMatchCallState
.L29:
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	mov	r0, #0x1
.L31:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 UpdateMatchCallStepCounter,.Lfe6-UpdateMatchCallStepCounter
	.align	2, 0
	.type	 SelectMatchCallTrainer,function
	.thumb_func
SelectMatchCallTrainer:
	push	{r4, lr}
	bl	GetNumRegisteredNPCs
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L39	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	__umodsi3
	bl	GetActiveMatchCallTrainerId
	ldr	r2, .L40
	mov	r1, #0x0
	strh	r0, [r2, #0x4]
	strb	r1, [r2, #0x7]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x4e
	beq	.L39	@cond_branch
	ldrh	r0, [r2, #0x4]
	bl	GetTrainerMatchCallId
	add	r4, r0, #0
	bl	GetRematchTrainerLocation
	ldr	r1, .L40+0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x14]
	cmp	r0, r1
	bne	.L37	@cond_branch
	add	r0, r4, #0
	bl	TrainerIsEligibleForRematch
	cmp	r0, #0
	bne	.L37	@cond_branch
.L39:
	mov	r0, #0x0
	b	.L38
.L41:
	.align	2, 0
.L40:
	.word	gMatchCallState
	.word	gMapHeader
.L37:
	mov	r0, #0x1
.L38:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 SelectMatchCallTrainer,.Lfe7-SelectMatchCallTrainer
	.align	2, 0
	.type	 GetNumRegisteredNPCs,function
	.thumb_func
GetNumRegisteredNPCs:
	push	{r4, r5, lr}
	mov	r4, #0x0
	mov	r5, #0x0
.L46:
	mov	r1, #0xae
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L45	@cond_branch
	add	r5, r5, #0x1
.L45:
	add	r4, r4, #0x1
	cmp	r4, #0x3f
	bls	.L46	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 GetNumRegisteredNPCs,.Lfe8-GetNumRegisteredNPCs
	.align	2, 0
	.type	 GetActiveMatchCallTrainerId,function
	.thumb_func
GetActiveMatchCallTrainerId:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r4, #0x0
	ldr	r6, .L58
.L53:
	mov	r1, #0xae
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L52	@cond_branch
	cmp	r5, #0
	bne	.L55	@cond_branch
	ldrh	r0, [r6]
	b	.L57
.L59:
	.align	2, 0
.L58:
	.word	gRematchTable
.L55:
	sub	r5, r5, #0x1
.L52:
	add	r6, r6, #0x10
	add	r4, r4, #0x1
	cmp	r4, #0x3f
	bls	.L53	@cond_branch
	mov	r0, #0x4e
.L57:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 GetActiveMatchCallTrainerId,.Lfe9-GetActiveMatchCallTrainerId
	.align	2, 0
	.globl	TryStartMatchCall
	.type	 TryStartMatchCall,function
	.thumb_func
TryStartMatchCall:
	push	{lr}
	ldr	r0, .L63
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L61	@cond_branch
	bl	UpdateMatchCallStepCounter
	cmp	r0, #0
	beq	.L61	@cond_branch
	bl	UpdateMatchCallMinutesCounter
	cmp	r0, #0
	beq	.L61	@cond_branch
	bl	CheckMatchCallChance
	cmp	r0, #0
	beq	.L61	@cond_branch
	bl	MapAllowsMatchCall
	cmp	r0, #0
	beq	.L61	@cond_branch
	bl	SelectMatchCallTrainer
	cmp	r0, #0
	beq	.L61	@cond_branch
	bl	StartMatchCall
	mov	r0, #0x1
	b	.L62
.L64:
	.align	2, 0
.L63:
	.word	0x12f
.L61:
	mov	r0, #0x0
.L62:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 TryStartMatchCall,.Lfe10-TryStartMatchCall
	.align	2, 0
	.globl	StartMatchCallFromScript
	.type	 StartMatchCallFromScript,function
	.thumb_func
StartMatchCallFromScript:
	push	{lr}
	ldr	r1, .L66
	mov	r0, #0x1
	strb	r0, [r1, #0x7]
	bl	StartMatchCall
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	gMatchCallState
.Lfe11:
	.size	 StartMatchCallFromScript,.Lfe11-StartMatchCallFromScript
	.align	2, 0
	.globl	IsMatchCallTaskActive
	.type	 IsMatchCallTaskActive,function
	.thumb_func
IsMatchCallTaskActive:
	push	{lr}
	ldr	r0, .L69
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L70:
	.align	2, 0
.L69:
	.word	ExecuteMatchCall
.Lfe12:
	.size	 IsMatchCallTaskActive,.Lfe12-IsMatchCallTaskActive
	.align	2, 0
	.type	 StartMatchCall,function
	.thumb_func
StartMatchCall:
	push	{lr}
	ldr	r0, .L73
	ldrb	r0, [r0, #0x7]
	cmp	r0, #0
	bne	.L72	@cond_branch
	bl	ScriptContext2_Enable
	bl	FreezeObjectEvents
	bl	sub_808B864
	bl	sub_808BCF4
.L72:
	ldr	r0, .L73+0x4
	bl	PlaySE
	ldr	r0, .L73+0x8
	mov	r1, #0x1
	bl	CreateTask
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	gMatchCallState
	.word	0x107
	.word	ExecuteMatchCall
.Lfe13:
	.size	 StartMatchCall,.Lfe13-StartMatchCall
	.section .rodata
	.align	1, 0
	.type	 sUnknown_0860EA4C,object
sUnknown_0860EA4C:
	.short	0x0
	.short	0x7fff
	.short	0x0
	.short	0x6718
	.short	0x4b64
	.short	0x5bad
	.short	0x6bf6
	.short	0x7f1a
	.short	0x7f9d
	.short	0x5aff
	.short	0x6b7f
	.short	0x257
	.short	0x73bd
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sUnknown_0860EA4C,32
	.type	 sUnknown_0860EA6C,object
sUnknown_0860EA6C:
	.byte	0x60
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x46
	.byte	0x54
	.byte	0x55
	.byte	0x55
	.byte	0x46
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x46
	.byte	0x55
	.byte	0x44
	.byte	0x44
	.byte	0x46
	.byte	0x55
	.byte	0x44
	.byte	0xbb
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0x33
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0xcc
	.byte	0xcc
	.byte	0xcc
	.byte	0xcc
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x6
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x45
	.byte	0x64
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x64
	.byte	0x44
	.byte	0x44
	.byte	0x55
	.byte	0x64
	.byte	0xbb
	.byte	0x44
	.byte	0x55
	.byte	0x64
	.byte	0x33
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0xc3
	.byte	0x46
	.byte	0x55
	.byte	0xb4
	.byte	0x33
	.byte	0x46
	.byte	0x55
	.byte	0x44
	.byte	0xbb
	.byte	0x46
	.byte	0x55
	.byte	0x44
	.byte	0x44
	.byte	0x46
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x46
	.byte	0x54
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x60
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0xcc
	.byte	0xcc
	.byte	0xcc
	.byte	0xcc
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x3c
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0x33
	.byte	0x4b
	.byte	0x55
	.byte	0x64
	.byte	0xbb
	.byte	0x44
	.byte	0x55
	.byte	0x64
	.byte	0x44
	.byte	0x44
	.byte	0x55
	.byte	0x64
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x64
	.byte	0x55
	.byte	0x55
	.byte	0x45
	.byte	0x64
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x6
	.size	 sUnknown_0860EA6C,256
	.align	1, 0
	.type	 sPokeNavIconPalette,object
sPokeNavIconPalette:
	.short	0x7fff
	.short	0x1595
	.short	0x4a55
	.short	0x56b6
	.short	0x1f
	.short	0x31fe
	.short	0x6694
	.short	0x798c
	.short	0x7fff
	.short	0x7ec1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3b1f
	.short	0x6b39
	.short	0x5eb5
	.size	 sPokeNavIconPalette,32
	.align	2, 0
	.type	 sPokeNavIconGfx,object
sPokeNavIconGfx:
	.word	0x100010
	.word	-0xf7777c8
	.word	-0x1ffe0fff
	.word	-0x7777eeff
	.word	0x30331838
	.word	0x1f003
	.word	-0x7ecc77e4
	.word	-0xffccf08
	.word	-0xffe0fff
	.word	0x18016001
	.word	0x11041888
	.word	0x1dd18833
	.word	0x31d10300
	.word	-0x2e22e7ff
	.word	-0x22e2e7e3
	.word	-0x22fffb00
	.word	0x1d1dd111
	.word	0xd1d155
	.word	0x11331551
	.word	-0x2ecc777f
	.word	0x13881d04
	.word	0x26001d1d
	.word	0x9881dd
	.word	0x11811d
	.word	0x1d1c0021
	.word	0xf61551
	.word	0x6053f014
	.word	0x189e4001
	.word	0x1e00380
	.word	0x511101dd
	.word	0x51d11d71
	.word	-0x7f94ef8f
	.word	-0x2eaaae00
	.word	0x1811d11d
	.word	-0x22eaffaf
	.word	-0x22eaaae8
	.word	-0x2effae78
	.word	0x11151711
	.word	-0x1deae823
	.word	0x6b002100
	.word	0x111d1c00
	.word	0x5185001d
	.word	-0x227eeb00
	.word	0x11815551
	.word	0x20157c1d
	.word	-0xffcaf9d
	.word	-0xefe0fff
	.word	-0xc2222ff
	.word	0x3005101
	.word	-0x600fa9df
	.word	-0x5cff7e23
	.word	-0xf00e310
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xf000eff
	.word	-0xafcffe4
	.word	0x1f0fff1
	.word	0x1f001f0
	.word	0x18ff0188
	.word	0x10a0ff01
	.word	-0x16ff2efd
	.word	0x18ddddd1
	.word	-0x22eeffe3
	.word	-0x2eaaaee8
	.word	-0x7e6ceae8
	.word	0x11dddff
	.word	0x281dd25
	.word	0x7c03101e
	.word	-0xffcafe3
	.word	-0xffe0fb1
	.word	0x717e8101
	.word	0x20157c17
	.word	0x206b0003
	.word	0x307b0073
	.word	-0x71aae279
	.word	0x11559b02
	.word	0x60670011
	.word	0x11731001
	.word	-0x5dff7e9d
	.word	-0x77e2fd00
	.word	-0xf810feb
	.word	0x1f0de01
	.word	0x151ffd1
	.word	-0xeb7effd
	.word	-0x2afeff1e
	.word	-0xf000e02
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x13ffb101
	.word	0x71fff1de
	.word	-0xece01
	.word	0x1f001f0
	.word	0x438801f0
	.word	-0x2222efcf
	.word	0xd11888
	.word	-0x9f4fcfd
	.word	0x60010310
	.word	0x310ec11
	.word	0x10850011
	.word	0x1d77ddff
	.word	0xb110701
	.word	0x601d0320
	.word	-0xfb00ffd
	.word	0x1f0ef01
	.word	0x7700cc90
	.word	0x10470411
	.word	0x21da0303
	.word	-0x78af2005
	.word	0x21d8810
	.word	0x107f020a
	.word	0x760403
	.word	0x7710ff92
	.word	0x7ef08740
	.word	0x1f001f0
	.word	0x7f0001c0
	.word	-0xe009400
	.word	0xff43ff
	.word	-0xf95ff9d
	.word	-0xffe0fe4
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x344ff51
	.word	-0xafe10
	.word	0x1f001f0
	.word	0x3201f0e9
	.word	-0x2200aa01
	.word	0x11ddff05
	.word	-0x2e82fd00
	.word	0x3607501
	.word	0x310ff53
	.word	0x30ddff13
	.word	-0x5fc20fd
	.word	0x23119901
	.word	-0xffe0fc9
	.word	0x6101f001
	.word	0x111d1d7d
	.word	0x206900d1
	.word	0x18010003
	.word	0xff6400
	.word	0x11032083
	.word	0x100fe
	.word	0x6f0011
	.word	-0x3090eb95
	.word	-0xdce0ea
	.word	0x324d11d
	.word	0x1f051f0
	.word	-0xa18fe10
	.word	0x50fff1ff
	.word	0x288819f
	.word	-0xfe30f7e
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	-0xafe10
	.word	-0xee310
	.word	-0xf07fe10
	.word	-0x8fe0fff
	.word	0x30ff37ff
	.word	0x1111d103
	.word	-0x2e000841
	.word	0x21200310
	.word	0x52f09211
	.word	-0x80009
	.word	0x42ff97ff
	.word	0x2207124c
	.word	0x12830001
	.word	0x10ec1307
	.word	-0x1de409a
	.word	0x1f411dd
	.word	0x10ff11ee
	.word	0xff1105
	.word	0x2200ff8b
	.word	0x1f0fff7
	.word	-0x5efe10
	.word	-0x1d0e00cc
	.word	-0xa0094cf
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xefe0fff
	.word	-0x6000e01
	.word	0x1f0fff7
	.word	0x1f001f0
	.word	0x331dffe3
	.word	0x1ffff43
	.word	0x3034068
	.word	-0x8000820
	.word	-0xffe0f01
	.word	-0x10fe0fff
	.word	0x6b605f51
	.word	0x19d10710
	.word	0x28300df
	.word	-0x800ee79
	.word	-0xae8ebde
	.word	0x2a120340
	.word	0x835411
	.word	-0xc810ffd
	.word	0x1f001f0
	.word	0x4400ffc1
	.word	-0xe2eef
	.word	-0xf000007
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x8e90eff
	.word	-0x801
	.word	0x1f0fff1
	.word	-0x8fe10
	.word	0x370fff7
	.word	-0xa80009
	.word	0x320117f
	.word	0x1f04ff0
	.word	-0x38fe10
	.word	0x340d70b
	.word	0x27fff7ff
	.word	-0x8fccf01
	.word	-0xfb10f01
	.word	-0x8fe0fff
	.word	-0x80001
	.word	0x1bf0fff7
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x800fe10
	.word	-0xe000a01
	.word	-0xffe0f01
	.word	-0x8000dff
	.word	-0x53004801
	.word	0x14d16700
	.word	0x7b418103
	.word	-0x2eeefd00
	.word	0x551d8100
	.word	0x15518115
	.word	-0x7e0f08af
	.word	0x1f001f0
	.word	0x17117da1
	.word	0x130ff
	.word	-0xf8478e
	.word	0x13ff13d1
	.word	0x510300fb
	.word	0x173f7151
	.word	0x32081
	.word	0x1073106b
	.word	0xe87107b
	.word	0x55883e0b
	.word	0x1f00415
	.word	0x1f001f0
	.word	-0x20a2006d
	.word	0x170fff5
	.word	0x2fc0115
	.word	-0xfe30f86
	.word	-0x7ffe0fff
	.word	0x100
	.size	 sPokeNavIconGfx,996
	.type	 sText_PokenavCallEllipsis,object
sText_PokenavCallEllipsis:
	.byte	0xb0
	.byte	0xb0
	.byte	0xb0
	.byte	0xb0
	.byte	0xb0
	.byte	0xb0
	.byte	0xfb
	.byte	0xff
	.size	 sText_PokenavCallEllipsis,8
	.align	2, 0
	.type	 sMatchCallTaskFuncs,object
sMatchCallTaskFuncs:
	.word	LoadMatchCallWindowGfx
	.word	MoveMatchCallWindowToVram
	.word	PrintMatchCallIntroEllipsis
	.word	sub_81962B0
	.word	sub_81962D8
	.word	sub_8196330
	.word	sub_8196390
	.word	sub_81963F0
	.size	 sMatchCallTaskFuncs,32
.text
	.align	2, 0
	.type	 ExecuteMatchCall,function
	.thumb_func
ExecuteMatchCall:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L78
	add	r4, r0, r1
	ldr	r1, .L78+0x4
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	cmp	r0, #0
	beq	.L76	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	mov	r1, #0x0
	strh	r1, [r4, #0x2]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x7
	bls	.L76	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L76:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L79:
	.align	2, 0
.L78:
	.word	gTasks+0x8
	.word	sMatchCallTaskFuncs
.Lfe14:
	.size	 ExecuteMatchCall,.Lfe14-ExecuteMatchCall
	.section .rodata
	.align	2, 0
	.type	 sMatchCallTextWindow,object
	.size	 sMatchCallTextWindow,8
sMatchCallTextWindow:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xf
	.short	0x200
.text
	.align	2, 0
	.type	 LoadMatchCallWindowGfx,function
	.thumb_func
LoadMatchCallWindowGfx:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L86
	add	r5, r0, r1
	ldr	r0, .L86+0x4
	bl	AddWindow
	strh	r0, [r5, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xff
	bne	.L81	@cond_branch
	add	r0, r4, #0
	b	.L85
.L87:
	.align	2, 0
.L86:
	.word	gTasks+0x8
	.word	sMatchCallTextWindow
.L81:
	ldr	r1, .L88
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	mov	r3, #0x9c
	lsl	r3, r3, #0x2
	mov	r0, #0x0
	bl	LoadBgTiles
	lsl	r0, r0, #0x10
	ldr	r1, .L88+0x4
	cmp	r0, r1
	bne	.L82	@cond_branch
	ldrb	r0, [r5, #0x4]
	bl	RemoveWindow
	add	r0, r4, #0
	b	.L85
.L89:
	.align	2, 0
.L88:
	.word	sUnknown_0860EA6C
	.word	-0x10000
.L82:
	ldr	r1, .L90
	ldr	r3, .L90+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r2, #0x0
	bl	DecompressAndCopyTileDataToVram
	cmp	r0, #0
	beq	.L83	@cond_branch
	ldrb	r0, [r5, #0x4]
	mov	r1, #0x88
	bl	FillWindowPixelBuffer
	ldr	r0, .L90+0x8
	mov	r1, #0xe0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L90+0xc
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L90+0x10
	mov	r0, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	b	.L84
.L91:
	.align	2, 0
.L90:
	.word	sPokeNavIconGfx
	.word	0x279
	.word	sUnknown_0860EA4C
	.word	sPokeNavIconPalette
	.word	-0x2000
.L83:
	ldrb	r0, [r5, #0x4]
	bl	RemoveWindow
	add	r0, r6, #0
.L85:
	bl	DestroyTask
	mov	r0, #0x0
.L84:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 LoadMatchCallWindowGfx,.Lfe15-LoadMatchCallWindowGfx
	.align	2, 0
	.type	 MoveMatchCallWindowToVram,function
	.thumb_func
MoveMatchCallWindowToVram:
	push	{r4, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L95
	add	r4, r1, r0
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L93	@cond_branch
	ldrb	r0, [r4, #0x4]
	bl	PutWindowTilemap
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r1, #0x9c
	lsl	r1, r1, #0x2
	mov	r2, #0xe
	bl	DrawMatchCallTextBoxBorder
	ldr	r1, .L95+0x4
	mov	r0, #0x4
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r2, #0x1
	mov	r3, #0xf
	bl	WriteSequenceToBgTilemapBuffer
	ldr	r0, .L95+0x8
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	ldrb	r0, [r4, #0x4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	b	.L94
.L96:
	.align	2, 0
.L95:
	.word	gTasks+0x8
	.word	0xf279
	.word	sub_8196694
.L93:
	mov	r0, #0x0
.L94:
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 MoveMatchCallWindowToVram,.Lfe16-MoveMatchCallWindowToVram
	.align	2, 0
	.type	 PrintMatchCallIntroEllipsis,function
	.thumb_func
PrintMatchCallIntroEllipsis:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L100
	add	r4, r1, r0
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L98	@cond_branch
	mov	r0, #0x0
	b	.L99
.L101:
	.align	2, 0
.L100:
	.word	gTasks+0x8
.L98:
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	ldr	r1, .L102
	bl	InitMatchCallTextPrinter
	mov	r0, #0x1
.L99:
	pop	{r4}
	pop	{r1}
	bx	r1
.L103:
	.align	2, 0
.L102:
	.word	sText_PokenavCallEllipsis
.Lfe17:
	.size	 PrintMatchCallIntroEllipsis,.Lfe17-PrintMatchCallIntroEllipsis
	.align	2, 0
	.type	 sub_81962B0,function
	.thumb_func
sub_81962B0:
	push	{lr}
	mov	r1, #0xc0
	lsl	r1, r1, #0x3
	mov	r0, #0x0
	mov	r2, #0x1
	bl	ChangeBgY
	cmp	r0, #0
	bge	.L105	@cond_branch
	mov	r0, #0x0
	b	.L106
.L105:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
.L106:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 sub_81962B0,.Lfe18-sub_81962B0
	.align	2, 0
	.type	 sub_81962D8,function
	.thumb_func
sub_81962D8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L111
	add	r4, r1, r0
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	bl	ExecuteMatchCallTextPrinter
	cmp	r0, #0
	bne	.L108	@cond_branch
	ldrb	r0, [r4, #0x4]
	mov	r1, #0x88
	bl	FillWindowPixelBuffer
	ldr	r1, .L111+0x4
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0
	bne	.L109	@cond_branch
	ldrh	r0, [r1, #0x4]
	ldr	r1, .L111+0x8
	bl	SelectMatchCallMessage
.L109:
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	ldr	r1, .L111+0x8
	bl	InitMatchCallTextPrinter
	mov	r0, #0x1
	b	.L110
.L112:
	.align	2, 0
.L111:
	.word	gTasks+0x8
	.word	gMatchCallState
	.word	gStringVar4
.L108:
	mov	r0, #0x0
.L110:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 sub_81962D8,.Lfe19-sub_81962D8
	.align	2, 0
	.type	 sub_8196330,function
	.thumb_func
sub_8196330:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L116
	add	r4, r1, r0
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	bl	ExecuteMatchCallTextPrinter
	cmp	r0, #0
	bne	.L114	@cond_branch
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L114	@cond_branch
	ldr	r0, .L116+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L114	@cond_branch
	ldrb	r0, [r4, #0x4]
	mov	r1, #0x88
	bl	FillWindowPixelBuffer
	ldrb	r0, [r4, #0x4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	bl	PlaySE
	mov	r0, #0x1
	b	.L115
.L117:
	.align	2, 0
.L116:
	.word	gTasks+0x8
	.word	gMain
.L114:
	mov	r0, #0x0
.L115:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 sub_8196330,.Lfe20-sub_8196330
	.align	2, 0
	.type	 sub_8196390,function
	.thumb_func
sub_8196390:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L121
	add	r4, r1, r0
	mov	r1, #0xc0
	lsl	r1, r1, #0x3
	mov	r0, #0x0
	mov	r2, #0x2
	bl	ChangeBgY
	ldr	r1, .L121+0x4
	cmp	r0, r1
	ble	.L119	@cond_branch
	mov	r0, #0x0
	b	.L120
.L122:
	.align	2, 0
.L121:
	.word	gTasks+0x8
	.word	-0x2000
.L119:
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x6
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0xe
	bl	FillBgTilemapBufferRect_Palette0
	ldrb	r0, [r4, #0xa]
	bl	DestroyTask
	ldrb	r0, [r4, #0x4]
	bl	RemoveWindow
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
.L120:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 sub_8196390,.Lfe21-sub_8196390
	.align	2, 0
	.type	 sub_81963F0,function
	.thumb_func
sub_81963F0:
	push	{lr}
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L124	@cond_branch
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L124	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	ldr	r0, .L127
	ldrb	r0, [r0, #0x7]
	cmp	r0, #0
	bne	.L125	@cond_branch
	bl	LoadMessageBoxAndBorderGfx
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L127+0x4
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	bl	ScriptMovement_UnfreezeObjectEvents
	bl	UnfreezeObjectEvents
	bl	ScriptContext2_Disable
.L125:
	mov	r0, #0x1
	b	.L126
.L128:
	.align	2, 0
.L127:
	.word	gMatchCallState
	.word	gObjectEvents
.L124:
	mov	r0, #0x0
.L126:
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 sub_81963F0,.Lfe22-sub_81963F0
	.align	2, 0
	.type	 DrawMatchCallTextBoxBorder,function
	.thumb_func
DrawMatchCallTextBoxBorder:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	add	r4, r0, #0
	add	r5, r1, #0
	add	r7, r2, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetWindowAttribute
	mov	r9, r0
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetWindowAttribute
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x2
	bl	GetWindowAttribute
	str	r0, [sp, #0xc]
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetWindowAttribute
	add	r6, r0, #0
	add	r0, r4, #0
	mov	r1, #0x4
	bl	GetWindowAttribute
	str	r0, [sp, #0x10]
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r1, #0xa
	bl	GetBgAttribute
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r5, r5, r0
	lsl	r7, r7, #0xc
	mov	r1, #0xf0
	lsl	r1, r1, #0x8
	add	r0, r1, #0
	and	r7, r7, r0
	add	r1, r7, #0
	orr	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, [sp, #0x8]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	sl, r2
	ldr	r4, [sp, #0xc]
	sub	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r3, #0x1
	mov	r8, r3
	str	r3, [sp]
	str	r3, [sp, #0x4]
	mov	r0, r9
	add	r3, r4, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	r1, r5, #0x1
	orr	r1, r1, r7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, [sp, #0x8]
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x14]
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x18]
	str	r0, [sp]
	mov	r2, r8
	str	r2, [sp, #0x4]
	mov	r0, r9
	ldr	r2, [sp, #0x14]
	add	r3, r4, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	r1, r5, #0x2
	orr	r1, r1, r7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r3, [sp, #0x8]
	add	r0, r3, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x1c]
	mov	r0, r8
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, r9
	ldr	r2, [sp, #0x1c]
	add	r3, r4, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	r1, r5, #0x3
	orr	r1, r1, r7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, [sp, #0xc]
	lsl	r6, r2, #0x18
	lsr	r6, r6, #0x18
	mov	r3, r8
	str	r3, [sp]
	ldr	r0, [sp, #0x10]
	lsl	r4, r0, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp, #0x4]
	mov	r0, r9
	mov	r2, sl
	add	r3, r6, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	r1, r5, #0x4
	orr	r1, r1, r7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, r8
	str	r2, [sp]
	str	r4, [sp, #0x4]
	mov	r0, r9
	ldr	r2, [sp, #0x1c]
	add	r3, r6, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	r1, r5, #0x5
	orr	r1, r1, r7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r3, [sp, #0xc]
	ldr	r2, [sp, #0x10]
	add	r0, r3, r2
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r3, r8
	str	r3, [sp]
	str	r3, [sp, #0x4]
	mov	r0, r9
	mov	r2, sl
	add	r3, r4, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	r1, r5, #0x6
	orr	r1, r1, r7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, [sp, #0x18]
	str	r0, [sp]
	mov	r2, r8
	str	r2, [sp, #0x4]
	mov	r0, r9
	ldr	r2, [sp, #0x14]
	add	r3, r4, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	r5, r5, #0x7
	orr	r5, r5, r7
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r3, r8
	str	r3, [sp]
	str	r3, [sp, #0x4]
	mov	r0, r9
	add	r1, r5, #0
	ldr	r2, [sp, #0x1c]
	add	r3, r4, #0
	bl	FillBgTilemapBufferRect_Palette0
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 DrawMatchCallTextBoxBorder,.Lfe23-DrawMatchCallTextBoxBorder
	.align	2, 0
	.type	 InitMatchCallTextPrinter,function
	.thumb_func
InitMatchCallTextPrinter:
	push	{lr}
	add	sp, sp, #-0x10
	str	r1, [sp]
	mov	r1, sp
	mov	r3, #0x0
	strb	r0, [r1, #0x4]
	mov	r0, sp
	mov	r1, #0x1
	strb	r1, [r0, #0x5]
	mov	r2, #0x20
	strb	r2, [r0, #0x6]
	strb	r1, [r0, #0x7]
	strb	r2, [r0, #0x8]
	strb	r1, [r0, #0x9]
	strb	r3, [r0, #0xa]
	strb	r3, [r0, #0xb]
	mov	r3, sp
	ldrb	r2, [r3, #0xc]
	sub	r1, r1, #0x11
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3, #0xc]
	mov	r2, sp
	mov	r3, #0xf
	mov	r0, #0xa0
	strb	r0, [r2, #0xc]
	ldrb	r0, [r2, #0xd]
	and	r1, r1, r0
	mov	r0, #0x8
	orr	r1, r1, r0
	strb	r1, [r2, #0xd]
	and	r1, r1, r3
	mov	r0, #0xe0
	orr	r1, r1, r0
	strb	r1, [r2, #0xd]
	ldr	r2, .L131
	ldrb	r1, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	bl	GetPlayerTextSpeedDelay
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sp
	mov	r2, #0x0
	bl	AddTextPrinter
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L132:
	.align	2, 0
.L131:
	.word	gTextFlags
.Lfe24:
	.size	 InitMatchCallTextPrinter,.Lfe24-InitMatchCallTextPrinter
	.align	2, 0
	.type	 ExecuteMatchCallTextPrinter,function
	.thumb_func
ExecuteMatchCallTextPrinter:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L136
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L134	@cond_branch
	ldr	r0, .L136+0x4
	ldrb	r1, [r0]
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L135
.L137:
	.align	2, 0
.L136:
	.word	gMain
	.word	gTextFlags
.L134:
	ldr	r2, .L138
	ldrb	r1, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
.L135:
	bl	RunTextPrinters
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.L139:
	.align	2, 0
.L138:
	.word	gTextFlags
.Lfe25:
	.size	 ExecuteMatchCallTextPrinter,.Lfe25-ExecuteMatchCallTextPrinter
	.align	2, 0
	.type	 sub_8196694,function
	.thumb_func
sub_8196694:
	push	{lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L143
	add	r2, r1, r0
	ldrh	r0, [r2]
	add	r0, r0, #0x1
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L141	@cond_branch
	mov	r1, #0x0
	strh	r1, [r2]
	ldrh	r0, [r2, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L142	@cond_branch
	strh	r1, [r2, #0x2]
.L142:
	mov	r0, #0x2
	ldrsh	r1, [r2, r0]
	lsl	r1, r1, #0x4
	ldr	r0, .L143+0x4
	add	r1, r1, r0
	strh	r1, [r2, #0x4]
	ldr	r2, .L143+0x8
	add	r0, r2, #0
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x4
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r2, #0x1
	mov	r3, #0xf
	bl	WriteSequenceToBgTilemapBuffer
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L141:
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L144:
	.align	2, 0
.L143:
	.word	gTasks+0x8
	.word	0x279
	.word	-0x1000
.Lfe26:
	.size	 sub_8196694,.Lfe26-sub_8196694
	.align	2, 0
	.type	 TrainerIsEligibleForRematch,function
	.thumb_func
TrainerIsEligibleForRematch:
	ldr	r1, .L147
	ldr	r1, [r1]
	ldr	r2, .L147+0x4
	add	r1, r1, r2
	add	r1, r1, r0
	ldrb	r1, [r1]
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #0x1f
	bx	lr
.L148:
	.align	2, 0
.L147:
	.word	gSaveBlock1Ptr
	.word	0xfaa
.Lfe27:
	.size	 TrainerIsEligibleForRematch,.Lfe27-TrainerIsEligibleForRematch
	.align	2, 0
	.type	 GetRematchTrainerLocation,function
	.thumb_func
GetRematchTrainerLocation:
	push	{lr}
	ldr	r1, .L150
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrh	r2, [r0, #0xa]
	ldrh	r1, [r0, #0xc]
	add	r0, r2, #0
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	pop	{r1}
	bx	r1
.L151:
	.align	2, 0
.L150:
	.word	gRematchTable
.Lfe28:
	.size	 GetRematchTrainerLocation,.Lfe28-GetRematchTrainerLocation
	.align	2, 0
	.type	 GetNumRematchTrainersFought,function
	.thumb_func
GetNumRematchTrainersFought:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	mov	r6, #0x0
	ldr	r4, .L159
.L156:
	ldrh	r0, [r4]
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L155	@cond_branch
	add	r6, r6, #0x1
.L155:
	add	r4, r4, #0x10
	add	r5, r5, #0x1
	cmp	r5, #0x3f
	bls	.L156	@cond_branch
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L160:
	.align	2, 0
.L159:
	.word	gRematchTable
.Lfe29:
	.size	 GetNumRematchTrainersFought,.Lfe29-GetNumRematchTrainersFought
	.align	2, 0
	.type	 sub_8196774,function
	.thumb_func
sub_8196774:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r5, .L170
.L165:
	ldrh	r0, [r5]
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L164	@cond_branch
	cmp	r6, r7
	bne	.L167	@cond_branch
	add	r0, r4, #0
	b	.L169
.L171:
	.align	2, 0
.L170:
	.word	gRematchTable
.L167:
	add	r6, r6, #0x1
.L164:
	add	r5, r5, #0x10
	add	r4, r4, #0x1
	cmp	r4, #0x4d
	bls	.L165	@cond_branch
	mov	r0, #0x4e
.L169:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 sub_8196774,.Lfe30-sub_8196774
	.align	2, 0
	.globl	SelectMatchCallMessage
	.type	 SelectMatchCallMessage,function
	.thumb_func
SelectMatchCallMessage:
	push	{r4, r5, r6, r7, lr}
	add	r6, r1, #0
	mov	r7, #0x0
	bl	GetTrainerMatchCallId
	add	r5, r0, #0
	ldr	r0, .L180
	strh	r7, [r0]
	add	r0, r5, #0
	bl	TrainerIsEligibleForRematch
	cmp	r0, #0
	beq	.L173	@cond_branch
	add	r0, r5, #0
	bl	GetRematchTrainerLocation
	ldr	r1, .L180+0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x14]
	cmp	r0, r1
	bne	.L173	@cond_branch
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetSameRouteMatchCallText
	b	.L179
.L181:
	.align	2, 0
.L180:
	.word	gBattleFrontierStreakInfo
	.word	gMapHeader
.L173:
	add	r0, r5, #0
	bl	sub_8196D74
	cmp	r0, #0
	beq	.L175	@cond_branch
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetDifferentRouteMatchCallText
	add	r4, r0, #0
	mov	r7, #0x1
	add	r0, r5, #0
	bl	UpdateRematchIfDefeated
	b	.L174
.L175:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L177	@cond_branch
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetBattleMatchCallText
	b	.L179
.L177:
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetGeneralMatchCallText
.L179:
	add	r4, r0, #0
.L174:
	add	r0, r5, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	BuildMatchCallString
	add	r0, r7, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 SelectMatchCallMessage,.Lfe31-SelectMatchCallMessage
	.align	2, 0
	.type	 GetTrainerMatchCallId,function
	.thumb_func
GetTrainerMatchCallId:
	push	{lr}
	add	r3, r0, #0
	mov	r2, #0x0
	ldr	r1, .L190
.L185:
	ldrh	r0, [r1]
	cmp	r0, r3
	beq	.L186	@cond_branch
	add	r1, r1, #0x14
	add	r2, r2, #0x1
	b	.L185
.L191:
	.align	2, 0
.L190:
	.word	sMatchCallTrainers
.L186:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 GetTrainerMatchCallId,.Lfe32-GetTrainerMatchCallId
	.align	2, 0
	.type	 GetSameRouteMatchCallText,function
	.thumb_func
GetSameRouteMatchCallText:
	ldr	r2, .L193
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1, #0xe]
	mov	r2, #0xff
	lsr	r0, r1, #0x8
	sub	r0, r0, #0x1
	and	r1, r1, r2
	sub	r1, r1, #0x1
	ldr	r2, .L193+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	lsl	r1, r1, #0x3
	ldr	r0, [r0]
	add	r0, r0, r1
	bx	lr
.L194:
	.align	2, 0
.L193:
	.word	sMatchCallTrainers
	.word	sMatchCallBattleRequestTopics
.Lfe33:
	.size	 GetSameRouteMatchCallText,.Lfe33-GetSameRouteMatchCallText
	.align	2, 0
	.type	 GetDifferentRouteMatchCallText,function
	.thumb_func
GetDifferentRouteMatchCallText:
	ldr	r2, .L196
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1, #0x10]
	mov	r2, #0xff
	lsr	r0, r1, #0x8
	sub	r0, r0, #0x1
	and	r1, r1, r2
	sub	r1, r1, #0x1
	ldr	r2, .L196+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	lsl	r1, r1, #0x3
	ldr	r0, [r0]
	add	r0, r0, r1
	bx	lr
.L197:
	.align	2, 0
.L196:
	.word	sMatchCallTrainers
	.word	sMatchCallBattleRequestTopics
.Lfe34:
	.size	 GetDifferentRouteMatchCallText,.Lfe34-GetDifferentRouteMatchCallText
	.align	2, 0
	.type	 GetBattleMatchCallText,function
	.thumb_func
GetBattleMatchCallText:
	push	{r4, lr}
	add	r4, r0, #0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	ldr	r2, .L200
	lsr	r0, r0, #0xf
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	add	r2, r2, #0x4
	add	r0, r0, r2
	ldrh	r4, [r0]
	cmp	r4, #0
	bne	.L199	@cond_branch
	mov	r0, #0x0
	bl	SpriteCallbackDummy
.L199:
	mov	r1, #0xff
	lsr	r0, r4, #0x8
	sub	r0, r0, #0x1
	and	r4, r4, r1
	sub	r1, r4, #0x1
	ldr	r2, .L200+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	lsl	r1, r1, #0x3
	ldr	r0, [r0]
	add	r0, r0, r1
	pop	{r4}
	pop	{r1}
	bx	r1
.L201:
	.align	2, 0
.L200:
	.word	sMatchCallTrainers
	.word	sMatchCallBattleTopics
.Lfe35:
	.size	 GetBattleMatchCallText,.Lfe35-GetBattleMatchCallText
	.align	2, 0
	.type	 GetGeneralMatchCallText,function
	.thumb_func
GetGeneralMatchCallText:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L203	@cond_branch
	mov	r5, #0x0
	mov	r4, #0x0
	lsl	r7, r6, #0x2
.L207:
	lsl	r0, r4, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	GetFrontierStreakInfo
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L206	@cond_branch
	add	r5, r5, #0x1
.L206:
	add	r4, r4, #0x1
	cmp	r4, #0x6
	ble	.L207	@cond_branch
	cmp	r5, #0
	beq	.L203	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	add	r5, r0, #0
	mov	r4, #0x0
	b	.L211
.L216:
	sub	r5, r5, #0x1
.L213:
	add	r4, r4, #0x1
.L211:
	cmp	r4, #0x6
	bgt	.L212	@cond_branch
	lsl	r0, r4, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	GetFrontierStreakInfo
	ldr	r1, .L220
	strh	r0, [r1, #0x2]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L213	@cond_branch
	cmp	r5, #0
	bne	.L216	@cond_branch
.L212:
	ldr	r0, .L220
	strh	r4, [r0]
	ldr	r1, .L220+0x4
	add	r0, r7, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0xc]
	sub	r2, r0, #0x1
	ldr	r1, .L220+0x8
	ldr	r0, [sp]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	lsl	r1, r2, #0x3
	ldr	r0, [r0]
	add	r0, r0, r1
	b	.L219
.L221:
	.align	2, 0
.L220:
	.word	gBattleFrontierStreakInfo
	.word	sMatchCallTrainers
	.word	sMatchCallGeneralTopics
.L203:
	ldr	r1, .L222
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r2, [r0, #0xa]
	lsr	r1, r2, #0x8
	sub	r1, r1, #0x1
	str	r1, [sp]
	mov	r0, #0xff
	and	r0, r0, r2
	sub	r2, r0, #0x1
	ldr	r0, .L222+0x4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	lsl	r2, r2, #0x3
	ldr	r0, [r1]
	add	r0, r0, r2
.L219:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L223:
	.align	2, 0
.L222:
	.word	sMatchCallTrainers
	.word	sMatchCallGeneralTopics
.Lfe36:
	.size	 GetGeneralMatchCallText,.Lfe36-GetGeneralMatchCallText
	.align	2, 0
	.type	 BuildMatchCallString,function
	.thumb_func
BuildMatchCallString:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	add	r1, r4, #0x4
	bl	PopulateMatchCallStringVars
	ldr	r1, [r4]
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 BuildMatchCallString,.Lfe37-BuildMatchCallString
	.section .rodata
	.align	2, 0
	.type	 sMatchCallTextStringVars,object
sMatchCallTextStringVars:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.size	 sMatchCallTextStringVars,12
.text
	.align	2, 0
	.type	 PopulateMatchCallStringVars,function
	.thumb_func
PopulateMatchCallStringVars:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	add	r6, r1, #0
	mov	r4, #0x0
	ldr	r5, .L232
.L229:
	add	r1, r6, r4
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	blt	.L228	@cond_branch
	add	r1, r0, #0
	ldr	r2, [r5]
	add	r0, r7, #0
	bl	PopulateMatchCallStringVar
.L228:
	add	r5, r5, #0x4
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L229	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L233:
	.align	2, 0
.L232:
	.word	sMatchCallTextStringVars
.Lfe38:
	.size	 PopulateMatchCallStringVars,.Lfe38-PopulateMatchCallStringVars
	.section .rodata
	.align	2, 0
	.type	 sPopulateMatchCallStringVarFuncs,object
sPopulateMatchCallStringVarFuncs:
	.word	PopulateTrainerName
	.word	PopulateMapName
	.word	PopulateSpeciesFromTrainerLocation
	.word	PopulateSpeciesFromTrainerParty
	.word	PopulateBattleFrontierFacilityName
	.word	PopulateBattleFrontierStreak
	.size	 sPopulateMatchCallStringVarFuncs,24
.text
	.align	2, 0
	.type	 PopulateMatchCallStringVar,function
	.thumb_func
PopulateMatchCallStringVar:
	push	{lr}
	ldr	r3, .L235
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r3, [r1]
	add	r1, r2, #0
	bl	_call_via_r3
	pop	{r0}
	bx	r0
.L236:
	.align	2, 0
.L235:
	.word	sPopulateMatchCallStringVarFuncs
.Lfe39:
	.size	 PopulateMatchCallStringVar,.Lfe39-PopulateMatchCallStringVar
	.section .rodata
	.align	2, 0
	.type	 sMultiTrainerMatchCallTexts,object
sMultiTrainerMatchCallTexts:
	.short	0x282
	.space	2
	.word	gText_Kira
	.short	0x1e1
	.space	2
	.word	gText_Amy
	.short	0x2a9
	.space	2
	.word	gText_John
	.short	0x2af
	.space	2
	.word	gText_Roy
	.short	0x33
	.space	2
	.word	gText_Gabby
	.short	0x11f
	.space	2
	.word	gText_Anna
	.size	 sMultiTrainerMatchCallTexts,48
.text
	.align	2, 0
	.type	 PopulateTrainerName,function
	.thumb_func
PopulateTrainerName:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	ldr	r2, .L244
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r4, [r1]
	mov	r2, #0x0
	ldr	r3, .L244+0x4
	add	r6, r3, #0
.L241:
	lsl	r1, r2, #0x3
	ldrh	r0, [r3]
	cmp	r0, r4
	bne	.L240	@cond_branch
	add	r0, r6, #0x4
	add	r0, r1, r0
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	StringCopy
	b	.L237
.L245:
	.align	2, 0
.L244:
	.word	sMatchCallTrainers
	.word	sMultiTrainerMatchCallTexts
.L240:
	add	r3, r3, #0x8
	add	r2, r2, #0x1
	cmp	r2, #0x5
	bls	.L241	@cond_branch
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	ldr	r0, .L246
	add	r1, r1, r0
	add	r0, r5, #0
	bl	StringCopy
.L237:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L247:
	.align	2, 0
.L246:
	.word	gTrainers+0x4
.Lfe40:
	.size	 PopulateTrainerName,.Lfe40-PopulateTrainerName
	.align	2, 0
	.type	 PopulateMapName,function
	.thumb_func
PopulateMapName:
	push	{r4, lr}
	add	r4, r1, #0
	bl	GetRematchTrainerLocation
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	bl	GetMapName
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 PopulateMapName,.Lfe41-PopulateMapName
	.align	2, 0
	.type	 GetLandEncounterSlot,function
	.thumb_func
GetLandEncounterSlot:
	push	{lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x13
	bgt	.L250	@cond_branch
	mov	r0, #0x0
	b	.L272
.L250:
	add	r0, r1, #0
	sub	r0, r0, #0x14
	cmp	r0, #0x13
	bhi	.L252	@cond_branch
	mov	r0, #0x1
	b	.L272
.L252:
	add	r0, r1, #0
	sub	r0, r0, #0x28
	cmp	r0, #0x9
	bhi	.L254	@cond_branch
	mov	r0, #0x2
	b	.L272
.L254:
	add	r0, r1, #0
	sub	r0, r0, #0x32
	cmp	r0, #0x9
	bhi	.L256	@cond_branch
	mov	r0, #0x3
	b	.L272
.L256:
	add	r0, r1, #0
	sub	r0, r0, #0x3c
	cmp	r0, #0x9
	bhi	.L258	@cond_branch
	mov	r0, #0x4
	b	.L272
.L258:
	add	r0, r1, #0
	sub	r0, r0, #0x46
	cmp	r0, #0x9
	bhi	.L260	@cond_branch
	mov	r0, #0x5
	b	.L272
.L260:
	add	r0, r1, #0
	sub	r0, r0, #0x50
	cmp	r0, #0x4
	bhi	.L262	@cond_branch
	mov	r0, #0x6
	b	.L272
.L262:
	add	r0, r1, #0
	sub	r0, r0, #0x55
	cmp	r0, #0x4
	bhi	.L264	@cond_branch
	mov	r0, #0x7
	b	.L272
.L264:
	add	r0, r1, #0
	sub	r0, r0, #0x5a
	cmp	r0, #0x3
	bhi	.L266	@cond_branch
	mov	r0, #0x8
	b	.L272
.L266:
	add	r0, r1, #0
	sub	r0, r0, #0x5e
	cmp	r0, #0x3
	bhi	.L268	@cond_branch
	mov	r0, #0x9
	b	.L272
.L268:
	cmp	r1, #0x62
	beq	.L270	@cond_branch
	mov	r0, #0xb
	b	.L272
.L270:
	mov	r0, #0xa
.L272:
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 GetLandEncounterSlot,.Lfe42-GetLandEncounterSlot
	.align	2, 0
	.type	 GetWaterEncounterSlot,function
	.thumb_func
GetWaterEncounterSlot:
	push	{lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x3b
	bgt	.L274	@cond_branch
	mov	r0, #0x0
	b	.L282
.L274:
	add	r0, r1, #0
	sub	r0, r0, #0x3c
	cmp	r0, #0x1d
	bhi	.L276	@cond_branch
	mov	r0, #0x1
	b	.L282
.L276:
	add	r0, r1, #0
	sub	r0, r0, #0x5a
	cmp	r0, #0x4
	bhi	.L278	@cond_branch
	mov	r0, #0x2
	b	.L282
.L278:
	add	r0, r1, #0
	sub	r0, r0, #0x5f
	cmp	r0, #0x3
	bls	.L280	@cond_branch
	mov	r0, #0x4
	b	.L282
.L280:
	mov	r0, #0x3
.L282:
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 GetWaterEncounterSlot,.Lfe43-GetWaterEncounterSlot
	.align	2, 0
	.type	 PopulateSpeciesFromTrainerLocation,function
	.thumb_func
PopulateSpeciesFromTrainerLocation:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r2, r0, #0
	mov	r8, r1
	mov	r3, #0x0
	ldr	r0, .L294
	ldrb	r1, [r0]
	add	r7, r0, #0
	cmp	r1, #0xff
	beq	.L284	@cond_branch
	ldr	r1, .L294+0x4
	lsl	r0, r2, #0x4
	add	r2, r0, r1
	ldrh	r4, [r2, #0xa]
	add	r1, r7, #0
.L287:
	ldrb	r0, [r1]
	cmp	r0, r4
	bne	.L288	@cond_branch
	ldrb	r0, [r1, #0x1]
	ldrh	r5, [r2, #0xc]
	cmp	r0, r5
	beq	.L286	@cond_branch
.L288:
	add	r1, r1, #0x20
	add	r3, r3, #0x1
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L287	@cond_branch
.L286:
	add	r1, r7, #0
	lsl	r5, r3, #0x5
	add	r0, r5, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	beq	.L284	@cond_branch
	mov	r6, #0x0
	add	r0, r1, #0x4
	add	r0, r5, r0
	ldr	r4, [r0]
	cmp	r4, #0
	beq	.L291	@cond_branch
	bl	GetLandEncounterSlot
	lsl	r0, r0, #0x18
	mov	r2, sp
	ldr	r1, [r4, #0x4]
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrh	r0, [r0, #0x2]
	strh	r0, [r2]
	mov	r6, #0x1
.L291:
	add	r0, r7, #0
	add	r0, r0, #0xc
	add	r0, r5, r0
	ldr	r4, [r0]
	cmp	r4, #0
	beq	.L292	@cond_branch
	bl	GetWaterEncounterSlot
	lsl	r0, r0, #0x18
	lsl	r1, r6, #0x1
	mov	r3, sp
	add	r2, r3, r1
	ldr	r1, [r4, #0x4]
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrh	r0, [r0, #0x2]
	strh	r0, [r2]
	add	r6, r6, #0x1
.L292:
	cmp	r6, #0
	beq	.L284	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r1, [r0]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L294+0x8
	add	r1, r1, r0
	mov	r0, r8
	bl	StringCopy
	b	.L283
.L295:
	.align	2, 0
.L294:
	.word	gWildMonHeaders
	.word	gRematchTable
	.word	gSpeciesNames
.L284:
	mov	r0, #0xff
	mov	r5, r8
	strb	r0, [r5]
.L283:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 PopulateSpeciesFromTrainerLocation,.Lfe44-PopulateSpeciesFromTrainerLocation
	.align	2, 0
	.type	 PopulateSpeciesFromTrainerParty,function
	.thumb_func
PopulateSpeciesFromTrainerParty:
	push	{r4, r5, r6, r7, lr}
	add	r7, r1, #0
	ldr	r2, .L307
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r0, [r1]
	bl	GetLastBeatenRematchTrainerId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r5, .L307+0x4
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r4, r0
	ldr	r6, [r0]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r4, r4, r5
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r1, [r1]
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldrb	r0, [r4]
	cmp	r0, #0x1
	beq	.L300	@cond_branch
	cmp	r0, #0x1
	ble	.L299	@cond_branch
	cmp	r0, #0x2
	beq	.L301	@cond_branch
	cmp	r0, #0x3
	beq	.L302	@cond_branch
.L299:
	lsl	r0, r1, #0x4
	b	.L305
.L308:
	.align	2, 0
.L307:
	.word	sMatchCallTrainers
	.word	gTrainers
.L300:
	lsl	r0, r1, #0x5
	b	.L305
.L301:
	lsl	r0, r1, #0x2
	b	.L306
.L302:
	lsl	r0, r1, #0x3
.L306:
	add	r0, r0, r1
	lsl	r0, r0, #0x2
.L305:
	add	r0, r0, r6
	ldrh	r1, [r0, #0xc]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L309
	add	r1, r1, r0
	add	r0, r7, #0
	bl	StringCopy
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L310:
	.align	2, 0
.L309:
	.word	gSpeciesNames
.Lfe45:
	.size	 PopulateSpeciesFromTrainerParty,.Lfe45-PopulateSpeciesFromTrainerParty
	.section .rodata
	.align	2, 0
	.type	 sBattleFrontierFacilityNames,object
sBattleFrontierFacilityNames:
	.word	gText_BattleTower2
	.word	gText_BattleDome
	.word	gText_BattlePalace
	.word	gText_BattleArena
	.word	gText_BattlePike
	.word	gText_BattleFactory
	.word	gText_BattlePyramid
	.size	 sBattleFrontierFacilityNames,28
.text
	.align	2, 0
	.type	 PopulateBattleFrontierFacilityName,function
	.thumb_func
PopulateBattleFrontierFacilityName:
	push	{lr}
	add	r0, r1, #0
	ldr	r2, .L312
	ldr	r1, .L312+0x4
	ldrh	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	pop	{r0}
	bx	r0
.L313:
	.align	2, 0
.L312:
	.word	sBattleFrontierFacilityNames
	.word	gBattleFrontierStreakInfo
.Lfe46:
	.size	 PopulateBattleFrontierFacilityName,.Lfe46-PopulateBattleFrontierFacilityName
	.align	2, 0
	.type	 PopulateBattleFrontierStreak,function
	.thumb_func
PopulateBattleFrontierStreak:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	mov	r4, #0x0
	ldr	r0, .L319
	ldrh	r1, [r0, #0x2]
	add	r6, r0, #0
	cmp	r1, #0
	beq	.L316	@cond_branch
.L317:
	add	r0, r1, #0
	mov	r1, #0xa
	bl	__divsi3
	add	r1, r0, #0
	add	r4, r4, #0x1
	cmp	r1, #0
	bne	.L317	@cond_branch
.L316:
	ldrh	r1, [r6, #0x2]
	lsl	r3, r4, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L320:
	.align	2, 0
.L319:
	.word	gBattleFrontierStreakInfo
.Lfe47:
	.size	 PopulateBattleFrontierStreak,.Lfe47-PopulateBattleFrontierStreak
	.section .rodata
	.align	1, 0
	.type	 sBadgeFlags,object
	.size	 sBadgeFlags,16
sBadgeFlags:
	.short	0x867
	.short	0x868
	.short	0x869
	.short	0x86a
	.short	0x86b
	.short	0x86c
	.short	0x86d
	.short	0x86e
.text
	.align	2, 0
	.type	 GetNumOwnedBadges,function
	.thumb_func
GetNumOwnedBadges:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L328
	b	.L322
.L329:
	.align	2, 0
.L328:
	.word	sBadgeFlags
.L324:
	add	r5, r5, #0x2
	add	r4, r4, #0x1
.L322:
	cmp	r4, #0x7
	bhi	.L323	@cond_branch
	ldrh	r0, [r5]
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L324	@cond_branch
.L323:
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 GetNumOwnedBadges,.Lfe48-GetNumOwnedBadges
	.align	2, 0
	.type	 sub_8196D74,function
	.thumb_func
sub_8196D74:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	bl	GetNumOwnedBadges
	cmp	r0, #0x4
	ble	.L332	@cond_branch
	bl	RtcGetLocalDayCount
	add	r4, r0, #0
	ldr	r0, .L335
	ldr	r0, [r0]
	add	r0, r0, #0xa
	bl	GetTrainerId
	add	r6, r0, #0
	ldr	r0, .L335+0x4
	and	r6, r6, r0
	ldr	r0, .L335+0x8
	ldr	r0, [r0]
	ldr	r1, .L335+0xc
	add	r0, r0, r1
	ldrh	r5, [r0]
	bl	GetNumRematchTrainersFought
	mov	r9, r0
	mov	r0, #0xd
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r1, #0
	mov	r1, #0xa
	bl	__divsi3
	mov	r8, r0
	mov	r0, #0x9
	bl	GetGameStat
	eor	r4, r4, r5
	eor	r5, r5, r0
	add	r4, r4, r5
	eor	r4, r4, r6
	add	r0, r4, #0
	mov	r1, r8
	bl	__modsi3
	cmp	r0, r9
	bge	.L332	@cond_branch
	bl	sub_8196774
	cmp	r0, r7
	bne	.L332	@cond_branch
	mov	r0, #0x1
	b	.L334
.L336:
	.align	2, 0
.L335:
	.word	gSaveBlock2Ptr
	.word	0xffff
	.word	gSaveBlock1Ptr
	.word	0x2aea
.L332:
	mov	r0, #0x0
.L334:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 sub_8196D74,.Lfe49-sub_8196D74
	.align	2, 0
	.type	 GetFrontierStreakInfo,function
	.thumb_func
GetFrontierStreakInfo:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r4, #0x0
	cmp	r0, #0x6
	bls	.LCB2990
	b	.L338	@long jump
.LCB2990:
	lsl	r0, r0, #0x2
	ldr	r1, .L411
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L412:
	.align	2, 0
.L411:
	.word	.L408
	.align	2, 0
	.align	2, 0
.L408:
	.word	.L358
	.word	.L339
	.word	.L370
	.word	.L394
	.word	.L351
	.word	.L382
	.word	.L401
.L339:
	mov	r3, #0x0
	ldr	r0, .L413
	ldr	r0, [r0]
	ldr	r1, .L413+0x4
	add	r0, r0, r1
.L343:
	lsl	r1, r3, #0x2
	add	r3, r3, #0x1
	add	r1, r1, r0
	mov	r2, #0x1
.L347:
	ldrh	r6, [r1]
	cmp	r4, r6
	bcs	.L346	@cond_branch
	ldrh	r4, [r1]
.L346:
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L347	@cond_branch
	cmp	r3, #0x1
	ble	.L343	@cond_branch
	mov	r0, #0x3
	b	.L410
.L414:
	.align	2, 0
.L413:
	.word	gSaveBlock2Ptr
	.word	0xc9c
.L351:
	ldr	r0, .L415
	ldr	r0, [r0]
	mov	r1, #0xd9
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	mov	r3, #0x1
.L355:
	ldrh	r6, [r0]
	cmp	r4, r6
	bcs	.L354	@cond_branch
	ldrh	r4, [r0]
.L354:
	add	r0, r0, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L355	@cond_branch
	mov	r0, #0x4
	b	.L410
.L416:
	.align	2, 0
.L415:
	.word	gSaveBlock2Ptr
.L358:
	mov	r3, #0x0
	ldr	r0, .L417
	ldr	r0, [r0]
	ldr	r1, .L417+0x4
	add	r0, r0, r1
.L362:
	lsl	r1, r3, #0x2
	add	r3, r3, #0x1
	add	r1, r1, r0
	mov	r2, #0x1
.L366:
	ldrh	r6, [r1]
	cmp	r4, r6
	bcs	.L365	@cond_branch
	ldrh	r4, [r1]
.L365:
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L366	@cond_branch
	mov	r2, #0x2
	cmp	r3, #0x3
	ble	.L362	@cond_branch
	str	r2, [r5]
	b	.L338
.L418:
	.align	2, 0
.L417:
	.word	gSaveBlock2Ptr
	.word	0xc78
.L370:
	mov	r3, #0x0
	ldr	r0, .L419
	ldr	r0, [r0]
	ldr	r1, .L419+0x4
	add	r0, r0, r1
.L374:
	lsl	r1, r3, #0x2
	add	r3, r3, #0x1
	add	r1, r1, r0
	mov	r2, #0x1
.L378:
	ldrh	r6, [r1]
	cmp	r4, r6
	bcs	.L377	@cond_branch
	ldrh	r4, [r1]
.L377:
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L378	@cond_branch
	mov	r2, #0x2
	cmp	r3, #0x1
	ble	.L374	@cond_branch
	str	r2, [r5]
	b	.L338
.L420:
	.align	2, 0
.L419:
	.word	gSaveBlock2Ptr
	.word	0xd58
.L382:
	mov	r3, #0x0
	ldr	r0, .L421
	ldr	r0, [r0]
	ldr	r1, .L421+0x4
	add	r0, r0, r1
.L386:
	lsl	r1, r3, #0x2
	add	r3, r3, #0x1
	add	r1, r1, r0
	mov	r2, #0x1
.L390:
	ldrh	r6, [r1]
	cmp	r4, r6
	bcs	.L389	@cond_branch
	ldrh	r4, [r1]
.L389:
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L390	@cond_branch
	mov	r2, #0x2
	cmp	r3, #0x1
	ble	.L386	@cond_branch
	str	r2, [r5]
	b	.L338
.L422:
	.align	2, 0
.L421:
	.word	gSaveBlock2Ptr
	.word	0xd72
.L394:
	ldr	r0, .L423
	ldr	r0, [r0]
	ldr	r1, .L423+0x4
	add	r0, r0, r1
	mov	r3, #0x1
.L398:
	ldrh	r6, [r0]
	cmp	r4, r6
	bcs	.L397	@cond_branch
	ldrh	r4, [r0]
.L397:
	add	r0, r0, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L398	@cond_branch
	mov	r3, #0x2
	str	r3, [r5]
	b	.L338
.L424:
	.align	2, 0
.L423:
	.word	gSaveBlock2Ptr
	.word	0xd66
.L401:
	ldr	r0, .L425
	ldr	r0, [r0]
	ldr	r1, .L425+0x4
	add	r0, r0, r1
	mov	r3, #0x1
.L405:
	ldrh	r6, [r0]
	cmp	r4, r6
	bcs	.L404	@cond_branch
	ldrh	r4, [r0]
.L404:
	add	r0, r0, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L405	@cond_branch
	mov	r0, #0x5
.L410:
	str	r0, [r5]
.L338:
	add	r0, r4, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L426:
	.align	2, 0
.L425:
	.word	gSaveBlock2Ptr
	.word	0xda6
.Lfe50:
	.size	 GetFrontierStreakInfo,.Lfe50-GetFrontierStreakInfo
	.align	2, 0
	.type	 GetPokedexRatingLevel,function
	.thumb_func
GetPokedexRatingLevel:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x9
	bhi	.L428	@cond_branch
	mov	r0, #0x0
	b	.L452
.L428:
	cmp	r4, #0x13
	bhi	.L429	@cond_branch
	mov	r0, #0x1
	b	.L452
.L429:
	cmp	r4, #0x1d
	bhi	.L430	@cond_branch
	mov	r0, #0x2
	b	.L452
.L430:
	cmp	r4, #0x27
	bhi	.L431	@cond_branch
	mov	r0, #0x3
	b	.L452
.L431:
	cmp	r4, #0x31
	bhi	.L432	@cond_branch
	mov	r0, #0x4
	b	.L452
.L432:
	cmp	r4, #0x3b
	bhi	.L433	@cond_branch
	mov	r0, #0x5
	b	.L452
.L433:
	cmp	r4, #0x45
	bhi	.L434	@cond_branch
	mov	r0, #0x6
	b	.L452
.L434:
	cmp	r4, #0x4f
	bhi	.L435	@cond_branch
	mov	r0, #0x7
	b	.L452
.L435:
	cmp	r4, #0x59
	bhi	.L436	@cond_branch
	mov	r0, #0x8
	b	.L452
.L436:
	cmp	r4, #0x63
	bhi	.L437	@cond_branch
	mov	r0, #0x9
	b	.L452
.L437:
	cmp	r4, #0x6d
	bhi	.L438	@cond_branch
	mov	r0, #0xa
	b	.L452
.L438:
	cmp	r4, #0x77
	bhi	.L439	@cond_branch
	mov	r0, #0xb
	b	.L452
.L439:
	cmp	r4, #0x81
	bhi	.L440	@cond_branch
	mov	r0, #0xc
	b	.L452
.L440:
	cmp	r4, #0x8b
	bhi	.L441	@cond_branch
	mov	r0, #0xd
	b	.L452
.L441:
	cmp	r4, #0x95
	bhi	.L442	@cond_branch
	mov	r0, #0xe
	b	.L452
.L442:
	cmp	r4, #0x9f
	bhi	.L443	@cond_branch
	mov	r0, #0xf
	b	.L452
.L443:
	cmp	r4, #0xa9
	bhi	.L444	@cond_branch
	mov	r0, #0x10
	b	.L452
.L444:
	cmp	r4, #0xb3
	bhi	.L445	@cond_branch
	mov	r0, #0x11
	b	.L452
.L445:
	cmp	r4, #0xbd
	bhi	.L446	@cond_branch
	mov	r0, #0x12
	b	.L452
.L446:
	cmp	r4, #0xc7
	bls	.L450	@cond_branch
	mov	r0, #0xc1
	lsl	r0, r0, #0x1
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L448	@cond_branch
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L448:
	ldr	r0, .L453
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L449	@cond_branch
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L449:
	cmp	r4, #0xc7
	bls	.L450	@cond_branch
	mov	r0, #0x14
	b	.L452
.L454:
	.align	2, 0
.L453:
	.word	0x181
.L450:
	mov	r0, #0x13
.L452:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 GetPokedexRatingLevel,.Lfe51-GetPokedexRatingLevel
	.section .rodata
	.align	2, 0
	.type	 sBirchDexRatingTexts,object
sBirchDexRatingTexts:
	.word	gBirchDexRatingText_LessThan10
	.word	gBirchDexRatingText_LessThan20
	.word	gBirchDexRatingText_LessThan30
	.word	gBirchDexRatingText_LessThan40
	.word	gBirchDexRatingText_LessThan50
	.word	gBirchDexRatingText_LessThan60
	.word	gBirchDexRatingText_LessThan70
	.word	gBirchDexRatingText_LessThan80
	.word	gBirchDexRatingText_LessThan90
	.word	gBirchDexRatingText_LessThan100
	.word	gBirchDexRatingText_LessThan110
	.word	gBirchDexRatingText_LessThan120
	.word	gBirchDexRatingText_LessThan130
	.word	gBirchDexRatingText_LessThan140
	.word	gBirchDexRatingText_LessThan150
	.word	gBirchDexRatingText_LessThan160
	.word	gBirchDexRatingText_LessThan170
	.word	gBirchDexRatingText_LessThan180
	.word	gBirchDexRatingText_LessThan190
	.word	gBirchDexRatingText_LessThan200
	.word	gBirchDexRatingText_DexCompleted
	.size	 sBirchDexRatingTexts,84
.text
	.align	2, 0
	.globl	BufferPokedexRatingForMatchCall
	.type	 BufferPokedexRatingForMatchCall,function
	.thumb_func
BufferPokedexRatingForMatchCall:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r8, r0
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	bl	Alloc
	add	r7, r0, #0
	cmp	r7, #0
	bne	.L456	@cond_branch
	mov	r0, #0xff
	mov	r1, r8
	strb	r0, [r1]
	b	.L455
.L456:
	mov	r0, #0x0
	bl	GetHoennPokedexCount
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	mov	r0, #0x1
	bl	GetHoennPokedexCount
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L458
	mov	sl, r0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L458+0x4
	mov	r9, r1
	mov	r0, r9
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	bl	GetPokedexRatingLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L458+0x8
	add	r0, r7, #0
	bl	StringCopy
	add	r5, r0, #0
	mov	r6, #0xfb
	strb	r6, [r5]
	add	r5, r5, #0x1
	ldr	r1, .L458+0xc
	add	r0, r5, #0
	bl	StringCopy
	add	r5, r0, #0
	strb	r6, [r5]
	add	r5, r5, #0x1
	ldr	r0, .L458+0x10
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r1, [r4]
	add	r0, r5, #0
	bl	StringCopy
	mov	r0, r8
	add	r1, r7, #0
	bl	StringExpandPlaceholders
	add	r5, r0, #0
	bl	IsNationalPokedexEnabled
	cmp	r0, #0
	beq	.L457	@cond_branch
	strb	r6, [r5]
	add	r5, r5, #0x1
	mov	r0, #0x0
	bl	GetNationalPokedexCount
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	mov	r0, #0x1
	bl	GetNationalPokedexCount
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r0, sl
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, r9
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L458+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
.L457:
	add	r0, r7, #0
	bl	Free
.L455:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L459:
	.align	2, 0
.L458:
	.word	gStringVar1
	.word	gStringVar2
	.word	gBirchDexRatingText_AreYouCurious
	.word	gBirchDexRatingText_SoYouveSeenAndCaught
	.word	sBirchDexRatingTexts
	.word	gBirchDexRatingText_OnANationwideBasis
.Lfe52:
	.size	 BufferPokedexRatingForMatchCall,.Lfe52-BufferPokedexRatingForMatchCall
	.align	2, 0
	.globl	sub_8197184
	.type	 sub_8197184,function
	.thumb_func
sub_8197184:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	GetWindowAttribute
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L461
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r3, r4, #0
	bl	LoadBgTiles
	ldr	r0, .L461+0x4
	lsl	r5, r5, #0x14
	lsr	r5, r5, #0x10
	add	r1, r5, #0
	mov	r2, #0x20
	bl	LoadPalette
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	sUnknown_0860EA6C
	.word	sUnknown_0860EA4C
.Lfe53:
	.size	 sub_8197184,.Lfe53-sub_8197184
	.align	2, 0
	.globl	sub_81971C4
	.type	 sub_81971C4,function
	.thumb_func
sub_81971C4:
	push	{lr}
	bl	DrawMatchCallTextBoxBorder
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 sub_81971C4,.Lfe54-sub_81971C4
.text
	.align	2, 0

