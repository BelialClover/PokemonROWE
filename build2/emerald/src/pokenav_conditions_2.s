@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gConditionGraphData_Pal
	.section .rodata
	.align	1, 0
	.type	 gConditionGraphData_Pal,object
gConditionGraphData_Pal:
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.short	0x3e0
	.size	 gConditionGraphData_Pal,32
	.globl	gConditionText_Pal
	.align	1, 0
	.type	 gConditionText_Pal,object
gConditionText_Pal:
	.short	0x0
	.short	0x7fff
	.short	0x318c
	.short	0x675a
	.short	0x7f28
	.short	0x5e20
	.short	0x4a7f
	.short	0x2977
	.short	0x398c
	.short	0x7ffe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 gConditionText_Pal,32
	.globl	gUnknown_08623228
	.align	2, 0
	.type	 gUnknown_08623228,object
gUnknown_08623228:
	.word	0x4010
	.word	-0xfffffcd
	.word	0x11019001
	.word	-0x6ffe0fef
	.word	0x1
	.size	 gUnknown_08623228,20
	.globl	sConditionGraph_Tilemap
	.align	2, 0
	.type	 sConditionGraph_Tilemap,object
sConditionGraph_Tilemap:
	.word	0x80010
	.word	-0xfcffec1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f10
	.word	-0x6ffe0fff
	.word	0x1
	.size	 sConditionGraph_Tilemap,252
	.globl	sConditionGraphMonMarkingsPal
	.align	1, 0
	.type	 sConditionGraphMonMarkingsPal,object
sConditionGraphMonMarkingsPal:
	.short	0x7b77
	.short	0x7314
	.short	0x7335
	.short	0x7fff
	.short	0x7bbc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sConditionGraphMonMarkingsPal,32
	.globl	sPartyConditionBgTemplates
	.align	2, 0
	.type	 sPartyConditionBgTemplates,object
	.size	 sPartyConditionBgTemplates,12
sPartyConditionBgTemplates:
	.byte	0xf5
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xde
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xeb
	.byte	0x31
	.byte	0x0
	.space	1
	.globl	sMonNameGenderWindowTemplate
	.align	2, 0
	.type	 sMonNameGenderWindowTemplate,object
	.size	 sMonNameGenderWindowTemplate,8
sMonNameGenderWindowTemplate:
	.byte	0x1
	.byte	0xd
	.byte	0x1
	.byte	0xd
	.byte	0x4
	.byte	0xf
	.short	0x2
	.globl	sConditionGraphListIdWindowTemplate
	.align	2, 0
	.type	 sConditionGraphListIdWindowTemplate,object
	.size	 sConditionGraphListIdWindowTemplate,8
sConditionGraphListIdWindowTemplate:
	.byte	0x1
	.byte	0x1
	.byte	0x6
	.byte	0x7
	.byte	0x2
	.byte	0xf
	.short	0x36
	.globl	sUnusedWindowTemplate1
	.align	2, 0
	.type	 sUnusedWindowTemplate1,object
	.size	 sUnusedWindowTemplate1,8
sUnusedWindowTemplate1:
	.byte	0x1
	.byte	0x1
	.byte	0x1c
	.byte	0x5
	.byte	0x2
	.byte	0xf
	.short	0x44
	.globl	sUnusedWindowTemplate2
	.align	2, 0
	.type	 sUnusedWindowTemplate2,object
	.size	 sUnusedWindowTemplate2,8
sUnusedWindowTemplate2:
	.byte	0x1
	.byte	0xd
	.byte	0x1c
	.byte	0x3
	.byte	0x2
	.byte	0xf
	.short	0x44
	.globl	sPartyConditionLoopedTaskFuncs
	.align	2, 0
	.type	 sPartyConditionLoopedTaskFuncs,object
sPartyConditionLoopedTaskFuncs:
	.word	0x0
	.word	LoopedTask_TransitionMons
	.word	LoopedTask_ExitPartyConditionMenu
	.word	LoopedTask_MoveCursorNoTransition
	.word	LoopedTask_SlideMonOut
	.word	LoopedTask_OpenMonMarkingsWindow
	.word	LoopedTask_CloseMonMarkingsWindow
	.size	 sPartyConditionLoopedTaskFuncs,28
.text
	.align	2, 0
	.globl	OpenPartyConditionMenu
	.type	 OpenPartyConditionMenu,function
	.thumb_func
OpenPartyConditionMenu:
	push	{r4, lr}
	ldr	r1, .L5
	mov	r0, #0xc
	bl	AllocSubstruct
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L3	@cond_branch
	ldr	r0, .L5+0x4
	add	r1, r4, r0
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r0, .L5+0x8
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r4]
	ldr	r0, .L5+0xc
	add	r1, r4, r0
	ldr	r0, .L5+0x10
	str	r0, [r1]
	ldr	r0, .L5+0x14
	add	r1, r4, r0
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L4
.L6:
	.align	2, 0
.L5:
	.word	0x38ac
	.word	0x1816
	.word	LoopedTask_OpenPartyConditionGraph
	.word	0x1810
	.word	GetPartyConditionLoopedTaskActive
	.word	0x2908
.L3:
	mov	r0, #0x0
.L4:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 OpenPartyConditionMenu,.Lfe1-OpenPartyConditionMenu
	.align	2, 0
	.globl	CreatePartyConditionLoopedTask
	.type	 CreatePartyConditionLoopedTask,function
	.thumb_func
CreatePartyConditionLoopedTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r5, r0, #0
	ldr	r0, .L8
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r5]
	ldr	r0, .L8+0x4
	add	r5, r5, r0
	ldr	r0, .L8+0x8
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	sPartyConditionLoopedTaskFuncs
	.word	0x1810
	.word	GetPartyConditionLoopedTaskActive
.Lfe2:
	.size	 CreatePartyConditionLoopedTask,.Lfe2-CreatePartyConditionLoopedTask
	.align	2, 0
	.globl	IsPartyConditionLoopedTaskActive
	.type	 IsPartyConditionLoopedTaskActive,function
	.thumb_func
IsPartyConditionLoopedTaskActive:
	push	{lr}
	mov	r0, #0xc
	bl	GetSubstructPtr
	ldr	r1, .L11
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r1}
	bx	r1
.L12:
	.align	2, 0
.L11:
	.word	0x1810
.Lfe3:
	.size	 IsPartyConditionLoopedTaskActive,.Lfe3-IsPartyConditionLoopedTaskActive
	.align	2, 0
	.globl	GetPartyConditionLoopedTaskActive
	.type	 GetPartyConditionLoopedTaskActive,function
	.thumb_func
GetPartyConditionLoopedTaskActive:
	push	{lr}
	mov	r0, #0xc
	bl	GetSubstructPtr
	ldr	r0, [r0]
	bl	IsLoopedTaskActive
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 GetPartyConditionLoopedTaskActive,.Lfe4-GetPartyConditionLoopedTaskActive
	.align	2, 0
	.globl	LoopedTask_OpenPartyConditionGraph
	.type	 LoopedTask_OpenPartyConditionGraph,function
	.thumb_func
LoopedTask_OpenPartyConditionGraph:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x14
	bls	.LCB157
	b	.L15	@long jump
.LCB157:
	lsl	r0, r4, #0x2
	ldr	r1, .L73
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L74:
	.align	2, 0
.L73:
	.word	.L55
	.align	2, 0
	.align	2, 0
.L55:
	.word	.L16
	.word	.L18
	.word	.L19
	.word	.L21
	.word	.L24
	.word	.L26
	.word	.L27
	.word	.L30
	.word	.L31
	.word	.L32
	.word	.L34
	.word	.L35
	.word	.L36
	.word	.L37
	.word	.L40
	.word	.L42
	.word	.L44
	.word	.L47
	.word	.L48
	.word	.L50
	.word	.L51
.L16:
	bl	LoadPartyConditionMenuGfx
	cmp	r0, #0x1
	beq	.LCB179
	b	.L52	@long jump
.LCB179:
	b	.L72
.L18:
	ldr	r0, .L75
	mov	r1, #0x3
	bl	InitBgTemplates
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	ldr	r1, .L75+0x4
	mov	r0, #0x0
	bl	SetGpuReg
	ldr	r1, .L75+0x8
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L75+0xc
	mov	r0, #0x52
	bl	SetGpuReg
	ldr	r1, .L75+0x10
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x3
	b	.L60
.L76:
	.align	2, 0
.L75:
	.word	sPartyConditionBgTemplates
	.word	0x7940
	.word	0x844
	.word	0x40b
	.word	gPokenavCondition_Gfx
.L19:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB246
	b	.L52	@long jump
.LCB246:
	ldr	r1, .L77
	str	r0, [sp]
	mov	r0, #0x2
.L60:
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
.L72:
	mov	r0, #0x0
	b	.L57
.L78:
	.align	2, 0
.L77:
	.word	gUnknown_08623228
.L21:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB271
	b	.L52	@long jump
.LCB271:
	ldr	r0, .L79
	add	r4, r5, #0x4
	add	r1, r4, #0
	bl	LZ77UnCompVram
	mov	r0, #0x3
	add	r1, r4, #0
	bl	SetBgTilemapBuffer
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	bne	.L23	@cond_branch
	ldr	r1, .L79+0x4
	mov	r0, #0x9
	str	r0, [sp]
	mov	r0, #0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x5
	bl	CopyToBgTilemapBufferRect
.L23:
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L79+0x8
	mov	r1, #0x10
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	ldr	r0, .L79+0xc
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	ldr	r0, .L79+0x10
	add	r1, r5, r0
	ldr	r0, .L79+0x14
	strh	r0, [r1]
	b	.L72
.L80:
	.align	2, 0
.L79:
	.word	gPokenavCondition_Tilemap
	.word	gPokenavOptions_Tilemap
	.word	gPokenavCondition_Pal
	.word	gConditionText_Pal
	.word	0x1814
	.word	0xffb0
.L24:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB334
	b	.L52	@long jump
.LCB334:
	ldr	r0, .L81
	ldr	r1, .L81+0x4
	add	r4, r5, r1
	add	r1, r4, #0
	bl	LZ77UnCompVram
	mov	r0, #0x2
	add	r1, r4, #0
	bl	SetBgTilemapBuffer
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L81+0x8
	mov	r1, #0x30
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	mov	r0, #0x2
	bl	SetConditionGraphIOWindows
	b	.L72
.L82:
	.align	2, 0
.L81:
	.word	sConditionGraph_Tilemap
	.word	0x1004
	.word	gConditionGraphData_Pal
.L26:
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_8199DF0
	mov	r0, #0x1
	mov	r1, #0x11
	mov	r2, #0x1
	mov	r3, #0x1
	bl	sub_8199DF0
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	ldr	r2, .L83
	add	r4, r5, r2
	ldr	r2, .L83+0x4
	add	r0, sp, #0x8
	add	r1, r4, #0
	bl	CpuSet
	mov	r0, #0x1
	add	r1, r4, #0
	bl	SetBgTilemapBuffer
	b	.L72
.L84:
	.align	2, 0
.L83:
	.word	0x804
	.word	0x5000200
.L27:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB405
	b	.L52	@long jump
.LCB405:
	ldr	r0, .L85
	bl	AddWindow
	mov	r2, #0xc1
	lsl	r2, r2, #0x5
	add	r1, r5, r2
	strb	r0, [r1]
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	bne	.L29	@cond_branch
	ldr	r0, .L85+0x4
	bl	AddWindow
	ldr	r2, .L85+0x8
	add	r1, r5, r2
	strb	r0, [r1]
	ldr	r0, .L85+0xc
	bl	AddWindow
	ldr	r2, .L85+0x10
	add	r1, r5, r2
	strb	r0, [r1]
	ldr	r0, .L85+0x14
	bl	AddWindow
	ldr	r2, .L85+0x18
	add	r1, r5, r2
	strb	r0, [r1]
.L29:
	bl	DeactivateAllTextPrinters
	b	.L72
.L86:
	.align	2, 0
.L85:
	.word	sMonNameGenderWindowTemplate
	.word	sConditionGraphListIdWindowTemplate
	.word	0x1821
	.word	sUnusedWindowTemplate1
	.word	0x1822
	.word	sUnusedWindowTemplate2
	.word	0x1823
.L30:
	mov	r0, #0x0
	bl	CreateConditionMonPic
	b	.L72
.L31:
	bl	CreateMonMarkingsOrPokeballIndicators
	b	.L72
.L32:
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.LCB473
	b	.L72	@long jump
.LCB473:
	bl	CopyUnusedConditionWindowsToVram
	b	.L72
.L34:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	b	.L61
.L35:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x1
	b	.L61
.L36:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x2
.L61:
	mov	r2, #0x1
	bl	UpdateConditionGraphWindows
	b	.L72
.L37:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x3
	mov	r2, #0x1
	bl	UpdateConditionGraphWindows
	cmp	r0, #0x1
	beq	.LCB531
	b	.L52	@long jump
.LCB531:
	mov	r1, #0xc1
	lsl	r1, r1, #0x5
	add	r0, r5, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.LCB542
	b	.L72	@long jump
.LCB542:
	ldr	r2, .L87
	add	r0, r5, r2
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	ldr	r1, .L87+0x4
	add	r0, r5, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	ldr	r2, .L87+0x8
	add	r0, r5, r2
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	b	.L72
.L88:
	.align	2, 0
.L87:
	.word	0x1821
	.word	0x1822
	.word	0x1823
.L40:
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	HideBg
	mov	r0, #0x3
	bl	ShowBg
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.LCB583
	b	.L72	@long jump
.LCB583:
	mov	r0, #0x4
	bl	PrintHelpBarText
	b	.L72
.L42:
	mov	r0, #0x1
	bl	PokenavFadeScreen
	bl	IsConditionMenuSearchMode
	cmp	r0, #0
	beq	.LCB595
	b	.L72	@long jump
.LCB595:
	mov	r0, #0x6
	bl	LoadLeftHeaderGfxForIndex
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
	mov	r0, #0x6
	mov	r1, #0x1
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
	b	.L72
.L44:
	bl	IsPaletteFadeActive
	cmp	r0, #0
	bne	.L52	@cond_branch
	bl	IsConditionMenuSearchMode
	cmp	r0, #0
	bne	.L46	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L52	@cond_branch
.L46:
	ldr	r0, .L89
	bl	SetVBlankCallback_
	b	.L72
.L90:
	.align	2, 0
.L89:
	.word	sub_81CEE44
.L47:
	bl	DoConditionGraphTransition
	bl	GetConditionGraphDataPtr
	bl	InitConditionGraphState
	b	.L72
.L48:
	bl	GetConditionGraphDataPtr
	bl	SetupConditionGraphScanlineParams
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L52	@cond_branch
	b	.L72
.L50:
	mov	r0, #0x1
	bl	ToggleBg2
	b	.L72
.L51:
	bl	GetConditionGraphDataPtr
	ldr	r2, .L91
	add	r1, r5, r2
	bl	TryUpdateConditionMonTransitionOn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L52	@cond_branch
	ldr	r0, .L91+0x4
	add	r6, r5, r0
	add	r0, r6, #0
	bl	ResetConditionSparkleSprites
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.L54	@cond_branch
	bl	GetConditionGraphCurrentMonIndex
	add	r4, r0, #0
	bl	GetMonListCount
	lsl	r4, r4, #0x10
	lsl	r0, r0, #0x10
	cmp	r4, r0
	beq	.L15	@cond_branch
.L54:
	ldr	r1, .L91+0x8
	add	r0, r5, r1
	ldrb	r4, [r0]
	bl	GetMonSheen
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r6, #0
	add	r1, r4, #0
	bl	CreateConditionSparkleSprites
	b	.L64
.L92:
	.align	2, 0
.L91:
	.word	0x1814
	.word	0x28e0
	.word	0x1816
.L52:
	mov	r0, #0x2
	b	.L57
.L64:
.L15:
	mov	r0, #0x4
.L57:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 LoopedTask_OpenPartyConditionGraph,.Lfe5-LoopedTask_OpenPartyConditionGraph
	.align	2, 0
	.globl	LoopedTask_ExitPartyConditionMenu
	.type	 LoopedTask_ExitPartyConditionMenu,function
	.thumb_func
LoopedTask_ExitPartyConditionMenu:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x1
	beq	.L96	@cond_branch
	cmp	r4, #0x1
	bgt	.L105	@cond_branch
	cmp	r4, #0
	beq	.L95	@cond_branch
	b	.L94
.L105:
	cmp	r4, #0x2
	beq	.L98	@cond_branch
	cmp	r4, #0x3
	beq	.L100	@cond_branch
	b	.L94
.L95:
	bl	sub_81CEEC8
	ldr	r1, .L107
	add	r0, r5, r1
	bl	DestroyConditionSparkleSprites
	mov	r0, #0x1
	b	.L106
.L108:
	.align	2, 0
.L107:
	.word	0x28e0
.L96:
	bl	GetConditionGraphDataPtr
	ldr	r2, .L109
	add	r1, r5, r2
	bl	TryUpdateConditionMonTransitionOff
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L102	@cond_branch
	mov	r0, #0x0
	bl	ToggleBg2
	mov	r0, #0x1
	b	.L106
.L110:
	.align	2, 0
.L109:
	.word	0x1814
.L98:
	mov	r0, #0x0
	bl	PokenavFadeScreen
	bl	IsConditionMenuSearchMode
	cmp	r0, #0
	bne	.L99	@cond_branch
	bl	SlideMenuHeaderDown
.L99:
	mov	r0, #0x0
	b	.L106
.L100:
	bl	IsPaletteFadeActive
	cmp	r0, #0
	bne	.L102	@cond_branch
	bl	MainMenuLoopedTaskIsBusy
	cmp	r0, #0
	beq	.L101	@cond_branch
.L102:
	mov	r0, #0x2
	b	.L106
.L101:
	ldr	r1, .L111
	add	r0, r5, r1
	bl	FreeConditionSparkles
	mov	r0, #0x1
	bl	HideBg
	mov	r0, #0x2
	bl	HideBg
	mov	r0, #0x3
	bl	HideBg
	mov	r0, #0x1
	b	.L106
.L112:
	.align	2, 0
.L111:
	.word	0x28e0
.L94:
	mov	r0, #0x4
.L106:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 LoopedTask_ExitPartyConditionMenu,.Lfe6-LoopedTask_ExitPartyConditionMenu
	.align	2, 0
	.globl	LoopedTask_TransitionMons
	.type	 LoopedTask_TransitionMons,function
	.thumb_func
LoopedTask_TransitionMons:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r6, r0, #0
	bl	GetConditionGraphDataPtr
	add	r2, r0, #0
	cmp	r4, #0x9
	bls	.LCB873
	b	.L114	@long jump
.LCB873:
	lsl	r0, r4, #0x2
	ldr	r1, .L141
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L142:
	.align	2, 0
.L141:
	.word	.L129
	.align	2, 0
	.align	2, 0
.L129:
	.word	.L115
	.word	.L116
	.word	.L117
	.word	.L118
	.word	.L119
	.word	.L121
	.word	.L122
	.word	.L123
	.word	.L124
	.word	.L126
.L115:
	mov	r0, #0x0
	b	.L132
.L116:
	mov	r0, #0x1
.L132:
	bl	SetConditionGraphData
.L140:
	mov	r0, #0x1
	b	.L131
.L117:
	mov	r0, #0x2
	bl	SetConditionGraphData
	ldr	r1, .L143
	add	r0, r6, r1
	bl	DestroyConditionSparkleSprites
	b	.L140
.L144:
	.align	2, 0
.L143:
	.word	0x28e0
.L118:
	add	r0, r2, #0
	bl	TransitionConditionGraph
	b	.L140
.L119:
	ldr	r1, .L145
	add	r0, r6, r1
	bl	MoveConditionMonOffscreen
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L127	@cond_branch
	bl	GetMonMarkIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CreateConditionMonPic
	b	.L140
.L146:
	.align	2, 0
.L145:
	.word	0x1814
.L121:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	b	.L133
.L122:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x1
	b	.L133
.L123:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x2
.L133:
	mov	r2, #0x0
	bl	UpdateConditionGraphWindows
	b	.L140
.L124:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x3
	mov	r2, #0x0
	bl	UpdateConditionGraphWindows
	cmp	r0, #0x1
	beq	.L140	@cond_branch
	b	.L127
.L126:
	bl	GetConditionGraphDataPtr
	add	r2, r0, #0
	ldr	r0, .L147
	add	r1, r6, r0
	add	r0, r2, #0
	bl	TryUpdateConditionMonTransitionOn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L127	@cond_branch
	ldr	r1, .L147+0x4
	add	r0, r6, r1
	bl	ResetConditionSparkleSprites
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.L128	@cond_branch
	bl	GetConditionGraphCurrentMonIndex
	add	r4, r0, #0
	bl	GetMonListCount
	lsl	r4, r4, #0x10
	lsl	r0, r0, #0x10
	cmp	r4, r0
	beq	.L140	@cond_branch
.L128:
	ldr	r0, .L147+0x4
	add	r5, r6, r0
	ldr	r1, .L147+0x8
	add	r0, r6, r1
	ldrb	r4, [r0]
	bl	GetMonSheen
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	CreateConditionSparkleSprites
	b	.L140
.L148:
	.align	2, 0
.L147:
	.word	0x1814
	.word	0x28e0
	.word	0x1816
.L127:
	mov	r0, #0x2
	b	.L131
.L114:
	mov	r0, #0x4
.L131:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 LoopedTask_TransitionMons,.Lfe7-LoopedTask_TransitionMons
	.align	2, 0
	.globl	LoopedTask_MoveCursorNoTransition
	.type	 LoopedTask_MoveCursorNoTransition,function
	.thumb_func
LoopedTask_MoveCursorNoTransition:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x8
	bhi	.L150	@cond_branch
	lsl	r0, r4, #0x2
	ldr	r1, .L167
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L168:
	.align	2, 0
.L167:
	.word	.L162
	.align	2, 0
	.align	2, 0
.L162:
	.word	.L151
	.word	.L152
	.word	.L153
	.word	.L154
	.word	.L155
	.word	.L156
	.word	.L157
	.word	.L158
	.word	.L160
.L151:
	mov	r0, #0x0
	b	.L165
.L152:
	mov	r0, #0x1
	b	.L165
.L153:
	mov	r0, #0x2
.L165:
	bl	SetConditionGraphData
	mov	r0, #0x1
	b	.L164
.L154:
	bl	GetMonMarkIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CreateConditionMonPic
	mov	r0, #0x1
	b	.L164
.L155:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	b	.L166
.L156:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x1
	b	.L166
.L157:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x2
.L166:
	mov	r2, #0x0
	bl	UpdateConditionGraphWindows
	mov	r0, #0x1
	b	.L164
.L158:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x3
	mov	r2, #0x0
	bl	UpdateConditionGraphWindows
	cmp	r0, #0x1
	bne	.L161	@cond_branch
	mov	r0, #0x1
	b	.L164
.L160:
	bl	GetConditionGraphDataPtr
	ldr	r2, .L169
	add	r1, r5, r2
	bl	TryUpdateConditionMonTransitionOn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L161	@cond_branch
	ldr	r0, .L169+0x4
	add	r4, r5, r0
	add	r0, r4, #0
	bl	ResetConditionSparkleSprites
	ldr	r1, .L169+0x8
	add	r0, r5, r1
	ldrb	r5, [r0]
	bl	GetMonSheen
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	CreateConditionSparkleSprites
	mov	r0, #0x1
	b	.L164
.L170:
	.align	2, 0
.L169:
	.word	0x1814
	.word	0x28e0
	.word	0x1816
.L161:
	mov	r0, #0x2
	b	.L164
.L150:
	mov	r0, #0x4
.L164:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 LoopedTask_MoveCursorNoTransition,.Lfe8-LoopedTask_MoveCursorNoTransition
	.align	2, 0
	.globl	LoopedTask_SlideMonOut
	.type	 LoopedTask_SlideMonOut,function
	.thumb_func
LoopedTask_SlideMonOut:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x7
	bhi	.L172	@cond_branch
	lsl	r0, r4, #0x2
	ldr	r1, .L192
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L193:
	.align	2, 0
.L192:
	.word	.L183
	.align	2, 0
	.align	2, 0
.L183:
	.word	.L173
	.word	.L174
	.word	.L175
	.word	.L176
	.word	.L178
	.word	.L179
	.word	.L180
	.word	.L181
.L173:
	mov	r0, #0x0
	b	.L186
.L174:
	mov	r0, #0x1
.L186:
	bl	SetConditionGraphData
.L191:
	mov	r0, #0x1
	b	.L185
.L175:
	mov	r0, #0x2
	bl	SetConditionGraphData
	ldr	r1, .L194
	add	r0, r5, r1
	bl	DestroyConditionSparkleSprites
	b	.L191
.L195:
	.align	2, 0
.L194:
	.word	0x28e0
.L176:
	bl	GetConditionGraphDataPtr
	ldr	r2, .L196
	add	r1, r5, r2
	bl	TryUpdateConditionMonTransitionOff
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L191	@cond_branch
	b	.L182
.L197:
	.align	2, 0
.L196:
	.word	0x1814
.L178:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	b	.L188
.L179:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x1
	b	.L188
.L180:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x2
.L188:
	mov	r2, #0x0
	bl	UpdateConditionGraphWindows
	b	.L191
.L181:
	bl	GetMonMarkIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	mov	r0, #0x3
	mov	r2, #0x0
	bl	UpdateConditionGraphWindows
	cmp	r0, #0x1
	beq	.L191	@cond_branch
.L182:
	mov	r0, #0x2
	b	.L185
.L172:
	mov	r0, #0x4
.L185:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 LoopedTask_SlideMonOut,.Lfe9-LoopedTask_SlideMonOut
	.align	2, 0
	.globl	LoopedTask_OpenMonMarkingsWindow
	.type	 LoopedTask_OpenMonMarkingsWindow,function
	.thumb_func
LoopedTask_OpenMonMarkingsWindow:
	push	{lr}
	cmp	r0, #0x1
	beq	.L201	@cond_branch
	cmp	r0, #0x1
	bgt	.L206	@cond_branch
	cmp	r0, #0
	beq	.L200	@cond_branch
	b	.L199
.L206:
	cmp	r0, #0x2
	beq	.L202	@cond_branch
	b	.L199
.L200:
	bl	TryGetMonMarkId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0xb0
	mov	r2, #0x20
	bl	sub_811FAA4
.L209:
	mov	r0, #0x1
	b	.L207
.L201:
	mov	r0, #0x5
	bl	PrintHelpBarText
	b	.L209
.L202:
	bl	WaitForHelpBar
	cmp	r0, #0x1
	bne	.L209	@cond_branch
	mov	r0, #0x2
	b	.L207
.L199:
	mov	r0, #0x4
.L207:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 LoopedTask_OpenMonMarkingsWindow,.Lfe10-LoopedTask_OpenMonMarkingsWindow
	.align	2, 0
	.globl	LoopedTask_CloseMonMarkingsWindow
	.type	 LoopedTask_CloseMonMarkingsWindow,function
	.thumb_func
LoopedTask_CloseMonMarkingsWindow:
	push	{lr}
	cmp	r0, #0x1
	beq	.L213	@cond_branch
	cmp	r0, #0x1
	bgt	.L218	@cond_branch
	cmp	r0, #0
	beq	.L212	@cond_branch
	b	.L211
.L218:
	cmp	r0, #0x2
	beq	.L214	@cond_branch
	b	.L211
.L212:
	bl	sub_811FAF8
.L221:
	mov	r0, #0x1
	b	.L219
.L213:
	mov	r0, #0x4
	bl	PrintHelpBarText
	b	.L221
.L214:
	bl	WaitForHelpBar
	cmp	r0, #0x1
	bne	.L221	@cond_branch
	mov	r0, #0x2
	b	.L219
.L211:
	mov	r0, #0x4
.L219:
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 LoopedTask_CloseMonMarkingsWindow,.Lfe11-LoopedTask_CloseMonMarkingsWindow
	.align	2, 0
	.type	 UnusedPrintNumberString,function
	.thumb_func
UnusedPrintNumberString:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L223
	bl	StringCopy
	pop	{r1}
	bx	r1
.L224:
	.align	2, 0
.L223:
	.word	gText_Number2
.Lfe12:
	.size	 UnusedPrintNumberString,.Lfe12-UnusedPrintNumberString
	.align	2, 0
	.globl	UpdateConditionGraphWindows
	.type	 UpdateConditionGraphWindows,function
	.thumb_func
UpdateConditionGraphWindows:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x2c
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r6, r0, #0
	cmp	r4, #0x1
	beq	.L229	@cond_branch
	cmp	r4, #0x1
	bgt	.L248	@cond_branch
	cmp	r4, #0
	beq	.L227	@cond_branch
	b	.L226
.L248:
	cmp	r4, #0x2
	beq	.L232	@cond_branch
	cmp	r4, #0x3
	bne	.LCB1568
	b	.L234	@long jump
.LCB1568:
	b	.L226
.L227:
	mov	r1, #0xc1
	lsl	r1, r1, #0x5
	add	r0, r6, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.LCB1585
	b	.L226	@long jump
.LCB1585:
	ldr	r1, .L250
	add	r0, r6, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	b	.L226
.L251:
	.align	2, 0
.L250:
	.word	0x1821
.L229:
	bl	GetConditionGraphCurrentMonIndex
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	GetMonListCount
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	sub	r0, r0, #0x1
	cmp	r4, r0
	bne	.L231	@cond_branch
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.LCB1616
	b	.L226	@long jump
.LCB1616:
.L231:
	mov	r1, r8
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	bl	GetConditionMonNameBuffer
	add	r2, r0, #0
	mov	r1, #0xc1
	lsl	r1, r1, #0x5
	add	r0, r6, r1
	ldrb	r0, [r0]
	str	r7, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	b	.L226
.L232:
	bl	IsConditionMenuSearchMode
	add	r7, r0, #0
	cmp	r7, #0x1
	beq	.LCB1645
	b	.L226	@long jump
.LCB1645:
	mov	r1, r8
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	bl	GetConditionMonLocationBuffer
	add	r2, r0, #0
	mov	r1, #0xc1
	lsl	r1, r1, #0x5
	add	r0, r6, r1
	ldrb	r0, [r0]
	mov	r1, #0x11
	str	r1, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	add	r1, sp, #0xc
	mov	r0, #0xfc
	strb	r0, [r1]
	mov	r0, #0x4
	strb	r0, [r1, #0x1]
	mov	r0, #0x8
	strb	r0, [r1, #0x2]
	add	r0, r1, #0
	strb	r4, [r0, #0x3]
	mov	r0, #0x9
	strb	r0, [r1, #0x4]
	mov	r5, sp
	add	r5, r5, #0x11
	ldr	r1, .L252
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L252+0x4
	add	r6, r6, r0
	ldrb	r0, [r6]
	str	r7, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	mov	r3, #0x4
	bl	AddTextPrinterParameterized
	bl	GetConditionMonDataBuffer
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r5, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldrb	r0, [r6]
	str	r7, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	mov	r3, #0x1c
	bl	AddTextPrinterParameterized
	b	.L226
.L253:
	.align	2, 0
.L252:
	.word	gText_Number2
	.word	0x1821
.L234:
	ldr	r1, .L254
	add	r0, r6, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L236	@cond_branch
	cmp	r0, #0x1
	beq	.L241	@cond_branch
	b	.L226
.L255:
	.align	2, 0
.L254:
	.word	0x2908
.L236:
	cmp	r5, #0
	beq	.L237	@cond_branch
	mov	r1, #0xc1
	lsl	r1, r1, #0x5
	add	r0, r6, r1
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	CopyWindowToVram
	b	.L238
.L237:
	mov	r1, #0xc1
	lsl	r1, r1, #0x5
	add	r0, r6, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
.L238:
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	bne	.L243	@cond_branch
	ldr	r0, .L256
	add	r1, r6, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L226
.L257:
	.align	2, 0
.L256:
	.word	0x2908
.L241:
	cmp	r5, #0
	beq	.L242	@cond_branch
	ldr	r1, .L258
	add	r0, r6, r1
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	CopyWindowToVram
	b	.L243
.L259:
	.align	2, 0
.L258:
	.word	0x1821
.L242:
	ldr	r1, .L260
	add	r0, r6, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
.L243:
	ldr	r0, .L260+0x4
	add	r1, r6, r0
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L249
.L261:
	.align	2, 0
.L260:
	.word	0x1821
	.word	0x2908
.L226:
	mov	r0, #0x0
.L249:
	add	sp, sp, #0x2c
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 UpdateConditionGraphWindows,.Lfe13-UpdateConditionGraphWindows
	.align	2, 0
	.globl	CopyUnusedConditionWindowsToVram
	.type	 CopyUnusedConditionWindowsToVram,function
	.thumb_func
CopyUnusedConditionWindowsToVram:
	push	{r4, lr}
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r4, r0, #0
	ldr	r1, .L263
	add	r0, r4, r1
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L263+0x4
	add	r4, r4, r0
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L264:
	.align	2, 0
.L263:
	.word	0x1822
	.word	0x1823
.Lfe14:
	.size	 CopyUnusedConditionWindowsToVram,.Lfe14-CopyUnusedConditionWindowsToVram
	.align	2, 0
	.globl	sub_81CE964
	.type	 sub_81CE964,function
	.thumb_func
sub_81CE964:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r0, #0x2e
	ldrsh	r4, [r5, r0]
	bl	GetConditionGraphCurrentMonIndex
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	bne	.L266	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	b	.L267
.L266:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
.L267:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 sub_81CE964,.Lfe15-sub_81CE964
	.align	2, 0
	.globl	HighlightCurrentPartyIndexPokeball
	.type	 HighlightCurrentPartyIndexPokeball,function
	.thumb_func
HighlightCurrentPartyIndexPokeball:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	GetConditionGraphCurrentMonIndex
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	GetMonListCount
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	sub	r0, r0, #0x1
	cmp	r4, r0
	bne	.L269	@cond_branch
	mov	r0, #0x65
	b	.L271
.L269:
	mov	r0, #0x66
.L271:
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	ldrb	r2, [r5, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 HighlightCurrentPartyIndexPokeball,.Lfe16-HighlightCurrentPartyIndexPokeball
	.align	2, 0
	.globl	MonMarkingsCallback
	.type	 MonMarkingsCallback,function
	.thumb_func
MonMarkingsCallback:
	push	{r4, lr}
	add	r4, r0, #0
	bl	TryGetMonMarkId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 MonMarkingsCallback,.Lfe17-MonMarkingsCallback
	.align	2, 0
	.globl	CreateMonMarkingsOrPokeballIndicators
	.type	 CreateMonMarkingsOrPokeballIndicators,function
	.thumb_func
CreateMonMarkingsOrPokeballIndicators:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x58
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r6, r0, #0
	add	r4, sp, #0x20
	add	r5, sp, #0x38
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r5, #0
	bl	LoadConditionSelectionIcons
	bl	IsConditionMenuSearchMode
	add	r7, r4, #0
	mov	sl, r5
	cmp	r0, #0x1
	bne	.L274	@cond_branch
	ldr	r1, .L292
	add	r0, r6, r1
	mov	r2, #0x6a
	strh	r2, [r0]
	ldr	r3, .L292+0x4
	add	r1, r6, r3
	strh	r2, [r1]
	bl	sub_811F90C
	bl	sub_811FA90
	ldr	r2, .L292+0x8
	mov	r0, #0x69
	mov	r1, #0x69
	bl	CreateMonMarkingsSpriteWithPal
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0xc0
	strh	r1, [r0, #0x20]
	mov	r1, #0x20
	strh	r1, [r0, #0x22]
	ldr	r1, .L292+0xc
	str	r1, [r0, #0x1c]
	ldr	r2, .L292+0x10
	add	r1, r6, r2
	str	r0, [r1]
	mov	r0, #0x69
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	PokenavFillPalette
	add	r3, sp, #0x50
	mov	r8, r3
	b	.L275
.L293:
	.align	2, 0
.L292:
	.word	0x1824
	.word	0x1826
	.word	sConditionGraphMonMarkingsPal
	.word	MonMarkingsCallback
	.word	0x28dc
.L274:
	mov	r0, sp
	bl	LoadSpriteSheets
	mov	r0, sl
	bl	Pokenav_AllocAndLoadPalettes
	mov	r4, #0x0
	add	r0, sp, #0x50
	mov	r8, r0
	b	.L276
.L279:
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r2, r2, #0x12
	mov	r1, #0x80
	lsl	r1, r1, #0xc
	add	r2, r2, r1
	asr	r2, r2, #0x10
	add	r0, r7, #0
	mov	r1, #0xe2
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L280	@cond_branch
	ldr	r2, .L294
	add	r0, r6, r2
	add	r0, r0, r4
	strb	r3, [r0]
	ldr	r2, .L294+0x4
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	strh	r4, [r1, #0x2e]
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L294+0x8
	str	r1, [r0]
	b	.L278
.L295:
	.align	2, 0
.L294:
	.word	0x1806
	.word	gSprites
	.word	sub_81CE964
.L280:
	ldr	r3, .L296
	add	r0, r6, r3
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
.L278:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L276:
	bl	GetMonListCount
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	sub	r0, r0, #0x1
	cmp	r4, r0
	blt	.L279	@cond_branch
	mov	r0, #0x67
	strh	r0, [r7]
	ldr	r0, .L296+0x4
	str	r0, [r7, #0x14]
	cmp	r4, #0x5
	bhi	.L284	@cond_branch
	ldr	r0, .L296
	add	r5, r6, r0
	ldr	r1, .L296+0x8
	mov	r9, r1
.L286:
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r2, r2, #0x12
	mov	r3, #0x80
	lsl	r3, r3, #0xc
	add	r2, r2, r3
	asr	r2, r2, #0x10
	add	r0, r7, #0
	mov	r1, #0xe6
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L287	@cond_branch
	add	r0, r5, r4
	strb	r3, [r0]
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r9
	ldrb	r2, [r1, #0x3]
	mov	r0, #0x3f
	and	r0, r0, r2
	strb	r0, [r1, #0x3]
	b	.L285
.L297:
	.align	2, 0
.L296:
	.word	0x1806
	.word	SpriteCallbackDummy
	.word	gSprites
.L287:
	add	r1, r5, r4
	mov	r0, #0xff
	strb	r0, [r1]
.L285:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x5
	bls	.L286	@cond_branch
.L284:
	mov	r0, #0x66
	strh	r0, [r7]
	ldr	r0, .L298
	str	r0, [r7, #0x14]
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r2, r2, #0x12
	mov	r0, #0x80
	lsl	r0, r0, #0xc
	add	r2, r2, r0
	asr	r2, r2, #0x10
	add	r0, r7, #0
	mov	r1, #0xde
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L290	@cond_branch
	ldr	r1, .L298+0x4
	add	r0, r6, r1
	add	r0, r0, r4
	strb	r3, [r0]
	ldr	r0, .L298+0x8
	lsl	r2, r3, #0x4
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	ldrb	r3, [r2, #0x1]
	mov	r1, #0x3f
	add	r0, r1, #0
	and	r0, r0, r3
	mov	r3, #0x40
	orr	r0, r0, r3
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x3]
	and	r1, r1, r0
	mov	r0, #0x80
	orr	r1, r1, r0
	strb	r1, [r2, #0x3]
	b	.L275
.L299:
	.align	2, 0
.L298:
	.word	HighlightCurrentPartyIndexPokeball
	.word	0x1806
	.word	gSprites
.L290:
	ldr	r2, .L300
	add	r0, r6, r2
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
.L275:
	mov	r0, r8
	mov	r1, sl
	bl	LoadConditionSparkle
	mov	r0, r8
	bl	LoadSpriteSheet
	mov	r0, #0x0
	mov	r3, sl
	str	r0, [r3, #0x8]
	mov	r0, sl
	bl	Pokenav_AllocAndLoadPalettes
	add	sp, sp, #0x58
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L301:
	.align	2, 0
.L300:
	.word	0x1806
.Lfe18:
	.size	 CreateMonMarkingsOrPokeballIndicators,.Lfe18-CreateMonMarkingsOrPokeballIndicators
	.align	2, 0
	.globl	sub_81CEBF4
	.type	 sub_81CEBF4,function
	.thumb_func
sub_81CEBF4:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	bne	.L303	@cond_branch
	ldr	r1, .L311
	add	r0, r5, r1
	ldr	r0, [r0]
	bl	DestroySprite
	mov	r0, #0x6a
	bl	FreeSpriteTilesByTag
	mov	r0, #0x69
	bl	FreeSpriteTilesByTag
	mov	r0, #0x6a
	bl	FreeSpritePaletteByTag
	mov	r0, #0x69
	bl	FreeSpritePaletteByTag
	b	.L304
.L312:
	.align	2, 0
.L311:
	.word	0x28dc
.L303:
	mov	r4, #0x0
.L308:
	ldr	r1, .L313
	add	r0, r5, r1
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L313+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L308	@cond_branch
	mov	r0, #0x65
	bl	FreeSpriteTilesByTag
	mov	r0, #0x66
	bl	FreeSpriteTilesByTag
	mov	r0, #0x67
	bl	FreeSpriteTilesByTag
	mov	r0, #0x65
	bl	FreeSpritePaletteByTag
	mov	r0, #0x66
	bl	FreeSpritePaletteByTag
.L304:
	ldr	r0, .L313+0x8
	add	r1, r5, r0
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L310	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L313+0x4
	add	r0, r0, r1
	bl	DestroySprite
	mov	r0, #0x64
	bl	FreeSpriteTilesByTag
	mov	r0, #0x64
	bl	FreeSpritePaletteByTag
.L310:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	0x1806
	.word	gSprites
	.word	0x1816
.Lfe19:
	.size	 sub_81CEBF4,.Lfe19-sub_81CEBF4
	.align	2, 0
	.globl	FreePartyConditionSubstruct2
	.type	 FreePartyConditionSubstruct2,function
	.thumb_func
FreePartyConditionSubstruct2:
	push	{r4, lr}
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r4, r0, #0
	mov	r1, #0xc1
	lsl	r1, r1, #0x5
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	RemoveWindow
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	bne	.L316	@cond_branch
	ldr	r1, .L318
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	RemoveWindow
	ldr	r1, .L318+0x4
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	RemoveWindow
	ldr	r1, .L318+0x8
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	RemoveWindow
	b	.L317
.L319:
	.align	2, 0
.L318:
	.word	0x1821
	.word	0x1822
	.word	0x1823
.L316:
	bl	SetLeftHeaderSpritesInvisibility
.L317:
	mov	r1, #0x8a
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	add	r0, r4, #0
	bl	sub_81CEBF4
	bl	sub_81CEE68
	mov	r0, #0xc
	bl	FreePokenavSubstruct
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 FreePartyConditionSubstruct2,.Lfe20-FreePartyConditionSubstruct2
	.align	2, 0
	.globl	MonPicGfxSpriteCallback
	.type	 MonPicGfxSpriteCallback,function
	.thumb_func
MonPicGfxSpriteCallback:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0xc
	bl	GetSubstructPtr
	ldr	r1, .L321
	add	r0, r0, r1
	ldrh	r0, [r0]
	add	r0, r0, #0x26
	strh	r0, [r4, #0x20]
	pop	{r4}
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	0x1814
.Lfe21:
	.size	 MonPicGfxSpriteCallback,.Lfe21-MonPicGfxSpriteCallback
	.align	2, 0
	.globl	CreateConditionMonPic
	.type	 CreateConditionMonPic,function
	.thumb_func
CreateConditionMonPic:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, #0xc
	bl	GetSubstructPtr
	mov	r8, r0
	ldr	r7, .L328
	add	r7, r7, r8
	ldrb	r0, [r7]
	cmp	r0, #0xff
	bne	.L324	@cond_branch
	add	r5, sp, #0x18
	add	r4, sp, #0x20
	add	r0, r5, #0
	mov	r1, sp
	add	r2, r4, #0
	bl	LoadConditionMonPicTemplate
	add	r0, r6, #0
	bl	GetConditionMonPicGfx
	str	r0, [sp, #0x18]
	add	r0, r6, #0
	bl	GetConditionMonPal
	str	r0, [sp, #0x20]
	add	r0, r4, #0
	bl	LoadSpritePalette
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L328+0x4
	add	r4, r4, r8
	strh	r0, [r4]
	add	r0, r5, #0
	bl	LoadSpriteSheet
	ldr	r5, .L328+0x8
	add	r5, r5, r8
	strh	r0, [r5]
	mov	r0, sp
	mov	r1, #0x26
	mov	r2, #0x68
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strb	r0, [r7]
	cmp	r0, #0x40
	bne	.L325	@cond_branch
	mov	r0, #0x64
	bl	FreeSpriteTilesByTag
	mov	r0, #0x64
	bl	FreeSpritePaletteByTag
	mov	r0, #0xff
	strb	r0, [r7]
	b	.L327
.L329:
	.align	2, 0
.L328:
	.word	0x1816
	.word	0x1818
	.word	0x181a
.L325:
	strb	r0, [r7]
	ldr	r2, .L330
	ldrb	r1, [r7]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L330+0x4
	str	r1, [r0]
	ldr	r1, .L330+0x8
	add	r1, r1, r8
	ldrh	r0, [r5]
	lsl	r0, r0, #0x5
	ldr	r2, .L330+0xc
	add	r0, r0, r2
	str	r0, [r1]
	ldrh	r0, [r4]
	lsl	r0, r0, #0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	strh	r0, [r4]
	b	.L327
.L331:
	.align	2, 0
.L330:
	.word	gSprites
	.word	MonPicGfxSpriteCallback
	.word	0x181c
	.word	0x6010000
.L324:
	add	r0, r6, #0
	bl	GetConditionMonPicGfx
	ldr	r1, .L332
	add	r1, r1, r8
	ldr	r2, [r1]
	ldr	r1, .L332+0x4
	str	r0, [r1]
	str	r2, [r1, #0x4]
	ldr	r0, .L332+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r0, r6, #0
	bl	GetConditionMonPal
	ldr	r1, .L332+0xc
	add	r1, r1, r8
	ldrh	r1, [r1]
	mov	r2, #0x20
	bl	LoadPalette
.L327:
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	0x181c
	.word	0x40000d4
	.word	-0x7ffffc00
	.word	0x1818
.Lfe22:
	.size	 CreateConditionMonPic,.Lfe22-CreateConditionMonPic
	.align	2, 0
	.globl	sub_81CEE44
	.type	 sub_81CEE44,function
	.thumb_func
sub_81CEE44:
	push	{r4, lr}
	bl	GetConditionGraphDataPtr
	add	r4, r0, #0
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	add	r0, r4, #0
	bl	sub_81D2108
	bl	ScanlineEffect_InitHBlankDmaTransfer
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 sub_81CEE44,.Lfe23-sub_81CEE44
	.align	2, 0
	.globl	sub_81CEE68
	.type	 sub_81CEE68,function
	.thumb_func
sub_81CEE68:
	push	{lr}
	bl	SetPokenavVBlankCallback
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 sub_81CEE68,.Lfe24-sub_81CEE68
	.align	2, 0
	.globl	ToggleBg2
	.type	 ToggleBg2,function
	.thumb_func
ToggleBg2:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L337	@cond_branch
	mov	r0, #0x2
	bl	ShowBg
	b	.L338
.L337:
	mov	r0, #0x2
	bl	HideBg
.L338:
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 ToggleBg2,.Lfe25-ToggleBg2
	.align	2, 0
	.globl	DoConditionGraphTransition
	.type	 DoConditionGraphTransition,function
	.thumb_func
DoConditionGraphTransition:
	push	{r4, lr}
	bl	GetConditionGraphDataPtr
	add	r4, r0, #0
	bl	GetMonMarkIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L340
	strb	r0, [r1]
	add	r1, r4, #0
	add	r1, r1, #0x50
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, #0x14
	add	r2, r4, r2
	add	r0, r4, #0
	bl	sub_81D1F84
	add	r0, r4, #0
	bl	TransitionConditionGraph
	pop	{r4}
	pop	{r0}
	bx	r0
.L341:
	.align	2, 0
.L340:
	.word	gUnknown_030012BC
.Lfe26:
	.size	 DoConditionGraphTransition,.Lfe26-DoConditionGraphTransition
	.align	2, 0
	.globl	sub_81CEEC8
	.type	 sub_81CEEC8,function
	.thumb_func
sub_81CEEC8:
	push	{r4, r5, lr}
	bl	GetConditionGraphDataPtr
	add	r5, r0, #0
	bl	IsConditionMenuSearchMode
	cmp	r0, #0
	bne	.L344	@cond_branch
	bl	GetConditionGraphCurrentMonIndex
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	GetMonListCount
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	sub	r0, r0, #0x1
	cmp	r4, r0
	beq	.L343	@cond_branch
.L344:
	bl	GetMonMarkIndex
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, #0x14
	add	r1, r5, r1
	add	r2, r5, #0
	add	r2, r2, #0x50
	add	r0, r5, #0
	bl	sub_81D1F84
.L343:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 sub_81CEEC8,.Lfe27-sub_81CEEC8
	.align	2, 0
	.globl	GetMonMarkingsData
	.type	 GetMonMarkingsData,function
	.thumb_func
GetMonMarkingsData:
	push	{r4, lr}
	mov	r0, #0xc
	bl	GetSubstructPtr
	add	r4, r0, #0
	bl	IsConditionMenuSearchMode
	cmp	r0, #0x1
	beq	.L346	@cond_branch
	mov	r0, #0x0
	b	.L348
.L346:
	ldr	r1, .L349
	add	r0, r4, r1
	ldrb	r0, [r0]
.L348:
	pop	{r4}
	pop	{r1}
	bx	r1
.L350:
	.align	2, 0
.L349:
	.word	0x1828
.Lfe28:
	.size	 GetMonMarkingsData,.Lfe28-GetMonMarkingsData
	.globl	gUnknown_030012BC
.bss
	.type	 gUnknown_030012BC,object
	.size	 gUnknown_030012BC,1
gUnknown_030012BC:
	.space	1
.text
	.align	2, 0

