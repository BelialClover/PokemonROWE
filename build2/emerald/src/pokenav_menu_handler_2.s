@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 sPokenavBgDotsPal,object
sPokenavBgDotsPal:
	.short	0x0
	.short	0x7fff
	.short	0x7bfb
	.short	0x6718
	.short	0x25e
	.short	0x1b1e
	.short	0x33bf
	.short	0x7f9d
	.short	0x7f1a
	.short	0x6b7f
	.short	0x5aff
	.short	0x257
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sPokenavBgDotsPal,32
	.align	2, 0
	.type	 sPokenavBgDotsTiles,object
sPokenavBgDotsTiles:
	.word	0x4010
	.word	-0xfeeeecd
	.word	0x2101d001
	.word	-0xffecfee
	.word	0x1111000f
	.size	 sPokenavBgDotsTiles,20
	.align	2, 0
	.type	 sPokenavBgDotsTilemap,object
sPokenavBgDotsTilemap:
	.word	0x50010
	.word	-0xfcffec1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x7ffe0fff
	.word	0x1f0
	.size	 sPokenavBgDotsTilemap,160
	.align	1, 0
	.type	 sPokenavDeviceBgPal,object
sPokenavDeviceBgPal:
	.short	0x7fff
	.short	0x1595
	.short	0x4a55
	.short	0x56b6
	.short	0x3b1f
	.short	0x31fe
	.short	0x6694
	.short	0x798c
	.short	0x7fff
	.short	0x7ec1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6b39
	.short	0x5eb5
	.size	 sPokenavDeviceBgPal,32
	.align	2, 0
	.type	 sPokenavDeviceBgTiles,object
sPokenavDeviceBgTiles:
	.word	0x6a010
	.word	-0xfffffc8
	.word	-0x7ffe0fff
	.word	-0x11111fff
	.word	-0x1ffb
	.word	0x300f0ff
	.word	-0x78fcff02
	.word	-0x1111e130
	.word	0x1600eeee
	.word	0x1ff00160
	.word	0xe2a
	.word	0x3000e16
	.word	-0x10fcfff1
	.word	0x4910fe51
	.word	0xf12000f
	.word	0x3600000
	.word	0x3800e78
	.word	0x1a047f0
	.word	-0x10bb00
	.word	0xf06f00
	.word	-0x1ffc6fe1
	.word	0x1b00380
	.word	0x3605200
	.word	0x205610ff
	.word	-0xff4ef9d
	.word	0x40032003
	.word	0x4003f043
	.word	-0x38af7ffd
	.word	-0xf1001
	.word	-0x3b1f1011
	.word	-0x6dfff400
	.word	0xfe0efe
	.word	0x190ff003
	.word	-0x2f1ff010
	.word	0xde007b
	.word	-0x30c3af11
	.word	-0x18df84b0
	.word	0x4f01000e
	.word	0x73400420
	.word	0x609f3ba0
	.word	0x11eeeeef
	.word	0x307b9176
	.word	0x94012f
	.word	0xef7802
	.word	0x104f2002
	.word	0xf01106b
	.word	0x30dbefe0
	.word	-0x196dffd
	.word	0x3101600
	.word	0x8600f0
	.word	0x300d714
	.word	0xfe6f11
	.word	0x310f009
	.word	0x78514920
	.word	-0x4fe7bf21
	.word	0x200fe01
	.word	0x23006e31
	.word	0xf003300
	.word	0x311642ff
	.word	0x203910d3
	.word	0x9f00b7
	.word	0x20b7b18b
	.word	0x420d7f7
	.word	0xff7e10
	.word	0xe11fe0f
	.word	0x3409820
	.word	0x340f07b
	.word	-0xcfbcf0
	.word	0xe6400
	.word	0x3603006f
	.word	-0x63fff0f2
	.word	0xfdd00
	.word	-0x10cfefd
	.word	0x1f721ea
	.word	0xfc51166
	.word	0x1007a01
	.word	0x1fd006f
	.word	0xa1a179
	.word	-0xfb0eff3
	.word	-0x1fc09dff
	.word	0x8bb901
	.word	-0x1f100d7
	.word	0xf01601
	.word	-0x88ff91
	.word	-0x30bffe4e
	.word	-0x405efee0
	.word	0x7f100320
	.word	0x300fd10
	.word	0x106401e4
	.word	-0x1fafdb5
	.word	-0xf78ff20
	.word	-0x48ff00f2
	.word	0x5621f781
	.word	-0x1ecec400
	.word	0x47506331
	.word	0x10f25310
	.word	0x51031023
	.word	0xffe20bb
	.word	-0xf29ff01
	.word	-0x25ff0082
	.word	0x3e1003f0
	.word	0x3f038a3
	.word	-0xfc1ff
	.word	-0x4cee87e0
	.word	-0x2aae3b00
	.word	0x22106c21
	.word	0x76104b32
	.word	0x137710f7
	.word	0x604712da
	.word	-0x5ceef07e
	.word	-0x54ef71ee
	.word	0x123800fe
	.word	0x103e4026
	.word	0x6137200a
	.word	-0x1f20ceb5
	.word	0x16100ff
	.word	0x270243
	.word	0x16d0204
	.word	0x300300a3
	.word	-0x1df020a
	.word	0x7a200310
	.word	-0x4c0fcdf0
	.word	-0x7c11fca0
	.word	-0x54df0064
	.word	-0x3e3ee0bf
	.word	-0x74dffcc0
	.word	-0x1a0ef7e0
	.word	0x40af0170
	.word	0x2d00f024
	.word	0x7d10fe
	.word	0x104b61dd
	.word	-0x34ee0059
	.word	-0x22fd0ff0
	.word	-0x4bafb4dc
	.word	0x57f09ff1
	.word	-0x18051f0
	.word	0x2e000430
	.word	-0x3c0c00e0
	.word	0x7731b550
	.word	0xff6093
	.word	0x5c723b7
	.word	0x30e11213
	.word	0x241d1567
	.word	-0x20040fac
	.word	0x4e519952
	.word	0x13a7210e
	.word	0x53c180c8
	.word	-0x20e8be62
	.word	-0x2affe0bb
	.word	0x717525f0
	.word	-0xf7cbd74
	.word	-0x28d4ba25
	.word	-0x61db24df
	.word	-0x115ccb12
	.word	-0x247f2010
	.word	0x10cddfc0
	.word	-0x124ffd9
	.word	0x341c06ff
	.word	-0x20af115d
	.word	0x208620f0
	.word	0x6de483
	.word	0x1
	.size	 sPokenavDeviceBgTiles,648
	.align	2, 0
	.type	 sPokenavDeviceBgTilemap,object
sPokenavDeviceBgTilemap:
	.word	0x50010
	.word	-0xfdfffc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1001f001
	.word	0x20010701
	.word	-0xffcdffe
	.word	-0xffe0fe9
	.word	0x1208001
	.word	0x20052004
	.word	-0xbf8dffa
	.word	0x1f019f0
	.word	0x10001f0
	.word	0x9030008
	.word	0x200a1c20
	.word	-0xfe40ff5
	.word	0x2001f001
	.word	0xd20000c
	.word	0xf200e20
	.word	-0xf1fefe0
	.word	-0xffe0fe5
	.word	0x20112001
	.word	0x13072012
	.word	0x15201420
	.word	0x1f01bf0
	.word	0x200001f0
	.word	0x20172016
	.word	0xe192018
	.word	0x1b201a20
	.word	0x1f01df0
	.word	0x283ff0
	.word	0x28182817
	.word	0x201d201c
	.word	0x1df01e70
	.word	0x1e001f0
	.word	0x2020201f
	.word	0x22202101
	.word	0x24202320
	.word	-0xf2fe210
	.word	0x2501e001
	.word	0x20260300
	.word	0x281c2027
	.word	0x1df02920
	.word	0x1e001f0
	.word	0x2b01202a
	.word	0x2d202c20
	.word	0x1bf02e20
	.word	-0xffe0f1d
	.word	0x2f014001
	.word	0x15f03020
	.word	-0xf7ffe10
	.word	0x20312001
	.word	0x20332032
	.word	0x19f0347f
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f10
	.word	0x2001f001
	.word	0x1
	.size	 sPokenavDeviceBgTilemap,272
	.align	1, 0
	.type	 sMatchCallBlueLightPal,object
sMatchCallBlueLightPal:
	.short	0x7fff
	.short	0x1595
	.short	0x4a55
	.short	0x56b6
	.short	0x3b1f
	.short	0x31fe
	.short	0x6694
	.short	0x798c
	.short	0x7fff
	.short	0x7ec1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6b39
	.short	0x5eb5
	.size	 sMatchCallBlueLightPal,32
	.align	2, 0
	.type	 sMatchCallBlueLightTiles,object
sMatchCallBlueLightTiles:
	.word	0x10010
	.word	-0xff10200
	.word	-0xff0001
	.word	-0x1f10ff61
	.word	-0xff06601
	.word	0xe01999f
	.word	0x999ffe
	.word	0x36099ff
	.word	-0x666660fd
	.word	-0xf666607
	.word	0x4015001
	.word	-0x101ff001
	.word	-0x66bfff07
	.word	-0x1f1ff01
	.word	-0xff00667
	.word	-0x10d40667
	.word	0x1500e0
	.word	-0xffffcb0
	.word	-0xfe4fff
	.word	0x7b106b80
	.word	-0x74ef7cf0
	.word	-0x64ef6cf0
	.word	0x17071f0
	.word	0x709b30ff
	.word	0x107b206b
	.word	0x108b0083
	.word	-0xf64ef6d
	.word	0x1b08070
	.size	 sMatchCallBlueLightTiles,112
	.align	2, 0
	.type	 sPokenavMainMenuBgTemplates,object
	.size	 sPokenavMainMenuBgTemplates,12
sPokenavMainMenuBgTemplates:
	.byte	0xf5
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0x7a
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xff
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sMenuHandlerLoopTaskFuncs,object
sMenuHandlerLoopTaskFuncs:
	.word	0x0
	.word	LoopedTask_MoveMenuCursor
	.word	LoopedTask_OpenConditionMenu
	.word	LoopedTask_ReturnToMainMenu
	.word	LoopedTask_OpenConditionSearchMenu
	.word	LoopedTask_ReturnToConditionMenu
	.word	LoopedTask_SelectRibbonsNoWinners
	.word	LoopedTask_ReShowDescription
	.word	LoopedTask_OpenPokenavFeature
	.size	 sMenuHandlerLoopTaskFuncs,36
	.align	2, 0
	.type	 sPokenavOptionsSpriteSheets,object
sPokenavOptionsSpriteSheets:
	.word	gPokenavOptions_Gfx
	.short	0x3400
	.short	0x3
	.word	sMatchCallBlueLightTiles
	.short	0x100
	.short	0x1
	.size	 sPokenavOptionsSpriteSheets,16
	.align	2, 0
	.type	 sPokenavOptionsSpritePalettes,object
sPokenavOptionsSpritePalettes:
	.word	gPokenavOptions_Pal
	.short	0x4
	.space	2
	.word	gPokenavOptions_Pal+0x20
	.short	0x5
	.space	2
	.word	gPokenavOptions_Pal+0x40
	.short	0x6
	.space	2
	.word	gPokenavOptions_Pal+0x60
	.short	0x7
	.space	2
	.word	gPokenavOptions_Pal+0x80
	.short	0x8
	.space	2
	.word	sMatchCallBlueLightPal
	.short	0x3
	.space	2
	.space	8
	.size	 sPokenavOptionsSpritePalettes,56
	.align	1, 0
	.type	 sOptionsLabelGfx_RegionMap,object
sOptionsLabelGfx_RegionMap:
	.short	0x0
	.short	0x0
	.size	 sOptionsLabelGfx_RegionMap,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Condition,object
sOptionsLabelGfx_Condition:
	.short	0x20
	.short	0x1
	.size	 sOptionsLabelGfx_Condition,4
	.align	1, 0
	.type	 sOptionsLabelGfx_MatchCall,object
sOptionsLabelGfx_MatchCall:
	.short	0x40
	.short	0x4
	.size	 sOptionsLabelGfx_MatchCall,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Ribbons,object
sOptionsLabelGfx_Ribbons:
	.short	0x60
	.short	0x2
	.size	 sOptionsLabelGfx_Ribbons,4
	.align	1, 0
	.type	 sOptionsLabelGfx_SwitchOff,object
sOptionsLabelGfx_SwitchOff:
	.short	0x80
	.short	0x3
	.size	 sOptionsLabelGfx_SwitchOff,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Party,object
sOptionsLabelGfx_Party:
	.short	0xa0
	.short	0x1
	.size	 sOptionsLabelGfx_Party,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Search,object
sOptionsLabelGfx_Search:
	.short	0xc0
	.short	0x1
	.size	 sOptionsLabelGfx_Search,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Cool,object
sOptionsLabelGfx_Cool:
	.short	0xe0
	.short	0x4
	.size	 sOptionsLabelGfx_Cool,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Beauty,object
sOptionsLabelGfx_Beauty:
	.short	0x100
	.short	0x1
	.size	 sOptionsLabelGfx_Beauty,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Cute,object
sOptionsLabelGfx_Cute:
	.short	0x120
	.short	0x2
	.size	 sOptionsLabelGfx_Cute,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Smart,object
sOptionsLabelGfx_Smart:
	.short	0x140
	.short	0x0
	.size	 sOptionsLabelGfx_Smart,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Tough,object
sOptionsLabelGfx_Tough:
	.short	0x160
	.short	0x0
	.size	 sOptionsLabelGfx_Tough,4
	.align	1, 0
	.type	 sOptionsLabelGfx_Cancel,object
sOptionsLabelGfx_Cancel:
	.short	0x180
	.short	0x3
	.size	 sOptionsLabelGfx_Cancel,4
	.align	2, 0
	.type	 sPokenavMenuOptionLabelGfx,object
	.size	 sPokenavMenuOptionLabelGfx,140
sPokenavMenuOptionLabelGfx:
	.short	0x2a
	.short	0x14
	.word	sOptionsLabelGfx_RegionMap
	.word	sOptionsLabelGfx_Condition
	.word	sOptionsLabelGfx_SwitchOff
	.space	12
	.short	0x2a
	.short	0x14
	.word	sOptionsLabelGfx_RegionMap
	.word	sOptionsLabelGfx_Condition
	.word	sOptionsLabelGfx_MatchCall
	.word	sOptionsLabelGfx_SwitchOff
	.space	8
	.short	0x2a
	.short	0x14
	.word	sOptionsLabelGfx_RegionMap
	.word	sOptionsLabelGfx_Condition
	.word	sOptionsLabelGfx_MatchCall
	.word	sOptionsLabelGfx_Ribbons
	.word	sOptionsLabelGfx_SwitchOff
	.space	4
	.short	0x38
	.short	0x14
	.word	sOptionsLabelGfx_Party
	.word	sOptionsLabelGfx_Search
	.word	sOptionsLabelGfx_Cancel
	.space	12
	.short	0x28
	.short	0x10
	.word	sOptionsLabelGfx_Cool
	.word	sOptionsLabelGfx_Beauty
	.word	sOptionsLabelGfx_Cute
	.word	sOptionsLabelGfx_Smart
	.word	sOptionsLabelGfx_Tough
	.word	sOptionsLabelGfx_Cancel
	.align	2, 0
	.type	 sOptionDescWindowTemplate,object
	.size	 sOptionDescWindowTemplate,8
sOptionDescWindowTemplate:
	.byte	0x1
	.byte	0x3
	.byte	0x11
	.byte	0x18
	.byte	0x2
	.byte	0x1
	.short	0x8
	.align	2, 0
	.type	 sPageDescriptions,object
sPageDescriptions:
	.word	gText_CheckMapOfHoenn
	.word	gText_CheckPokemonInDetail
	.word	gText_CallRegisteredTrainer
	.word	gText_CheckObtainedRibbons
	.word	gText_PutAwayPokenav
	.word	gText_CheckPartyPokemonInDetail
	.word	gText_CheckAllPokemonInDetail
	.word	gText_ReturnToPokenavMenu
	.word	gText_FindCoolPokemon
	.word	gText_FindBeautifulPokemon
	.word	gText_FindCutePokemon
	.word	gText_FindSmartPokemon
	.word	gText_FindToughPokemon
	.word	gText_ReturnToConditionMenu
	.size	 sPageDescriptions,56
	.type	 sOptionDescTextColors,object
sOptionDescTextColors:
	.byte	0x6
	.byte	0x8
	.byte	0x7
	.size	 sOptionDescTextColors,3
	.type	 sOptionDescTextColors2,object
sOptionDescTextColors2:
	.byte	0x6
	.byte	0x8
	.byte	0x7
	.size	 sOptionDescTextColors2,3
	.align	2, 0
	.type	 sOamData_MenuOption,object
	.size	 sOamData_MenuOption,8
sOamData_MenuOption:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gUnknown_0862031C,object
gUnknown_0862031C:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_0862031C,16
	.align	2, 0
	.type	 gUnknown_0862032C,object
gUnknown_0862032C:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x10
	.short	0x10
	.byte	0x0
	.byte	0x12
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_0862032C,24
	.align	2, 0
	.type	 sSpriteAnims_MenuOption,object
sSpriteAnims_MenuOption:
	.word	gUnknown_0862031C
	.word	gUnknown_0862032C
	.size	 sSpriteAnims_MenuOption,8
	.align	2, 0
	.type	 sMenuOptionSpriteTemplate,object
	.size	 sMenuOptionSpriteTemplate,24
sMenuOptionSpriteTemplate:
	.short	0x3
	.short	0x4
	.word	sOamData_MenuOption
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	sSpriteAnims_MenuOption
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sBlueLightOamData,object
	.size	 sBlueLightOamData,8
sBlueLightOamData:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sMatchCallBlueLightSpriteTemplate,object
	.size	 sMatchCallBlueLightSpriteTemplate,24
sMatchCallBlueLightSpriteTemplate:
	.short	0x1
	.short	0x3
	.word	sBlueLightOamData
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sPokenavMainMenuScanlineEffectParams,object
	.size	 sPokenavMainMenuScanlineEffectParams,12
sPokenavMainMenuScanlineEffectParams:
	.word	0x4000040
	.word	-0x5d9fffff
	.byte	0x1
	.byte	0x0
	.space	2
.text
	.align	2, 0
	.type	 PlayerHasTrainerRematches,function
	.thumb_func
PlayerHasTrainerRematches:
	push	{r4, lr}
	mov	r4, #0x0
.L6:
	add	r0, r4, #0
	bl	GetMatchTableMapSectionId
	ldr	r1, .L10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1, #0x14]
	cmp	r0, r1
	bne	.L5	@cond_branch
	add	r0, r4, #0
	bl	IsRematchEntryRegistered
	cmp	r0, #0
	beq	.L5	@cond_branch
	ldr	r0, .L10+0x4
	ldr	r0, [r0]
	ldr	r1, .L10+0x8
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L5	@cond_branch
	mov	r0, #0x1
	b	.L9
.L11:
	.align	2, 0
.L10:
	.word	gMapHeader
	.word	gSaveBlock1Ptr
	.word	0xfaa
.L5:
	add	r4, r4, #0x1
	cmp	r4, #0x4d
	ble	.L6	@cond_branch
	mov	r0, #0x0
.L9:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 PlayerHasTrainerRematches,.Lfe1-PlayerHasTrainerRematches
	.align	2, 0
	.globl	OpenPokenavMenuInitial
	.type	 OpenPokenavMenuInitial,function
	.thumb_func
OpenPokenavMenuInitial:
	push	{lr}
	bl	OpenPokenavMenu
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L13	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1, #0xd]
	mov	r0, #0x1
	b	.L14
.L13:
	mov	r0, #0x0
.L14:
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 OpenPokenavMenuInitial,.Lfe2-OpenPokenavMenuInitial
	.align	2, 0
	.globl	OpenPokenavMenuNotInitial
	.type	 OpenPokenavMenuNotInitial,function
	.thumb_func
OpenPokenavMenuNotInitial:
	push	{lr}
	bl	OpenPokenavMenu
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L16	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1, #0xd]
	b	.L17
.L16:
	mov	r0, #0x0
.L17:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 OpenPokenavMenuNotInitial,.Lfe3-OpenPokenavMenuNotInitial
	.align	2, 0
	.type	 OpenPokenavMenu,function
	.thumb_func
OpenPokenavMenu:
	push	{r4, lr}
	ldr	r1, .L20
	mov	r0, #0x2
	bl	AllocSubstruct
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L19	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4, #0xc]
	ldr	r0, .L20+0x4
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r4, #0x4]
	ldr	r0, .L20+0x8
	str	r0, [r4]
.L19:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L21:
	.align	2, 0
.L20:
	.word	0x88c
	.word	LoopedTask_OpenMenu
	.word	GetCurrentLoopedTaskActive
.Lfe4:
	.size	 OpenPokenavMenu,.Lfe4-OpenPokenavMenu
	.align	2, 0
	.globl	CreateMenuHandlerLoopedTask
	.type	 CreateMenuHandlerLoopedTask,function
	.thumb_func
CreateMenuHandlerLoopedTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r5, r0, #0
	ldr	r0, .L23
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	mov	r1, #0x1
	bl	CreateLoopedTask
	str	r0, [r5, #0x4]
	ldr	r0, .L23+0x4
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	sMenuHandlerLoopTaskFuncs
	.word	GetCurrentLoopedTaskActive
.Lfe5:
	.size	 CreateMenuHandlerLoopedTask,.Lfe5-CreateMenuHandlerLoopedTask
	.align	2, 0
	.globl	IsMenuHandlerLoopedTaskActive
	.type	 IsMenuHandlerLoopedTaskActive,function
	.thumb_func
IsMenuHandlerLoopedTaskActive:
	push	{lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 IsMenuHandlerLoopedTaskActive,.Lfe6-IsMenuHandlerLoopedTaskActive
	.align	2, 0
	.globl	FreeMenuHandlerSubstruct2
	.type	 FreeMenuHandlerSubstruct2,function
	.thumb_func
FreeMenuHandlerSubstruct2:
	push	{r4, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r4, r0, #0
	bl	DestroyMovingDotsBgTask
	ldrb	r0, [r4, #0x8]
	bl	RemoveWindow
	bl	FreeAndDestroyMainMenuSprites
	bl	DestroyMenuOptionGlowTask
	mov	r0, #0x2
	bl	FreePokenavSubstruct
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 FreeMenuHandlerSubstruct2,.Lfe7-FreeMenuHandlerSubstruct2
	.align	2, 0
	.type	 GetCurrentLoopedTaskActive,function
	.thumb_func
GetCurrentLoopedTaskActive:
	push	{lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x4]
	bl	IsLoopedTaskActive
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 GetCurrentLoopedTaskActive,.Lfe8-GetCurrentLoopedTaskActive
	.align	2, 0
	.type	 LoopedTask_OpenMenu,function
	.thumb_func
LoopedTask_OpenMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r5, r0, #0
	cmp	r4, #0x9
	bls	.LCB262
	b	.L29	@long jump
.LCB262:
	lsl	r0, r4, #0x2
	ldr	r1, .L72
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L73:
	.align	2, 0
.L72:
	.word	.L61
	.align	2, 0
	.align	2, 0
.L61:
	.word	.L30
	.word	.L31
	.word	.L33
	.word	.L37
	.word	.L39
	.word	.L40
	.word	.L41
	.word	.L43
	.word	.L51
	.word	.L58
.L30:
	ldr	r0, .L74
	mov	r1, #0x3
	bl	InitBgTemplates
	ldr	r1, .L74+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	add	r1, r5, #0
	add	r1, r1, #0x8c
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, .L74+0x8
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L74+0xc
	mov	r1, #0x10
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
.L71:
	mov	r0, #0x0
	b	.L63
.L75:
	.align	2, 0
.L74:
	.word	sPokenavMainMenuBgTemplates
	.word	gPokenavMessageBox_Gfx
	.word	gPokenavMessageBox_Tilemap
	.word	gPokenavMessageBox_Pal
.L31:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB354
	b	.L64	@long jump
.LCB354:
	ldr	r1, .L76
	str	r0, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L76+0x4
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L76+0x8
	mov	r1, #0x20
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	b	.L71
.L77:
	.align	2, 0
.L76:
	.word	sPokenavDeviceBgTiles
	.word	sPokenavDeviceBgTilemap
	.word	sPokenavDeviceBgPal
.L33:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB391
	b	.L64	@long jump
.LCB391:
	ldr	r1, .L78
	str	r0, [sp]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L78+0x4
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L78+0x8
	mov	r1, #0x30
	mov	r2, #0x20
	bl	CopyPaletteIntoBufferUnfaded
	bl	GetPokenavMenuType
	cmp	r0, #0x3
	beq	.L36	@cond_branch
	bl	GetPokenavMenuType
	cmp	r0, #0x4
	bne	.L71	@cond_branch
.L36:
	bl	ChangeBgDotsColorToPurple
	b	.L71
.L79:
	.align	2, 0
.L78:
	.word	sPokenavBgDotsTiles
	.word	sPokenavBgDotsTilemap
	.word	sPokenavBgDotsPal
.L37:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L64	@cond_branch
	bl	AddOptionDescriptionWindow
	bl	CreateMovingBgDotsTask
.L69:
	mov	r0, #0x1
	b	.L63
.L39:
	bl	LoadPokenavOptionPalettes
	b	.L69
.L40:
	bl	PrintCurrentOptionDescription
	bl	CreateMenuOptionSprites
	bl	CreateMatchCallBlueLightSprite
	bl	sub_81CA0C8
	b	.L71
.L41:
	bl	IsDma3ManagerBusyWithBgCopy_
	cmp	r0, #0
	bne	.L64	@cond_branch
	b	.L69
.L43:
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0
	beq	.L44	@cond_branch
	mov	r0, #0x1
	bl	PokenavFadeScreen
	b	.L45
.L44:
	mov	r0, #0x6e
	bl	PlaySE
	mov	r0, #0x3
	bl	PokenavFadeScreen
.L45:
	bl	GetPokenavMenuType
	cmp	r0, #0x3
	beq	.L48	@cond_branch
	cmp	r0, #0x4
	bne	.L49	@cond_branch
	mov	r0, #0x7
	bl	LoadLeftHeaderGfxForIndex
.L48:
	mov	r0, #0x1
	bl	LoadLeftHeaderGfxForIndex
	b	.L71
.L49:
	mov	r0, #0x0
	bl	LoadLeftHeaderGfxForIndex
	b	.L71
.L51:
	bl	IsPaletteFadeActive
	cmp	r0, #0
	bne	.L64	@cond_branch
	bl	GetPokenavMenuType
	cmp	r0, #0x3
	beq	.L55	@cond_branch
	cmp	r0, #0x4
	bne	.L56	@cond_branch
	mov	r0, #0x7
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
.L55:
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
	b	.L53
.L56:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
.L53:
	bl	SetupCurrentMenuOptionsGfx
	bl	SetupPokenavMenuScanlineEffects
	b	.L69
.L58:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L64	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	beq	.L29	@cond_branch
.L64:
	mov	r0, #0x2
	b	.L63
.L29:
	mov	r0, #0x4
.L63:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 LoopedTask_OpenMenu,.Lfe9-LoopedTask_OpenMenu
	.align	2, 0
	.type	 LoopedTask_MoveMenuCursor,function
	.thumb_func
LoopedTask_MoveMenuCursor:
	push	{lr}
	cmp	r0, #0
	beq	.L82	@cond_branch
	cmp	r0, #0x1
	beq	.L83	@cond_branch
	b	.L81
.L82:
	bl	SetMenuOptionGlow
	bl	SetMenuOptionGfxParams_CursorMoved
	bl	PrintCurrentOptionDescription
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	b	.L88
.L83:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L89	@cond_branch
	bl	IsDma3ManagerBusyWithBgCopy_
	cmp	r0, #0
	beq	.L81	@cond_branch
.L89:
	mov	r0, #0x2
	b	.L88
.L81:
	mov	r0, #0x4
.L88:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 LoopedTask_MoveMenuCursor,.Lfe10-LoopedTask_MoveMenuCursor
	.align	2, 0
	.type	 LoopedTask_OpenConditionMenu,function
	.thumb_func
LoopedTask_OpenConditionMenu:
	push	{lr}
	cmp	r0, #0x1
	beq	.L93	@cond_branch
	cmp	r0, #0x1
	bgt	.L104	@cond_branch
	cmp	r0, #0
	beq	.L92	@cond_branch
	b	.L91
.L104:
	cmp	r0, #0x2
	beq	.L96	@cond_branch
	cmp	r0, #0x3
	beq	.L97	@cond_branch
	b	.L91
.L92:
	bl	ResetBldCnt
	bl	SetupPokenavMenuOptions
	mov	r0, #0x0
	mov	r1, #0x0
	bl	HideMainOrSubMenuLeftHeader
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	b	.L105
.L93:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	sub_81CA0C8
	mov	r0, #0x1
	bl	LoadLeftHeaderGfxForIndex
	mov	r0, #0x0
	b	.L105
.L96:
	bl	SetupCurrentMenuOptionsGfx
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
	bl	CreateBgDotPurplePalTask
	bl	PrintCurrentOptionDescription
	mov	r0, #0x0
	b	.L105
.L97:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	IsTaskActive_UpdateBgDotsPalette
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	IsDma3ManagerBusyWithBgCopy_
	cmp	r0, #0
	beq	.L101	@cond_branch
.L106:
	mov	r0, #0x2
	b	.L105
.L101:
	bl	InitMenuOptionGlow
.L91:
	mov	r0, #0x4
.L105:
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 LoopedTask_OpenConditionMenu,.Lfe11-LoopedTask_OpenConditionMenu
	.align	2, 0
	.type	 LoopedTask_ReturnToMainMenu,function
	.thumb_func
LoopedTask_ReturnToMainMenu:
	push	{lr}
	cmp	r0, #0x1
	beq	.L110	@cond_branch
	cmp	r0, #0x1
	bgt	.L121	@cond_branch
	cmp	r0, #0
	beq	.L109	@cond_branch
	b	.L108
.L121:
	cmp	r0, #0x2
	beq	.L113	@cond_branch
	cmp	r0, #0x3
	beq	.L114	@cond_branch
	b	.L108
.L109:
	bl	ResetBldCnt
	bl	SetupPokenavMenuOptions
	mov	r0, #0x1
	mov	r1, #0x0
	bl	HideMainOrSubMenuLeftHeader
	mov	r0, #0x0
	b	.L122
.L110:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L123	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L123	@cond_branch
	bl	sub_81CA0C8
	mov	r0, #0x0
	bl	LoadLeftHeaderGfxForIndex
	mov	r0, #0x0
	b	.L122
.L113:
	bl	SetupCurrentMenuOptionsGfx
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
	bl	CreateBgDotLightBluePalTask
	bl	PrintCurrentOptionDescription
	mov	r0, #0x0
	b	.L122
.L114:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L123	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L123	@cond_branch
	bl	IsTaskActive_UpdateBgDotsPalette
	cmp	r0, #0
	bne	.L123	@cond_branch
	bl	IsDma3ManagerBusyWithBgCopy_
	cmp	r0, #0
	beq	.L118	@cond_branch
.L123:
	mov	r0, #0x2
	b	.L122
.L118:
	bl	InitMenuOptionGlow
.L108:
	mov	r0, #0x4
.L122:
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 LoopedTask_ReturnToMainMenu,.Lfe12-LoopedTask_ReturnToMainMenu
	.align	2, 0
	.type	 LoopedTask_OpenConditionSearchMenu,function
	.thumb_func
LoopedTask_OpenConditionSearchMenu:
	push	{lr}
	cmp	r0, #0x1
	beq	.L127	@cond_branch
	cmp	r0, #0x1
	bgt	.L136	@cond_branch
	cmp	r0, #0
	beq	.L126	@cond_branch
	b	.L125
.L136:
	cmp	r0, #0x2
	beq	.L129	@cond_branch
	cmp	r0, #0x3
	beq	.L130	@cond_branch
	b	.L125
.L126:
	bl	ResetBldCnt
	bl	SetupPokenavMenuOptions
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	b	.L137
.L127:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L138	@cond_branch
	mov	r0, #0x7
	bl	LoadLeftHeaderGfxForIndex
	bl	sub_81CA0C8
	mov	r0, #0x0
	b	.L137
.L129:
	bl	SetupCurrentMenuOptionsGfx
	mov	r0, #0x7
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ShowLeftHeaderGfx
	bl	PrintCurrentOptionDescription
	mov	r0, #0x0
	b	.L137
.L130:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L138	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L138	@cond_branch
	bl	IsTaskActive_UpdateBgDotsPalette
	cmp	r0, #0
	beq	.L133	@cond_branch
.L138:
	mov	r0, #0x2
	b	.L137
.L133:
	bl	InitMenuOptionGlow
.L125:
	mov	r0, #0x4
.L137:
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 LoopedTask_OpenConditionSearchMenu,.Lfe13-LoopedTask_OpenConditionSearchMenu
	.align	2, 0
	.type	 LoopedTask_ReturnToConditionMenu,function
	.thumb_func
LoopedTask_ReturnToConditionMenu:
	push	{lr}
	cmp	r0, #0x1
	beq	.L142	@cond_branch
	cmp	r0, #0x1
	bgt	.L151	@cond_branch
	cmp	r0, #0
	beq	.L141	@cond_branch
	b	.L140
.L151:
	cmp	r0, #0x2
	beq	.L145	@cond_branch
	cmp	r0, #0x3
	beq	.L146	@cond_branch
	b	.L140
.L141:
	bl	ResetBldCnt
	bl	SetupPokenavMenuOptions
	mov	r0, #0x7
	mov	r1, #0x0
	bl	HideMainOrSubMenuLeftHeader
	mov	r0, #0x0
	b	.L152
.L142:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L153	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L153	@cond_branch
	bl	sub_81CA0C8
	mov	r0, #0x0
	b	.L152
.L145:
	bl	SetupCurrentMenuOptionsGfx
	bl	PrintCurrentOptionDescription
	mov	r0, #0x0
	b	.L152
.L146:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L153	@cond_branch
	bl	IsTaskActive_UpdateBgDotsPalette
	cmp	r0, #0
	beq	.L148	@cond_branch
.L153:
	mov	r0, #0x2
	b	.L152
.L148:
	bl	InitMenuOptionGlow
.L140:
	mov	r0, #0x4
.L152:
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 LoopedTask_ReturnToConditionMenu,.Lfe14-LoopedTask_ReturnToConditionMenu
	.align	2, 0
	.type	 LoopedTask_SelectRibbonsNoWinners,function
	.thumb_func
LoopedTask_SelectRibbonsNoWinners:
	push	{lr}
	cmp	r0, #0
	beq	.L156	@cond_branch
	cmp	r0, #0x1
	beq	.L157	@cond_branch
	b	.L155
.L156:
	mov	r0, #0x20
	bl	PlaySE
	bl	PrintNoRibbonWinners
	mov	r0, #0x0
	b	.L161
.L157:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L155	@cond_branch
	mov	r0, #0x2
	b	.L161
.L155:
	mov	r0, #0x4
.L161:
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 LoopedTask_SelectRibbonsNoWinners,.Lfe15-LoopedTask_SelectRibbonsNoWinners
	.align	2, 0
	.type	 LoopedTask_ReShowDescription,function
	.thumb_func
LoopedTask_ReShowDescription:
	push	{lr}
	cmp	r0, #0
	beq	.L164	@cond_branch
	cmp	r0, #0x1
	beq	.L165	@cond_branch
	b	.L163
.L164:
	mov	r0, #0x5
	bl	PlaySE
	bl	PrintCurrentOptionDescription
	mov	r0, #0x0
	b	.L169
.L165:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L163	@cond_branch
	mov	r0, #0x2
	b	.L169
.L163:
	mov	r0, #0x4
.L169:
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 LoopedTask_ReShowDescription,.Lfe16-LoopedTask_ReShowDescription
	.align	2, 0
	.type	 LoopedTask_OpenPokenavFeature,function
	.thumb_func
LoopedTask_OpenPokenavFeature:
	push	{lr}
	cmp	r0, #0x1
	beq	.L173	@cond_branch
	cmp	r0, #0x1
	bgt	.L187	@cond_branch
	cmp	r0, #0
	beq	.L172	@cond_branch
	b	.L171
.L187:
	cmp	r0, #0x2
	beq	.L180	@cond_branch
	cmp	r0, #0x3
	beq	.L183	@cond_branch
	b	.L171
.L172:
	bl	GetHelpBarTextId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	PrintHelpBarText
	mov	r0, #0x0
	b	.L188
.L173:
	bl	WaitForHelpBar
	cmp	r0, #0
	bne	.L189	@cond_branch
	bl	SlideMenuHeaderUp
	bl	ResetBldCnt
	bl	SetupPokenavMenuOptions
	bl	GetPokenavMenuType
	cmp	r0, #0x3
	beq	.L177	@cond_branch
	cmp	r0, #0x4
	bne	.L178	@cond_branch
	mov	r0, #0x7
	mov	r1, #0x0
	bl	HideMainOrSubMenuLeftHeader
.L177:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	HideMainOrSubMenuLeftHeader
	b	.L175
.L178:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	HideMainOrSubMenuLeftHeader
.L175:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	b	.L188
.L180:
	bl	AreMenuOptionSpritesMoving
	cmp	r0, #0
	bne	.L189	@cond_branch
	bl	AreLeftHeaderSpritesMoving
	cmp	r0, #0
	bne	.L189	@cond_branch
	mov	r0, #0x0
	bl	PokenavFadeScreen
	mov	r0, #0x0
	b	.L188
.L183:
	bl	IsPaletteFadeActive
	cmp	r0, #0
	beq	.L171	@cond_branch
.L189:
	mov	r0, #0x2
	b	.L188
.L171:
	mov	r0, #0x4
.L188:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 LoopedTask_OpenPokenavFeature,.Lfe17-LoopedTask_OpenPokenavFeature
	.align	2, 0
	.type	 LoadPokenavOptionPalettes,function
	.thumb_func
LoadPokenavOptionPalettes:
	push	{r4, r5, lr}
	mov	r5, #0x0
	ldr	r4, .L196
.L194:
	add	r0, r4, #0
	bl	LoadCompressedSpriteSheet
	add	r4, r4, #0x8
	add	r5, r5, #0x1
	cmp	r5, #0x1
	bls	.L194	@cond_branch
	ldr	r0, .L196+0x4
	bl	Pokenav_AllocAndLoadPalettes
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	sPokenavOptionsSpriteSheets
	.word	sPokenavOptionsSpritePalettes
.Lfe18:
	.size	 LoadPokenavOptionPalettes,.Lfe18-LoadPokenavOptionPalettes
	.align	2, 0
	.type	 FreeAndDestroyMainMenuSprites,function
	.thumb_func
FreeAndDestroyMainMenuSprites:
	push	{lr}
	mov	r0, #0x3
	bl	FreeSpriteTilesByTag
	mov	r0, #0x1
	bl	FreeSpriteTilesByTag
	mov	r0, #0x4
	bl	FreeSpritePaletteByTag
	mov	r0, #0x5
	bl	FreeSpritePaletteByTag
	mov	r0, #0x6
	bl	FreeSpritePaletteByTag
	mov	r0, #0x7
	bl	FreeSpritePaletteByTag
	mov	r0, #0x8
	bl	FreeSpritePaletteByTag
	mov	r0, #0x3
	bl	FreeSpritePaletteByTag
	bl	DestroyMenuOptionSprites
	bl	DestroyRematchBlueLightSpriteId
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 FreeAndDestroyMainMenuSprites,.Lfe19-FreeAndDestroyMainMenuSprites
	.align	2, 0
	.type	 CreateMenuOptionSprites,function
	.thumb_func
CreateMenuOptionSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r0, #0x2
	bl	GetSubstructPtr
	mov	r2, #0x0
	add	r0, r0, #0x2c
	mov	r8, r0
.L203:
	mov	r4, #0x0
	lsl	r0, r2, #0x2
	lsl	r1, r2, #0x4
	add	r7, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x12
	mov	r2, #0xa0
	lsl	r2, r2, #0xe
	add	r5, r0, r2
	mov	r0, r8
	add	r6, r1, r0
.L207:
	ldr	r0, .L210
	mov	r1, #0x8c
	asr	r2, r5, #0x10
	mov	r3, #0x3
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L210+0x4
	add	r1, r1, r0
	stmia	r6!, {r1}
	lsl	r0, r4, #0x5
	strh	r0, [r1, #0x24]
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L207	@cond_branch
	add	r2, r7, #0
	cmp	r2, #0x5
	ble	.L203	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L211:
	.align	2, 0
.L210:
	.word	sMenuOptionSpriteTemplate
	.word	gSprites
.Lfe20:
	.size	 CreateMenuOptionSprites,.Lfe20-CreateMenuOptionSprites
	.align	2, 0
	.type	 DestroyMenuOptionSprites,function
	.thumb_func
DestroyMenuOptionSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	mov	r1, #0x0
	add	r7, r0, #0
	add	r7, r7, #0x2c
.L216:
	lsl	r0, r1, #0x4
	add	r6, r1, #0x1
	add	r4, r0, r7
	mov	r5, #0x3
.L220:
	ldr	r0, [r4]
	bl	FreeSpriteOamMatrix
	ldmia	r4!, {r0}
	bl	DestroySprite
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L220	@cond_branch
	add	r1, r6, #0
	cmp	r1, #0x5
	ble	.L216	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 DestroyMenuOptionSprites,.Lfe21-DestroyMenuOptionSprites
	.align	2, 0
	.type	 sub_81CA0C8,function
	.thumb_func
sub_81CA0C8:
	push	{lr}
	bl	GetPokenavMenuType
	lsl	r2, r0, #0x3
	sub	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r1, .L224
	add	r0, r2, r1
	sub	r1, r1, #0x4
	add	r2, r2, r1
	ldrh	r1, [r2]
	ldrh	r2, [r2, #0x2]
	bl	DrawOptionLabelGfx
	pop	{r0}
	bx	r0
.L225:
	.align	2, 0
.L224:
	.word	sPokenavMenuOptionLabelGfx+0x4
.Lfe22:
	.size	 sub_81CA0C8,.Lfe22-sub_81CA0C8
	.align	2, 0
	.type	 DrawOptionLabelGfx,function
	.thumb_func
DrawOptionLabelGfx:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x18
	add	r6, r0, #0
	str	r1, [sp, #0x14]
	str	r2, [sp]
	mov	r0, #0x2
	bl	GetSubstructPtr
	mov	sl, r0
	mov	r0, #0x3
	bl	GetSpriteTileStartByTag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x4]
	mov	r1, #0x0
.L230:
	ldr	r0, [r6]
	cmp	r0, #0
	beq	.L231	@cond_branch
	mov	r5, #0x0
	lsl	r2, r1, #0x4
	mov	r0, sl
	add	r0, r0, #0x2c
	lsl	r3, r1, #0x2
	mov	r9, r3
	mov	r4, #0x10
	add	r4, r4, sl
	mov	r8, r4
	add	r7, r6, #0x4
	str	r7, [sp, #0xc]
	ldr	r3, [sp, #0x14]
	ldr	r4, [sp]
	add	r3, r3, r4
	str	r3, [sp, #0x8]
	add	r1, r1, #0x1
	str	r1, [sp, #0x10]
	add	r4, r2, r0
.L235:
	ldr	r3, [r4]
	ldr	r0, [r6]
	ldrh	r2, [r0]
	ldr	r7, [sp, #0x4]
	add	r2, r2, r7
	lsl	r0, r5, #0x3
	add	r2, r2, r0
	ldr	r1, .L245
	add	r0, r1, #0
	and	r2, r2, r0
	ldrh	r0, [r3, #0x4]
	ldr	r7, .L245+0x4
	add	r1, r7, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strh	r0, [r3, #0x4]
	ldr	r0, [r6]
	ldrh	r0, [r0, #0x2]
	add	r0, r0, #0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	IndexOfSpritePaletteTag
	ldr	r3, [r4]
	lsl	r0, r0, #0x4
	ldrb	r2, [r3, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x5]
	ldr	r2, [r4]
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, [r4]
	mov	r1, sp
	ldrh	r1, [r1, #0x14]
	strh	r1, [r0, #0x22]
	ldr	r1, [r4]
	mov	r0, #0x8c
	strh	r0, [r1, #0x20]
	ldmia	r4!, {r1}
	lsl	r0, r5, #0x5
	strh	r0, [r1, #0x24]
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L235	@cond_branch
	mov	r1, r8
	add	r1, r1, r9
	mov	r0, #0x1
	b	.L244
.L246:
	.align	2, 0
.L245:
	.word	0x3ff
	.word	-0x400
.L231:
	lsl	r2, r1, #0x4
	mov	r0, sl
	add	r0, r0, #0x2c
	lsl	r3, r1, #0x2
	mov	r9, r3
	mov	r4, #0x10
	add	r4, r4, sl
	mov	r8, r4
	add	r6, r6, #0x4
	str	r6, [sp, #0xc]
	ldr	r7, [sp, #0x14]
	ldr	r3, [sp]
	add	r7, r7, r3
	str	r7, [sp, #0x8]
	add	r1, r1, #0x1
	str	r1, [sp, #0x10]
	mov	r3, #0x4
	add	r2, r2, r0
	mov	r5, #0x3
.L241:
	ldmia	r2!, {r1}
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	orr	r0, r0, r3
	strb	r0, [r1]
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L241	@cond_branch
	mov	r1, r8
	add	r1, r1, r9
	mov	r0, #0x0
.L244:
	str	r0, [r1]
	ldr	r6, [sp, #0xc]
	ldr	r4, [sp, #0x8]
	str	r4, [sp, #0x14]
	ldr	r1, [sp, #0x10]
	cmp	r1, #0x5
	ble	.L230	@cond_branch
	add	sp, sp, #0x18
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 DrawOptionLabelGfx,.Lfe23-DrawOptionLabelGfx
	.align	2, 0
	.type	 SetupCurrentMenuOptionsGfx,function
	.thumb_func
SetupCurrentMenuOptionsGfx:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r6, r0, #0
	bl	GetPokenavCursorPos
	mov	r8, r0
	mov	r7, #0x0
	mov	r5, #0x0
	add	r4, r6, #0
	add	r4, r4, #0x2c
.L251:
	lsl	r0, r5, #0x2
	add	r1, r6, #0
	add	r1, r1, #0x10
	add	r1, r1, r0
	ldr	r0, [r1]
	cmp	r0, #0
	beq	.L252	@cond_branch
	add	r0, r7, #0
	add	r7, r7, #0x1
	cmp	r0, r8
	bne	.L253	@cond_branch
	mov	r2, #0x82
	strb	r5, [r6, #0xb]
	b	.L254
.L253:
	mov	r2, #0x8c
.L254:
	add	r0, r4, #0
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	mov	r3, #0xc
	bl	SetMenuOptionGfxParamsInactive
	add	r0, r4, #0
	mov	r1, #0x0
	bl	SetMenuOptionGfxInvisibility
	b	.L250
.L252:
	add	r0, r4, #0
	mov	r1, #0x1
	bl	SetMenuOptionGfxInvisibility
.L250:
	add	r4, r4, #0x10
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L251	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 SetupCurrentMenuOptionsGfx,.Lfe24-SetupCurrentMenuOptionsGfx
	.align	2, 0
	.type	 SetMenuOptionGfxParams_CursorMoved,function
	.thumb_func
SetMenuOptionGfxParams_CursorMoved:
	push	{r4, r5, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r4, r0, #0
	bl	GetPokenavCursorPos
	add	r3, r0, #0
	mov	r2, #0x0
	mov	r5, #0x0
	ldr	r0, [r4, #0x10]
	cmp	r0, #0
	beq	.L260	@cond_branch
	cmp	r5, r3
	beq	.L259	@cond_branch
.L263:
	add	r5, r5, #0x1
.L260:
	add	r2, r2, #0x1
	cmp	r2, #0x5
	bgt	.L259	@cond_branch
	lsl	r0, r2, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x10
	add	r1, r1, r0
	ldr	r0, [r1]
	cmp	r0, #0
	beq	.L260	@cond_branch
	cmp	r5, r3
	bne	.L263	@cond_branch
	add	r5, r2, #0
.L259:
	ldrb	r0, [r4, #0xb]
	lsl	r0, r0, #0x4
	add	r0, r0, #0x2c
	add	r0, r4, r0
	mov	r1, #0x82
	mov	r2, #0x8c
	mov	r3, #0x4
	bl	SetMenuOptionGfxParamsInactive
	lsl	r0, r5, #0x4
	add	r0, r0, #0x2c
	add	r0, r4, r0
	mov	r1, #0x8c
	mov	r2, #0x82
	mov	r3, #0x4
	bl	SetMenuOptionGfxParamsInactive
	strb	r5, [r4, #0xb]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 SetMenuOptionGfxParams_CursorMoved,.Lfe25-SetMenuOptionGfxParams_CursorMoved
	.align	2, 0
	.type	 SetupPokenavMenuOptions,function
	.thumb_func
SetupPokenavMenuOptions:
	push	{r4, r5, r6, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r6, r0, #0
	mov	r5, #0x0
	add	r4, r6, #0
	add	r4, r4, #0x2c
.L269:
	lsl	r0, r5, #0x2
	add	r1, r6, #0
	add	r1, r1, #0x10
	add	r1, r1, r0
	ldr	r0, [r1]
	cmp	r0, #0
	beq	.L268	@cond_branch
	ldrb	r0, [r6, #0xb]
	cmp	r0, r5
	beq	.L271	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8c
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	mov	r3, #0x8
	bl	SetMenuOptionGfxParamsInactive
	b	.L268
.L271:
	add	r0, r4, #0
	bl	SetMenuOptionGfxParamsActive
.L268:
	add	r4, r4, #0x10
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L269	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 SetupPokenavMenuOptions,.Lfe26-SetupPokenavMenuOptions
	.align	2, 0
	.type	 AreMenuOptionSpritesMoving,function
	.thumb_func
AreMenuOptionSpritesMoving:
	push	{r4, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r3, r0, #0
	mov	r2, #0x0
	ldr	r4, .L284
	add	r1, r3, #0
	add	r1, r1, #0x2c
.L278:
	ldr	r0, [r1]
	ldr	r0, [r0, #0x1c]
	cmp	r0, r4
	bne	.L283	@cond_branch
	add	r1, r1, #0x10
	add	r2, r2, #0x1
	cmp	r2, #0x5
	ble	.L278	@cond_branch
	ldrb	r0, [r3, #0xc]
	cmp	r0, #0
	bne	.L281	@cond_branch
	mov	r0, #0x0
	b	.L282
.L285:
	.align	2, 0
.L284:
	.word	SpriteCallbackDummy
.L283:
.L281:
	mov	r0, #0x1
.L282:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 AreMenuOptionSpritesMoving,.Lfe27-AreMenuOptionSpritesMoving
	.align	2, 0
	.type	 SetMenuOptionGfxParamsInactive,function
	.thumb_func
SetMenuOptionGfxParamsInactive:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	add	r6, r3, #0
	ldr	r0, .L292
	mov	r8, r0
	sub	r0, r2, r5
	lsl	r0, r0, #0x4
	add	r1, r6, #0
	bl	__divsi3
	add	r3, r0, #0
	mov	r1, #0x3
	lsl	r2, r5, #0x4
.L290:
	ldr	r0, [r4]
	strh	r5, [r0, #0x20]
	ldr	r0, [r4]
	strh	r6, [r0, #0x2e]
	ldr	r0, [r4]
	strh	r3, [r0, #0x30]
	ldr	r0, [r4]
	strh	r2, [r0, #0x32]
	ldr	r0, [r4]
	mov	r7, r9
	strh	r7, [r0, #0x3c]
	ldmia	r4!, {r0}
	mov	r7, r8
	str	r7, [r0, #0x1c]
	sub	r1, r1, #0x1
	cmp	r1, #0
	bge	.L290	@cond_branch
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L293:
	.align	2, 0
.L292:
	.word	sub_81CA474
.Lfe28:
	.size	 SetMenuOptionGfxParamsInactive,.Lfe28-SetMenuOptionGfxParamsInactive
	.align	2, 0
	.type	 SetMenuOptionGfxParamsActive,function
	.thumb_func
SetMenuOptionGfxParamsActive:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r7, r0, #0
	mov	r5, #0x0
	mov	r8, r5
.L298:
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x1]
	mov	r3, #0xd
	neg	r3, r3
	add	r0, r3, #0
	and	r1, r1, r0
	mov	r0, #0x4
	orr	r1, r1, r0
	strb	r1, [r2, #0x1]
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldr	r1, [r4]
	ldr	r0, .L300
	str	r0, [r1, #0x1c]
	mov	r6, #0x8
	strh	r6, [r1, #0x2e]
	ldr	r0, [r4]
	mov	r1, r8
	strh	r1, [r0, #0x30]
	ldr	r0, [r4]
	strh	r5, [r0, #0x3c]
	ldr	r0, [r4]
	bl	InitSpriteAffineAnim
	ldmia	r4!, {r0}
	mov	r1, #0x0
	bl	StartSpriteAffineAnim
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L298	@cond_branch
	mov	r0, #0x52
	mov	r1, #0x10
	bl	SetGpuReg
	ldr	r0, .L300+0x4
	mov	r1, #0x3
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L300+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r6, [r1, #0x8]
	ldrb	r0, [r7, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r7, #0xc]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L301:
	.align	2, 0
.L300:
	.word	sub_81CA4AC
	.word	sub_81CA580
	.word	gTasks
.Lfe29:
	.size	 SetMenuOptionGfxParamsActive,.Lfe29-SetMenuOptionGfxParamsActive
	.align	2, 0
	.type	 SetMenuOptionGfxInvisibility,function
	.thumb_func
SetMenuOptionGfxInvisibility:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r0, #0x1
	and	r1, r1, r0
	lsl	r4, r1, #0x2
	mov	r6, #0x5
	neg	r6, r6
	mov	r3, #0x3
.L306:
	ldmia	r5!, {r0}
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	add	r1, r6, #0
	and	r1, r1, r2
	orr	r1, r1, r4
	strb	r1, [r0]
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L306	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 SetMenuOptionGfxInvisibility,.Lfe30-SetMenuOptionGfxInvisibility
	.align	2, 0
	.type	 sub_81CA474,function
	.thumb_func
sub_81CA474:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x2e]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L309	@cond_branch
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x32]
	add	r0, r0, r1
	strh	r0, [r2, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x14
	strh	r0, [r2, #0x20]
	b	.L310
.L309:
	ldrh	r0, [r2, #0x3c]
	strh	r0, [r2, #0x20]
	ldr	r0, .L311
	str	r0, [r2, #0x1c]
.L310:
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	SpriteCallbackDummy
.Lfe31:
	.size	 sub_81CA474,.Lfe31-sub_81CA474
	.align	2, 0
	.type	 sub_81CA4AC,function
	.thumb_func
sub_81CA4AC:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x2e]
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L314	@cond_branch
	mov	r0, #0x30
	ldrsh	r5, [r4, r0]
	cmp	r5, #0
	bne	.L315	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x30]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	ldrh	r0, [r4, #0x24]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	strh	r5, [r4, #0x24]
	b	.L326
.L315:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x10
	strh	r0, [r4, #0x32]
	mov	r2, #0x32
	ldrsh	r0, [r4, r2]
	asr	r1, r0, #0x3
	add	r0, r1, #0
	sub	r0, r0, #0x20
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r1, r0, #0x1
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1
	beq	.L319	@cond_branch
	cmp	r0, #0x1
	bgt	.L324	@cond_branch
	cmp	r0, #0
	beq	.L318	@cond_branch
	b	.L317
.L324:
	cmp	r0, #0x2
	beq	.L320	@cond_branch
	cmp	r0, #0x3
	beq	.L321	@cond_branch
	b	.L317
.L318:
	neg	r1, r1
	b	.L321
.L319:
	neg	r0, r1
	b	.L327
.L320:
	strh	r1, [r4, #0x24]
	b	.L317
.L321:
	lsl	r0, r1, #0x1
	add	r0, r0, r1
.L327:
	strh	r0, [r4, #0x24]
.L317:
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L326	@cond_branch
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r1, [r4, #0x1]
	lsr	r1, r1, #0x6
	ldrb	r2, [r4, #0x3]
	lsr	r2, r2, #0x6
	add	r0, r4, #0
	mov	r3, #0x0
	bl	CalcCenterToCornerVec
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0xd
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L328
	str	r0, [r4, #0x1c]
	b	.L326
.L329:
	.align	2, 0
.L328:
	.word	SpriteCallbackDummy
.L314:
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x2e]
.L326:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 sub_81CA4AC,.Lfe32-sub_81CA4AC
	.align	2, 0
	.type	 sub_81CA580,function
	.thumb_func
sub_81CA580:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L343
	add	r4, r0, r1
	ldrh	r0, [r4]
	mov	r1, #0x0
	ldrsh	r2, [r4, r1]
	cmp	r2, #0
	bne	.L331	@cond_branch
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	beq	.L333	@cond_branch
	cmp	r1, #0x1
	beq	.L334	@cond_branch
	b	.L342
.L344:
	.align	2, 0
.L343:
	.word	gTasks+0x8
.L333:
	mov	r0, #0x10
	strh	r0, [r4, #0x4]
	strh	r2, [r4, #0x6]
	mov	r1, #0xfc
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x10
	bl	SetGpuReg
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	b	.L342
.L334:
	ldrh	r0, [r4, #0x8]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L335	@cond_branch
	ldrh	r0, [r4, #0x4]
	sub	r0, r0, #0x3
	strh	r0, [r4, #0x4]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L337	@cond_branch
	strh	r2, [r4, #0x4]
	b	.L337
.L335:
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x3
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x10
	ble	.L337	@cond_branch
	mov	r0, #0x10
	strh	r0, [r4, #0x6]
.L337:
	ldrh	r1, [r4, #0x6]
	lsl	r1, r1, #0x8
	ldrh	r0, [r4, #0x4]
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xc
	bne	.L342	@cond_branch
	mov	r0, #0x2
	bl	GetSubstructPtr
	ldrb	r1, [r0, #0xc]
	sub	r1, r1, #0x1
	strb	r1, [r0, #0xc]
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	add	r0, r5, #0
	bl	DestroyTask
	b	.L342
.L331:
	sub	r0, r0, #0x1
	strh	r0, [r4]
.L342:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 sub_81CA580,.Lfe33-sub_81CA580
	.align	2, 0
	.type	 CreateMatchCallBlueLightSprite,function
	.thumb_func
CreateMatchCallBlueLightSprite:
	push	{r4, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r4, r0, #0
	ldr	r0, .L348
	mov	r1, #0x10
	mov	r2, #0x60
	mov	r3, #0x4
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L348+0x4
	add	r1, r1, r0
	str	r1, [r4, #0x28]
	bl	PlayerHasTrainerRematches
	cmp	r0, #0
	beq	.L346	@cond_branch
	ldr	r1, [r4, #0x28]
	ldr	r0, .L348+0x8
	str	r0, [r1, #0x1c]
	b	.L347
.L349:
	.align	2, 0
.L348:
	.word	sMatchCallBlueLightSpriteTemplate
	.word	gSprites
	.word	SpriteCB_BlinkingBlueLight
.L346:
	ldr	r0, [r4, #0x28]
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L347:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 CreateMatchCallBlueLightSprite,.Lfe34-CreateMatchCallBlueLightSprite
	.align	2, 0
	.type	 DestroyRematchBlueLightSpriteId,function
	.thumb_func
DestroyRematchBlueLightSpriteId:
	push	{lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	ldr	r0, [r0, #0x28]
	bl	DestroySprite
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 DestroyRematchBlueLightSpriteId,.Lfe35-DestroyRematchBlueLightSpriteId
	.align	2, 0
	.type	 SpriteCB_BlinkingBlueLight,function
	.thumb_func
SpriteCB_BlinkingBlueLight:
	push	{lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L352	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0x2e]
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
.L352:
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 SpriteCB_BlinkingBlueLight,.Lfe36-SpriteCB_BlinkingBlueLight
	.align	2, 0
	.type	 AddOptionDescriptionWindow,function
	.thumb_func
AddOptionDescriptionWindow:
	push	{r4, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r4, r0, #0
	ldr	r0, .L354
	bl	AddWindow
	strh	r0, [r4, #0x8]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PutWindowTilemap
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x66
	bl	FillWindowPixelBuffer
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L355:
	.align	2, 0
.L354:
	.word	sOptionDescWindowTemplate
.Lfe37:
	.size	 AddOptionDescriptionWindow,.Lfe37-AddOptionDescriptionWindow
	.align	2, 0
	.type	 PrintCurrentOptionDescription,function
	.thumb_func
PrintCurrentOptionDescription:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r5, r0, #0
	bl	GetCurrentMenuItemId
	ldr	r1, .L357
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r6, [r0]
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, #0x1
	add	r1, r6, #0
	bl	GetStringWidth
	add	r4, r0, #0
	ldrb	r0, [r5, #0x8]
	mov	r1, #0x66
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5, #0x8]
	mov	r2, #0xc0
	sub	r2, r2, r4
	lsr	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r1, .L357+0x4
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L358:
	.align	2, 0
.L357:
	.word	sPageDescriptions
	.word	sOptionDescTextColors
.Lfe38:
	.size	 PrintCurrentOptionDescription,.Lfe38-PrintCurrentOptionDescription
	.align	2, 0
	.type	 PrintNoRibbonWinners,function
	.thumb_func
PrintNoRibbonWinners:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r5, r0, #0
	ldr	r6, .L360
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, #0x1
	add	r1, r6, #0
	bl	GetStringWidth
	add	r4, r0, #0
	ldrb	r0, [r5, #0x8]
	mov	r1, #0x66
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5, #0x8]
	mov	r2, #0xc0
	sub	r2, r2, r4
	lsr	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r1, .L360+0x4
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L361:
	.align	2, 0
.L360:
	.word	gText_NoRibbonWinners
	.word	sOptionDescTextColors2
.Lfe39:
	.size	 PrintNoRibbonWinners,.Lfe39-PrintNoRibbonWinners
	.align	2, 0
	.type	 IsDma3ManagerBusyWithBgCopy_,function
	.thumb_func
IsDma3ManagerBusyWithBgCopy_:
	push	{lr}
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 IsDma3ManagerBusyWithBgCopy_,.Lfe40-IsDma3ManagerBusyWithBgCopy_
	.align	2, 0
	.type	 CreateMovingBgDotsTask,function
	.thumb_func
CreateMovingBgDotsTask:
	push	{r4, lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	add	r4, r0, #0
	ldr	r0, .L364
	mov	r1, #0x2
	bl	CreateTask
	strb	r0, [r4, #0xa]
	pop	{r4}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	Task_MoveBgDots
.Lfe41:
	.size	 CreateMovingBgDotsTask,.Lfe41-CreateMovingBgDotsTask
	.align	2, 0
	.type	 DestroyMovingDotsBgTask,function
	.thumb_func
DestroyMovingDotsBgTask:
	push	{lr}
	mov	r0, #0x2
	bl	GetSubstructPtr
	ldrb	r0, [r0, #0xa]
	bl	DestroyTask
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 DestroyMovingDotsBgTask,.Lfe42-DestroyMovingDotsBgTask
	.align	2, 0
	.type	 Task_MoveBgDots,function
	.thumb_func
Task_MoveBgDots:
	push	{lr}
	mov	r0, #0x3
	mov	r1, #0x80
	mov	r2, #0x1
	bl	ChangeBgX
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 Task_MoveBgDots,.Lfe43-Task_MoveBgDots
	.align	2, 0
	.type	 CreateBgDotPurplePalTask,function
	.thumb_func
CreateBgDotPurplePalTask:
	push	{r4, r5, lr}
	ldr	r0, .L369
	mov	r1, #0x3
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L369+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	add	r2, r5, #0
	bl	SetWordTaskArg
	add	r5, r5, #0xc
	add	r0, r4, #0
	mov	r1, #0x3
	add	r2, r5, #0
	bl	SetWordTaskArg
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L370:
	.align	2, 0
.L369:
	.word	Task_UpdateBgDotsPalette
	.word	sPokenavBgDotsPal+0x2
.Lfe44:
	.size	 CreateBgDotPurplePalTask,.Lfe44-CreateBgDotPurplePalTask
	.align	2, 0
	.type	 ChangeBgDotsColorToPurple,function
	.thumb_func
ChangeBgDotsColorToPurple:
	push	{lr}
	ldr	r0, .L372
	mov	r1, #0x31
	mov	r2, #0x4
	bl	CopyPaletteIntoBufferUnfaded
	pop	{r0}
	bx	r0
.L373:
	.align	2, 0
.L372:
	.word	sPokenavBgDotsPal+0xe
.Lfe45:
	.size	 ChangeBgDotsColorToPurple,.Lfe45-ChangeBgDotsColorToPurple
	.align	2, 0
	.type	 CreateBgDotLightBluePalTask,function
	.thumb_func
CreateBgDotLightBluePalTask:
	push	{r4, r5, lr}
	ldr	r0, .L375
	mov	r1, #0x3
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L375+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	add	r2, r5, #0
	bl	SetWordTaskArg
	sub	r5, r5, #0xc
	add	r0, r4, #0
	mov	r1, #0x3
	add	r2, r5, #0
	bl	SetWordTaskArg
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L376:
	.align	2, 0
.L375:
	.word	Task_UpdateBgDotsPalette
	.word	sPokenavBgDotsPal+0xe
.Lfe46:
	.size	 CreateBgDotLightBluePalTask,.Lfe46-CreateBgDotLightBluePalTask
	.align	2, 0
	.type	 IsTaskActive_UpdateBgDotsPalette,function
	.thumb_func
IsTaskActive_UpdateBgDotsPalette:
	push	{lr}
	ldr	r0, .L378
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L379:
	.align	2, 0
.L378:
	.word	Task_UpdateBgDotsPalette
.Lfe47:
	.size	 IsTaskActive_UpdateBgDotsPalette,.Lfe47-IsTaskActive_UpdateBgDotsPalette
	.align	2, 0
	.type	 Task_UpdateBgDotsPalette,function
	.thumb_func
Task_UpdateBgDotsPalette:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	ldr	r0, .L382
	add	r4, r4, r0
	add	r0, r6, #0
	mov	r1, #0x1
	bl	GetWordTaskArg
	add	r5, r0, #0
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetWordTaskArg
	add	r1, r0, #0
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp]
	add	r0, sp, #0x8
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0xc
	bl	PokenavCopyPalette
	add	r0, sp, #0x8
	mov	r1, #0x31
	mov	r2, #0x4
	bl	LoadPalette
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0xc
	bne	.L381	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
.L381:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	gTasks+0x8
.Lfe48:
	.size	 Task_UpdateBgDotsPalette,.Lfe48-Task_UpdateBgDotsPalette
	.align	2, 0
	.type	 VBlankCB_PokenavMainMenu,function
	.thumb_func
VBlankCB_PokenavMainMenu:
	push	{lr}
	bl	TransferPlttBuffer
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	ScanlineEffect_InitHBlankDmaTransfer
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 VBlankCB_PokenavMainMenu,.Lfe49-VBlankCB_PokenavMainMenu
	.align	2, 0
	.type	 SetupPokenavMenuScanlineEffects,function
	.thumb_func
SetupPokenavMenuScanlineEffects:
	push	{lr}
	mov	r0, #0x50
	mov	r1, #0x90
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuRegBits
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuRegBits
	mov	r0, #0x4a
	mov	r1, #0x1f
	bl	SetGpuRegBits
	mov	r0, #0x44
	mov	r1, #0xa0
	bl	SetGpuRegBits
	bl	ScanlineEffect_Stop
	bl	SetMenuOptionGlow
	ldr	r2, .L386
	ldr	r0, [r2]
	ldr	r1, [r2, #0x4]
	ldr	r2, [r2, #0x8]
	bl	ScanlineEffect_SetParams
	ldr	r0, .L386+0x4
	bl	SetVBlankCallback_
	ldr	r0, .L386+0x8
	mov	r1, #0x3
	bl	CreateTask
	pop	{r0}
	bx	r0
.L387:
	.align	2, 0
.L386:
	.word	sPokenavMainMenuScanlineEffectParams
	.word	VBlankCB_PokenavMainMenu
	.word	Task_CurrentMenuOptionGlow
.Lfe50:
	.size	 SetupPokenavMenuScanlineEffects,.Lfe50-SetupPokenavMenuScanlineEffects
	.align	2, 0
	.type	 DestroyMenuOptionGlowTask,function
	.thumb_func
DestroyMenuOptionGlowTask:
	push	{lr}
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	ClearGpuRegBits
	bl	ScanlineEffect_Stop
	ldr	r0, .L389
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	bl	SetPokenavVBlankCallback
	pop	{r0}
	bx	r0
.L390:
	.align	2, 0
.L389:
	.word	Task_CurrentMenuOptionGlow
.Lfe51:
	.size	 DestroyMenuOptionGlowTask,.Lfe51-DestroyMenuOptionGlowTask
	.align	2, 0
	.type	 ResetBldCnt,function
	.thumb_func
ResetBldCnt:
	push	{lr}
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 ResetBldCnt,.Lfe52-ResetBldCnt
	.align	2, 0
	.type	 InitMenuOptionGlow,function
	.thumb_func
InitMenuOptionGlow:
	push	{lr}
	bl	SetMenuOptionGlow
	mov	r0, #0x50
	mov	r1, #0x90
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 InitMenuOptionGlow,.Lfe53-InitMenuOptionGlow
	.align	2, 0
	.type	 Task_CurrentMenuOptionGlow,function
	.thumb_func
Task_CurrentMenuOptionGlow:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L395
	add	r2, r1, r0
	ldrh	r0, [r2]
	add	r0, r0, #0x1
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L394	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2]
	ldrh	r0, [r2, #0x2]
	add	r0, r0, #0x3
	mov	r1, #0x7f
	and	r0, r0, r1
	strh	r0, [r2, #0x2]
	ldr	r1, .L395+0x4
	mov	r3, #0x2
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x15
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x54
	bl	SetGpuReg
.L394:
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	gTasks+0x8
	.word	gSineTable
.Lfe54:
	.size	 Task_CurrentMenuOptionGlow,.Lfe54-Task_CurrentMenuOptionGlow
	.align	2, 0
	.type	 SetMenuOptionGlow,function
	.thumb_func
SetMenuOptionGlow:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x8
	bl	GetPokenavMenuType
	add	r4, r0, #0
	bl	GetPokenavCursorPos
	ldr	r2, .L398
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r2, [r1, #0x2]
	mov	r4, r2
	mul	r4, r4, r0
	ldrh	r1, [r1]
	add	r4, r4, r1
	sub	r4, r4, #0x8
	mov	r0, sp
	mov	r6, #0x0
	strh	r6, [r0]
	ldr	r5, .L398+0x4
	ldr	r0, .L398+0x8
	mov	r8, r0
	mov	r0, sp
	add	r1, r5, #0
	mov	r2, r8
	bl	CpuSet
	mov	r0, sp
	add	r0, r0, #0x2
	strh	r6, [r0]
	mov	r1, #0xf0
	lsl	r1, r1, #0x3
	add	r1, r1, r5
	mov	r9, r1
	mov	r2, r8
	bl	CpuSet
	add	r0, sp, #0x4
	ldr	r1, .L398+0xc
	add	r6, r1, #0
	strh	r6, [r0]
	lsl	r4, r4, #0x1
	add	r5, r4, r5
	ldr	r1, .L398+0x10
	mov	r8, r1
	add	r1, r5, #0
	mov	r2, r8
	bl	CpuSet
	mov	r0, sp
	add	r0, r0, #0x6
	strh	r6, [r0]
	add	r4, r4, r9
	add	r1, r4, #0
	mov	r2, r8
	bl	CpuSet
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L399:
	.align	2, 0
.L398:
	.word	sPokenavMenuOptionLabelGfx
	.word	gScanlineEffectRegBuffers
	.word	0x10000a0
	.word	0x72f0
	.word	0x1000010
.Lfe55:
	.size	 SetMenuOptionGlow,.Lfe55-SetMenuOptionGlow
	.align	2, 0
	.globl	ResetBldCnt_
	.type	 ResetBldCnt_,function
	.thumb_func
ResetBldCnt_:
	push	{lr}
	bl	ResetBldCnt
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 ResetBldCnt_,.Lfe56-ResetBldCnt_
.text
	.align	2, 0

