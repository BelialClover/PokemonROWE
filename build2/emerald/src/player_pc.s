@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gPcItemMenuOptionOrder,object
	.size	 gPcItemMenuOptionOrder,4
gPcItemMenuOptionOrder:
	.word	0x0
	.type	 gPcItemMenuOptionsNum,object
	.size	 gPcItemMenuOptionsNum,1
gPcItemMenuOptionsNum:
	.byte	0x0
	.globl	playerPCItemPageInfo
	.align	2, 0
	.type	 playerPCItemPageInfo,object
	.size	 playerPCItemPageInfo,12
playerPCItemPageInfo:
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 gUnknown_0203BCC4,object
	.size	 gUnknown_0203BCC4,4
gUnknown_0203BCC4:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 gPCText_OptionDescList,object
gPCText_OptionDescList:
	.word	gText_TakeOutItemsFromPC
	.word	gText_StoreItemsInPC
	.word	gText_ThrowAwayItemsInPC
	.word	gText_GoBackPrevMenu
	.size	 gPCText_OptionDescList,16
	.align	2, 0
	.type	 sPlayerPCMenuActions,object
sPlayerPCMenuActions:
	.word	gText_ItemStorage
	.word	PlayerPC_ItemStorage
	.word	gText_Mailbox
	.word	PlayerPC_Mailbox
	.word	gText_Decoration
	.word	PlayerPC_Decoration
	.word	gText_TurnOff
	.word	PlayerPC_TurnOff
	.size	 sPlayerPCMenuActions,32
	.type	 gBedroomPC_OptionOrder,object
gBedroomPC_OptionOrder:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 gBedroomPC_OptionOrder,4
	.type	 gPlayerPC_OptionOrder,object
gPlayerPC_OptionOrder:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.size	 gPlayerPC_OptionOrder,3
	.align	2, 0
	.type	 gPCText_ItemPCOptionsText,object
gPCText_ItemPCOptionsText:
	.word	gText_WithdrawItem
	.word	ItemStorage_Withdraw
	.word	gText_DepositItem
	.word	ItemStorage_Deposit
	.word	gText_TossItem
	.word	ItemStorage_Toss
	.word	gText_Cancel
	.word	ItemStorage_Exit
	.size	 gPCText_ItemPCOptionsText,32
	.align	2, 0
	.type	 gNewGamePCItems,object
gNewGamePCItems:
	.short	0x1c
	.short	0x1
	.short	0x0
	.short	0x0
	.size	 gNewGamePCItems,8
	.globl	gMailboxMailOptions
	.align	2, 0
	.type	 gMailboxMailOptions,object
gMailboxMailOptions:
	.word	gText_Read
	.word	Mailbox_DoMailRead
	.word	gText_MoveToBag
	.word	Mailbox_MoveToBag
	.word	gText_Give2
	.word	Mailbox_Give
	.word	gText_Cancel2
	.word	Mailbox_Cancel
	.size	 gMailboxMailOptions,32
	.align	2, 0
	.type	 gUnknown_085DFF24,object
	.size	 gUnknown_085DFF24,24
gUnknown_085DFF24:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x9
	.byte	0x6
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x9
	.byte	0x8
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x8
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 ResumeFromWithdrawYesNoFuncList,object
	.size	 ResumeFromWithdrawYesNoFuncList,8
ResumeFromWithdrawYesNoFuncList:
	.word	ItemStorage_ResumeInputFromYesToss
	.word	ItemStorage_ResumeInputFromNoToss
	.align	2, 0
	.type	 gUnknown_085DFF44,object
	.size	 gUnknown_085DFF44,24
gUnknown_085DFF44:
	.word	0x0
	.word	ItemStorage_MoveCursor
	.word	fish4_goto_x5_or_x6
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x29
	.byte	0x31
	.byte	0x0
	.byte	0x7
	.align	2, 0
	.type	 gUnknown_085DFF5C,object
	.size	 gUnknown_085DFF5C,40
gUnknown_085DFF5C:
	.byte	0x0
	.byte	0x10
	.byte	0x1
	.byte	0xd
	.byte	0x12
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x1
	.byte	0xd
	.byte	0xd
	.byte	0x6
	.byte	0xf
	.short	0xeb
	.byte	0x0
	.byte	0x1
	.byte	0x8
	.byte	0x3
	.byte	0x3
	.byte	0xf
	.short	0x153
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0xf
	.short	0x139
	.byte	0x0
	.byte	0x8
	.byte	0x9
	.byte	0x6
	.byte	0x2
	.byte	0xf
	.short	0x15c
	.align	2, 0
	.type	 gUnknown_085DFF84,object
	.size	 gUnknown_085DFF84,8
gUnknown_085DFF84:
	.byte	0x0
	.byte	0x9
	.byte	0x7
	.byte	0x5
	.byte	0x4
	.byte	0xf
	.short	0x168
	.type	 gUnknown_085DFF8C,object
gUnknown_085DFF8C:
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.size	 gUnknown_085DFF8C,4
.text
	.align	2, 0
	.globl	NewGameInitPCItems
	.type	 NewGameInitPCItems,function
	.thumb_func
NewGameInitPCItems:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r0, .L9
	ldr	r0, [r0]
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x32
	bl	ClearItemSlots
	ldr	r1, .L9+0x4
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0
	beq	.L4	@cond_branch
	add	r5, r1, #0
	add	r6, r5, #0x2
.L8:
	lsl	r1, r4, #0x2
	add	r0, r1, r5
	ldrh	r0, [r0]
	add	r1, r1, r6
	ldrh	r1, [r1]
	bl	AddPCItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L4	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r4, #0x2
	add	r0, r1, r5
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L4	@cond_branch
	add	r0, r1, r6
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L8	@cond_branch
.L4:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gSaveBlock1Ptr
	.word	gNewGamePCItems
.Lfe1:
	.size	 NewGameInitPCItems,.Lfe1-NewGameInitPCItems
	.align	2, 0
	.globl	BedroomPC
	.type	 BedroomPC,function
	.thumb_func
BedroomPC:
	push	{lr}
	ldr	r1, .L12
	ldr	r0, .L12+0x4
	str	r0, [r1]
	ldr	r1, .L12+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	ldr	r0, .L12+0xc
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L12+0x10
	ldr	r2, .L12+0x14
	bl	DisplayItemMessageOnField
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	gPcItemMenuOptionOrder
	.word	gBedroomPC_OptionOrder
	.word	gPcItemMenuOptionsNum
	.word	TaskDummy
	.word	gText_WhatWouldYouLike
	.word	InitPlayerPCMenu
.Lfe2:
	.size	 BedroomPC,.Lfe2-BedroomPC
	.align	2, 0
	.globl	PlayerPC
	.type	 PlayerPC,function
	.thumb_func
PlayerPC:
	push	{lr}
	ldr	r1, .L15
	ldr	r0, .L15+0x4
	str	r0, [r1]
	ldr	r1, .L15+0x8
	mov	r0, #0x3
	strb	r0, [r1]
	ldr	r0, .L15+0xc
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L15+0x10
	ldr	r2, .L15+0x14
	bl	DisplayItemMessageOnField
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	gPcItemMenuOptionOrder
	.word	gPlayerPC_OptionOrder
	.word	gPcItemMenuOptionsNum
	.word	TaskDummy
	.word	gText_WhatWouldYouLike
	.word	InitPlayerPCMenu
.Lfe3:
	.size	 PlayerPC,.Lfe3-PlayerPC
	.align	2, 0
	.type	 InitPlayerPCMenu,function
	.thumb_func
InitPlayerPCMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L21
	add	r6, r0, r1
	ldr	r0, .L21+0x4
	ldrb	r1, [r0]
	mov	r8, r0
	cmp	r1, #0x3
	bne	.L18	@cond_branch
	ldr	r0, .L21+0x8
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	b	.L20
.L22:
	.align	2, 0
.L21:
	.word	gTasks+0x8
	.word	gPcItemMenuOptionsNum
	.word	gUnknown_085DFF24
.L18:
	ldr	r0, .L23
	ldr	r1, [r0, #0xc]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x8]		@ created by thumb_load_double_from_address
.L20:
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r5, .L23+0x4
	ldr	r4, .L23+0x8
	ldr	r1, [r4]
	mov	r0, r8
	ldrb	r2, [r0]
	add	r0, r5, #0
	bl	sub_81DB3D8
	lsl	r0, r0, #0x18
	ldr	r2, .L23+0xc
	ldr	r1, [sp]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	mov	r0, sp
	bl	AddWindow
	strh	r0, [r6, #0x8]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	ldrb	r0, [r6, #0x8]
	mov	r2, r8
	ldrb	r1, [r2]
	ldr	r3, [r4]
	add	r2, r5, #0
	bl	sub_81995E4
	ldrb	r0, [r6, #0x8]
	mov	r2, r8
	ldrb	r1, [r2]
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L23+0x10
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L23+0x14
	str	r1, [r0]
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	gUnknown_085DFF24
	.word	sPlayerPCMenuActions
	.word	gPcItemMenuOptionOrder
	.word	0xffffff
	.word	gTasks
	.word	PlayerPCProcessMenuInput
.Lfe4:
	.size	 InitPlayerPCMenu,.Lfe4-InitPlayerPCMenu
	.align	2, 0
	.type	 PlayerPCProcessMenuInput,function
	.thumb_func
PlayerPCProcessMenuInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L34
	add	r4, r0, r1
	ldr	r0, .L34+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bls	.L26	@cond_branch
	bl	Menu_ProcessInput
	b	.L33
.L35:
	.align	2, 0
.L34:
	.word	gTasks+0x8
	.word	gPcItemMenuOptionsNum
.L26:
	bl	Menu_ProcessInputNoWrap
.L33:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r0, r0, #0x18
	asr	r5, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L28	@cond_branch
	add	r0, r0, #0x1
	cmp	r5, r0
	bne	.L31	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4, #0x8]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0x8]
	bl	RemoveWindow
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L36
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L36+0x4
	str	r1, [r0]
	b	.L28
.L37:
	.align	2, 0
.L36:
	.word	gTasks
	.word	PlayerPC_TurnOff
.L31:
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4, #0x8]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0x8]
	bl	RemoveWindow
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L38
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r2, .L38+0x4
	ldr	r0, .L38+0x8
	ldr	r0, [r0]
	add	r0, r0, r5
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r2, r2, #0x4
	add	r0, r0, r2
	ldr	r0, [r0]
	str	r0, [r1]
.L28:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	gTasks
	.word	sPlayerPCMenuActions
	.word	gPcItemMenuOptionOrder
.Lfe5:
	.size	 PlayerPCProcessMenuInput,.Lfe5-PlayerPCProcessMenuInput
	.align	2, 0
	.globl	ReshowPlayerPC
	.type	 ReshowPlayerPC,function
	.thumb_func
ReshowPlayerPC:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L41
	ldr	r2, .L41+0x4
	bl	DisplayItemMessageOnField
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	gText_WhatWouldYouLike
	.word	InitPlayerPCMenu
.Lfe6:
	.size	 ReshowPlayerPC,.Lfe6-ReshowPlayerPC
	.align	2, 0
	.type	 PlayerPC_ItemStorage,function
	.thumb_func
PlayerPC_ItemStorage:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_816B4DC
	add	r0, r4, #0
	mov	r1, #0x0
	bl	InitItemStorageMenu
	ldr	r1, .L44
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L44+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	gTasks
	.word	ItemStorageMenuProcessInput
.Lfe7:
	.size	 PlayerPC_ItemStorage,.Lfe7-PlayerPC_ItemStorage
	.align	2, 0
	.type	 PlayerPC_Mailbox,function
	.thumb_func
PlayerPC_Mailbox:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	bl	GetMailboxMailCount
	ldr	r5, .L51
	mov	r1, #0x0
	strb	r0, [r5, #0x5]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L47	@cond_branch
	ldr	r1, .L51+0x4
	ldr	r2, .L51+0x8
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
	b	.L48
.L52:
	.align	2, 0
.L51:
	.word	playerPCItemPageInfo
	.word	gText_NoMailHere
	.word	ReshowPlayerPC
.L47:
	strh	r1, [r5]
	strh	r1, [r5, #0x2]
	mov	r0, #0xff
	strb	r0, [r5, #0x9]
	bl	Mailbox_UpdateMailList
	add	r0, r4, #0
	bl	ItemStorage_SetItemAndMailCount
	ldrb	r0, [r5, #0x5]
	bl	sub_81D1C44
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L49	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrame
	add	r0, r4, #0
	bl	Mailbox_DrawMailboxMenu
	ldr	r0, .L53
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L53+0x4
	str	r0, [r1]
	b	.L48
.L54:
	.align	2, 0
.L53:
	.word	gTasks
	.word	Mailbox_ProcessInput
.L49:
	ldr	r1, .L55
	ldr	r2, .L55+0x4
	add	r0, r6, #0
	bl	DisplayItemMessageOnField
.L48:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	gText_NoMailHere
	.word	ReshowPlayerPC
.Lfe8:
	.size	 PlayerPC_Mailbox,.Lfe8-PlayerPC_Mailbox
	.align	2, 0
	.type	 PlayerPC_Decoration,function
	.thumb_func
PlayerPC_Decoration:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DoPlayerRoomDecorationMenu
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 PlayerPC_Decoration,.Lfe9-PlayerPC_Decoration
	.align	2, 0
	.type	 PlayerPC_TurnOff,function
	.thumb_func
PlayerPC_TurnOff:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L63
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L59	@cond_branch
	ldr	r0, .L63+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L60	@cond_branch
	ldr	r0, .L63+0x8
	bl	ScriptContext1_SetupScript
	b	.L62
.L64:
	.align	2, 0
.L63:
	.word	gPcItemMenuOptionsNum
	.word	gSaveBlock2Ptr
	.word	LittlerootTown_BrendansHouse_2F_EventScript_TurnOffPlayerPC
.L60:
	ldr	r0, .L65
	bl	ScriptContext1_SetupScript
	b	.L62
.L66:
	.align	2, 0
.L65:
	.word	LittlerootTown_MaysHouse_2F_EventScript_TurnOffPlayerPC
.L59:
	bl	EnableBothScriptContexts
.L62:
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 PlayerPC_TurnOff,.Lfe10-PlayerPC_TurnOff
	.align	2, 0
	.type	 InitItemStorageMenu,function
	.thumb_func
InitItemStorageMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L68
	add	r4, r4, r0
	ldr	r0, .L68+0x4
	ldr	r1, [r0, #0x14]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x10]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r6, .L68+0x8
	add	r0, r6, #0
	mov	r1, #0x4
	bl	GetMaxWidthInMenuTable
	lsl	r0, r0, #0x18
	ldr	r2, .L68+0xc
	ldr	r1, [sp]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	mov	r0, sp
	bl	AddWindow
	strh	r0, [r4, #0x8]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x4
	add	r2, r6, #0
	bl	PrintMenuTable
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x4
	add	r2, r5, #0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L68+0x10
	lsl	r5, r5, #0x2
	add	r5, r5, r0
	ldr	r0, [r5]
	bl	ItemStorageMenuPrint
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L69:
	.align	2, 0
.L68:
	.word	gTasks+0x8
	.word	gUnknown_085DFF24
	.word	gPCText_ItemPCOptionsText
	.word	0xffffff
	.word	gPCText_OptionDescList
.Lfe11:
	.size	 InitItemStorageMenu,.Lfe11-InitItemStorageMenu
	.align	2, 0
	.type	 ItemStorageMenuPrint,function
	.thumb_func
ItemStorageMenuPrint:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawDialogueFrame
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 ItemStorageMenuPrint,.Lfe12-ItemStorageMenuPrint
	.align	2, 0
	.type	 ItemStorageMenuProcessInput,function
	.thumb_func
ItemStorageMenuProcessInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	Menu_GetCursorPos
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	Menu_ProcessInput
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Menu_GetCursorPos
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L73	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	beq	.L75	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L80
	lsl	r1, r4, #0x3
	add	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r6, #0
	bl	_call_via_r1
	b	.L72
.L81:
	.align	2, 0
.L80:
	.word	gPCText_ItemPCOptionsText
.L73:
	lsl	r1, r5, #0x18
	lsl	r0, r2, #0x18
	asr	r2, r0, #0x18
	cmp	r1, r0
	beq	.L72	@cond_branch
	ldr	r0, .L82
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ItemStorageMenuPrint
	b	.L72
.L83:
	.align	2, 0
.L82:
	.word	gPCText_OptionDescList
.L75:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	ItemStorage_Exit
.L72:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 ItemStorageMenuProcessInput,.Lfe13-ItemStorageMenuProcessInput
	.align	2, 0
	.type	 ItemStorage_Deposit,function
	.thumb_func
ItemStorage_Deposit:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L85
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L85+0x4
	str	r0, [r1]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gTasks
	.word	Task_ItemStorage_Deposit
.Lfe14:
	.size	 ItemStorage_Deposit,.Lfe14-ItemStorage_Deposit
	.align	2, 0
	.type	 Task_ItemStorage_Deposit,function
	.thumb_func
Task_ItemStorage_Deposit:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L89
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L88	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	bl	CB2_GoToItemDepositMenu
	add	r0, r4, #0
	bl	DestroyTask
.L88:
	pop	{r4}
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	gPaletteFade
.Lfe15:
	.size	 Task_ItemStorage_Deposit,.Lfe15-Task_ItemStorage_Deposit
	.align	2, 0
	.globl	sub_816B31C
	.type	 sub_816B31C,function
	.thumb_func
sub_816B31C:
	push	{lr}
	ldr	r0, .L92
	ldr	r1, .L92+0x4
	str	r1, [r0]
	ldr	r0, .L92+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L93:
	.align	2, 0
.L92:
	.word	gFieldCallback
	.word	Mailbox_DoRedrawMailboxMenuAfterReturn
	.word	CB2_ReturnToField
.Lfe16:
	.size	 sub_816B31C,.Lfe16-sub_816B31C
	.align	2, 0
	.type	 Mailbox_DoRedrawMailboxMenuAfterReturn,function
	.thumb_func
Mailbox_DoRedrawMailboxMenuAfterReturn:
	push	{lr}
	bl	LoadMessageBoxAndBorderGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r0, .L95
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	InitItemStorageMenu
	bl	FadeInFromBlack
	pop	{r0}
	bx	r0
.L96:
	.align	2, 0
.L95:
	.word	ItemStorage_HandleReturnToProcessInput
.Lfe17:
	.size	 Mailbox_DoRedrawMailboxMenuAfterReturn,.Lfe17-Mailbox_DoRedrawMailboxMenuAfterReturn
	.align	2, 0
	.type	 ItemStorage_HandleReturnToProcessInput,function
	.thumb_func
ItemStorage_HandleReturnToProcessInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L98	@cond_branch
	ldr	r0, .L99
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L99+0x4
	str	r0, [r1]
.L98:
	pop	{r4}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	gTasks
	.word	ItemStorageMenuProcessInput
.Lfe18:
	.size	 ItemStorage_HandleReturnToProcessInput,.Lfe18-ItemStorage_HandleReturnToProcessInput
	.align	2, 0
	.type	 ItemStorage_Withdraw,function
	.thumb_func
ItemStorage_Withdraw:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L104
	add	r4, r4, r0
	bl	CountUsedPCItemSlots
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x2]
	cmp	r0, #0
	beq	.L102	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	ItemStorage_WithdrawToss_Helper
	b	.L103
.L105:
	.align	2, 0
.L104:
	.word	gTasks+0x8
.L102:
	add	r0, r5, #0
	bl	sub_816B4DC
	ldr	r1, .L106
	ldr	r2, .L106+0x4
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
.L103:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gText_NoItems
	.word	PlayerPC_ItemStorage
.Lfe19:
	.size	 ItemStorage_Withdraw,.Lfe19-ItemStorage_Withdraw
	.align	2, 0
	.type	 ItemStorage_Toss,function
	.thumb_func
ItemStorage_Toss:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L111
	add	r4, r4, r0
	bl	CountUsedPCItemSlots
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x2]
	cmp	r0, #0
	beq	.L109	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	bl	ItemStorage_WithdrawToss_Helper
	b	.L110
.L112:
	.align	2, 0
.L111:
	.word	gTasks+0x8
.L109:
	add	r0, r5, #0
	bl	sub_816B4DC
	ldr	r1, .L113
	ldr	r2, .L113+0x4
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
.L110:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	gText_NoItems
	.word	PlayerPC_ItemStorage
.Lfe20:
	.size	 ItemStorage_Toss,.Lfe20-ItemStorage_Toss
	.align	2, 0
	.type	 ItemStorage_WithdrawToss_Helper,function
	.thumb_func
ItemStorage_WithdrawToss_Helper:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	ldr	r6, .L116
	add	r0, r5, r6
	strh	r1, [r0, #0x6]
	add	r0, r4, #0
	bl	sub_816B4DC
	ldr	r1, .L116+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	strh	r0, [r1, #0x2]
	mov	r0, #0xff
	strb	r0, [r1, #0x9]
	add	r0, r4, #0
	bl	ItemStorage_SetItemAndMailCount
	bl	sub_816BC14
	bl	FreeAndReserveObjectSpritePalettes
	bl	LoadListMenuArrowsGfx
	ldr	r0, .L116+0x8
	ldr	r0, [r0]
	mov	r1, #0xcd
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x7
	bl	sub_8122344
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrame
	sub	r6, r6, #0x8
	add	r5, r5, r6
	ldr	r0, .L116+0xc
	str	r0, [r5]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	gTasks+0x8
	.word	playerPCItemPageInfo
	.word	gUnknown_0203BCC4
	.word	ItemStorage_ProcessWithdrawTossInput
.Lfe21:
	.size	 ItemStorage_WithdrawToss_Helper,.Lfe21-ItemStorage_WithdrawToss_Helper
	.align	2, 0
	.type	 ItemStorage_Exit,function
	.thumb_func
ItemStorage_Exit:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_816B4DC
	add	r0, r4, #0
	bl	ReshowPlayerPC
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 ItemStorage_Exit,.Lfe22-ItemStorage_Exit
	.align	2, 0
	.type	 ItemStorage_SetItemAndMailCount,function
	.thumb_func
ItemStorage_SetItemAndMailCount:
	push	{lr}
	ldr	r1, .L123
	ldrb	r0, [r1, #0x5]
	cmp	r0, #0x7
	bls	.L120	@cond_branch
	mov	r0, #0x8
	b	.L122
.L124:
	.align	2, 0
.L123:
	.word	playerPCItemPageInfo
.L120:
	add	r0, r0, #0x1
.L122:
	strb	r0, [r1, #0x4]
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 ItemStorage_SetItemAndMailCount,.Lfe23-ItemStorage_SetItemAndMailCount
	.align	2, 0
	.type	 sub_816B4DC,function
	.thumb_func
sub_816B4DC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L126
	add	r4, r4, r0
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4, #0x8]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0x8]
	bl	RemoveWindow
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L127:
	.align	2, 0
.L126:
	.word	gTasks+0x8
.Lfe24:
	.size	 sub_816B4DC,.Lfe24-sub_816B4DC
	.align	2, 0
	.type	 GetMailboxMailCount,function
	.thumb_func
GetMailboxMailCount:
	push	{r4, lr}
	mov	r2, #0x0
	mov	r1, #0x6
	ldr	r0, .L135
	ldr	r3, [r0]
	mov	r4, #0xa2
	lsl	r4, r4, #0x6
.L132:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L131	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L131:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L132	@cond_branch
	add	r0, r2, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L136:
	.align	2, 0
.L135:
	.word	gSaveBlock1Ptr
.Lfe25:
	.size	 GetMailboxMailCount,.Lfe25-GetMailboxMailCount
	.align	2, 0
	.type	 Mailbox_UpdateMailList,function
	.thumb_func
Mailbox_UpdateMailList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x24
	mov	r2, #0x6
.L141:
	add	r1, r2, #0x1
	lsl	r0, r1, #0x18
	lsr	r4, r0, #0x18
	mov	r8, r1
	cmp	r4, #0xf
	bhi	.L140	@cond_branch
	ldr	r0, .L149
	mov	sl, r0
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	mov	ip, r0
	ldr	r6, .L149+0x4
.L145:
	mov	r1, sl
	ldr	r1, [r1]
	mov	r9, r1
	mov	r2, r9
	add	r2, r2, ip
	mov	r3, #0xa2
	lsl	r3, r3, #0x6
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L144	@cond_branch
	add	r2, r2, r6
	mov	r1, sp
	add	r0, r2, #0
	ldmia	r0!, {r3, r5, r7}
	stmia	r1!, {r3, r5, r7}
	ldmia	r0!, {r3, r5, r7}
	stmia	r1!, {r3, r5, r7}
	ldmia	r0!, {r3, r5, r7}
	stmia	r1!, {r3, r5, r7}
	lsl	r3, r4, #0x3
	add	r3, r3, r4
	lsl	r3, r3, #0x2
	mov	r5, r9
	add	r0, r5, r3
	add	r0, r0, r6
	ldmia	r0!, {r1, r5, r7}
	stmia	r2!, {r1, r5, r7}
	ldmia	r0!, {r1, r5, r7}
	stmia	r2!, {r1, r5, r7}
	ldmia	r0!, {r1, r5, r7}
	stmia	r2!, {r1, r5, r7}
	mov	r7, sl
	ldr	r1, [r7]
	add	r1, r1, r3
	add	r1, r1, r6
	mov	r0, sp
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
.L144:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L145	@cond_branch
.L140:
	mov	r3, r8
	lsl	r0, r3, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xe
	bls	.L141	@cond_branch
	add	sp, sp, #0x24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L150:
	.align	2, 0
.L149:
	.word	gSaveBlock1Ptr
	.word	0x2860
.Lfe26:
	.size	 Mailbox_UpdateMailList,.Lfe26-Mailbox_UpdateMailList
	.align	2, 0
	.type	 Mailbox_DrawMailboxMenu,function
	.thumb_func
Mailbox_DrawMailboxMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x0
	bl	sub_81D1C84
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	sub_81D1C84
	ldr	r6, .L152
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x40
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x1
	add	r2, r6, #0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r4, .L152+0x4
	add	r0, r4, #0
	bl	sub_81D1DC0
	ldr	r2, .L152+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x12]
	add	r0, r4, #0
	bl	sub_81D1E90
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	gText_Mailbox
	.word	playerPCItemPageInfo
	.word	gTasks
.Lfe27:
	.size	 Mailbox_DrawMailboxMenu,.Lfe27-Mailbox_DrawMailboxMenu
	.align	2, 0
	.type	 Mailbox_ProcessInput,function
	.thumb_func
Mailbox_ProcessInput:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	mov	r9, r0
	ldr	r0, .L161
	mov	sl, r0
	mov	r4, r9
	add	r4, r4, sl
	ldr	r0, .L161+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L155	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	ListMenu_ProcessInput
	add	r6, r0, #0
	ldrb	r0, [r4, #0xa]
	ldr	r7, .L161+0x8
	sub	r1, r7, #0x2
	mov	r8, r1
	add	r1, r7, #0
	mov	r2, r8
	bl	ListMenuGetScrollAndRow
	mov	r0, #0x2
	neg	r0, r0
	cmp	r6, r0
	beq	.L158	@cond_branch
	add	r0, r0, #0x1
	cmp	r6, r0
	bne	.L159	@cond_branch
	b	.L155
.L162:
	.align	2, 0
.L161:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	playerPCItemPageInfo+0x2
.L158:
	mov	r0, #0x5
	bl	PlaySE
	mov	r1, r8
	ldrb	r0, [r1, #0x9]
	bl	RemoveScrollIndicatorArrowPair
	add	r0, r5, #0
	bl	Mailbox_ReturnToPlayerPC
	b	.L155
.L159:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	sub_81D1D04
	mov	r0, #0x1
	bl	sub_81D1D04
	ldrb	r0, [r4, #0xa]
	add	r1, r7, #0
	mov	r2, r8
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r1, r8
	ldrb	r0, [r1, #0x9]
	bl	RemoveScrollIndicatorArrowPair
	mov	r0, sl
	sub	r0, r0, #0x8
	add	r0, r0, r9
	ldr	r1, .L163
	str	r1, [r0]
.L155:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L164:
	.align	2, 0
.L163:
	.word	Mailbox_PrintWhatToDoWithPlayerMailText
.Lfe28:
	.size	 Mailbox_ProcessInput,.Lfe28-Mailbox_ProcessInput
	.align	2, 0
	.type	 Mailbox_PrintWhatToDoWithPlayerMailText,function
	.thumb_func
Mailbox_PrintWhatToDoWithPlayerMailText:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L166
	ldr	r2, .L166+0x4
	ldr	r1, .L166+0x8
	ldrh	r0, [r1]
	add	r0, r0, #0x6
	ldrh	r1, [r1, #0x2]
	add	r0, r0, r1
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, [r2]
	add	r1, r1, r0
	ldr	r0, .L166+0xc
	add	r1, r1, r0
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_81DB554
	ldr	r5, .L166+0x10
	ldr	r1, .L166+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L166+0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	DisplayItemMessageOnField
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	playerPCItemPageInfo
	.word	0x2872
	.word	gStringVar4
	.word	gText_WhatToDoWithVar1sMail
	.word	Mailbox_PrintMailOptions
.Lfe29:
	.size	 Mailbox_PrintWhatToDoWithPlayerMailText,.Lfe29-Mailbox_PrintWhatToDoWithPlayerMailText
	.align	2, 0
	.type	 Mailbox_ReturnToPlayerPC,function
	.thumb_func
Mailbox_ReturnToPlayerPC:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L169
	add	r4, r4, r0
	mov	r0, #0x0
	bl	sub_81D1D04
	mov	r0, #0x1
	bl	sub_81D1D04
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	bl	sub_81D1EC0
	add	r0, r5, #0
	bl	ReshowPlayerPC
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gTasks+0x8
.Lfe30:
	.size	 Mailbox_ReturnToPlayerPC,.Lfe30-Mailbox_ReturnToPlayerPC
	.align	2, 0
	.type	 Mailbox_PrintMailOptions,function
	.thumb_func
Mailbox_PrintMailOptions:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x2
	bl	sub_81D1C84
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r2, .L172
	add	r0, r4, #0
	mov	r1, #0x4
	bl	PrintMenuTable
	add	r0, r4, #0
	mov	r1, #0x4
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L172+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L172+0x8
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L173:
	.align	2, 0
.L172:
	.word	gMailboxMailOptions
	.word	gTasks
	.word	Mailbox_MailOptionsProcessInput
.Lfe31:
	.size	 Mailbox_PrintMailOptions,.Lfe31-Mailbox_PrintMailOptions
	.align	2, 0
	.type	 Mailbox_MailOptionsProcessInput,function
	.thumb_func
Mailbox_MailOptionsProcessInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	bl	ProcessMenuInput_other
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L175	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L178	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	Mailbox_Cancel
	b	.L175
.L178:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L180
	lsl	r1, r4, #0x3
	add	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r6, #0
	bl	_call_via_r1
.L175:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L181:
	.align	2, 0
.L180:
	.word	gMailboxMailOptions
.Lfe32:
	.size	 Mailbox_MailOptionsProcessInput,.Lfe32-Mailbox_MailOptionsProcessInput
	.align	2, 0
	.type	 Mailbox_DoMailRead,function
	.thumb_func
Mailbox_DoMailRead:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L183
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L183+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	gTasks
	.word	Mailbox_FadeAndReadMail
.Lfe33:
	.size	 Mailbox_DoMailRead,.Lfe33-Mailbox_DoMailRead
	.align	2, 0
	.type	 Mailbox_FadeAndReadMail,function
	.thumb_func
Mailbox_FadeAndReadMail:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L187
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L186	@cond_branch
	bl	sub_81D1EC0
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r2, .L187+0x4
	ldr	r1, .L187+0x8
	ldrh	r0, [r1]
	add	r0, r0, #0x6
	ldrh	r1, [r1, #0x2]
	add	r0, r0, r1
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L187+0xc
	add	r1, r1, r0
	ldr	r0, [r2]
	add	r0, r0, r1
	ldr	r1, .L187+0x10
	mov	r2, #0x1
	bl	ReadMail
	add	r0, r4, #0
	bl	DestroyTask
.L186:
	pop	{r4}
	pop	{r0}
	bx	r0
.L188:
	.align	2, 0
.L187:
	.word	gPaletteFade
	.word	gSaveBlock1Ptr
	.word	playerPCItemPageInfo
	.word	0x2860
	.word	Mailbox_ReturnToFieldFromReadMail
.Lfe34:
	.size	 Mailbox_FadeAndReadMail,.Lfe34-Mailbox_FadeAndReadMail
	.align	2, 0
	.type	 Mailbox_ReturnToFieldFromReadMail,function
	.thumb_func
Mailbox_ReturnToFieldFromReadMail:
	push	{lr}
	ldr	r0, .L190
	ldr	r1, .L190+0x4
	str	r1, [r0]
	ldr	r0, .L190+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L191:
	.align	2, 0
.L190:
	.word	gFieldCallback
	.word	pal_fill_for_maplights_or_black
	.word	CB2_ReturnToField
.Lfe35:
	.size	 Mailbox_ReturnToFieldFromReadMail,.Lfe35-Mailbox_ReturnToFieldFromReadMail
	.align	2, 0
	.type	 pal_fill_for_maplights_or_black,function
	.thumb_func
pal_fill_for_maplights_or_black:
	push	{r4, lr}
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L195
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L195+0x4
	ldrb	r0, [r0, #0x5]
	bl	sub_81D1C44
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L193	@cond_branch
	add	r0, r4, #0
	bl	Mailbox_DrawMailboxMenu
	b	.L194
.L196:
	.align	2, 0
.L195:
	.word	Mailbox_HandleReturnToProcessInput
	.word	playerPCItemPageInfo
.L193:
	add	r0, r4, #0
	bl	DestroyTask
.L194:
	bl	FadeInFromBlack
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 pal_fill_for_maplights_or_black,.Lfe36-pal_fill_for_maplights_or_black
	.align	2, 0
	.type	 Mailbox_HandleReturnToProcessInput,function
	.thumb_func
Mailbox_HandleReturnToProcessInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L198	@cond_branch
	ldr	r0, .L199
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L199+0x4
	str	r0, [r1]
.L198:
	pop	{r4}
	pop	{r0}
	bx	r0
.L200:
	.align	2, 0
.L199:
	.word	gTasks
	.word	Mailbox_ProcessInput
.Lfe37:
	.size	 Mailbox_HandleReturnToProcessInput,.Lfe37-Mailbox_HandleReturnToProcessInput
	.align	2, 0
	.type	 Mailbox_MoveToBag,function
	.thumb_func
Mailbox_MoveToBag:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L202
	ldr	r2, .L202+0x4
	bl	DisplayItemMessageOnField
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	gText_MessageWillBeLost
	.word	Mailbox_DrawYesNoBeforeMove
.Lfe38:
	.size	 Mailbox_MoveToBag,.Lfe38-Mailbox_MoveToBag
	.align	2, 0
	.type	 Mailbox_DrawYesNoBeforeMove,function
	.thumb_func
Mailbox_DrawYesNoBeforeMove:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	DisplayYesNoMenuDefaultYes
	ldr	r1, .L205
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L205+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L206:
	.align	2, 0
.L205:
	.word	gTasks
	.word	Mailbox_MoveToBagYesNoPrompt
.Lfe39:
	.size	 Mailbox_DrawYesNoBeforeMove,.Lfe39-Mailbox_DrawYesNoBeforeMove
	.align	2, 0
	.type	 Mailbox_MoveToBagYesNoPrompt,function
	.thumb_func
Mailbox_MoveToBagYesNoPrompt:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L210	@cond_branch
	cmp	r0, r1
	ble	.L208	@cond_branch
	cmp	r0, #0
	beq	.L209	@cond_branch
	cmp	r0, #0x1
	beq	.L211	@cond_branch
	b	.L208
.L209:
	add	r0, r4, #0
	bl	Mailbox_DoMailMoveToBag
	b	.L208
.L210:
	mov	r0, #0x5
	bl	PlaySE
.L211:
	add	r0, r4, #0
	bl	Mailbox_CancelMoveToBag
.L208:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 Mailbox_MoveToBagYesNoPrompt,.Lfe40-Mailbox_MoveToBagYesNoPrompt
	.align	2, 0
	.type	 Mailbox_DoMailMoveToBag,function
	.thumb_func
Mailbox_DoMailMoveToBag:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r2, .L220
	ldr	r4, .L220+0x4
	ldrh	r1, [r4]
	add	r1, r1, #0x6
	ldrh	r0, [r4, #0x2]
	add	r1, r1, r0
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L220+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldrh	r0, [r5, #0x20]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L217	@cond_branch
	ldr	r1, .L220+0xc
	ldr	r2, .L220+0x10
	add	r0, r6, #0
	bl	DisplayItemMessageOnField
	b	.L218
.L221:
	.align	2, 0
.L220:
	.word	gSaveBlock1Ptr
	.word	playerPCItemPageInfo
	.word	0x2860
	.word	gText_BagIsFull
	.word	Mailbox_Cancel
.L217:
	ldr	r1, .L222
	ldr	r2, .L222+0x4
	add	r0, r6, #0
	bl	DisplayItemMessageOnField
	add	r0, r5, #0
	bl	ClearMailStruct
	bl	Mailbox_UpdateMailList
	ldrb	r0, [r4, #0x5]
	sub	r0, r0, #0x1
	strb	r0, [r4, #0x5]
	ldrb	r1, [r4, #0x5]
	ldrb	r0, [r4, #0x4]
	ldrh	r2, [r4, #0x2]
	add	r0, r0, r2
	cmp	r1, r0
	bge	.L219	@cond_branch
	cmp	r2, #0
	beq	.L219	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r4, #0x2]
.L219:
	add	r0, r6, #0
	bl	ItemStorage_SetItemAndMailCount
.L218:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gText_MailToBagMessageErased
	.word	Mailbox_Cancel
.Lfe41:
	.size	 Mailbox_DoMailMoveToBag,.Lfe41-Mailbox_DoMailMoveToBag
	.align	2, 0
	.type	 Mailbox_CancelMoveToBag,function
	.thumb_func
Mailbox_CancelMoveToBag:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Mailbox_Cancel
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 Mailbox_CancelMoveToBag,.Lfe42-Mailbox_CancelMoveToBag
	.align	2, 0
	.type	 Mailbox_Give,function
	.thumb_func
Mailbox_Give:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L226	@cond_branch
	add	r0, r4, #0
	bl	Mailbox_NoPokemonForMail
	b	.L227
.L226:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L228
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L228+0x4
	str	r0, [r1]
.L227:
	pop	{r4}
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gTasks
	.word	Mailbox_DoGiveMailPokeMenu
.Lfe43:
	.size	 Mailbox_Give,.Lfe43-Mailbox_Give
	.align	2, 0
	.type	 Mailbox_DoGiveMailPokeMenu,function
	.thumb_func
Mailbox_DoGiveMailPokeMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L232
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L231	@cond_branch
	bl	sub_81D1EC0
	bl	CleanupOverworldWindowsAndTilemaps
	bl	ChooseMonToGiveMailFromMailbox
	add	r0, r4, #0
	bl	DestroyTask
.L231:
	pop	{r4}
	pop	{r0}
	bx	r0
.L233:
	.align	2, 0
.L232:
	.word	gPaletteFade
.Lfe44:
	.size	 Mailbox_DoGiveMailPokeMenu,.Lfe44-Mailbox_DoGiveMailPokeMenu
	.align	2, 0
	.globl	Mailbox_ReturnToMailListAfterDeposit
	.type	 Mailbox_ReturnToMailListAfterDeposit,function
	.thumb_func
Mailbox_ReturnToMailListAfterDeposit:
	push	{lr}
	ldr	r0, .L235
	ldr	r1, .L235+0x4
	str	r1, [r0]
	ldr	r0, .L235+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L236:
	.align	2, 0
.L235:
	.word	gFieldCallback
	.word	Mailbox_UpdateMailListAfterDeposit
	.word	CB2_ReturnToField
.Lfe45:
	.size	 Mailbox_ReturnToMailListAfterDeposit,.Lfe45-Mailbox_ReturnToMailListAfterDeposit
	.align	2, 0
	.type	 Mailbox_UpdateMailListAfterDeposit,function
	.thumb_func
Mailbox_UpdateMailListAfterDeposit:
	push	{r4, r5, r6, lr}
	ldr	r0, .L241
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L241+0x4
	ldrb	r4, [r5, #0x5]
	bl	GetMailboxMailCount
	strb	r0, [r5, #0x5]
	bl	Mailbox_UpdateMailList
	ldrb	r0, [r5, #0x5]
	cmp	r4, r0
	beq	.L238	@cond_branch
	ldrb	r1, [r5, #0x5]
	ldrb	r0, [r5, #0x4]
	ldrh	r2, [r5, #0x2]
	add	r0, r0, r2
	cmp	r1, r0
	bge	.L238	@cond_branch
	cmp	r2, #0
	beq	.L238	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r5, #0x2]
.L238:
	add	r0, r6, #0
	bl	ItemStorage_SetItemAndMailCount
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L241+0x4
	ldrb	r0, [r0, #0x5]
	bl	sub_81D1C44
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L239	@cond_branch
	add	r0, r6, #0
	bl	Mailbox_DrawMailboxMenu
	b	.L240
.L242:
	.align	2, 0
.L241:
	.word	Mailbox_HandleReturnToProcessInput
	.word	playerPCItemPageInfo
.L239:
	add	r0, r6, #0
	bl	DestroyTask
.L240:
	bl	FadeInFromBlack
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 Mailbox_UpdateMailListAfterDeposit,.Lfe46-Mailbox_UpdateMailListAfterDeposit
	.align	2, 0
	.type	 Mailbox_NoPokemonForMail,function
	.thumb_func
Mailbox_NoPokemonForMail:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L244
	ldr	r2, .L244+0x4
	bl	DisplayItemMessageOnField
	pop	{r0}
	bx	r0
.L245:
	.align	2, 0
.L244:
	.word	gText_NoPokemon
	.word	Mailbox_Cancel
.Lfe47:
	.size	 Mailbox_NoPokemonForMail,.Lfe47-Mailbox_NoPokemonForMail
	.align	2, 0
	.type	 Mailbox_Cancel,function
	.thumb_func
Mailbox_Cancel:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	bl	sub_81D1D04
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrame
	add	r0, r4, #0
	bl	Mailbox_DrawMailboxMenu
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L247
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L247+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L248:
	.align	2, 0
.L247:
	.word	gTasks
	.word	Mailbox_ProcessInput
.Lfe48:
	.size	 Mailbox_Cancel,.Lfe48-Mailbox_Cancel
	.align	2, 0
	.type	 sub_816BC14,function
	.thumb_func
sub_816BC14:
	push	{r4, lr}
	ldr	r4, .L250
	mov	r0, #0xce
	lsl	r0, r0, #0x3
	bl	AllocZeroed
	str	r0, [r4]
	mov	r1, #0xcc
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0xff
	mov	r2, #0x6
	bl	memset
	ldr	r0, [r4]
	ldr	r1, .L250+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L250+0x8
	add	r0, r0, r1
	mov	r1, #0x1
	neg	r1, r1
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L251:
	.align	2, 0
.L250:
	.word	gUnknown_0203BCC4
	.word	0x666
	.word	0x667
.Lfe49:
	.size	 sub_816BC14,.Lfe49-sub_816BC14
	.align	2, 0
	.type	 sub_816BC58,function
	.thumb_func
sub_816BC58:
	push	{r4, lr}
	mov	r4, #0x0
.L256:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	sub_816BCC4
	add	r4, r4, #0x1
	cmp	r4, #0x5
	bls	.L256	@cond_branch
	ldr	r0, .L258
	ldr	r0, [r0]
	bl	Free
	pop	{r4}
	pop	{r0}
	bx	r0
.L259:
	.align	2, 0
.L258:
	.word	gUnknown_0203BCC4
.Lfe50:
	.size	 sub_816BC58,.Lfe50-sub_816BC58
	.align	2, 0
	.type	 sub_816BC7C,function
	.thumb_func
sub_816BC7C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L262
	mov	r3, #0xcc
	lsl	r3, r3, #0x3
	add	r1, r2, r3
	ldr	r0, [r0]
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L261	@cond_branch
	lsl	r0, r2, #0x3
	ldr	r1, .L262+0x4
	add	r0, r0, r1
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r2, #0x85
	lsl	r2, r2, #0x2
	mov	r1, #0x0
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
.L261:
	ldrb	r0, [r4]
	pop	{r4}
	pop	{r1}
	bx	r1
.L263:
	.align	2, 0
.L262:
	.word	gUnknown_0203BCC4
	.word	gUnknown_085DFF5C
.Lfe51:
	.size	 sub_816BC7C,.Lfe51-sub_816BC7C
	.align	2, 0
	.type	 sub_816BCC4,function
	.thumb_func
sub_816BCC4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L266
	mov	r2, #0xcc
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	ldr	r1, [r1]
	add	r4, r1, r0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L265	@cond_branch
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0xff
	strb	r0, [r4]
.L265:
	pop	{r4}
	pop	{r0}
	bx	r0
.L267:
	.align	2, 0
.L266:
	.word	gUnknown_0203BCC4
.Lfe52:
	.size	 sub_816BCC4,.Lfe52-sub_816BCC4
	.align	2, 0
	.globl	ItemStorage_RefreshListMenu
	.type	 ItemStorage_RefreshListMenu,function
	.thumb_func
ItemStorage_RefreshListMenu:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	ldr	r0, .L274
	ldrb	r0, [r0, #0x5]
	sub	r0, r0, #0x1
	cmp	r6, r0
	bge	.L270	@cond_branch
	ldr	r5, .L274+0x4
.L272:
	lsl	r4, r6, #0x1
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	mov	r0, #0xcc
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L274+0x8
	ldr	r1, [r1]
	lsl	r2, r6, #0x2
	add	r1, r1, r2
	mov	r2, #0x93
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrh	r1, [r1]
	bl	CopyItemName_PlayerPC
	ldr	r0, [r5]
	lsl	r2, r6, #0x3
	add	r1, r0, r2
	add	r4, r0, r4
	str	r4, [r1]
	add	r0, r0, #0x4
	add	r0, r0, r2
	str	r6, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L274
	ldrb	r0, [r0, #0x5]
	sub	r0, r0, #0x1
	cmp	r6, r0
	blt	.L272	@cond_branch
.L270:
	ldr	r5, .L274+0x4
	lsl	r4, r6, #0x1
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	mov	r3, #0xcc
	lsl	r3, r3, #0x1
	add	r4, r4, r3
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L274+0xc
	bl	StringCopy
	ldr	r0, [r5]
	lsl	r2, r6, #0x3
	add	r1, r0, r2
	add	r4, r0, r4
	str	r4, [r1]
	add	r0, r0, #0x4
	add	r0, r0, r2
	mov	r1, #0x2
	neg	r1, r1
	str	r1, [r0]
	ldr	r4, .L274+0x10
	add	r1, r4, #0
	ldr	r0, .L274+0x14
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	mov	r0, #0x0
	bl	sub_816BC7C
	strb	r0, [r4, #0x10]
	ldr	r1, .L274
	ldrb	r0, [r1, #0x5]
	strh	r0, [r4, #0xc]
	ldr	r0, [r5]
	str	r0, [r4]
	ldrb	r0, [r1, #0x4]
	strh	r0, [r4, #0xe]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L275:
	.align	2, 0
.L274:
	.word	playerPCItemPageInfo
	.word	gUnknown_0203BCC4
	.word	gSaveBlock1Ptr
	.word	gText_Cancel2
	.word	gMultiuseListMenuTemplate
	.word	gUnknown_085DFF44
.Lfe53:
	.size	 ItemStorage_RefreshListMenu,.Lfe53-ItemStorage_RefreshListMenu
	.align	2, 0
	.type	 CopyItemName_PlayerPC,function
	.thumb_func
CopyItemName_PlayerPC:
	push	{lr}
	add	r2, r0, #0
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	add	r1, r2, #0
	bl	CopyItemName
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 CopyItemName_PlayerPC,.Lfe54-CopyItemName_PlayerPC
	.align	2, 0
	.type	 ItemStorage_MoveCursor,function
	.thumb_func
ItemStorage_MoveCursor:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L278	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L278:
	ldr	r0, .L282
	ldr	r0, [r0]
	ldr	r1, .L282+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L279	@cond_branch
	bl	sub_816C0C8
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L280	@cond_branch
	ldr	r0, .L282+0x8
	ldr	r0, [r0]
	lsl	r1, r4, #0x2
	add	r0, r0, r1
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	sub_816C060
	b	.L281
.L283:
	.align	2, 0
.L282:
	.word	gUnknown_0203BCC4
	.word	0x666
	.word	gSaveBlock1Ptr
.L280:
	ldr	r0, .L284
	bl	sub_816C060
.L281:
	add	r0, r4, #0
	bl	sub_816BEF0
.L279:
	pop	{r4}
	pop	{r0}
	bx	r0
.L285:
	.align	2, 0
.L284:
	.word	0xffff
.Lfe55:
	.size	 ItemStorage_MoveCursor,.Lfe55-ItemStorage_MoveCursor
	.align	2, 0
	.type	 fish4_goto_x5_or_x6,function
	.thumb_func
fish4_goto_x5_or_x6:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L287	@cond_branch
	ldr	r0, .L291
	ldr	r0, [r0]
	ldr	r1, .L291+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	cmp	r1, #0xff
	beq	.L288	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L289	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0xff
	bl	sub_816BFE0
	b	.L288
.L292:
	.align	2, 0
.L291:
	.word	gUnknown_0203BCC4
	.word	0x666
.L289:
	add	r0, r5, #0
	mov	r1, #0xff
	mov	r2, #0xff
	bl	sub_816BFE0
.L288:
	ldr	r0, .L293
	ldr	r1, .L293+0x4
	ldr	r1, [r1]
	lsl	r2, r4, #0x2
	add	r1, r1, r2
	ldr	r2, .L293+0x8
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L293+0xc
	ldr	r1, .L293+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x7
	add	r1, r4, #0
	mov	r2, #0x68
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x7
	add	r2, r4, #0
	bl	AddTextPrinterParameterized
.L287:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L294:
	.align	2, 0
.L293:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	0x49a
	.word	gStringVar4
	.word	gText_xVar1
.Lfe56:
	.size	 fish4_goto_x5_or_x6,.Lfe56-fish4_goto_x5_or_x6
	.align	2, 0
	.type	 sub_816BEF0,function
	.thumb_func
sub_816BEF0:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r1, r0, #0
	ldr	r0, .L299
	ldr	r0, [r0]
	ldr	r2, .L299+0x4
	add	r0, r0, r2
	ldrb	r5, [r0]
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L296	@cond_branch
	ldr	r0, .L299+0x8
	ldr	r0, [r0]
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetDescription
	b	.L298
.L300:
	.align	2, 0
.L299:
	.word	gUnknown_0203BCC4
	.word	0x661
	.word	gSaveBlock1Ptr
.L296:
	ldr	r0, .L301
	bl	ItemStorage_GetItemPcResponse
.L298:
	add	r4, r0, #0
	add	r0, r5, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	0xffff
.Lfe57:
	.size	 sub_816BEF0,.Lfe57-sub_816BEF0
	.align	2, 0
	.type	 ItemStorage_StartScrollIndicator,function
	.thumb_func
ItemStorage_StartScrollIndicator:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L305
	ldrb	r0, [r4, #0x9]
	cmp	r0, #0xff
	bne	.L304	@cond_branch
	ldrb	r0, [r4, #0x5]
	ldrb	r1, [r4, #0x4]
	sub	r0, r0, r1
	str	r0, [sp]
	ldr	r0, .L305+0x4
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0x2
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xb0
	mov	r2, #0xc
	mov	r3, #0x94
	bl	AddScrollIndicatorArrowPairParameterized
	strb	r0, [r4, #0x9]
.L304:
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L306:
	.align	2, 0
.L305:
	.word	playerPCItemPageInfo
	.word	0x13f8
.Lfe58:
	.size	 ItemStorage_StartScrollIndicator,.Lfe58-ItemStorage_StartScrollIndicator
	.align	2, 0
	.type	 ItemStorage_RemoveScrollIndicator,function
	.thumb_func
ItemStorage_RemoveScrollIndicator:
	push	{r4, lr}
	ldr	r4, .L309
	ldrb	r0, [r4, #0x9]
	cmp	r0, #0xff
	beq	.L308	@cond_branch
	bl	RemoveScrollIndicatorArrowPair
	mov	r0, #0xff
	strb	r0, [r4, #0x9]
.L308:
	pop	{r4}
	pop	{r0}
	bx	r0
.L310:
	.align	2, 0
.L309:
	.word	playerPCItemPageInfo
.Lfe59:
	.size	 ItemStorage_RemoveScrollIndicator,.Lfe59-ItemStorage_RemoveScrollIndicator
	.align	2, 0
	.type	 sub_816BFB8,function
	.thumb_func
sub_816BFB8:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	ListMenuGetYCoordForPrintingArrowCursor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	sub_816BFE0
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe60:
	.size	 sub_816BFB8,.Lfe60-sub_816BFB8
	.align	2, 0
	.type	 sub_816BFE0,function
	.thumb_func
sub_816BFE0:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L315
	ldr	r0, [r0]
	mov	r3, #0xcc
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	ldrb	r5, [r0]
	cmp	r1, #0xff
	bne	.L313	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	mov	r1, #0x1
	bl	GetMenuCursorDimensionByFont
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r4, [sp]
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x11
	mov	r2, #0x0
	add	r3, r6, #0
	bl	FillWindowPixelRect
	b	.L314
.L316:
	.align	2, 0
.L315:
	.word	gUnknown_0203BCC4
.L313:
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	ldr	r0, .L317
	str	r0, [sp, #0x8]
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	str	r0, [sp, #0xc]
	ldr	r0, .L317+0x4
	str	r0, [sp, #0x10]
	add	r0, r5, #0
	mov	r1, #0x1
	mov	r2, #0x0
	add	r3, r6, #0
	bl	AddTextPrinterParameterized4
.L314:
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	gUnknown_085DFF8C
	.word	gText_SelectorArrow2
.Lfe61:
	.size	 sub_816BFE0,.Lfe61-sub_816BFE0
	.align	2, 0
	.type	 sub_816C060,function
	.thumb_func
sub_816C060:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L322
	ldr	r0, [r0]
	ldr	r1, .L322+0x4
	add	r5, r0, r1
	ldrb	r0, [r5]
	cmp	r0, #0xff
	bne	.L320	@cond_branch
	ldr	r4, .L322+0x8
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	add	r0, r4, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	AddItemIconSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x40
	beq	.L320	@cond_branch
	strb	r2, [r5]
	ldr	r0, .L322+0xc
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	mov	r0, #0x18
	strh	r0, [r1, #0x24]
	mov	r0, #0x50
	strh	r0, [r1, #0x26]
.L320:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	gUnknown_0203BCC4
	.word	0x667
	.word	0x13f6
	.word	gSprites
.Lfe62:
	.size	 sub_816C060,.Lfe62-sub_816C060
	.align	2, 0
	.type	 sub_816C0C8,function
	.thumb_func
sub_816C0C8:
	push	{r4, r5, lr}
	ldr	r0, .L326
	ldr	r0, [r0]
	ldr	r1, .L326+0x4
	add	r5, r0, r1
	ldrb	r0, [r5]
	cmp	r0, #0xff
	beq	.L325	@cond_branch
	ldr	r4, .L326+0x8
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L326+0xc
	add	r0, r0, r1
	bl	DestroySprite
	mov	r0, #0xff
	strb	r0, [r5]
.L325:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L327:
	.align	2, 0
.L326:
	.word	gUnknown_0203BCC4
	.word	0x667
	.word	0x13f6
	.word	gSprites
.Lfe63:
	.size	 sub_816C0C8,.Lfe63-sub_816C0C8
	.align	2, 0
	.type	 sub_816C110,function
	.thumb_func
sub_816C110:
	push	{lr}
	add	sp, sp, #-0x4
	bl	CompactPCItems
	ldr	r0, .L329
	ldr	r0, [r0]
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldr	r2, .L329+0x4
	add	r3, r2, #0x1
	mov	r1, #0x8
	str	r1, [sp]
	mov	r1, #0x32
	bl	sub_812220C
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L330:
	.align	2, 0
.L329:
	.word	gSaveBlock1Ptr
	.word	playerPCItemPageInfo+0x4
.Lfe64:
	.size	 sub_816C110,.Lfe64-sub_816C110
	.align	2, 0
	.type	 sub_816C140,function
	.thumb_func
sub_816C140:
	push	{lr}
	ldr	r0, .L332
	sub	r1, r0, #0x2
	ldrb	r2, [r1, #0x4]
	ldrb	r3, [r1, #0x5]
	bl	sub_812225C
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	playerPCItemPageInfo+0x2
.Lfe65:
	.size	 sub_816C140,.Lfe65-sub_816C140
	.align	2, 0
	.type	 ItemStorage_ProcessWithdrawTossInput,function
	.thumb_func
ItemStorage_ProcessWithdrawTossInput:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L341
	add	r7, r0, r1
	mov	r4, #0x0
.L338:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	sub_816BC7C
	add	r4, r4, #0x1
	cmp	r4, #0x3
	bls	.L338	@cond_branch
	mov	r1, #0x6
	ldrsh	r0, [r7, r1]
	ldr	r5, .L341+0x4
	cmp	r0, #0
	bne	.L340	@cond_branch
	ldr	r5, .L341+0x8
.L340:
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x68
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	ldr	r4, .L341+0xc
	ldr	r0, [r4]
	ldr	r1, .L341+0x10
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	ldr	r0, [r4]
	ldr	r1, .L341+0x14
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	bl	sub_816C110
	bl	sub_816C140
	bl	ItemStorage_RefreshListMenu
	ldr	r0, .L341+0x18
	ldr	r2, .L341+0x1c
	ldrh	r1, [r2, #0x2]
	ldrh	r2, [r2]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r7, #0xa]
	bl	ItemStorage_StartScrollIndicator
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L341+0x20
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L341+0x24
	str	r1, [r0]
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L342:
	.align	2, 0
.L341:
	.word	gTasks+0x8
	.word	gText_TossItem
	.word	gText_WithdrawItem
	.word	gUnknown_0203BCC4
	.word	0x663
	.word	0x662
	.word	gMultiuseListMenuTemplate
	.word	playerPCItemPageInfo
	.word	gTasks
	.word	ItemStorage_ProcessInput
.Lfe66:
	.size	 ItemStorage_ProcessWithdrawTossInput,.Lfe66-ItemStorage_ProcessWithdrawTossInput
	.align	2, 0
	.type	 ItemStorage_GetItemPcResponse,function
	.thumb_func
ItemStorage_GetItemPcResponse:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r2, .L356
	add	r0, r1, r2
	cmp	r0, #0x8
	bhi	.L354	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L356+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L357:
	.align	2, 0
.L356:
	.word	-0xfff7
	.word	.L355
	.align	2, 0
	.align	2, 0
.L355:
	.word	.L353
	.word	.L352
	.word	.L351
	.word	.L350
	.word	.L349
	.word	.L348
	.word	.L347
	.word	.L346
	.word	.L345
.L345:
	ldr	r0, .L358
	b	.L344
.L359:
	.align	2, 0
.L358:
	.word	gText_GoBackPrevMenu
.L346:
	ldr	r0, .L360
	b	.L344
.L361:
	.align	2, 0
.L360:
	.word	gText_WithdrawHowManyItems
.L347:
	ldr	r0, .L362
	b	.L344
.L363:
	.align	2, 0
.L362:
	.word	gText_WithdrawXItems
.L348:
	ldr	r0, .L364
	b	.L344
.L365:
	.align	2, 0
.L364:
	.word	gText_TossHowManyVar1s
.L349:
	ldr	r0, .L366
	b	.L344
.L367:
	.align	2, 0
.L366:
	.word	gText_ThrewAwayVar2Var1s
.L350:
	ldr	r0, .L368
	b	.L344
.L369:
	.align	2, 0
.L368:
	.word	gText_NoRoomInBag
.L351:
	ldr	r0, .L370
	b	.L344
.L371:
	.align	2, 0
.L370:
	.word	gText_TooImportantToToss
.L352:
	ldr	r0, .L372
	b	.L344
.L373:
	.align	2, 0
.L372:
	.word	gText_ConfirmTossItems
.L353:
	ldr	r0, .L374
	b	.L344
.L375:
	.align	2, 0
.L374:
	.word	gText_MoveVar1Where
.L354:
	add	r0, r1, #0
	bl	ItemId_GetDescription
.L344:
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 ItemStorage_GetItemPcResponse,.Lfe67-ItemStorage_GetItemPcResponse
	.align	2, 0
	.type	 ItemStorage_PrintItemPcResponse,function
	.thumb_func
ItemStorage_PrintItemPcResponse:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	ldr	r0, .L377
	ldr	r0, [r0]
	ldr	r1, .L377+0x4
	add	r0, r0, r1
	ldrb	r5, [r0]
	add	r0, r5, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r4, .L377+0x8
	add	r0, r4, #0
	add	r1, r6, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L378:
	.align	2, 0
.L377:
	.word	gUnknown_0203BCC4
	.word	0x661
	.word	gStringVar4
.Lfe68:
	.size	 ItemStorage_PrintItemPcResponse,.Lfe68-ItemStorage_PrintItemPcResponse
	.align	2, 0
	.type	 ItemStorage_ProcessInput,function
	.thumb_func
ItemStorage_ProcessInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L388
	add	r4, r0, r1
	ldr	r0, .L388+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L380	@cond_branch
	ldrb	r0, [r4, #0xa]
	ldr	r1, .L388+0x8
	sub	r4, r1, #0x2
	add	r2, r4, #0
	bl	ListMenuGetScrollAndRow
	ldrh	r1, [r4, #0x2]
	ldrh	r0, [r4]
	add	r1, r1, r0
	ldrb	r0, [r4, #0x5]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L382	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	ItemStorage_ItemSwapChoosePrompt
	b	.L382
.L389:
	.align	2, 0
.L388:
	.word	gTasks+0x8
	.word	gMain
	.word	playerPCItemPageInfo+0x2
.L380:
	ldrb	r0, [r4, #0xa]
	bl	ListMenu_ProcessInput
	add	r6, r0, #0
	ldrb	r0, [r4, #0xa]
	ldr	r1, .L390
	sub	r2, r1, #0x2
	bl	ListMenuGetScrollAndRow
	mov	r0, #0x2
	neg	r0, r0
	cmp	r6, r0
	beq	.L385	@cond_branch
	add	r0, r0, #0x1
	cmp	r6, r0
	bne	.L386	@cond_branch
	b	.L382
.L391:
	.align	2, 0
.L390:
	.word	playerPCItemPageInfo+0x2
.L385:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	ItemStorage_GoBackToPlayerPCMenu
	b	.L382
.L386:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	ItemStorage_DoItemAction
.L382:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe69:
	.size	 ItemStorage_ProcessInput,.Lfe69-ItemStorage_ProcessInput
	.align	2, 0
	.type	 ItemStorage_GoBackToPlayerPCMenu_InitStorage,function
	.thumb_func
ItemStorage_GoBackToPlayerPCMenu_InitStorage:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L396
	add	r5, r0, r1
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L393	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawDialogueFrame
	mov	r1, #0x6
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L394	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	InitItemStorageMenu
	b	.L395
.L397:
	.align	2, 0
.L396:
	.word	gTasks+0x8
.L394:
	add	r0, r4, #0
	mov	r1, #0x2
	bl	InitItemStorageMenu
.L395:
	ldr	r0, .L398
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L398+0x4
	str	r0, [r1]
.L393:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L399:
	.align	2, 0
.L398:
	.word	gTasks
	.word	ItemStorageMenuProcessInput
.Lfe70:
	.size	 ItemStorage_GoBackToPlayerPCMenu_InitStorage,.Lfe70-ItemStorage_GoBackToPlayerPCMenu_InitStorage
	.align	2, 0
	.type	 ItemStorage_GoBackToPlayerPCMenu,function
	.thumb_func
ItemStorage_GoBackToPlayerPCMenu:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r6, .L401
	add	r5, r4, r6
	bl	sub_816C0C8
	bl	ItemStorage_RemoveScrollIndicator
	ldrb	r0, [r5, #0xa]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldr	r0, .L401+0x4
	ldr	r0, [r0]
	mov	r1, #0xcd
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x7
	bl	sub_81223B0
	bl	sub_816BC58
	sub	r6, r6, #0x8
	add	r4, r4, r6
	ldr	r0, .L401+0x8
	str	r0, [r4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L402:
	.align	2, 0
.L401:
	.word	gTasks+0x8
	.word	gUnknown_0203BCC4
	.word	ItemStorage_GoBackToPlayerPCMenu_InitStorage
.Lfe71:
	.size	 ItemStorage_GoBackToPlayerPCMenu,.Lfe71-ItemStorage_GoBackToPlayerPCMenu
	.align	2, 0
	.type	 ItemStorage_ItemSwapChoosePrompt,function
	.thumb_func
ItemStorage_ItemSwapChoosePrompt:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L404
	mov	r8, r0
	add	r1, r4, #0
	add	r1, r1, r8
	mov	r9, r1
	ldrb	r0, [r1, #0xa]
	mov	r1, #0x10
	mov	r2, #0x1
	bl	ListMenuSetUnkIndicatorsStructField
	ldr	r6, .L404+0x4
	ldr	r2, [r6]
	ldr	r1, .L404+0x8
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x2]
	add	r0, r0, r1
	ldr	r5, .L404+0xc
	add	r2, r2, r5
	strb	r0, [r2]
	mov	r1, r9
	ldrb	r0, [r1, #0xa]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_816BFB8
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0]
	bl	sub_816C690
	ldr	r0, .L404+0x10
	ldr	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	mov	r0, #0x93
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1]
	ldr	r1, .L404+0x14
	bl	CopyItemName
	ldr	r0, .L404+0x18
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	mov	r1, #0x8
	neg	r1, r1
	add	r8, r8, r1
	add	r4, r4, r8
	ldr	r0, .L404+0x1c
	str	r0, [r4]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L405:
	.align	2, 0
.L404:
	.word	gTasks+0x8
	.word	gUnknown_0203BCC4
	.word	playerPCItemPageInfo
	.word	0x666
	.word	gSaveBlock1Ptr
	.word	gStringVar1
	.word	0xfff7
	.word	sub_816C4FC
.Lfe72:
	.size	 ItemStorage_ItemSwapChoosePrompt,.Lfe72-ItemStorage_ItemSwapChoosePrompt
	.align	2, 0
	.type	 sub_816C4FC,function
	.thumb_func
sub_816C4FC:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L416
	add	r4, r0, r1
	ldr	r7, .L416+0x4
	ldrh	r1, [r7, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L407	@cond_branch
	ldrb	r0, [r4, #0xa]
	ldr	r1, .L416+0x8
	sub	r2, r1, #0x2
	bl	ListMenuGetScrollAndRow
	b	.L415
.L417:
	.align	2, 0
.L416:
	.word	gTasks+0x8
	.word	gMain
	.word	playerPCItemPageInfo+0x2
.L407:
	ldrb	r0, [r4, #0xa]
	bl	ListMenu_ProcessInput
	add	r6, r0, #0
	ldrb	r0, [r4, #0xa]
	ldr	r1, .L418
	sub	r4, r1, #0x2
	add	r2, r4, #0
	bl	ListMenuGetScrollAndRow
	ldr	r0, .L418+0x4
	ldr	r0, [r0]
	mov	r1, #0xcd
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x7
	mov	r2, #0x0
	bl	sub_81223FC
	ldrb	r0, [r4]
	bl	sub_816C690
	mov	r0, #0x2
	neg	r0, r0
	cmp	r6, r0
	beq	.L410	@cond_branch
	add	r0, r0, #0x1
	cmp	r6, r0
	bne	.L413	@cond_branch
	b	.L406
.L419:
	.align	2, 0
.L418:
	.word	playerPCItemPageInfo+0x2
	.word	gUnknown_0203BCC4
.L410:
	ldrh	r1, [r7, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L411	@cond_branch
.L415:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	ItemStorage_DoItemSwap
	b	.L406
.L411:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	ItemStorage_DoItemSwap
	b	.L406
.L413:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	ItemStorage_DoItemSwap
.L406:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 sub_816C4FC,.Lfe73-sub_816C4FC
	.align	2, 0
	.type	 ItemStorage_DoItemSwap,function
	.thumb_func
ItemStorage_DoItemSwap:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L427
	add	r0, r0, r1
	mov	r8, r0
	ldr	r4, .L427+0x4
	ldrh	r0, [r4]
	ldrh	r1, [r4, #0x2]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r0, #0x5
	bl	PlaySE
	mov	r2, r8
	ldrb	r0, [r2, #0xa]
	add	r1, r4, #0x2
	add	r2, r4, #0
	bl	DestroyListMenuTask
	cmp	r5, #0
	bne	.L421	@cond_branch
	ldr	r1, .L427+0x8
	ldr	r0, [r1]
	ldr	r2, .L427+0xc
	add	r0, r0, r2
	ldrb	r2, [r0]
	add	r4, r1, #0
	cmp	r2, r6
	beq	.L425	@cond_branch
	sub	r0, r6, #0x1
	cmp	r2, r0
	beq	.L421	@cond_branch
	ldr	r0, .L427+0x10
	ldr	r0, [r0]
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	add	r1, r2, #0
	add	r2, r6, #0
	bl	MoveItemSlotInList
	bl	ItemStorage_RefreshListMenu
.L421:
	ldr	r0, .L427+0x8
	ldr	r1, [r0]
	ldr	r2, .L427+0xc
	add	r1, r1, r2
	ldrb	r1, [r1]
	add	r4, r0, #0
	cmp	r1, r6
	bcs	.L425	@cond_branch
	ldr	r1, .L427+0x4
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
.L425:
	ldr	r0, [r4]
	mov	r1, #0xcd
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x7
	mov	r2, #0x1
	bl	sub_81223FC
	ldr	r0, [r4]
	ldr	r2, .L427+0xc
	add	r0, r0, r2
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, .L427+0x14
	ldr	r2, .L427+0x4
	ldrh	r1, [r2, #0x2]
	ldrh	r2, [r2]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1, #0xa]
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L427+0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L427+0x1c
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L428:
	.align	2, 0
.L427:
	.word	gTasks+0x8
	.word	playerPCItemPageInfo
	.word	gUnknown_0203BCC4
	.word	0x666
	.word	gSaveBlock1Ptr
	.word	gMultiuseListMenuTemplate
	.word	gTasks
	.word	ItemStorage_ProcessInput
.Lfe74:
	.size	 ItemStorage_DoItemSwap,.Lfe74-ItemStorage_DoItemSwap
	.align	2, 0
	.type	 sub_816C690,function
	.thumb_func
sub_816C690:
	push	{lr}
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	ldr	r0, .L430
	ldr	r0, [r0]
	mov	r1, #0xcd
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	lsr	r3, r3, #0x4
	mov	r1, #0x80
	lsl	r1, r1, #0xd
	add	r3, r3, r1
	lsr	r3, r3, #0x10
	mov	r1, #0x7
	mov	r2, #0x80
	bl	sub_8122448
	pop	{r0}
	bx	r0
.L431:
	.align	2, 0
.L430:
	.word	gUnknown_0203BCC4
.Lfe75:
	.size	 sub_816C690,.Lfe75-sub_816C690
	.align	2, 0
	.type	 sub_816C6BC,function
	.thumb_func
sub_816C6BC:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	ldr	r5, [sp, #0x1c]
	ldr	r3, [sp, #0x20]
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L433
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L433+0x4
	ldr	r1, .L433+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x30
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L434:
	.align	2, 0
.L433:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_xVar1
.Lfe76:
	.size	 sub_816C6BC,.Lfe76-sub_816C6BC
	.align	2, 0
	.type	 ItemStorage_DoItemAction,function
	.thumb_func
ItemStorage_DoItemAction:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L440
	add	r6, r0, r1
	ldr	r1, .L440+0x4
	ldrh	r0, [r1, #0x2]
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	ItemStorage_RemoveScrollIndicator
	mov	r0, #0x1
	strh	r0, [r6, #0x4]
	mov	r1, #0x6
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L436	@cond_branch
	ldr	r0, .L440+0x8
	ldr	r1, [r0]
	lsl	r0, r4, #0x2
	add	r1, r1, r0
	ldr	r2, .L440+0xc
	add	r0, r1, r2
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L437	@cond_branch
	add	r0, r5, #0
	bl	ItemStorage_DoItemWithdraw
	b	.L435
.L441:
	.align	2, 0
.L440:
	.word	gTasks+0x8
	.word	playerPCItemPageInfo
	.word	gSaveBlock1Ptr
	.word	0x49a
.L437:
	mov	r2, #0x93
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrh	r0, [r0]
	ldr	r1, .L442
	bl	CopyItemName
	ldr	r0, .L442+0x4
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	b	.L438
.L443:
	.align	2, 0
.L442:
	.word	gStringVar1
	.word	0xfffe
.L436:
	ldr	r0, .L444
	ldr	r1, [r0]
	lsl	r0, r4, #0x2
	add	r1, r1, r0
	ldr	r2, .L444+0x4
	add	r0, r1, r2
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L439	@cond_branch
	add	r0, r5, #0
	bl	ItemStorage_DoItemToss
	b	.L435
.L445:
	.align	2, 0
.L444:
	.word	gSaveBlock1Ptr
	.word	0x49a
.L439:
	mov	r2, #0x93
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrh	r0, [r0]
	ldr	r1, .L446
	bl	CopyItemName
	ldr	r0, .L446+0x4
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
.L438:
	mov	r0, #0x4
	bl	sub_816BC7C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x4]
	mov	r2, #0x1
	str	r2, [sp]
	mov	r2, #0x3
	str	r2, [sp, #0x4]
	mov	r2, #0x2
	mov	r3, #0x8
	bl	sub_816C6BC
	ldr	r1, .L446+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L446+0xc
	str	r1, [r0]
.L435:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L447:
	.align	2, 0
.L446:
	.word	gStringVar1
	.word	0xfffc
	.word	gTasks
	.word	ItemStorage_HandleQuantityRolling
.Lfe77:
	.size	 ItemStorage_DoItemAction,.Lfe77-ItemStorage_DoItemAction
	.align	2, 0
	.type	 ItemStorage_HandleQuantityRolling,function
	.thumb_func
ItemStorage_HandleQuantityRolling:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r9, r5
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L456
	add	r6, r0, r1
	ldr	r0, .L456+0x4
	ldrh	r2, [r0, #0x2]
	ldrh	r0, [r0]
	add	r2, r2, r0
	lsl	r2, r2, #0x10
	add	r0, r6, #0x4
	ldr	r1, .L456+0x8
	mov	r8, r1
	ldr	r1, [r1]
	lsr	r7, r2, #0xe
	add	r1, r1, r7
	ldr	r2, .L456+0xc
	add	r1, r1, r2
	ldrh	r1, [r1]
	bl	AdjustQuantityAccordingToDPadInput
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bne	.L449	@cond_branch
	mov	r0, #0x4
	bl	sub_816BC7C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x4]
	str	r4, [sp]
	mov	r2, #0x3
	str	r2, [sp, #0x4]
	mov	r2, #0x2
	mov	r3, #0x8
	bl	sub_816C6BC
	b	.L450
.L457:
	.align	2, 0
.L456:
	.word	gTasks+0x8
	.word	playerPCItemPageInfo
	.word	gSaveBlock1Ptr
	.word	0x49a
.L449:
	ldr	r0, .L458
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L451	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x4
	bl	sub_816BCC4
	mov	r3, #0x6
	ldrsh	r0, [r6, r3]
	cmp	r0, #0
	bne	.L452	@cond_branch
	add	r0, r5, #0
	bl	ItemStorage_DoItemWithdraw
	b	.L450
.L459:
	.align	2, 0
.L458:
	.word	gMain
.L452:
	add	r0, r5, #0
	bl	ItemStorage_DoItemToss
	b	.L450
.L451:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L450	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x4
	bl	sub_816BCC4
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r7
	mov	r2, #0x93
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	ldrh	r0, [r0]
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	mov	r0, r9
	bl	ItemStorage_StartScrollIndicatorAndProcessInput
.L450:
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 ItemStorage_HandleQuantityRolling,.Lfe78-ItemStorage_HandleQuantityRolling
	.align	2, 0
	.type	 ItemStorage_DoItemWithdraw,function
	.thumb_func
ItemStorage_DoItemWithdraw:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r6, r1, #0x3
	ldr	r0, .L464
	mov	r8, r0
	add	r4, r6, r0
	ldr	r0, .L464+0x4
	ldrh	r1, [r0, #0x2]
	ldrh	r0, [r0]
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	ldr	r7, .L464+0x8
	ldr	r0, [r7]
	lsr	r5, r1, #0xe
	add	r0, r0, r5
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldrh	r1, [r4, #0x4]
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L461	@cond_branch
	ldr	r0, [r7]
	add	r0, r0, r5
	mov	r2, #0x93
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	ldrh	r0, [r0]
	ldr	r1, .L464+0xc
	bl	CopyItemName
	ldr	r0, .L464+0x10
	mov	r2, #0x4
	ldrsh	r1, [r4, r2]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L464+0x14
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L464+0x18
	b	.L463
.L465:
	.align	2, 0
.L464:
	.word	gTasks+0x8
	.word	playerPCItemPageInfo
	.word	gSaveBlock1Ptr
	.word	gStringVar1
	.word	gStringVar2
	.word	0xfffd
	.word	ItemStorage_HandleRemoveItem
.L461:
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	ldr	r0, .L466
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L466+0x4
.L463:
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L467:
	.align	2, 0
.L466:
	.word	0xfffa
	.word	ItemStorage_WaitPressHandleResumeProcessInput
.Lfe79:
	.size	 ItemStorage_DoItemWithdraw,.Lfe79-ItemStorage_DoItemWithdraw
	.align	2, 0
	.type	 ItemStorage_DoItemToss,function
	.thumb_func
ItemStorage_DoItemToss:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	mov	r8, r0
	ldr	r0, .L471
	mov	r9, r0
	mov	r7, r8
	add	r7, r7, r9
	ldr	r0, .L471+0x4
	ldrh	r1, [r0, #0x2]
	ldrh	r0, [r0]
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	ldr	r6, .L471+0x8
	ldr	r0, [r6]
	lsr	r4, r1, #0xe
	add	r0, r0, r4
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetImportance
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L469	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, r4
	mov	r2, #0x93
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	ldrh	r0, [r0]
	ldr	r1, .L471+0xc
	bl	CopyItemName
	ldr	r0, .L471+0x10
	mov	r2, #0x4
	ldrsh	r1, [r7, r2]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L471+0x14
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	ldr	r1, .L471+0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x85
	lsl	r0, r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0xe
	str	r0, [sp, #0x8]
	ldr	r0, .L471+0x1c
	str	r0, [sp, #0xc]
	add	r0, r5, #0
	mov	r2, #0x1
	mov	r3, #0x0
	bl	CreateYesNoMenuWithCallbacks
	b	.L470
.L472:
	.align	2, 0
.L471:
	.word	gTasks+0x8
	.word	playerPCItemPageInfo
	.word	gSaveBlock1Ptr
	.word	gStringVar1
	.word	gStringVar2
	.word	0xfff8
	.word	gUnknown_085DFF84
	.word	ResumeFromWithdrawYesNoFuncList
.L469:
	mov	r0, #0x0
	strh	r0, [r7, #0x4]
	ldr	r0, .L473
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	mov	r0, r9
	sub	r0, r0, #0x8
	add	r0, r0, r8
	ldr	r1, .L473+0x4
	str	r1, [r0]
.L470:
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L474:
	.align	2, 0
.L473:
	.word	0xfff9
	.word	ItemStorage_WaitPressHandleResumeProcessInput
.Lfe80:
	.size	 ItemStorage_DoItemToss,.Lfe80-ItemStorage_DoItemToss
	.align	2, 0
	.type	 ItemStorage_ResumeInputFromYesToss,function
	.thumb_func
ItemStorage_ResumeInputFromYesToss:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L476
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	ldr	r1, .L476+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L476+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L477:
	.align	2, 0
.L476:
	.word	0xfffb
	.word	gTasks
	.word	ItemStorage_HandleRemoveItem
.Lfe81:
	.size	 ItemStorage_ResumeInputFromYesToss,.Lfe81-ItemStorage_ResumeInputFromYesToss
	.align	2, 0
	.type	 ItemStorage_ResumeInputFromNoToss,function
	.thumb_func
ItemStorage_ResumeInputFromNoToss:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L479
	ldr	r2, [r0]
	ldr	r1, .L479+0x4
	ldrh	r0, [r1, #0x2]
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	mov	r0, #0x93
	lsl	r0, r0, #0x3
	add	r2, r2, r0
	ldrh	r0, [r2]
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	add	r0, r4, #0
	bl	ItemStorage_StartScrollIndicatorAndProcessInput
	pop	{r4}
	pop	{r0}
	bx	r0
.L480:
	.align	2, 0
.L479:
	.word	gSaveBlock1Ptr
	.word	playerPCItemPageInfo
.Lfe82:
	.size	 ItemStorage_ResumeInputFromNoToss,.Lfe82-ItemStorage_ResumeInputFromNoToss
	.align	2, 0
	.type	 ItemStorage_HandleRemoveItem,function
	.thumb_func
ItemStorage_HandleRemoveItem:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L483
	add	r5, r0, r1
	ldr	r0, .L483+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L482	@cond_branch
	ldr	r4, .L483+0x8
	ldrb	r0, [r4, #0x2]
	ldrb	r1, [r4]
	add	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x4]
	bl	RemovePCItem
	ldrb	r0, [r5, #0xa]
	add	r1, r4, #0x2
	add	r2, r4, #0
	bl	DestroyListMenuTask
	bl	sub_816C110
	bl	sub_816C140
	bl	ItemStorage_RefreshListMenu
	ldr	r0, .L483+0xc
	ldrh	r1, [r4, #0x2]
	ldrh	r2, [r4]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	add	r0, r6, #0
	bl	ItemStorage_StartScrollIndicatorAndProcessInput
.L482:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L484:
	.align	2, 0
.L483:
	.word	gTasks+0x8
	.word	gMain
	.word	playerPCItemPageInfo
	.word	gMultiuseListMenuTemplate
.Lfe83:
	.size	 ItemStorage_HandleRemoveItem,.Lfe83-ItemStorage_HandleRemoveItem
	.align	2, 0
	.type	 ItemStorage_WaitPressHandleResumeProcessInput,function
	.thumb_func
ItemStorage_WaitPressHandleResumeProcessInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L487
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L486	@cond_branch
	ldr	r0, .L487+0x4
	ldr	r2, [r0]
	ldr	r1, .L487+0x8
	ldrh	r0, [r1, #0x2]
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	mov	r0, #0x93
	lsl	r0, r0, #0x3
	add	r2, r2, r0
	ldrh	r0, [r2]
	bl	ItemStorage_GetItemPcResponse
	bl	ItemStorage_PrintItemPcResponse
	add	r0, r4, #0
	bl	ItemStorage_StartScrollIndicatorAndProcessInput
.L486:
	pop	{r4}
	pop	{r0}
	bx	r0
.L488:
	.align	2, 0
.L487:
	.word	gMain
	.word	gSaveBlock1Ptr
	.word	playerPCItemPageInfo
.Lfe84:
	.size	 ItemStorage_WaitPressHandleResumeProcessInput,.Lfe84-ItemStorage_WaitPressHandleResumeProcessInput
	.align	2, 0
	.type	 ItemStorage_StartScrollIndicatorAndProcessInput,function
	.thumb_func
ItemStorage_StartScrollIndicatorAndProcessInput:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ItemStorage_StartScrollIndicator
	ldr	r1, .L490
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L490+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L491:
	.align	2, 0
.L490:
	.word	gTasks
	.word	ItemStorage_ProcessInput
.Lfe85:
	.size	 ItemStorage_StartScrollIndicatorAndProcessInput,.Lfe85-ItemStorage_StartScrollIndicatorAndProcessInput
.text
	.align	2, 0

