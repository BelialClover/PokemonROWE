@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	SetUpReflection
	.type	 SetUpReflection,function
	.thumb_func
SetUpReflection:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r5, r2, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x20
	ldrsh	r1, [r4, r0]
	mov	r0, #0x22
	ldrsh	r2, [r4, r0]
	add	r0, r4, #0
	mov	r3, #0x98
	bl	CreateCopySpriteAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L4
	add	r7, r1, r0
	ldr	r0, .L4+0x4
	str	r0, [r7, #0x1c]
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xc
	orr	r1, r1, r0
	strb	r1, [r7, #0x5]
	ldr	r2, .L4+0x8
	lsr	r0, r1, #0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	mov	r2, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r7, #0x5]
	mov	r1, #0x3f
	add	r1, r1, r7
	mov	r8, r1
	ldrb	r0, [r1]
	mov	r1, #0x40
	orr	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1]
	ldr	r0, .L4+0xc
	str	r0, [r7, #0x8]
	add	r0, r7, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r0, .L4+0x10
	str	r0, [r7, #0x10]
	mov	r1, r8
	ldrb	r0, [r1]
	mov	r1, #0x8
	orr	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1]
	add	r2, r7, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r4, #0x2e]
	strh	r0, [r7, #0x2e]
	ldrb	r0, [r6, #0x8]
	strh	r0, [r7, #0x30]
	strh	r5, [r7, #0x3c]
	add	r0, r6, #0
	add	r1, r7, #0
	bl	LoadObjectReflectionPalette
	cmp	r5, #0
	bne	.L3	@cond_branch
	ldrb	r0, [r7, #0x1]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r7, #0x1]
.L3:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gSprites
	.word	UpdateObjectReflectionSprite
	.word	gReflectionEffectPaletteMap
	.word	gDummySpriteAnimTable
	.word	gDummySpriteAffineAnimTable
.Lfe1:
	.size	 SetUpReflection,.Lfe1-SetUpReflection
	.align	2, 0
	.type	 GetReflectionVerticalOffset,function
	.thumb_func
GetReflectionVerticalOffset:
	push	{lr}
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrh	r0, [r0, #0xa]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetReflectionVerticalOffset,.Lfe2-GetReflectionVerticalOffset
	.section .rodata
	.align	1, 0
.LC5:
	.short	0xc
	.short	0x1c
	.short	0x2c
.text
	.align	2, 0
	.type	 LoadObjectReflectionPalette,function
	.thumb_func
LoadObjectReflectionPalette:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L11
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
	ldrb	r0, [r5, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrb	r1, [r0, #0xc]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L8	@cond_branch
	ldrb	r0, [r5, #0x1f]
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L9	@cond_branch
	ldrb	r0, [r5, #0x1e]
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L8	@cond_branch
.L9:
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x32]
	ldrb	r1, [r4, #0x5]
	lsr	r1, r1, #0x4
	add	r0, r5, #0
	bl	LoadObjectHighBridgeReflectionPalette
	b	.L10
.L12:
	.align	2, 0
.L11:
	.word	.LC5
.L8:
	ldrb	r1, [r4, #0x5]
	lsr	r1, r1, #0x4
	add	r0, r5, #0
	bl	LoadObjectRegularReflectionPalette
.L10:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 LoadObjectReflectionPalette,.Lfe3-LoadObjectReflectionPalette
	.align	2, 0
	.type	 LoadObjectRegularReflectionPalette,function
	.thumb_func
LoadObjectRegularReflectionPalette:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r2, r0, #0
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L19
	cmp	r1, r0
	beq	.L14	@cond_branch
	ldrb	r0, [r2, #0xc]
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L15	@cond_branch
	ldrh	r0, [r2, #0x2]
	add	r1, r4, #0
	bl	LoadPlayerObjectReflectionPalette
	b	.L16
.L20:
	.align	2, 0
.L19:
	.word	0x11ff
.L15:
	cmp	r1, #0xa
	bne	.L17	@cond_branch
	ldrh	r0, [r2, #0x2]
	add	r1, r4, #0
	bl	LoadSpecialObjectReflectionPalette
	b	.L16
.L17:
	add	r0, r4, #0
	bl	GetObjectPaletteTag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	PatchObjectPalette
.L16:
	add	r0, r4, #0
	bl	UpdateSpritePaletteWithWeather
.L14:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 LoadObjectRegularReflectionPalette,.Lfe4-LoadObjectRegularReflectionPalette
	.align	2, 0
	.type	 LoadObjectHighBridgeReflectionPalette,function
	.thumb_func
LoadObjectHighBridgeReflectionPalette:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r2, r0, #0
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L23
	cmp	r1, r0
	beq	.L22	@cond_branch
	add	r0, r1, #0
	add	r1, r4, #0
	bl	PatchObjectPalette
	add	r0, r4, #0
	bl	UpdateSpritePaletteWithWeather
.L22:
	pop	{r4}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	0x11ff
.Lfe5:
	.size	 LoadObjectHighBridgeReflectionPalette,.Lfe5-LoadObjectHighBridgeReflectionPalette
	.align	2, 0
	.type	 UpdateObjectReflectionSprite,function
	.thumb_func
UpdateObjectReflectionSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r4, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L32
	add	r7, r0, r1
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L32+0x4
	add	r5, r0, r1
	ldr	r0, [r7]
	ldr	r1, .L32+0x8
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L27	@cond_branch
	ldrb	r1, [r7, #0x8]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	beq	.L26	@cond_branch
.L27:
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	b	.L28
.L33:
	.align	2, 0
.L32:
	.word	gObjectEvents
	.word	gSprites
	.word	0x20001
.L26:
	ldr	r1, .L34
	ldrb	r0, [r5, #0x5]
	lsr	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x4
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	ldrb	r1, [r5, #0x1]
	lsr	r1, r1, #0x6
	lsl	r1, r1, #0x6
	ldrb	r2, [r4, #0x1]
	mov	r3, #0x3f
	add	r0, r3, #0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r5, #0x3]
	lsr	r0, r0, #0x6
	lsl	r0, r0, #0x6
	ldrb	r2, [r4, #0x3]
	add	r1, r3, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x3]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	mov	r2, #0x10
	orr	r0, r0, r2
	lsl	r0, r0, #0x1
	sub	r2, r2, #0x4f
	mov	r9, r2
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x3]
	ldrh	r1, [r5, #0x4]
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x16
	ldrh	r2, [r4, #0x4]
	ldr	r0, .L34+0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r4, #0x4]
	ldr	r0, [r5, #0x18]
	str	r0, [r4, #0x18]
	add	r0, r5, #0
	add	r0, r0, #0x42
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1a
	add	r2, r4, #0
	add	r2, r2, #0x42
	and	r3, r3, r0
	ldrb	r1, [r2]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r2]
	mov	r0, #0x3e
	add	r0, r0, r5
	mov	r8, r0
	ldrb	r0, [r0]
	add	r6, r4, #0
	add	r6, r6, #0x3e
	mov	r1, #0x4
	and	r1, r1, r0
	ldrb	r2, [r6]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r4, #0x20]
	add	r0, r7, #0
	bl	GetReflectionVerticalOffset
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	ldrh	r1, [r4, #0x32]
	add	r1, r1, r0
	strh	r1, [r4, #0x22]
	add	r0, r5, #0
	add	r0, r0, #0x28
	ldrb	r1, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x28
	strb	r1, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x29
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x29
	strb	r0, [r1]
	ldrh	r0, [r5, #0x24]
	strh	r0, [r4, #0x24]
	ldrh	r0, [r5, #0x26]
	neg	r0, r0
	strh	r0, [r4, #0x26]
	mov	r2, r8
	ldrb	r1, [r2]
	mov	r0, #0x2
	and	r0, r0, r1
	ldrb	r1, [r6]
	mov	r2, #0x3
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r6]
	ldrb	r0, [r7, #0x3]
	lsl	r0, r0, #0x1c
	cmp	r0, #0
	bge	.L29	@cond_branch
	mov	r0, #0x4
	orr	r2, r2, r0
	strb	r2, [r6]
.L29:
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L28	@cond_branch
	ldrb	r0, [r4, #0x3]
	mov	r2, r9
	and	r2, r2, r0
	strb	r2, [r4, #0x3]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	mov	r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L28	@cond_branch
	mov	r1, #0x2
	add	r0, r2, #0
	orr	r0, r0, r1
	strb	r0, [r4, #0x3]
.L28:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L35:
	.align	2, 0
.L34:
	.word	gReflectionEffectPaletteMap
	.word	-0x400
.Lfe6:
	.size	 UpdateObjectReflectionSprite,.Lfe6-UpdateObjectReflectionSprite
	.align	2, 0
	.globl	CreateWarpArrowSprite
	.type	 CreateWarpArrowSprite,function
	.thumb_func
CreateWarpArrowSprite:
	push	{r4, lr}
	ldr	r0, .L38
	ldr	r0, [r0, #0x20]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	cmp	r0, #0x40
	beq	.L37	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L38+0x4
	add	r1, r1, r0
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1]
.L37:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L39:
	.align	2, 0
.L38:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe7:
	.size	 CreateWarpArrowSprite,.Lfe7-CreateWarpArrowSprite
	.align	2, 0
	.globl	SetSpriteInvisible
	.type	 SetSpriteInvisible,function
	.thumb_func
SetSpriteInvisible:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L41
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	bx	lr
.L42:
	.align	2, 0
.L41:
	.word	gSprites
.Lfe8:
	.size	 SetSpriteInvisible,.Lfe8-SetSpriteInvisible
	.align	2, 0
	.globl	ShowWarpArrowSprite
	.type	 ShowWarpArrowSprite,function
	.thumb_func
ShowWarpArrowSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r6, r3, #0x10
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L46
	add	r2, r0, r1
	add	r0, r2, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L45	@cond_branch
	mov	r0, #0x2e
	ldrsh	r1, [r2, r0]
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L45	@cond_branch
	mov	r0, #0x30
	ldrsh	r1, [r2, r0]
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	beq	.L44	@cond_branch
.L45:
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r2, sp
	add	r3, r4, #0
	bl	SetSpritePosToMapCoords
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L46
	add	r2, r0, r1
	mov	r0, sp
	ldrh	r0, [r0]
	add	r0, r0, #0x8
	strh	r0, [r2, #0x20]
	ldrh	r0, [r4]
	add	r0, r0, #0x8
	strh	r0, [r2, #0x22]
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	strh	r7, [r2, #0x2e]
	strh	r6, [r2, #0x30]
	mov	r1, r8
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	StartSpriteAnim
.L44:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	gSprites
.Lfe9:
	.size	 ShowWarpArrowSprite,.Lfe9-ShowWarpArrowSprite
	.section .rodata
	.type	 sShadowEffectTemplateIds,object
sShadowEffectTemplateIds:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 sShadowEffectTemplateIds,4
	.globl	gShadowVerticalOffsets
	.align	1, 0
	.type	 gShadowVerticalOffsets,object
gShadowVerticalOffsets:
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x10
	.size	 gShadowVerticalOffsets,8
.text
	.align	2, 0
	.globl	FldEff_Shadow
	.type	 FldEff_Shadow,function
	.thumb_func
FldEff_Shadow:
	push	{r4, r5, lr}
	ldr	r5, .L50
	ldrb	r0, [r5]
	ldrb	r1, [r5, #0x4]
	ldrb	r2, [r5, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L50+0x4
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r4, r0, #0
	ldr	r2, .L50+0x8
	ldr	r1, .L50+0xc
	ldrb	r0, [r4, #0xc]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x94
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L49	@cond_branch
	ldr	r0, .L50+0x10
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldr	r0, [r5]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r5, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r5, #0x8]
	strh	r0, [r2, #0x32]
	ldrh	r1, [r4, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	ldr	r3, .L50+0x14
	ldrb	r0, [r4, #0xc]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	sub	r1, r1, r0
	strh	r1, [r2, #0x34]
.L49:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L51:
	.align	2, 0
.L50:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	sShadowEffectTemplateIds
	.word	gSprites
	.word	gShadowVerticalOffsets
.Lfe10:
	.size	 FldEff_Shadow,.Lfe10-FldEff_Shadow
	.align	2, 0
	.globl	UpdateShadowFieldEffect
	.type	 UpdateShadowFieldEffect,function
	.thumb_func
UpdateShadowFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r5, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L53	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x3
	bl	FieldEffectStop
	b	.L54
.L53:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L57
	add	r4, r0, r1
	ldrb	r0, [r4, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L57+0x4
	add	r1, r1, r0
	ldrb	r0, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r0
	ldrb	r3, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r5, #0x5]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x34]
	ldrh	r1, [r1, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
	ldr	r0, [r4]
	ldr	r1, .L57+0x8
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L56	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsPokeGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L56	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L56	@cond_branch
	ldrb	r0, [r4, #0x1f]
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L56	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsReflective
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L56	@cond_branch
	ldrb	r0, [r4, #0x1f]
	bl	MetatileBehavior_IsReflective
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L54	@cond_branch
.L56:
	add	r0, r5, #0
	mov	r1, #0x3
	bl	FieldEffectStop
.L54:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	gObjectEvents
	.word	gSprites
	.word	0x400001
.Lfe11:
	.size	 UpdateShadowFieldEffect,.Lfe11-UpdateShadowFieldEffect
	.align	2, 0
	.globl	FldEff_TallGrass
	.type	 FldEff_TallGrass,function
	.thumb_func
FldEff_TallGrass:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L62
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L62+0x4
	ldr	r0, [r0, #0x10]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L60	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L62+0x8
	add	r3, r0, r1
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r3, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x5]
	ldr	r0, [r5, #0x8]
	strh	r0, [r3, #0x2e]
	ldr	r0, [r5]
	strh	r0, [r3, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r3, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r3, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r3, #0x36]
	ldr	r0, [r5, #0x18]
	strh	r0, [r3, #0x38]
	ldr	r0, [r5, #0x1c]
	cmp	r0, #0
	beq	.L60	@cond_branch
	add	r0, r3, #0
	mov	r1, #0x4
	bl	SeekSpriteAnim
.L60:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L63:
	.align	2, 0
.L62:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe12:
	.size	 FldEff_TallGrass,.Lfe12-FldEff_TallGrass
	.align	2, 0
	.globl	UpdateTallGrassFieldEffect
	.type	 UpdateTallGrassFieldEffect,function
	.thumb_func
UpdateTallGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x38]
	lsr	r4, r0, #0x8
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r3, .L72
	ldrb	r1, [r3]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L65	@cond_branch
	ldr	r0, .L72+0x4
	ldr	r2, [r0]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, r4
	bne	.L66	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r2, r0]
	cmp	r0, r7
	beq	.L65	@cond_branch
.L66:
	ldr	r1, [r3, #0x4]
	ldrh	r0, [r5, #0x30]
	sub	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r1, [r3, #0x8]
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r1, [r2, #0x5]
	lsl	r1, r1, #0x8
	ldrb	r0, [r2, #0x4]
	orr	r0, r0, r1
	strh	r0, [r5, #0x38]
.L65:
	ldrh	r0, [r5, #0x34]
	lsr	r1, r0, #0x8
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrh	r0, [r5, #0x36]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r2, #0x30
	ldrsh	r0, [r5, r2]
	mov	r2, #0x32
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, r8
	add	r1, r4, #0
	add	r2, r7, #0
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L68	@cond_branch
	add	r0, r6, #0
	bl	MetatileBehavior_IsTallGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L68	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L67	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L67	@cond_branch
.L68:
	add	r0, r5, #0
	mov	r1, #0x4
	bl	FieldEffectStop
	b	.L69
.L73:
	.align	2, 0
.L72:
	.word	gCamera
	.word	gSaveBlock1Ptr
.L67:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L74
	add	r2, r0, r1
	ldr	r0, [r2, #0x10]
	ldr	r1, [r5, #0x30]
	cmp	r0, r1
	beq	.L70	@cond_branch
	ldr	r0, [r2, #0x14]
	cmp	r0, r1
	beq	.L70	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L70:
	mov	r6, #0x0
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L71	@cond_branch
	mov	r6, #0x4
.L71:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r1, [r5, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	add	r2, r6, #0
	bl	sub_81561FC
.L69:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L75:
	.align	2, 0
.L74:
	.word	gObjectEvents
.Lfe13:
	.size	 UpdateTallGrassFieldEffect,.Lfe13-UpdateTallGrassFieldEffect
	.align	2, 0
	.globl	FldEff_JumpTallGrass
	.type	 FldEff_JumpTallGrass,function
	.thumb_func
FldEff_JumpTallGrass:
	push	{r4, lr}
	ldr	r4, .L78
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L78+0x4
	ldr	r0, [r0, #0x28]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L77	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L78+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xc
	strh	r0, [r2, #0x30]
.L77:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L79:
	.align	2, 0
.L78:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe14:
	.size	 FldEff_JumpTallGrass,.Lfe14-FldEff_JumpTallGrass
	.align	2, 0
	.globl	FindTallGrassFieldEffectSpriteId
	.type	 FindTallGrassFieldEffectSpriteId,function
	.thumb_func
FindTallGrassFieldEffectSpriteId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r4, [sp, #0x18]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r5, #0x0
	ldr	r0, .L89
	mov	r8, r0
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
.L84:
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	mov	r1, r8
	add	r2, r0, r1
	add	r0, r2, #0
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L83	@cond_branch
	ldr	r1, [r2, #0x1c]
	ldr	r0, .L89+0x4
	cmp	r1, r0
	bne	.L83	@cond_branch
	mov	r1, #0x30
	ldrsh	r0, [r2, r1]
	cmp	r3, r0
	bne	.L83	@cond_branch
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	cmp	r4, r0
	bne	.L83	@cond_branch
	ldrh	r1, [r2, #0x34]
	lsr	r0, r1, #0x8
	cmp	ip, r0
	bne	.L83	@cond_branch
	mov	r0, #0xff
	and	r0, r0, r1
	cmp	r7, r0
	bne	.L83	@cond_branch
	mov	r1, #0x36
	ldrsh	r0, [r2, r1]
	cmp	r6, r0
	bne	.L83	@cond_branch
	add	r0, r5, #0
	b	.L88
.L90:
	.align	2, 0
.L89:
	.word	gSprites
	.word	UpdateTallGrassFieldEffect
.L83:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3f
	bls	.L84	@cond_branch
	mov	r0, #0x40
.L88:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 FindTallGrassFieldEffectSpriteId,.Lfe15-FindTallGrassFieldEffectSpriteId
	.align	2, 0
	.globl	FldEff_LongGrass
	.type	 FldEff_LongGrass,function
	.thumb_func
FldEff_LongGrass:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L94
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L94+0x4
	ldr	r0, [r0, #0x3c]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L92	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L94+0x8
	add	r4, r0, r1
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r5, #0x8]
	bl	ZCoordToPriority
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	ldr	r0, [r5, #0x8]
	strh	r0, [r4, #0x2e]
	ldr	r0, [r5]
	strh	r0, [r4, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r4, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r4, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r4, #0x36]
	ldr	r0, [r5, #0x18]
	strh	r0, [r4, #0x38]
	ldr	r0, [r5, #0x1c]
	cmp	r0, #0
	beq	.L92	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x6
	bl	SeekSpriteAnim
.L92:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L95:
	.align	2, 0
.L94:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe16:
	.size	 FldEff_LongGrass,.Lfe16-FldEff_LongGrass
	.align	2, 0
	.globl	UpdateLongGrassFieldEffect
	.type	 UpdateLongGrassFieldEffect,function
	.thumb_func
UpdateLongGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x38]
	lsr	r7, r0, #0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r3, .L103
	ldrb	r1, [r3]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L97	@cond_branch
	ldr	r0, .L103+0x4
	ldr	r2, [r0]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, r7
	bne	.L98	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r2, r0]
	cmp	r0, r6
	beq	.L97	@cond_branch
.L98:
	ldr	r1, [r3, #0x4]
	ldrh	r0, [r5, #0x30]
	sub	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r1, [r3, #0x8]
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r1, [r2, #0x5]
	lsl	r1, r1, #0x8
	ldrb	r0, [r2, #0x4]
	orr	r0, r0, r1
	strh	r0, [r5, #0x38]
.L97:
	ldrh	r0, [r5, #0x34]
	lsr	r1, r0, #0x8
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldrh	r0, [r5, #0x36]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r2, #0x30
	ldrsh	r0, [r5, r2]
	mov	r2, #0x32
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L100	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsLongGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L100	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L99	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L99	@cond_branch
.L100:
	add	r0, r5, #0
	mov	r1, #0x11
	bl	FieldEffectStop
	b	.L101
.L104:
	.align	2, 0
.L103:
	.word	gCamera
	.word	gSaveBlock1Ptr
.L99:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L105
	add	r2, r0, r1
	ldr	r0, [r2, #0x10]
	ldr	r1, [r5, #0x30]
	cmp	r0, r1
	beq	.L102	@cond_branch
	ldr	r0, [r2, #0x14]
	cmp	r0, r1
	beq	.L102	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L102:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r1, [r5, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	mov	r2, #0x0
	bl	sub_81561FC
.L101:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	gObjectEvents
.Lfe17:
	.size	 UpdateLongGrassFieldEffect,.Lfe17-UpdateLongGrassFieldEffect
	.align	2, 0
	.globl	FldEff_JumpLongGrass
	.type	 FldEff_JumpLongGrass,function
	.thumb_func
FldEff_JumpLongGrass:
	push	{r4, lr}
	ldr	r4, .L109
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L109+0x4
	ldr	r0, [r0, #0x40]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L108	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L109+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0x12
	strh	r0, [r2, #0x30]
.L108:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L110:
	.align	2, 0
.L109:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe18:
	.size	 FldEff_JumpLongGrass,.Lfe18-FldEff_JumpLongGrass
	.align	2, 0
	.globl	FldEff_ShortGrass
	.type	 FldEff_ShortGrass,function
	.thumb_func
FldEff_ShortGrass:
	push	{r4, r5, r6, lr}
	ldr	r6, .L113
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L113+0x4
	add	r5, r1, r0
	ldr	r0, .L113+0x8
	ldr	r0, [r0, #0x78]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L112	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r4, .L113+0xc
	add	r2, r2, r4
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r6]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x32]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2, #0x34]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x22]
	strh	r0, [r2, #0x36]
.L112:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L114:
	.align	2, 0
.L113:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe19:
	.size	 FldEff_ShortGrass,.Lfe19-FldEff_ShortGrass
	.align	2, 0
	.globl	UpdateShortGrassFieldEffect
	.type	 UpdateShortGrassFieldEffect,function
	.thumb_func
UpdateShortGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L117	@cond_branch
	ldr	r5, .L122
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	blt	.L116	@cond_branch
.L117:
	add	r0, r4, #0
	mov	r1, #0x29
	bl	FieldEffectStop
	b	.L118
.L123:
	.align	2, 0
.L122:
	.word	gObjectEvents
.L116:
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r8, r0
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L124
	add	r6, r0, r1
	ldrh	r5, [r6, #0x22]
	ldrh	r7, [r6, #0x20]
	mov	r0, #0x20
	ldrsh	r1, [r6, r0]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L120	@cond_branch
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	beq	.L119	@cond_branch
.L120:
	strh	r7, [r4, #0x34]
	strh	r5, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L119	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L119:
	strh	r7, [r4, #0x20]
	strh	r5, [r4, #0x22]
	mov	r1, r8
	ldrh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x26]
	add	r0, r6, #0
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	ldrb	r0, [r6, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	add	r0, r6, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1f
	add	r0, r4, #0
	bl	UpdateObjectEventSpriteVisibility
.L118:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	gSprites
.Lfe20:
	.size	 UpdateShortGrassFieldEffect,.Lfe20-UpdateShortGrassFieldEffect
	.align	2, 0
	.globl	FldEff_SandFootprints
	.type	 FldEff_SandFootprints,function
	.thumb_func
FldEff_SandFootprints:
	push	{r4, lr}
	ldr	r4, .L128
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L128+0x4
	ldr	r0, [r0, #0x2c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L127	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L128+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0xd
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L127:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L129:
	.align	2, 0
.L128:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe21:
	.size	 FldEff_SandFootprints,.Lfe21-FldEff_SandFootprints
	.align	2, 0
	.globl	FldEff_DeepSandFootprints
	.type	 FldEff_DeepSandFootprints,function
	.thumb_func
FldEff_DeepSandFootprints:
	push	{r4, r5, lr}
	ldr	r4, .L132
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L132+0x4
	ldr	r0, [r0, #0x5c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r5, r1, #0
	cmp	r1, #0x40
	beq	.L131	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L132+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x18
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L131:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L133:
	.align	2, 0
.L132:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe22:
	.size	 FldEff_DeepSandFootprints,.Lfe22-FldEff_DeepSandFootprints
	.align	2, 0
	.globl	FldEff_BikeTireTracks
	.type	 FldEff_BikeTireTracks,function
	.thumb_func
FldEff_BikeTireTracks:
	push	{r4, r5, lr}
	ldr	r4, .L136
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L136+0x4
	ldr	r0, [r0, #0x6c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r5, r1, #0
	cmp	r1, #0x40
	beq	.L135	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L136+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x23
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L135:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L137:
	.align	2, 0
.L136:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe23:
	.size	 FldEff_BikeTireTracks,.Lfe23-FldEff_BikeTireTracks
	.globl	gFadeFootprintsTireTracksFuncs
	.section .rodata
	.align	2, 0
	.type	 gFadeFootprintsTireTracksFuncs,object
gFadeFootprintsTireTracksFuncs:
	.word	FadeFootprintsTireTracks_Step0
	.word	FadeFootprintsTireTracks_Step1
	.size	 gFadeFootprintsTireTracksFuncs,8
.text
	.align	2, 0
	.globl	UpdateFootprintsTireTracksFieldEffect
	.type	 UpdateFootprintsTireTracksFieldEffect,function
	.thumb_func
UpdateFootprintsTireTracksFieldEffect:
	push	{lr}
	ldr	r2, .L139
	mov	r3, #0x2e
	ldrsh	r1, [r0, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L140:
	.align	2, 0
.L139:
	.word	gFadeFootprintsTireTracksFuncs
.Lfe24:
	.size	 UpdateFootprintsTireTracksFieldEffect,.Lfe24-UpdateFootprintsTireTracksFieldEffect
	.align	2, 0
	.type	 FadeFootprintsTireTracks_Step0,function
	.thumb_func
FadeFootprintsTireTracks_Step0:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x28
	ble	.L142	@cond_branch
	mov	r0, #0x1
	strh	r0, [r1, #0x2e]
.L142:
	add	r0, r1, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 FadeFootprintsTireTracks_Step0,.Lfe25-FadeFootprintsTireTracks_Step0
	.align	2, 0
	.type	 FadeFootprintsTireTracks_Step1,function
	.thumb_func
FadeFootprintsTireTracks_Step1:
	push	{r4, lr}
	add	r4, r0, #0
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x30]
	ldrb	r1, [r3]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1f
	add	r0, r4, #0
	bl	UpdateObjectEventSpriteVisibility
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x38
	ble	.L144	@cond_branch
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
.L144:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 FadeFootprintsTireTracks_Step1,.Lfe26-FadeFootprintsTireTracks_Step1
	.align	2, 0
	.globl	FldEff_Splash
	.type	 FldEff_Splash,function
	.thumb_func
FldEff_Splash:
	push	{r4, r5, r6, lr}
	ldr	r6, .L147
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L147+0x4
	add	r5, r1, r0
	ldr	r0, .L147+0x8
	ldr	r0, [r0, #0x34]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x40
	beq	.L146	@cond_branch
	ldrb	r0, [r5, #0x5]
	bl	GetObjectEventGraphicsInfo
	lsl	r3, r4, #0x4
	add	r3, r3, r4
	lsl	r3, r3, #0x2
	ldr	r4, .L147+0xc
	add	r3, r3, r4
	mov	r1, #0x3e
	add	r1, r1, r3
	mov	ip, r1
	ldrb	r1, [r1]
	mov	r2, #0x2
	orr	r1, r1, r2
	mov	r2, ip
	strb	r1, [r2]
	ldrb	r2, [r5, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r4, [r3, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r2
	strb	r1, [r3, #0x5]
	ldr	r1, [r6]
	strh	r1, [r3, #0x2e]
	ldr	r1, [r6, #0x4]
	strh	r1, [r3, #0x30]
	ldr	r1, [r6, #0x8]
	strh	r1, [r3, #0x32]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	sub	r0, r0, #0x4
	strh	r0, [r3, #0x26]
	mov	r0, #0x46
	bl	PlaySE
.L146:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L148:
	.align	2, 0
.L147:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe27:
	.size	 FldEff_Splash,.Lfe27-FldEff_Splash
	.align	2, 0
	.globl	UpdateSplashFieldEffect
	.type	 UpdateSplashFieldEffect,function
	.thumb_func
UpdateSplashFieldEffect:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L151	@cond_branch
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L150	@cond_branch
.L151:
	add	r0, r4, #0
	mov	r1, #0xf
	bl	FieldEffectStop
	b	.L152
.L150:
	ldr	r3, .L153
	ldr	r2, .L153+0x4
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x20]
	strh	r0, [r4, #0x20]
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x22]
	strh	r0, [r4, #0x22]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L152:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L154:
	.align	2, 0
.L153:
	.word	gSprites
	.word	gObjectEvents
.Lfe28:
	.size	 UpdateSplashFieldEffect,.Lfe28-UpdateSplashFieldEffect
	.align	2, 0
	.globl	FldEff_JumpSmallSplash
	.type	 FldEff_JumpSmallSplash,function
	.thumb_func
FldEff_JumpSmallSplash:
	push	{r4, lr}
	ldr	r4, .L157
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L157+0x4
	ldr	r0, [r0, #0x38]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L156	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L157+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0x10
	strh	r0, [r2, #0x30]
.L156:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L158:
	.align	2, 0
.L157:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe29:
	.size	 FldEff_JumpSmallSplash,.Lfe29-FldEff_JumpSmallSplash
	.align	2, 0
	.globl	FldEff_JumpBigSplash
	.type	 FldEff_JumpBigSplash,function
	.thumb_func
FldEff_JumpBigSplash:
	push	{r4, lr}
	ldr	r4, .L161
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L161+0x4
	ldr	r0, [r0, #0x30]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L160	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L161+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xe
	strh	r0, [r2, #0x30]
.L160:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L162:
	.align	2, 0
.L161:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe30:
	.size	 FldEff_JumpBigSplash,.Lfe30-FldEff_JumpBigSplash
	.align	2, 0
	.globl	FldEff_FeetInFlowingWater
	.type	 FldEff_FeetInFlowingWater,function
	.thumb_func
FldEff_FeetInFlowingWater:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L165
	ldrb	r0, [r7]
	ldrb	r1, [r7, #0x4]
	ldrb	r2, [r7, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L165+0x4
	add	r6, r1, r0
	ldr	r0, .L165+0x8
	ldr	r0, [r0, #0x34]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x40
	beq	.L164	@cond_branch
	ldrb	r0, [r6, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r4, r0, #0
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r3, .L165+0xc
	add	r0, r0, r3
	ldr	r1, .L165+0x10
	str	r1, [r0, #0x1c]
	add	r5, r0, #0
	add	r5, r5, #0x3e
	ldrb	r1, [r5]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r5]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r1, [r7]
	strh	r1, [r0, #0x2e]
	ldr	r1, [r7, #0x4]
	strh	r1, [r0, #0x30]
	ldr	r1, [r7, #0x8]
	strh	r1, [r0, #0x32]
	ldr	r1, .L165+0x14
	strh	r1, [r0, #0x34]
	mov	r1, #0x1
	neg	r1, r1
	strh	r1, [r0, #0x36]
	ldrh	r1, [r4, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	sub	r1, r1, #0x4
	strh	r1, [r0, #0x26]
	mov	r1, #0x1
	bl	StartSpriteAnim
.L164:
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L166:
	.align	2, 0
.L165:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	UpdateFeetInFlowingWaterFieldEffect
	.word	0xffff
.Lfe31:
	.size	 FldEff_FeetInFlowingWater,.Lfe31-FldEff_FeetInFlowingWater
	.align	2, 0
	.type	 UpdateFeetInFlowingWaterFieldEffect,function
	.thumb_func
UpdateFeetInFlowingWaterFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L169	@cond_branch
	ldr	r2, .L173
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r2
	ldrb	r0, [r5, #0x2]
	lsl	r0, r0, #0x1c
	cmp	r0, #0
	blt	.L168	@cond_branch
.L169:
	add	r0, r4, #0
	mov	r1, #0x22
	bl	FieldEffectStop
	b	.L170
.L174:
	.align	2, 0
.L173:
	.word	gObjectEvents
.L168:
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L175
	add	r0, r0, r1
	ldrh	r1, [r0, #0x20]
	strh	r1, [r4, #0x20]
	ldrh	r1, [r0, #0x22]
	strh	r1, [r4, #0x22]
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldr	r1, [r5, #0x10]
	ldr	r0, [r4, #0x34]
	cmp	r1, r0
	beq	.L170	@cond_branch
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4, #0x34]
	ldrh	r0, [r5, #0x12]
	strh	r0, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L170	@cond_branch
	mov	r0, #0x46
	bl	PlaySE
.L170:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	gSprites
.Lfe32:
	.size	 UpdateFeetInFlowingWaterFieldEffect,.Lfe32-UpdateFeetInFlowingWaterFieldEffect
	.align	2, 0
	.globl	FldEff_Ripple
	.type	 FldEff_Ripple,function
	.thumb_func
FldEff_Ripple:
	push	{r4, lr}
	ldr	r0, .L179
	ldr	r0, [r0, #0x14]
	ldr	r4, .L179+0x4
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L178	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L179+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x5
	strh	r0, [r2, #0x2e]
.L178:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L180:
	.align	2, 0
.L179:
	.word	gFieldEffectObjectTemplatePointers
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe33:
	.size	 FldEff_Ripple,.Lfe33-FldEff_Ripple
	.align	2, 0
	.globl	FldEff_HotSpringsWater
	.type	 FldEff_HotSpringsWater,function
	.thumb_func
FldEff_HotSpringsWater:
	push	{r4, r5, r6, lr}
	ldr	r6, .L183
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L183+0x4
	add	r5, r1, r0
	ldr	r0, .L183+0x8
	ldr	r0, [r0, #0x7c]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L182	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r4, .L183+0xc
	add	r2, r2, r4
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r6]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x32]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2, #0x34]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x22]
	strh	r0, [r2, #0x36]
.L182:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L184:
	.align	2, 0
.L183:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe34:
	.size	 FldEff_HotSpringsWater,.Lfe34-FldEff_HotSpringsWater
	.align	2, 0
	.globl	UpdateHotSpringsWaterFieldEffect
	.type	 UpdateHotSpringsWaterFieldEffect,function
	.thumb_func
UpdateHotSpringsWaterFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L187	@cond_branch
	ldr	r5, .L189
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	blt	.L186	@cond_branch
.L187:
	add	r0, r4, #0
	mov	r1, #0x2a
	bl	FieldEffectStop
	b	.L188
.L190:
	.align	2, 0
.L189:
	.word	gObjectEvents
.L186:
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, sp
	ldrb	r2, [r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r2, [r1, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L191
	add	r1, r1, r2
	ldrh	r2, [r1, #0x20]
	strh	r2, [r4, #0x20]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	ldrh	r2, [r1, #0x22]
	add	r0, r0, r2
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x22]
	add	r1, r1, #0x43
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L188:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	gSprites
.Lfe35:
	.size	 UpdateHotSpringsWaterFieldEffect,.Lfe35-UpdateHotSpringsWaterFieldEffect
	.align	2, 0
	.globl	FldEff_ShakingGrass
	.type	 FldEff_ShakingGrass,function
	.thumb_func
FldEff_ShakingGrass:
	push	{r4, r5, lr}
	ldr	r4, .L195
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L195+0x4
	ldr	r0, [r0, #0x44]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	cmp	r0, #0x40
	beq	.L194	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L195+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x13
	strh	r0, [r2, #0x2e]
.L194:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L196:
	.align	2, 0
.L195:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe36:
	.size	 FldEff_ShakingGrass,.Lfe36-FldEff_ShakingGrass
	.align	2, 0
	.globl	FldEff_ShakingGrass2
	.type	 FldEff_ShakingGrass2,function
	.thumb_func
FldEff_ShakingGrass2:
	push	{r4, r5, lr}
	ldr	r4, .L199
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L199+0x4
	ldr	r0, [r0, #0x48]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	cmp	r0, #0x40
	beq	.L198	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L199+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x14
	strh	r0, [r2, #0x2e]
.L198:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L200:
	.align	2, 0
.L199:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe37:
	.size	 FldEff_ShakingGrass2,.Lfe37-FldEff_ShakingGrass2
	.align	2, 0
	.globl	FldEff_UnusedSand
	.type	 FldEff_UnusedSand,function
	.thumb_func
FldEff_UnusedSand:
	push	{r4, r5, lr}
	ldr	r4, .L203
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L203+0x4
	ldr	r0, [r0, #0x4c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	cmp	r0, #0x40
	beq	.L202	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L203+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x15
	strh	r0, [r2, #0x2e]
.L202:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L204:
	.align	2, 0
.L203:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe38:
	.size	 FldEff_UnusedSand,.Lfe38-FldEff_UnusedSand
	.align	2, 0
	.globl	FldEff_WaterSurfacing
	.type	 FldEff_WaterSurfacing,function
	.thumb_func
FldEff_WaterSurfacing:
	push	{r4, r5, lr}
	ldr	r4, .L207
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L207+0x4
	ldr	r0, [r0, #0x50]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	cmp	r0, #0x40
	beq	.L206	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L207+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x16
	strh	r0, [r2, #0x2e]
.L206:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L208:
	.align	2, 0
.L207:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe39:
	.size	 FldEff_WaterSurfacing,.Lfe39-FldEff_WaterSurfacing
	.align	2, 0
	.globl	StartAshFieldEffect
	.type	 StartAshFieldEffect,function
	.thumb_func
StartAshFieldEffect:
	push	{r4, lr}
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r4, .L210
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r0, [r4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	str	r1, [r4, #0x4]
	mov	r0, #0x52
	str	r0, [r4, #0x8]
	mov	r0, #0x1
	str	r0, [r4, #0xc]
	str	r2, [r4, #0x10]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	str	r3, [r4, #0x14]
	mov	r0, #0x7
	bl	FieldEffectStart
	pop	{r4}
	pop	{r0}
	bx	r0
.L211:
	.align	2, 0
.L210:
	.word	gFieldEffectArguments
.Lfe40:
	.size	 StartAshFieldEffect,.Lfe40-StartAshFieldEffect
	.align	2, 0
	.globl	FldEff_Ash
	.type	 FldEff_Ash,function
	.thumb_func
FldEff_Ash:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L214
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L214+0x4
	ldr	r0, [r0, #0x18]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r5, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L213	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L214+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r5]
	strh	r0, [r2, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r2, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r2, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r2, #0x36]
.L213:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L215:
	.align	2, 0
.L214:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe41:
	.size	 FldEff_Ash,.Lfe41-FldEff_Ash
	.globl	gAshFieldEffectFuncs
	.section .rodata
	.align	2, 0
	.type	 gAshFieldEffectFuncs,object
gAshFieldEffectFuncs:
	.word	UpdateAshFieldEffect_Step0
	.word	UpdateAshFieldEffect_Step1
	.word	UpdateAshFieldEffect_Step2
	.size	 gAshFieldEffectFuncs,12
.text
	.align	2, 0
	.globl	UpdateAshFieldEffect
	.type	 UpdateAshFieldEffect,function
	.thumb_func
UpdateAshFieldEffect:
	push	{lr}
	ldr	r2, .L217
	mov	r3, #0x2e
	ldrsh	r1, [r0, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L218:
	.align	2, 0
.L217:
	.word	gAshFieldEffectFuncs
.Lfe42:
	.size	 UpdateAshFieldEffect,.Lfe42-UpdateAshFieldEffect
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step0,function
	.thumb_func
UpdateAshFieldEffect_Step0:
	push	{lr}
	add	r3, r0, #0
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r0, [r2]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r3, #0x36]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x36]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L220	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0x2e]
.L220:
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 UpdateAshFieldEffect_Step0,.Lfe43-UpdateAshFieldEffect_Step0
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step1,function
	.thumb_func
UpdateAshFieldEffect_Step1:
	push	{r4, lr}
	add	r4, r0, #0
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r1, [r2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r2, #0x32
	ldrsh	r1, [r4, r2]
	ldrh	r2, [r4, #0x34]
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r2, #0x32
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	ldr	r2, .L222
	ldr	r0, .L222+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x19
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x2
	strh	r0, [r4, #0x2e]
	pop	{r4}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe44:
	.size	 UpdateAshFieldEffect_Step1,.Lfe44-UpdateAshFieldEffect_Step1
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step2,function
	.thumb_func
UpdateAshFieldEffect_Step2:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L225	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x7
	bl	FieldEffectStop
.L225:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 UpdateAshFieldEffect_Step2,.Lfe45-UpdateAshFieldEffect_Step2
	.align	2, 0
	.globl	FldEff_SurfBlob
	.type	 FldEff_SurfBlob,function
	.thumb_func
FldEff_SurfBlob:
	push	{r4, r5, lr}
	ldr	r4, .L228
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L228+0x4
	ldr	r0, [r0, #0x1c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x96
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	cmp	r0, #0x40
	beq	.L227	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L228+0x8
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r1, #0x32]
	ldr	r0, .L228+0xc
	strh	r0, [r1, #0x34]
	mov	r0, #0x1
	neg	r0, r0
	strh	r0, [r1, #0x3a]
	strh	r0, [r1, #0x3c]
.L227:
	mov	r0, #0x8
	bl	FieldEffectActiveListRemove
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L229:
	.align	2, 0
.L228:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	0xffff
.Lfe46:
	.size	 FldEff_SurfBlob,.Lfe46-FldEff_SurfBlob
	.align	2, 0
	.globl	SetSurfBobState
	.type	 SetSurfBobState,function
	.thumb_func
SetSurfBobState:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r3, .L231
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrh	r0, [r2, #0x2e]
	mov	r3, #0x10
	neg	r3, r3
	and	r3, r3, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x18
	orr	r0, r0, r3
	strh	r0, [r2, #0x2e]
	bx	lr
.L232:
	.align	2, 0
.L231:
	.word	gSprites
.Lfe47:
	.size	 SetSurfBobState,.Lfe47-SetSurfBobState
	.align	2, 0
	.globl	SetSurfBobWhileFlyingOutState
	.type	 SetSurfBobWhileFlyingOutState,function
	.thumb_func
SetSurfBobWhileFlyingOutState:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r3, .L234
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrh	r0, [r2, #0x2e]
	mov	r3, #0xf1
	neg	r3, r3
	and	r3, r3, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x14
	orr	r3, r3, r0
	strh	r3, [r2, #0x2e]
	bx	lr
.L235:
	.align	2, 0
.L234:
	.word	gSprites
.Lfe48:
	.size	 SetSurfBobWhileFlyingOutState,.Lfe48-SetSurfBobWhileFlyingOutState
	.align	2, 0
	.globl	SetSurfBobWhileFishingState
	.type	 SetSurfBobWhileFishingState,function
	.thumb_func
SetSurfBobWhileFishingState:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r4, .L237
	lsl	r3, r0, #0x4
	add	r3, r3, r0
	lsl	r3, r3, #0x2
	add	r3, r3, r4
	ldrh	r0, [r3, #0x2e]
	ldr	r4, .L237+0x4
	and	r4, r4, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x10
	orr	r4, r4, r0
	strh	r4, [r3, #0x2e]
	strh	r2, [r3, #0x30]
	pop	{r4}
	pop	{r0}
	bx	r0
.L238:
	.align	2, 0
.L237:
	.word	gSprites
	.word	-0xf01
.Lfe49:
	.size	 SetSurfBobWhileFishingState,.Lfe49-SetSurfBobWhileFishingState
	.align	2, 0
	.type	 GetSurfBobState,function
	.thumb_func
GetSurfBobState:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf
	and	r0, r0, r1
	bx	lr
.Lfe50:
	.size	 GetSurfBobState,.Lfe50-GetSurfBobState
	.align	2, 0
	.type	 GetSurfBobWhileFlyingOutState,function
	.thumb_func
GetSurfBobWhileFlyingOutState:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	lsr	r0, r0, #0x4
	bx	lr
.Lfe51:
	.size	 GetSurfBobWhileFlyingOutState,.Lfe51-GetSurfBobWhileFlyingOutState
	.align	2, 0
	.type	 GetSurfBobWhileFishingState,function
	.thumb_func
GetSurfBobWhileFishingState:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	lsl	r0, r0, #0x4
	and	r0, r0, r1
	lsr	r0, r0, #0x8
	bx	lr
.Lfe52:
	.size	 GetSurfBobWhileFishingState,.Lfe52-GetSurfBobWhileFishingState
	.align	2, 0
	.globl	UpdateSurfBlobFieldEffect
	.type	 UpdateSurfBlobFieldEffect,function
	.thumb_func
UpdateSurfBlobFieldEffect:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r6, r1]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L243
	add	r4, r4, r0
	ldrb	r0, [r4, #0x4]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L243+0x4
	add	r5, r5, r0
	add	r0, r4, #0
	add	r1, r6, #0
	bl	SynchroniseSurfAnim
	add	r0, r4, #0
	add	r1, r6, #0
	bl	sub_81556E8
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	bl	CreateBobbingEffect
	ldrb	r0, [r5, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r2, [r6, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6, #0x5]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L244:
	.align	2, 0
.L243:
	.word	gObjectEvents
	.word	gSprites
.Lfe53:
	.size	 UpdateSurfBlobFieldEffect,.Lfe53-UpdateSurfBlobFieldEffect
	.section .rodata
.LC213:
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
.text
	.align	2, 0
	.type	 SynchroniseSurfAnim,function
	.thumb_func
SynchroniseSurfAnim:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L247
	mov	r0, sp
	mov	r2, #0x9
	bl	memcpy
	add	r0, r4, #0
	bl	GetSurfBobWhileFlyingOutState
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L246	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	StartSpriteAnimIfDifferent
.L246:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L248:
	.align	2, 0
.L247:
	.word	.LC213
.Lfe54:
	.size	 SynchroniseSurfAnim,.Lfe54-SynchroniseSurfAnim
	.align	2, 0
	.type	 sub_81556E8,function
	.thumb_func
sub_81556E8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r1, #0
	ldrh	r2, [r0, #0x10]
	mov	r1, sp
	strh	r2, [r1]
	ldrh	r1, [r0, #0x12]
	mov	r0, sp
	add	r0, r0, #0x2
	strh	r1, [r0]
	mov	r2, #0x26
	ldrsh	r3, [r4, r2]
	mov	r8, r0
	cmp	r3, #0
	bne	.L250	@cond_branch
	mov	r0, sp
	mov	r5, #0x0
	ldrsh	r2, [r0, r5]
	mov	r5, #0x3a
	ldrsh	r0, [r4, r5]
	cmp	r2, r0
	bne	.L251	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	mov	r5, #0x3c
	ldrsh	r1, [r4, r5]
	cmp	r0, r1
	beq	.L250	@cond_branch
.L251:
	strh	r3, [r4, #0x38]
	strh	r2, [r4, #0x3a]
	mov	r1, r8
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	strh	r0, [r4, #0x3c]
	mov	r5, #0x1
	mov	r7, r8
	mov	r6, sp
.L255:
	add	r0, r5, #0
	mov	r1, sp
	add	r2, r7, #0
	bl	MoveCoords
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	MapGridGetZCoordAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L254	@cond_branch
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	b	.L250
.L254:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrh	r0, [r4, #0x3a]
	strh	r0, [r6]
	ldrh	r0, [r4, #0x3c]
	mov	r1, r8
	strh	r0, [r1]
	cmp	r5, #0x4
	bls	.L255	@cond_branch
.L250:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 sub_81556E8,.Lfe55-sub_81556E8
	.section .rodata
	.align	1, 0
.LC215:
	.short	0x3
	.short	0x7
.text
	.align	2, 0
	.type	 CreateBobbingEffect,function
	.thumb_func
CreateBobbingEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r1, .L266
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r0, r4, #0
	bl	GetSurfBobState
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L259	@cond_branch
	ldrh	r1, [r4, #0x36]
	add	r1, r1, #0x1
	strh	r1, [r4, #0x36]
	mov	r3, #0x38
	ldrsh	r0, [r4, r3]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L260	@cond_branch
	ldrh	r0, [r4, #0x34]
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
.L260:
	ldrh	r1, [r4, #0x36]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L261	@cond_branch
	ldrh	r0, [r4, #0x34]
	neg	r0, r0
	strh	r0, [r4, #0x34]
.L261:
	cmp	r2, #0x2
	beq	.L259	@cond_branch
	add	r0, r4, #0
	bl	GetSurfBobWhileFishingState
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L263	@cond_branch
	ldrh	r0, [r4, #0x26]
	b	.L265
.L267:
	.align	2, 0
.L266:
	.word	.LC215
.L263:
	ldrh	r0, [r4, #0x26]
	ldrh	r3, [r4, #0x30]
	add	r0, r0, r3
.L265:
	strh	r0, [r5, #0x26]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r5, #0x22]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x22]
.L259:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 CreateBobbingEffect,.Lfe56-CreateBobbingEffect
	.align	2, 0
	.globl	sub_8155800
	.type	 sub_8155800,function
	.thumb_func
sub_8155800:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L269
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0xff
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r1, .L269+0x4
	add	r2, r2, r1
	ldr	r1, .L269+0x8
	str	r1, [r2, #0x1c]
	mov	r1, #0x3e
	add	r1, r1, r2
	mov	ip, r1
	ldrb	r1, [r1]
	mov	r3, #0x4
	orr	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	strh	r4, [r2, #0x2e]
	mov	r1, #0x1
	strh	r1, [r2, #0x30]
	pop	{r4}
	pop	{r1}
	bx	r1
.L270:
	.align	2, 0
.L269:
	.word	gDummySpriteTemplate
	.word	gSprites
	.word	sub_8155850
.Lfe57:
	.size	 sub_8155800,.Lfe57-sub_8155800
	.align	2, 0
	.type	 sub_8155850,function
	.thumb_func
sub_8155850:
	push	{lr}
	add	r2, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r2, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L274
	add	r3, r0, r1
	ldrh	r1, [r2, #0x32]
	add	r0, r1, #0x1
	strh	r0, [r2, #0x32]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L272	@cond_branch
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r3, #0x26]
	add	r0, r0, r1
	strh	r0, [r3, #0x26]
.L272:
	ldrh	r1, [r2, #0x32]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L273	@cond_branch
	ldrh	r0, [r2, #0x30]
	neg	r0, r0
	strh	r0, [r2, #0x30]
.L273:
	pop	{r0}
	bx	r0
.L275:
	.align	2, 0
.L274:
	.word	gSprites
.Lfe58:
	.size	 sub_8155850,.Lfe58-sub_8155850
	.align	2, 0
	.globl	FldEff_Dust
	.type	 FldEff_Dust,function
	.thumb_func
FldEff_Dust:
	push	{r4, lr}
	ldr	r4, .L278
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L278+0x4
	ldr	r0, [r0, #0x24]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L277	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L278+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xa
	strh	r0, [r2, #0x30]
.L277:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L279:
	.align	2, 0
.L278:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe59:
	.size	 FldEff_Dust,.Lfe59-FldEff_Dust
	.align	2, 0
	.globl	FldEff_SandPile
	.type	 FldEff_SandPile,function
	.thumb_func
FldEff_SandPile:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L282
	ldrb	r0, [r7]
	ldrb	r1, [r7, #0x4]
	ldrb	r2, [r7, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L282+0x4
	add	r6, r1, r0
	ldr	r0, .L282+0x8
	ldr	r0, [r0, #0x74]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x40
	beq	.L281	@cond_branch
	ldrb	r0, [r6, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r5, r0, #0
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r4, .L282+0xc
	add	r0, r0, r4
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r1, [r7]
	strh	r1, [r0, #0x2e]
	ldr	r1, [r7, #0x4]
	strh	r1, [r0, #0x30]
	ldr	r1, [r7, #0x8]
	strh	r1, [r0, #0x32]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrh	r1, [r1, #0x20]
	strh	r1, [r0, #0x34]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrh	r1, [r1, #0x22]
	strh	r1, [r0, #0x36]
	ldrh	r1, [r5, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	sub	r1, r1, #0x2
	strh	r1, [r0, #0x26]
	mov	r1, #0x2
	bl	SeekSpriteAnim
.L281:
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L283:
	.align	2, 0
.L282:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe60:
	.size	 FldEff_SandPile,.Lfe60-FldEff_SandPile
	.align	2, 0
	.globl	UpdateSandPileFieldEffect
	.type	 UpdateSandPileFieldEffect,function
	.thumb_func
UpdateSandPileFieldEffect:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L286	@cond_branch
	ldr	r2, .L291
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1b
	cmp	r0, #0
	blt	.L285	@cond_branch
.L286:
	add	r0, r4, #0
	mov	r1, #0x27
	bl	FieldEffectStop
	b	.L287
.L292:
	.align	2, 0
.L291:
	.word	gObjectEvents
.L285:
	ldr	r2, .L293
	ldrb	r1, [r1, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r5, [r0, #0x22]
	ldrh	r6, [r0, #0x20]
	mov	r2, #0x20
	ldrsh	r1, [r0, r2]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L289	@cond_branch
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	beq	.L288	@cond_branch
.L289:
	strh	r6, [r4, #0x34]
	strh	r5, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L288	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L288:
	strh	r6, [r4, #0x20]
	strh	r5, [r4, #0x22]
	ldr	r3, .L293
	ldr	r2, .L293+0x4
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L287:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L294:
	.align	2, 0
.L293:
	.word	gSprites
	.word	gObjectEvents
.Lfe61:
	.size	 UpdateSandPileFieldEffect,.Lfe61-UpdateSandPileFieldEffect
	.align	2, 0
	.globl	FldEff_Bubbles
	.type	 FldEff_Bubbles,function
	.thumb_func
FldEff_Bubbles:
	push	{r4, lr}
	ldr	r4, .L297
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x0
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L297+0x4
	add	r0, r0, #0x88
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L296	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L297+0x8
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
.L296:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L298:
	.align	2, 0
.L297:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe62:
	.size	 FldEff_Bubbles,.Lfe62-FldEff_Bubbles
	.align	2, 0
	.globl	UpdateBubblesFieldEffect
	.type	 UpdateBubblesFieldEffect,function
	.thumb_func
UpdateBubblesFieldEffect:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x80
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	and	r0, r0, r1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r1, [r4, #0x22]
	sub	r1, r1, r0
	strh	r1, [r4, #0x22]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r1, [r4, #0x3e]
	ldr	r0, .L301
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L300	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x35
	bl	FieldEffectStop
.L300:
	pop	{r4}
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	0x1004
.Lfe63:
	.size	 UpdateBubblesFieldEffect,.Lfe63-UpdateBubblesFieldEffect
	.align	2, 0
	.globl	FldEff_BerryTreeGrowthSparkle
	.type	 FldEff_BerryTreeGrowthSparkle,function
	.thumb_func
FldEff_BerryTreeGrowthSparkle:
	push	{r4, lr}
	ldr	r4, .L305
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x4
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L305+0x4
	ldr	r0, [r0, #0x58]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L304	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L305+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	mov	r1, #0xf
	and	r0, r0, r1
	mov	r1, #0x50
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x17
	strh	r0, [r2, #0x2e]
.L304:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L306:
	.align	2, 0
.L305:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe64:
	.size	 FldEff_BerryTreeGrowthSparkle,.Lfe64-FldEff_BerryTreeGrowthSparkle
	.align	2, 0
	.globl	ShowTreeDisguiseFieldEffect
	.type	 ShowTreeDisguiseFieldEffect,function
	.thumb_func
ShowTreeDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x1c
	mov	r1, #0x18
	mov	r2, #0x4
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 ShowTreeDisguiseFieldEffect,.Lfe65-ShowTreeDisguiseFieldEffect
	.align	2, 0
	.globl	ShowMountainDisguiseFieldEffect
	.type	 ShowMountainDisguiseFieldEffect,function
	.thumb_func
ShowMountainDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x1d
	mov	r1, #0x19
	mov	r2, #0x3
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 ShowMountainDisguiseFieldEffect,.Lfe66-ShowMountainDisguiseFieldEffect
	.align	2, 0
	.globl	ShowSandDisguiseFieldEffect
	.type	 ShowSandDisguiseFieldEffect,function
	.thumb_func
ShowSandDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x24
	mov	r1, #0x1c
	mov	r2, #0x2
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 ShowSandDisguiseFieldEffect,.Lfe67-ShowSandDisguiseFieldEffect
	.align	2, 0
	.type	 ShowDisguiseFieldEffect,function
	.thumb_func
ShowDisguiseFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r8, r4
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r5, .L314
	ldrb	r0, [r5]
	ldrb	r1, [r5, #0x4]
	ldrb	r2, [r5, #0x8]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L311	@cond_branch
	add	r0, r4, #0
	bl	FieldEffectActiveListRemove
	mov	r0, #0x40
	b	.L313
.L315:
	.align	2, 0
.L314:
	.word	gFieldEffectArguments
.L311:
	ldr	r1, .L316
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	mov	r1, sp
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L312	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L316+0x4
	add	r2, r2, r0
	mov	r0, #0x3e
	add	r0, r0, r2
	mov	ip, r0
	ldrb	r3, [r0]
	lsl	r1, r3, #0x1e
	lsr	r1, r1, #0x1f
	add	r1, r1, #0x1
	mov	r0, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	lsl	r3, r7, #0x4
	ldrb	r1, [r2, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r2, #0x5]
	mov	r0, r8
	strh	r0, [r2, #0x30]
	ldr	r0, [r5]
	strh	r0, [r2, #0x32]
	ldr	r0, [r5, #0x4]
	strh	r0, [r2, #0x34]
	ldr	r0, [r5, #0x8]
	strh	r0, [r2, #0x36]
.L312:
	mov	r0, sp
	ldrb	r0, [r0]
.L313:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L317:
	.align	2, 0
.L316:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe68:
	.size	 ShowDisguiseFieldEffect,.Lfe68-ShowDisguiseFieldEffect
	.align	2, 0
	.globl	UpdateDisguiseFieldEffect
	.type	 UpdateDisguiseFieldEffect,function
	.thumb_func
UpdateDisguiseFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x32]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x34]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r5, #0x36]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L319	@cond_branch
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldEffectStop
.L319:
	ldr	r4, .L323
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, sp
	ldrb	r2, [r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x4]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	ldr	r1, .L323+0x4
	add	r2, r2, r1
	add	r1, r2, #0
	add	r1, r1, #0x3e
	ldrb	r1, [r1]
	mov	r3, #0x3e
	add	r3, r3, r5
	mov	ip, r3
	mov	r3, #0x4
	and	r3, r3, r1
	mov	r1, ip
	ldrb	r4, [r1]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	ldrh	r1, [r2, #0x20]
	strh	r1, [r5, #0x20]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	ldrh	r1, [r2, #0x22]
	add	r0, r0, r1
	sub	r0, r0, #0x10
	strh	r0, [r5, #0x22]
	add	r2, r2, #0x43
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	add	r1, r5, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	ldrh	r1, [r5, #0x2e]
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x1
	bne	.L320	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
.L320:
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	ldrh	r2, [r5, #0x2e]
	cmp	r0, #0x2
	bne	.L321	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L321	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L321:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L322	@cond_branch
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldEffectStop
.L322:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L324:
	.align	2, 0
.L323:
	.word	gObjectEvents
	.word	gSprites
.Lfe69:
	.size	 UpdateDisguiseFieldEffect,.Lfe69-UpdateDisguiseFieldEffect
	.align	2, 0
	.globl	sub_8155D78
	.type	 sub_8155D78,function
	.thumb_func
sub_8155D78:
	push	{lr}
	add	r1, r0, #0
	add	r0, r0, #0x21
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L326	@cond_branch
	ldr	r2, .L327
	ldrb	r1, [r1, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x2e]
.L326:
	pop	{r0}
	bx	r0
.L328:
	.align	2, 0
.L327:
	.word	gSprites
.Lfe70:
	.size	 sub_8155D78,.Lfe70-sub_8155D78
	.align	2, 0
	.globl	sub_8155DA0
	.type	 sub_8155DA0,function
	.thumb_func
sub_8155DA0:
	push	{lr}
	add	r2, r0, #0
	add	r2, r2, #0x21
	ldrb	r1, [r2]
	cmp	r1, #0x2
	beq	.L334	@cond_branch
	cmp	r1, #0
	beq	.L334	@cond_branch
	ldrb	r1, [r0, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L335
	add	r1, r0, r1
	mov	r3, #0x3c
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	bne	.L332	@cond_branch
	mov	r0, #0x0
	b	.L333
.L336:
	.align	2, 0
.L335:
	.word	gSprites
.L332:
	mov	r0, #0x2
	strb	r0, [r2]
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
.L334:
	mov	r0, #0x1
.L333:
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 sub_8155DA0,.Lfe71-sub_8155DA0
	.align	2, 0
	.globl	FldEff_Sparkle
	.type	 FldEff_Sparkle,function
	.thumb_func
FldEff_Sparkle:
	push	{r4, r5, lr}
	ldr	r4, .L339
	ldr	r0, [r4]
	add	r0, r0, #0x7
	str	r0, [r4]
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	str	r0, [r4, #0x4]
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L339+0x4
	add	r0, r0, #0x8c
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r5, r2, #0
	cmp	r2, #0x40
	beq	.L338	@cond_branch
	ldr	r0, .L339+0x8
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0x3
	ldrb	r2, [r4, #0x8]
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
.L338:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L340:
	.align	2, 0
.L339:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe72:
	.size	 FldEff_Sparkle,.Lfe72-FldEff_Sparkle
	.align	2, 0
	.globl	UpdateSparkleFieldEffect
	.type	 UpdateSparkleFieldEffect,function
	.thumb_func
UpdateSparkleFieldEffect:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L342	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L343	@cond_branch
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
.L343:
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	beq	.L341	@cond_branch
.L342:
	ldrh	r0, [r2, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x22
	ble	.L341	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x36
	bl	FieldEffectStop
.L341:
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 UpdateSparkleFieldEffect,.Lfe73-UpdateSparkleFieldEffect
	.align	2, 0
	.type	 InitRayquazaForFigure8Anim,function
	.thumb_func
InitRayquazaForFigure8Anim:
	mov	r1, #0x0
	strh	r1, [r0, #0x3a]
	strh	r1, [r0, #0x3c]
	bx	lr
.Lfe74:
	.size	 InitRayquazaForFigure8Anim,.Lfe74-InitRayquazaForFigure8Anim
	.align	2, 0
	.type	 AnimateRayquazaInFigure8,function
	.thumb_func
AnimateRayquazaInFigure8:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r6, #0x0
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L350	@cond_branch
	cmp	r0, #0x1
	bgt	.L355	@cond_branch
	cmp	r0, #0
	beq	.L349	@cond_branch
	b	.L348
.L355:
	cmp	r0, #0x2
	beq	.L351	@cond_branch
	cmp	r0, #0x3
	beq	.L352	@cond_branch
	b	.L348
.L349:
	mov	r2, #0x3a
	ldrsh	r0, [r5, r2]
	bl	GetFigure8XOffset
	ldrh	r1, [r5, #0x24]
	add	r0, r0, r1
	strh	r0, [r5, #0x24]
	mov	r2, #0x3a
	ldrsh	r0, [r5, r2]
	b	.L358
.L350:
	ldrh	r0, [r5, #0x3a]
	mov	r4, #0x47
	sub	r0, r4, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	bl	GetFigure8XOffset
	ldrh	r1, [r5, #0x24]
	sub	r1, r1, r0
	strh	r1, [r5, #0x24]
	ldrh	r0, [r5, #0x3a]
	sub	r4, r4, r0
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r0, r4, #0
	bl	GetFigure8YOffset
	ldrh	r2, [r5, #0x26]
	add	r0, r0, r2
	b	.L359
.L351:
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	bl	GetFigure8XOffset
	ldrh	r1, [r5, #0x24]
	sub	r1, r1, r0
	strh	r1, [r5, #0x24]
	mov	r2, #0x3a
	ldrsh	r0, [r5, r2]
	b	.L358
.L352:
	ldrh	r0, [r5, #0x3a]
	mov	r4, #0x47
	sub	r0, r4, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	bl	GetFigure8XOffset
	ldrh	r2, [r5, #0x24]
	add	r0, r0, r2
	strh	r0, [r5, #0x24]
	ldrh	r0, [r5, #0x3a]
	sub	r4, r4, r0
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r0, r4, #0
.L358:
	bl	GetFigure8YOffset
	ldrh	r1, [r5, #0x26]
	add	r0, r0, r1
.L359:
	strh	r0, [r5, #0x26]
.L348:
	ldrh	r1, [r5, #0x24]
	neg	r1, r1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x10
	bl	SetGpuReg
	ldrh	r0, [r5, #0x3a]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0x3a]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x48
	bne	.L356	@cond_branch
	strh	r1, [r5, #0x3a]
	ldrh	r0, [r5, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x3c]
.L356:
	mov	r2, #0x3c
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x4
	bne	.L357	@cond_branch
	strh	r1, [r5, #0x26]
	strh	r1, [r5, #0x24]
	mov	r6, #0x1
.L357:
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 AnimateRayquazaInFigure8,.Lfe75-AnimateRayquazaInFigure8
	.align	2, 0
	.globl	UpdateRayquazaSpotlightEffect
	.type	 UpdateRayquazaSpotlightEffect,function
	.thumb_func
UpdateRayquazaSpotlightEffect:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x8
	bls	.LCB5881
	b	.L361	@long jump
.LCB5881:
	lsl	r0, r0, #0x2
	ldr	r1, .L411
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L412:
	.align	2, 0
.L411:
	.word	.L405
	.align	2, 0
	.align	2, 0
.L405:
	.word	.L362
	.word	.L375
	.word	.L377
	.word	.L380
	.word	.L385
	.word	.L387
	.word	.L388
	.word	.L392
	.word	.L394
.L362:
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	mov	r1, #0x3
	bl	__divsi3
	mov	r1, #0x78
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x12
	bl	SetGpuReg
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	cmp	r0, #0x60
	bne	.L363	@cond_branch
	mov	r1, #0x0
	ldr	r4, .L413
	mov	ip, r4
	ldr	r0, .L413+0x4
	add	r7, r0, #0
.L367:
	mov	r2, #0xc
	lsl	r0, r1, #0x1
	add	r3, r1, #0x1
	lsl	r6, r1, #0x5
	add	r0, r0, r1
	lsl	r4, r0, #0x1
.L371:
	add	r0, r6, r2
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	add	r1, r2, r7
	add	r1, r4, r1
	add	r1, r1, #0x1
	strh	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x11
	bls	.L371	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L367	@cond_branch
.L363:
	mov	r2, #0x2e
	ldrsh	r1, [r5, r2]
	ldr	r0, .L413+0x8
	cmp	r1, r0
	bgt	.LCB5972
	b	.L361	@long jump
.LCB5972:
	mov	r1, #0x0
	mov	r0, #0x1
	b	.L410
.L414:
	.align	2, 0
.L413:
	.word	0x600f800
	.word	0xbff4
	.word	0x137
.L375:
	ldr	r4, .L415
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x12
	ldrh	r4, [r5, #0x36]
	add	r0, r0, r4
	mov	r1, #0x0
	strh	r0, [r5, #0x22]
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0xbd
	bne	.L361	@cond_branch
	mov	r0, #0x2
	strh	r0, [r5, #0x32]
	strh	r1, [r5, #0x38]
	strh	r1, [r5, #0x2e]
	b	.L361
.L416:
	.align	2, 0
.L415:
	.word	gSineTable
.L377:
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	cmp	r0, #0x3c
	bne	.L378	@cond_branch
	ldrh	r0, [r5, #0x38]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0x38]
	strh	r1, [r5, #0x2e]
.L378:
	mov	r4, #0x38
	ldrsh	r0, [r5, r4]
	cmp	r0, #0x7
	bne	.L361	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x38]
	mov	r0, #0x3
	strh	r0, [r5, #0x32]
	b	.L361
.L380:
	ldrh	r2, [r5, #0x26]
	mov	r0, #0x26
	ldrsh	r1, [r5, r0]
	add	r3, r2, #0
	cmp	r1, #0
	bne	.L381	@cond_branch
	strh	r1, [r5, #0x2e]
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
.L381:
	mov	r4, #0x2e
	ldrsh	r0, [r5, r4]
	cmp	r0, #0x5
	bne	.L361	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x2e]
	cmp	r1, #0
	ble	.L383	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r5, #0x26]
	b	.L361
.L383:
	add	r0, r2, #0x1
	strh	r0, [r5, #0x26]
	b	.L361
.L385:
	mov	r1, #0x2e
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3c
	bne	.L361	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x5
	strh	r0, [r5, #0x32]
	strh	r1, [r5, #0x2e]
	strh	r1, [r5, #0x38]
	b	.L361
.L387:
	add	r0, r5, #0
	bl	InitRayquazaForFigure8Anim
	mov	r1, #0x0
	mov	r0, #0x6
	b	.L410
.L388:
	add	r0, r5, #0
	bl	AnimateRayquazaInFigure8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L361	@cond_branch
	mov	r1, #0x0
	strh	r1, [r5, #0x2e]
	ldrh	r0, [r5, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	bgt	.L390	@cond_branch
	add	r0, r5, #0
	bl	InitRayquazaForFigure8Anim
	b	.L361
.L390:
	strh	r1, [r5, #0x38]
	mov	r0, #0x7
	strh	r0, [r5, #0x32]
	b	.L361
.L392:
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x1e
	bne	.L361	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x8
.L410:
	strh	r0, [r5, #0x32]
	strh	r1, [r5, #0x2e]
	b	.L361
.L394:
	mov	r1, #0x0
	ldr	r6, .L417
	mov	r4, #0x0
.L398:
	mov	r2, #0xc
	add	r3, r1, #0x1
	lsl	r1, r1, #0x5
.L402:
	add	r0, r1, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	strh	r4, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x11
	bls	.L402	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xe
	bls	.L398	@cond_branch
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	add	r0, r5, #0
	mov	r1, #0x40
	bl	FieldEffectStop
.L361:
	mov	r3, #0x32
	ldrsh	r0, [r5, r3]
	cmp	r0, #0x1
	bne	.L407	@cond_branch
	ldrh	r1, [r5, #0x30]
	mov	r0, #0x7
	and	r0, r0, r1
	add	r2, r1, #0
	cmp	r0, #0
	bne	.L408	@cond_branch
	ldrh	r0, [r5, #0x34]
	ldrh	r4, [r5, #0x26]
	add	r0, r0, r4
	strh	r0, [r5, #0x26]
.L408:
	mov	r0, #0xf
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L409	@cond_branch
	ldrh	r0, [r5, #0x34]
	neg	r0, r0
	strh	r0, [r5, #0x34]
.L409:
	add	r0, r1, #0x1
	strh	r0, [r5, #0x30]
.L407:
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L418:
	.align	2, 0
.L417:
	.word	0x600f800
.Lfe76:
	.size	 UpdateRayquazaSpotlightEffect,.Lfe76-UpdateRayquazaSpotlightEffect
	.align	2, 0
	.globl	UpdateJumpImpactEffect
	.type	 UpdateJumpImpactEffect,function
	.thumb_func
UpdateJumpImpactEffect:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L420	@cond_branch
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
	b	.L421
.L420:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	mov	r2, #0x0
	bl	SetObjectSubpriorityByZCoord
.L421:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 UpdateJumpImpactEffect,.Lfe77-UpdateJumpImpactEffect
	.align	2, 0
	.globl	WaitFieldEffectSpriteAnim
	.type	 WaitFieldEffectSpriteAnim,function
	.thumb_func
WaitFieldEffectSpriteAnim:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L423	@cond_branch
	ldrh	r1, [r2, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	FieldEffectStop
	b	.L424
.L423:
	add	r0, r2, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L424:
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 WaitFieldEffectSpriteAnim,.Lfe78-WaitFieldEffectSpriteAnim
	.align	2, 0
	.type	 sub_81561FC,function
	.thumb_func
sub_81561FC:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r0, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r1, r6, #0
	bl	SetObjectSubpriorityByZCoord
	mov	r7, #0x0
.L429:
	lsl	r0, r7, #0x3
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	ldr	r1, .L435
	add	r4, r0, r1
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L428	@cond_branch
	ldrb	r0, [r4, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L435+0x4
	add	r5, r0, r1
	add	r0, r6, #0
	add	r0, r0, #0x28
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r6, #0x20]
	add	r1, r0, r2
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, #0x20
	ldrsh	r2, [r5, r0]
	cmp	r1, r2
	bge	.L428	@cond_branch
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r2
	ble	.L428	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x29
	mov	r3, #0x0
	ldrsb	r3, [r0, r3]
	ldrh	r2, [r5, #0x22]
	add	r2, r2, r3
	ldrh	r4, [r5, #0x22]
	add	r0, r6, #0
	add	r0, r0, #0x29
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	ldrh	r0, [r6, #0x22]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	add	r3, r0, r3
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	cmp	r2, r3
	blt	.L433	@cond_branch
	cmp	r2, r0
	bge	.L428	@cond_branch
.L433:
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r3
	ble	.L428	@cond_branch
	add	r2, r6, #0
	add	r2, r2, #0x43
	add	r0, r5, #0
	add	r0, r0, #0x43
	ldrb	r1, [r0]
	ldrb	r0, [r2]
	cmp	r0, r1
	bhi	.L428	@cond_branch
	add	r0, r1, #0x2
	strb	r0, [r2]
	b	.L427
.L436:
	.align	2, 0
.L435:
	.word	gObjectEvents
	.word	gSprites
.L428:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xf
	bls	.L429	@cond_branch
.L427:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 sub_81561FC,.Lfe79-sub_81561FC
.text
	.align	2, 0

