@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sItemUseOnFieldCB,object
	.size	 sItemUseOnFieldCB,4
sItemUseOnFieldCB:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sItemUseCallbacks,object
sItemUseCallbacks:
	.word	CB2_ShowPartyMenuForItemUse
	.word	CB2_ReturnToField
	.word	0x0
	.size	 sItemUseCallbacks,12
	.type	 sClockwiseDirections,object
sClockwiseDirections:
	.byte	0x2
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.size	 sClockwiseDirections,4
	.align	2, 0
	.type	 sUseTMHMYesNoFuncTable,object
	.size	 sUseTMHMYesNoFuncTable,8
sUseTMHMYesNoFuncTable:
	.word	UseTMHM
	.word	BagMenu_InitListsMenu
.text
	.align	2, 0
	.type	 SetUpItemUseCallback,function
	.thumb_func
SetUpItemUseCallback:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L8
	ldrh	r0, [r1]
	cmp	r0, #0xcd
	bne	.L3	@cond_branch
	ldr	r0, .L8+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1, #0x10]
	b	.L7
.L9:
	.align	2, 0
.L8:
	.word	gSpecialVar_ItemId
	.word	gTasks
.L3:
	ldrh	r0, [r1]
	bl	ItemId_GetType
.L7:
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L5	@cond_branch
	ldr	r0, .L10
	ldr	r2, [r0]
	ldr	r1, .L10+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	add	r0, r5, #0
	bl	Task_FadeAndCloseBagMenu
	b	.L6
.L11:
	.align	2, 0
.L10:
	.word	gBagMenu
	.word	sItemUseCallbacks
.L5:
	ldr	r0, .L12
	ldr	r2, [r0]
	ldr	r1, .L12+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	add	r0, r5, #0
	bl	CloseBattlePyramidBagAndSetCallback
.L6:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	gPyramidBagResources
	.word	sItemUseCallbacks
.Lfe1:
	.size	 SetUpItemUseCallback,.Lfe1-SetUpItemUseCallback
	.align	2, 0
	.type	 SetUpItemUseOnFieldCallback,function
	.thumb_func
SetUpItemUseOnFieldCallback:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L17
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xe
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x1
	beq	.L15	@cond_branch
	ldr	r1, .L17+0x4
	ldr	r0, .L17+0x8
	str	r0, [r1]
	add	r0, r2, #0
	bl	SetUpItemUseCallback
	b	.L16
.L18:
	.align	2, 0
.L17:
	.word	gTasks
	.word	gFieldCallback
	.word	FieldCB_UseItemOnField
.L15:
	ldr	r0, .L19
	ldr	r1, [r0]
	add	r0, r2, #0
	bl	_call_via_r1
.L16:
	pop	{r0}
	bx	r0
.L20:
	.align	2, 0
.L19:
	.word	sItemUseOnFieldCB
.Lfe2:
	.size	 SetUpItemUseOnFieldCallback,.Lfe2-SetUpItemUseOnFieldCallback
	.align	2, 0
	.type	 FieldCB_UseItemOnField,function
	.thumb_func
FieldCB_UseItemOnField:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L22
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	Task_CallItemUseOnFieldCallback
.Lfe3:
	.size	 FieldCB_UseItemOnField,.Lfe3-FieldCB_UseItemOnField
	.align	2, 0
	.type	 Task_CallItemUseOnFieldCallback,function
	.thumb_func
Task_CallItemUseOnFieldCallback:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L25	@cond_branch
	ldr	r0, .L26
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
.L25:
	pop	{r4}
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	sItemUseOnFieldCB
.Lfe4:
	.size	 Task_CallItemUseOnFieldCallback,.Lfe4-Task_CallItemUseOnFieldCallback
	.align	2, 0
	.type	 DisplayCannotUseItemMessage,function
	.thumb_func
DisplayCannotUseItemMessage:
	push	{r4, r5, r6, lr}
	add	r4, r1, #0
	add	r1, r2, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L33
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	cmp	r4, #0
	bne	.L29	@cond_branch
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L30	@cond_branch
	ldr	r3, .L33+0x4
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r6, #0
	bl	DisplayItemMessage
	b	.L32
.L34:
	.align	2, 0
.L33:
	.word	gStringVar4
	.word	BagMenu_InitListsMenu
.L30:
	ldr	r1, .L35
	ldr	r2, .L35+0x4
	add	r0, r5, #0
	bl	DisplayItemMessageInBattlePyramid
	b	.L32
.L36:
	.align	2, 0
.L35:
	.word	gText_DadsAdvice
	.word	Task_CloseBattlePyramidBagMessage
.L29:
	ldr	r2, .L37
	add	r0, r5, #0
	add	r1, r6, #0
	bl	DisplayItemMessageOnField
.L32:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	Task_CloseCantUseKeyItemMessage
.Lfe5:
	.size	 DisplayCannotUseItemMessage,.Lfe5-DisplayCannotUseItemMessage
	.align	2, 0
	.type	 DisplayDadsAdviceCannotUseItemMessage,function
	.thumb_func
DisplayDadsAdviceCannotUseItemMessage:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L40
	bl	DisplayCannotUseItemMessage
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gText_DadsAdvice
.Lfe6:
	.size	 DisplayDadsAdviceCannotUseItemMessage,.Lfe6-DisplayDadsAdviceCannotUseItemMessage
	.align	2, 0
	.type	 DisplayCannotDismountBikeMessage,function
	.thumb_func
DisplayCannotDismountBikeMessage:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L43
	bl	DisplayCannotUseItemMessage
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	gText_CantDismountBike
.Lfe7:
	.size	 DisplayCannotDismountBikeMessage,.Lfe7-DisplayCannotDismountBikeMessage
	.align	2, 0
	.type	 Task_CloseCantUseKeyItemMessage,function
	.thumb_func
Task_CloseCantUseKeyItemMessage:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	add	r0, r4, #0
	bl	DestroyTask
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 Task_CloseCantUseKeyItemMessage,.Lfe8-Task_CloseCantUseKeyItemMessage
	.align	2, 0
	.globl	CheckIfItemIsTMHMOrEvolutionStone
	.type	 CheckIfItemIsTMHMOrEvolutionStone,function
	.thumb_func
CheckIfItemIsTMHMOrEvolutionStone:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	ItemId_GetFieldFunc
	ldr	r1, .L52
	cmp	r0, r1
	bne	.L47	@cond_branch
	mov	r0, #0x1
	b	.L51
.L53:
	.align	2, 0
.L52:
	.word	ItemUseOutOfBattle_TMHM
.L47:
	add	r0, r4, #0
	bl	ItemId_GetFieldFunc
	ldr	r1, .L54
	cmp	r0, r1
	beq	.L49	@cond_branch
	mov	r0, #0x0
	b	.L51
.L55:
	.align	2, 0
.L54:
	.word	ItemUseOutOfBattle_EvolutionStone
.L49:
	mov	r0, #0x2
.L51:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 CheckIfItemIsTMHMOrEvolutionStone,.Lfe9-CheckIfItemIsTMHMOrEvolutionStone
	.align	2, 0
	.type	 CB2_CheckMail,function
	.thumb_func
CB2_CheckMail:
	push	{lr}
	add	sp, sp, #-0x24
	mov	r1, sp
	ldr	r0, .L57
	ldrh	r0, [r0]
	strh	r0, [r1, #0x20]
	ldr	r1, .L57+0x4
	mov	r0, sp
	mov	r2, #0x0
	bl	ReadMail
	add	sp, sp, #0x24
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	gSpecialVar_ItemId
	.word	CB2_ReturnToBagMenuPocket
.Lfe10:
	.size	 CB2_CheckMail,.Lfe10-CB2_CheckMail
	.align	2, 0
	.globl	ItemUseOutOfBattle_Mail
	.type	 ItemUseOutOfBattle_Mail,function
	.thumb_func
ItemUseOutOfBattle_Mail:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L60
	ldr	r2, [r1]
	ldr	r1, .L60+0x4
	str	r1, [r2]
	bl	Task_FadeAndCloseBagMenu
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	gBagMenu
	.word	CB2_CheckMail
.Lfe11:
	.size	 ItemUseOutOfBattle_Mail,.Lfe11-ItemUseOutOfBattle_Mail
	.align	2, 0
	.globl	ItemUseOutOfBattle_Bike
	.type	 ItemUseOutOfBattle_Bike,function
	.thumb_func
ItemUseOutOfBattle_Bike:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L68
	add	r6, r0, r1
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L68+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L64	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsVerticalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L64	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsHorizontalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L64	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsIsolatedVerticalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L64	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsIsolatedHorizontalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L63	@cond_branch
.L64:
	ldrb	r1, [r6, #0x6]
	add	r0, r5, #0
	bl	DisplayCannotDismountBikeMessage
	b	.L65
.L69:
	.align	2, 0
.L68:
	.word	gTasks+0x8
	.word	0x88b
.L63:
	bl	Overworld_IsBikingAllowed
	cmp	r0, #0x1
	bne	.L66	@cond_branch
	bl	IsBikingDisallowedByPlayer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L66	@cond_branch
	ldr	r1, .L70
	ldr	r0, .L70+0x4
	str	r0, [r1]
	add	r0, r5, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L65
.L71:
	.align	2, 0
.L70:
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_Bike
.L66:
	ldrb	r1, [r6, #0x6]
	add	r0, r5, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L65:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 ItemUseOutOfBattle_Bike,.Lfe12-ItemUseOutOfBattle_Bike
	.align	2, 0
	.type	 ItemUseOnFieldCB_Bike,function
	.thumb_func
ItemUseOnFieldCB_Bike:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L75
	ldrh	r0, [r0]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L73	@cond_branch
	mov	r0, #0x2
	bl	GetOnOffBike
	b	.L74
.L76:
	.align	2, 0
.L75:
	.word	gSpecialVar_ItemId
.L73:
	mov	r0, #0x4
	bl	GetOnOffBike
.L74:
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 ItemUseOnFieldCB_Bike,.Lfe13-ItemUseOnFieldCB_Bike
	.align	2, 0
	.type	 CanFish,function
	.thumb_func
CanFish:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r0, r6, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	MetatileBehavior_IsWaterfall
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L82	@cond_branch
	mov	r0, #0x10
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L82	@cond_branch
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L80	@cond_branch
	bl	IsPlayerFacingSurfableFishableWater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L82	@cond_branch
.L87:
	mov	r0, #0x1
	b	.L85
.L80:
	add	r0, r5, #0
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L83	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridIsImpassableAt
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L87	@cond_branch
.L83:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_8089510
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L87	@cond_branch
.L82:
	mov	r0, #0x0
.L85:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 CanFish,.Lfe14-CanFish
	.align	2, 0
	.globl	ItemUseOutOfBattle_Rod
	.type	 ItemUseOutOfBattle_Rod,function
	.thumb_func
ItemUseOutOfBattle_Rod:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	CanFish
	cmp	r0, #0x1
	bne	.L89	@cond_branch
	ldr	r1, .L91
	ldr	r0, .L91+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L90
.L92:
	.align	2, 0
.L91:
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_Rod
.L89:
	ldr	r0, .L93
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xe]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L90:
	pop	{r4}
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	gTasks
.Lfe15:
	.size	 ItemUseOutOfBattle_Rod,.Lfe15-ItemUseOutOfBattle_Rod
	.align	2, 0
	.type	 ItemUseOnFieldCB_Rod,function
	.thumb_func
ItemUseOnFieldCB_Rod:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L96
	ldrh	r0, [r0]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	StartFishing
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gSpecialVar_ItemId
.Lfe16:
	.size	 ItemUseOnFieldCB_Rod,.Lfe16-ItemUseOnFieldCB_Rod
	.align	2, 0
	.globl	ItemUseOutOfBattle_Itemfinder
	.type	 ItemUseOutOfBattle_Itemfinder,function
	.thumb_func
ItemUseOutOfBattle_Itemfinder:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x27
	bl	IncrementGameStat
	ldr	r1, .L99
	ldr	r0, .L99+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_Itemfinder
.Lfe17:
	.size	 ItemUseOutOfBattle_Itemfinder,.Lfe17-ItemUseOutOfBattle_Itemfinder
	.align	2, 0
	.type	 ItemUseOnFieldCB_Itemfinder,function
	.thumb_func
ItemUseOnFieldCB_Itemfinder:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L104
	ldr	r0, [r0, #0x4]
	add	r1, r4, #0
	bl	ItemfinderCheckForHiddenItems
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L102	@cond_branch
	ldr	r0, .L104+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L104+0x8
	str	r0, [r1]
	b	.L103
.L105:
	.align	2, 0
.L104:
	.word	gMapHeader
	.word	gTasks
	.word	Task_UseItemfinder
.L102:
	ldr	r1, .L106
	ldr	r2, .L106+0x4
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
.L103:
	pop	{r4}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gText_ItemFinderNothing
	.word	Task_CloseItemfinderMessage
.Lfe18:
	.size	 ItemUseOnFieldCB_Itemfinder,.Lfe18-ItemUseOnFieldCB_Itemfinder
	.align	2, 0
	.type	 Task_UseItemfinder,function
	.thumb_func
Task_UseItemfinder:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r6, r5, #0x2
	add	r0, r6, r5
	lsl	r7, r0, #0x3
	ldr	r0, .L119
	mov	r8, r0
	add	r4, r7, r0
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L109	@cond_branch
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x4
	bne	.L110	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	bl	GetDirectionToHiddenItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L111	@cond_branch
	ldr	r1, .L119+0x4
	sub	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PlayerFaceHiddenItem
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	ldr	r1, .L119+0x8
	str	r1, [r0]
	b	.L108
.L120:
	.align	2, 0
.L119:
	.word	gTasks+0x8
	.word	sClockwiseDirections
	.word	Task_HiddenItemNearby
.L111:
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, #0x0
	add	r3, r6, #0
	ldr	r7, .L121
	mov	r6, #0x3
.L116:
	add	r0, r1, r7
	add	r1, r1, #0x1
	ldrb	r0, [r0]
	cmp	r2, r0
	bne	.L115	@cond_branch
	add	r0, r1, #0
	and	r0, r0, r6
	strh	r0, [r4, #0xa]
.L115:
	lsl	r0, r1, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bls	.L116	@cond_branch
	ldr	r1, .L121+0x4
	add	r0, r3, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L121+0x8
	str	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r4, #0x6]
	strh	r0, [r4, #0x4]
	b	.L108
.L122:
	.align	2, 0
.L121:
	.word	sClockwiseDirections
	.word	gTasks
	.word	Task_StandingOnHiddenItem
.L110:
	mov	r0, #0x48
	bl	PlaySE
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L109:
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	mov	r1, #0x1f
	and	r0, r0, r1
	strh	r0, [r4, #0x6]
.L108:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 Task_UseItemfinder,.Lfe19-Task_UseItemfinder
	.align	2, 0
	.type	 Task_CloseItemfinderMessage,function
	.thumb_func
Task_CloseItemfinderMessage:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 Task_CloseItemfinderMessage,.Lfe20-Task_CloseItemfinderMessage
	.align	2, 0
	.type	 ItemfinderCheckForHiddenItems,function
	.thumb_func
ItemfinderCheckForHiddenItems:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	ldr	r1, .L135
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xc]
	mov	r3, #0x0
	mov	r9, r4
	ldrb	r0, [r5, #0x3]
	cmp	r3, r0
	bge	.L126	@cond_branch
	sub	r1, r1, #0x5
	mov	r8, r1
.L128:
	lsl	r3, r3, #0x10
	asr	r1, r3, #0x10
	ldr	r2, [r5, #0x10]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r4, r0, #0x2
	add	r1, r4, r2
	ldrb	r0, [r1, #0x5]
	add	r7, r3, #0
	cmp	r0, #0x7
	bne	.L127	@cond_branch
	mov	r2, #0xfa
	lsl	r2, r2, #0x1
	add	r0, r2, #0
	ldrh	r1, [r1, #0xa]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L127	@cond_branch
	ldr	r1, [r5, #0x10]
	add	r1, r4, r1
	ldrh	r2, [r1]
	add	r2, r2, #0x7
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r2, r2, r0
	ldrh	r0, [r1, #0x2]
	add	r0, r0, #0x7
	mov	r3, r9
	ldrh	r1, [r3]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r2, r2, #0x10
	asr	r1, r2, #0x10
	mov	r3, #0xe0
	lsl	r3, r3, #0xb
	add	r2, r2, r3
	lsr	r2, r2, #0x10
	cmp	r2, #0xe
	bhi	.L127	@cond_branch
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, r8
	blt	.L127	@cond_branch
	cmp	r2, #0x5
	bgt	.L127	@cond_branch
	add	r0, r6, #0
	bl	SetDistanceOfClosestHiddenItem
.L127:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r7, r1
	lsr	r3, r0, #0x10
	asr	r0, r0, #0x10
	ldrb	r2, [r5, #0x3]
	cmp	r0, r2
	blt	.L128	@cond_branch
.L126:
	add	r0, r6, #0
	bl	CheckForHiddenItemsInMapConnection
	ldr	r0, .L135
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r3, #0xc
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x1
	beq	.L132	@cond_branch
	mov	r0, #0x0
	b	.L134
.L136:
	.align	2, 0
.L135:
	.word	gTasks
.L132:
	mov	r0, #0x1
.L134:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 ItemfinderCheckForHiddenItems,.Lfe21-ItemfinderCheckForHiddenItems
	.align	2, 0
	.type	 IsHiddenItemPresentAtCoords,function
	.thumb_func
IsHiddenItemPresentAtCoords:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	ldrb	r2, [r0, #0x3]
	ldr	r5, [r0, #0x10]
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L139	@cond_branch
	lsl	r0, r3, #0x10
	asr	r6, r0, #0x10
	lsl	r0, r4, #0x10
	asr	r4, r0, #0x10
	add	r3, r5, #0
.L141:
	ldrb	r0, [r3, #0x5]
	cmp	r0, #0x7
	bne	.L140	@cond_branch
	ldrh	r0, [r3]
	cmp	r6, r0
	bne	.L140	@cond_branch
	ldrh	r0, [r3, #0x2]
	cmp	r4, r0
	bne	.L140	@cond_branch
	mov	r1, #0xfa
	lsl	r1, r1, #0x1
	add	r0, r1, #0
	ldrh	r3, [r3, #0xa]
	add	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L139	@cond_branch
	mov	r0, #0x1
	b	.L146
.L140:
	add	r3, r3, #0xc
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L141	@cond_branch
.L139:
	mov	r0, #0x0
.L146:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 IsHiddenItemPresentAtCoords,.Lfe22-IsHiddenItemPresentAtCoords
	.align	2, 0
	.type	 IsHiddenItemPresentInConnection,function
	.thumb_func
IsHiddenItemPresentInConnection:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	bl	GetMapHeaderFromConnection
	add	r3, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0x2
	beq	.L149	@cond_branch
	cmp	r0, #0x2
	bgt	.L155	@cond_branch
	cmp	r0, #0x1
	beq	.L150	@cond_branch
	b	.L153
.L155:
	cmp	r0, #0x3
	beq	.L151	@cond_branch
	cmp	r0, #0x4
	beq	.L152	@cond_branch
	b	.L153
.L149:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	sub	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r3]
	ldr	r0, [r0, #0x4]
	sub	r0, r0, #0x7
	add	r0, r0, r6
	b	.L157
.L150:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	sub	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L160
	ldr	r0, [r0]
	ldr	r0, [r0, #0x4]
	b	.L158
.L161:
	.align	2, 0
.L160:
	.word	gMapHeader
.L151:
	ldr	r0, [r3]
	ldr	r0, [r0]
	sub	r0, r0, #0x7
	add	r0, r0, r5
	b	.L159
.L152:
	ldr	r0, .L162
	ldr	r0, [r0]
	ldr	r0, [r0]
	add	r0, r0, #0x7
	sub	r0, r5, r0
.L159:
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4, #0x4]
.L158:
	add	r0, r0, #0x7
	sub	r0, r6, r0
.L157:
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	b	.L148
.L163:
	.align	2, 0
.L162:
	.word	gMapHeader
.L153:
	mov	r0, #0x0
	b	.L156
.L148:
	ldr	r0, [r3, #0x4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	bl	IsHiddenItemPresentAtCoords
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L156:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 IsHiddenItemPresentInConnection,.Lfe23-IsHiddenItemPresentInConnection
	.align	2, 0
	.type	 CheckForHiddenItemsInMapConnection,function
	.thumb_func
CheckForHiddenItemsInMapConnection:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	ldr	r0, .L178
	ldr	r1, [r0]
	ldr	r0, [r1]
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	ldr	r0, [r1, #0x4]
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0xc]
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	add	r1, r1, #0x7
	cmp	r0, r1
	bgt	.L166	@cond_branch
.L168:
	mov	r5, sp
	ldrh	r0, [r5, #0x2]
	sub	r0, r0, #0x5
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r2, r4, #0x10
	asr	r1, r2, #0x10
	mov	r6, #0x2
	ldrsh	r0, [r5, r6]
	add	r0, r0, #0x5
	lsl	r3, r3, #0x10
	mov	r8, r3
	cmp	r1, r0
	bgt	.L167	@cond_branch
	mov	r0, #0x7
	str	r0, [sp, #0x10]
	mov	r1, r8
	asr	r1, r1, #0x10
	mov	r9, r1
	mov	sl, r0
.L172:
	ldr	r3, [sp, #0x10]
	cmp	r3, r9
	bgt	.L174	@cond_branch
	ldr	r5, [sp, #0x8]
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	cmp	r9, r0
	bge	.L174	@cond_branch
	asr	r1, r2, #0x10
	cmp	sl, r1
	bgt	.L174	@cond_branch
	ldr	r6, [sp, #0xc]
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	lsl	r7, r4, #0x10
	cmp	r1, r0
	blt	.L171	@cond_branch
.L174:
	mov	r0, r8
	asr	r5, r0, #0x10
	lsl	r4, r4, #0x10
	asr	r6, r4, #0x10
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetConnectionAtCoords
	add	r7, r4, #0
	cmp	r0, #0
	beq	.L171	@cond_branch
	add	r1, r5, #0
	add	r2, r6, #0
	bl	IsHiddenItemPresentInConnection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L171	@cond_branch
	mov	r0, sp
	ldrh	r1, [r0]
	sub	r1, r5, r1
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	ldrh	r2, [r0, #0x2]
	sub	r2, r6, r2
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r0, [sp, #0x4]
	bl	SetDistanceOfClosestHiddenItem
.L171:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r7, r1
	lsr	r4, r0, #0x10
	lsl	r2, r4, #0x10
	asr	r1, r2, #0x10
	mov	r3, sp
	mov	r5, #0x2
	ldrsh	r0, [r3, r5]
	add	r0, r0, #0x5
	cmp	r1, r0
	ble	.L172	@cond_branch
.L167:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r1, r1, r8
	lsr	r3, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, sp
	mov	r6, #0x0
	ldrsh	r0, [r0, r6]
	add	r0, r0, #0x7
	cmp	r1, r0
	ble	.L168	@cond_branch
.L166:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L179:
	.align	2, 0
.L178:
	.word	gMapHeader
.Lfe24:
	.size	 CheckForHiddenItemsInMapConnection,.Lfe24-CheckForHiddenItemsInMapConnection
	.align	2, 0
	.type	 SetDistanceOfClosestHiddenItem,function
	.thumb_func
SetDistanceOfClosestHiddenItem:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	ip, r2
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L196
	add	r3, r1, r0
	mov	r1, #0x4
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	bne	.L181	@cond_branch
	strh	r7, [r3]
	mov	r0, ip
	strh	r0, [r3, #0x2]
	mov	r0, #0x1
	strh	r0, [r3, #0x4]
	b	.L182
.L197:
	.align	2, 0
.L196:
	.word	gTasks+0x8
.L181:
	mov	r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	bge	.L183	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L184
.L183:
	ldrh	r4, [r3]
.L184:
	mov	r1, #0x2
	ldrsh	r0, [r3, r1]
	ldrh	r1, [r3, #0x2]
	mov	r9, r1
	cmp	r0, #0
	bge	.L185	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	b	.L186
.L185:
	ldrh	r2, [r3, #0x2]
.L186:
	lsl	r1, r7, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0
	bge	.L187	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	b	.L188
.L187:
	lsr	r6, r1, #0x10
.L188:
	mov	r1, ip
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	mov	r8, r0
	cmp	r1, #0
	bge	.L189	@cond_branch
	neg	r0, r1
	lsl	r0, r0, #0x10
	b	.L195
.L189:
	mov	r0, r8
.L195:
	lsr	r5, r0, #0x10
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r2, #0x10
	asr	r2, r1, #0x10
	add	r4, r0, r2
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	add	r0, r0, r1
	cmp	r4, r0
	ble	.L191	@cond_branch
	strh	r7, [r3]
	mov	r1, ip
	strh	r1, [r3, #0x2]
	b	.L182
.L191:
	cmp	r4, r0
	bne	.L182	@cond_branch
	cmp	r2, r1
	bgt	.L194	@cond_branch
	cmp	r2, r1
	bne	.L182	@cond_branch
	mov	r1, r9
	lsl	r0, r1, #0x10
	cmp	r0, r8
	bge	.L182	@cond_branch
.L194:
	strh	r7, [r3]
	mov	r0, ip
	strh	r0, [r3, #0x2]
.L182:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 SetDistanceOfClosestHiddenItem,.Lfe25-SetDistanceOfClosestHiddenItem
	.align	2, 0
	.type	 GetDirectionToHiddenItem,function
	.thumb_func
GetDirectionToHiddenItem:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r0, #0
	bne	.L199	@cond_branch
	cmp	r1, #0
	beq	.L211	@cond_branch
.L199:
	lsl	r0, r2, #0x10
	asr	r2, r0, #0x10
	add	r5, r0, #0
	cmp	r2, #0
	bge	.L200	@cond_branch
	neg	r0, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L201
.L200:
	lsr	r4, r5, #0x10
.L201:
	lsl	r0, r1, #0x10
	asr	r2, r0, #0x10
	add	r1, r0, #0
	cmp	r2, #0
	bge	.L202	@cond_branch
	neg	r0, r2
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	b	.L203
.L202:
	lsr	r3, r1, #0x10
.L203:
	lsl	r0, r4, #0x10
	asr	r2, r0, #0x10
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r2, r0
	ble	.L204	@cond_branch
	cmp	r5, #0
	bge	.L205	@cond_branch
	mov	r0, #0x4
	b	.L214
.L205:
	mov	r0, #0x2
	b	.L214
.L204:
	cmp	r2, r0
	bge	.L208	@cond_branch
	cmp	r1, #0
	blt	.L215	@cond_branch
	b	.L212
.L208:
	cmp	r2, r0
	bne	.L211	@cond_branch
	cmp	r1, #0
	bge	.L212	@cond_branch
.L215:
	mov	r0, #0x1
	b	.L214
.L212:
	mov	r0, #0x3
	b	.L214
.L211:
	mov	r0, #0x0
.L214:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 GetDirectionToHiddenItem,.Lfe26-GetDirectionToHiddenItem
	.align	2, 0
	.type	 PlayerFaceHiddenItem,function
	.thumb_func
PlayerFaceHiddenItem:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L217
	add	r0, r0, r4
	bl	ObjectEventClearHeldMovementIfFinished
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	ObjectEventClearHeldMovement
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	UnfreezeObjectEvent
	add	r0, r5, #0
	bl	PlayerTurnInPlace
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L218:
	.align	2, 0
.L217:
	.word	gObjectEvents
.Lfe27:
	.size	 PlayerFaceHiddenItem,.Lfe27-PlayerFaceHiddenItem
	.align	2, 0
	.type	 Task_HiddenItemNearby,function
	.thumb_func
Task_HiddenItemNearby:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L221
	add	r0, r0, r1
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L220	@cond_branch
	ldr	r1, .L221+0x4
	ldr	r2, .L221+0x8
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
.L220:
	pop	{r4}
	pop	{r0}
	bx	r0
.L222:
	.align	2, 0
.L221:
	.word	gObjectEvents
	.word	gText_ItemFinderNearby
	.word	Task_CloseItemfinderMessage
.Lfe28:
	.size	 Task_HiddenItemNearby,.Lfe28-Task_HiddenItemNearby
	.align	2, 0
	.type	 Task_StandingOnHiddenItem,function
	.thumb_func
Task_StandingOnHiddenItem:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L227
	add	r4, r0, r1
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L227+0x4
	add	r0, r0, r1
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L225	@cond_branch
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L224	@cond_branch
.L225:
	ldr	r1, .L227+0x8
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PlayerFaceHiddenItem
	mov	r0, #0x1
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bne	.L224	@cond_branch
	ldr	r1, .L227+0xc
	ldr	r2, .L227+0x10
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
.L224:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L228:
	.align	2, 0
.L227:
	.word	gTasks+0x8
	.word	gObjectEvents
	.word	sClockwiseDirections
	.word	gText_ItemFinderOnTop
	.word	Task_CloseItemfinderMessage
.Lfe29:
	.size	 Task_StandingOnHiddenItem,.Lfe29-Task_StandingOnHiddenItem
	.align	2, 0
	.globl	ItemUseOutOfBattle_PokeblockCase
	.type	 ItemUseOutOfBattle_PokeblockCase,function
	.thumb_func
ItemUseOutOfBattle_PokeblockCase:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L230	@cond_branch
	ldr	r0, .L234
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xe]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
	b	.L231
.L235:
	.align	2, 0
.L234:
	.word	gTasks
.L230:
	ldr	r0, .L236
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r5, r1, r0
	mov	r1, #0xe
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L232	@cond_branch
	ldr	r0, .L236+0x4
	ldr	r1, [r0]
	ldr	r0, .L236+0x8
	str	r0, [r1]
	add	r0, r4, #0
	bl	Task_FadeAndCloseBagMenu
	b	.L231
.L237:
	.align	2, 0
.L236:
	.word	gTasks
	.word	gBagMenu
	.word	CB2_OpenPokeblockCaseOnField
.L232:
	ldr	r0, .L238
	ldr	r1, .L238+0x4
	str	r1, [r0]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L238+0x8
	str	r0, [r5]
.L231:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L239:
	.align	2, 0
.L238:
	.word	gFieldCallback
	.word	sub_80AF6D4
	.word	sub_80FDC00
.Lfe30:
	.size	 ItemUseOutOfBattle_PokeblockCase,.Lfe30-ItemUseOutOfBattle_PokeblockCase
	.align	2, 0
	.type	 CB2_OpenPokeblockCaseOnField,function
	.thumb_func
CB2_OpenPokeblockCaseOnField:
	push	{lr}
	ldr	r1, .L241
	mov	r0, #0x0
	bl	OpenPokeblockCase
	pop	{r0}
	bx	r0
.L242:
	.align	2, 0
.L241:
	.word	CB2_ReturnToBagMenuPocket
.Lfe31:
	.size	 CB2_OpenPokeblockCaseOnField,.Lfe31-CB2_OpenPokeblockCaseOnField
	.align	2, 0
	.type	 sub_80FDC00,function
	.thumb_func
sub_80FDC00:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L245
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L244	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L245+0x4
	mov	r0, #0x0
	bl	OpenPokeblockCase
	add	r0, r4, #0
	bl	DestroyTask
.L244:
	pop	{r4}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	gPaletteFade
	.word	CB2_ReturnToField
.Lfe32:
	.size	 sub_80FDC00,.Lfe32-sub_80FDC00
	.align	2, 0
	.globl	ItemUseOutOfBattle_CoinCase
	.type	 ItemUseOutOfBattle_CoinCase,function
	.thumb_func
ItemUseOutOfBattle_CoinCase:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L250
	bl	GetCoins
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L250+0x4
	ldr	r1, .L250+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r1, .L250+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xe
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	bne	.L248	@cond_branch
	ldr	r3, .L250+0x10
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	DisplayItemMessage
	b	.L249
.L251:
	.align	2, 0
.L250:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_CoinCase
	.word	gTasks
	.word	BagMenu_InitListsMenu
.L248:
	ldr	r2, .L252
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DisplayItemMessageOnField
.L249:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	Task_CloseCantUseKeyItemMessage
.Lfe33:
	.size	 ItemUseOutOfBattle_CoinCase,.Lfe33-ItemUseOutOfBattle_CoinCase
	.align	2, 0
	.globl	ItemUseOutOfBattle_PowderJar
	.type	 ItemUseOutOfBattle_PowderJar,function
	.thumb_func
ItemUseOutOfBattle_PowderJar:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L257
	bl	GetBerryPowder
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L257+0x4
	ldr	r1, .L257+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r1, .L257+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xe
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	bne	.L255	@cond_branch
	ldr	r3, .L257+0x10
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	DisplayItemMessage
	b	.L256
.L258:
	.align	2, 0
.L257:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PowderQty
	.word	gTasks
	.word	BagMenu_InitListsMenu
.L255:
	ldr	r2, .L259
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DisplayItemMessageOnField
.L256:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	Task_CloseCantUseKeyItemMessage
.Lfe34:
	.size	 ItemUseOutOfBattle_PowderJar,.Lfe34-ItemUseOutOfBattle_PowderJar
	.align	2, 0
	.globl	ItemUseOutOfBattle_Berry
	.type	 ItemUseOutOfBattle_Berry,function
	.thumb_func
ItemUseOutOfBattle_Berry:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsPlayerFacingEmptyBerryTreePatch
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L262	@cond_branch
	ldr	r1, .L264
	ldr	r0, .L264+0x4
	str	r0, [r1]
	ldr	r1, .L264+0x8
	ldr	r0, .L264+0xc
	str	r0, [r1]
	ldr	r0, .L264+0x10
	ldr	r1, [r0]
	ldr	r0, .L264+0x14
	str	r0, [r1]
	add	r0, r4, #0
	bl	Task_FadeAndCloseBagMenu
	b	.L263
.L265:
	.align	2, 0
.L264:
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_Berry
	.word	gFieldCallback
	.word	FieldCB_UseItemOnField
	.word	gBagMenu
	.word	CB2_ReturnToField
.L262:
	ldr	r0, .L266
	ldrh	r0, [r0]
	bl	ItemId_GetFieldFunc
	add	r1, r0, #0
	add	r0, r4, #0
	bl	_call_via_r1
.L263:
	pop	{r4}
	pop	{r0}
	bx	r0
.L267:
	.align	2, 0
.L266:
	.word	gSpecialVar_ItemId
.Lfe35:
	.size	 ItemUseOutOfBattle_Berry,.Lfe35-ItemUseOutOfBattle_Berry
	.align	2, 0
	.type	 ItemUseOnFieldCB_Berry,function
	.thumb_func
ItemUseOnFieldCB_Berry:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L269
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	bl	ScriptContext2_Enable
	ldr	r0, .L269+0x4
	bl	ScriptContext1_SetupScript
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L270:
	.align	2, 0
.L269:
	.word	gSpecialVar_ItemId
	.word	BerryTree_EventScript_ItemUsePlantBerry
.Lfe36:
	.size	 ItemUseOnFieldCB_Berry,.Lfe36-ItemUseOnFieldCB_Berry
	.align	2, 0
	.globl	ItemUseOutOfBattle_WailmerPail
	.type	 ItemUseOutOfBattle_WailmerPail,function
	.thumb_func
ItemUseOutOfBattle_WailmerPail:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	TryToWaterSudowoodo
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L272	@cond_branch
	ldr	r1, .L277
	ldr	r0, .L277+0x4
	b	.L276
.L278:
	.align	2, 0
.L277:
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_WailmerPailSudowoodo
.L272:
	bl	TryToWaterBerryTree
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L274	@cond_branch
	ldr	r1, .L279
	ldr	r0, .L279+0x4
.L276:
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L273
.L280:
	.align	2, 0
.L279:
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_WailmerPailBerry
.L274:
	ldr	r0, .L281
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xe]
	add	r0, r5, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L273:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gTasks
.Lfe37:
	.size	 ItemUseOutOfBattle_WailmerPail,.Lfe37-ItemUseOutOfBattle_WailmerPail
	.align	2, 0
	.type	 ItemUseOnFieldCB_WailmerPailBerry,function
	.thumb_func
ItemUseOnFieldCB_WailmerPailBerry:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	ldr	r0, .L284
	bl	ScriptContext1_SetupScript
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L285:
	.align	2, 0
.L284:
	.word	BerryTree_EventScript_ItemUseWailmerPail
.Lfe38:
	.size	 ItemUseOnFieldCB_WailmerPailBerry,.Lfe38-ItemUseOnFieldCB_WailmerPailBerry
	.align	2, 0
	.type	 TryToWaterSudowoodo,function
	.thumb_func
TryToWaterSudowoodo:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	bl	PlayerGetZCoord
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, sp
	ldrh	r0, [r0]
	ldrh	r1, [r4]
	bl	GetObjectEventIdByXYZ
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x10
	beq	.L288	@cond_branch
	ldr	r0, .L291
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x5]
	cmp	r0, #0xe4
	beq	.L287	@cond_branch
.L288:
	mov	r0, #0x0
	b	.L290
.L292:
	.align	2, 0
.L291:
	.word	gObjectEvents
.L287:
	mov	r0, #0x1
.L290:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 TryToWaterSudowoodo,.Lfe39-TryToWaterSudowoodo
	.align	2, 0
	.type	 ItemUseOnFieldCB_WailmerPailSudowoodo,function
	.thumb_func
ItemUseOnFieldCB_WailmerPailSudowoodo:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	ldr	r0, .L294
	bl	ScriptContext1_SetupScript
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	BattleFrontier_OutsideEast_EventScript_WaterSudowoodo
.Lfe40:
	.size	 ItemUseOnFieldCB_WailmerPailSudowoodo,.Lfe40-ItemUseOnFieldCB_WailmerPailSudowoodo
	.align	2, 0
	.globl	ItemUseOutOfBattle_Medicine
	.type	 ItemUseOutOfBattle_Medicine,function
	.thumb_func
ItemUseOutOfBattle_Medicine:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L297
	ldr	r1, .L297+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L298:
	.align	2, 0
.L297:
	.word	gItemUseCB
	.word	ItemUseCB_Medicine
.Lfe41:
	.size	 ItemUseOutOfBattle_Medicine,.Lfe41-ItemUseOutOfBattle_Medicine
	.align	2, 0
	.globl	ItemUseOutOfBattle_AbilityCapsule
	.type	 ItemUseOutOfBattle_AbilityCapsule,function
	.thumb_func
ItemUseOutOfBattle_AbilityCapsule:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L300
	ldr	r1, .L300+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L301:
	.align	2, 0
.L300:
	.word	gItemUseCB
	.word	ItemUseCB_AbilityCapsule
.Lfe42:
	.size	 ItemUseOutOfBattle_AbilityCapsule,.Lfe42-ItemUseOutOfBattle_AbilityCapsule
	.align	2, 0
	.globl	ItemUseOutOfBattle_PowerCandy
	.type	 ItemUseOutOfBattle_PowerCandy,function
	.thumb_func
ItemUseOutOfBattle_PowerCandy:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L303
	ldr	r1, .L303+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L304:
	.align	2, 0
.L303:
	.word	gItemUseCB
	.word	ItemUseCB_PowerCandy
.Lfe43:
	.size	 ItemUseOutOfBattle_PowerCandy,.Lfe43-ItemUseOutOfBattle_PowerCandy
	.align	2, 0
	.globl	ItemUseOutOfBattle_AbilityPatch
	.type	 ItemUseOutOfBattle_AbilityPatch,function
	.thumb_func
ItemUseOutOfBattle_AbilityPatch:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L306
	ldr	r1, .L306+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L307:
	.align	2, 0
.L306:
	.word	gItemUseCB
	.word	ItemUseCB_AbilityPatch
.Lfe44:
	.size	 ItemUseOutOfBattle_AbilityPatch,.Lfe44-ItemUseOutOfBattle_AbilityPatch
	.align	2, 0
	.globl	ItemUseOutOfBattle_ReduceEV
	.type	 ItemUseOutOfBattle_ReduceEV,function
	.thumb_func
ItemUseOutOfBattle_ReduceEV:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L309
	ldr	r1, .L309+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L310:
	.align	2, 0
.L309:
	.word	gItemUseCB
	.word	ItemUseCB_ReduceEV
.Lfe45:
	.size	 ItemUseOutOfBattle_ReduceEV,.Lfe45-ItemUseOutOfBattle_ReduceEV
	.align	2, 0
	.globl	ItemUseOutOfBattle_SacredAsh
	.type	 ItemUseOutOfBattle_SacredAsh,function
	.thumb_func
ItemUseOutOfBattle_SacredAsh:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L312
	ldr	r1, .L312+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L313:
	.align	2, 0
.L312:
	.word	gItemUseCB
	.word	ItemUseCB_SacredAsh
.Lfe46:
	.size	 ItemUseOutOfBattle_SacredAsh,.Lfe46-ItemUseOutOfBattle_SacredAsh
	.align	2, 0
	.globl	ItemUseOutOfBattle_PPRecovery
	.type	 ItemUseOutOfBattle_PPRecovery,function
	.thumb_func
ItemUseOutOfBattle_PPRecovery:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L315
	ldr	r1, .L315+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L316:
	.align	2, 0
.L315:
	.word	gItemUseCB
	.word	ItemUseCB_PPRecovery
.Lfe47:
	.size	 ItemUseOutOfBattle_PPRecovery,.Lfe47-ItemUseOutOfBattle_PPRecovery
	.align	2, 0
	.globl	ItemUseOutOfBattle_PPUp
	.type	 ItemUseOutOfBattle_PPUp,function
	.thumb_func
ItemUseOutOfBattle_PPUp:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L318
	ldr	r1, .L318+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	gItemUseCB
	.word	ItemUseCB_PPUp
.Lfe48:
	.size	 ItemUseOutOfBattle_PPUp,.Lfe48-ItemUseOutOfBattle_PPUp
	.align	2, 0
	.globl	ItemUseOutOfBattle_RareCandy
	.type	 ItemUseOutOfBattle_RareCandy,function
	.thumb_func
ItemUseOutOfBattle_RareCandy:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L321
	ldr	r1, .L321+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	gItemUseCB
	.word	ItemUseCB_RareCandy
.Lfe49:
	.size	 ItemUseOutOfBattle_RareCandy,.Lfe49-ItemUseOutOfBattle_RareCandy
	.align	2, 0
	.globl	ItemUseOutOfBattle_TMHM
	.type	 ItemUseOutOfBattle_TMHM,function
	.thumb_func
ItemUseOutOfBattle_TMHM:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L326
	ldrh	r1, [r0]
	ldr	r0, .L326+0x4
	cmp	r1, r0
	bls	.L324	@cond_branch
	ldr	r2, .L326+0x8
	ldr	r3, .L326+0xc
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L325
.L327:
	.align	2, 0
.L326:
	.word	gSpecialVar_ItemId
	.word	0x2a9
	.word	gText_BootedUpHM
	.word	BootUpSoundTMHM
.L324:
	ldr	r2, .L328
	ldr	r3, .L328+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
.L325:
	pop	{r4}
	pop	{r0}
	bx	r0
.L329:
	.align	2, 0
.L328:
	.word	gText_BootedUpTM
	.word	BootUpSoundTMHM
.Lfe50:
	.size	 ItemUseOutOfBattle_TMHM,.Lfe50-ItemUseOutOfBattle_TMHM
	.align	2, 0
	.type	 BootUpSoundTMHM,function
	.thumb_func
BootUpSoundTMHM:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	bl	PlaySE
	ldr	r1, .L331
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L331+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L332:
	.align	2, 0
.L331:
	.word	gTasks
	.word	Task_ShowTMHMContainedMessage
.Lfe51:
	.size	 BootUpSoundTMHM,.Lfe51-BootUpSoundTMHM
	.align	2, 0
	.type	 Task_ShowTMHMContainedMessage,function
	.thumb_func
Task_ShowTMHMContainedMessage:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L335
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L334	@cond_branch
	ldr	r4, .L335+0x4
	ldr	r0, .L335+0x8
	ldrh	r0, [r0]
	bl	ItemIdToBattleMoveId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	ldr	r0, .L335+0xc
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r4, .L335+0x10
	ldr	r1, .L335+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r3, .L335+0x18
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	DisplayItemMessage
.L334:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L336:
	.align	2, 0
.L335:
	.word	gMain
	.word	gStringVar1
	.word	gSpecialVar_ItemId
	.word	gMoveNames
	.word	gStringVar4
	.word	gText_TMHMContainedVar1
	.word	UseTMHMYesNo
.Lfe52:
	.size	 Task_ShowTMHMContainedMessage,.Lfe52-Task_ShowTMHMContainedMessage
	.align	2, 0
	.type	 UseTMHMYesNo,function
	.thumb_func
UseTMHMYesNo:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L338
	mov	r1, #0x6
	bl	BagMenu_YesNo
	pop	{r0}
	bx	r0
.L339:
	.align	2, 0
.L338:
	.word	sUseTMHMYesNoFuncTable
.Lfe53:
	.size	 UseTMHMYesNo,.Lfe53-UseTMHMYesNo
	.align	2, 0
	.type	 UseTMHM,function
	.thumb_func
UseTMHM:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L341
	ldr	r1, .L341+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L342:
	.align	2, 0
.L341:
	.word	gItemUseCB
	.word	ItemUseCB_TMHM
.Lfe54:
	.size	 UseTMHM,.Lfe54-UseTMHM
	.align	2, 0
	.type	 RemoveUsedItem,function
	.thumb_func
RemoveUsedItem:
	push	{r4, lr}
	ldr	r4, .L346
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	ldrh	r0, [r4]
	ldr	r1, .L346+0x4
	bl	CopyItemName
	ldr	r0, .L346+0x8
	ldr	r1, .L346+0xc
	bl	StringExpandPlaceholders
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L344	@cond_branch
	ldrh	r0, [r4]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	UpdatePocketItemList
	ldrh	r0, [r4]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	SetInitialScrollAndCursorPositions
	b	.L345
.L347:
	.align	2, 0
.L346:
	.word	gSpecialVar_ItemId
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_PlayerUsedVar2
.L344:
	bl	sub_81C5924
	bl	sub_81C59BC
.L345:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 RemoveUsedItem,.Lfe55-RemoveUsedItem
	.align	2, 0
	.globl	ItemUseOutOfBattle_Repel
	.type	 ItemUseOutOfBattle_Repel,function
	.thumb_func
ItemUseOutOfBattle_Repel:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L353
	bl	VarGet
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L349	@cond_branch
	ldr	r0, .L353+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L353+0x8
	str	r0, [r1]
	b	.L350
.L354:
	.align	2, 0
.L353:
	.word	0x4021
	.word	gTasks
	.word	Task_StartUseRepel
.L349:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L351	@cond_branch
	ldr	r2, .L355
	ldr	r3, .L355+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L350
.L356:
	.align	2, 0
.L355:
	.word	gText_RepelEffectsLingered
	.word	BagMenu_InitListsMenu
.L351:
	ldr	r1, .L357
	ldr	r2, .L357+0x4
	add	r0, r5, #0
	bl	DisplayItemMessageInBattlePyramid
.L350:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L358:
	.align	2, 0
.L357:
	.word	gText_RepelEffectsLingered
	.word	Task_CloseBattlePyramidBagMessage
.Lfe56:
	.size	 ItemUseOutOfBattle_Repel,.Lfe56-ItemUseOutOfBattle_Repel
	.align	2, 0
	.type	 Task_StartUseRepel,function
	.thumb_func
Task_StartUseRepel:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r4, r1, #0x3
	ldr	r5, .L361
	add	r1, r4, r5
	ldrh	r0, [r1, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L360	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x10]
	mov	r0, #0x2f
	bl	PlaySE
	add	r0, r5, #0
	sub	r0, r0, #0x8
	add	r0, r4, r0
	ldr	r1, .L361+0x4
	str	r1, [r0]
.L360:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	gTasks+0x8
	.word	Task_UseRepel
.Lfe57:
	.size	 Task_StartUseRepel,.Lfe57-Task_StartUseRepel
	.align	2, 0
	.type	 Task_UseRepel,function
	.thumb_func
Task_UseRepel:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L364	@cond_branch
	ldr	r4, .L367
	ldr	r0, .L367+0x4
	ldrh	r0, [r0]
	bl	ItemId_GetHoldEffectParam
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	VarSet
	bl	RemoveUsedItem
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L365	@cond_branch
	ldr	r2, .L367+0x8
	ldr	r3, .L367+0xc
	add	r0, r5, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L364
.L368:
	.align	2, 0
.L367:
	.word	0x4021
	.word	gSpecialVar_ItemId
	.word	gStringVar4
	.word	BagMenu_InitListsMenu
.L365:
	ldr	r1, .L369
	ldr	r2, .L369+0x4
	add	r0, r6, #0
	bl	DisplayItemMessageInBattlePyramid
.L364:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L370:
	.align	2, 0
.L369:
	.word	gStringVar4
	.word	Task_CloseBattlePyramidBagMessage
.Lfe58:
	.size	 Task_UseRepel,.Lfe58-Task_UseRepel
	.align	2, 0
	.globl	ItemUseOutOfBattle_Lure
	.type	 ItemUseOutOfBattle_Lure,function
	.thumb_func
ItemUseOutOfBattle_Lure:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L376
	bl	VarGet
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L372	@cond_branch
	ldr	r0, .L376+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L376+0x8
	str	r0, [r1]
	b	.L373
.L377:
	.align	2, 0
.L376:
	.word	0x404e
	.word	gTasks
	.word	Task_StartUseLure
.L372:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L374	@cond_branch
	ldr	r2, .L378
	ldr	r3, .L378+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L373
.L379:
	.align	2, 0
.L378:
	.word	gText_LureEffectsLingered
	.word	BagMenu_InitListsMenu
.L374:
	ldr	r1, .L380
	ldr	r2, .L380+0x4
	add	r0, r5, #0
	bl	DisplayItemMessageInBattlePyramid
.L373:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L381:
	.align	2, 0
.L380:
	.word	gText_LureEffectsLingered
	.word	Task_CloseBattlePyramidBagMessage
.Lfe59:
	.size	 ItemUseOutOfBattle_Lure,.Lfe59-ItemUseOutOfBattle_Lure
	.align	2, 0
	.type	 Task_StartUseLure,function
	.thumb_func
Task_StartUseLure:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r4, r1, #0x3
	ldr	r5, .L384
	add	r1, r4, r5
	ldrh	r0, [r1, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L383	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x10]
	mov	r0, #0x2f
	bl	PlaySE
	add	r0, r5, #0
	sub	r0, r0, #0x8
	add	r0, r4, r0
	ldr	r1, .L384+0x4
	str	r1, [r0]
.L383:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L385:
	.align	2, 0
.L384:
	.word	gTasks+0x8
	.word	Task_UseLure
.Lfe60:
	.size	 Task_StartUseLure,.Lfe60-Task_StartUseLure
	.align	2, 0
	.type	 Task_UseLure,function
	.thumb_func
Task_UseLure:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L387	@cond_branch
	ldr	r4, .L390
	ldr	r0, .L390+0x4
	ldrh	r0, [r0]
	bl	ItemId_GetHoldEffectParam
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	VarSet
	bl	RemoveUsedItem
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L388	@cond_branch
	ldr	r2, .L390+0x8
	ldr	r3, .L390+0xc
	add	r0, r5, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L387
.L391:
	.align	2, 0
.L390:
	.word	0x404e
	.word	gSpecialVar_ItemId
	.word	gStringVar4
	.word	BagMenu_InitListsMenu
.L388:
	ldr	r1, .L392
	ldr	r2, .L392+0x4
	add	r0, r6, #0
	bl	DisplayItemMessageInBattlePyramid
.L387:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L393:
	.align	2, 0
.L392:
	.word	gStringVar4
	.word	Task_CloseBattlePyramidBagMessage
.Lfe61:
	.size	 Task_UseLure,.Lfe61-Task_UseLure
	.align	2, 0
	.type	 Task_UsedBlackWhiteFlute,function
	.thumb_func
Task_UsedBlackWhiteFlute:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L398
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L395	@cond_branch
	mov	r0, #0x75
	bl	PlaySE
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L396	@cond_branch
	ldr	r2, .L398+0x4
	ldr	r3, .L398+0x8
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L395
.L399:
	.align	2, 0
.L398:
	.word	gTasks
	.word	gStringVar4
	.word	BagMenu_InitListsMenu
.L396:
	ldr	r1, .L400
	ldr	r2, .L400+0x4
	add	r0, r5, #0
	bl	DisplayItemMessageInBattlePyramid
.L395:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L401:
	.align	2, 0
.L400:
	.word	gStringVar4
	.word	Task_CloseBattlePyramidBagMessage
.Lfe62:
	.size	 Task_UsedBlackWhiteFlute,.Lfe62-Task_UsedBlackWhiteFlute
	.align	2, 0
	.globl	ItemUseOutOfBattle_BlackWhiteFlute
	.type	 ItemUseOutOfBattle_BlackWhiteFlute,function
	.thumb_func
ItemUseOutOfBattle_BlackWhiteFlute:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L405
	ldrh	r0, [r4]
	ldr	r1, .L405+0x4
	bl	CopyItemName
	ldrh	r0, [r4]
	cmp	r0, #0x3a
	bne	.L403	@cond_branch
	ldr	r0, .L405+0x8
	bl	FlagSet
	ldr	r0, .L405+0xc
	bl	FlagClear
	ldr	r0, .L405+0x10
	ldr	r1, .L405+0x14
	bl	StringExpandPlaceholders
	b	.L404
.L406:
	.align	2, 0
.L405:
	.word	gSpecialVar_ItemId
	.word	gStringVar2
	.word	0x8ad
	.word	0x8ae
	.word	gStringVar4
	.word	gText_UsedVar2WildLured
.L403:
	ldr	r0, .L407
	bl	FlagSet
	ldr	r0, .L407+0x4
	bl	FlagClear
	ldr	r0, .L407+0x8
	ldr	r1, .L407+0xc
	bl	StringExpandPlaceholders
.L404:
	ldr	r1, .L407+0x10
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	ldr	r1, .L407+0x14
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L408:
	.align	2, 0
.L407:
	.word	0x8ae
	.word	0x8ad
	.word	gStringVar4
	.word	gText_UsedVar2WildRepelled
	.word	gTasks
	.word	Task_UsedBlackWhiteFlute
.Lfe63:
	.size	 ItemUseOutOfBattle_BlackWhiteFlute,.Lfe63-ItemUseOutOfBattle_BlackWhiteFlute
	.align	2, 0
	.globl	Task_UseDigEscapeRopeOnField
	.type	 Task_UseDigEscapeRopeOnField,function
	.thumb_func
Task_UseDigEscapeRopeOnField:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ResetInitialPlayerAvatarState
	bl	StartEscapeRopeFieldEffect
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 Task_UseDigEscapeRopeOnField,.Lfe64-Task_UseDigEscapeRopeOnField
	.align	2, 0
	.type	 ItemUseOnFieldCB_EscapeRope,function
	.thumb_func
ItemUseOnFieldCB_EscapeRope:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Overworld_ResetStateAfterDigEscRope
	bl	RemoveUsedItem
	ldr	r1, .L411
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	ldr	r1, .L411+0x4
	ldr	r2, .L411+0x8
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
	pop	{r4}
	pop	{r0}
	bx	r0
.L412:
	.align	2, 0
.L411:
	.word	gTasks
	.word	gStringVar4
	.word	Task_UseDigEscapeRopeOnField
.Lfe65:
	.size	 ItemUseOnFieldCB_EscapeRope,.Lfe65-ItemUseOnFieldCB_EscapeRope
	.align	2, 0
	.globl	CanUseDigOrEscapeRopeOnCurMap
	.type	 CanUseDigOrEscapeRopeOnCurMap,function
	.thumb_func
CanUseDigOrEscapeRopeOnCurMap:
	push	{lr}
	ldr	r0, .L417
	ldrb	r1, [r0, #0x1a]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L414	@cond_branch
	mov	r0, #0x0
	b	.L416
.L418:
	.align	2, 0
.L417:
	.word	gMapHeader
.L414:
	mov	r0, #0x1
.L416:
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 CanUseDigOrEscapeRopeOnCurMap,.Lfe66-CanUseDigOrEscapeRopeOnCurMap
	.align	2, 0
	.globl	ItemUseOutOfBattle_EscapeRope
	.type	 ItemUseOutOfBattle_EscapeRope,function
	.thumb_func
ItemUseOutOfBattle_EscapeRope:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	CanUseDigOrEscapeRopeOnCurMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L420	@cond_branch
	ldr	r1, .L422
	ldr	r0, .L422+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L421
.L423:
	.align	2, 0
.L422:
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_EscapeRope
.L420:
	ldr	r0, .L424
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xe]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L421:
	pop	{r4}
	pop	{r0}
	bx	r0
.L425:
	.align	2, 0
.L424:
	.word	gTasks
.Lfe67:
	.size	 ItemUseOutOfBattle_EscapeRope,.Lfe67-ItemUseOutOfBattle_EscapeRope
	.align	2, 0
	.globl	ItemUseOutOfBattle_EvolutionStone
	.type	 ItemUseOutOfBattle_EvolutionStone,function
	.thumb_func
ItemUseOutOfBattle_EvolutionStone:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L427
	ldr	r1, .L427+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L428:
	.align	2, 0
.L427:
	.word	gItemUseCB
	.word	ItemUseCB_EvolutionStone
.Lfe68:
	.size	 ItemUseOutOfBattle_EvolutionStone,.Lfe68-ItemUseOutOfBattle_EvolutionStone
	.align	2, 0
	.globl	CanThrowBall
	.type	 CanThrowBall,function
	.thumb_func
CanThrowBall:
	push	{r4, lr}
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsBattlerAlive
	cmp	r0, #0
	beq	.L430	@cond_branch
	mov	r0, #0x3
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsBattlerAlive
	cmp	r0, #0
	beq	.L430	@cond_branch
	mov	r0, #0x1
	b	.L435
.L430:
	ldr	r4, .L436
	mov	r0, #0x2
	bl	GetBattlerAtPosition
	ldrb	r1, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L432	@cond_branch
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsBattlerAlive
	cmp	r0, #0
	beq	.L432	@cond_branch
	mov	r0, #0x2
	b	.L435
.L437:
	.align	2, 0
.L436:
	.word	gBattlerInMenuId
.L432:
	bl	IsPlayerPartyAndPokemonStorageFull
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L431	@cond_branch
	mov	r0, #0x0
	b	.L435
.L431:
	mov	r0, #0x3
.L435:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 CanThrowBall,.Lfe69-CanThrowBall
	.section .rodata
	.type	 sText_CantThrowPokeBall_TwoMons,object
sText_CantThrowPokeBall_TwoMons:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xe6
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xab
	.byte	0xfe
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xeb
	.byte	0xe3
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xdf
	.byte	0xd9
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_CantThrowPokeBall_TwoMons,55
	.type	 sText_CantThrowPokeBall,object
sText_CantThrowPokeBall:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xe6
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_CantThrowPokeBall,22
.text
	.align	2, 0
	.globl	ItemUseInBattle_PokeBall
	.type	 ItemUseInBattle_PokeBall,function
	.thumb_func
ItemUseInBattle_PokeBall:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	CanThrowBall
	cmp	r0, #0x1
	beq	.L444	@cond_branch
	cmp	r0, #0x1
	bcc	.L441	@cond_branch
	cmp	r0, #0x2
	beq	.L447	@cond_branch
	cmp	r0, #0x3
	beq	.L450	@cond_branch
.L441:
	ldr	r0, .L456
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L442	@cond_branch
	add	r0, r4, #0
	bl	Task_FadeAndCloseBagMenu
	b	.L439
.L457:
	.align	2, 0
.L456:
	.word	gSpecialVar_ItemId
.L442:
	ldr	r1, .L458
	b	.L454
.L459:
	.align	2, 0
.L458:
	.word	sText_CantThrowPokeBall
.L444:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L448	@cond_branch
	ldr	r2, .L460
	b	.L455
.L461:
	.align	2, 0
.L460:
	.word	sText_CantThrowPokeBall_TwoMons
.L447:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L448	@cond_branch
	ldr	r2, .L462
	b	.L455
.L463:
	.align	2, 0
.L462:
	.word	sText_CantThrowPokeBall_TwoMons
.L448:
	ldr	r1, .L464
.L454:
	ldr	r2, .L464+0x4
	add	r0, r4, #0
	bl	DisplayItemMessageInBattlePyramid
	b	.L439
.L465:
	.align	2, 0
.L464:
	.word	sText_CantThrowPokeBall_TwoMons
	.word	Task_CloseBattlePyramidBagMessage
.L450:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L451	@cond_branch
	ldr	r2, .L466
.L455:
	ldr	r3, .L466+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L439
.L467:
	.align	2, 0
.L466:
	.word	gText_BoxFull
	.word	BagMenu_InitListsMenu
.L451:
	ldr	r1, .L468
	ldr	r2, .L468+0x4
	add	r0, r4, #0
	bl	DisplayItemMessageInBattlePyramid
.L439:
	pop	{r4}
	pop	{r0}
	bx	r0
.L469:
	.align	2, 0
.L468:
	.word	gText_BoxFull
	.word	Task_CloseBattlePyramidBagMessage
.Lfe70:
	.size	 ItemUseInBattle_PokeBall,.Lfe70-ItemUseInBattle_PokeBall
	.align	2, 0
	.type	 Task_CloseStatIncreaseMessage,function
	.thumb_func
Task_CloseStatIncreaseMessage:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L474
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L471	@cond_branch
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L472	@cond_branch
	add	r0, r4, #0
	bl	Task_FadeAndCloseBagMenu
	b	.L471
.L475:
	.align	2, 0
.L474:
	.word	gMain
.L472:
	add	r0, r5, #0
	bl	CloseBattlePyramidBagAndSetCallback
.L471:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 Task_CloseStatIncreaseMessage,.Lfe71-Task_CloseStatIncreaseMessage
	.align	2, 0
	.type	 Task_UseStatIncreaseItem,function
	.thumb_func
Task_UseStatIncreaseItem:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	ldr	r0, .L480
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L477	@cond_branch
	mov	r0, #0x1
	bl	PlaySE
	ldr	r4, .L480+0x4
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L478	@cond_branch
	ldrh	r0, [r4]
	bl	UseStatIncreaseItem
	add	r2, r0, #0
	ldr	r3, .L480+0x8
	add	r0, r5, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L477
.L481:
	.align	2, 0
.L480:
	.word	gTasks
	.word	gSpecialVar_ItemId
	.word	Task_CloseStatIncreaseMessage
.L478:
	ldrh	r0, [r4]
	bl	UseStatIncreaseItem
	add	r1, r0, #0
	ldr	r2, .L482
	add	r0, r6, #0
	bl	DisplayItemMessageInBattlePyramid
.L477:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L483:
	.align	2, 0
.L482:
	.word	Task_CloseStatIncreaseMessage
.Lfe72:
	.size	 Task_UseStatIncreaseItem,.Lfe72-Task_UseStatIncreaseItem
	.align	2, 0
	.globl	ItemUseInBattle_StatIncrease
	.type	 ItemUseInBattle_StatIncrease,function
	.thumb_func
ItemUseInBattle_StatIncrease:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L489
	ldr	r0, .L489+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r2, [r0]
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L489+0x8
	add	r0, r0, r1
	ldr	r1, .L489+0xc
	ldrh	r1, [r1]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, #0x0
	bl	ExecuteTableBasedItemEffect
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L485	@cond_branch
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L486	@cond_branch
	ldr	r2, .L489+0x10
	ldr	r3, .L489+0x14
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L488
.L490:
	.align	2, 0
.L489:
	.word	gBattlerPartyIndexes
	.word	gBattlerInMenuId
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
	.word	gText_WontHaveEffect
	.word	BagMenu_InitListsMenu
.L486:
	ldr	r1, .L491
	ldr	r2, .L491+0x4
	add	r0, r4, #0
	bl	DisplayItemMessageInBattlePyramid
	b	.L488
.L492:
	.align	2, 0
.L491:
	.word	gText_WontHaveEffect
	.word	Task_CloseBattlePyramidBagMessage
.L485:
	ldr	r0, .L493
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L493+0x4
	str	r0, [r1]
	strh	r2, [r1, #0x18]
.L488:
	pop	{r4}
	pop	{r0}
	bx	r0
.L494:
	.align	2, 0
.L493:
	.word	gTasks
	.word	Task_UseStatIncreaseItem
.Lfe73:
	.size	 ItemUseInBattle_StatIncrease,.Lfe73-ItemUseInBattle_StatIncrease
	.align	2, 0
	.type	 ItemUseInBattle_ShowPartyMenu,function
	.thumb_func
ItemUseInBattle_ShowPartyMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L496	@cond_branch
	ldr	r0, .L498
	ldr	r1, [r0]
	ldr	r0, .L498+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	Task_FadeAndCloseBagMenu
	b	.L497
.L499:
	.align	2, 0
.L498:
	.word	gBagMenu
	.word	ChooseMonForInBattleItem
.L496:
	ldr	r0, .L500
	ldr	r1, [r0]
	ldr	r0, .L500+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	CloseBattlePyramidBagAndSetCallback
.L497:
	pop	{r4}
	pop	{r0}
	bx	r0
.L501:
	.align	2, 0
.L500:
	.word	gPyramidBagResources
	.word	ChooseMonForInBattleItem
.Lfe74:
	.size	 ItemUseInBattle_ShowPartyMenu,.Lfe74-ItemUseInBattle_ShowPartyMenu
	.align	2, 0
	.globl	ItemUseInBattle_Medicine
	.type	 ItemUseInBattle_Medicine,function
	.thumb_func
ItemUseInBattle_Medicine:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L503
	ldr	r1, .L503+0x4
	str	r1, [r2]
	bl	ItemUseInBattle_ShowPartyMenu
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	gItemUseCB
	.word	ItemUseCB_Medicine
.Lfe75:
	.size	 ItemUseInBattle_Medicine,.Lfe75-ItemUseInBattle_Medicine
	.align	2, 0
	.globl	ItemUseInBattle_SacredAsh
	.type	 ItemUseInBattle_SacredAsh,function
	.thumb_func
ItemUseInBattle_SacredAsh:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L506
	ldr	r1, .L506+0x4
	str	r1, [r2]
	bl	ItemUseInBattle_ShowPartyMenu
	pop	{r0}
	bx	r0
.L507:
	.align	2, 0
.L506:
	.word	gItemUseCB
	.word	ItemUseCB_SacredAsh
.Lfe76:
	.size	 ItemUseInBattle_SacredAsh,.Lfe76-ItemUseInBattle_SacredAsh
	.align	2, 0
	.globl	ItemUseInBattle_PPRecovery
	.type	 ItemUseInBattle_PPRecovery,function
	.thumb_func
ItemUseInBattle_PPRecovery:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L509
	ldr	r1, .L509+0x4
	str	r1, [r2]
	bl	ItemUseInBattle_ShowPartyMenu
	pop	{r0}
	bx	r0
.L510:
	.align	2, 0
.L509:
	.word	gItemUseCB
	.word	ItemUseCB_PPRecovery
.Lfe77:
	.size	 ItemUseInBattle_PPRecovery,.Lfe77-ItemUseInBattle_PPRecovery
	.align	2, 0
	.globl	ItemUseInBattle_Escape
	.type	 ItemUseInBattle_Escape,function
	.thumb_func
ItemUseInBattle_Escape:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L516
	ldr	r0, [r0]
	mov	r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L512	@cond_branch
	bl	RemoveUsedItem
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L513	@cond_branch
	ldr	r2, .L516+0x4
	ldr	r3, .L516+0x8
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L515
.L517:
	.align	2, 0
.L516:
	.word	gBattleTypeFlags
	.word	gStringVar4
	.word	Task_FadeAndCloseBagMenu
.L513:
	ldr	r1, .L518
	ldr	r2, .L518+0x4
	add	r0, r4, #0
	bl	DisplayItemMessageInBattlePyramid
	b	.L515
.L519:
	.align	2, 0
.L518:
	.word	gStringVar4
	.word	CloseBattlePyramidBagAndSetCallback
.L512:
	ldr	r0, .L520
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xe]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L515:
	pop	{r4}
	pop	{r0}
	bx	r0
.L521:
	.align	2, 0
.L520:
	.word	gTasks
.Lfe78:
	.size	 ItemUseInBattle_Escape,.Lfe78-ItemUseInBattle_Escape
	.align	2, 0
	.globl	ItemUseOutOfBattle_EnigmaBerry
	.type	 ItemUseOutOfBattle_EnigmaBerry,function
	.thumb_func
ItemUseOutOfBattle_EnigmaBerry:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L544
	ldrh	r0, [r0]
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x14
	bls	.LCB4381
	b	.L542	@long jump
.LCB4381:
	lsl	r0, r0, #0x2
	ldr	r1, .L544+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L545:
	.align	2, 0
.L544:
	.word	gSpecialVar_ItemId
	.word	.L543
	.align	2, 0
	.align	2, 0
.L543:
	.word	.L538
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L542
	.word	.L542
	.word	.L537
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L542
	.word	.L540
	.word	.L540
	.word	.L541
.L536:
	ldr	r0, .L546
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x10]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_Medicine
	b	.L523
.L547:
	.align	2, 0
.L546:
	.word	gTasks
.L537:
	ldr	r0, .L548
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x10]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_SacredAsh
	b	.L523
.L549:
	.align	2, 0
.L548:
	.word	gTasks
.L538:
	ldr	r0, .L550
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x10]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_RareCandy
	b	.L523
.L551:
	.align	2, 0
.L550:
	.word	gTasks
.L540:
	ldr	r0, .L552
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x10]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_PPUp
	b	.L523
.L553:
	.align	2, 0
.L552:
	.word	gTasks
.L541:
	ldr	r0, .L554
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x10]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_PPRecovery
	b	.L523
.L555:
	.align	2, 0
.L554:
	.word	gTasks
.L542:
	ldr	r0, .L556
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x4
	strh	r0, [r1, #0x10]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_CannotUse
.L523:
	pop	{r4}
	pop	{r0}
	bx	r0
.L557:
	.align	2, 0
.L556:
	.word	gTasks
.Lfe79:
	.size	 ItemUseOutOfBattle_EnigmaBerry,.Lfe79-ItemUseOutOfBattle_EnigmaBerry
	.align	2, 0
	.globl	ItemUseInBattle_EnigmaBerry
	.type	 ItemUseInBattle_EnigmaBerry,function
	.thumb_func
ItemUseInBattle_EnigmaBerry:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L573
	ldrh	r0, [r0]
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x15
	bhi	.L571	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L573+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L574:
	.align	2, 0
.L573:
	.word	gSpecialVar_ItemId
	.word	.L572
	.align	2, 0
	.align	2, 0
.L572:
	.word	.L560
	.word	.L571
	.word	.L569
	.word	.L569
	.word	.L569
	.word	.L569
	.word	.L569
	.word	.L569
	.word	.L569
	.word	.L569
	.word	.L571
	.word	.L569
	.word	.L571
	.word	.L571
	.word	.L571
	.word	.L571
	.word	.L571
	.word	.L571
	.word	.L571
	.word	.L571
	.word	.L571
	.word	.L570
.L560:
	add	r0, r4, #0
	bl	ItemUseInBattle_StatIncrease
	b	.L559
.L569:
	add	r0, r4, #0
	bl	ItemUseInBattle_Medicine
	b	.L559
.L570:
	add	r0, r4, #0
	bl	ItemUseInBattle_PPRecovery
	b	.L559
.L571:
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_CannotUse
.L559:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 ItemUseInBattle_EnigmaBerry,.Lfe80-ItemUseInBattle_EnigmaBerry
	.align	2, 0
	.globl	ItemUseOutOfBattle_CannotUse
	.type	 ItemUseOutOfBattle_CannotUse,function
	.thumb_func
ItemUseOutOfBattle_CannotUse:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L576
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r1, [r1, #0xe]
	bl	DisplayDadsAdviceCannotUseItemMessage
	pop	{r0}
	bx	r0
.L577:
	.align	2, 0
.L576:
	.word	gTasks
.Lfe81:
	.size	 ItemUseOutOfBattle_CannotUse,.Lfe81-ItemUseOutOfBattle_CannotUse
	.align	2, 0
	.globl	ItemUseOutOfBattle_ExpShare
	.type	 ItemUseOutOfBattle_ExpShare,function
	.thumb_func
ItemUseOutOfBattle_ExpShare:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L586
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L579	@cond_branch
	mov	r0, #0x5b
	bl	PlaySE
	ldr	r0, .L586+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0xc
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L580	@cond_branch
	ldr	r1, .L586+0x8
	b	.L585
.L587:
	.align	2, 0
.L586:
	.word	gSaveBlock2Ptr
	.word	gTasks
	.word	gOtherText_ExpShareOn
.L580:
	ldr	r2, .L588
	ldr	r3, .L588+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
	b	.L582
.L589:
	.align	2, 0
.L588:
	.word	gOtherText_ExpShareOn
	.word	BagMenu_InitListsMenu
.L579:
	mov	r0, #0x3
	bl	PlaySE
	ldr	r0, .L590
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0xc
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L583	@cond_branch
	ldr	r1, .L590+0x4
.L585:
	ldr	r2, .L590+0x8
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
	b	.L582
.L591:
	.align	2, 0
.L590:
	.word	gTasks
	.word	gOtherText_ExpShareOff
	.word	Task_CloseCantUseKeyItemMessage
.L583:
	ldr	r2, .L592
	ldr	r3, .L592+0x4
	add	r0, r5, #0
	mov	r1, #0x1
	bl	DisplayItemMessage
.L582:
	ldr	r0, .L592+0x8
	ldr	r3, [r0]
	ldrb	r2, [r3, #0x15]
	lsr	r1, r2, #0x5
	mov	r0, #0x1
	eor	r1, r1, r0
	and	r1, r1, r0
	lsl	r1, r1, #0x5
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x15]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L593:
	.align	2, 0
.L592:
	.word	gOtherText_ExpShareOff
	.word	BagMenu_InitListsMenu
	.word	gSaveBlock2Ptr
.Lfe82:
	.size	 ItemUseOutOfBattle_ExpShare,.Lfe82-ItemUseOutOfBattle_ExpShare
	.align	2, 0
	.globl	ItemUseOutOfBattle_EonFlute
	.type	 ItemUseOutOfBattle_EonFlute,function
	.thumb_func
ItemUseOutOfBattle_EonFlute:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L597
	add	r5, r0, r1
	ldr	r0, .L597+0x4
	ldrb	r0, [r0, #0x17]
	bl	Overworld_MapTypeAllowsTeleportAndFly
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L595	@cond_branch
	ldr	r1, .L597+0x8
	ldr	r0, .L597+0xc
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L596
.L598:
	.align	2, 0
.L597:
	.word	gTasks+0x8
	.word	gMapHeader
	.word	sItemUseOnFieldCB
	.word	ItemUseOnFieldCB_EonFlute
.L595:
	ldrb	r1, [r5, #0x6]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L596:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe83:
	.size	 ItemUseOutOfBattle_EonFlute,.Lfe83-ItemUseOutOfBattle_EonFlute
	.align	2, 0
	.globl	ItemUseOutOfBattle_SootSack
	.type	 ItemUseOutOfBattle_SootSack,function
	.thumb_func
ItemUseOutOfBattle_SootSack:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L602
	bl	GetAshCount
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L602+0x4
	ldr	r1, .L602+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r1, .L602+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xe
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	bne	.L600	@cond_branch
	ldr	r3, .L602+0x10
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	DisplayItemMessage
	b	.L601
.L603:
	.align	2, 0
.L602:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_AshQty
	.word	gTasks
	.word	BagMenu_InitListsMenu
.L600:
	ldr	r2, .L604
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DisplayItemMessageOnField
.L601:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L605:
	.align	2, 0
.L604:
	.word	Task_CloseCantUseKeyItemMessage
.Lfe84:
	.size	 ItemUseOutOfBattle_SootSack,.Lfe84-ItemUseOutOfBattle_SootSack
	.align	2, 0
	.globl	GetAshCount
	.type	 GetAshCount,function
	.thumb_func
GetAshCount:
	push	{lr}
	ldr	r0, .L607
	bl	GetVarPointer
	ldrh	r0, [r0]
	pop	{r1}
	bx	r1
.L608:
	.align	2, 0
.L607:
	.word	0x4048
.Lfe85:
	.size	 GetAshCount,.Lfe85-GetAshCount
	.align	2, 0
	.globl	ItemUseOutOfBattle_Mints
	.type	 ItemUseOutOfBattle_Mints,function
	.thumb_func
ItemUseOutOfBattle_Mints:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L610
	ldr	r1, .L610+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L611:
	.align	2, 0
.L610:
	.word	gItemUseCB
	.word	ItemUseCB_Mints
.Lfe86:
	.size	 ItemUseOutOfBattle_Mints,.Lfe86-ItemUseOutOfBattle_Mints
	.align	2, 0
	.globl	ItemUseOutOfBattle_Seal
	.type	 ItemUseOutOfBattle_Seal,function
	.thumb_func
ItemUseOutOfBattle_Seal:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L613
	ldr	r1, .L613+0x4
	str	r1, [r2]
	bl	SetUpItemUseCallback
	pop	{r0}
	bx	r0
.L614:
	.align	2, 0
.L613:
	.word	gItemUseCB
	.word	ItemUseCB_Seal
.Lfe87:
	.size	 ItemUseOutOfBattle_Seal,.Lfe87-ItemUseOutOfBattle_Seal
.text
	.align	2, 0

