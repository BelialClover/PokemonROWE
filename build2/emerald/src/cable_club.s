@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sWindowTemplate_LinkPlayerCount,object
	.size	 sWindowTemplate_LinkPlayerCount,8
sWindowTemplate_LinkPlayerCount:
	.byte	0x0
	.byte	0x10
	.byte	0xb
	.byte	0xb
	.byte	0x2
	.byte	0xf
	.short	0x125
	.align	2, 0
	.type	 sTrainerCardColorNames,object
sTrainerCardColorNames:
	.word	gText_BronzeCard
	.word	gText_CopperCard
	.word	gText_SilverCard
	.word	gText_GoldCard
	.size	 sTrainerCardColorNames,16
.text
	.align	2, 0
	.type	 CreateLinkupTask,function
	.thumb_func
CreateLinkupTask:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r4, .L4
	add	r0, r4, #0
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L3	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L4+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r6, [r1, #0xa]
	strh	r5, [r1, #0xc]
.L3:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	Task_LinkupStart
	.word	gTasks
.Lfe1:
	.size	 CreateLinkupTask,.Lfe1-CreateLinkupTask
	.align	2, 0
	.type	 PrintNumPlayersInLink,function
	.thumb_func
PrintNumPlayersInLink:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L7
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	ldr	r5, .L7+0x4
	ldr	r1, .L7+0x8
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x58
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_NumPlayerLink
.Lfe2:
	.size	 PrintNumPlayersInLink,.Lfe2-PrintNumPlayersInLink
	.align	2, 0
	.type	 ClearLinkPlayerCountWindow,function
	.thumb_func
ClearLinkPlayerCountWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 ClearLinkPlayerCountWindow,.Lfe3-ClearLinkPlayerCountWindow
	.align	2, 0
	.type	 UpdateLinkPlayerCountDisplay,function
	.thumb_func
UpdateLinkPlayerCountDisplay:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L14
	add	r4, r1, r0
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	beq	.L11	@cond_branch
	cmp	r5, #0x1
	bhi	.L12	@cond_branch
	ldrh	r0, [r4, #0xa]
	bl	ClearLinkPlayerCountWindow
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	gTasks+0x8
.L12:
	ldrh	r0, [r4, #0xa]
	add	r1, r5, #0
	bl	PrintNumPlayersInLink
.L13:
	strh	r5, [r4, #0x6]
.L11:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 UpdateLinkPlayerCountDisplay,.Lfe4-UpdateLinkPlayerCountDisplay
	.align	2, 0
	.type	 ExchangeDataAndGetLinkupStatus,function
	.thumb_func
ExchangeDataAndGetLinkupStatus:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	GetLinkPlayerDataExchangeStatusTimed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x6
	bhi	.L25	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L28
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L29:
	.align	2, 0
.L28:
	.word	.L26
	.align	2, 0
	.align	2, 0
.L26:
	.word	.L18
	.word	.L25
	.word	.L19
	.word	.L20
	.word	.L21
	.word	.L22
	.word	.L23
.L18:
	mov	r0, #0x1
	b	.L27
.L19:
	mov	r0, #0x3
	b	.L27
.L20:
	mov	r0, #0x7
	b	.L27
.L21:
	mov	r0, #0x9
	b	.L27
.L22:
	ldr	r4, .L30
	bl	GetLinkPlayerCount_2
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	b	.L27
.L31:
	.align	2, 0
.L30:
	.word	gStringVar1
.L23:
	mov	r0, #0xa
	b	.L27
.L25:
	mov	r0, #0x0
.L27:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 ExchangeDataAndGetLinkupStatus,.Lfe5-ExchangeDataAndGetLinkupStatus
	.align	2, 0
	.type	 CheckLinkErrored,function
	.thumb_func
CheckLinkErrored:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	HasLinkErrorOccurred
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L33	@cond_branch
	mov	r0, #0x0
	b	.L34
.L33:
	ldr	r0, .L35
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L35+0x4
	str	r0, [r1]
	mov	r0, #0x1
.L34:
	pop	{r4}
	pop	{r1}
	bx	r1
.L36:
	.align	2, 0
.L35:
	.word	gTasks
	.word	Task_LinkupConnectionError
.Lfe6:
	.size	 CheckLinkErrored,.Lfe6-CheckLinkErrored
	.align	2, 0
	.type	 CheckLinkCanceledBeforeConnection,function
	.thumb_func
CheckLinkCanceledBeforeConnection:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L40
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L38	@cond_branch
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L38	@cond_branch
	ldr	r0, .L40+0x4
	strh	r1, [r0]
	ldr	r1, .L40+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L40+0xc
	str	r1, [r0]
	mov	r0, #0x1
	b	.L39
.L41:
	.align	2, 0
.L40:
	.word	gMain
	.word	gLinkType
	.word	gTasks
	.word	Task_LinkupFailed
.L38:
	mov	r0, #0x0
.L39:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 CheckLinkCanceledBeforeConnection,.Lfe7-CheckLinkCanceledBeforeConnection
	.align	2, 0
	.type	 CheckLinkCanceled,function
	.thumb_func
CheckLinkCanceled:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L43	@cond_branch
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
.L43:
	ldr	r0, .L46
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L44	@cond_branch
	mov	r0, #0x0
	b	.L45
.L47:
	.align	2, 0
.L46:
	.word	gMain
.L44:
	ldr	r1, .L48
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L48+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L48+0x8
	str	r1, [r0]
	mov	r0, #0x1
.L45:
	pop	{r4}
	pop	{r1}
	bx	r1
.L49:
	.align	2, 0
.L48:
	.word	gLinkType
	.word	gTasks
	.word	Task_LinkupFailed
.Lfe8:
	.size	 CheckLinkCanceled,.Lfe8-CheckLinkCanceled
	.align	2, 0
	.type	 sub_80B25CC,function
	.thumb_func
sub_80B25CC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetSioMultiSI
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L51	@cond_branch
	mov	r0, #0x0
	b	.L52
.L51:
	ldr	r0, .L53
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L53+0x4
	str	r0, [r1]
	mov	r0, #0x1
.L52:
	pop	{r4}
	pop	{r1}
	bx	r1
.L54:
	.align	2, 0
.L53:
	.word	gTasks
	.word	Task_LinkupConnectionError
.Lfe9:
	.size	 sub_80B25CC,.Lfe9-sub_80B25CC
	.align	2, 0
	.type	 sub_80B2600,function
	.thumb_func
sub_80B2600:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L57
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L56	@cond_branch
	mov	r0, #0x2
	bl	SendBlockRequest
	add	r0, r4, #0
	bl	DestroyTask
.L56:
	pop	{r4}
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	gTasks
.Lfe10:
	.size	 sub_80B2600,.Lfe10-sub_80B2600
	.align	2, 0
	.type	 Task_LinkupStart,function
	.thumb_func
Task_LinkupStart:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L63
	add	r4, r1, r0
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	cmp	r2, #0
	bne	.L60	@cond_branch
	bl	OpenLinkTimed
	bl	ResetLinkPlayerCount
	bl	ResetLinkPlayers
	ldr	r0, .L63+0x4
	bl	AddWindow
	strh	r0, [r4, #0xa]
	b	.L61
.L64:
	.align	2, 0
.L63:
	.word	gTasks+0x8
	.word	sWindowTemplate_LinkPlayerCount
.L60:
	cmp	r2, #0x9
	ble	.L61	@cond_branch
	sub	r0, r0, #0x8
	add	r0, r1, r0
	ldr	r1, .L65
	str	r1, [r0]
.L61:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	Task_LinkupAwaitConnection
.Lfe11:
	.size	 Task_LinkupStart,.Lfe11-Task_LinkupStart
	.align	2, 0
	.type	 Task_LinkupAwaitConnection,function
	.thumb_func
Task_LinkupAwaitConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L67	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkCanceled
	cmp	r0, #0x1
	beq	.L67	@cond_branch
	cmp	r5, #0x1
	bls	.L67	@cond_branch
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
	ldr	r1, .L73
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x0
	strh	r0, [r4, #0xe]
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L70	@cond_branch
	mov	r0, #0x15
	bl	PlaySE
	ldr	r0, .L73+0x4
	bl	ShowFieldAutoScrollMessage
	ldr	r0, .L73+0x8
	b	.L72
.L74:
	.align	2, 0
.L73:
	.word	gTasks
	.word	gText_ConfirmLinkWhenPlayersReady
	.word	Task_LinkupConfirmWhenReady
.L70:
	mov	r0, #0x16
	bl	PlaySE
	ldr	r0, .L75
	bl	ShowFieldAutoScrollMessage
	ldr	r0, .L75+0x4
.L72:
	str	r0, [r4]
.L67:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gText_AwaitingLinkup
	.word	Task_LinkupExchangeDataWithLeader
.Lfe12:
	.size	 Task_LinkupAwaitConnection,.Lfe12-Task_LinkupAwaitConnection
	.align	2, 0
	.type	 Task_LinkupConfirmWhenReady,function
	.thumb_func
Task_LinkupConfirmWhenReady:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	add	r0, r4, #0
	bl	sub_80B25CC
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	bl	GetFieldMessageBoxMode
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L77	@cond_branch
	ldr	r0, .L81
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	strh	r2, [r1, #0xe]
	ldr	r0, .L81+0x4
	str	r0, [r1]
.L77:
	pop	{r4}
	pop	{r0}
	bx	r0
.L82:
	.align	2, 0
.L81:
	.word	gTasks
	.word	Task_LinkupAwaitConfirmation
.Lfe13:
	.size	 Task_LinkupConfirmWhenReady,.Lfe13-Task_LinkupConfirmWhenReady
	.align	2, 0
	.type	 Task_LinkupAwaitConfirmation,function
	.thumb_func
Task_LinkupAwaitConfirmation:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	mov	r8, r0
	ldr	r0, .L88
	mov	r9, r0
	mov	r7, r8
	add	r7, r7, r9
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L83	@cond_branch
	add	r0, r4, #0
	bl	sub_80B25CC
	cmp	r0, #0x1
	beq	.L83	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L83	@cond_branch
	add	r6, r5, #0
	add	r0, r4, #0
	add	r1, r6, #0
	bl	UpdateLinkPlayerCountDisplay
	ldr	r0, .L88+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L83	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	cmp	r5, r0
	blt	.L83	@cond_branch
	add	r0, r6, #0
	bl	SaveLinkPlayers
	ldrh	r0, [r7, #0xa]
	bl	ClearLinkPlayerCountWindow
	ldr	r0, .L88+0x8
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L88+0xc
	bl	ShowFieldAutoScrollMessage
	mov	r0, r9
	sub	r0, r0, #0x8
	add	r0, r0, r8
	ldr	r1, .L88+0x10
	str	r1, [r0]
.L83:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gTasks+0x8
	.word	gMain
	.word	gStringVar1
	.word	gText_ConfirmStartLinkWithXPlayers
	.word	Task_LinkupTryConfirmation
.Lfe14:
	.size	 Task_LinkupAwaitConfirmation,.Lfe14-Task_LinkupAwaitConfirmation
	.align	2, 0
	.type	 Task_LinkupTryConfirmation,function
	.thumb_func
Task_LinkupTryConfirmation:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	add	r0, r5, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L90	@cond_branch
	add	r0, r5, #0
	bl	sub_80B25CC
	cmp	r0, #0x1
	beq	.L90	@cond_branch
	add	r0, r5, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L90	@cond_branch
	bl	GetFieldMessageBoxMode
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L90	@cond_branch
	bl	GetSavedPlayerCount
	add	r4, r0, #0
	bl	GetLinkPlayerCount_2
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L99	@cond_branch
	ldr	r0, .L100
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L96	@cond_branch
.L99:
	ldr	r0, .L100+0x4
	bl	ShowFieldAutoScrollMessage
	ldr	r1, .L100+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L100+0xc
	str	r1, [r0]
	b	.L90
.L101:
	.align	2, 0
.L100:
	.word	gMain
	.word	gText_ConfirmLinkWhenPlayersReady
	.word	gTasks
	.word	Task_LinkupConfirmWhenReady
.L96:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L90	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	CheckShouldAdvanceLinkState
	ldr	r0, .L102
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L102+0x4
	str	r0, [r1]
.L90:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L103:
	.align	2, 0
.L102:
	.word	gTasks
	.word	Task_LinkupConfirm
.Lfe15:
	.size	 Task_LinkupTryConfirmation,.Lfe15-Task_LinkupTryConfirmation
	.align	2, 0
	.type	 Task_LinkupConfirm,function
	.thumb_func
Task_LinkupConfirm:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L111
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldrb	r7, [r5, #0xa]
	ldrb	r6, [r5, #0xc]
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L104	@cond_branch
	add	r0, r4, #0
	bl	TryLinkTimeout
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L104	@cond_branch
	bl	GetLinkPlayerCount_2
	add	r4, r0, #0
	bl	GetSavedPlayerCount
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.L107	@cond_branch
	ldr	r0, .L111+0x4
	b	.L110
.L112:
	.align	2, 0
.L111:
	.word	gTasks
	.word	Task_LinkupConnectionError
.L107:
	ldr	r4, .L113
	add	r0, r7, #0
	add	r1, r6, #0
	bl	ExchangeDataAndGetLinkupStatus
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L104	@cond_branch
	ldr	r0, .L113+0x4
.L110:
	str	r0, [r5]
.L104:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	gSpecialVar_Result
	.word	Task_LinkupCheckStatusAfterConfirm
.Lfe16:
	.size	 Task_LinkupConfirm,.Lfe16-Task_LinkupConfirm
	.align	2, 0
	.type	 Task_LinkupExchangeDataWithLeader,function
	.thumb_func
Task_LinkupExchangeDataWithLeader:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L125
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r7, r0, r1
	ldrb	r6, [r7, #0xa]
	ldrb	r5, [r7, #0xc]
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L115	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L115	@cond_branch
	ldr	r4, .L125+0x4
	add	r0, r6, #0
	add	r1, r5, #0
	bl	ExchangeDataAndGetLinkupStatus
	add	r1, r0, #0
	strh	r1, [r4]
	lsl	r0, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	beq	.L115	@cond_branch
	sub	r0, r1, #0x3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L119	@cond_branch
	bl	SetCloseLinkCallback
	bl	HideFieldMessageBox
	ldr	r0, .L125+0x8
	b	.L124
.L126:
	.align	2, 0
.L125:
	.word	gTasks
	.word	gSpecialVar_Result
	.word	Task_StopLinkup
.L119:
	cmp	r2, #0x7
	beq	.L122	@cond_branch
	cmp	r2, #0x9
	bne	.L121	@cond_branch
.L122:
	bl	CloseLink
	bl	HideFieldMessageBox
	ldr	r0, .L127
	b	.L124
.L128:
	.align	2, 0
.L127:
	.word	Task_StopLinkup
.L121:
	bl	GetLinkPlayerCount_2
	ldr	r4, .L129
	strb	r0, [r4]
	bl	GetMultiplayerId
	ldr	r1, .L129+0x4
	strb	r0, [r1]
	ldrb	r0, [r4]
	bl	SaveLinkPlayers
	ldr	r4, .L129+0x8
	add	r0, r4, #0
	bl	TrainerCard_GenerateCardForPlayer
	ldr	r0, .L129+0xc
	mov	r8, r0
	ldrb	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L129+0x10
	add	r0, r0, r5
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r4, #0
	add	r1, r1, #0x54
	strh	r0, [r1]
	mov	r1, r8
	ldrb	r0, [r1, #0x1]
	mul	r0, r0, r6
	add	r0, r0, r5
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r4, r4, #0x56
	strh	r0, [r4]
	ldr	r0, .L129+0x14
.L124:
	str	r0, [r7]
.L115:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L130:
	.align	2, 0
.L129:
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
	.word	gBlockSendBuffer
	.word	gSelectedOrderFromParty
	.word	gPlayerParty+-0x64
	.word	Task_LinkupAwaitTrainerCardData
.Lfe17:
	.size	 Task_LinkupExchangeDataWithLeader,.Lfe17-Task_LinkupExchangeDataWithLeader
	.align	2, 0
	.type	 Task_LinkupCheckStatusAfterConfirm,function
	.thumb_func
Task_LinkupCheckStatusAfterConfirm:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r7, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L131	@cond_branch
	ldr	r0, .L143
	ldrh	r0, [r0]
	cmp	r0, #0x4
	bne	.L133	@cond_branch
	bl	Link_AnyPartnersPlayingRubyOrSapphire
	cmp	r0, #0
	bne	.L140	@cond_branch
	bl	SetCloseLinkCallback
	b	.L142
.L144:
	.align	2, 0
.L143:
	.word	gSpecialVar_Result
.L133:
	cmp	r0, #0x3
	bne	.L137	@cond_branch
	bl	SetCloseLinkCallback
	b	.L142
.L137:
	cmp	r0, #0x7
	beq	.L140	@cond_branch
	cmp	r0, #0x9
	bne	.L139	@cond_branch
.L140:
	bl	CloseLink
.L142:
	bl	HideFieldMessageBox
	ldr	r0, .L145
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L145+0x4
	str	r0, [r1]
	b	.L131
.L146:
	.align	2, 0
.L145:
	.word	gTasks
	.word	Task_StopLinkup
.L139:
	bl	GetLinkPlayerCount_2
	ldr	r4, .L147
	strb	r0, [r4]
	bl	GetMultiplayerId
	ldr	r1, .L147+0x4
	strb	r0, [r1]
	ldrb	r0, [r4]
	bl	SaveLinkPlayers
	ldr	r4, .L147+0x8
	add	r0, r4, #0
	bl	TrainerCard_GenerateCardForPlayer
	ldr	r0, .L147+0xc
	mov	r8, r0
	ldrb	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L147+0x10
	add	r0, r0, r5
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r4, #0
	add	r1, r1, #0x54
	strh	r0, [r1]
	mov	r1, r8
	ldrb	r0, [r1, #0x1]
	mul	r0, r0, r6
	add	r0, r0, r5
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r4, r4, #0x56
	strh	r0, [r4]
	ldr	r1, .L147+0x14
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L147+0x18
	str	r1, [r0]
	mov	r0, #0x2
	bl	SendBlockRequest
.L131:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L148:
	.align	2, 0
.L147:
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
	.word	gBlockSendBuffer
	.word	gSelectedOrderFromParty
	.word	gPlayerParty+-0x64
	.word	gTasks
	.word	Task_LinkupAwaitTrainerCardData
.Lfe18:
	.size	 Task_LinkupCheckStatusAfterConfirm,.Lfe18-Task_LinkupCheckStatusAfterConfirm
	.align	2, 0
	.globl	AreBattleTowerLinkSpeciesSame
	.type	 AreBattleTowerLinkSpeciesSame,function
	.thumb_func
AreBattleTowerLinkSpeciesSame:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	str	r0, [sp]
	str	r1, [sp, #0x4]
	mov	r2, #0x0
	mov	r7, #0x0
	ldr	r1, .L163
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r1, .L163+0x4
	mov	r0, #0x1
	neg	r0, r0
	strb	r0, [r1]
	mov	r1, #0x0
	mov	r0, #0xb
	mov	sl, r0
	ldr	r0, .L163+0x8
	mov	r9, r0
.L153:
	lsl	r0, r1, #0x1
	add	r1, r1, #0x1
	mov	r8, r1
	ldr	r1, [sp]
	add	r4, r0, r1
	ldr	r5, [sp, #0x4]
	mov	r6, #0x1
.L157:
	ldrh	r0, [r4]
	ldrh	r1, [r5]
	cmp	r0, r1
	bne	.L156	@cond_branch
	cmp	r7, #0
	bne	.L159	@cond_branch
	mov	r1, sl
	mul	r1, r1, r0
	add	r1, r1, r9
	ldr	r0, .L163
	bl	StringCopy
	mov	r2, #0x1
.L159:
	cmp	r7, #0x1
	bne	.L160	@cond_branch
	ldrh	r0, [r4]
	mov	r1, sl
	mul	r1, r1, r0
	add	r1, r1, r9
	ldr	r0, .L163+0x4
	bl	StringCopy
	mov	r2, #0x1
.L160:
	add	r7, r7, #0x1
.L156:
	add	r5, r5, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L157	@cond_branch
	mov	r1, r8
	cmp	r1, #0x1
	ble	.L153	@cond_branch
	ldr	r0, .L163+0xc
	strh	r7, [r0]
	add	r0, r2, #0
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L164:
	.align	2, 0
.L163:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gSpecialVar_0x8005
.Lfe19:
	.size	 AreBattleTowerLinkSpeciesSame,.Lfe19-AreBattleTowerLinkSpeciesSame
	.align	2, 0
	.type	 FinishLinkup,function
	.thumb_func
FinishLinkup:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L173
	ldrh	r0, [r5]
	cmp	r0, #0x1
	bne	.L166	@cond_branch
	ldr	r0, .L173+0x4
	ldrh	r2, [r0]
	ldr	r0, .L173+0x8
	cmp	r2, r0
	beq	.L168	@cond_branch
	add	r0, r0, #0x11
	cmp	r2, r0
	bne	.L167	@cond_branch
.L168:
	add	r0, r1, #0
	add	r0, r0, #0x54
	add	r1, r1, #0xb8
	bl	AreBattleTowerLinkSpeciesSame
	cmp	r0, #0
	beq	.L169	@cond_branch
	mov	r0, #0xb
	strh	r0, [r5]
	bl	SetCloseLinkCallback
	ldr	r1, .L173+0xc
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L173+0x10
	str	r1, [r0]
	b	.L172
.L174:
	.align	2, 0
.L173:
	.word	gTrainerCards
	.word	gLinkType
	.word	0x2266
	.word	gTasks
	.word	Task_StopLinkup
.L169:
.L167:
	ldr	r1, .L175
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	EnableBothScriptContexts
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	b	.L172
.L176:
	.align	2, 0
.L175:
	.word	gTasks
.L166:
	bl	SetCloseLinkCallback
	ldr	r0, .L177
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L177+0x4
	str	r0, [r1]
.L172:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L178:
	.align	2, 0
.L177:
	.word	gTasks
	.word	Task_StopLinkup
.Lfe20:
	.size	 FinishLinkup,.Lfe20-FinishLinkup
	.align	2, 0
	.type	 Task_LinkupAwaitTrainerCardData,function
	.thumb_func
Task_LinkupAwaitTrainerCardData:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L179	@cond_branch
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetSavedLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L179	@cond_branch
	mov	r4, #0x0
	ldr	r6, .L187
	b	.L182
.L188:
	.align	2, 0
.L187:
	.word	gLinkPlayers
.L185:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L189
	add	r0, r0, r1
	lsl	r1, r4, #0x8
	ldr	r2, .L189+0x4
	add	r1, r1, r2
	lsl	r2, r4, #0x3
	sub	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	ldrb	r2, [r2]
	bl	CopyTrainerCardData
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L182:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L185	@cond_branch
	mov	r0, #0x0
	bl	SetSuppressLinkErrorMessage
	bl	ResetBlockReceivedFlags
	ldr	r0, .L189+0x8
	add	r1, r5, #0
	bl	FinishLinkup
.L179:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L190:
	.align	2, 0
.L189:
	.word	gTrainerCards
	.word	gBlockRecvBuffer
	.word	gSpecialVar_Result
.Lfe21:
	.size	 Task_LinkupAwaitTrainerCardData,.Lfe21-Task_LinkupAwaitTrainerCardData
	.align	2, 0
	.type	 Task_StopLinkup,function
	.thumb_func
Task_StopLinkup:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L193
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L192	@cond_branch
	ldr	r0, .L193+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	EnableBothScriptContexts
	ldrb	r0, [r4, #0x12]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
.L192:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L194:
	.align	2, 0
.L193:
	.word	gReceivedRemoteLinkPlayers
	.word	gTasks
.Lfe22:
	.size	 Task_StopLinkup,.Lfe22-Task_StopLinkup
	.align	2, 0
	.type	 Task_LinkupFailed,function
	.thumb_func
Task_LinkupFailed:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L196
	mov	r0, #0x5
	strh	r0, [r1]
	ldr	r0, .L196+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	StopFieldMessage
	ldrb	r0, [r4, #0x12]
	bl	RemoveWindow
	bl	EnableBothScriptContexts
	add	r0, r5, #0
	bl	DestroyTask
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	gSpecialVar_Result
	.word	gTasks
.Lfe23:
	.size	 Task_LinkupFailed,.Lfe23-Task_LinkupFailed
	.align	2, 0
	.type	 Task_LinkupConnectionError,function
	.thumb_func
Task_LinkupConnectionError:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L199
	mov	r0, #0x6
	strh	r0, [r1]
	ldr	r0, .L199+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0x12]
	bl	ClearLinkPlayerCountWindow
	ldrb	r0, [r4, #0x12]
	bl	RemoveWindow
	bl	HideFieldMessageBox
	bl	EnableBothScriptContexts
	add	r0, r5, #0
	bl	DestroyTask
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L200:
	.align	2, 0
.L199:
	.word	gSpecialVar_Result
	.word	gTasks
.Lfe24:
	.size	 Task_LinkupConnectionError,.Lfe24-Task_LinkupConnectionError
	.align	2, 0
	.type	 TryLinkTimeout,function
	.thumb_func
TryLinkTimeout:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L204
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r0, [r2, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x10]
	lsl	r0, r0, #0x10
	mov	r1, #0x96
	lsl	r1, r1, #0x12
	cmp	r0, r1
	bgt	.L202	@cond_branch
	mov	r0, #0x0
	b	.L203
.L205:
	.align	2, 0
.L204:
	.word	gTasks
.L202:
	ldr	r0, .L206
	str	r0, [r2]
	mov	r0, #0x1
.L203:
	pop	{r1}
	bx	r1
.L207:
	.align	2, 0
.L206:
	.word	Task_LinkupConnectionError
.Lfe25:
	.size	 TryLinkTimeout,.Lfe25-TryLinkTimeout
	.align	2, 0
	.globl	TryBattleLinkup
	.type	 TryBattleLinkup,function
	.thumb_func
TryBattleLinkup:
	push	{r4, lr}
	mov	r3, #0x2
	mov	r2, #0x2
	ldr	r0, .L220
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L211	@cond_branch
	cmp	r0, #0x2
	bgt	.L218	@cond_branch
	cmp	r0, #0x1
	beq	.L210	@cond_branch
	b	.L209
.L221:
	.align	2, 0
.L220:
	.word	gSpecialVar_0x8004
.L218:
	cmp	r0, #0x5
	beq	.L212	@cond_branch
	cmp	r0, #0x9
	beq	.L213	@cond_branch
	b	.L209
.L210:
	mov	r3, #0x2
	ldr	r1, .L222
	ldr	r4, .L222+0x4
	b	.L219
.L223:
	.align	2, 0
.L222:
	.word	gLinkType
	.word	0x2233
.L211:
	mov	r3, #0x2
	ldr	r1, .L224
	ldr	r4, .L224+0x4
	b	.L219
.L225:
	.align	2, 0
.L224:
	.word	gLinkType
	.word	0x2244
.L212:
	mov	r3, #0x4
	mov	r2, #0x4
	ldr	r1, .L226
	ldr	r4, .L226+0x4
	b	.L219
.L227:
	.align	2, 0
.L226:
	.word	gLinkType
	.word	0x2255
.L213:
	mov	r3, #0x2
	ldr	r0, .L228
	ldr	r0, [r0]
	ldr	r1, .L228+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L214	@cond_branch
	ldr	r1, .L228+0x8
	ldr	r4, .L228+0xc
	b	.L219
.L229:
	.align	2, 0
.L228:
	.word	gSaveBlock2Ptr
	.word	0xc31
	.word	gLinkType
	.word	0x2266
.L214:
	ldr	r1, .L230
	ldr	r4, .L230+0x4
.L219:
	add	r0, r4, #0
	strh	r0, [r1]
.L209:
	add	r0, r3, #0
	add	r1, r2, #0
	bl	CreateLinkupTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L231:
	.align	2, 0
.L230:
	.word	gLinkType
	.word	0x2277
.Lfe26:
	.size	 TryBattleLinkup,.Lfe26-TryBattleLinkup
	.align	2, 0
	.globl	TryTradeLinkup
	.type	 TryTradeLinkup,function
	.thumb_func
TryTradeLinkup:
	push	{lr}
	ldr	r1, .L233
	ldr	r2, .L233+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L233+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L234:
	.align	2, 0
.L233:
	.word	gLinkType
	.word	0x1133
	.word	gBattleTypeFlags
.Lfe27:
	.size	 TryTradeLinkup,.Lfe27-TryTradeLinkup
	.align	2, 0
	.globl	TryRecordMixLinkup
	.type	 TryRecordMixLinkup,function
	.thumb_func
TryRecordMixLinkup:
	push	{lr}
	ldr	r1, .L236
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L236+0x4
	ldr	r2, .L236+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L236+0xc
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L237:
	.align	2, 0
.L236:
	.word	gSpecialVar_Result
	.word	gLinkType
	.word	0x3311
	.word	gBattleTypeFlags
.Lfe28:
	.size	 TryRecordMixLinkup,.Lfe28-TryRecordMixLinkup
	.align	2, 0
	.globl	ValidateMixingGameLanguage
	.type	 ValidateMixingGameLanguage,function
	.thumb_func
ValidateMixingGameLanguage:
	push	{r4, lr}
	ldr	r4, .L240
	add	r0, r4, #0
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	bne	.L239	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L240+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
.L239:
	pop	{r4}
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	Task_ValidateMixingGameLanguage
	.word	gTasks
.Lfe29:
	.size	 ValidateMixingGameLanguage,.Lfe29-ValidateMixingGameLanguage
	.align	2, 0
	.type	 Task_ValidateMixingGameLanguage,function
	.thumb_func
Task_ValidateMixingGameLanguage:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L264
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.L244	@cond_branch
	cmp	r0, #0x1
	beq	.L259	@cond_branch
	b	.L242
.L265:
	.align	2, 0
.L264:
	.word	gTasks
.L244:
	ldr	r0, .L266
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L245	@cond_branch
	mov	r7, #0x0
	mov	r0, #0x0
	mov	r8, r0
	mov	r9, r0
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r7, r5
	bge	.L247	@cond_branch
	ldr	r0, .L266+0x4
	ldrb	r2, [r0]
	ldrh	r3, [r0, #0x1a]
	sub	r1, r2, #0x1
	mov	ip, r0
	cmp	r1, #0x1
	bhi	.L250	@cond_branch
	b	.L263
.L267:
	.align	2, 0
.L266:
	.word	gSpecialVar_Result
	.word	gLinkPlayers
.L251:
	mov	r1, #0x1
	mov	r8, r1
	b	.L248
.L250:
	cmp	r2, #0x3
	bne	.L248	@cond_branch
	cmp	r3, #0x1
	bne	.L248	@cond_branch
	mov	r0, #0x1
	mov	r9, r0
.L248:
	add	r4, r4, #0x1
	cmp	r4, r5
	bge	.L247	@cond_branch
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, ip
	ldrb	r2, [r0]
	ldrh	r3, [r0, #0x1a]
	sub	r0, r2, #0x1
	cmp	r0, #0x1
	bhi	.L250	@cond_branch
.L263:
	cmp	r3, #0x1
	bne	.L251	@cond_branch
	mov	r7, #0x1
.L247:
	mov	r1, r8
	cmp	r1, #0
	beq	.L257	@cond_branch
	mov	r0, r9
	cmp	r0, #0
	beq	.L257	@cond_branch
	mov	r7, #0x1
.L257:
	cmp	r7, #0
	beq	.L245	@cond_branch
	ldr	r1, .L268
	mov	r0, #0xc
	strh	r0, [r1]
	bl	SetCloseLinkCallbackHandleJP
	ldr	r1, .L268+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	b	.L242
.L269:
	.align	2, 0
.L268:
	.word	gSpecialVar_Result
	.word	gTasks
.L245:
	bl	EnableBothScriptContexts
	add	r0, r6, #0
	bl	DestroyTask
	b	.L242
.L259:
	ldr	r0, .L270
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L242	@cond_branch
	bl	EnableBothScriptContexts
	add	r0, r6, #0
	bl	DestroyTask
.L242:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L271:
	.align	2, 0
.L270:
	.word	gReceivedRemoteLinkPlayers
.Lfe30:
	.size	 Task_ValidateMixingGameLanguage,.Lfe30-Task_ValidateMixingGameLanguage
	.align	2, 0
	.globl	TryBerryBlenderLinkup
	.type	 TryBerryBlenderLinkup,function
	.thumb_func
TryBerryBlenderLinkup:
	push	{lr}
	ldr	r1, .L273
	ldr	r2, .L273+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L273+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L274:
	.align	2, 0
.L273:
	.word	gLinkType
	.word	0x4411
	.word	gBattleTypeFlags
.Lfe31:
	.size	 TryBerryBlenderLinkup,.Lfe31-TryBerryBlenderLinkup
	.align	2, 0
	.globl	TryContestGModeLinkup
	.type	 TryContestGModeLinkup,function
	.thumb_func
TryContestGModeLinkup:
	push	{lr}
	ldr	r1, .L276
	ldr	r2, .L276+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L276+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x4
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gLinkType
	.word	0x6601
	.word	gBattleTypeFlags
.Lfe32:
	.size	 TryContestGModeLinkup,.Lfe32-TryContestGModeLinkup
	.align	2, 0
	.globl	TryContestEModeLinkup
	.type	 TryContestEModeLinkup,function
	.thumb_func
TryContestEModeLinkup:
	push	{lr}
	ldr	r1, .L279
	ldr	r2, .L279+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L279+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L280:
	.align	2, 0
.L279:
	.word	gLinkType
	.word	0x6602
	.word	gBattleTypeFlags
.Lfe33:
	.size	 TryContestEModeLinkup,.Lfe33-TryContestEModeLinkup
	.align	2, 0
	.globl	CreateTask_ReestablishCableClubLink
	.type	 CreateTask_ReestablishCableClubLink,function
	.thumb_func
CreateTask_ReestablishCableClubLink:
	push	{lr}
	ldr	r0, .L296
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L282	@cond_branch
	mov	r0, #0xff
	b	.L294
.L297:
	.align	2, 0
.L296:
	.word	Task_ReestablishLink
.L282:
	ldr	r0, .L298
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bhi	.L283	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L298+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L299:
	.align	2, 0
.L298:
	.word	gSpecialVar_0x8004
	.word	.L292
	.align	2, 0
	.align	2, 0
.L292:
	.word	.L284
	.word	.L285
	.word	.L290
	.word	.L291
	.word	.L286
	.word	.L283
	.word	.L283
	.word	.L283
	.word	.L287
.L284:
	ldr	r1, .L300
	ldr	r2, .L300+0x4
	b	.L295
.L301:
	.align	2, 0
.L300:
	.word	gLinkType
	.word	0x2233
.L285:
	ldr	r1, .L302
	ldr	r2, .L302+0x4
	b	.L295
.L303:
	.align	2, 0
.L302:
	.word	gLinkType
	.word	0x2244
.L286:
	ldr	r1, .L304
	ldr	r2, .L304+0x4
	b	.L295
.L305:
	.align	2, 0
.L304:
	.word	gLinkType
	.word	0x2255
.L287:
	ldr	r0, .L306
	ldr	r0, [r0]
	ldr	r1, .L306+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L288	@cond_branch
	ldr	r1, .L306+0x8
	ldr	r2, .L306+0xc
	b	.L295
.L307:
	.align	2, 0
.L306:
	.word	gSaveBlock2Ptr
	.word	0xc31
	.word	gLinkType
	.word	0x2266
.L288:
	ldr	r1, .L308
	ldr	r2, .L308+0x4
	b	.L295
.L309:
	.align	2, 0
.L308:
	.word	gLinkType
	.word	0x2277
.L290:
	ldr	r1, .L310
	ldr	r2, .L310+0x4
	b	.L295
.L311:
	.align	2, 0
.L310:
	.word	gLinkType
	.word	0x1111
.L291:
	ldr	r1, .L312
	ldr	r2, .L312+0x4
.L295:
	add	r0, r2, #0
	strh	r0, [r1]
.L283:
	ldr	r0, .L312+0x8
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L294:
	pop	{r1}
	bx	r1
.L313:
	.align	2, 0
.L312:
	.word	gLinkType
	.word	0x3322
	.word	Task_ReestablishLink
.Lfe34:
	.size	 CreateTask_ReestablishCableClubLink,.Lfe34-CreateTask_ReestablishCableClubLink
	.align	2, 0
	.type	 Task_ReestablishLink,function
	.thumb_func
Task_ReestablishLink:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L318
	add	r4, r1, r0
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	cmp	r2, #0
	bne	.L315	@cond_branch
	bl	OpenLink
	bl	ResetLinkPlayers
	ldr	r0, .L318+0x4
	mov	r1, #0x50
	bl	CreateTask
	b	.L316
.L319:
	.align	2, 0
.L318:
	.word	gTasks+0x8
	.word	Task_WaitForLinkPlayerConnection
.L315:
	cmp	r2, #0x9
	ble	.L316	@cond_branch
	sub	r0, r0, #0x8
	add	r0, r1, r0
	ldr	r1, .L320
	str	r1, [r0]
.L316:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L321:
	.align	2, 0
.L320:
	.word	Task_ReestablishLinkAwaitConnection
.Lfe35:
	.size	 Task_ReestablishLink,.Lfe35-Task_ReestablishLink
	.align	2, 0
	.type	 Task_ReestablishLinkAwaitConnection,function
	.thumb_func
Task_ReestablishLinkAwaitConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L323	@cond_branch
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L324	@cond_branch
	ldr	r0, .L327
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L327+0x4
	b	.L326
.L328:
	.align	2, 0
.L327:
	.word	gTasks
	.word	Task_ReestablishLinkLeader
.L324:
	ldr	r0, .L329
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L329+0x4
.L326:
	str	r0, [r1]
.L323:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L330:
	.align	2, 0
.L329:
	.word	gTasks
	.word	Task_ReestablishLinkAwaitConfirmation
.Lfe36:
	.size	 Task_ReestablishLinkAwaitConnection,.Lfe36-Task_ReestablishLinkAwaitConnection
	.align	2, 0
	.type	 Task_ReestablishLinkLeader,function
	.thumb_func
Task_ReestablishLinkLeader:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	GetSavedPlayerCount
	add	r4, r0, #0
	bl	GetLinkPlayerCount_2
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L332	@cond_branch
	bl	CheckShouldAdvanceLinkState
	ldr	r0, .L333
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L333+0x4
	str	r0, [r1]
.L332:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L334:
	.align	2, 0
.L333:
	.word	gTasks
	.word	Task_ReestablishLinkAwaitConfirmation
.Lfe37:
	.size	 Task_ReestablishLinkLeader,.Lfe37-Task_ReestablishLinkLeader
	.align	2, 0
	.type	 Task_ReestablishLinkAwaitConfirmation,function
	.thumb_func
Task_ReestablishLinkAwaitConfirmation:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L337
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L336	@cond_branch
	bl	IsLinkPlayerDataExchangeComplete
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L336	@cond_branch
	bl	CheckLinkPlayersMatchSaved
	bl	StartSendingKeysToLink
	add	r0, r4, #0
	bl	DestroyTask
.L336:
	pop	{r4}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gReceivedRemoteLinkPlayers
.Lfe38:
	.size	 Task_ReestablishLinkAwaitConfirmation,.Lfe38-Task_ReestablishLinkAwaitConfirmation
	.align	2, 0
	.globl	CableClubSaveGame
	.type	 CableClubSaveGame,function
	.thumb_func
CableClubSaveGame:
	push	{lr}
	bl	SaveGame
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 CableClubSaveGame,.Lfe39-CableClubSaveGame
	.align	2, 0
	.type	 SetLinkBattleTypeFlags,function
	.thumb_func
SetLinkBattleTypeFlags:
	push	{lr}
	cmp	r0, #0x2
	beq	.L343	@cond_branch
	cmp	r0, #0x2
	bgt	.L348	@cond_branch
	cmp	r0, #0x1
	beq	.L342	@cond_branch
	b	.L341
.L348:
	cmp	r0, #0x5
	beq	.L344	@cond_branch
	cmp	r0, #0x9
	beq	.L345	@cond_branch
	b	.L341
.L342:
	ldr	r1, .L350
	mov	r0, #0xa
	b	.L349
.L351:
	.align	2, 0
.L350:
	.word	gBattleTypeFlags
.L343:
	ldr	r1, .L352
	mov	r0, #0xb
	b	.L349
.L353:
	.align	2, 0
.L352:
	.word	gBattleTypeFlags
.L344:
	bl	ReducePlayerPartyToSelectedMons
	ldr	r1, .L354
	mov	r0, #0x4b
	b	.L349
.L355:
	.align	2, 0
.L354:
	.word	gBattleTypeFlags
.L345:
	ldr	r1, .L356
	ldr	r0, .L356+0x4
.L349:
	str	r0, [r1]
.L341:
	pop	{r0}
	bx	r0
.L357:
	.align	2, 0
.L356:
	.word	gBattleTypeFlags
	.word	0x14b
.Lfe40:
	.size	 SetLinkBattleTypeFlags,.Lfe40-SetLinkBattleTypeFlags
	.align	2, 0
	.type	 Task_StartWiredCableClubBattle,function
	.thumb_func
Task_StartWiredCableClubBattle:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L375
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x5
	bhi	.L359	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L375+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L376:
	.align	2, 0
.L375:
	.word	gTasks
	.word	.L371
	.align	2, 0
	.align	2, 0
.L371:
	.word	.L360
	.word	.L361
	.word	.L363
	.word	.L365
	.word	.L366
	.word	.L368
.L360:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L377
	ldr	r2, .L377+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	bl	ClearLinkCallback_2
	b	.L373
.L378:
	.align	2, 0
.L377:
	.word	gLinkType
	.word	0x2211
.L361:
	ldr	r0, .L379
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	b	.L374
.L380:
	.align	2, 0
.L379:
	.word	gPaletteFade
.L363:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L359	@cond_branch
	b	.L373
.L365:
	bl	SetCloseLinkCallback
	b	.L373
.L366:
	ldr	r0, .L381
	ldrb	r0, [r0]
.L374:
	cmp	r0, #0
	bne	.L359	@cond_branch
.L373:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L359
.L382:
	.align	2, 0
.L381:
	.word	gReceivedRemoteLinkPlayers
.L368:
	ldr	r0, .L383
	ldr	r0, [r0, #0x4]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L369	@cond_branch
	ldr	r0, .L383+0x4
	bl	PlayMapChosenOrBattleBGM
	b	.L370
.L384:
	.align	2, 0
.L383:
	.word	gLinkPlayers
	.word	0x1dd
.L369:
	mov	r0, #0xee
	lsl	r0, r0, #0x1
	bl	PlayMapChosenOrBattleBGM
.L370:
	ldr	r0, .L385
	ldrh	r0, [r0]
	bl	SetLinkBattleTypeFlags
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L385+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L385+0x8
	bl	SetMainCallback2
	ldr	r1, .L385+0xc
	ldr	r0, .L385+0x10
	str	r0, [r1, #0x8]
	add	r0, r5, #0
	bl	DestroyTask
.L359:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L386:
	.align	2, 0
.L385:
	.word	gSpecialVar_0x8004
	.word	gTrainerBattleOpponent_A
	.word	CB2_InitBattle
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
.Lfe41:
	.size	 Task_StartWiredCableClubBattle,.Lfe41-Task_StartWiredCableClubBattle
	.align	2, 0
	.type	 Task_StartWirelessCableClubBattle,function
	.thumb_func
Task_StartWirelessCableClubBattle:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L410
	add	r6, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x7
	bls	.LCB2848
	b	.L388	@long jump
.LCB2848:
	lsl	r0, r0, #0x2
	ldr	r1, .L410+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L411:
	.align	2, 0
.L410:
	.word	gTasks+0x8
	.word	.L408
	.align	2, 0
	.align	2, 0
.L408:
	.word	.L389
	.word	.L390
	.word	.L392
	.word	.L393
	.word	.L400
	.word	.L402
	.word	.L403
	.word	.L405
.L389:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L412
	ldr	r2, .L412+0x4
	add	r1, r2, #0
	strh	r1, [r0]
	bl	ClearLinkCallback_2
	mov	r0, #0x1
	strh	r0, [r6]
	b	.L388
.L413:
	.align	2, 0
.L412:
	.word	gLinkType
	.word	0x2211
.L390:
	ldr	r0, .L414
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB2895
	b	.L388	@long jump
.LCB2895:
	mov	r0, #0x2
	strh	r0, [r6]
	b	.L388
.L415:
	.align	2, 0
.L414:
	.word	gPaletteFade
.L392:
	ldr	r1, .L416
	mov	r0, #0x0
	mov	r2, #0x1c
	bl	SendBlock
	mov	r0, #0x3
	strh	r0, [r6]
	b	.L388
.L417:
	.align	2, 0
.L416:
	.word	gLocalLinkPlayer
.L393:
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L388	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L418
	b	.L395
.L419:
	.align	2, 0
.L418:
	.word	gLinkPlayers
.L398:
	lsl	r1, r4, #0x8
	ldr	r2, .L420
	add	r0, r5, #0
	add	r1, r1, r2
	ldmia	r1!, {r2, r3, r7}
	stmia	r0!, {r2, r3, r7}
	ldmia	r1!, {r2, r3, r7}
	stmia	r0!, {r2, r3, r7}
	ldr	r1, [r1]
	str	r1, [r0]
	add	r0, r5, #0
	bl	sub_800B524
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	ResetBlockReceivedFlag
	add	r5, r5, #0x1c
	add	r4, r4, #0x1
.L395:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L398	@cond_branch
	mov	r0, #0x4
	strh	r0, [r6]
	b	.L388
.L421:
	.align	2, 0
.L420:
	.word	gBlockRecvBuffer
.L400:
	ldrh	r0, [r6, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L388	@cond_branch
	mov	r0, #0x5
	strh	r0, [r6]
	b	.L388
.L402:
	bl	SetLinkStandbyCallback
	mov	r0, #0x6
	strh	r0, [r6]
	b	.L388
.L403:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L388	@cond_branch
	mov	r0, #0x7
	strh	r0, [r6]
	b	.L388
.L405:
	ldr	r0, .L422
	ldr	r0, [r0, #0x4]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L406	@cond_branch
	ldr	r0, .L422+0x4
	bl	PlayMapChosenOrBattleBGM
	b	.L407
.L423:
	.align	2, 0
.L422:
	.word	gLinkPlayers
	.word	0x1dd
.L406:
	mov	r0, #0xee
	lsl	r0, r0, #0x1
	bl	PlayMapChosenOrBattleBGM
.L407:
	ldr	r1, .L424
	ldr	r0, .L424+0x4
	str	r0, [r1, #0x14]
	ldr	r0, .L424+0x8
	ldrh	r0, [r0]
	bl	SetLinkBattleTypeFlags
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L424+0xc
	mov	r3, #0x80
	lsl	r3, r3, #0x4
	add	r0, r3, #0
	strh	r0, [r1]
	ldr	r0, .L424+0x10
	bl	SetMainCallback2
	ldr	r1, .L424+0x14
	ldr	r0, .L424+0x18
	str	r0, [r1, #0x8]
	add	r0, r4, #0
	bl	DestroyTask
.L388:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L425:
	.align	2, 0
.L424:
	.word	gLinkPlayers
	.word	0x2211
	.word	gSpecialVar_0x8004
	.word	gTrainerBattleOpponent_A
	.word	CB2_InitBattle
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
.Lfe42:
	.size	 Task_StartWirelessCableClubBattle,.Lfe42-Task_StartWirelessCableClubBattle
	.align	2, 0
	.type	 CB2_ReturnFromUnionRoomBattle,function
	.thumb_func
CB2_ReturnFromUnionRoomBattle:
	push	{r4, lr}
	ldr	r0, .L444
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L437	@cond_branch
	cmp	r0, #0x1
	bgt	.L442	@cond_branch
	cmp	r0, #0
	beq	.L428	@cond_branch
	b	.L427
.L445:
	.align	2, 0
.L444:
	.word	gMain
.L442:
	cmp	r0, #0x2
	beq	.L439	@cond_branch
	b	.L427
.L428:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r4, #0x0
	mov	r2, #0x0
	cmp	r4, r3
	bge	.L430	@cond_branch
	ldr	r1, .L446
	ldrb	r0, [r1]
	sub	r0, r0, #0x4
	cmp	r0, #0x1
	bls	.L443	@cond_branch
.L431:
	add	r2, r2, #0x1
	cmp	r2, r3
	bge	.L430	@cond_branch
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	cmp	r0, #0x1
	bhi	.L431	@cond_branch
	mov	r4, #0x1
.L430:
	cmp	r4, #0
	beq	.L435	@cond_branch
.L443:
	ldr	r0, .L446+0x4
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	b	.L427
.L447:
	.align	2, 0
.L446:
	.word	gLinkPlayers
	.word	gMain
.L435:
	bl	SetCloseLinkCallback
	ldr	r0, .L448
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L427
.L449:
	.align	2, 0
.L448:
	.word	gMain
.L437:
	ldr	r0, .L450
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L427	@cond_branch
	ldr	r0, .L450+0x4
	bl	SetMainCallback2
	b	.L427
.L451:
	.align	2, 0
.L450:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_ReturnToField
.L439:
	ldr	r0, .L452
	bl	SetMainCallback2
.L427:
	bl	RunTasks
	pop	{r4}
	pop	{r0}
	bx	r0
.L453:
	.align	2, 0
.L452:
	.word	CB2_ReturnToField
.Lfe43:
	.size	 CB2_ReturnFromUnionRoomBattle,.Lfe43-CB2_ReturnFromUnionRoomBattle
	.align	2, 0
	.globl	CB2_ReturnFromCableClubBattle
	.type	 CB2_ReturnFromCableClubBattle,function
	.thumb_func
CB2_ReturnFromCableClubBattle:
	push	{r4, r5, lr}
	ldr	r2, .L465
	ldr	r0, [r2]
	mov	r1, #0x21
	neg	r1, r1
	and	r0, r0, r1
	str	r0, [r2]
	bl	Overworld_ResetMapMusic
	bl	LoadPlayerParty
	bl	SavePlayerBag
	bl	UpdateTrainerFansAfterLinkBattle
	ldr	r0, .L465+0x4
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L455	@cond_branch
	ldr	r0, .L465+0x8
	ldrb	r0, [r0]
	mov	r5, #0x1
	eor	r0, r0, r5
	bl	UpdatePlayerLinkBattleRecords
	ldr	r0, .L465+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L455	@cond_branch
	ldr	r0, .L465+0x10
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L458	@cond_branch
	cmp	r0, #0x2
	beq	.L459	@cond_branch
	b	.L455
.L466:
	.align	2, 0
.L465:
	.word	gBattleTypeFlags
	.word	gSpecialVar_0x8004
	.word	gLocalLinkPlayerId
	.word	gWirelessCommType
	.word	gBattleOutcome
.L458:
	ldr	r4, .L467
	bl	GetMultiplayerId
	eor	r0, r0, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r4, r4, #0x4
	add	r1, r1, r4
	ldr	r1, [r1]
	mov	r0, #0x0
	bl	RecordIdOfWonderCardSenderByEventType
	b	.L455
.L468:
	.align	2, 0
.L467:
	.word	gLinkPlayers
.L459:
	ldr	r4, .L469
	bl	GetMultiplayerId
	eor	r0, r0, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r4, r4, #0x4
	add	r1, r1, r4
	ldr	r1, [r1]
	mov	r0, #0x1
	bl	RecordIdOfWonderCardSenderByEventType
.L455:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L462	@cond_branch
	ldr	r1, .L469+0x4
	ldr	r0, .L469+0x8
	b	.L464
.L470:
	.align	2, 0
.L469:
	.word	gLinkPlayers
	.word	gMain
	.word	CB2_ReturnFromUnionRoomBattle
.L462:
	ldr	r1, .L471
	ldr	r0, .L471+0x4
.L464:
	str	r0, [r1, #0x8]
	ldr	r0, .L471+0x8
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L472:
	.align	2, 0
.L471:
	.word	gMain
	.word	CB2_ReturnToFieldFromMultiplayer
	.word	CB2_SetUpSaveAfterLinkBattle
.Lfe44:
	.size	 CB2_ReturnFromCableClubBattle,.Lfe44-CB2_ReturnFromCableClubBattle
	.align	2, 0
	.globl	CleanupLinkRoomState
	.type	 CleanupLinkRoomState,function
	.thumb_func
CleanupLinkRoomState:
	push	{lr}
	ldr	r0, .L476
	ldrh	r1, [r0]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L475	@cond_branch
	add	r0, r1, #0
	cmp	r0, #0x5
	beq	.L475	@cond_branch
	cmp	r0, #0x9
	bne	.L474	@cond_branch
.L475:
	bl	LoadPlayerParty
	bl	SavePlayerBag
.L474:
	mov	r0, #0x7f
	bl	SetWarpDestinationToDynamicWarp
	pop	{r0}
	bx	r0
.L477:
	.align	2, 0
.L476:
	.word	gSpecialVar_0x8004
.Lfe45:
	.size	 CleanupLinkRoomState,.Lfe45-CleanupLinkRoomState
	.align	2, 0
	.globl	ExitLinkRoom
	.type	 ExitLinkRoom,function
	.thumb_func
ExitLinkRoom:
	push	{lr}
	bl	QueueExitLinkRoomKey
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 ExitLinkRoom,.Lfe46-ExitLinkRoom
	.align	2, 0
	.type	 Task_EnterCableClubSeat,function
	.thumb_func
Task_EnterCableClubSeat:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L495
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L482	@cond_branch
	cmp	r0, #0x1
	bgt	.L494	@cond_branch
	cmp	r0, #0
	beq	.L481	@cond_branch
	b	.L480
.L496:
	.align	2, 0
.L495:
	.word	gTasks
.L494:
	cmp	r0, #0x2
	beq	.L484	@cond_branch
	cmp	r0, #0x3
	beq	.L491	@cond_branch
	b	.L480
.L481:
	ldr	r0, .L497
	bl	ShowFieldMessage
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L480
.L498:
	.align	2, 0
.L497:
	.word	gText_PleaseWaitForLink
.L482:
	bl	IsFieldMessageBoxHidden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L480	@cond_branch
	bl	sub_8087288
	ldr	r0, .L499
	ldrb	r0, [r0]
	bl	SetLocalLinkPlayerId
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L480
.L500:
	.align	2, 0
.L499:
	.word	gSpecialVar_0x8005
.L484:
	bl	sub_8087214
	cmp	r0, #0x1
	beq	.L487	@cond_branch
	cmp	r0, #0x1
	bcc	.L480	@cond_branch
	cmp	r0, #0x2
	beq	.L488	@cond_branch
	b	.L480
.L487:
	bl	HideFieldMessageBox
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	bl	sub_80872C4
	add	r0, r4, #0
	bl	SwitchTaskToFollowupFunc
	b	.L480
.L488:
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L480
.L491:
	bl	sub_808729C
	mov	r0, #0x1
	bl	sub_8197AE8
	add	r0, r4, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L480:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 Task_EnterCableClubSeat,.Lfe47-Task_EnterCableClubSeat
	.align	2, 0
	.globl	CreateTask_EnterCableClubSeat
	.type	 CreateTask_EnterCableClubSeat,function
	.thumb_func
CreateTask_EnterCableClubSeat:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L502
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	SetTaskFuncWithFollowupFunc
	bl	ScriptContext1_Stop
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L503:
	.align	2, 0
.L502:
	.word	Task_EnterCableClubSeat
.Lfe48:
	.size	 CreateTask_EnterCableClubSeat,.Lfe48-CreateTask_EnterCableClubSeat
	.align	2, 0
	.type	 Task_StartWiredTrade,function
	.thumb_func
Task_StartWiredTrade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L516
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L507	@cond_branch
	cmp	r0, #0x1
	bgt	.L514	@cond_branch
	cmp	r0, #0
	beq	.L506	@cond_branch
	b	.L505
.L517:
	.align	2, 0
.L516:
	.word	gTasks
.L514:
	cmp	r0, #0x2
	beq	.L509	@cond_branch
	cmp	r0, #0x3
	beq	.L510	@cond_branch
	b	.L505
.L506:
	bl	ScriptContext2_Enable
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	ClearLinkCallback_2
	b	.L515
.L507:
	ldr	r0, .L518
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L505	@cond_branch
	b	.L515
.L519:
	.align	2, 0
.L518:
	.word	gPaletteFade
.L509:
	ldr	r1, .L520
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	bl	m4aMPlayAllStop
	bl	SetCloseLinkCallback
.L515:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L505
.L521:
	.align	2, 0
.L520:
	.word	gSelectedTradeMonPositions
.L510:
	ldr	r0, .L522
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L505	@cond_branch
	ldr	r0, .L522+0x4
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L505:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L523:
	.align	2, 0
.L522:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_StartCreateTradeMenu
.Lfe49:
	.size	 Task_StartWiredTrade,.Lfe49-Task_StartWiredTrade
	.align	2, 0
	.type	 Task_StartWirelessTrade,function
	.thumb_func
Task_StartWirelessTrade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L536
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L527	@cond_branch
	cmp	r0, #0x1
	bgt	.L534	@cond_branch
	cmp	r0, #0
	beq	.L526	@cond_branch
	b	.L525
.L537:
	.align	2, 0
.L536:
	.word	gTasks+0x8
.L534:
	cmp	r0, #0x2
	beq	.L529	@cond_branch
	cmp	r0, #0x3
	beq	.L530	@cond_branch
	b	.L525
.L526:
	bl	ScriptContext2_Enable
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	ClearLinkRfuCallback
	b	.L535
.L527:
	ldr	r0, .L538
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L525	@cond_branch
	b	.L535
.L539:
	.align	2, 0
.L538:
	.word	gPaletteFade
.L529:
	ldr	r1, .L540
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	bl	m4aMPlayAllStop
	bl	SetLinkStandbyCallback
.L535:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L525
.L541:
	.align	2, 0
.L540:
	.word	gSelectedTradeMonPositions
.L530:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L525	@cond_branch
	bl	CreateTask_CreateTradeMenu
	add	r0, r5, #0
	bl	DestroyTask
.L525:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 Task_StartWirelessTrade,.Lfe50-Task_StartWirelessTrade
	.align	2, 0
	.globl	PlayerEnteredTradeSeat
	.type	 PlayerEnteredTradeSeat,function
	.thumb_func
PlayerEnteredTradeSeat:
	push	{lr}
	ldr	r0, .L545
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L543	@cond_branch
	ldr	r0, .L545+0x4
	bl	CreateTask_EnterCableClubSeat
	b	.L544
.L546:
	.align	2, 0
.L545:
	.word	gWirelessCommType
	.word	Task_StartWirelessTrade
.L543:
	ldr	r0, .L547
	bl	CreateTask_EnterCableClubSeat
.L544:
	pop	{r0}
	bx	r0
.L548:
	.align	2, 0
.L547:
	.word	Task_StartWiredTrade
.Lfe51:
	.size	 PlayerEnteredTradeSeat,.Lfe51-PlayerEnteredTradeSeat
	.align	2, 0
	.type	 CreateTask_StartWiredTrade,function
	.thumb_func
CreateTask_StartWiredTrade:
	push	{lr}
	ldr	r0, .L550
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L551:
	.align	2, 0
.L550:
	.word	Task_StartWiredTrade
.Lfe52:
	.size	 CreateTask_StartWiredTrade,.Lfe52-CreateTask_StartWiredTrade
	.align	2, 0
	.globl	nullsub_37
	.type	 nullsub_37,function
	.thumb_func
nullsub_37:
	bx	lr
.Lfe53:
	.size	 nullsub_37,.Lfe53-nullsub_37
	.align	2, 0
	.globl	ColosseumPlayerSpotTriggered
	.type	 ColosseumPlayerSpotTriggered,function
	.thumb_func
ColosseumPlayerSpotTriggered:
	push	{lr}
	ldr	r1, .L556
	ldr	r2, .L556+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L556+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L554	@cond_branch
	ldr	r0, .L556+0xc
	bl	CreateTask_EnterCableClubSeat
	b	.L555
.L557:
	.align	2, 0
.L556:
	.word	gLinkType
	.word	0x2211
	.word	gWirelessCommType
	.word	Task_StartWirelessCableClubBattle
.L554:
	ldr	r0, .L558
	bl	CreateTask_EnterCableClubSeat
.L555:
	pop	{r0}
	bx	r0
.L559:
	.align	2, 0
.L558:
	.word	Task_StartWiredCableClubBattle
.Lfe54:
	.size	 ColosseumPlayerSpotTriggered,.Lfe54-ColosseumPlayerSpotTriggered
	.align	2, 0
	.type	 CreateTask_EnterCableClubSeatNoFollowup,function
	.thumb_func
CreateTask_EnterCableClubSeatNoFollowup:
	push	{lr}
	ldr	r0, .L561
	mov	r1, #0x50
	bl	CreateTask
	bl	ScriptContext1_Stop
	pop	{r0}
	bx	r0
.L562:
	.align	2, 0
.L561:
	.word	Task_EnterCableClubSeat
.Lfe55:
	.size	 CreateTask_EnterCableClubSeatNoFollowup,.Lfe55-CreateTask_EnterCableClubSeatNoFollowup
	.align	2, 0
	.globl	Script_ShowLinkTrainerCard
	.type	 Script_ShowLinkTrainerCard,function
	.thumb_func
Script_ShowLinkTrainerCard:
	push	{lr}
	ldr	r0, .L564
	ldrb	r0, [r0]
	ldr	r1, .L564+0x4
	bl	ShowTrainerCardInLink
	pop	{r0}
	bx	r0
.L565:
	.align	2, 0
.L564:
	.word	gSpecialVar_0x8006
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe56:
	.size	 Script_ShowLinkTrainerCard,.Lfe56-Script_ShowLinkTrainerCard
	.align	2, 0
	.globl	GetLinkTrainerCardColor
	.type	 GetLinkTrainerCardColor,function
	.thumb_func
GetLinkTrainerCardColor:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L569
	strh	r4, [r0]
	ldr	r0, .L569+0x4
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	ldr	r2, .L569+0x8
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r4, #0
	bl	GetTrainerCardStars
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L567	@cond_branch
	ldr	r0, .L569+0xc
	ldr	r2, .L569+0x10
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x1
	b	.L568
.L570:
	.align	2, 0
.L569:
	.word	gSpecialVar_0x8006
	.word	gStringVar1
	.word	gLinkPlayers+0x8
	.word	gStringVar2
	.word	sTrainerCardColorNames
.L567:
	mov	r0, #0x0
.L568:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 GetLinkTrainerCardColor,.Lfe57-GetLinkTrainerCardColor
	.align	2, 0
	.globl	Task_WaitForLinkPlayerConnection
	.type	 Task_WaitForLinkPlayerConnection,function
	.thumb_func
Task_WaitForLinkPlayerConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L577
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	lsl	r1, r1, #0x10
	mov	r0, #0x96
	lsl	r0, r0, #0x11
	cmp	r1, r0
	ble	.L572	@cond_branch
	bl	CloseLink
	ldr	r0, .L577+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L572:
	ldr	r0, .L577+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L573	@cond_branch
	ldr	r0, .L577+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L574	@cond_branch
	bl	DoesLinkPlayerCountMatchSaved
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L575	@cond_branch
	bl	CloseLink
	ldr	r0, .L577+0x4
	bl	SetMainCallback2
.L575:
	add	r0, r4, #0
	bl	DestroyTask
	b	.L573
.L578:
	.align	2, 0
.L577:
	.word	gTasks
	.word	CB2_LinkError
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.L574:
	add	r0, r5, #0
	bl	DestroyTask
.L573:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 Task_WaitForLinkPlayerConnection,.Lfe58-Task_WaitForLinkPlayerConnection
	.align	2, 0
	.type	 sub_80B3AAC,function
	.thumb_func
sub_80B3AAC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L581
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L580	@cond_branch
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
.L580:
	pop	{r4}
	pop	{r0}
	bx	r0
.L582:
	.align	2, 0
.L581:
	.word	gReceivedRemoteLinkPlayers
.Lfe59:
	.size	 sub_80B3AAC,.Lfe59-sub_80B3AAC
	.align	2, 0
	.type	 sub_80B3AD0,function
	.thumb_func
sub_80B3AD0:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetCloseLinkCallback
	ldr	r1, .L584
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L584+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L585:
	.align	2, 0
.L584:
	.word	gTasks
	.word	sub_80B3AAC
.Lfe60:
	.size	 sub_80B3AD0,.Lfe60-sub_80B3AD0
	.align	2, 0
	.globl	sub_80B3AF8
	.type	 sub_80B3AF8,function
	.thumb_func
sub_80B3AF8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L603
	add	r5, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L591	@cond_branch
	cmp	r0, #0x1
	bgt	.L602	@cond_branch
	cmp	r0, #0
	beq	.L588	@cond_branch
	b	.L587
.L604:
	.align	2, 0
.L603:
	.word	gTasks+0x8
.L602:
	cmp	r0, #0x2
	beq	.L593	@cond_branch
	cmp	r0, #0x3
	beq	.L598	@cond_branch
	b	.L587
.L588:
	ldr	r0, .L605
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L589	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	b	.L587
.L606:
	.align	2, 0
.L605:
	.word	gWirelessCommType
.L589:
	bl	OpenLink
	ldr	r0, .L607
	mov	r1, #0x1
	bl	CreateTask
	b	.L595
.L608:
	.align	2, 0
.L607:
	.word	Task_WaitForLinkPlayerConnection
.L591:
	ldrh	r0, [r5, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb
	ble	.L587	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x2]
	b	.L595
.L593:
	bl	GetLinkPlayerCount_2
	add	r4, r0, #0
	bl	GetSavedPlayerCount
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L587	@cond_branch
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L595	@cond_branch
	ldrh	r0, [r5, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1e
	ble	.L587	@cond_branch
	bl	CheckShouldAdvanceLinkState
.L595:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L587
.L598:
	ldr	r0, .L609
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L587	@cond_branch
	bl	IsLinkPlayerDataExchangeComplete
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L587	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L587:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L610:
	.align	2, 0
.L609:
	.word	gReceivedRemoteLinkPlayers
.Lfe61:
	.size	 sub_80B3AF8,.Lfe61-sub_80B3AF8
	.align	2, 0
	.globl	TrySetBattleTowerLinkType
	.type	 TrySetBattleTowerLinkType,function
	.thumb_func
TrySetBattleTowerLinkType:
	push	{lr}
	ldr	r0, .L613
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L612	@cond_branch
	ldr	r1, .L613+0x4
	ldr	r2, .L613+0x8
	add	r0, r2, #0
	strh	r0, [r1]
.L612:
	pop	{r0}
	bx	r0
.L614:
	.align	2, 0
.L613:
	.word	gWirelessCommType
	.word	gLinkType
	.word	0x2288
.Lfe62:
	.size	 TrySetBattleTowerLinkType,.Lfe62-TrySetBattleTowerLinkType
.text
	.align	2, 0

