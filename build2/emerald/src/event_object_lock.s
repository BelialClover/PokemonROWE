@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	IsPlayerStandingStill
	.type	 IsPlayerStandingStill,function
	.thumb_func
IsPlayerStandingStill:
	push	{lr}
	ldr	r0, .L6
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x1
	beq	.L3	@cond_branch
	mov	r0, #0x1
	b	.L5
.L7:
	.align	2, 0
.L6:
	.word	gPlayerAvatar
.L3:
	mov	r0, #0x0
.L5:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 IsPlayerStandingStill,.Lfe1-IsPlayerStandingStill
	.align	2, 0
	.type	 sub_80983A4,function
	.thumb_func
sub_80983A4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsPlayerStandingStill
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L9	@cond_branch
	bl	sub_808B864
	add	r0, r4, #0
	bl	DestroyTask
.L9:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 sub_80983A4,.Lfe2-sub_80983A4
	.align	2, 0
	.globl	sub_80983C4
	.type	 sub_80983C4,function
	.thumb_func
sub_80983C4:
	push	{lr}
	ldr	r0, .L14
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L11	@cond_branch
	bl	sub_808BCF4
	mov	r0, #0x1
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	sub_80983A4
.L11:
	mov	r0, #0x0
.L13:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_80983C4,.Lfe3-sub_80983C4
	.align	2, 0
	.globl	ScriptFreezeObjectEvents
	.type	 ScriptFreezeObjectEvents,function
	.thumb_func
ScriptFreezeObjectEvents:
	push	{lr}
	bl	FreezeObjectEvents
	ldr	r0, .L17
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L18:
	.align	2, 0
.L17:
	.word	sub_80983A4
.Lfe4:
	.size	 ScriptFreezeObjectEvents,.Lfe4-ScriptFreezeObjectEvents
	.align	2, 0
	.type	 sub_8098400,function
	.thumb_func
sub_8098400:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L23
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L20	@cond_branch
	bl	IsPlayerStandingStill
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bne	.L20	@cond_branch
	bl	sub_808B864
	strh	r4, [r5, #0x8]
.L20:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L21	@cond_branch
	ldr	r2, .L23+0x4
	ldr	r0, .L23+0x8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L21	@cond_branch
	add	r0, r1, #0
	bl	FreezeObjectEvent
	mov	r0, #0x1
	strh	r0, [r5, #0xa]
.L21:
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L22	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L22	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
.L22:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	gTasks
	.word	gObjectEvents
	.word	gSelectedObjectEvent
.Lfe5:
	.size	 sub_8098400,.Lfe5-sub_8098400
	.align	2, 0
	.globl	sub_809847C
	.type	 sub_809847C,function
	.thumb_func
sub_809847C:
	push	{lr}
	ldr	r0, .L29
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L26	@cond_branch
	bl	sub_808BCF4
	mov	r0, #0x1
	b	.L28
.L30:
	.align	2, 0
.L29:
	.word	sub_8098400
.L26:
	mov	r0, #0x0
.L28:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 sub_809847C,.Lfe6-sub_809847C
	.align	2, 0
	.globl	LockSelectedObjectEvent
	.type	 LockSelectedObjectEvent,function
	.thumb_func
LockSelectedObjectEvent:
	push	{r4, r5, lr}
	ldr	r4, .L33
	ldrb	r0, [r4]
	bl	FreezeObjectEventsExceptOne
	ldr	r0, .L33+0x4
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r2, .L33+0x8
	ldrb	r1, [r4]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L32	@cond_branch
	add	r0, r1, #0
	bl	FreezeObjectEvent
	ldr	r0, .L33+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0xa]
.L32:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	gSelectedObjectEvent
	.word	sub_8098400
	.word	gObjectEvents
	.word	gTasks
.Lfe7:
	.size	 LockSelectedObjectEvent,.Lfe7-LockSelectedObjectEvent
	.align	2, 0
	.globl	ScriptUnfreezeObjectEvents
	.type	 ScriptUnfreezeObjectEvents,function
	.thumb_func
ScriptUnfreezeObjectEvents:
	push	{lr}
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L36
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	bl	ScriptMovement_UnfreezeObjectEvents
	bl	UnfreezeObjectEvents
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	gObjectEvents
.Lfe8:
	.size	 ScriptUnfreezeObjectEvents,.Lfe8-ScriptUnfreezeObjectEvents
	.align	2, 0
	.globl	UnionRoom_UnlockPlayerAndChatPartner
	.type	 UnionRoom_UnlockPlayerAndChatPartner,function
	.thumb_func
UnionRoom_UnlockPlayerAndChatPartner:
	push	{r4, lr}
	ldr	r4, .L40
	ldr	r0, .L40+0x4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r4
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L39	@cond_branch
	add	r0, r1, #0
	bl	ObjectEventClearHeldMovementIfFinished
.L39:
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	ObjectEventClearHeldMovementIfFinished
	bl	ScriptMovement_UnfreezeObjectEvents
	bl	UnfreezeObjectEvents
	pop	{r4}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gObjectEvents
	.word	gSelectedObjectEvent
.Lfe9:
	.size	 UnionRoom_UnlockPlayerAndChatPartner,.Lfe9-UnionRoom_UnlockPlayerAndChatPartner
	.align	2, 0
	.globl	Script_FacePlayer
	.type	 Script_FacePlayer,function
	.thumb_func
Script_FacePlayer:
	push	{lr}
	ldr	r0, .L43
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L43+0x4
	add	r0, r0, r1
	ldr	r1, .L43+0x8
	ldrb	r1, [r1]
	bl	ObjectEventFaceOppositeDirection
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	gSelectedObjectEvent
	.word	gObjectEvents
	.word	gSpecialVar_Facing
.Lfe10:
	.size	 Script_FacePlayer,.Lfe10-Script_FacePlayer
	.align	2, 0
	.globl	Script_ClearHeldMovement
	.type	 Script_ClearHeldMovement,function
	.thumb_func
Script_ClearHeldMovement:
	push	{lr}
	ldr	r0, .L46
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L46+0x4
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfActive
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	gSelectedObjectEvent
	.word	gObjectEvents
.Lfe11:
	.size	 Script_ClearHeldMovement,.Lfe11-Script_ClearHeldMovement
	.align	2, 0
	.type	 sub_80985BC,function
	.thumb_func
sub_80985BC:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L52
	add	r5, r0, r1
	ldrb	r7, [r5, #0xc]
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L49	@cond_branch
	bl	IsPlayerStandingStill
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bne	.L49	@cond_branch
	bl	sub_808B864
	strh	r4, [r5, #0x8]
.L49:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L50	@cond_branch
	ldr	r0, .L52+0x4
	lsl	r1, r7, #0x3
	add	r1, r1, r7
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L50	@cond_branch
	add	r0, r1, #0
	bl	FreezeObjectEvent
	mov	r0, #0x1
	strh	r0, [r5, #0xa]
.L50:
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L51	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L51	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
.L51:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	gTasks
	.word	gObjectEvents
.Lfe12:
	.size	 sub_80985BC,.Lfe12-sub_80985BC
	.align	2, 0
	.globl	sub_8098630
	.type	 sub_8098630,function
	.thumb_func
sub_8098630:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r0, #0x0
	bl	GetChosenApproachingTrainerObjectEventId
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L60
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L55	@cond_branch
	mov	r0, #0x1
	bl	GetChosenApproachingTrainerObjectEventId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_8098074
	ldr	r7, .L60+0x4
	add	r0, r7, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L60+0x8
	mov	r9, r0
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	mov	r1, r9
	add	r6, r0, r1
	strh	r4, [r6, #0xc]
	ldr	r2, .L60+0xc
	mov	r8, r2
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L56	@cond_branch
	add	r0, r1, #0
	bl	FreezeObjectEvent
	mov	r0, #0x1
	strh	r0, [r6, #0xa]
.L56:
	add	r0, r7, #0
	mov	r1, #0x51
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	mov	r1, r9
	add	r4, r0, r1
	strh	r5, [r4, #0xc]
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	mov	r2, r8
	add	r1, r0, r2
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L58	@cond_branch
	add	r0, r1, #0
	bl	FreezeObjectEvent
	mov	r0, #0x1
	strh	r0, [r4, #0xa]
	b	.L58
.L61:
	.align	2, 0
.L60:
	.word	gNoOfApproachingTrainers
	.word	sub_80985BC
	.word	gTasks
	.word	gObjectEvents
.L55:
	add	r0, r4, #0
	bl	FreezeObjectEventsExceptOne
	ldr	r0, .L62
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L62+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	strh	r4, [r5, #0xc]
	ldr	r1, .L62+0x8
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r0, r1
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L58	@cond_branch
	add	r0, r1, #0
	bl	FreezeObjectEvent
	mov	r0, #0x1
	strh	r0, [r5, #0xa]
.L58:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	sub_80985BC
	.word	gTasks
	.word	gObjectEvents
.Lfe13:
	.size	 sub_8098630,.Lfe13-sub_8098630
	.align	2, 0
	.globl	sub_8098734
	.type	 sub_8098734,function
	.thumb_func
sub_8098734:
	push	{lr}
	ldr	r0, .L68
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L65	@cond_branch
	bl	sub_808BCF4
	mov	r0, #0x1
	b	.L67
.L69:
	.align	2, 0
.L68:
	.word	sub_80985BC
.L65:
	mov	r0, #0x0
.L67:
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 sub_8098734,.Lfe14-sub_8098734
.text
	.align	2, 0

