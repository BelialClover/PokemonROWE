@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sBerryBlender,object
	.size	 sBerryBlender,4
sBerryBlender:
	.word	0x0
	.align	2, 0
	.type	 sDebug_PokeblockFactorFlavors,object
	.size	 sDebug_PokeblockFactorFlavors,20
sDebug_PokeblockFactorFlavors:
	.word	0x0
	.space	16
	.align	2, 0
	.type	 sDebug_PokeblockFactorFlavorsAfterRPM,object
	.size	 sDebug_PokeblockFactorFlavorsAfterRPM,20
sDebug_PokeblockFactorFlavorsAfterRPM:
	.word	0x0
	.space	16
	.align	2, 0
	.type	 sDebug_PokeblockFactorRPM,object
	.size	 sDebug_PokeblockFactorRPM,4
sDebug_PokeblockFactorRPM:
	.word	0x0
	.section .rodata
	.align	1, 0
	.type	 sBlenderCenter_Pal,object
sBlenderCenter_Pal:
	.short	0x0
	.short	0x7fff
	.short	0x7f19
	.short	0x6e95
	.short	0x5e31
	.short	0x4dad
	.short	0x3d49
	.short	0x2ce5
	.short	0x5f7a
	.short	0x4ef6
	.short	0x3e72
	.short	0x2dee
	.short	0x3ebf
	.short	0x29de
	.short	0x14fd
	.short	0x73
	.size	 sBlenderCenter_Pal,32
	.type	 sBlenderCenter_Tilemap,object
sBlenderCenter_Tilemap:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x13
	.byte	0x14
	.byte	0x15
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.byte	0x1b
	.byte	0x1c
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.byte	0x22
	.byte	0x23
	.byte	0x24
	.byte	0x25
	.byte	0x26
	.byte	0x27
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x29
	.byte	0x2a
	.byte	0x2b
	.byte	0x2c
	.byte	0x2d
	.byte	0x2e
	.byte	0x2f
	.byte	0x30
	.byte	0x31
	.byte	0x32
	.byte	0x33
	.byte	0x34
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x35
	.byte	0x36
	.byte	0x37
	.byte	0x38
	.byte	0x39
	.byte	0x3a
	.byte	0x3b
	.byte	0x3c
	.byte	0x3d
	.byte	0x3e
	.byte	0x3f
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x41
	.byte	0x42
	.byte	0x43
	.byte	0x44
	.byte	0x45
	.byte	0x46
	.byte	0x47
	.byte	0x48
	.byte	0x49
	.byte	0x4a
	.byte	0x4b
	.byte	0x4c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4d
	.byte	0x4e
	.byte	0x4f
	.byte	0x50
	.byte	0x51
	.byte	0x52
	.byte	0x53
	.byte	0x54
	.byte	0x55
	.byte	0x56
	.byte	0x57
	.byte	0x58
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x59
	.byte	0x5a
	.byte	0x1a
	.byte	0x5b
	.byte	0x5c
	.byte	0x5d
	.byte	0x5e
	.byte	0x5f
	.byte	0x60
	.byte	0x15
	.byte	0x61
	.byte	0x62
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x63
	.byte	0x64
	.byte	0x65
	.byte	0x66
	.byte	0x67
	.byte	0x68
	.byte	0x69
	.byte	0x6a
	.byte	0x6b
	.byte	0x6c
	.byte	0x6d
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6f
	.byte	0x70
	.byte	0x71
	.byte	0x72
	.byte	0x73
	.byte	0x74
	.byte	0x75
	.byte	0x76
	.byte	0x77
	.byte	0x78
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x63
	.byte	0x79
	.byte	0x7a
	.byte	0x7b
	.byte	0x7c
	.byte	0x7d
	.byte	0x7e
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sBlenderCenter_Tilemap,1024
	.align	1, 0
	.type	 sBlenderOuter_Pal,object
sBlenderOuter_Pal:
	.short	0x0
	.short	0x7fff
	.short	0x777a
	.short	0x7316
	.short	0x6eb2
	.short	0x664e
	.short	0x61ea
	.short	0x5d86
	.short	0x66df
	.short	0x31df
	.short	0xdf
	.short	0x2119
	.short	0xc77
	.short	0x61f2
	.short	0x44e9
	.short	0x2801
	.size	 sBlenderOuter_Pal,32
	.align	1, 0
	.type	 sUnused_Pal,object
sUnused_Pal:
	.short	0x0
	.short	0x7fff
	.short	0x777a
	.short	0x7316
	.short	0x6eb2
	.short	0x664e
	.short	0x61ea
	.short	0x5d86
	.short	0x679f
	.short	0x329f
	.short	0x1bf
	.short	0x51b
	.short	0xc77
	.short	0x1ad
	.short	0x51b
	.short	0xc77
	.size	 sUnused_Pal,32
	.align	1, 0
	.type	 sEmpty_Pal,object
	.size	 sEmpty_Pal,448
sEmpty_Pal:
	.short	0x0
	.space	446
	.type	 sUnusedText_YesNo,object
sUnusedText_YesNo:
	.byte	0xd3
	.byte	0xd9
	.byte	0xe7
	.byte	0xfe
	.byte	0xc8
	.byte	0xe3
	.byte	0xff
	.size	 sUnusedText_YesNo,7
	.type	 sUnusedText_2,object
sUnusedText_2:
	.byte	0xef
	.byte	0xff
	.size	 sUnusedText_2,2
	.type	 sUnusedText_Space,object
sUnusedText_Space:
	.byte	0x0
	.byte	0xff
	.size	 sUnusedText_Space,2
	.type	 sUnusedText_Terminating,object
sUnusedText_Terminating:
	.byte	0xce
	.byte	0xd9
	.byte	0xe6
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sUnusedText_Terminating,13
	.type	 sUnusedText_LinkPartnerNotFound,object
sUnusedText_LinkPartnerNotFound:
	.byte	0xc6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0x5c
	.byte	0xe7
	.byte	0x5d
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0xad
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xdb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sUnusedText_LinkPartnerNotFound,46
	.type	 sText_BerryBlenderStart,object
sText_BerryBlenderStart:
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xbc
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfb
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xbc
	.byte	0xd5
	.byte	0xdb
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xbc
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_BerryBlenderStart,97
	.type	 sText_NewParagraph,object
sText_NewParagraph:
	.byte	0xfb
	.byte	0xff
	.size	 sText_NewParagraph,2
	.type	 sText_WasMade,object
sText_WasMade:
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xab
	.byte	0xff
	.size	 sText_WasMade,11
	.type	 sText_Mister,object
sText_Mister:
	.byte	0xc7
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.size	 sText_Mister,7
	.type	 sText_Laddie,object
sText_Laddie:
	.byte	0xc6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd8
	.byte	0xdd
	.byte	0xd9
	.byte	0xff
	.size	 sText_Laddie,7
	.type	 sText_Lassie,object
sText_Lassie:
	.byte	0xc6
	.byte	0xd5
	.byte	0xe7
	.byte	0xe7
	.byte	0xdd
	.byte	0xd9
	.byte	0xff
	.size	 sText_Lassie,7
	.type	 sText_Master,object
sText_Master:
	.byte	0xc7
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.size	 sText_Master,7
	.type	 sText_Dude,object
sText_Dude:
	.byte	0xbe
	.byte	0xe9
	.byte	0xd8
	.byte	0xd9
	.byte	0xff
	.size	 sText_Dude,5
	.type	 sText_Miss,object
sText_Miss:
	.byte	0xc7
	.byte	0xdd
	.byte	0xe7
	.byte	0xe7
	.byte	0xff
	.size	 sText_Miss,5
	.align	2, 0
	.type	 sBlenderOpponentsNames,object
sBlenderOpponentsNames:
	.word	sText_Mister
	.word	sText_Laddie
	.word	sText_Lassie
	.word	sText_Master
	.word	sText_Dude
	.word	sText_Miss
	.size	 sBlenderOpponentsNames,24
	.type	 sText_PressAToStart,object
sText_PressAToStart:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbb
	.byte	0x0
	.byte	0xbc
	.byte	0xe9
	.byte	0xe8
	.byte	0xe8
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sText_PressAToStart,29
	.type	 sText_PleaseWaitAWhile,object
sText_PleaseWaitAWhile:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sText_PleaseWaitAWhile,21
	.type	 sText_CommunicationStandby,object
sText_CommunicationStandby:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xd6
	.byte	0xed
	.byte	0xb0
	.byte	0xff
	.size	 sText_CommunicationStandby,23
	.type	 sText_WouldLikeToBlendAnotherBerry,object
sText_WouldLikeToBlendAnotherBerry:
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xac
	.byte	0xff
	.size	 sText_WouldLikeToBlendAnotherBerry,39
	.type	 sText_RunOutOfBerriesForBlending,object
sText_RunOutOfBerriesForBlending:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe6
	.byte	0xe9
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xbc
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_RunOutOfBerriesForBlending,62
	.type	 sText_YourPokeblockCaseIsFull,object
sText_YourPokeblockCaseIsFull:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0x55
	.byte	0x56
	.byte	0x57
	.byte	0x58
	.byte	0x59
	.byte	0x0
	.byte	0xbd
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_YourPokeblockCaseIsFull,26
	.type	 sText_HasNoBerriesToPut,object
sText_HasNoBerriesToPut:
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xfe
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xbc
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sText_HasNoBerriesToPut,45
	.type	 sText_ApostropheSPokeblockCaseIsFull,object
sText_ApostropheSPokeblockCaseIsFull:
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0x55
	.byte	0x56
	.byte	0x57
	.byte	0x58
	.byte	0x59
	.byte	0x0
	.byte	0xbd
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ApostropheSPokeblockCaseIsFull,24
	.type	 sText_BlendingResults,object
sText_BlendingResults:
	.byte	0xcc
	.byte	0xd9
	.byte	0xe7
	.byte	0xe9
	.byte	0xe0
	.byte	0xe8
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xff
	.size	 sText_BlendingResults,20
	.type	 sText_BerryUsed,object
sText_BerryUsed:
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0xff
	.size	 sText_BerryUsed,11
	.type	 sText_SpaceBerry,object
sText_SpaceBerry:
	.byte	0x0
	.byte	0xbc
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xff
	.size	 sText_SpaceBerry,7
	.type	 sText_Time,object
sText_Time:
	.byte	0xce
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xf0
	.byte	0xff
	.size	 sText_Time,6
	.type	 sText_Min,object
sText_Min:
	.byte	0x0
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0x0
	.byte	0xff
	.size	 sText_Min,7
	.type	 sText_Sec,object
sText_Sec:
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xd7
	.byte	0xad
	.byte	0xff
	.size	 sText_Sec,6
	.type	 sText_MaximumSpeed,object
sText_MaximumSpeed:
	.byte	0xc7
	.byte	0xd5
	.byte	0xec
	.byte	0xdd
	.byte	0xe1
	.byte	0xe9
	.byte	0xe1
	.byte	0x0
	.byte	0xe7
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xff
	.size	 sText_MaximumSpeed,14
	.type	 sText_RPM,object
sText_RPM:
	.byte	0x0
	.byte	0xcc
	.byte	0xca
	.byte	0xc7
	.byte	0xff
	.size	 sText_RPM,5
	.type	 sText_Dot,object
sText_Dot:
	.byte	0xad
	.byte	0xff
	.size	 sText_Dot,2
	.type	 sText_NewLine,object
sText_NewLine:
	.byte	0xfe
	.byte	0xff
	.size	 sText_NewLine,2
	.type	 sText_Space,object
sText_Space:
	.byte	0x0
	.byte	0xff
	.size	 sText_Space,2
	.type	 sText_Ranking,object
sText_Ranking:
	.byte	0xcc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdf
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xff
	.size	 sText_Ranking,8
	.type	 sText_TheLevelIs,object
sText_TheLevelIs:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe0
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xff
	.size	 sText_TheLevelIs,14
	.type	 sText_TheFeelIs,object
sText_TheFeelIs:
	.byte	0xb8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xff
	.size	 sText_TheFeelIs,19
	.type	 sText_Dot2,object
sText_Dot2:
	.byte	0xad
	.byte	0xff
	.size	 sText_Dot2,2
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,12
sBgTemplates:
	.byte	0xfc
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xc9
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0x82
	.byte	0xa
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x28
	.byte	0x0
	.byte	0x16
	.byte	0x6
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x36
	.byte	0x0
	.byte	0x1
	.byte	0xc
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x44
	.byte	0x0
	.byte	0x16
	.byte	0xc
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x52
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x1b
	.byte	0x4
	.byte	0xe
	.short	0x60
	.byte	0x0
	.byte	0x5
	.byte	0x3
	.byte	0x15
	.byte	0xe
	.byte	0xe
	.short	0x60
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,56
	.align	2, 0
	.type	 sYesNoWindowTemplate_ContinuePlaying,object
	.size	 sYesNoWindowTemplate_ContinuePlaying,8
sYesNoWindowTemplate_ContinuePlaying:
	.byte	0x0
	.byte	0x15
	.byte	0x9
	.byte	0x5
	.byte	0x4
	.byte	0xe
	.short	0xcc
	.type	 sPlayerArrowQuadrant,object
	.size	 sPlayerArrowQuadrant,8
sPlayerArrowQuadrant:
	.byte	-0x1
	.byte	-0x1
	.byte	0x1
	.byte	-0x1
	.byte	-0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.type	 sPlayerArrowPos,object
	.size	 sPlayerArrowPos,8
sPlayerArrowPos:
	.byte	0x48
	.byte	0x20
	.byte	0xa8
	.byte	0x20
	.byte	0x48
	.byte	0x80
	.byte	0xa8
	.byte	0x80
	.type	 sPlayerIdMap,object
	.size	 sPlayerIdMap,12
sPlayerIdMap:
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.align	1, 0
	.type	 sArrowStartPos,object
sArrowStartPos:
	.short	0x0
	.short	0xc000
	.short	0x4000
	.short	0x8000
	.size	 sArrowStartPos,8
	.type	 sArrowStartPosIds,object
	.size	 sArrowStartPosIds,3
sArrowStartPosIds:
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.type	 sArrowHitRangeStart,object
	.size	 sArrowHitRangeStart,4
sArrowHitRangeStart:
	.byte	0x20
	.byte	0xe0
	.byte	0x60
	.byte	0xa0
	.align	2, 0
	.type	 sLocalOpponentTasks,object
sLocalOpponentTasks:
	.word	Task_HandleOpponent1
	.word	Task_HandleOpponent2
	.word	Task_HandleOpponent3
	.size	 sLocalOpponentTasks,12
	.align	2, 0
	.type	 sOam_PlayerArrow,object
	.size	 sOam_PlayerArrow,8
sOam_PlayerArrow:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sAnim_PlayerArrow_TopLeft,object
sAnim_PlayerArrow_TopLeft:
	.short	0x10
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_TopLeft,8
	.align	2, 0
	.type	 sAnim_PlayerArrow_TopRight,object
sAnim_PlayerArrow_TopRight:
	.short	0x10
	.byte	0x85
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_TopRight,8
	.align	2, 0
	.type	 sAnim_PlayerArrow_BottomLeft,object
sAnim_PlayerArrow_BottomLeft:
	.short	0x10
	.byte	0x45
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_BottomLeft,8
	.align	2, 0
	.type	 sAnim_PlayerArrow_BottomRight,object
sAnim_PlayerArrow_BottomRight:
	.short	0x10
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_BottomRight,8
	.align	2, 0
	.type	 sAnim_PlayerArrow_TopLeft_Flash,object
sAnim_PlayerArrow_TopLeft_Flash:
	.short	0x30
	.byte	0xc2
	.space	1
	.short	0x20
	.byte	0xc5
	.space	1
	.short	0x30
	.byte	0xc3
	.space	1
	.short	0x10
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_TopLeft_Flash,20
	.align	2, 0
	.type	 sAnim_PlayerArrow_TopRight_Flash,object
sAnim_PlayerArrow_TopRight_Flash:
	.short	0x30
	.byte	0x82
	.space	1
	.short	0x20
	.byte	0x85
	.space	1
	.short	0x30
	.byte	0x83
	.space	1
	.short	0x10
	.byte	0x85
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_TopRight_Flash,20
	.align	2, 0
	.type	 sAnim_PlayerArrow_BottomLeft_Flash,object
sAnim_PlayerArrow_BottomLeft_Flash:
	.short	0x30
	.byte	0x42
	.space	1
	.short	0x20
	.byte	0x45
	.space	1
	.short	0x30
	.byte	0x43
	.space	1
	.short	0x10
	.byte	0x45
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_BottomLeft_Flash,20
	.align	2, 0
	.type	 sAnim_PlayerArrow_BottomRight_Flash,object
sAnim_PlayerArrow_BottomRight_Flash:
	.short	0x30
	.byte	0x2
	.space	1
	.short	0x20
	.byte	0x5
	.space	1
	.short	0x30
	.byte	0x3
	.space	1
	.short	0x10
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_BottomRight_Flash,20
	.align	2, 0
	.type	 sAnim_PlayerArrow_TopLeft_Off,object
sAnim_PlayerArrow_TopLeft_Off:
	.short	0x0
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_TopLeft_Off,8
	.align	2, 0
	.type	 sAnim_PlayerArrow_TopRight_Off,object
sAnim_PlayerArrow_TopRight_Off:
	.short	0x0
	.byte	0x85
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_TopRight_Off,8
	.align	2, 0
	.type	 sAnim_PlayerArrow_BottomLeft_Off,object
sAnim_PlayerArrow_BottomLeft_Off:
	.short	0x0
	.byte	0x45
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_BottomLeft_Off,8
	.align	2, 0
	.type	 sAnim_PlayerArrow_BottomRight_Off,object
sAnim_PlayerArrow_BottomRight_Off:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_PlayerArrow_BottomRight_Off,8
	.align	2, 0
	.type	 sAnims_PlayerArrow,object
sAnims_PlayerArrow:
	.word	sAnim_PlayerArrow_TopLeft
	.word	sAnim_PlayerArrow_TopRight
	.word	sAnim_PlayerArrow_BottomLeft
	.word	sAnim_PlayerArrow_BottomRight
	.word	sAnim_PlayerArrow_TopLeft_Flash
	.word	sAnim_PlayerArrow_TopRight_Flash
	.word	sAnim_PlayerArrow_BottomLeft_Flash
	.word	sAnim_PlayerArrow_BottomRight_Flash
	.word	sAnim_PlayerArrow_TopLeft_Off
	.word	sAnim_PlayerArrow_TopRight_Off
	.word	sAnim_PlayerArrow_BottomLeft_Off
	.word	sAnim_PlayerArrow_BottomRight_Off
	.size	 sAnims_PlayerArrow,48
	.align	2, 0
	.type	 sSpriteSheet_PlayerArrow,object
	.size	 sSpriteSheet_PlayerArrow,8
sSpriteSheet_PlayerArrow:
	.word	gBerryBlenderPlayerArrow_Gfx
	.short	0x800
	.short	0xb5d1
	.align	2, 0
	.type	 sSpritePal_BlenderMisc,object
	.size	 sSpritePal_BlenderMisc,8
sSpritePal_BlenderMisc:
	.word	gBerryBlenderMiscPalette
	.short	0xb5d2
	.space	2
	.align	2, 0
	.type	 sSpritePal_PlayerArrow,object
	.size	 sSpritePal_PlayerArrow,8
sSpritePal_PlayerArrow:
	.word	gBerryBlenderArrowPalette
	.short	0x3018
	.space	2
	.align	2, 0
	.type	 sSpriteTemplate_PlayerArrow,object
	.size	 sSpriteTemplate_PlayerArrow,24
sSpriteTemplate_PlayerArrow:
	.short	0xb5d1
	.short	0x3018
	.word	sOam_PlayerArrow
	.word	sAnims_PlayerArrow
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_PlayerArrow
	.align	2, 0
	.type	 sOam_ScoreSymbols,object
	.size	 sOam_ScoreSymbols,8
sOam_ScoreSymbols:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sAnim_ScoreSymbols_Good,object
sAnim_ScoreSymbols_Good:
	.short	0x0
	.byte	0x14
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_ScoreSymbols_Good,8
	.align	2, 0
	.type	 sAnim_ScoreSymbols_Miss,object
sAnim_ScoreSymbols_Miss:
	.short	0x4
	.byte	0x54
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_ScoreSymbols_Miss,8
	.align	2, 0
	.type	 sAnim_ScoreSymbols_BestFlash,object
sAnim_ScoreSymbols_BestFlash:
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_ScoreSymbols_BestFlash,24
	.align	2, 0
	.type	 sAnim_ScoreSymbols_BestStatic,object
sAnim_ScoreSymbols_BestStatic:
	.short	0x8
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_ScoreSymbols_BestStatic,8
	.align	2, 0
	.type	 sAnims_ScoreSymbols,object
sAnims_ScoreSymbols:
	.word	sAnim_ScoreSymbols_Good
	.word	sAnim_ScoreSymbols_Miss
	.word	sAnim_ScoreSymbols_BestFlash
	.word	sAnim_ScoreSymbols_BestStatic
	.size	 sAnims_ScoreSymbols,16
	.align	2, 0
	.type	 sSpriteSheet_ScoreSymbols,object
	.size	 sSpriteSheet_ScoreSymbols,8
sSpriteSheet_ScoreSymbols:
	.word	gBerryBlenderScoreSymbols_Gfx
	.short	0x200
	.short	0xbef8
	.align	2, 0
	.type	 sSpriteTemplate_ScoreSymbols,object
	.size	 sSpriteTemplate_ScoreSymbols,24
sSpriteTemplate_ScoreSymbols:
	.short	0xbef8
	.short	0xb5d2
	.word	sOam_ScoreSymbols
	.word	sAnims_ScoreSymbols
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_ScoreSymbol
	.align	2, 0
	.type	 sOam_Particles,object
	.size	 sOam_Particles,8
sOam_Particles:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sAnim_SparkleCrossToX,object
sAnim_SparkleCrossToX:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x1
	.byte	0x4
	.space	1
	.short	0x3
	.byte	0x5
	.space	1
	.short	0x1
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x3
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_SparkleCrossToX,24
	.align	2, 0
	.type	 sAnim_SparkleXToCross,object
sAnim_SparkleXToCross:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x2
	.byte	0x4
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x3
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_SparkleXToCross,24
	.align	2, 0
	.type	 sAnim_SparkleFull,object
sAnim_SparkleFull:
	.short	0x0
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	0x2
	.byte	0x2
	.space	1
	.short	0x4
	.byte	0x4
	.space	1
	.short	0x3
	.byte	0x3
	.space	1
	.short	0x2
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	0x0
	.byte	0x2
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_SparkleFull,36
	.align	2, 0
	.type	 sAnim_GreenArrow,object
sAnim_GreenArrow:
	.short	0x5
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_GreenArrow,8
	.align	2, 0
	.type	 sAnim_GreenDot,object
sAnim_GreenDot:
	.short	0x6
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_GreenDot,8
	.align	2, 0
	.type	 sAnims_Particles,object
sAnims_Particles:
	.word	sAnim_SparkleCrossToX
	.word	sAnim_SparkleXToCross
	.word	sAnim_SparkleFull
	.word	sAnim_GreenArrow
	.word	sAnim_GreenDot
	.size	 sAnims_Particles,20
	.align	2, 0
	.type	 sSpriteSheet_Particles,object
	.size	 sSpriteSheet_Particles,8
sSpriteSheet_Particles:
	.word	gBerryBlenderParticles_Gfx
	.short	0xe0
	.short	0x5ba0
	.align	2, 0
	.type	 sSpriteTemplate_Particles,object
	.size	 sSpriteTemplate_Particles,24
sSpriteTemplate_Particles:
	.short	0x5ba0
	.short	0xb5d2
	.word	sOam_Particles
	.word	sAnims_Particles
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOam_CountdownNumbers,object
	.size	 sOam_CountdownNumbers,8
sOam_CountdownNumbers:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sAnim_CountdownNumbers_3,object
sAnim_CountdownNumbers_3:
	.short	0x20
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_CountdownNumbers_3,8
	.align	2, 0
	.type	 sAnim_CountdownNumbers_2,object
sAnim_CountdownNumbers_2:
	.short	0x10
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_CountdownNumbers_2,8
	.align	2, 0
	.type	 sAnim_CountdownNumbers_1,object
sAnim_CountdownNumbers_1:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_CountdownNumbers_1,8
	.align	2, 0
	.type	 sAnims_CountdownNumbers,object
sAnims_CountdownNumbers:
	.word	sAnim_CountdownNumbers_3
	.word	sAnim_CountdownNumbers_2
	.word	sAnim_CountdownNumbers_1
	.size	 sAnims_CountdownNumbers,12
	.align	2, 0
	.type	 sSpriteSheet_CountdownNumbers,object
	.size	 sSpriteSheet_CountdownNumbers,8
sSpriteSheet_CountdownNumbers:
	.word	gBerryBlenderCountdownNumbers_Gfx
	.short	0x600
	.short	0x3039
	.align	2, 0
	.type	 sSpriteTemplate_CountdownNumbers,object
	.size	 sSpriteTemplate_CountdownNumbers,24
sSpriteTemplate_CountdownNumbers:
	.short	0x3039
	.short	0xb5d2
	.word	sOam_CountdownNumbers
	.word	sAnims_CountdownNumbers
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_CountdownNumber
	.align	2, 0
	.type	 sOam_Start,object
	.size	 sOam_Start,8
sOam_Start:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sAnim_Start,object
sAnim_Start:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Start,8
	.align	2, 0
	.type	 sAnims_Start,object
sAnims_Start:
	.word	sAnim_Start
	.size	 sAnims_Start,4
	.align	2, 0
	.type	 sSpriteSheet_Start,object
	.size	 sSpriteSheet_Start,8
sSpriteSheet_Start:
	.word	gBerryBlenderStart_Gfx
	.short	0x400
	.short	0x303a
	.align	2, 0
	.type	 sSpriteTemplate_Start,object
	.size	 sSpriteTemplate_Start,24
sSpriteTemplate_Start:
	.short	0x303a
	.short	0xb5d2
	.word	sOam_Start
	.word	sAnims_Start
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_Start
	.align	1, 0
	.type	 sBerrySpriteData,object
sBerrySpriteData:
	.short	-0xa
	.short	0x14
	.short	0xa
	.short	0x2
	.short	0x1
	.short	0xfa
	.short	0x14
	.short	0xa
	.short	-0x2
	.short	0x1
	.short	-0xa
	.short	0x8c
	.short	0xa
	.short	0x2
	.short	-0x1
	.short	0xfa
	.short	0x8c
	.short	0xa
	.short	-0x2
	.short	-0x1
	.size	 sBerrySpriteData,40
	.type	 sOpponentBerrySets,object
	.size	 sOpponentBerrySets,30
sOpponentBerrySets:
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x4
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.type	 sBerryMasterBerries,object
sBerryMasterBerries:
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.byte	0x22
	.size	 sBerryMasterBerries,5
	.type	 sNumPlayersToSpeedDivisor,object
sNumPlayersToSpeedDivisor:
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.size	 sNumPlayersToSpeedDivisor,5
	.type	 sBlackPokeblockFlavorFlags,object
sBlackPokeblockFlavorFlags:
	.byte	0x1c
	.byte	0x16
	.byte	0x13
	.byte	0x1a
	.byte	0x19
	.byte	0xe
	.byte	0xd
	.byte	0xb
	.byte	0x7
	.byte	0x15
	.size	 sBlackPokeblockFlavorFlags,10
	.type	 sUnused,object
sUnused:
	.byte	0xfe
	.byte	0x2
	.byte	0x2
	.byte	0xce
	.byte	0xd0
	.byte	0x37
	.byte	0x44
	.byte	0x7
	.byte	0x1f
	.byte	0xc
	.byte	0x10
	.byte	0x0
	.byte	0xff
	.byte	0xfe
	.byte	0x91
	.byte	0x72
	.byte	0xce
	.byte	0xd0
	.byte	0x37
	.byte	0x44
	.byte	0x7
	.byte	0x1f
	.byte	0xc
	.byte	0x10
	.byte	0x0
	.byte	0xff
	.byte	0x6
	.byte	0x27
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0xc
	.byte	0x48
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0x16
	.byte	0x37
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0xd
	.byte	0x50
	.byte	0x4b
	.byte	0x2
	.byte	0xff
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x5
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x2
	.size	 sUnused,66
	.align	2, 0
	.type	 sBlenderRecordWindowTemplate,object
	.size	 sBlenderRecordWindowTemplate,8
sBlenderRecordWindowTemplate:
	.byte	0x0
	.byte	0x6
	.byte	0x4
	.byte	0x12
	.byte	0xb
	.byte	0xf
	.short	0x8
.text
	.align	2, 0
	.type	 UpdateHitPitch,function
	.thumb_func
UpdateHitPitch:
	push	{lr}
	ldr	r0, .L3
	ldr	r1, .L3+0x4
	ldr	r2, .L3+0x8
	ldr	r2, [r2]
	add	r2, r2, #0x4c
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	sub	r2, r2, #0x80
	lsl	r2, r2, #0x11
	asr	r2, r2, #0x10
	bl	m4aMPlayPitchControl
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gMPlayInfo_SE2
	.word	0xffff
	.word	sBerryBlender
.Lfe1:
	.size	 UpdateHitPitch,.Lfe1-UpdateHitPitch
	.align	2, 0
	.type	 VBlankCB_BerryBlender,function
	.thumb_func
VBlankCB_BerryBlender:
	push	{r4, lr}
	add	sp, sp, #-0x10
	bl	SetBgPos
	ldr	r0, .L6
	ldr	r0, [r0]
	mov	ip, r0
	mov	r0, #0xa0
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldr	r1, [r0]
	mov	r0, #0xa2
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldr	r2, [r0]
	mov	r0, #0xa4
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r3, [r0, r4]
	mov	r0, #0xa5
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	str	r0, [sp]
	mov	r0, #0xa6
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	str	r0, [sp, #0x4]
	mov	r0, #0xa7
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	str	r0, [sp, #0x8]
	mov	r0, #0xa8
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldrh	r0, [r0]
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	bl	SetBgAffine
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	sBerryBlender
.Lfe2:
	.size	 VBlankCB_BerryBlender,.Lfe2-VBlankCB_BerryBlender
	.align	2, 0
	.type	 LoadBerryBlenderGfx,function
	.thumb_func
LoadBerryBlenderGfx:
	push	{r4, r5, lr}
	ldr	r1, .L25
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x1]
	add	r5, r1, #0
	cmp	r0, #0x9
	bls	.LCB111
	b	.L9	@long jump
.LCB111:
	lsl	r0, r0, #0x2
	ldr	r1, .L25+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L26:
	.align	2, 0
.L25:
	.word	sBerryBlender
	.word	.L20
	.align	2, 0
	.align	2, 0
.L20:
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L19
.L10:
	ldr	r5, .L27
	add	r0, r5, #0
	bl	GetDecompressedDataSize
	add	r0, r0, #0x64
	bl	AllocZeroed
	add	r1, r0, #0
	ldr	r4, .L27+0x4
	ldr	r0, [r4]
	ldr	r2, .L27+0x8
	add	r0, r0, r2
	str	r1, [r0]
	add	r0, r5, #0
	bl	LZDecompressWram
	ldr	r1, [r4]
	b	.L23
.L28:
	.align	2, 0
.L27:
	.word	gBerryBlenderCenter_Gfx
	.word	sBerryBlender
	.word	0x11bc
.L11:
	ldr	r1, .L29
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	mov	r0, #0x2
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L29+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	mov	r1, #0x0
	bl	LoadPalette
	b	.L24
.L30:
	.align	2, 0
.L29:
	.word	sBlenderCenter_Tilemap
	.word	sBlenderCenter_Pal
.L12:
	ldr	r0, [r5]
	ldr	r1, .L31
	add	r0, r0, r1
	ldr	r4, [r0]
	ldr	r0, .L31+0x4
	bl	GetDecompressedDataSize
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x2
	add	r1, r4, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r5]
	b	.L23
.L32:
	.align	2, 0
.L31:
	.word	0x11bc
	.word	gBerryBlenderCenter_Gfx
.L13:
	ldr	r0, .L33
	ldr	r1, [r5]
	ldr	r2, .L33+0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	LZDecompressWram
	ldr	r1, [r5]
	b	.L23
.L34:
	.align	2, 0
.L33:
	.word	gBerryBlenderOuter_Gfx
	.word	0x11bc
.L14:
	ldr	r0, [r5]
	ldr	r1, .L35
	add	r0, r0, r1
	ldr	r4, [r0]
	ldr	r0, .L35+0x4
	bl	GetDecompressedDataSize
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r5]
	b	.L23
.L36:
	.align	2, 0
.L35:
	.word	0x11bc
	.word	gBerryBlenderOuter_Gfx
.L15:
	ldr	r0, .L37
	ldr	r1, [r5]
	ldr	r2, .L37+0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	LZDecompressWram
	ldr	r1, [r5]
	b	.L23
.L38:
	.align	2, 0
.L37:
	.word	gBerryBlenderOuter_Tilemap
	.word	0x11bc
.L16:
	ldr	r0, [r5]
	ldr	r1, .L39
	add	r0, r0, r1
	ldr	r4, [r0]
	ldr	r0, .L39+0x4
	bl	GetDecompressedDataSize
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r1, [r5]
	b	.L23
.L40:
	.align	2, 0
.L39:
	.word	0x11bc
	.word	gBerryBlenderOuter_Tilemap
.L17:
	ldr	r0, .L41
	mov	r1, #0x80
	mov	r2, #0x20
	bl	LoadPalette
	b	.L24
.L42:
	.align	2, 0
.L41:
	.word	sBlenderOuter_Pal
.L18:
	ldr	r0, .L43
	bl	LoadSpriteSheet
	ldr	r0, .L43+0x4
	bl	LoadSpriteSheet
	ldr	r0, .L43+0x8
	bl	LoadSpriteSheet
.L24:
	ldr	r0, .L43+0xc
	ldr	r1, [r0]
.L23:
	ldrb	r0, [r1, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x1]
	b	.L9
.L44:
	.align	2, 0
.L43:
	.word	sSpriteSheet_PlayerArrow
	.word	sSpriteSheet_Particles
	.word	sSpriteSheet_ScoreSymbols
	.word	sBerryBlender
.L19:
	ldr	r0, .L45
	bl	LoadSpriteSheet
	ldr	r0, .L45+0x4
	bl	LoadSpriteSheet
	ldr	r0, .L45+0x8
	bl	LoadSpritePalette
	ldr	r0, .L45+0xc
	bl	LoadSpritePalette
	ldr	r4, .L45+0x10
	ldr	r0, [r4]
	ldr	r2, .L45+0x14
	add	r0, r0, r2
	ldr	r0, [r0]
	bl	Free
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, #0x1
	b	.L22
.L46:
	.align	2, 0
.L45:
	.word	sSpriteSheet_CountdownNumbers
	.word	sSpriteSheet_Start
	.word	sSpritePal_PlayerArrow
	.word	sSpritePal_BlenderMisc
	.word	sBerryBlender
	.word	0x11bc
.L9:
	mov	r0, #0x0
.L22:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 LoadBerryBlenderGfx,.Lfe3-LoadBerryBlenderGfx
	.align	2, 0
	.type	 DrawBlenderBg,function
	.thumb_func
DrawBlenderBg:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuRegBits
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 DrawBlenderBg,.Lfe4-DrawBlenderBg
	.align	2, 0
	.type	 InitBerryBlenderWindows,function
	.thumb_func
InitBerryBlenderWindows:
	push	{r4, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L55
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L49	@cond_branch
	bl	DeactivateAllTextPrinters
	mov	r4, #0x0
.L53:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L53	@cond_branch
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0xe0
	bl	Menu_LoadStdPalAt
.L49:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	sWindowTemplates
.Lfe5:
	.size	 InitBerryBlenderWindows,.Lfe5-InitBerryBlenderWindows
	.align	2, 0
	.globl	DoBerryBlending
	.type	 DoBerryBlending,function
	.thumb_func
DoBerryBlending:
	push	{r4, lr}
	ldr	r4, .L59
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L58	@cond_branch
	mov	r0, #0x8f
	lsl	r0, r0, #0x5
	bl	AllocZeroed
	str	r0, [r4]
.L58:
	ldr	r0, [r4]
	add	r0, r0, #0x63
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x63
	strb	r1, [r0]
	ldr	r0, .L59+0x4
	ldrb	r0, [r0]
	bl	InitLocalPlayers
	ldr	r0, .L59+0x8
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L60:
	.align	2, 0
.L59:
	.word	sBerryBlender
	.word	gSpecialVar_0x8004
	.word	CB2_LoadBerryBlender
.Lfe6:
	.size	 DoBerryBlending,.Lfe6-DoBerryBlending
	.align	2, 0
	.type	 CB2_LoadBerryBlender,function
	.thumb_func
CB2_LoadBerryBlender:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L84
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0x6
	bls	.LCB568
	b	.L62	@long jump
.LCB568:
	lsl	r0, r0, #0x2
	ldr	r1, .L84+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L85:
	.align	2, 0
.L84:
	.word	sBerryBlender
	.word	.L80
	.align	2, 0
	.align	2, 0
.L80:
	.word	.L63
	.word	.L64
	.word	.L72
	.word	.L73
	.word	.L75
	.word	.L77
	.word	.L78
.L63:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L86
	mov	r0, #0x1
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r4, .L86+0x4
	ldr	r1, [r4]
	mov	r0, #0xdc
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L86+0x8
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xf0
	bl	LoadMessageBoxGfx
	bl	InitBerryBlenderWindows
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r3, [r4]
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	mov	r1, #0x0
	strh	r2, [r0]
	mov	r4, #0x8b
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	strh	r2, [r0]
	mov	r0, #0x8d
	lsl	r0, r0, #0x1
	add	r4, r3, r0
	mov	r0, #0x50
	strh	r0, [r4]
	mov	r4, #0x8e
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	strh	r2, [r0]
	add	r4, r4, #0x2
	add	r0, r3, r4
	strh	r2, [r0]
	strb	r1, [r3, #0x1]
	bl	UpdateBlenderCenter
	b	.L62
.L87:
	.align	2, 0
.L86:
	.word	sBgTemplates
	.word	sBerryBlender
	.word	0x9b8
.L64:
	bl	LoadBerryBlenderGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB677
	b	.L62	@long jump
.LCB677:
	mov	r4, #0x0
	ldr	r5, .L88
	ldr	r6, .L88+0x4
.L69:
	ldrb	r1, [r5]
	ldrb	r2, [r5, #0x1]
	ldr	r0, .L88+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x50
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x50
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L88+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L69	@cond_branch
	ldr	r0, .L88+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L71	@cond_branch
	ldr	r0, .L88+0x14
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L71	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
.L71:
	ldr	r0, .L88+0x18
	bl	SetVBlankCallback
	b	.L82
.L89:
	.align	2, 0
.L88:
	.word	sPlayerArrowPos
	.word	sBerryBlender
	.word	sSpriteTemplate_PlayerArrow
	.word	gSprites
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	VBlankCB_BerryBlender
.L72:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	bl	UpdateBlenderCenter
	b	.L82
.L73:
	bl	DrawBlenderBg
	ldr	r0, .L90
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L62	@cond_branch
	b	.L82
.L91:
	.align	2, 0
.L90:
	.word	gPaletteFade
.L75:
	ldr	r4, [r6]
	ldr	r0, .L92
	add	r4, r4, r0
	ldr	r5, .L92+0x4
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L62	@cond_branch
	ldr	r1, [r6]
	b	.L83
.L93:
	.align	2, 0
.L92:
	.word	0x11b8
	.word	sText_BerryBlenderStart
.L77:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
.L82:
	ldr	r0, .L94
	ldr	r1, [r0]
.L83:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L62
.L95:
	.align	2, 0
.L94:
	.word	sBerryBlender
.L78:
	ldr	r0, .L96
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L62	@cond_branch
	bl	FreeAllWindowBuffers
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L96+0x4
	bl	ChooseBerryForMachine
	ldr	r0, .L96+0x8
	ldr	r0, [r0]
	strb	r4, [r0]
.L62:
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gPaletteFade
	.word	StartBlender
	.word	sBerryBlender
.Lfe7:
	.size	 CB2_LoadBerryBlender,.Lfe7-CB2_LoadBerryBlender
	.align	2, 0
	.type	 SpriteCB_Berry,function
	.thumb_func
SpriteCB_Berry:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x3a]
	ldrh	r1, [r4, #0x30]
	add	r0, r0, r1
	strh	r0, [r4, #0x30]
	ldrh	r1, [r4, #0x32]
	ldrh	r2, [r4, #0x36]
	sub	r1, r1, r2
	ldrh	r0, [r4, #0x3c]
	add	r1, r1, r0
	strh	r1, [r4, #0x32]
	ldrh	r3, [r4, #0x2e]
	add	r0, r0, r3
	strh	r0, [r4, #0x2e]
	sub	r2, r2, #0x1
	strh	r2, [r4, #0x36]
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	cmp	r0, r1
	bge	.L99	@cond_branch
	ldrh	r0, [r4, #0x34]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x36]
	strh	r0, [r4, #0x34]
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	ble	.L100	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
	b	.L99
.L100:
	mov	r0, #0x74
	bl	PlaySE
.L99:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x32]
	strh	r0, [r4, #0x22]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 SpriteCB_Berry,.Lfe8-SpriteCB_Berry
	.align	2, 0
	.type	 SetBerrySpriteData,function
	.thumb_func
SetBerrySpriteData:
	push	{r4, r5, r6, lr}
	ldr	r5, [sp, #0x10]
	ldr	r6, [sp, #0x14]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r4, #0x0
	strh	r2, [r0, #0x2e]
	strh	r1, [r0, #0x30]
	strh	r2, [r0, #0x32]
	strh	r3, [r0, #0x34]
	mov	r1, #0xa
	strh	r1, [r0, #0x36]
	strh	r4, [r0, #0x38]
	strh	r5, [r0, #0x3a]
	strh	r6, [r0, #0x3c]
	ldr	r1, .L103
	str	r1, [r0, #0x1c]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	SpriteCB_Berry
.Lfe9:
	.size	 SetBerrySpriteData,.Lfe9-SetBerrySpriteData
	.align	2, 0
	.type	 CreateBerrySprite,function
	.thumb_func
CreateBerrySprite:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r6, r1, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r0, r0, #0x18
	mov	r1, #0x86
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	mov	r3, #0x1
	and	r3, r3, r6
	mov	r1, #0x0
	mov	r2, #0x50
	bl	CreateSpinningBerrySprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	mov	r8, r2
	add	r8, r8, r0
	mov	r3, r8
	lsl	r3, r3, #0x2
	mov	r8, r3
	ldr	r0, .L106
	add	r8, r8, r0
	ldr	r5, .L106+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x1
	add	r0, r4, r5
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	add	r0, r5, #0x2
	add	r0, r4, r0
	mov	r3, #0x0
	ldrsh	r2, [r0, r3]
	add	r0, r5, #0x4
	add	r0, r4, r0
	mov	r6, #0x0
	ldrsh	r3, [r0, r6]
	add	r0, r5, #0x6
	add	r0, r4, r0
	mov	r6, #0x0
	ldrsh	r0, [r0, r6]
	str	r0, [sp]
	add	r5, r5, #0x8
	add	r4, r4, r5
	mov	r5, #0x0
	ldrsh	r0, [r4, r5]
	str	r0, [sp, #0x4]
	mov	r0, r8
	bl	SetBerrySpriteData
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gSprites
	.word	sBerrySpriteData
.Lfe10:
	.size	 CreateBerrySprite,.Lfe10-CreateBerrySprite
	.align	2, 0
	.type	 ConvertItemToBlenderBerry,function
	.thumb_func
ConvertItemToBlenderBerry:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r5, r1, #0x10
	lsr	r5, r5, #0x10
	add	r0, r5, #0
	add	r0, r0, #0x71
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBerryInfo
	add	r4, r0, #0
	strh	r5, [r6]
	add	r0, r6, #0x2
	add	r1, r4, #0
	bl	StringCopy
	ldrb	r0, [r4, #0x15]
	strb	r0, [r6, #0x9]
	ldrb	r0, [r4, #0x16]
	strb	r0, [r6, #0xa]
	ldrb	r0, [r4, #0x17]
	strb	r0, [r6, #0xb]
	ldrb	r0, [r4, #0x18]
	strb	r0, [r6, #0xc]
	ldrb	r0, [r4, #0x19]
	strb	r0, [r6, #0xd]
	ldrb	r0, [r4, #0x1a]
	strb	r0, [r6, #0xe]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 ConvertItemToBlenderBerry,.Lfe11-ConvertItemToBlenderBerry
	.align	2, 0
	.type	 InitLocalPlayers,function
	.thumb_func
InitLocalPlayers:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	beq	.L112	@cond_branch
	cmp	r5, #0x1
	bgt	.L119	@cond_branch
	cmp	r5, #0
	beq	.L111	@cond_branch
	b	.L110
.L119:
	cmp	r5, #0x2
	beq	.L115	@cond_branch
	cmp	r5, #0x3
	beq	.L116	@cond_branch
	b	.L110
.L111:
	ldr	r0, .L120
	strb	r5, [r0]
	b	.L110
.L121:
	.align	2, 0
.L120:
	.word	gInGameOpponentsNo
.L112:
	ldr	r0, .L122
	strb	r5, [r0]
	ldr	r0, .L122+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r4, .L122+0x8
	ldr	r0, .L122+0xc
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0xd0
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L113	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x1c
	ldr	r1, .L122+0x10
	ldr	r1, [r1, #0xc]
	bl	StringCopy
	b	.L114
.L123:
	.align	2, 0
.L122:
	.word	gInGameOpponentsNo
	.word	sBerryBlender
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2Ptr
	.word	sBlenderOpponentsNames
.L113:
	add	r0, r4, #0
	add	r0, r0, #0x1c
	ldr	r1, .L124
	ldr	r1, [r1]
	bl	StringCopy
.L114:
	ldr	r1, .L124+0x4
	mov	r0, #0x2
	strh	r0, [r1, #0x1a]
	strh	r0, [r1, #0x36]
	b	.L110
.L125:
	.align	2, 0
.L124:
	.word	sBlenderOpponentsNames
	.word	gLinkPlayers
.L115:
	ldr	r0, .L126
	strb	r5, [r0]
	ldr	r0, .L126+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r6, .L126+0x8
	ldr	r0, .L126+0xc
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0x1c
	ldr	r4, .L126+0x10
	ldr	r1, [r4, #0x10]
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0x38
	ldr	r1, [r4, #0x8]
	bl	StringCopy
	add	r0, r6, #0
	sub	r0, r0, #0x8
	strh	r5, [r0, #0x1a]
	strh	r5, [r0, #0x36]
	add	r0, r0, #0x52
	strh	r5, [r0]
	b	.L110
.L127:
	.align	2, 0
.L126:
	.word	gInGameOpponentsNo
	.word	sBerryBlender
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2Ptr
	.word	sBlenderOpponentsNames
.L116:
	ldr	r0, .L128
	strb	r5, [r0]
	ldr	r0, .L128+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	mov	r1, #0x4
	strb	r1, [r0]
	ldr	r5, .L128+0x8
	ldr	r0, .L128+0xc
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r5, #0
	add	r0, r0, #0x1c
	ldr	r4, .L128+0x10
	ldr	r1, [r4, #0x14]
	bl	StringCopy
	add	r0, r5, #0
	add	r0, r0, #0x38
	ldr	r1, [r4, #0x4]
	bl	StringCopy
	add	r0, r5, #0
	add	r0, r0, #0x54
	ldr	r1, [r4, #0x8]
	bl	StringCopy
	add	r0, r5, #0
	sub	r0, r0, #0x8
	mov	r1, #0x2
	strh	r1, [r0, #0x1a]
	strh	r1, [r0, #0x36]
	add	r0, r0, #0x52
	strh	r1, [r0]
	add	r0, r0, #0x1c
	strh	r1, [r0]
.L110:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gInGameOpponentsNo
	.word	sBerryBlender
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2Ptr
	.word	sBlenderOpponentsNames
.Lfe12:
	.size	 InitLocalPlayers,.Lfe12-InitLocalPlayers
	.align	2, 0
	.type	 StartBlender,function
	.thumb_func
StartBlender:
	push	{r4, r5, lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r4, .L139
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L131	@cond_branch
	mov	r0, #0x8f
	lsl	r0, r0, #0x5
	bl	AllocZeroed
	str	r0, [r4]
.L131:
	ldr	r0, [r4]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	mov	r2, #0x86
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	str	r1, [r0]
	mov	r2, #0x0
	ldr	r5, .L139+0x4
	mov	r3, #0x0
.L135:
	ldr	r0, [r4]
	lsl	r1, r2, #0x1
	add	r0, r0, #0x74
	add	r0, r0, r1
	strh	r3, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x3
	ble	.L135	@cond_branch
	ldrb	r0, [r5]
	bl	InitLocalPlayers
	ldrh	r0, [r5]
	cmp	r0, #0
	bne	.L137	@cond_branch
	ldr	r0, .L139+0x8
	bl	SetMainCallback2
	b	.L138
.L140:
	.align	2, 0
.L139:
	.word	sBerryBlender
	.word	gSpecialVar_0x8004
	.word	CB2_StartBlenderLink
.L137:
	ldr	r0, .L141
	bl	SetMainCallback2
.L138:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	CB2_StartBlenderLocal
.Lfe13:
	.size	 StartBlender,.Lfe13-StartBlender
	.align	2, 0
	.type	 CB2_StartBlenderLink,function
	.thumb_func
CB2_StartBlenderLink:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L212
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x15
	bls	.LCB1412
	b	.L144	@long jump
.LCB1412:
	lsl	r0, r0, #0x2
	ldr	r1, .L212+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L213:
	.align	2, 0
.L212:
	.word	sBerryBlender
	.word	.L206
	.align	2, 0
	.align	2, 0
.L206:
	.word	.L145
	.word	.L156
	.word	.L158
	.word	.L165
	.word	.L166
	.word	.L168
	.word	.L144
	.word	.L144
	.word	.L169
	.word	.L170
	.word	.L173
	.word	.L181
	.word	.L188
	.word	.L192
	.word	.L194
	.word	.L196
	.word	.L198
	.word	.L144
	.word	.L210
	.word	.L201
	.word	.L202
	.word	.L204
.L145:
	bl	InitBlenderBgs
	ldr	r1, .L214
	ldr	r2, .L214+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r2, .L214+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x72
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r5, #0x0
	mov	r6, #0x0
	mov	r7, #0x92
	lsl	r7, r7, #0x1
.L149:
	ldr	r0, [r2]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	strh	r6, [r0]
	add	r4, r5, #0x1
	add	r1, r1, r5
	lsl	r1, r1, #0x1
	mov	r3, #0x2
.L153:
	ldr	r0, [r2]
	add	r0, r0, r7
	add	r0, r0, r1
	strh	r6, [r0]
	add	r1, r1, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L153	@cond_branch
	add	r5, r4, #0
	cmp	r5, #0x3
	ble	.L149	@cond_branch
	ldr	r3, .L214+0x8
	ldr	r4, [r3]
	add	r1, r4, #0
	add	r1, r1, #0x70
	mov	r2, #0x0
	mov	r0, #0x0
	strh	r0, [r1]
	sub	r1, r1, #0x22
	strh	r0, [r1]
	strb	r2, [r4, #0x1]
	ldr	r1, [r3]
	b	.L209
.L215:
	.align	2, 0
.L214:
	.word	gLinkType
	.word	0x4422
	.word	sBerryBlender
.L156:
	bl	LoadBerryBlenderGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1516
	b	.L144	@long jump
.LCB1516:
	ldr	r0, .L216
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	UpdateBlenderCenter
	b	.L144
.L217:
	.align	2, 0
.L216:
	.word	sBerryBlender
.L158:
	mov	r5, #0x0
	ldr	r4, .L218
	ldr	r6, .L218+0x4
.L162:
	ldrb	r1, [r4]
	ldrb	r2, [r4, #0x1]
	ldr	r0, .L218+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x54
	add	r1, r1, r5
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x54
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L218+0xc
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L162	@cond_branch
	ldr	r0, .L218+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB1583
	b	.L210	@long jump
.LCB1583:
	ldr	r0, .L218+0x14
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB1589
	b	.L210	@long jump
.LCB1589:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L210
.L219:
	.align	2, 0
.L218:
	.word	sPlayerArrowPos
	.word	sBerryBlender
	.word	sSpriteTemplate_PlayerArrow
	.word	gSprites
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.L165:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L210
.L166:
	bl	DrawBlenderBg
	ldr	r0, .L220
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB1630
	b	.L144	@long jump
.LCB1630:
	b	.L210
.L221:
	.align	2, 0
.L220:
	.word	gPaletteFade
.L168:
	ldr	r4, .L222
	ldr	r0, [r4]
	ldr	r3, .L222+0x4
	add	r0, r0, r3
	ldr	r1, .L222+0x8
	mov	r2, #0x0
	bl	Blender_PrintText
	ldr	r1, [r4]
	mov	r2, #0x0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	str	r2, [r0]
	b	.L144
.L223:
	.align	2, 0
.L222:
	.word	sBerryBlender
	.word	0x11b8
	.word	sText_CommunicationStandby
.L169:
	ldr	r4, .L224
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r6, #0x0
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r2, #0x8a
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	strb	r6, [r0]
	ldr	r0, [r4]
	mov	r5, #0xac
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	ldr	r1, .L224+0x4
	ldrh	r1, [r1]
	bl	ConvertItemToBlenderBerry
	ldr	r0, .L224+0x8
	ldr	r1, [r4]
	add	r1, r1, r5
	mov	r2, #0x10
	bl	memcpy
	bl	SetLinkStandbyCallback
	ldr	r0, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	str	r6, [r0]
	b	.L144
.L225:
	.align	2, 0
.L224:
	.word	sBerryBlender
	.word	gSpecialVar_ItemId
	.word	gBlockSendBuffer
.L170:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1723
	b	.L144	@long jump
.LCB1723:
	bl	ResetBlockReceivedFlags
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1731
	b	.L210	@long jump
.LCB1731:
	mov	r0, #0x4
	bl	SendBlockRequest
	b	.L210
.L173:
	ldr	r6, .L226
	ldr	r1, [r6]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	bgt	.LCB1748
	b	.L144	@long jump
.LCB1748:
	mov	r0, #0x4
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrameToTransparent
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.LCB1762
	b	.L144	@long jump
.LCB1762:
	mov	r5, #0x0
	add	r7, r6, #0
	mov	r6, #0xac
	lsl	r6, r6, #0x1
	b	.L176
.L227:
	.align	2, 0
.L226:
	.word	sBerryBlender
.L179:
	ldr	r0, [r7]
	lsl	r4, r5, #0x4
	add	r0, r4, r0
	add	r0, r0, r6
	lsl	r1, r5, #0x8
	ldr	r2, .L228
	add	r1, r1, r2
	mov	r2, #0x10
	bl	memcpy
	ldr	r0, [r7]
	lsl	r2, r5, #0x1
	add	r1, r0, #0
	add	r1, r1, #0x74
	add	r1, r1, r2
	add	r0, r0, r4
	add	r0, r0, r6
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r5, r5, #0x1
.L176:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	blt	.L179	@cond_branch
	bl	ResetBlockReceivedFlags
	b	.L210
.L229:
	.align	2, 0
.L228:
	.word	gBlockRecvBuffer
.L208:
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x74
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	bl	CreateBerrySprite
	b	.L183
.L181:
	bl	GetLinkPlayerCount
	ldr	r2, .L230
	ldr	r1, [r2]
	add	r1, r1, #0x7c
	strb	r0, [r1]
	mov	r5, #0x0
	ldr	r2, [r2]
	mov	r1, #0x8a
	lsl	r1, r1, #0x1
	add	r4, r2, r1
	ldr	r1, .L230+0x4
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	ldrb	r3, [r4]
	add	r0, r0, r1
.L185:
	ldrb	r1, [r0]
	cmp	r3, r1
	beq	.L208	@cond_branch
	add	r0, r0, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L185	@cond_branch
.L183:
	ldr	r3, .L230
	ldr	r1, [r3]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, [r3]
	mov	r2, #0x8a
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	b	.L209
.L231:
	.align	2, 0
.L230:
	.word	sBerryBlender
	.word	sPlayerIdMap
.L188:
	ldr	r3, [r2]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB1912
	b	.L144	@long jump
.LCB1912:
	mov	r1, #0x8a
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	add	r1, r3, #0
	add	r1, r1, #0x7c
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L190	@cond_branch
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	strb	r0, [r3]
	ldr	r2, [r2]
	ldr	r3, .L232
	ldr	r1, .L232+0x4
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldr	r3, .L232+0x8
	add	r1, r3, #0
	ldrh	r0, [r0]
	add	r1, r1, r0
	add	r2, r2, #0x4a
	strh	r1, [r2]
	b	.L191
.L233:
	.align	2, 0
.L232:
	.word	sArrowStartPos
	.word	sArrowStartPosIds
	.word	-0x5800
.L190:
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
	strb	r0, [r3]
.L191:
	ldr	r0, .L234
	ldr	r0, [r0]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	str	r1, [r0]
	b	.L144
.L235:
	.align	2, 0
.L234:
	.word	sBerryBlender
.L192:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1989
	b	.L144	@long jump
.LCB1989:
	ldr	r2, .L236
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	bl	DrawBlenderCenter
	mov	r0, #0x2b
	bl	PlaySE
	mov	r0, #0x2
	bl	ShowBg
	b	.L144
.L237:
	.align	2, 0
.L236:
	.word	sBerryBlender
.L194:
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldr	r4, .L238
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x4a
	mov	r3, #0x80
	lsl	r3, r3, #0x2
	add	r0, r3, #0
	ldrh	r3, [r1]
	add	r0, r0, r3
	strh	r0, [r1]
	mov	r0, #0x8d
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x4
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xff
	bls	.L195	@cond_branch
	mov	r0, #0xc
	mov	r1, #0x2
	bl	SetGpuRegBits
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r3, [r4]
	mov	r2, #0x8d
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r2, .L238+0x4
	ldr	r1, .L238+0x8
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	add	r1, r3, #0
	add	r1, r1, #0x4a
	strh	r0, [r1]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x34
	bl	PlaySE
	bl	SetPlayerIdMaps
	bl	PrintPlayerNames
.L195:
	ldr	r0, [r4]
	b	.L211
.L239:
	.align	2, 0
.L238:
	.word	sBerryBlender
	.word	sArrowStartPos
	.word	sArrowStartPosIds
.L196:
	bl	UpdateBlenderLandScreenShake
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L197	@cond_branch
	ldr	r0, .L240
	ldr	r1, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L197:
	ldr	r0, .L240
	ldr	r0, [r0]
.L211:
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	DrawBlenderCenter
	b	.L144
.L241:
	.align	2, 0
.L240:
	.word	sBerryBlender
.L198:
	ldr	r0, .L242
	mov	r2, #0x10
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x3
	bl	CreateSprite
	b	.L210
.L243:
	.align	2, 0
.L242:
	.word	sSpriteTemplate_CountdownNumbers
.L201:
	bl	SetLinkStandbyCallback
	b	.L210
.L202:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L144	@cond_branch
	bl	SetBerryBlenderLinkCallback
.L210:
	ldr	r0, .L244
	ldr	r1, [r0]
.L209:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L144
.L245:
	.align	2, 0
.L244:
	.word	sBerryBlender
.L204:
	ldr	r5, .L246
	ldr	r3, [r5]
	add	r1, r3, #0
	add	r1, r1, #0x4c
	mov	r2, #0x0
	mov	r0, #0x80
	strh	r0, [r1]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	str	r2, [r0]
	ldr	r0, .L246+0x4
	bl	SetMainCallback2
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L246+0x8
	cmp	r0, r4
	beq	.L205	@cond_branch
	bl	GetCurrentMapMusic
	ldr	r1, [r5]
	mov	r2, #0xaa
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	strh	r0, [r1]
.L205:
	add	r0, r4, #0
	bl	PlayBGM
.L144:
	ldr	r0, .L246
	ldr	r1, [r0]
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	add	r3, r3, #0x2
	add	r1, r1, r3
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L247:
	.align	2, 0
.L246:
	.word	sBerryBlender
	.word	CB2_PlayBlender
	.word	0x193
.Lfe14:
	.size	 CB2_StartBlenderLink,.Lfe14-CB2_StartBlenderLink
	.align	2, 0
	.type	 InitBlenderBgs,function
	.thumb_func
InitBlenderBgs:
	push	{r4, lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L249
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L249+0x4
	mov	r0, #0x1
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r4, .L249+0x8
	ldr	r1, [r4]
	mov	r0, #0xdc
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r3, .L249+0xc
	add	r1, r1, r3
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xf0
	bl	LoadMessageBoxGfx
	bl	InitBerryBlenderWindows
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x44
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x8
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L250:
	.align	2, 0
.L249:
	.word	VBlankCB_BerryBlender
	.word	sBgTemplates
	.word	sBerryBlender
	.word	0x9b8
.Lfe15:
	.size	 InitBlenderBgs,.Lfe15-InitBlenderBgs
	.align	2, 0
	.type	 GetArrowProximity,function
	.thumb_func
GetArrowProximity:
	push	{lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	add	r2, r2, #0x18
	ldr	r0, .L256
	ldr	r0, [r0]
	lsr	r1, r1, #0x17
	add	r0, r0, #0x96
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L256+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	cmp	r2, r1
	bcc	.L252	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x30
	cmp	r2, r0
	bcs	.L252	@cond_branch
	sub	r0, r0, #0x1c
	cmp	r2, r0
	bcc	.L253	@cond_branch
	add	r0, r0, #0x8
	cmp	r2, r0
	bcs	.L253	@cond_branch
	mov	r0, #0x2
	b	.L255
.L257:
	.align	2, 0
.L256:
	.word	sBerryBlender
	.word	sArrowHitRangeStart
.L253:
	mov	r0, #0x1
	b	.L255
.L252:
	mov	r0, #0x0
.L255:
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 GetArrowProximity,.Lfe16-GetArrowProximity
	.align	2, 0
	.type	 SetOpponentsBerryData,function
	.thumb_func
SetOpponentsBerryData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r6, #0x0
	cmp	r5, #0xcd
	bne	.L259	@cond_branch
	mov	r4, #0x0
	sub	r7, r1, #0x1
	add	r2, r2, #0x9
.L263:
	add	r0, r2, r6
	add	r1, r2, r4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L262	@cond_branch
	add	r6, r4, #0
.L262:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L263	@cond_branch
	add	r0, r6, #0x5
	b	.L275
.L259:
	add	r0, r5, #0
	sub	r0, r0, #0x90
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	sub	r7, r1, #0x1
	cmp	r6, #0x4
	bls	.L266	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x5
	bl	__umodsi3
	add	r0, r0, #0x5
.L275:
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L266:
	mov	r4, #0x0
	cmp	r4, r7
	bge	.L269	@cond_branch
	ldr	r0, .L276
	mov	r9, r0
	add	r0, r5, #0
	sub	r0, r0, #0xae
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
.L271:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	add	r0, r4, r0
	add	r0, r0, r9
	ldrb	r5, [r0]
	mov	r0, #0xd0
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L272	@cond_branch
	ldr	r0, .L276+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L272	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L276+0x8
	add	r0, r6, r0
	ldrb	r5, [r0]
	mov	r0, r8
	cmp	r0, #0x4
	bhi	.L272	@cond_branch
	sub	r0, r5, #0x5
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L272:
	add	r4, r4, #0x1
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	add	r1, r5, #0
	add	r1, r1, #0x90
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	SetPlayerBerryData
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, r7
	blt	.L271	@cond_branch
.L269:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	sOpponentBerrySets
	.word	gSpecialVar_0x8004
	.word	sBerryMasterBerries
.Lfe17:
	.size	 SetOpponentsBerryData,.Lfe17-SetOpponentsBerryData
	.align	2, 0
	.type	 SetPlayerIdMaps,function
	.thumb_func
SetPlayerIdMaps:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	ldr	r7, .L295
	mov	r6, #0xff
	ldr	r5, .L295+0x4
.L282:
	ldr	r3, [r7]
	lsl	r2, r4, #0x1
	add	r0, r3, #0
	add	r0, r0, #0x96
	add	r0, r0, r2
	strh	r6, [r0]
	add	r1, r3, #0
	add	r1, r1, #0x8e
	add	r1, r1, r2
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	add	r0, r0, r5
	ldrb	r0, [r0]
	strh	r0, [r1]
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L282	@cond_branch
	mov	r3, #0x0
	ldr	r7, .L295
.L287:
	mov	r4, #0x0
	add	r6, r3, #0x1
	lsl	r5, r3, #0x1
.L291:
	ldr	r2, [r7]
	lsl	r0, r4, #0x1
	add	r1, r2, #0
	add	r1, r1, #0x8e
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, r3
	bne	.L290	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x96
	add	r0, r0, r5
	strh	r4, [r0]
.L290:
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L291	@cond_branch
	add	r3, r6, #0
	cmp	r3, #0x3
	ble	.L287	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L296:
	.align	2, 0
.L295:
	.word	sBerryBlender
	.word	sPlayerIdMap
.Lfe18:
	.size	 SetPlayerIdMaps,.Lfe18-SetPlayerIdMaps
	.align	2, 0
	.type	 PrintPlayerNames,function
	.thumb_func
PrintPlayerNames:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	mov	r0, #0x0
	mov	sl, r0
	ldr	r0, .L307
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L298	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
.L298:
	mov	r6, #0x0
	ldr	r7, .L307+0x4
	mov	r8, r6
.L302:
	ldr	r2, [r7]
	lsl	r5, r6, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x8e
	add	r3, r0, r5
	ldrh	r0, [r3]
	cmp	r0, #0xff
	beq	.L301	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x50
	ldrh	r3, [r3]
	add	r1, r1, r3
	add	r0, r2, #0
	add	r0, r0, #0x54
	add	r0, r0, r6
	ldrb	r0, [r0]
	mov	r2, #0x0
	mov	r9, r2
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r1, r0, #0
	add	r1, r1, #0x8e
	add	r1, r1, r5
	add	r0, r0, #0x50
	ldrh	r1, [r1]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L307+0x8
	add	r0, r0, r1
	mov	r1, r8
	lsr	r4, r1, #0x18
	add	r1, r4, #0
	bl	StartSpriteAnim
	add	r1, sp, #0x8
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x8e
	add	r0, r0, r5
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L307+0xc
	add	r1, r1, r0
	add	r0, sp, #0x8
	bl	StringCopy
	mov	r0, #0x1
	add	r1, sp, #0x8
	mov	r2, #0x38
	bl	GetStringCenterAlignXOffset
	add	r2, r0, #0
	ldr	r0, [r7]
	add	r0, r0, #0x8e
	add	r0, r0, r5
	mov	r5, r8
	ldrh	r0, [r0]
	cmp	sl, r0
	bne	.L304	@cond_branch
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, r9
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	add	r1, sp, #0x8
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	b	.L305
.L308:
	.align	2, 0
.L307:
	.word	gReceivedRemoteLinkPlayers
	.word	sBerryBlender
	.word	gSprites
	.word	gLinkPlayers+0x8
.L304:
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, r9
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	add	r1, sp, #0x8
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
.L305:
	lsr	r4, r5, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L301:
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r8, r8, r2
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L302	@cond_branch
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 PrintPlayerNames,.Lfe19-PrintPlayerNames
	.align	2, 0
	.type	 CB2_StartBlenderLocal,function
	.thumb_func
CB2_StartBlenderLocal:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L373
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x15
	bls	.LCB2824
	b	.L310	@long jump
.LCB2824:
	lsl	r0, r0, #0x2
	ldr	r1, .L373+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L374:
	.align	2, 0
.L373:
	.word	sBerryBlender
	.word	.L367
	.align	2, 0
	.align	2, 0
.L367:
	.word	.L311
	.word	.L322
	.word	.L324
	.word	.L330
	.word	.L331
	.word	.L310
	.word	.L310
	.word	.L310
	.word	.L334
	.word	.L310
	.word	.L310
	.word	.L335
	.word	.L342
	.word	.L346
	.word	.L347
	.word	.L349
	.word	.L351
	.word	.L310
	.word	.L355
	.word	.L354
	.word	.L355
	.word	.L356
.L311:
	bl	SetWirelessCommType0
	bl	InitBlenderBgs
	ldr	r4, .L375
	ldrh	r1, [r4]
	mov	r0, #0x0
	bl	SetPlayerBerryData
	ldr	r5, .L375+0x4
	ldr	r0, [r5]
	mov	r6, #0xac
	lsl	r6, r6, #0x1
	add	r0, r0, r6
	ldrh	r1, [r4]
	bl	ConvertItemToBlenderBerry
	ldrh	r0, [r4]
	ldr	r2, [r5]
	add	r1, r2, #0
	add	r1, r1, #0x7c
	ldrb	r1, [r1]
	add	r2, r2, r6
	bl	SetOpponentsBerryData
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r0, .L375+0x8
	mov	ip, r0
	mov	r7, #0x92
	lsl	r7, r7, #0x1
.L315:
	ldr	r0, [r5]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	strh	r6, [r0]
	add	r3, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x1
	mov	r2, #0x2
.L319:
	ldr	r0, [r5]
	add	r0, r0, r7
	add	r0, r0, r1
	strh	r6, [r0]
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L319	@cond_branch
	add	r4, r3, #0
	cmp	r4, #0x3
	ble	.L315	@cond_branch
	ldr	r4, .L375+0x4
	ldr	r3, [r4]
	add	r1, r3, #0
	add	r1, r1, #0x70
	mov	r2, #0x0
	mov	r0, #0x0
	strh	r0, [r1]
	strb	r2, [r3, #0x1]
	ldr	r1, .L375+0xc
	add	r0, r1, #0
	mov	r2, ip
	strh	r0, [r2]
	ldr	r1, [r4]
	b	.L370
.L376:
	.align	2, 0
.L375:
	.word	gSpecialVar_ItemId
	.word	sBerryBlender
	.word	gLinkType
	.word	0x4422
.L322:
	bl	LoadBerryBlenderGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2949
	b	.L310	@long jump
.LCB2949:
	ldr	r0, .L377
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	UpdateBlenderCenter
	b	.L310
.L378:
	.align	2, 0
.L377:
	.word	sBerryBlender
.L324:
	mov	r4, #0x0
	ldr	r5, .L379
	ldr	r6, .L379+0x4
.L328:
	ldrb	r1, [r5]
	ldrb	r2, [r5, #0x1]
	ldr	r0, .L379+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x54
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x54
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L379+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L328	@cond_branch
	b	.L355
.L380:
	.align	2, 0
.L379:
	.word	sPlayerArrowPos
	.word	sBerryBlender
	.word	sSpriteTemplate_PlayerArrow
	.word	gSprites
.L330:
	mov	r0, #0x1
	neg	r0, r0
	mov	r4, #0x0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L381
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	str	r4, [r0]
	b	.L310
.L382:
	.align	2, 0
.L381:
	.word	sBerryBlender
.L331:
	ldr	r4, .L383
	ldr	r1, [r4]
	mov	r5, #0x84
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x2
	bne	.L332	@cond_branch
	bl	DrawBlenderBg
.L332:
	ldr	r0, .L383+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB3073
	b	.L310	@long jump
.LCB3073:
	ldr	r1, [r4]
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L310
.L384:
	.align	2, 0
.L383:
	.word	sBerryBlender
	.word	gPaletteFade
.L334:
	ldr	r2, .L385
	ldr	r1, [r2]
	mov	r3, #0x0
	mov	r0, #0xb
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x8a
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	strb	r3, [r0]
	b	.L310
.L386:
	.align	2, 0
.L385:
	.word	sBerryBlender
.L369:
	lsl	r1, r1, #0x1
	add	r0, r3, #0
	add	r0, r0, #0x74
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	bl	CreateBerrySprite
	b	.L337
.L335:
	mov	r4, #0x0
	ldr	r2, .L387
	ldr	r0, .L387+0x4
	ldr	r3, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	mov	r5, #0x8a
	lsl	r5, r5, #0x1
	add	r1, r3, r5
	ldrb	r1, [r1]
	add	r0, r0, r2
.L339:
	ldrb	r2, [r0]
	cmp	r1, r2
	beq	.L369	@cond_branch
	add	r0, r0, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L339	@cond_branch
.L337:
	ldr	r3, .L387+0x4
	ldr	r1, [r3]
	mov	r5, #0x84
	lsl	r5, r5, #0x1
	add	r2, r1, r5
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, [r3]
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	b	.L370
.L388:
	.align	2, 0
.L387:
	.word	sPlayerIdMap
	.word	sBerryBlender
.L342:
	ldr	r3, [r2]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB3190
	b	.L310	@long jump
.LCB3190:
	mov	r5, #0x8a
	lsl	r5, r5, #0x1
	add	r0, r3, r5
	add	r4, r3, #0
	add	r4, r4, #0x7c
	ldrb	r0, [r0]
	ldrb	r1, [r4]
	cmp	r0, r1
	bcc	.L344	@cond_branch
	ldr	r2, .L389
	ldr	r1, .L389+0x4
	ldrb	r0, [r4]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldr	r2, .L389+0x8
	add	r1, r2, #0
	ldrh	r0, [r0]
	add	r1, r1, r0
	add	r0, r3, #0
	add	r0, r0, #0x4a
	strh	r1, [r0]
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	b	.L371
.L390:
	.align	2, 0
.L389:
	.word	sArrowStartPos
	.word	sArrowStartPosIds
	.word	-0x5800
.L344:
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
.L371:
	strb	r0, [r3]
	ldr	r0, .L391
	ldr	r0, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	mov	r1, #0x0
	str	r1, [r0]
	b	.L310
.L392:
	.align	2, 0
.L391:
	.word	sBerryBlender
.L346:
	ldr	r4, .L393
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	SetPlayerIdMaps
	mov	r0, #0x2b
	bl	PlaySE
	ldr	r0, [r4]
	mov	r5, #0xa0
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	bl	DrawBlenderCenter
	mov	r0, #0x2
	bl	ShowBg
	b	.L310
.L394:
	.align	2, 0
.L393:
	.word	sBerryBlender
.L347:
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldr	r4, .L395
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x4a
	mov	r3, #0x80
	lsl	r3, r3, #0x2
	add	r0, r3, #0
	ldrh	r5, [r1]
	add	r0, r0, r5
	strh	r0, [r1]
	mov	r0, #0x8d
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x4
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xff
	bls	.L348	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	ldr	r3, [r4]
	mov	r2, #0x8d
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r2, .L395+0x4
	ldr	r1, .L395+0x8
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x4a
	strh	r1, [r0]
	mov	r0, #0xc
	mov	r1, #0x2
	bl	SetGpuRegBits
	ldr	r0, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	mov	r1, #0x0
	str	r1, [r0]
	mov	r0, #0x34
	bl	PlaySE
	bl	PrintPlayerNames
.L348:
	ldr	r0, [r4]
	mov	r5, #0xa0
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	bl	DrawBlenderCenter
	b	.L310
.L396:
	.align	2, 0
.L395:
	.word	sBerryBlender
	.word	sArrowStartPos
	.word	sArrowStartPosIds
.L349:
	bl	UpdateBlenderLandScreenShake
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L350	@cond_branch
	ldr	r0, .L397
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L350:
	ldr	r0, .L397
	ldr	r0, [r0]
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	DrawBlenderCenter
	b	.L310
.L398:
	.align	2, 0
.L397:
	.word	sBerryBlender
.L351:
	ldr	r0, .L399
	mov	r2, #0x10
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x3
	bl	CreateSprite
.L354:
.L355:
	ldr	r0, .L399+0x4
	ldr	r1, [r0]
.L370:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L310
.L400:
	.align	2, 0
.L399:
	.word	sSpriteTemplate_CountdownNumbers
	.word	sBerryBlender
.L356:
	bl	ResetLinkCmds
	ldr	r5, .L401
	ldr	r4, [r5]
	add	r1, r4, #0
	add	r1, r1, #0x4c
	mov	r3, #0x0
	mov	r2, #0x0
	mov	r0, #0x80
	strh	r0, [r1]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	str	r2, [r0]
	ldr	r2, .L401+0x4
	add	r0, r4, r2
	strb	r3, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x72
	strb	r3, [r0]
	ldr	r0, .L401+0x8
	bl	SetMainCallback2
	ldr	r0, .L401+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L357	@cond_branch
	mov	r0, #0xd0
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L358	@cond_branch
	ldr	r0, .L401+0x10
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, [r5]
	mov	r3, #0x90
	lsl	r3, r3, #0x1
	add	r1, r1, r3
	b	.L372
.L402:
	.align	2, 0
.L401:
	.word	sBerryBlender
	.word	0x123
	.word	CB2_PlayBlender
	.word	gSpecialVar_0x8004
	.word	Task_HandleBerryMaster
.L358:
	ldr	r0, .L403
	ldr	r0, [r0]
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, [r5]
	mov	r5, #0x90
	lsl	r5, r5, #0x1
	add	r1, r1, r5
.L372:
	strb	r0, [r1]
.L357:
	ldr	r1, .L403+0x4
	ldrh	r0, [r1]
	cmp	r0, #0x1
	bls	.L360	@cond_branch
	mov	r4, #0x0
	ldrh	r1, [r1]
	cmp	r4, r1
	bge	.L360	@cond_branch
	mov	r5, #0xa0
	lsl	r5, r5, #0x14
	ldr	r6, .L403
.L364:
	ldmia	r6!, {r0}
	lsr	r1, r5, #0x18
	bl	CreateTask
	ldr	r1, .L403+0x8
	ldr	r1, [r1]
	mov	r2, #0x90
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	mov	r3, #0x80
	lsl	r3, r3, #0x11
	add	r5, r5, r3
	add	r4, r4, #0x1
	ldr	r0, .L403+0x4
	ldrh	r0, [r0]
	cmp	r4, r0
	blt	.L364	@cond_branch
.L360:
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L403+0xc
	cmp	r0, r4
	beq	.L366	@cond_branch
	bl	GetCurrentMapMusic
	ldr	r1, .L403+0x8
	ldr	r1, [r1]
	mov	r5, #0xaa
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	strh	r0, [r1]
.L366:
	add	r0, r4, #0
	bl	PlayBGM
	mov	r0, #0x35
	bl	PlaySE
	bl	UpdateHitPitch
.L310:
	ldr	r0, .L403+0x8
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r5, #0x8f
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L404:
	.align	2, 0
.L403:
	.word	sLocalOpponentTasks
	.word	gSpecialVar_0x8004
	.word	sBerryBlender
	.word	0x193
.Lfe20:
	.size	 CB2_StartBlenderLocal,.Lfe20-CB2_StartBlenderLocal
	.align	2, 0
	.type	 ResetLinkCmds,function
	.thumb_func
ResetLinkCmds:
	push	{lr}
	ldr	r3, .L411
	mov	r0, #0x0
	ldr	r1, .L411+0x4
	mov	r2, #0x3
.L409:
	strh	r0, [r3]
	strh	r0, [r3, #0x4]
	strh	r0, [r1]
	strh	r0, [r1, #0x4]
	add	r1, r1, #0x10
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L409	@cond_branch
	pop	{r0}
	bx	r0
.L412:
	.align	2, 0
.L411:
	.word	gSendCmd
	.word	gRecvCmds
.Lfe21:
	.size	 ResetLinkCmds,.Lfe21-ResetLinkCmds
	.align	2, 0
	.type	 Task_OpponentMiss,function
	.thumb_func
Task_OpponentMiss:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L415
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r4, #0xa
	ldrsh	r1, [r2, r4]
	cmp	r0, r1
	ble	.L414	@cond_branch
	ldr	r0, .L415+0x4
	mov	r4, #0xc
	ldrsh	r1, [r2, r4]
	lsl	r1, r1, #0x4
	add	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r0, .L415+0x8
	strh	r0, [r1]
	add	r0, r3, #0
	bl	DestroyTask
.L414:
	pop	{r4}
	pop	{r0}
	bx	r0
.L416:
	.align	2, 0
.L415:
	.word	gTasks
	.word	gRecvCmds
	.word	0x2345
.Lfe22:
	.size	 Task_OpponentMiss,.Lfe22-Task_OpponentMiss
	.align	2, 0
	.type	 CreateOpponentMissTask,function
	.thumb_func
CreateOpponentMissTask:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L418
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L418+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0xc]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L419:
	.align	2, 0
.L418:
	.word	Task_OpponentMiss
	.word	gTasks
.Lfe23:
	.size	 CreateOpponentMissTask,.Lfe23-CreateOpponentMissTask
	.align	2, 0
	.type	 Task_HandleOpponent1,function
	.thumb_func
Task_HandleOpponent1:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L446
	ldr	r0, [r4]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	GetArrowProximity
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.LCB3761
	b	.L421	@long jump
.LCB3761:
	ldr	r2, .L446+0x4
	lsl	r1, r5, #0x2
	add	r0, r1, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	add	r6, r1, #0
	cmp	r0, #0
	beq	.LCB3773
	b	.L441	@long jump
.LCB3773:
	ldr	r0, [r4]
	ldr	r1, .L446+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L423	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L446+0xc
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r3, r1, #0
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	mov	r4, #0x0
	ldrsh	r2, [r0, r4]
	ldr	r0, .L446+0x10
	cmp	r2, r0
	bgt	.L424	@cond_branch
	cmp	r1, #0x4b
	bls	.L425	@cond_branch
	ldr	r1, .L446+0x14
	ldr	r0, .L446+0x18
	b	.L442
.L447:
	.align	2, 0
.L446:
	.word	sBerryBlender
	.word	gTasks
	.word	0x123
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L425:
	ldr	r1, .L448
	ldr	r0, .L448+0x4
.L442:
	strh	r0, [r1, #0x14]
	ldr	r0, .L448+0x4
	b	.L443
.L449:
	.align	2, 0
.L448:
	.word	gRecvCmds
	.word	0x5432
.L424:
	ldr	r0, .L450
	cmp	r2, r0
	bgt	.L428	@cond_branch
	cmp	r1, #0x50
	bhi	.L423	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bhi	.L431	@cond_branch
	ldr	r1, .L450+0x4
	ldr	r0, .L450+0x8
	b	.L443
.L451:
	.align	2, 0
.L450:
	.word	0x5db
	.word	gRecvCmds
	.word	0x5432
.L431:
	cmp	r1, #0x9
	bhi	.L440	@cond_branch
	b	.L444
.L428:
	cmp	r1, #0x5a
	bhi	.L435	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x47
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L436	@cond_branch
	ldr	r1, .L452
	ldr	r0, .L452+0x4
	b	.L443
.L453:
	.align	2, 0
.L452:
	.word	gRecvCmds
	.word	0x5432
.L436:
	cmp	r3, #0x1d
	bhi	.L440	@cond_branch
.L444:
	mov	r0, #0x1
	mov	r1, #0x5
	bl	CreateOpponentMissTask
	b	.L440
.L435:
.L423:
	ldr	r1, .L454
	ldr	r0, .L454+0x4
.L443:
	strh	r0, [r1, #0x14]
.L440:
	ldr	r0, .L454+0x8
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L445
.L455:
	.align	2, 0
.L454:
	.word	gRecvCmds
	.word	0x4523
	.word	gTasks
.L421:
	ldr	r0, .L456
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L445:
	strh	r0, [r1, #0x8]
.L441:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L457:
	.align	2, 0
.L456:
	.word	gTasks
.Lfe24:
	.size	 Task_HandleOpponent1,.Lfe24-Task_HandleOpponent1
	.align	2, 0
	.type	 Task_HandleOpponent2,function
	.thumb_func
Task_HandleOpponent2:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L472
	ldr	r3, [r6]
	add	r0, r3, #0
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	ldr	r1, .L472+0x4
	and	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0x9a
	ldrb	r1, [r1]
	lsr	r2, r0, #0x8
	ldr	r0, .L472+0x8
	add	r1, r1, r0
	ldrb	r1, [r1]
	add	r0, r1, #0
	add	r0, r0, #0x14
	cmp	r2, r0
	bls	.L459	@cond_branch
	add	r0, r0, #0x14
	cmp	r2, r0
	bcs	.L459	@cond_branch
	ldr	r2, .L472+0xc
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r2
	mov	r5, #0x8
	ldrsh	r0, [r2, r5]
	add	r5, r1, #0
	cmp	r0, #0
	bne	.L470	@cond_branch
	ldr	r1, .L472+0x10
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L461	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L472+0x14
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r3, r2, #0
	ldr	r0, [r6]
	add	r0, r0, #0x4c
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	ldr	r0, .L472+0x18
	cmp	r1, r0
	bgt	.L462	@cond_branch
	cmp	r2, #0x42
	bls	.L463	@cond_branch
	ldr	r1, .L472+0x1c
	ldr	r0, .L472+0x20
	strh	r0, [r1, #0x24]
	b	.L465
.L473:
	.align	2, 0
.L472:
	.word	sBerryBlender
	.word	0xffff
	.word	sArrowHitRangeStart
	.word	gTasks
	.word	0x123
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L463:
	ldr	r1, .L474
	ldr	r0, .L474+0x4
	strh	r0, [r1, #0x24]
	b	.L465
.L475:
	.align	2, 0
.L474:
	.word	gRecvCmds
	.word	0x5432
.L462:
	cmp	r2, #0x41
	bls	.L466	@cond_branch
	ldr	r1, .L476
	ldr	r0, .L476+0x4
	strh	r0, [r1, #0x24]
.L466:
	add	r0, r2, #0
	sub	r0, r0, #0x29
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x18
	bhi	.L467	@cond_branch
	ldr	r1, .L476
	ldr	r0, .L476+0x8
	strh	r0, [r1, #0x24]
.L467:
	cmp	r3, #0x9
	bhi	.L465	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x5
	bl	CreateOpponentMissTask
.L465:
	ldr	r0, .L476+0xc
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L471
.L477:
	.align	2, 0
.L476:
	.word	gRecvCmds
	.word	0x4523
	.word	0x5432
	.word	gTasks
.L461:
	ldr	r0, .L478
	ldr	r1, .L478+0x4
	strh	r1, [r0, #0x24]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L470
.L479:
	.align	2, 0
.L478:
	.word	gRecvCmds
	.word	0x4523
.L459:
	ldr	r0, .L480
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L471:
	strh	r0, [r1, #0x8]
.L470:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L481:
	.align	2, 0
.L480:
	.word	gTasks
.Lfe25:
	.size	 Task_HandleOpponent2,.Lfe25-Task_HandleOpponent2
	.align	2, 0
	.type	 Task_HandleOpponent3,function
	.thumb_func
Task_HandleOpponent3:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r5, .L498
	ldr	r3, [r5]
	add	r0, r3, #0
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	ldr	r1, .L498+0x4
	and	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0x9c
	ldrb	r1, [r1]
	lsr	r2, r0, #0x8
	ldr	r0, .L498+0x8
	add	r1, r1, r0
	ldrb	r1, [r1]
	add	r0, r1, #0
	add	r0, r0, #0x14
	cmp	r2, r0
	bls	.L483	@cond_branch
	add	r0, r0, #0x14
	cmp	r2, r0
	bcs	.L483	@cond_branch
	ldr	r2, .L498+0xc
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r2
	mov	r6, #0x8
	ldrsh	r0, [r2, r6]
	add	r6, r1, #0
	cmp	r0, #0
	bne	.L495	@cond_branch
	ldr	r1, .L498+0x10
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L485	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L498+0x14
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, [r5]
	add	r0, r0, #0x4c
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr	r0, .L498+0x18
	cmp	r1, r0
	bgt	.L486	@cond_branch
	cmp	r2, #0x58
	bls	.L487	@cond_branch
	ldr	r1, .L498+0x1c
	ldr	r0, .L498+0x20
	strh	r0, [r1, #0x34]
	b	.L489
.L499:
	.align	2, 0
.L498:
	.word	sBerryBlender
	.word	0xffff
	.word	sArrowHitRangeStart
	.word	gTasks
	.word	0x123
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L487:
	ldr	r1, .L500
	ldr	r0, .L500+0x4
	strh	r0, [r1, #0x34]
	b	.L489
.L501:
	.align	2, 0
.L500:
	.word	gRecvCmds
	.word	0x5432
.L486:
	cmp	r2, #0x3c
	bls	.L490	@cond_branch
	ldr	r1, .L502
	ldr	r0, .L502+0x4
	b	.L496
.L503:
	.align	2, 0
.L502:
	.word	gRecvCmds
	.word	0x4523
.L490:
	add	r0, r2, #0
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bhi	.L491	@cond_branch
	ldr	r1, .L504
	ldr	r0, .L504+0x4
.L496:
	strh	r0, [r1, #0x34]
.L491:
	cmp	r2, #0x4
	bhi	.L489	@cond_branch
	mov	r0, #0x3
	mov	r1, #0x5
	bl	CreateOpponentMissTask
.L489:
	ldr	r0, .L504+0x8
	add	r1, r6, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L497
.L505:
	.align	2, 0
.L504:
	.word	gRecvCmds
	.word	0x5432
	.word	gTasks
.L485:
	ldr	r0, .L506
	ldr	r1, .L506+0x4
	strh	r1, [r0, #0x34]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L495
.L507:
	.align	2, 0
.L506:
	.word	gRecvCmds
	.word	0x4523
.L483:
	ldr	r0, .L508
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L497:
	strh	r0, [r1, #0x8]
.L495:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L509:
	.align	2, 0
.L508:
	.word	gTasks
.Lfe26:
	.size	 Task_HandleOpponent3,.Lfe26-Task_HandleOpponent3
	.align	2, 0
	.type	 Task_HandleBerryMaster,function
	.thumb_func
Task_HandleBerryMaster:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L514
	ldr	r0, [r0]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	GetArrowProximity
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L511	@cond_branch
	ldr	r0, .L514+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r2, r1, r0
	mov	r1, #0x8
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L513	@cond_branch
	ldr	r0, .L514+0x8
	ldr	r1, .L514+0xc
	strh	r1, [r0, #0x14]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L513
.L515:
	.align	2, 0
.L514:
	.word	sBerryBlender
	.word	gTasks
	.word	gRecvCmds
	.word	0x4523
.L511:
	ldr	r0, .L516
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
.L513:
	pop	{r4}
	pop	{r0}
	bx	r0
.L517:
	.align	2, 0
.L516:
	.word	gTasks
.Lfe27:
	.size	 Task_HandleBerryMaster,.Lfe27-Task_HandleBerryMaster
	.align	2, 0
	.type	 CreateScoreSymbolSprite,function
	.thumb_func
CreateScoreSymbolSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r8, r7
	lsl	r1, r1, #0x18
	ldr	r0, .L524
	ldr	r4, .L524+0x4
	lsr	r1, r1, #0x17
	add	r2, r1, r4
	ldrb	r6, [r2]
	ldr	r5, .L524+0x8
	add	r2, r1, r5
	mov	r3, #0x0
	ldrsb	r3, [r2, r3]
	lsl	r2, r3, #0x2
	add	r2, r2, r3
	lsl	r2, r2, #0x1
	sub	r6, r6, r2
	add	r4, r4, #0x1
	add	r4, r1, r4
	ldrb	r2, [r4]
	add	r5, r5, #0x1
	add	r1, r1, r5
	mov	r3, #0x0
	ldrsb	r3, [r1, r3]
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x1
	sub	r2, r2, r1
	add	r1, r6, #0
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	ldr	r0, .L524+0xc
	cmp	r7, r0
	bne	.L519	@cond_branch
	lsl	r4, r1, #0x4
	add	r4, r4, r1
	lsl	r4, r4, #0x2
	ldr	r5, .L524+0x10
	add	r0, r4, r5
	mov	r1, #0x2
	bl	StartSpriteAnim
	add	r5, r5, #0x1c
	add	r4, r4, r5
	ldr	r0, .L524+0x14
	str	r0, [r4]
	mov	r0, #0x28
	bl	PlaySE
	b	.L520
.L525:
	.align	2, 0
.L524:
	.word	sSpriteTemplate_ScoreSymbols
	.word	sPlayerArrowPos
	.word	sPlayerArrowQuadrant
	.word	0x4523
	.word	gSprites
	.word	SpriteCB_ScoreSymbolBest
.L519:
	ldr	r0, .L526
	cmp	r7, r0
	bne	.L521	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L526+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	mov	r0, #0x1f
	bl	PlaySE
	b	.L520
.L527:
	.align	2, 0
.L526:
	.word	0x5432
	.word	gSprites
.L521:
	ldr	r0, .L528
	cmp	r8, r0
	bne	.L520	@cond_branch
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r1, .L528+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	bl	StartSpriteAnim
	mov	r0, #0x20
	bl	PlaySE
.L520:
	bl	CreateParticleSprites
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L529:
	.align	2, 0
.L528:
	.word	0x2345
	.word	gSprites
.Lfe28:
	.size	 CreateScoreSymbolSprite,.Lfe28-CreateScoreSymbolSprite
	.align	2, 0
	.type	 UpdateSpeedFromHit,function
	.thumb_func
UpdateSpeedFromHit:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r5, r4, #0
	bl	UpdateHitPitch
	ldr	r0, .L543
	cmp	r4, r0
	beq	.L532	@cond_branch
	cmp	r4, r0
	bgt	.L541	@cond_branch
	ldr	r0, .L543+0x4
	cmp	r4, r0
	beq	.L537	@cond_branch
	b	.L531
.L544:
	.align	2, 0
.L543:
	.word	0x4523
	.word	0x2345
.L541:
	ldr	r0, .L545
	cmp	r5, r0
	beq	.L535	@cond_branch
	b	.L531
.L546:
	.align	2, 0
.L545:
	.word	0x5432
.L532:
	ldr	r7, .L547
	ldr	r4, [r7]
	add	r5, r4, #0
	add	r5, r5, #0x4c
	ldrh	r6, [r5]
	mov	r0, #0x0
	ldrsh	r1, [r5, r0]
	ldr	r0, .L547+0x4
	cmp	r1, r0
	bgt	.L533	@cond_branch
	ldr	r1, .L547+0x8
	add	r0, r4, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	bl	__divsi3
	add	r0, r6, r0
	strh	r0, [r5]
	b	.L531
.L548:
	.align	2, 0
.L547:
	.word	sBerryBlender
	.word	0x5db
	.word	sNumPlayersToSpeedDivisor
.L533:
	ldr	r1, .L549
	add	r0, r4, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	bl	__divsi3
	add	r0, r6, r0
	strh	r0, [r5]
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r4, r4, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	mov	r1, #0x64
	bl	__divsi3
	add	r1, r0, #0
	sub	r1, r1, #0xa
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	ShakeBgCoordForHit
	ldr	r0, [r7]
	mov	r1, #0x8f
	lsl	r1, r1, #0x1
	add	r4, r0, r1
	add	r0, r0, #0x4c
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r1, #0x64
	bl	__divsi3
	add	r1, r0, #0
	sub	r1, r1, #0xa
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	ShakeBgCoordForHit
	b	.L531
.L550:
	.align	2, 0
.L549:
	.word	sNumPlayersToSpeedDivisor
.L535:
	ldr	r0, .L551
	ldr	r2, [r0]
	add	r4, r2, #0
	add	r4, r4, #0x4c
	ldrh	r5, [r4]
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr	r0, .L551+0x4
	cmp	r1, r0
	bgt	.L531	@cond_branch
	ldr	r1, .L551+0x8
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	__divsi3
	add	r0, r5, r0
	b	.L542
.L552:
	.align	2, 0
.L551:
	.word	sBerryBlender
	.word	0x5db
	.word	sNumPlayersToSpeedDivisor
.L537:
	ldr	r0, .L553
	ldr	r0, [r0]
	add	r4, r0, #0
	add	r4, r4, #0x4c
	ldr	r1, .L553+0x4
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	__divsi3
	ldrh	r1, [r4]
	sub	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7f
	bgt	.L531	@cond_branch
	mov	r0, #0x80
.L542:
	strh	r0, [r4]
.L531:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L554:
	.align	2, 0
.L553:
	.word	sBerryBlender
	.word	sNumPlayersToSpeedDivisor
.Lfe29:
	.size	 UpdateSpeedFromHit,.Lfe29-UpdateSpeedFromHit
	.align	2, 0
	.type	 CheckRecvCmdMatches,function
	.thumb_func
CheckRecvCmdMatches:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L561
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L556	@cond_branch
	ldr	r0, .L561+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L556	@cond_branch
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	and	r0, r0, r3
	cmp	r0, r2
	bne	.L558	@cond_branch
	mov	r0, #0x1
	b	.L560
.L562:
	.align	2, 0
.L561:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.L556:
	cmp	r3, r1
	bne	.L558	@cond_branch
	mov	r0, #0x1
	b	.L560
.L558:
	mov	r0, #0x0
.L560:
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 CheckRecvCmdMatches,.Lfe30-CheckRecvCmdMatches
	.align	2, 0
	.type	 UpdateOpponentScores,function
	.thumb_func
UpdateOpponentScores:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	ldr	r0, .L597
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L564	@cond_branch
	ldr	r3, .L597+0x4
	ldrh	r0, [r3, #0x4]
	ldr	r2, .L597+0x8
	cmp	r0, #0
	beq	.L565	@cond_branch
	mov	r1, #0x0
	strh	r0, [r2, #0x4]
	ldr	r0, .L597+0xc
	strh	r0, [r2]
	strh	r1, [r3, #0x4]
.L565:
	ldr	r0, .L597+0x8
	ldr	r3, .L597+0xc
	add	r1, r2, #0
	add	r1, r1, #0x10
	add	r2, r0, #0
	add	r2, r2, #0x14
	mov	r7, #0x2
.L569:
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L568	@cond_branch
	strh	r3, [r1]
.L568:
	add	r1, r1, #0x10
	add	r2, r2, #0x10
	sub	r7, r7, #0x1
	cmp	r7, #0
	bge	.L569	@cond_branch
.L564:
	mov	r7, #0x0
	ldr	r1, .L597+0x10
	ldr	r0, [r1]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.LCB4956
	b	.L573	@long jump
.LCB4956:
	ldr	r0, .L597+0x8
	add	r2, r0, #0
	add	r2, r2, #0x20
	str	r2, [sp]
	mov	r1, #0x0
	mov	r9, r1
	mov	r2, #0x0
	str	r2, [sp, #0x4]
	mov	r8, r0
	ldr	r0, .L597+0x14
	mov	sl, r0
.L575:
	mov	r1, r8
	ldrh	r0, [r1]
	ldr	r1, .L597+0xc
	mov	r2, #0x88
	lsl	r2, r2, #0x7
	bl	CheckRecvCmdMatches
	cmp	r0, #0
	bne	.LCB4984
	b	.L574	@long jump
.LCB4984:
	ldr	r6, .L597+0x10
	ldr	r0, [r6]
	add	r0, r0, #0x96
	ldr	r2, [sp, #0x4]
	add	r0, r0, r2
	ldrh	r5, [r0]
	mov	r0, r8
	ldrh	r4, [r0, #0x4]
	ldr	r1, .L597+0x18
	cmp	r4, r1
	bne	.L577	@cond_branch
	add	r0, r1, #0
	bl	UpdateSpeedFromHit
	ldr	r0, [r6]
	mov	r2, #0x8b
	lsl	r2, r2, #0x1
	add	r4, r0, r2
	add	r0, r0, #0x4c
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r1, #0x37
	bl	__divsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r1, #0x10
	ldr	r0, .L597+0x1c
	cmp	r1, r0
	bls	.L578	@cond_branch
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	strh	r0, [r4]
.L578:
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L597+0x18
	bl	CreateScoreSymbolSprite
	ldr	r1, [r6]
	mov	r2, #0x92
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r9
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L596
.L598:
	.align	2, 0
.L597:
	.word	gSpecialVar_0x8004
	.word	gSendCmd
	.word	gRecvCmds
	.word	0x4444
	.word	sBerryBlender
	.word	0x5432
	.word	0x4523
	.word	0x3e70000
.L577:
	cmp	r4, sl
	bne	.L580	@cond_branch
	mov	r0, sl
	bl	UpdateSpeedFromHit
	ldr	r0, [r6]
	mov	r1, #0x8b
	lsl	r1, r1, #0x1
	add	r4, r0, r1
	add	r0, r0, #0x4c
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r1, #0x46
	bl	__divsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sl
	bl	CreateScoreSymbolSprite
	ldr	r1, [r6]
	mov	r0, #0x93
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, r9
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L596
.L580:
	ldr	r0, .L599
	cmp	r4, r0
	bne	.L595	@cond_branch
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	CreateScoreSymbolSprite
	add	r0, r4, #0
	bl	UpdateSpeedFromHit
	ldr	r0, [r6]
	mov	r1, #0x94
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r2, r9
	add	r1, r0, r2
	ldrh	r2, [r1]
	ldr	r0, .L599+0x4
	cmp	r2, r0
	bhi	.L579	@cond_branch
	add	r0, r2, #0x1
.L596:
	strh	r0, [r1]
.L579:
	mov	r0, r8
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L599
	cmp	r1, r0
	beq	.L585	@cond_branch
.L595:
	ldr	r1, [sp]
	ldrh	r0, [r1]
	ldr	r2, .L599+0x8
	cmp	r0, r2
	beq	.L585	@cond_branch
	cmp	r0, sl
	bne	.L574	@cond_branch
.L585:
	ldr	r0, .L599+0xc
	ldr	r0, [r0]
	add	r2, r0, #0
	add	r2, r2, #0x4c
	mov	r0, #0x0
	ldrsh	r1, [r2, r0]
	ldr	r0, .L599+0x10
	cmp	r1, r0
	ble	.L586	@cond_branch
	add	r0, r1, #0
	ldr	r2, .L599+0x14
	add	r0, r0, r2
	mov	r1, #0x14
	bl	__divsi3
	add	r1, r0, #0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L599+0x18
	bl	m4aMPlayTempoControl
	b	.L574
.L600:
	.align	2, 0
.L599:
	.word	0x2345
	.word	0x3e6
	.word	0x4523
	.word	sBerryBlender
	.word	0x5dc
	.word	-0x2ee
	.word	gMPlayInfo_BGM
.L586:
	ldr	r0, .L601
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	bl	m4aMPlayTempoControl
.L574:
	ldr	r1, [sp]
	add	r1, r1, #0x2
	str	r1, [sp]
	mov	r2, #0x6
	add	r9, r9, r2
	ldr	r0, [sp, #0x4]
	add	r0, r0, #0x2
	str	r0, [sp, #0x4]
	mov	r1, #0x10
	add	r8, r8, r1
	add	r7, r7, #0x1
	ldr	r0, .L601+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.LCB5220
	b	.L575	@long jump
.LCB5220:
.L573:
	ldr	r0, .L601+0x8
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L589	@cond_branch
	mov	r7, #0x0
	ldr	r3, .L601+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L589	@cond_branch
	mov	r2, #0x0
	ldr	r1, .L601+0xc
.L593:
	strh	r2, [r1]
	strh	r2, [r1, #0x4]
	add	r1, r1, #0x10
	add	r7, r7, #0x1
	ldr	r0, [r3]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L593	@cond_branch
.L589:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L602:
	.align	2, 0
.L601:
	.word	gMPlayInfo_BGM
	.word	sBerryBlender
	.word	gSpecialVar_0x8004
	.word	gRecvCmds
.Lfe31:
	.size	 UpdateOpponentScores,.Lfe31-UpdateOpponentScores
	.align	2, 0
	.type	 HandlePlayerInput,function
	.thumb_func
HandlePlayerInput:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r0, .L620
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L604	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L604:
	ldr	r3, .L620+0x4
	ldr	r1, [r3]
	lsl	r2, r6, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x96
	add	r0, r0, r2
	ldrb	r5, [r0]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L605	@cond_branch
	ldr	r0, .L620+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0x2
	bne	.L606	@cond_branch
	ldr	r2, .L620+0xc
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L608	@cond_branch
	ldrh	r2, [r2, #0x28]
	ldr	r1, .L620+0x10
	add	r0, r1, #0
	and	r0, r0, r2
	cmp	r0, r1
	beq	.L608	@cond_branch
	b	.L618
.L621:
	.align	2, 0
.L620:
	.word	gReceivedRemoteLinkPlayers
	.word	sBerryBlender
	.word	gSaveBlock2Ptr
	.word	gMain
	.word	0x201
.L606:
	ldr	r0, .L622
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L608	@cond_branch
	mov	r4, #0x1
.L608:
	cmp	r4, #0
	beq	.L605	@cond_branch
.L618:
	ldr	r4, .L622+0x4
	ldr	r1, [r4]
	lsl	r2, r5, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x8e
	add	r0, r0, r2
	add	r1, r1, #0x50
	ldrh	r0, [r0]
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L622+0x8
	add	r0, r0, r1
	add	r1, r5, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	ldr	r0, [r4]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	add	r1, r6, #0
	bl	GetArrowProximity
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L611	@cond_branch
	ldr	r1, .L622+0xc
	ldr	r0, .L622+0x10
	b	.L619
.L623:
	.align	2, 0
.L622:
	.word	gMain
	.word	sBerryBlender
	.word	gSprites
	.word	gSendCmd
	.word	0x4523
.L611:
	cmp	r0, #0x1
	bne	.L613	@cond_branch
	ldr	r1, .L624
	ldr	r0, .L624+0x4
	b	.L619
.L625:
	.align	2, 0
.L624:
	.word	gSendCmd
	.word	0x5432
.L613:
	ldr	r1, .L626
	ldr	r0, .L626+0x4
.L619:
	strh	r0, [r1, #0x4]
	add	r3, r4, #0
.L605:
	ldr	r1, [r3]
	add	r1, r1, #0x72
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bls	.L615	@cond_branch
	ldr	r0, [r3]
	add	r1, r0, #0
	add	r1, r1, #0x4c
	ldrh	r2, [r1]
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x80
	ble	.L616	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1]
.L616:
	ldr	r0, [r3]
	add	r0, r0, #0x72
	mov	r1, #0x0
	strb	r1, [r0]
.L615:
	ldr	r0, .L626+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L617	@cond_branch
	ldr	r0, .L626+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L617	@cond_branch
	ldr	r0, [r3]
	ldr	r1, .L626+0x10
	add	r2, r0, r1
	ldrb	r0, [r2]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2]
.L617:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L627:
	.align	2, 0
.L626:
	.word	gSendCmd
	.word	0x2345
	.word	gEnableContestDebugging
	.word	gMain
	.word	0x123
.Lfe32:
	.size	 HandlePlayerInput,.Lfe32-HandlePlayerInput
	.align	2, 0
	.type	 CB2_PlayBlender,function
	.thumb_func
CB2_PlayBlender:
	push	{r4, r5, r6, lr}
	bl	UpdateBlenderCenter
	ldr	r4, .L631
	ldr	r0, [r4]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r2, r0, r1
	ldr	r1, [r2]
	ldr	r0, .L631+0x4
	cmp	r1, r0
	bhi	.L629	@cond_branch
	add	r0, r1, #0x1
	str	r0, [r2]
.L629:
	bl	HandlePlayerInput
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	mov	r5, #0x8b
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	ldrh	r1, [r1]
	bl	SetLinkDebugValues
	bl	UpdateOpponentScores
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrh	r0, [r0]
	mov	r6, #0xfa
	lsl	r6, r6, #0x2
	add	r1, r6, #0
	bl	TryUpdateProgressBar
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	bl	UpdateRPM
	bl	RestoreBgCoords
	bl	ProcessLinkPlayerCmds
	ldr	r2, [r4]
	add	r3, r2, #0
	add	r3, r3, #0x63
	ldrb	r0, [r3]
	cmp	r0, #0
	bne	.L630	@cond_branch
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	ldrh	r1, [r0]
	ldr	r0, .L631+0x8
	cmp	r1, r0
	bls	.L630	@cond_branch
	add	r0, r2, r5
	strh	r6, [r0]
	mov	r0, #0x1
	strb	r0, [r3]
	ldr	r0, .L631+0xc
	bl	SetMainCallback2
.L630:
	ldr	r0, .L631
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r2, #0x8f
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L632:
	.align	2, 0
.L631:
	.word	sBerryBlender
	.word	0x57e03
	.word	0x3e7
	.word	CB2_EndBlenderGame
.Lfe33:
	.size	 CB2_PlayBlender,.Lfe33-CB2_PlayBlender
	.align	2, 0
	.type	 Blender_DummiedOutFunc,function
	.thumb_func
Blender_DummiedOutFunc:
	bx	lr
.Lfe34:
	.size	 Blender_DummiedOutFunc,.Lfe34-Blender_DummiedOutFunc
	.align	2, 0
	.type	 AreBlenderBerriesSame,function
	.thumb_func
AreBlenderBerriesSame:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r1, r1, #0x14
	add	r4, r1, r0
	lsr	r2, r2, #0x14
	add	r5, r2, r0
	ldrh	r0, [r4]
	ldrh	r1, [r5]
	cmp	r0, r1
	bne	.L636	@cond_branch
	add	r0, r4, #0x2
	add	r1, r5, #0x2
	bl	StringCompare
	cmp	r0, #0
	bne	.L635	@cond_branch
	ldr	r0, [r4, #0x8]
	ldr	r2, .L639
	and	r0, r0, r2
	ldr	r1, [r5, #0x8]
	and	r1, r1, r2
	cmp	r0, r1
	bne	.L635	@cond_branch
	ldr	r0, [r4, #0xc]
	ldr	r2, .L639+0x4
	and	r0, r0, r2
	ldr	r1, [r5, #0xc]
	and	r1, r1, r2
	cmp	r0, r1
	bne	.L635	@cond_branch
.L636:
	mov	r0, #0x1
	b	.L638
.L640:
	.align	2, 0
.L639:
	.word	-0x100
	.word	0xffffff
.L635:
	mov	r0, #0x0
.L638:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe35:
	.size	 AreBlenderBerriesSame,.Lfe35-AreBlenderBerriesSame
	.align	2, 0
	.type	 CalculatePokeblockColor,function
	.thumb_func
CalculatePokeblockColor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	mov	sl, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x10]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r2, sp
	mov	r4, #0x5
.L645:
	ldrh	r0, [r1]
	strh	r0, [r2]
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L645	@cond_branch
	mov	r6, #0x0
	mov	r1, sp
	mov	r4, #0x4
.L650:
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L649	@cond_branch
	add	r6, r6, #0x1
.L649:
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L650	@cond_branch
	cmp	r6, #0x5
	beq	.L664	@cond_branch
	cmp	r3, #0x3
	bhi	.L664	@cond_branch
	mov	r4, #0x0
	ldr	r3, [sp, #0x10]
	cmp	r4, r3
	bge	.L656	@cond_branch
	mov	r3, sl
.L658:
	mov	r6, #0x0
	ldr	r7, [sp, #0x10]
	cmp	r6, r7
	bge	.L657	@cond_branch
	mov	r9, r3
	mov	r5, sl
	lsl	r0, r4, #0x18
	mov	r8, r0
.L662:
	mov	r1, r9
	ldrh	r0, [r1]
	ldrh	r2, [r5]
	cmp	r0, r2
	bne	.L661	@cond_branch
	cmp	r4, r6
	beq	.L661	@cond_branch
	cmp	r0, #0xcd
	bne	.L664	@cond_branch
	lsl	r2, r6, #0x18
	lsr	r2, r2, #0x18
	mov	r0, sl
	mov	r7, r8
	lsr	r1, r7, #0x18
	str	r3, [sp, #0xc]
	bl	AreBlenderBerriesSame
	lsl	r0, r0, #0x18
	ldr	r3, [sp, #0xc]
	cmp	r0, #0
	beq	.L661	@cond_branch
.L664:
	mov	r0, #0xc
	b	.L705
.L661:
	add	r5, r5, #0x10
	add	r6, r6, #0x1
	ldr	r0, [sp, #0x10]
	cmp	r6, r0
	blt	.L662	@cond_branch
.L657:
	add	r3, r3, #0x10
	add	r4, r4, #0x1
	ldr	r1, [sp, #0x10]
	cmp	r4, r1
	blt	.L658	@cond_branch
.L656:
	mov	r2, #0x0
	mov	r1, sp
	mov	r4, #0x4
.L670:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L669	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L669:
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L670	@cond_branch
	cmp	r2, #0x3
	bls	.L673	@cond_branch
	mov	r0, #0xd
	b	.L705
.L673:
	cmp	r2, #0x3
	bne	.L674	@cond_branch
	mov	r0, #0xb
	b	.L705
.L674:
	mov	r4, #0x0
	mov	r1, sp
.L678:
	mov	r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x32
	ble	.LCB5892
	b	.L706	@long jump
.LCB5892:
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L678	@cond_branch
	cmp	r2, #0x1
	bne	.L685	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	ble	.L681	@cond_branch
	mov	r0, #0x1
	b	.L705
.L681:
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L682	@cond_branch
	mov	r0, #0x2
	b	.L705
.L682:
	mov	r0, sp
	mov	r3, #0x4
	ldrsh	r0, [r0, r3]
	cmp	r0, #0
	ble	.L683	@cond_branch
	mov	r0, #0x3
	b	.L705
.L683:
	mov	r0, sp
	mov	r4, #0x6
	ldrsh	r0, [r0, r4]
	cmp	r0, #0
	ble	.L684	@cond_branch
	mov	r0, #0x4
	b	.L705
.L684:
	mov	r0, sp
	mov	r7, #0x8
	ldrsh	r0, [r0, r7]
	cmp	r0, #0
	ble	.L685	@cond_branch
	mov	r0, #0x5
	b	.L705
.L685:
	cmp	r2, #0x2
	bne	.L686	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L712
	mov	r1, sp
	add	r2, r5, #0
.L690:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L689	@cond_branch
	strh	r4, [r2]
	add	r2, r2, #0x2
.L689:
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L690	@cond_branch
	mov	r4, #0x0
	ldrsh	r3, [r5, r4]
	lsl	r0, r3, #0x1
	mov	r7, sp
	add	r1, r7, r0
	mov	r0, #0x2
	ldrsh	r2, [r5, r0]
	lsl	r0, r2, #0x1
	add	r0, r0, sp
	mov	r4, #0x0
	ldrsh	r1, [r1, r4]
	mov	r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp	r1, r0
	blt	.L693	@cond_branch
	add	r0, r3, #0
	cmp	r0, #0
	bne	.L694	@cond_branch
	lsl	r0, r2, #0x10
	b	.L707
.L713:
	.align	2, 0
.L712:
	.word	sPokeblockPresentFlavors
.L694:
	cmp	r0, #0x1
	bne	.L695	@cond_branch
	lsl	r0, r2, #0x10
	b	.L708
.L695:
	cmp	r0, #0x2
	bne	.L696	@cond_branch
	lsl	r0, r2, #0x10
	b	.L709
.L696:
	cmp	r0, #0x3
	bne	.L697	@cond_branch
	lsl	r0, r2, #0x10
	b	.L710
.L697:
	cmp	r0, #0x4
	bne	.L686	@cond_branch
	lsl	r0, r2, #0x10
	b	.L711
.L693:
	mov	r2, #0x2
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.L700	@cond_branch
	lsl	r0, r3, #0x10
.L707:
	mov	r1, #0x6
	orr	r0, r0, r1
	b	.L705
.L700:
	cmp	r0, #0x1
	bne	.L701	@cond_branch
	lsl	r0, r3, #0x10
.L708:
	mov	r1, #0x7
	orr	r0, r0, r1
	b	.L705
.L701:
	cmp	r0, #0x2
	bne	.L702	@cond_branch
	lsl	r0, r3, #0x10
.L709:
	mov	r1, #0x8
	orr	r0, r0, r1
	b	.L705
.L702:
	cmp	r0, #0x3
	bne	.L703	@cond_branch
	lsl	r0, r3, #0x10
.L710:
	mov	r1, #0x9
	orr	r0, r0, r1
	b	.L705
.L703:
	cmp	r0, #0x4
	bne	.L686	@cond_branch
	lsl	r0, r3, #0x10
.L711:
	mov	r1, #0xa
	orr	r0, r0, r1
	b	.L705
.L706:
	mov	r0, #0xe
	b	.L705
.L686:
	mov	r0, #0x0
.L705:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe36:
	.size	 CalculatePokeblockColor,.Lfe36-CalculatePokeblockColor
	.align	2, 0
	.type	 Debug_SetMaxRPMStage,function
	.thumb_func
Debug_SetMaxRPMStage:
	ldr	r1, .L715
	strh	r0, [r1]
	bx	lr
.L716:
	.align	2, 0
.L715:
	.word	sDebug_MaxRPMStage
.Lfe37:
	.size	 Debug_SetMaxRPMStage,.Lfe37-Debug_SetMaxRPMStage
	.align	2, 0
	.type	 Debug_GetMaxRPMStage,function
	.thumb_func
Debug_GetMaxRPMStage:
	ldr	r0, .L718
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	bx	lr
.L719:
	.align	2, 0
.L718:
	.word	sDebug_MaxRPMStage
.Lfe38:
	.size	 Debug_GetMaxRPMStage,.Lfe38-Debug_GetMaxRPMStage
	.align	2, 0
	.type	 Debug_SetGameTimeStage,function
	.thumb_func
Debug_SetGameTimeStage:
	ldr	r1, .L721
	strh	r0, [r1]
	bx	lr
.L722:
	.align	2, 0
.L721:
	.word	sDebug_GameTimeStage
.Lfe39:
	.size	 Debug_SetGameTimeStage,.Lfe39-Debug_SetGameTimeStage
	.align	2, 0
	.type	 Debug_GetGameTimeStage,function
	.thumb_func
Debug_GetGameTimeStage:
	ldr	r0, .L724
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	bx	lr
.L725:
	.align	2, 0
.L724:
	.word	sDebug_GameTimeStage
.Lfe40:
	.size	 Debug_GetGameTimeStage,.Lfe40-Debug_GetGameTimeStage
	.align	2, 0
	.type	 CalculatePokeblock,function
	.thumb_func
CalculatePokeblock:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	str	r0, [sp]
	mov	r8, r1
	str	r3, [sp, #0x4]
	ldr	r0, [sp, #0x30]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	ldr	r7, .L792
	add	r2, r7, #0
	mov	r1, #0x0
	add	r0, r7, #0
	add	r0, r0, #0xa
.L730:
	strh	r1, [r0]
	sub	r0, r0, #0x2
	cmp	r0, r2
	bge	.L730	@cond_branch
	mov	r6, #0x0
	cmp	r6, r9
	bge	.L733	@cond_branch
	ldr	r0, .L792
	mov	ip, r0
	ldr	r5, [sp]
	add	r5, r5, #0x9
.L735:
	mov	r3, #0x0
	add	r4, r5, #0
	mov	r2, ip
.L739:
	add	r1, r4, r3
	ldrh	r0, [r2]
	ldrb	r1, [r1]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x5
	ble	.L739	@cond_branch
	add	r5, r5, #0x10
	add	r6, r6, #0x1
	cmp	r6, r9
	blt	.L735	@cond_branch
.L733:
	mov	r1, #0x0
	ldrsh	r3, [r7, r1]
	ldrh	r0, [r7]
	ldrh	r1, [r7, #0x2]
	sub	r0, r0, r1
	strh	r0, [r7]
	ldrh	r0, [r7, #0x4]
	sub	r1, r1, r0
	strh	r1, [r7, #0x2]
	ldrh	r1, [r7, #0x6]
	sub	r0, r0, r1
	strh	r0, [r7, #0x4]
	ldrh	r0, [r7, #0x8]
	sub	r1, r1, r0
	strh	r1, [r7, #0x6]
	sub	r0, r0, r3
	strh	r0, [r7, #0x8]
	mov	r3, #0x0
	mov	r2, #0x0
	add	r1, r7, #0
	mov	r6, #0x4
.L745:
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bge	.L744	@cond_branch
	strh	r2, [r1]
	add	r3, r3, #0x1
.L744:
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L745	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	mov	r4, #0x0
	ldr	r1, .L792
	mov	r6, #0x4
.L751:
	ldrh	r2, [r1]
	mov	r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp	r0, #0
	ble	.L750	@cond_branch
	cmp	r0, r3
	bge	.L753	@cond_branch
	strh	r4, [r1]
	b	.L750
.L793:
	.align	2, 0
.L792:
	.word	sPokeblockFlavors
.L753:
	sub	r0, r2, r3
	strh	r0, [r1]
.L750:
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L751	@cond_branch
	ldr	r1, .L794
	ldr	r2, .L794+0x4
	mov	r6, #0x4
.L759:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	stmia	r2!, {r0}
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L759	@cond_branch
	ldr	r1, .L794+0x8
	ldr	r0, [sp, #0x8]
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r3, r0, #0
	add	r3, r3, #0x64
	ldr	r4, .L794+0xc
	str	r3, [r4]
	mov	r6, #0x4
.L764:
	mov	r0, #0x0
	ldrsh	r5, [r7, r0]
	mov	r0, r5
	mul	r0, r0, r3
	mov	r1, #0xa
	str	r3, [sp, #0xc]
	bl	__divsi3
	add	r5, r0, #0
	mov	r1, #0xa
	bl	__modsi3
	add	r4, r0, #0
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__divsi3
	add	r5, r0, #0
	ldr	r3, [sp, #0xc]
	cmp	r4, #0x4
	ble	.L765	@cond_branch
	add	r5, r5, #0x1
.L765:
	strh	r5, [r7]
	add	r7, r7, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L764	@cond_branch
	ldr	r1, .L794
	ldr	r2, .L794+0x10
	mov	r6, #0x4
.L770:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	stmia	r2!, {r0}
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L770	@cond_branch
	ldr	r4, .L794
	ldr	r0, [sp]
	add	r1, r4, #0
	mov	r2, r9
	mov	r3, sl
	bl	CalculatePokeblockColor
	mov	r5, r8
	strb	r0, [r5]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	mov	r1, r9
	bl	__divsi3
	mov	r3, r9
	sub	r0, r0, r3
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L772	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
.L772:
	mov	r5, r8
	ldrb	r0, [r5]
	cmp	r0, #0xc
	bne	.L773	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r6, #0x0
	ldr	r0, .L794+0x14
	add	r0, r3, r0
	ldrb	r0, [r0]
	add	r1, r4, #0
	mov	r4, #0x1
	mov	r3, #0x2
.L777:
	add	r2, r0, #0
	asr	r2, r2, r6
	and	r2, r2, r4
	cmp	r2, #0
	beq	.L778	@cond_branch
	strh	r3, [r1]
	b	.L776
.L795:
	.align	2, 0
.L794:
	.word	sPokeblockFlavors
	.word	sDebug_PokeblockFactorFlavors
	.word	0x14d
	.word	sDebug_PokeblockFactorRPM
	.word	sDebug_PokeblockFactorFlavorsAfterRPM
	.word	sBlackPokeblockFlavorFlags
.L778:
	strh	r2, [r1]
.L776:
	add	r1, r1, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L777	@cond_branch
.L773:
	ldr	r7, .L796
	mov	r2, #0xff
	add	r1, r7, #0
	mov	r6, #0x5
.L784:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0xff
	ble	.L783	@cond_branch
	strh	r2, [r1]
.L783:
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L784	@cond_branch
	ldrh	r0, [r7]
	mov	r4, r8
	strb	r0, [r4, #0x1]
	ldrh	r0, [r7, #0x2]
	strb	r0, [r4, #0x2]
	ldrh	r0, [r7, #0x4]
	strb	r0, [r4, #0x3]
	ldrh	r0, [r7, #0x6]
	strb	r0, [r4, #0x4]
	ldrh	r0, [r7, #0x8]
	strb	r0, [r4, #0x5]
	ldrh	r0, [r7, #0xa]
	strb	r0, [r4, #0x6]
	mov	r6, #0x0
	add	r2, r7, #0
.L790:
	ldr	r5, [sp, #0x4]
	add	r1, r5, r6
	ldrh	r0, [r2]
	strb	r0, [r1]
	add	r2, r2, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L790	@cond_branch
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L797:
	.align	2, 0
.L796:
	.word	sPokeblockFlavors
.Lfe41:
	.size	 CalculatePokeblock,.Lfe41-CalculatePokeblock
	.align	2, 0
	.type	 Debug_CalculatePokeblock,function
	.thumb_func
Debug_CalculatePokeblock:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0xc]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	str	r4, [sp]
	bl	CalculatePokeblock
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 Debug_CalculatePokeblock,.Lfe42-Debug_CalculatePokeblock
	.align	2, 0
	.type	 Debug_SetStageVars,function
	.thumb_func
Debug_SetStageVars:
	push	{r4, r5, r6, lr}
	ldr	r0, .L829
	ldr	r0, [r0]
	mov	r2, #0x82
	lsl	r2, r2, #0x1
	add	r1, r0, r2
	ldrh	r1, [r1]
	add	r0, r0, #0x4e
	ldrh	r4, [r0]
	mov	r2, #0x0
	ldr	r5, .L829+0x4
	cmp	r1, r5
	bhi	.L800	@cond_branch
	mov	r2, #0x5
	b	.L801
.L830:
	.align	2, 0
.L829:
	.word	sBerryBlender
	.word	0x383
.L800:
	ldr	r3, .L831
	add	r0, r1, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r3, .L831+0x4
	cmp	r0, r3
	bhi	.L802	@cond_branch
	mov	r2, #0x4
	b	.L801
.L832:
	.align	2, 0
.L831:
	.word	-0x384
	.word	0x257
.L802:
	ldr	r6, .L833
	add	r0, r1, r6
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r3
	bhi	.L804	@cond_branch
	mov	r2, #0x3
	b	.L801
.L834:
	.align	2, 0
.L833:
	.word	-0x5dc
.L804:
	ldr	r3, .L835
	add	r0, r1, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r5
	bhi	.L806	@cond_branch
	mov	r2, #0x2
	b	.L801
.L836:
	.align	2, 0
.L835:
	.word	-0x834
.L806:
	ldr	r6, .L837
	add	r0, r1, r6
	lsl	r0, r0, #0x10
	ldr	r1, .L837+0x4
	cmp	r0, r1
	bhi	.L801	@cond_branch
	mov	r2, #0x1
.L801:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	bl	Debug_SetGameTimeStage
	mov	r2, #0x0
	cmp	r4, #0x40
	bhi	.L809	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0x32
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L810	@cond_branch
	ldr	r2, .L837+0x8
	b	.L809
.L838:
	.align	2, 0
.L837:
	.word	-0xce4
	.word	0x12b0000
	.word	0xffff
.L810:
	add	r0, r4, #0
	sub	r0, r0, #0x64
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L812	@cond_branch
	ldr	r2, .L839
	b	.L809
.L840:
	.align	2, 0
.L839:
	.word	0xfffe
.L812:
	add	r0, r4, #0
	sub	r0, r0, #0x96
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L814	@cond_branch
	ldr	r2, .L841
	b	.L809
.L842:
	.align	2, 0
.L841:
	.word	0xfffd
.L814:
	add	r0, r4, #0
	sub	r0, r0, #0xc8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L816	@cond_branch
	ldr	r2, .L843
	b	.L809
.L844:
	.align	2, 0
.L843:
	.word	0xfffc
.L816:
	add	r0, r4, #0
	sub	r0, r0, #0xfa
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L818	@cond_branch
	ldr	r2, .L845
	b	.L809
.L846:
	.align	2, 0
.L845:
	.word	0xfffb
.L818:
	ldr	r1, .L847
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L820	@cond_branch
	ldr	r2, .L847+0x4
	b	.L809
.L848:
	.align	2, 0
.L847:
	.word	-0x15e
	.word	0xfffa
.L820:
	ldr	r3, .L849
	add	r0, r4, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L822	@cond_branch
	ldr	r2, .L849+0x4
	b	.L809
.L850:
	.align	2, 0
.L849:
	.word	-0x190
	.word	0xfff9
.L822:
	ldr	r6, .L851
	add	r0, r4, r6
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L824	@cond_branch
	ldr	r2, .L851+0x4
	b	.L809
.L852:
	.align	2, 0
.L851:
	.word	-0x1f4
	.word	0xfff8
.L824:
	ldr	r1, .L853
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L826	@cond_branch
	ldr	r2, .L853+0x4
	b	.L809
.L854:
	.align	2, 0
.L853:
	.word	-0x226
	.word	0xfff7
.L826:
	ldr	r0, .L855
	cmp	r4, r0
	bls	.L809	@cond_branch
	ldr	r2, .L855+0x4
.L809:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	bl	Debug_SetMaxRPMStage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L856:
	.align	2, 0
.L855:
	.word	0x257
	.word	0xfff6
.Lfe43:
	.size	 Debug_SetStageVars,.Lfe43-Debug_SetStageVars
	.align	2, 0
	.type	 SendContinuePromptResponse,function
	.thumb_func
SendContinuePromptResponse:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L861
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L858	@cond_branch
	ldr	r0, .L861+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L858	@cond_branch
	mov	r2, #0xbc
	lsl	r2, r2, #0x6
	b	.L860
.L862:
	.align	2, 0
.L861:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.L858:
	ldr	r2, .L863
.L860:
	add	r0, r2, #0
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L864:
	.align	2, 0
.L863:
	.word	0x2fff
.Lfe44:
	.size	 SendContinuePromptResponse,.Lfe44-SendContinuePromptResponse
	.align	2, 0
	.type	 CB2_EndBlenderGame,function
	.thumb_func
CB2_EndBlenderGame:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r4, .L960
	ldr	r0, [r4]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bhi	.L866	@cond_branch
	bl	UpdateBlenderCenter
.L866:
	bl	GetMultiplayerId
	ldr	r0, [r4]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xc
	bls	.LCB6993
	b	.L867	@long jump
.LCB6993:
	lsl	r0, r0, #0x2
	ldr	r1, .L960+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L961:
	.align	2, 0
.L960:
	.word	sBerryBlender
	.word	.L952
	.align	2, 0
	.align	2, 0
.L952:
	.word	.L868
	.word	.L874
	.word	.L878
	.word	.L896
	.word	.L910
	.word	.L912
	.word	.L916
	.word	.L949
	.word	.L918
	.word	.L919
	.word	.L939
	.word	.L946
	.word	.L950
.L868:
	ldr	r0, .L962
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	bl	m4aMPlayTempoControl
	mov	r4, #0x0
	b	.L954
.L963:
	.align	2, 0
.L962:
	.word	gMPlayInfo_BGM
.L872:
	ldr	r0, .L964
	ldr	r0, [r0]
	mov	r1, #0x90
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L954:
	ldr	r0, .L964+0x4
	ldrh	r0, [r0]
	cmp	r4, r0
	bcc	.L872	@cond_branch
	b	.L949
.L965:
	.align	2, 0
.L964:
	.word	sBerryBlender
	.word	gSpecialVar_0x8004
.L874:
	ldr	r4, .L966
	ldr	r1, [r4]
	add	r1, r1, #0x4c
	ldrh	r0, [r1]
	sub	r0, r0, #0x20
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L875	@cond_branch
	bl	ClearLinkCallback
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x4c
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L966+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L876	@cond_branch
	add	r1, r1, #0x17
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L955
.L967:
	.align	2, 0
.L966:
	.word	sBerryBlender
	.word	gReceivedRemoteLinkPlayers
.L876:
	add	r1, r2, #0
	add	r1, r1, #0x63
	mov	r0, #0x5
.L955:
	strb	r0, [r1]
	ldr	r0, .L968
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L968+0x4
	bl	m4aMPlayStop
.L875:
	bl	UpdateHitPitch
	b	.L867
.L969:
	.align	2, 0
.L968:
	.word	sBerryBlender
	.word	gMPlayInfo_SE2
.L878:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7139
	b	.L949	@long jump
.LCB7139:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7146
	b	.L867	@long jump
.LCB7146:
	ldr	r0, .L970
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L882	@cond_branch
	ldr	r0, .L970+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L882	@cond_branch
	ldr	r3, .L970+0x8
	ldr	r1, [r3]
	mov	r4, #0x8e
	lsl	r4, r4, #0x5
	add	r2, r1, r4
	mov	r5, #0x82
	lsl	r5, r5, #0x1
	add	r0, r1, r5
	ldr	r0, [r0]
	str	r0, [r2]
	add	r0, r1, #0
	add	r0, r0, #0x4e
	ldrh	r0, [r0]
	ldr	r2, .L970+0xc
	add	r1, r1, r2
	strh	r0, [r1]
	mov	r4, #0x0
	mov	r8, r3
	mov	ip, r8
	ldr	r7, .L970+0x10
	mov	r6, #0x92
	lsl	r6, r6, #0x1
.L886:
	mov	r3, #0x0
	add	r5, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r4, r0, #0x1
.L890:
	mov	r1, ip
	ldr	r0, [r1]
	lsl	r1, r3, #0x1
	add	r1, r1, r4
	add	r2, r0, r7
	add	r2, r2, r1
	add	r0, r0, r6
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L890	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L886	@cond_branch
	mov	r2, r8
	ldr	r1, [r2]
	mov	r4, #0x8e
	lsl	r4, r4, #0x5
	add	r1, r1, r4
	mov	r0, #0x0
	mov	r2, #0x20
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7242
	b	.L867	@long jump
.LCB7242:
	mov	r5, r8
	ldr	r1, [r5]
	b	.L956
.L971:
	.align	2, 0
.L970:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	sBerryBlender
	.word	0x11c4
	.word	0x11c8
.L882:
	ldr	r4, .L972
	ldr	r3, [r4]
	mov	r0, #0xcc
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	mov	r2, #0x82
	lsl	r2, r2, #0x1
	add	r0, r3, r2
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r3, #0
	add	r0, r0, #0x4e
	ldrh	r2, [r0]
	mov	r5, #0xce
	lsl	r5, r5, #0x1
	add	r0, r3, r5
	strh	r2, [r0]
	mov	r0, #0x0
	mov	r2, #0x28
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7287
	b	.L867	@long jump
.LCB7287:
	ldr	r1, [r4]
	b	.L956
.L973:
	.align	2, 0
.L972:
	.word	sBerryBlender
.L896:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7303
	b	.L867	@long jump
.LCB7303:
	bl	ResetBlockReceivedFlags
	ldr	r5, .L974
	ldr	r1, [r5]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L974+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L898	@cond_branch
	ldr	r0, .L974+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L898	@cond_branch
	ldr	r2, .L974+0xc
	ldr	r3, [r5]
	ldrh	r0, [r2, #0x4]
	add	r1, r3, #0
	add	r1, r1, #0x4e
	strh	r0, [r1]
	mov	r0, #0x82
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	ldr	r0, [r2]
	str	r0, [r1]
	mov	r4, #0x0
	add	r7, r2, #0
	add	r7, r7, #0x8
	add	r6, r5, #0
	mov	r2, #0x92
	lsl	r2, r2, #0x1
.L902:
	mov	r3, #0x0
	add	r5, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r4, r0, #0x1
.L906:
	ldr	r1, [r6]
	lsl	r0, r3, #0x1
	add	r0, r0, r4
	add	r1, r1, r2
	add	r1, r1, r0
	add	r0, r7, r0
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L906	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L902	@cond_branch
	b	.L867
.L975:
	.align	2, 0
.L974:
	.word	sBerryBlender
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	gBlockRecvBuffer
.L898:
	ldr	r2, .L976
	ldr	r0, .L976+0x4
	ldr	r3, [r0]
	ldrh	r0, [r2, #0x4]
	add	r1, r3, #0
	add	r1, r1, #0x4e
	strh	r0, [r1]
	mov	r4, #0x82
	lsl	r4, r4, #0x1
	add	r1, r3, r4
	ldr	r0, [r2]
	str	r0, [r1]
	b	.L867
.L977:
	.align	2, 0
.L976:
	.word	gBlockRecvBuffer
	.word	sBerryBlender
.L910:
	bl	PrintBlendingRanking
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7426
	b	.L867	@long jump
.LCB7426:
	b	.L949
.L912:
	bl	PrintBlendingResults
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7435
	b	.L867	@long jump
.LCB7435:
	ldr	r0, .L978
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L914	@cond_branch
	mov	r0, #0x22
	bl	IncrementGameStat
	b	.L949
.L979:
	.align	2, 0
.L978:
	.word	gInGameOpponentsNo
.L914:
	mov	r0, #0x21
	bl	IncrementGameStat
	b	.L949
.L916:
	ldr	r6, .L980
	ldr	r4, [r6]
	ldr	r5, .L980+0x4
	add	r4, r4, r5
	ldr	r5, .L980+0x8
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	bne	.LCB7476
	b	.L867	@long jump
.LCB7476:
	ldr	r1, [r6]
	b	.L956
.L981:
	.align	2, 0
.L980:
	.word	sBerryBlender
	.word	0x11b8
	.word	sText_WouldLikeToBlendAnotherBerry
.L918:
	ldr	r4, .L982
	ldr	r0, [r4]
	add	r0, r0, #0x9e
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L982+0x4
	mov	r1, #0x1
	mov	r2, #0xd
	mov	r3, #0x0
	bl	CreateYesNoMenu
	ldr	r1, [r4]
	b	.L956
.L983:
	.align	2, 0
.L982:
	.word	sBerryBlender
	.word	sYesNoWindowTemplate_ContinuePlaying
.L919:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L929	@cond_branch
	cmp	r2, #0
	bgt	.L938	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	beq	.L922	@cond_branch
	b	.L867
.L938:
	cmp	r2, #0x1
	beq	.LCB7528
	b	.L867	@long jump
.LCB7528:
.L922:
	ldr	r2, .L984
	ldr	r0, [r2]
	add	r0, r0, #0x9e
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r1, [r2]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r4, #0x0
.L926:
	ldr	r0, .L984
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x8e
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L925	@cond_branch
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L925:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L926	@cond_branch
	b	.L867
.L985:
	.align	2, 0
.L984:
	.word	sBerryBlender
.L929:
	ldr	r1, .L986
	ldr	r0, [r1]
	add	r0, r0, #0x9e
	strb	r2, [r0]
	ldr	r1, [r1]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r4, #0x0
.L933:
	ldr	r0, .L986
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x8e
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L932	@cond_branch
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L932:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L933	@cond_branch
	b	.L867
.L987:
	.align	2, 0
.L986:
	.word	sBerryBlender
.L939:
	ldr	r6, .L988
	add	r0, r6, #0
	bl	SendContinuePromptResponse
	ldr	r4, .L988+0x4
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x9e
	ldrb	r5, [r0]
	cmp	r5, #0
	bne	.L940	@cond_branch
	mov	r0, #0x7
	bl	IsBagPocketNonEmpty
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L941	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x70
	mov	r1, #0x2
	strh	r1, [r0]
	ldr	r0, .L988+0x8
	b	.L957
.L989:
	.align	2, 0
.L988:
	.word	gSendCmd
	.word	sBerryBlender
	.word	0x9999
.L941:
	bl	GetFirstFreePokeblockSlot
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L943	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x70
	mov	r1, #0x3
	strh	r1, [r0]
	ldr	r0, .L990
	b	.L957
.L991:
	.align	2, 0
.L990:
	.word	0xaaaa
.L943:
	ldr	r0, [r4]
	add	r0, r0, #0x70
	strh	r5, [r0]
	ldr	r0, .L992
.L957:
	strh	r0, [r6, #0x2]
	b	.L949
.L993:
	.align	2, 0
.L992:
	.word	0x7779
.L940:
	add	r1, r2, #0
	add	r1, r1, #0x70
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L994
	strh	r0, [r6, #0x2]
	sub	r1, r1, #0xd
	b	.L958
.L995:
	.align	2, 0
.L994:
	.word	0x8888
.L946:
	ldr	r0, .L996
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L947	@cond_branch
	ldr	r0, .L996+0x4
	bl	SetMainCallback2
	ldr	r2, .L996+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x63
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	b	.L959
.L997:
	.align	2, 0
.L996:
	.word	gInGameOpponentsNo
	.word	CB2_CheckPlayAgainLocal
	.word	sBerryBlender
.L947:
.L949:
	ldr	r0, .L998
	ldr	r1, [r0]
.L956:
	add	r1, r1, #0x63
.L958:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L867
.L999:
	.align	2, 0
.L998:
	.word	sBerryBlender
.L950:
	ldr	r6, .L1000
	ldr	r4, [r6]
	ldr	r0, .L1000+0x4
	add	r4, r4, r0
	ldr	r5, .L1000+0x8
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L867	@cond_branch
	ldr	r0, .L1000+0xc
	bl	SetMainCallback2
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r6]
.L959:
	strb	r1, [r0]
.L867:
	bl	RestoreBgCoords
	ldr	r4, .L1000
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	bl	UpdateRPM
	bl	ProcessLinkPlayerCmds
	ldr	r1, [r4]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	mov	r5, #0x8f
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1001:
	.align	2, 0
.L1000:
	.word	sBerryBlender
	.word	0x11b8
	.word	sText_CommunicationStandby
	.word	CB2_CheckPlayAgainLink
.Lfe45:
	.size	 CB2_EndBlenderGame,.Lfe45-CB2_EndBlenderGame
	.align	2, 0
	.type	 LinkPlayAgainHandleSaving,function
	.thumb_func
LinkPlayAgainHandleSaving:
	push	{r4, lr}
	ldr	r1, .L1022
	ldr	r0, [r1]
	mov	r2, #0xd0
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldr	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB7868
	b	.L1003	@long jump
.LCB7868:
	lsl	r0, r0, #0x2
	ldr	r1, .L1022+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1023:
	.align	2, 0
.L1022:
	.word	sBerryBlender
	.word	.L1017
	.align	2, 0
	.align	2, 0
.L1017:
	.word	.L1004
	.word	.L1005
	.word	.L1007
	.word	.L1008
	.word	.L1010
	.word	.L1014
	.word	.L1015
.L1004:
	bl	SetLinkStandbyCallback
	ldr	r0, .L1024
	ldr	r2, [r0]
	mov	r3, #0xd0
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	mov	r0, #0x1
	b	.L1020
.L1025:
	.align	2, 0
.L1024:
	.word	sBerryBlender
.L1005:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1003	@cond_branch
	ldr	r0, .L1026
	ldr	r1, [r0]
	mov	r2, #0xd0
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r1, .L1026+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1003
.L1027:
	.align	2, 0
.L1026:
	.word	sBerryBlender
	.word	gSoftResetDisabled
.L1007:
	bl	FullSaveGame
	ldr	r0, .L1028
	ldr	r2, [r0]
	b	.L1021
.L1029:
	.align	2, 0
.L1028:
	.word	sBerryBlender
.L1008:
	ldr	r1, [r4]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0xa
	bne	.L1003	@cond_branch
	bl	SetLinkStandbyCallback
	ldr	r1, [r4]
	mov	r3, #0xd0
	lsl	r3, r3, #0x1
	add	r1, r1, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	b	.L1003
.L1010:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1003	@cond_branch
	bl	CheckSaveFile
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L1012	@cond_branch
	ldr	r0, .L1030
	ldr	r0, [r0]
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x5
	str	r1, [r0]
	b	.L1003
.L1031:
	.align	2, 0
.L1030:
	.word	sBerryBlender
.L1012:
	ldr	r0, .L1032
	ldr	r1, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	str	r2, [r0]
	mov	r0, #0xd0
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x3
	str	r0, [r1]
	b	.L1003
.L1033:
	.align	2, 0
.L1032:
	.word	sBerryBlender
.L1014:
	ldr	r2, [r4]
.L1021:
	mov	r3, #0xd0
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
.L1020:
	str	r0, [r1]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	mov	r0, #0x0
	str	r0, [r1]
	b	.L1003
.L1015:
	ldr	r1, [r4]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x5
	ble	.L1003	@cond_branch
	ldr	r1, .L1034
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L1019
.L1035:
	.align	2, 0
.L1034:
	.word	gSoftResetDisabled
.L1003:
	mov	r0, #0x0
.L1019:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 LinkPlayAgainHandleSaving,.Lfe46-LinkPlayAgainHandleSaving
	.align	2, 0
	.type	 CB2_CheckPlayAgainLink,function
	.thumb_func
CB2_CheckPlayAgainLink:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L1074
	ldr	r0, [r1]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0xc
	bls	.LCB8092
	b	.L1037	@long jump
.LCB8092:
	lsl	r0, r0, #0x2
	ldr	r1, .L1074+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1075:
	.align	2, 0
.L1074:
	.word	sBerryBlender
	.word	.L1068
	.align	2, 0
	.align	2, 0
.L1068:
	.word	.L1038
	.word	.L1046
	.word	.L1047
	.word	.L1048
	.word	.L1050
	.word	.L1052
	.word	.L1053
	.word	.L1055
	.word	.L1057
	.word	.L1058
	.word	.L1060
	.word	.L1064
	.word	.L1066
.L1038:
	ldr	r1, [r6]
	add	r0, r1, #0
	add	r0, r0, #0x64
	ldrh	r2, [r0]
	ldr	r0, .L1076
	cmp	r2, r0
	bne	.LCB8123
	b	.L1070	@long jump
.LCB8123:
	ldr	r0, .L1076+0x4
	cmp	r2, r0
	beq	.LCB8129
	b	.L1037	@long jump
.LCB8129:
	add	r0, r1, #0
	add	r0, r0, #0x6c
	ldrh	r2, [r0]
	ldr	r0, .L1076+0x8
	cmp	r2, r0
	bne	.L1042	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1037
.L1077:
	.align	2, 0
.L1076:
	.word	0x2222
	.word	0x1111
	.word	0x9999
.L1042:
	ldr	r0, .L1078
	cmp	r2, r0
	bne	.L1070	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1037
.L1079:
	.align	2, 0
.L1078:
	.word	0xaaaa
.L1046:
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r4, .L1080
	ldr	r0, [r6]
	add	r0, r0, #0x6e
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1080+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L1080+0x8
	b	.L1071
.L1081:
	.align	2, 0
.L1080:
	.word	gStringVar4
	.word	gLinkPlayers+0x8
	.word	sText_ApostropheSPokeblockCaseIsFull
.L1047:
	ldr	r1, [r6]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r4, .L1082
	ldr	r0, [r6]
	add	r0, r0, #0x6e
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1082+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L1082+0x8
.L1071:
	add	r0, r4, #0
	bl	StringAppend
	b	.L1037
.L1083:
	.align	2, 0
.L1082:
	.word	gStringVar4
	.word	gLinkPlayers+0x8
	.word	sText_HasNoBerriesToPut
.L1048:
	ldr	r4, [r6]
	ldr	r0, .L1084
	add	r4, r4, r0
	ldr	r5, .L1084+0x4
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	bne	.LCB8252
	b	.L1037	@long jump
.LCB8252:
	ldr	r1, [r6]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1072
.L1085:
	.align	2, 0
.L1084:
	.word	0x11b8
	.word	gStringVar4
.L1050:
	ldr	r4, [r6]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r4, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB8281
	b	.L1037	@long jump
.LCB8281:
	add	r1, r4, #0
.L1070:
	add	r1, r1, #0x63
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1037
.L1052:
	ldr	r0, [r6]
	ldr	r1, .L1086
	add	r0, r0, r1
	ldr	r1, .L1086+0x4
	mov	r2, #0x0
	bl	Blender_PrintText
	bl	SetLinkStandbyCallback
	b	.L1073
.L1087:
	.align	2, 0
.L1086:
	.word	0x11b8
	.word	gText_SavingDontTurnOff2
.L1053:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8316
	b	.L1037	@long jump
.LCB8316:
	ldr	r3, .L1088
	ldr	r1, [r3]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	str	r2, [r0]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r3]
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	str	r2, [r0]
	b	.L1037
.L1089:
	.align	2, 0
.L1088:
	.word	sBerryBlender
.L1055:
	bl	LinkPlayAgainHandleSaving
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1037	@cond_branch
	mov	r0, #0x37
	bl	PlaySE
	ldr	r0, .L1090
	ldr	r1, [r0]
	b	.L1072
.L1091:
	.align	2, 0
.L1090:
	.word	sBerryBlender
.L1057:
	ldr	r1, [r6]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	SetLinkStandbyCallback
	b	.L1037
.L1058:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1037	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L1092
	ldr	r1, [r0]
	b	.L1072
.L1093:
	.align	2, 0
.L1092:
	.word	sBerryBlender
.L1060:
	ldr	r0, .L1094
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L1037	@cond_branch
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x64
	ldrh	r1, [r0]
	ldr	r0, .L1094+0x4
	cmp	r1, r0
	bne	.L1062	@cond_branch
	bl	FreeAllWindowBuffers
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	ldr	r0, [r6]
	bl	Free
	str	r4, [r6]
	ldr	r0, .L1094+0x8
	bl	SetMainCallback2
	b	.L1037
.L1095:
	.align	2, 0
.L1094:
	.word	gPaletteFade
	.word	0x2222
	.word	DoBerryBlending
.L1062:
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	str	r4, [r0]
	add	r1, r2, #0
	b	.L1072
.L1064:
	ldr	r1, [r6]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x1e
	ble	.L1037	@cond_branch
	bl	SetCloseLinkCallback
.L1073:
	ldr	r1, [r6]
.L1072:
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1037
.L1066:
	ldr	r0, .L1096
	ldrb	r4, [r0]
	cmp	r4, #0
	bne	.L1037	@cond_branch
	ldr	r0, [r6]
	bl	Free
	str	r4, [r6]
	ldr	r0, .L1096+0x4
	bl	SetMainCallback2
.L1037:
	bl	ProcessLinkPlayerCmds
	ldr	r0, .L1096+0x8
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r2, #0x8f
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1097:
	.align	2, 0
.L1096:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	sBerryBlender
.Lfe47:
	.size	 CB2_CheckPlayAgainLink,.Lfe47-CB2_CheckPlayAgainLink
	.align	2, 0
	.type	 CB2_CheckPlayAgainLocal,function
	.thumb_func
CB2_CheckPlayAgainLocal:
	push	{r4, r5, r6, lr}
	ldr	r1, .L1115
	ldr	r0, [r1]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0xa
	bls	.LCB8545
	b	.L1099	@long jump
.LCB8545:
	lsl	r0, r0, #0x2
	ldr	r1, .L1115+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1116:
	.align	2, 0
.L1115:
	.word	sBerryBlender
	.word	.L1113
	.align	2, 0
	.align	2, 0
.L1113:
	.word	.L1100
	.word	.L1104
	.word	.L1105
	.word	.L1106
	.word	.L1099
	.word	.L1099
	.word	.L1099
	.word	.L1099
	.word	.L1099
	.word	.L1108
	.word	.L1109
.L1100:
	ldr	r1, [r6]
	add	r0, r1, #0
	add	r0, r0, #0x70
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bhi	.L1101	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x9
	strb	r0, [r1]
.L1101:
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x70
	ldrh	r1, [r0]
	cmp	r1, #0x2
	bne	.L1102	@cond_branch
	sub	r0, r0, #0xd
	strb	r1, [r0]
.L1102:
	ldr	r1, [r6]
	add	r0, r1, #0
	add	r0, r0, #0x70
	ldrh	r0, [r0]
	cmp	r0, #0x3
	bne	.L1099	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1099
.L1104:
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r2, #0x0
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r0, [r6]
	ldr	r1, .L1117
	add	r0, r0, r1
	strh	r2, [r0]
	ldr	r0, .L1117+0x4
	ldr	r1, .L1117+0x8
	bl	StringCopy
	b	.L1099
.L1118:
	.align	2, 0
.L1117:
	.word	0x11b8
	.word	gStringVar4
	.word	sText_YourPokeblockCaseIsFull
.L1105:
	ldr	r1, [r6]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, [r6]
	ldr	r1, .L1119
	add	r0, r0, r1
	strh	r2, [r0]
	ldr	r0, .L1119+0x4
	ldr	r1, .L1119+0x8
	bl	StringCopy
	b	.L1099
.L1120:
	.align	2, 0
.L1119:
	.word	0x11b8
	.word	gStringVar4
	.word	sText_RunOutOfBerriesForBlending
.L1106:
	ldr	r4, [r6]
	ldr	r2, .L1121
	add	r4, r4, r2
	ldr	r5, .L1121+0x4
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L1099	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r1, #0x9
	strb	r1, [r0]
	b	.L1099
.L1122:
	.align	2, 0
.L1121:
	.word	0x11b8
	.word	gStringVar4
.L1108:
	mov	r0, #0x3
	bl	BeginFastPaletteFade
	ldr	r0, .L1123
	ldr	r1, [r0]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1099
.L1124:
	.align	2, 0
.L1123:
	.word	sBerryBlender
.L1109:
	ldr	r0, .L1125
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1099	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x70
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1111	@cond_branch
	ldr	r0, .L1125+0x4
	bl	SetMainCallback2
	b	.L1112
.L1126:
	.align	2, 0
.L1125:
	.word	gPaletteFade
	.word	DoBerryBlending
.L1111:
	ldr	r0, .L1127
	bl	SetMainCallback2
.L1112:
	bl	FreeAllWindowBuffers
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	ldr	r4, .L1127+0x4
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L1099:
	bl	ProcessLinkPlayerCmds
	ldr	r0, .L1127+0x4
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r2, #0x8f
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1128:
	.align	2, 0
.L1127:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	sBerryBlender
.Lfe48:
	.size	 CB2_CheckPlayAgainLocal,.Lfe48-CB2_CheckPlayAgainLocal
	.align	2, 0
	.type	 ProcessLinkPlayerCmds,function
	.thumb_func
ProcessLinkPlayerCmds:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1175
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8797
	b	.L1130	@long jump
.LCB8797:
	ldr	r4, .L1175+0x4
	ldrh	r0, [r4]
	ldr	r1, .L1175+0x8
	mov	r2, #0xbc
	lsl	r2, r2, #0x6
	bl	CheckRecvCmdMatches
	cmp	r0, #0
	beq	.L1131	@cond_branch
	ldrh	r1, [r4, #0x2]
	ldr	r0, .L1175+0xc
	cmp	r1, r0
	bne	.L1132	@cond_branch
	ldrh	r3, [r4, #0x4]
	ldr	r0, .L1175+0x10
	cmp	r3, r0
	beq	.L1135	@cond_branch
	cmp	r3, r0
	bgt	.L1139	@cond_branch
	ldr	r0, .L1175+0x14
	b	.L1173
.L1176:
	.align	2, 0
.L1175:
	.word	gReceivedRemoteLinkPlayers
	.word	gRecvCmds
	.word	0x2fff
	.word	0x1111
	.word	0x9999
	.word	0x8888
.L1139:
	ldr	r0, .L1177
.L1173:
	cmp	r3, r0
	beq	.L1136	@cond_branch
	ldr	r2, .L1177+0x4
	b	.L1133
.L1178:
	.align	2, 0
.L1177:
	.word	0xaaaa
	.word	sBerryBlender
.L1135:
.L1136:
	ldr	r2, .L1179
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0x6c
	strh	r3, [r1]
	ldrh	r1, [r4, #0x6]
	add	r0, r0, #0x6e
	strh	r1, [r0]
.L1133:
	ldr	r0, [r2]
	add	r0, r0, #0x64
	ldr	r1, .L1179+0x4
	b	.L1172
.L1180:
	.align	2, 0
.L1179:
	.word	sBerryBlender
	.word	0x1111
.L1132:
	ldr	r0, .L1181
	cmp	r1, r0
	bne	.L1131	@cond_branch
	ldr	r0, .L1181+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x64
.L1172:
	strh	r1, [r0]
.L1131:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8905
	b	.L1130	@long jump
.LCB8905:
	ldr	r2, .L1181+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x64
	ldrh	r1, [r0]
	ldr	r0, .L1181+0x8
	cmp	r1, r0
	bne	.LCB8916
	b	.L1130	@long jump
.LCB8916:
	ldr	r0, .L1181
	cmp	r1, r0
	bne	.LCB8921
	b	.L1130	@long jump
.LCB8921:
	mov	r5, #0x0
	add	r7, r2, #0
	b	.L1143
.L1182:
	.align	2, 0
.L1181:
	.word	0x2222
	.word	sBerryBlender
	.word	0x1111
.L1146:
	ldr	r6, .L1183
	lsl	r4, r5, #0x4
	add	r0, r4, r6
	ldrh	r0, [r0]
	ldr	r1, .L1183+0x4
	mov	r2, #0xbc
	lsl	r2, r2, #0x6
	bl	CheckRecvCmdMatches
	cmp	r0, #0
	beq	.L1145	@cond_branch
	add	r0, r6, #0x2
	add	r0, r4, r0
	ldrh	r2, [r0]
	ldr	r0, .L1183+0x8
	cmp	r2, r0
	beq	.L1152	@cond_branch
	cmp	r2, r0
	bgt	.L1155	@cond_branch
	ldr	r0, .L1183+0xc
	b	.L1174
.L1184:
	.align	2, 0
.L1183:
	.word	gRecvCmds
	.word	0x2fff
	.word	0x8888
	.word	0x7779
.L1155:
	ldr	r0, .L1185
	cmp	r2, r0
	beq	.L1151	@cond_branch
	ldr	r0, .L1185+0x4
.L1174:
	cmp	r2, r0
	bne	.L1145	@cond_branch
.L1151:
.L1152:
	ldr	r0, [r7]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	strh	r2, [r0]
.L1145:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1143:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcc	.L1146	@cond_branch
	mov	r5, #0x0
	b	.L1157
.L1186:
	.align	2, 0
.L1185:
	.word	0x9999
	.word	0xaaaa
.L1159:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1157:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcs	.L1158	@cond_branch
	ldr	r0, .L1187
	ldr	r0, [r0]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1159	@cond_branch
.L1158:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bne	.L1130	@cond_branch
	mov	r5, #0x0
	ldr	r4, .L1187+0x4
	b	.L1164
.L1188:
	.align	2, 0
.L1187:
	.word	sBerryBlender
	.word	0x7779
.L1166:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1164:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcs	.L1165	@cond_branch
	ldr	r0, .L1189
	ldr	r0, [r0]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, r4
	beq	.L1166	@cond_branch
.L1165:
	ldr	r4, .L1189+0x4
	add	r0, r4, #0
	bl	SendContinuePromptResponse
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bne	.L1170	@cond_branch
	ldr	r0, .L1189+0x8
	strh	r0, [r4, #0x2]
	b	.L1130
.L1190:
	.align	2, 0
.L1189:
	.word	sBerryBlender
	.word	gSendCmd
	.word	0x2222
.L1170:
	ldr	r0, .L1191
	strh	r0, [r4, #0x2]
	ldr	r0, .L1191+0x4
	ldr	r0, [r0]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	strh	r5, [r4, #0x6]
.L1130:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1192:
	.align	2, 0
.L1191:
	.word	0x1111
	.word	sBerryBlender
.Lfe49:
	.size	 ProcessLinkPlayerCmds,.Lfe49-ProcessLinkPlayerCmds
	.align	2, 0
	.type	 DrawBlenderCenter,function
	.thumb_func
DrawBlenderCenter:
	push	{r4, lr}
	add	sp, sp, #-0x14
	mov	r1, #0xf0
	lsl	r1, r1, #0x7
	str	r1, [sp]
	mov	r1, #0xa0
	lsl	r1, r1, #0x7
	str	r1, [sp, #0x4]
	mov	r3, sp
	ldr	r1, .L1194
	ldr	r1, [r1]
	mov	ip, r1
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r1, r1, ip
	ldrh	r2, [r1]
	mov	r1, #0x78
	sub	r1, r1, r2
	strh	r1, [r3, #0x8]
	mov	r1, #0x8f
	lsl	r1, r1, #0x1
	add	r1, r1, ip
	ldrh	r2, [r1]
	mov	r1, #0x50
	sub	r1, r1, r2
	strh	r1, [r3, #0xa]
	mov	r2, sp
	mov	r3, #0x8d
	lsl	r3, r3, #0x1
	add	r3, r3, ip
	ldrh	r1, [r3]
	strh	r1, [r2, #0xc]
	ldrh	r1, [r3]
	strh	r1, [r2, #0xe]
	mov	r1, ip
	add	r1, r1, #0x4a
	ldrh	r1, [r1]
	strh	r1, [r2, #0x10]
	mov	r1, sp
	ldmia	r1!, {r2, r3, r4}
	stmia	r0!, {r2, r3, r4}
	ldmia	r1!, {r2, r3}
	stmia	r0!, {r2, r3}
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L1195:
	.align	2, 0
.L1194:
	.word	sBerryBlender
.Lfe50:
	.size	 DrawBlenderCenter,.Lfe50-DrawBlenderCenter
	.align	2, 0
	.globl	GetBlenderArrowPosition
	.type	 GetBlenderArrowPosition,function
	.thumb_func
GetBlenderArrowPosition:
	ldr	r0, .L1197
	ldr	r0, [r0]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	bx	lr
.L1198:
	.align	2, 0
.L1197:
	.word	sBerryBlender
.Lfe51:
	.size	 GetBlenderArrowPosition,.Lfe51-GetBlenderArrowPosition
	.align	2, 0
	.type	 UpdateBlenderCenter,function
	.thumb_func
UpdateBlenderCenter:
	push	{r4, lr}
	mov	r1, #0x0
	ldr	r4, .L1206
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1200	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
.L1200:
	ldr	r0, .L1206+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1201	@cond_branch
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1201	@cond_branch
	cmp	r1, #0
	bne	.L1202	@cond_branch
	ldr	r0, .L1206+0x8
	ldr	r3, [r0]
	add	r2, r3, #0
	add	r2, r2, #0x4a
	add	r0, r3, #0
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	ldrh	r1, [r2]
	add	r0, r0, r1
	strh	r0, [r2]
	ldr	r1, .L1206+0xc
	mov	r4, #0x8b
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	ldrh	r0, [r0]
	strh	r0, [r1, #0xa]
	ldrh	r0, [r2]
	strh	r0, [r1, #0xc]
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	bl	DrawBlenderCenter
	b	.L1205
.L1207:
	.align	2, 0
.L1206:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	sBerryBlender
	.word	gSendCmd
.L1202:
	ldr	r3, .L1208
	ldrh	r0, [r3]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	mov	r0, #0x88
	lsl	r0, r0, #0x7
	cmp	r1, r0
	bne	.L1205	@cond_branch
	ldr	r0, .L1208+0x4
	ldr	r2, [r0]
	ldrh	r0, [r3, #0xa]
	mov	r4, #0x8b
	lsl	r4, r4, #0x1
	add	r1, r2, r4
	strh	r0, [r1]
	ldrh	r0, [r3, #0xc]
	add	r1, r2, #0
	add	r1, r1, #0x4a
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	bl	DrawBlenderCenter
	b	.L1205
.L1209:
	.align	2, 0
.L1208:
	.word	gRecvCmds
	.word	sBerryBlender
.L1201:
	ldr	r0, .L1210
	ldr	r1, [r0]
	add	r2, r1, #0
	add	r2, r2, #0x4a
	add	r0, r1, #0
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	ldrh	r3, [r2]
	add	r0, r0, r3
	strh	r0, [r2]
	mov	r4, #0xa0
	lsl	r4, r4, #0x1
	add	r0, r1, r4
	bl	DrawBlenderCenter
.L1205:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1211:
	.align	2, 0
.L1210:
	.word	sBerryBlender
.Lfe52:
	.size	 UpdateBlenderCenter,.Lfe52-UpdateBlenderCenter
	.align	2, 0
	.type	 SetBgPos,function
	.thumb_func
SetBgPos:
	push	{r4, r5, r6, lr}
	ldr	r4, .L1213
	ldr	r0, [r4]
	mov	r6, #0x8e
	lsl	r6, r6, #0x1
	add	r0, r0, r6
	ldrh	r1, [r0]
	mov	r0, #0x14
	bl	SetGpuReg
	ldr	r0, [r4]
	mov	r5, #0x8f
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	mov	r0, #0x16
	bl	SetGpuReg
	ldr	r0, [r4]
	add	r0, r0, r6
	ldrh	r1, [r0]
	mov	r0, #0x10
	bl	SetGpuReg
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrh	r1, [r0]
	mov	r0, #0x12
	bl	SetGpuReg
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1214:
	.align	2, 0
.L1213:
	.word	sBerryBlender
.Lfe53:
	.size	 SetBgPos,.Lfe53-SetBgPos
	.align	2, 0
	.type	 SpriteCB_Particle,function
	.thumb_func
SpriteCB_Particle:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x2e]
	ldrh	r1, [r2, #0x32]
	add	r0, r0, r1
	strh	r0, [r2, #0x32]
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	add	r0, r0, r1
	strh	r0, [r2, #0x34]
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bge	.L1216	@cond_branch
	add	r0, r0, #0x7
.L1216:
	asr	r0, r0, #0x3
	strh	r0, [r2, #0x24]
	mov	r1, #0x34
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bge	.L1217	@cond_branch
	add	r0, r0, #0x7
.L1217:
	asr	r0, r0, #0x3
	strh	r0, [r2, #0x26]
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1218	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L1218:
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 SpriteCB_Particle,.Lfe54-SpriteCB_Particle
	.align	2, 0
	.type	 CreateParticleSprites,function
	.thumb_func
CreateParticleSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	mov	r0, #0x1
	and	r1, r1, r0
	add	r0, r1, #0x1
	cmp	r0, #0
	beq	.L1221	@cond_branch
	ldr	r0, .L1227
	mov	r9, r0
	ldr	r2, .L1227+0x4
	mov	sl, r2
	add	r6, r1, #0x1
	mov	r3, #0x1f
	mov	r8, r3
	mov	r7, #0x10
.L1223:
	bl	Random
	ldr	r1, .L1227+0x8
	ldr	r4, [r1]
	add	r4, r4, #0x4a
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x14
	bl	__umodsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	mov	r0, #0xff
	lsl	r0, r0, #0x10
	and	r0, r0, r1
	lsr	r2, r0, #0x10
	add	r0, r2, #0
	add	r0, r0, #0x40
	lsl	r0, r0, #0x1
	add	r0, r0, r9
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	cmp	r1, #0
	bge	.L1224	@cond_branch
	add	r1, r1, #0x3
.L1224:
	asr	r1, r1, #0x2
	lsl	r0, r2, #0x1
	add	r0, r0, r9
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bge	.L1225	@cond_branch
	add	r0, r0, #0x3
.L1225:
	asr	r2, r0, #0x2
	add	r1, r1, #0x78
	add	r2, r2, #0x50
	ldr	r0, .L1227+0xc
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Random
	lsl	r5, r4, #0x4
	add	r5, r5, r4
	lsl	r5, r5, #0x2
	mov	r3, sl
	add	r4, r5, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, r8
	and	r0, r0, r1
	sub	r0, r7, r0
	strh	r0, [r4, #0x2e]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, r8
	and	r0, r0, r2
	sub	r0, r7, r0
	strh	r0, [r4, #0x30]
	ldr	r3, .L1227+0x10
	add	r5, r5, r3
	ldr	r0, .L1227+0x14
	str	r0, [r5]
	sub	r6, r6, #0x1
	cmp	r6, #0
	bne	.L1223	@cond_branch
.L1221:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1228:
	.align	2, 0
.L1227:
	.word	gSineTable
	.word	gSprites
	.word	sBerryBlender
	.word	sSpriteTemplate_Particles
	.word	gSprites+0x1c
	.word	SpriteCB_Particle
.Lfe55:
	.size	 CreateParticleSprites,.Lfe55-CreateParticleSprites
	.align	2, 0
	.type	 SpriteCB_ScoreSymbol,function
	.thumb_func
SpriteCB_ScoreSymbol:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0x3
	bl	__divsi3
	neg	r0, r0
	strh	r0, [r4, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1230	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
.L1230:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 SpriteCB_ScoreSymbol,.Lfe56-SpriteCB_ScoreSymbol
	.align	2, 0
	.type	 SpriteCB_ScoreSymbolBest,function
	.thumb_func
SpriteCB_ScoreSymbolBest:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	lsl	r0, r0, #0x1
	neg	r0, r0
	strh	r0, [r2, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0xc
	neg	r1, r1
	cmp	r0, r1
	bge	.L1232	@cond_branch
	ldr	r0, .L1234
	strh	r0, [r2, #0x26]
.L1232:
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1233	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L1233:
	pop	{r0}
	bx	r0
.L1235:
	.align	2, 0
.L1234:
	.word	0xfff4
.Lfe57:
	.size	 SpriteCB_ScoreSymbolBest,.Lfe57-SpriteCB_ScoreSymbolBest
	.align	2, 0
	.type	 SetPlayerBerryData,function
	.thumb_func
SetPlayerBerryData:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, .L1237
	ldr	r3, [r2]
	lsl	r4, r0, #0x1
	add	r2, r3, #0
	add	r2, r2, #0x74
	add	r2, r2, r4
	strh	r1, [r2]
	lsl	r0, r0, #0x4
	mov	r2, #0xac
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	add	r3, r3, r0
	add	r0, r3, #0
	bl	ConvertItemToBlenderBerry
	pop	{r4}
	pop	{r0}
	bx	r0
.L1238:
	.align	2, 0
.L1237:
	.word	sBerryBlender
.Lfe58:
	.size	 SetPlayerBerryData,.Lfe58-SetPlayerBerryData
	.align	2, 0
	.type	 SpriteCB_CountdownNumber,function
	.thumb_func
SpriteCB_CountdownNumber:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1243	@cond_branch
	cmp	r0, #0x1
	bgt	.L1251	@cond_branch
	cmp	r0, #0
	beq	.L1241	@cond_branch
	b	.L1240
.L1251:
	cmp	r0, #0x2
	beq	.L1245	@cond_branch
	b	.L1240
.L1241:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x58
	ble	.L1240	@cond_branch
	mov	r0, #0x58
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x38
	bl	PlaySE
	b	.L1240
.L1243:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L1240	@cond_branch
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
	b	.L1240
.L1245:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb0
	ble	.L1240	@cond_branch
	ldrh	r0, [r4, #0x34]
	add	r0, r0, #0x1
	add	r1, r0, #0
	strh	r0, [r4, #0x34]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L1247	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r0, .L1252
	mov	r2, #0x14
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x2
	bl	CreateSprite
	b	.L1240
.L1253:
	.align	2, 0
.L1252:
	.word	sSpriteTemplate_Start
.L1247:
	mov	r0, #0x0
	strh	r0, [r4, #0x2e]
	ldr	r0, .L1254
	strh	r0, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
.L1240:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x26]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1255:
	.align	2, 0
.L1254:
	.word	0xfff0
.Lfe59:
	.size	 SpriteCB_CountdownNumber,.Lfe59-SpriteCB_CountdownNumber
	.align	2, 0
	.type	 SpriteCB_Start,function
	.thumb_func
SpriteCB_Start:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1260	@cond_branch
	cmp	r0, #0x1
	bgt	.L1266	@cond_branch
	cmp	r0, #0
	beq	.L1258	@cond_branch
	b	.L1257
.L1266:
	cmp	r0, #0x2
	beq	.L1262	@cond_branch
	b	.L1257
.L1258:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5c
	ble	.L1257	@cond_branch
	mov	r0, #0x5c
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x15
	bl	PlaySE
	b	.L1257
.L1260:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L1257	@cond_branch
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	b	.L1257
.L1262:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb0
	ble	.L1257	@cond_branch
	ldr	r0, .L1267
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	add	r0, r4, #0
	bl	DestroySprite
.L1257:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x26]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1268:
	.align	2, 0
.L1267:
	.word	sBerryBlender
.Lfe60:
	.size	 SpriteCB_Start,.Lfe60-SpriteCB_Start
	.align	2, 0
	.type	 TryUpdateProgressBar,function
	.thumb_func
TryUpdateProgressBar:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	ldr	r1, .L1271
	ldr	r1, [r1]
	mov	r2, #0x8c
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	cmp	r2, r0
	bcs	.L1270	@cond_branch
	add	r0, r2, #0x2
	strh	r0, [r1]
	ldrh	r0, [r1]
	add	r1, r3, #0
	bl	UpdateProgressBar
.L1270:
	pop	{r0}
	bx	r0
.L1272:
	.align	2, 0
.L1271:
	.word	sBerryBlender
.Lfe61:
	.size	 TryUpdateProgressBar,.Lfe61-TryUpdateProgressBar
	.align	2, 0
	.type	 UpdateProgressBar,function
	.thumb_func
UpdateProgressBar:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r7, .L1287
	lsr	r0, r0, #0xa
	bl	__divsi3
	add	r1, r0, #0
	cmp	r1, #0
	bge	.L1274	@cond_branch
	add	r0, r1, #0x7
.L1274:
	asr	r4, r0, #0x3
	mov	r3, #0x0
	cmp	r3, r4
	bge	.L1276	@cond_branch
	ldr	r0, .L1287+0x4
	add	r6, r0, #0
	add	r0, r0, #0x10
	add	r5, r0, #0
	add	r2, r7, #0
	add	r2, r2, #0x56
	add	r0, r7, #0
	add	r3, r4, #0
.L1278:
	strh	r6, [r0, #0x16]
	strh	r5, [r2]
	add	r2, r2, #0x2
	add	r0, r0, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L1278	@cond_branch
	add	r3, r4, #0
.L1276:
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L1280	@cond_branch
	add	r0, r1, #0x7
.L1280:
	asr	r2, r0, #0x3
	lsl	r0, r2, #0x3
	sub	r2, r1, r0
	cmp	r2, #0
	beq	.L1281	@cond_branch
	lsl	r0, r3, #0x1
	add	r0, r0, r7
	ldr	r4, .L1287+0x8
	add	r1, r2, r4
	strh	r1, [r0, #0x16]
	add	r0, r0, #0x56
	add	r4, r4, #0x10
	add	r1, r2, r4
	strh	r1, [r0]
	add	r3, r3, #0x1
.L1281:
	cmp	r3, #0x7
	bgt	.L1283	@cond_branch
	ldr	r0, .L1287+0xc
	add	r4, r0, #0
	add	r0, r0, #0x10
	add	r2, r0, #0
	lsl	r1, r3, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x56
	add	r0, r0, r7
	add	r1, r1, r7
.L1285:
	strh	r4, [r1, #0x16]
	strh	r2, [r0]
	add	r0, r0, #0x2
	add	r1, r1, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x7
	ble	.L1285	@cond_branch
.L1283:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1288:
	.align	2, 0
.L1287:
	.word	0x6006000
	.word	0x80e9
	.word	-0x7f1f
	.word	0x80e1
.Lfe62:
	.size	 UpdateProgressBar,.Lfe62-UpdateProgressBar
	.align	2, 0
	.type	 ArrowSpeedToRPM,function
	.thumb_func
ArrowSpeedToRPM:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1291
	mul	r0, r0, r1
	cmp	r0, #0
	bge	.L1290	@cond_branch
	ldr	r1, .L1291+0x4
	add	r0, r0, r1
.L1290:
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L1292:
	.align	2, 0
.L1291:
	.word	0x57e40
	.word	0xffff
.Lfe63:
	.size	 ArrowSpeedToRPM,.Lfe63-ArrowSpeedToRPM
	.align	2, 0
	.type	 UpdateRPM,function
	.thumb_func
UpdateRPM:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	ArrowSpeedToRPM
	add	r5, r0, #0
	ldr	r0, .L1300
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0x4e
	ldrh	r0, [r1]
	cmp	r0, r5
	bcs	.L1294	@cond_branch
	strh	r5, [r1]
.L1294:
	mov	r6, #0x0
.L1298:
	mov	r0, sp
	add	r4, r0, r6
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__umodsi3
	strb	r0, [r4]
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__udivsi3
	add	r5, r0, #0
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x4
	bls	.L1298	@cond_branch
	ldr	r2, .L1300+0x4
	mov	r0, sp
	ldr	r3, .L1300+0x8
	add	r1, r3, #0
	ldrb	r0, [r0, #0x4]
	add	r0, r1, r0
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0, #0x3]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x4
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0]
	add	r1, r1, r0
	strh	r1, [r2]
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1301:
	.align	2, 0
.L1300:
	.word	sBerryBlender
	.word	0x6006458
	.word	0x8072
.Lfe64:
	.size	 UpdateRPM,.Lfe64-UpdateRPM
	.align	2, 0
	.type	 ShakeBgCoordForHit,function
	.thumb_func
ShakeBgCoordForHit:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r4, r1, #0x10
	lsr	r5, r4, #0x10
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L1303	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__umodsi3
	lsr	r1, r4, #0x11
	sub	r0, r0, r1
	strh	r0, [r6]
.L1303:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 ShakeBgCoordForHit,.Lfe65-ShakeBgCoordForHit
	.align	2, 0
	.type	 RestoreBgCoord,function
	.thumb_func
RestoreBgCoord:
	push	{lr}
	add	r1, r0, #0
	ldrh	r2, [r1]
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	bge	.L1305	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1]
.L1305:
	ldrh	r2, [r1]
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L1306	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1]
.L1306:
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 RestoreBgCoord,.Lfe66-RestoreBgCoord
	.align	2, 0
	.type	 RestoreBgCoords,function
	.thumb_func
RestoreBgCoords:
	push	{r4, lr}
	ldr	r4, .L1308
	ldr	r0, [r4]
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	RestoreBgCoord
	ldr	r0, [r4]
	mov	r1, #0x8f
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	RestoreBgCoord
	pop	{r4}
	pop	{r0}
	bx	r0
.L1309:
	.align	2, 0
.L1308:
	.word	sBerryBlender
.Lfe67:
	.size	 RestoreBgCoords,.Lfe67-RestoreBgCoords
	.align	2, 0
	.type	 BlenderLandShakeBgCoord,function
	.thumb_func
BlenderLandShakeBgCoord:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r5, #0x8
	cmp	r1, #0x9
	bhi	.L1311	@cond_branch
	mov	r5, #0x10
.L1311:
	ldrh	r0, [r4]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	cmp	r1, #0
	bne	.L1313	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsr	r1, r5, #0x1
	sub	r0, r0, r1
	b	.L1317
.L1313:
	cmp	r1, #0
	bge	.L1315	@cond_branch
	add	r0, r0, #0x1
	strh	r0, [r4]
.L1315:
	ldrh	r1, [r4]
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	ble	.L1314	@cond_branch
	sub	r0, r1, #0x1
.L1317:
	strh	r0, [r4]
.L1314:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe68:
	.size	 BlenderLandShakeBgCoord,.Lfe68-BlenderLandShakeBgCoord
	.align	2, 0
	.type	 UpdateBlenderLandScreenShake,function
	.thumb_func
UpdateBlenderLandScreenShake:
	push	{r4, r5, lr}
	ldr	r5, .L1322
	ldr	r2, [r5]
	mov	r4, #0x84
	lsl	r4, r4, #0x1
	add	r0, r2, r4
	ldr	r1, [r0]
	cmp	r1, #0
	bne	.L1319	@cond_branch
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
.L1319:
	ldr	r0, [r5]
	add	r2, r0, r4
	ldr	r1, [r2]
	add	r1, r1, #0x1
	str	r1, [r2]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	BlenderLandShakeBgCoord
	ldr	r1, [r5]
	mov	r3, #0x8f
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	add	r1, r1, r4
	ldrh	r1, [r1]
	bl	BlenderLandShakeBgCoord
	ldr	r2, [r5]
	add	r0, r2, r4
	ldr	r0, [r0]
	cmp	r0, #0x14
	beq	.L1320	@cond_branch
	mov	r0, #0x0
	b	.L1321
.L1323:
	.align	2, 0
.L1322:
	.word	sBerryBlender
.L1320:
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r3, #0x8f
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	mov	r0, #0x1
.L1321:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 UpdateBlenderLandScreenShake,.Lfe69-UpdateBlenderLandScreenShake
	.align	2, 0
	.type	 SpriteCB_PlayerArrow,function
	.thumb_func
SpriteCB_PlayerArrow:
	ldr	r1, .L1325
	ldr	r2, [r1]
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	ldrh	r1, [r1]
	neg	r1, r1
	strh	r1, [r0, #0x24]
	add	r3, r3, #0x2
	add	r1, r2, r3
	ldrh	r1, [r1]
	neg	r1, r1
	strh	r1, [r0, #0x26]
	bx	lr
.L1326:
	.align	2, 0
.L1325:
	.word	sBerryBlender
.Lfe70:
	.size	 SpriteCB_PlayerArrow,.Lfe70-SpriteCB_PlayerArrow
	.align	2, 0
	.type	 TryUpdateBerryBlenderRecord,function
	.thumb_func
TryUpdateBerryBlenderRecord:
	push	{lr}
	ldr	r0, .L1329
	ldr	r2, [r0]
	ldr	r0, .L1329+0x4
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x1
	ldr	r3, .L1329+0x8
	add	r2, r2, r3
	add	r2, r2, r0
	add	r1, r1, #0x4e
	ldrh	r1, [r1]
	ldrh	r0, [r2]
	cmp	r0, r1
	bcs	.L1328	@cond_branch
	strh	r1, [r2]
.L1328:
	pop	{r0}
	bx	r0
.L1330:
	.align	2, 0
.L1329:
	.word	gSaveBlock1Ptr
	.word	sBerryBlender
	.word	0xf9c
.Lfe71:
	.size	 TryUpdateBerryBlenderRecord,.Lfe71-TryUpdateBerryBlenderRecord
	.align	2, 0
	.type	 PrintBlendingResults,function
	.thumb_func
PrintBlendingResults:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4c
	ldr	r1, .L1367
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB10515
	b	.L1332	@long jump
.LCB10515:
	lsl	r0, r0, #0x2
	ldr	r1, .L1367+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1368:
	.align	2, 0
.L1367:
	.word	sBerryBlender
	.word	.L1363
	.align	2, 0
	.align	2, 0
.L1363:
	.word	.L1333
	.word	.L1334
	.word	.L1336
	.word	.L1343
	.word	.L1351
	.word	.L1353
	.word	.L1361
.L1333:
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x11
	str	r1, [r0]
	b	.L1332
.L1334:
	ldr	r1, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	ldr	r0, [r2]
	sub	r0, r0, #0xa
	str	r0, [r2]
	cmp	r0, #0
	blt	.LCB10560
	b	.L1332	@long jump
.LCB10560:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1366
.L1336:
	ldr	r1, [r4]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	bgt	.LCB10577
	b	.L1332	@long jump
.LCB10577:
	mov	r6, #0x0
.L1341:
	ldr	r4, .L1369
	ldr	r0, [r4]
	add	r0, r0, #0x46
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1369+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x2
	bls	.L1341	@cond_branch
	ldr	r1, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1366
.L1370:
	.align	2, 0
.L1369:
	.word	sBerryBlender
	.word	gSprites
.L1343:
	ldr	r4, .L1371
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0xa8
	bl	GetStringCenterAlignXOffset
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xff
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	add	r1, r4, #0
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	ldr	r1, .L1371+0x4
	ldr	r0, [r1]
	add	r2, r0, #0
	add	r2, r2, #0x7c
	ldrb	r0, [r2]
	mov	r3, #0x15
	mov	r9, r3
	cmp	r0, #0x4
	bne	.L1344	@cond_branch
	mov	r0, #0x11
	mov	r9, r0
.L1344:
	mov	r6, #0x0
	mov	r3, sp
	add	r3, r3, #0x10
	str	r3, [sp, #0x48]
	ldrb	r2, [r2]
	cmp	r6, r2
	bcs	.L1347	@cond_branch
	add	r7, r1, #0
	mov	r0, #0x3
	mov	sl, r0
.L1349:
	ldr	r0, [r7]
	mov	r2, #0x9e
	lsl	r2, r2, #0x1
	add	r1, r0, r2
	add	r1, r1, r6
	ldrb	r5, [r1]
	add	r0, r0, #0x9f
	add	r6, r6, #0x1
	mov	r8, r6
	mov	r1, r8
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1371+0x8
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1371+0xc
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	lsl	r4, r5, #0x3
	sub	r4, r4, r5
	lsl	r4, r4, #0x2
	ldr	r3, .L1371+0x10
	add	r1, r4, r3
	bl	StringAppend
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r0, r9
	lsl	r6, r0, #0x18
	lsr	r6, r6, #0x18
	mov	r2, #0xff
	str	r2, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x8
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	lsl	r5, r5, #0x4
	add	r5, r5, r1
	mov	r1, #0xad
	lsl	r1, r1, #0x1
	add	r5, r5, r1
	add	r1, r5, #0
	bl	StringCopy
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r2, .L1371+0x14
	add	r4, r4, r2
	ldrb	r1, [r4, #0x1a]
	bl	ConvertInternationalString
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1371+0x18
	bl	StringAppend
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, #0xff
	str	r3, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x54
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	mov	r1, #0x10
	add	r9, r9, r1
	mov	r2, r8
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L1349	@cond_branch
.L1347:
	ldr	r1, .L1371+0x1c
	mov	r3, #0xff
	mov	sl, r3
	str	r3, [sp]
	mov	r0, #0x3
	mov	r9, r0
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x0
	mov	r3, #0x51
	bl	Blender_AddTextPrinter
	ldr	r6, .L1371+0x4
	ldr	r0, [r6]
	add	r4, r0, #0
	add	r4, r4, #0x9f
	add	r0, r0, #0x4e
	ldrh	r0, [r0]
	mov	r1, #0x64
	bl	__udivsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1371+0x8
	bl	StringAppend
	ldr	r0, [r6]
	add	r0, r0, #0x4e
	ldrh	r0, [r0]
	mov	r1, #0x64
	bl	__umodsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, [sp, #0x48]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, [sp, #0x48]
	bl	StringAppend
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1371+0x20
	bl	StringAppend
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	mov	r0, #0x1
	mov	r2, #0xa8
	bl	GetStringRightAlignXOffset
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r3, #0x51
	bl	Blender_AddTextPrinter
	ldr	r1, .L1371+0x24
	mov	r2, sl
	str	r2, [sp]
	mov	r3, r9
	str	r3, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x0
	mov	r3, #0x61
	bl	Blender_AddTextPrinter
	ldr	r5, [r6]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r0, r5, r1
	ldr	r0, [r0]
	mov	r8, r0
	mov	r1, #0x3c
	bl	__udivsi3
	mov	r1, #0x3c
	bl	__umodsi3
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r1, #0xe1
	lsl	r1, r1, #0x4
	mov	r0, r8
	bl	__udivsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r5, r5, #0x9f
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1371+0x28
	bl	StringAppend
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1371+0x2c
	bl	StringAppend
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	mov	r0, #0x1
	mov	r2, #0xa8
	bl	GetStringRightAlignXOffset
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r3, #0x61
	bl	Blender_AddTextPrinter
	ldr	r1, [r6]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1332
.L1372:
	.align	2, 0
.L1371:
	.word	sText_BlendingResults
	.word	sBerryBlender
	.word	sText_Dot
	.word	gText_Space
	.word	gLinkPlayers+0x8
	.word	gLinkPlayers
	.word	sText_SpaceBerry
	.word	sText_MaximumSpeed
	.word	sText_RPM
	.word	sText_Time
	.word	sText_Min
	.word	sText_Sec
.L1351:
	ldr	r0, .L1373
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB10989
	b	.L1332	@long jump
.LCB10989:
	ldr	r1, [r4]
	b	.L1366
.L1374:
	.align	2, 0
.L1373:
	.word	gMain
.L1353:
	mov	r0, #0x5
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	mov	r6, #0x0
	add	r7, sp, #0x40
	ldr	r5, .L1375
.L1357:
	ldr	r0, [r5]
	lsl	r2, r6, #0x1
	add	r0, r0, #0x74
	add	r0, r0, r2
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L1358	@cond_branch
	add	r0, sp, #0x38
	add	r0, r0, r2
	sub	r1, r1, #0x90
	strh	r1, [r0]
.L1358:
	ldr	r0, [r5]
	add	r0, r0, #0x8e
	add	r0, r0, r2
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L1356	@cond_branch
	lsl	r4, r6, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L1356:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bls	.L1357	@cond_branch
	bl	Debug_SetStageVars
	ldr	r4, .L1375
	ldr	r3, [r4]
	mov	r1, #0xac
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	add	r1, r3, #0
	add	r1, r1, #0x7c
	ldrb	r2, [r1]
	sub	r1, r1, #0x2e
	ldrh	r1, [r1]
	str	r1, [sp]
	add	r1, r7, #0
	add	r3, sp, #0x8
	bl	CalculatePokeblock
	ldr	r1, [r4]
	add	r1, r1, #0x9f
	add	r0, r7, #0
	bl	PrintMadePokeblockString
	ldr	r1, [r4]
	mov	r2, #0xd4
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r0, r7, #0
	bl	TryAddContestLinkTvShow
	ldr	r0, .L1375+0x4
	mov	r1, #0x6
	bl	CreateTask
	bl	IncrementDailyBerryBlender
	ldr	r0, .L1375+0x8
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	add	r0, r7, #0
	bl	AddPokeblock
	ldr	r1, [r4]
	ldr	r3, .L1375+0xc
	add	r2, r1, r3
	mov	r0, #0x0
	strh	r0, [r2]
.L1366:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1332
.L1376:
	.align	2, 0
.L1375:
	.word	sBerryBlender
	.word	Task_PlayPokeblockFanfare
	.word	gSpecialVar_ItemId
	.word	0x11b8
.L1361:
	ldr	r4, [r4]
	ldr	r0, .L1377
	add	r5, r4, r0
	add	r4, r4, #0x9f
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L1332	@cond_branch
	bl	TryUpdateBerryBlenderRecord
	mov	r0, #0x1
	b	.L1365
.L1378:
	.align	2, 0
.L1377:
	.word	0x11b8
.L1332:
	mov	r0, #0x0
.L1365:
	add	sp, sp, #0x4c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 PrintBlendingResults,.Lfe72-PrintBlendingResults
	.align	2, 0
	.type	 PrintMadePokeblockString,function
	.thumb_func
PrintMadePokeblockString:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r0, #0xff
	strb	r0, [r6]
	ldr	r1, .L1380
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	ldr	r1, .L1380+0x4
	add	r0, r6, #0
	bl	StringAppend
	ldr	r1, .L1380+0x8
	add	r0, r6, #0
	bl	StringAppend
	add	r0, r5, #0
	bl	GetHighestPokeblocksFlavorLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	GetPokeblocksFeel
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L1380+0xc
	add	r0, r6, #0
	bl	StringAppend
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	mov	r1, sp
	bl	StringAppend
	ldr	r1, .L1380+0x10
	add	r0, r6, #0
	bl	StringAppend
	mov	r0, sp
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	mov	r1, sp
	bl	StringAppend
	ldr	r1, .L1380+0x14
	add	r0, r6, #0
	bl	StringAppend
	ldr	r1, .L1380+0x18
	add	r0, r6, #0
	bl	StringAppend
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1381:
	.align	2, 0
.L1380:
	.word	gPokeblockNames
	.word	sText_WasMade
	.word	sText_NewLine
	.word	sText_TheLevelIs
	.word	sText_TheFeelIs
	.word	sText_Dot2
	.word	sText_NewParagraph
.Lfe73:
	.size	 PrintMadePokeblockString,.Lfe73-PrintMadePokeblockString
	.align	2, 0
	.type	 SortBasedOnPoints,function
	.thumb_func
SortBasedOnPoints:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r9, r0
	mov	ip, r2
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	mov	r0, #0x0
	cmp	r0, r7
	bge	.L1384	@cond_branch
.L1386:
	mov	r5, #0x0
	add	r1, r0, #0x1
	mov	r8, r1
	cmp	r5, r7
	bge	.L1385	@cond_branch
	mov	r1, r9
	add	r6, r1, r0
.L1390:
	ldrb	r4, [r6]
	lsl	r1, r4, #0x2
	add	r1, r1, ip
	mov	r0, r9
	add	r2, r0, r5
	ldrb	r3, [r2]
	lsl	r0, r3, #0x2
	add	r0, r0, ip
	ldr	r1, [r1]
	ldr	r0, [r0]
	cmp	r1, r0
	bls	.L1389	@cond_branch
	strb	r3, [r6]
	strb	r4, [r2]
.L1389:
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L1390	@cond_branch
.L1385:
	mov	r0, r8
	cmp	r0, r7
	blt	.L1386	@cond_branch
.L1384:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 SortBasedOnPoints,.Lfe74-SortBasedOnPoints
	.align	2, 0
	.type	 SortScores,function
	.thumb_func
SortScores:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	mov	r5, #0x0
	ldr	r2, .L1419
	ldr	r0, [r2]
	add	r0, r0, #0x7c
	add	r1, r2, #0
	add	r3, sp, #0x4
	mov	sl, r3
	b	.L1418
.L1420:
	.align	2, 0
.L1419:
	.word	sBerryBlender
.L1398:
	mov	r4, sp
	add	r0, r4, r5
	strb	r5, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r2]
	add	r0, r0, #0x7c
.L1418:
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1398	@cond_branch
	mov	r5, #0x0
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x7c
	ldrb	r2, [r1]
	cmp	r5, r2
	bcs	.L1401	@cond_branch
	mov	r9, sl
	mov	r3, #0x92
	lsl	r3, r3, #0x1
	add	r3, r3, r0
	mov	r8, r3
	mov	ip, r1
	mov	r4, #0x93
	lsl	r4, r4, #0x1
	add	r7, r0, r4
	mov	r1, #0x94
	lsl	r1, r1, #0x1
	add	r6, r0, r1
.L1403:
	lsl	r4, r5, #0x2
	add	r4, r4, r9
	lsl	r3, r5, #0x1
	add	r3, r3, r5
	lsl	r3, r3, #0x1
	mov	r2, r8
	add	r0, r2, r3
	ldrh	r2, [r0]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r1, r0, #0x6
	sub	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x6
	str	r1, [r4]
	add	r0, r7, r3
	ldrh	r2, [r0]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	str	r1, [r4]
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r3, r6, r3
	ldrh	r0, [r3]
	sub	r1, r1, r0
	str	r1, [r4]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, ip
	ldrb	r1, [r1]
	cmp	r5, r1
	bcc	.L1403	@cond_branch
.L1401:
	ldr	r4, .L1421
	ldr	r0, [r4]
	add	r0, r0, #0x7c
	ldrb	r1, [r0]
	mov	r0, sp
	mov	r2, sl
	bl	SortBasedOnPoints
	mov	r5, #0x0
	ldr	r0, [r4]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L1406	@cond_branch
	add	r2, r4, #0
	mov	r3, #0x9e
	lsl	r3, r3, #0x1
.L1408:
	ldr	r1, [r2]
	add	r1, r1, r3
	add	r1, r1, r5
	mov	r4, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r2]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1408	@cond_branch
.L1406:
	ldr	r0, .L1421+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1410	@cond_branch
	mov	r3, #0x0
	b	.L1411
.L1422:
	.align	2, 0
.L1421:
	.word	sBerryBlender
	.word	gReceivedRemoteLinkPlayers
.L1410:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L1411:
	mov	r5, #0x0
	ldr	r1, .L1423
	ldr	r0, [r1]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L1413	@cond_branch
	mov	r6, #0x9e
	lsl	r6, r6, #0x1
	mov	r4, #0xd2
	lsl	r4, r4, #0x1
.L1415:
	ldr	r2, [r1]
	add	r0, r2, r6
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L1414	@cond_branch
	add	r0, r2, r4
	strb	r5, [r0]
.L1414:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r1]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1415	@cond_branch
.L1413:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1424:
	.align	2, 0
.L1423:
	.word	sBerryBlender
.Lfe75:
	.size	 SortScores,.Lfe75-SortScores
	.align	2, 0
	.type	 PrintBlendingRanking,function
	.thumb_func
PrintBlendingRanking:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	ldr	r1, .L1447
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x6
	bls	.LCB11568
	b	.L1426	@long jump
.LCB11568:
	lsl	r0, r0, #0x2
	ldr	r1, .L1447+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1448:
	.align	2, 0
.L1447:
	.word	sBerryBlender
	.word	.L1443
	.align	2, 0
	.align	2, 0
.L1443:
	.word	.L1427
	.word	.L1428
	.word	.L1430
	.word	.L1432
	.word	.L1438
	.word	.L1440
	.word	.L1442
.L1427:
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0xff
	str	r1, [r0]
	b	.L1426
.L1428:
	ldr	r1, [r2]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	ldr	r0, [r2]
	sub	r0, r0, #0xa
	str	r0, [r2]
	cmp	r0, #0
	blt	.LCB11613
	b	.L1426	@long jump
.LCB11613:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1446
.L1430:
	ldr	r1, [r2]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	ldr	r0, [r2]
	add	r0, r0, #0x1
	str	r0, [r2]
	cmp	r0, #0x14
	bgt	.LCB11630
	b	.L1426	@long jump
.LCB11630:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1446
.L1432:
	mov	r0, #0x5
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r4, .L1449
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0xa8
	bl	GetStringCenterAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xff
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	add	r1, r4, #0
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	ldr	r1, .L1449+0x4
	mov	r8, r1
	mov	r0, r8
	mov	r1, #0x80
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r7, .L1449+0x8
	ldr	r1, [r7]
	add	r1, r1, #0x46
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x46
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L1449+0xc
	add	r0, r0, r6
	mov	r1, #0x3
	bl	StartSpriteAnim
	ldr	r0, [r7]
	add	r0, r0, #0x46
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r6, #0
	add	r5, r5, #0x1c
	add	r0, r0, r5
	ldr	r4, .L1449+0x10
	str	r4, [r0]
	mov	r0, r8
	mov	r1, #0xa0
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r1, r1, #0x47
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x47
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	str	r4, [r0]
	mov	r0, r8
	mov	r1, #0xc0
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r1, r1, #0x48
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x48
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r0, [r7]
	add	r0, r0, #0x48
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	str	r4, [r0]
	bl	SortScores
	mov	r2, #0x29
	str	r2, [sp, #0x8]
	mov	r2, #0x0
	ldr	r0, [r7]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.LCB11749
	b	.L1434	@long jump
.LCB11749:
	mov	r3, #0xff
	mov	sl, r3
	mov	r0, #0x3
	mov	r9, r0
.L1436:
	ldr	r0, [r7]
	mov	r3, #0x9e
	lsl	r3, r3, #0x1
	add	r1, r0, r3
	add	r1, r1, r2
	ldrb	r5, [r1]
	add	r0, r0, #0x9f
	add	r2, r2, #0x1
	mov	r8, r2
	mov	r1, r8
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1449+0x14
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1449+0x18
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	lsl	r1, r5, #0x3
	sub	r1, r1, r5
	lsl	r1, r1, #0x2
	ldr	r2, .L1449+0x1c
	add	r1, r1, r2
	bl	StringAppend
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	ldr	r0, [sp, #0x8]
	lsl	r6, r0, #0x18
	lsr	r6, r6, #0x18
	mov	r2, sl
	str	r2, [sp]
	mov	r3, r9
	str	r3, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x0
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	lsl	r4, r4, #0x1
	mov	r2, #0x92
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x4e
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	mov	r2, #0x93
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x6e
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	mov	r2, #0x94
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x8e
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [sp, #0x8]
	add	r1, r1, #0x10
	str	r1, [sp, #0x8]
	mov	r2, r8
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.LCB11905
	b	.L1436	@long jump
.LCB11905:
.L1434:
	mov	r0, #0x5
	bl	PutWindowTilemap
	mov	r0, #0x5
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L1449+0x8
	ldr	r1, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1446
.L1450:
	.align	2, 0
.L1449:
	.word	sText_Ranking
	.word	sSpriteTemplate_ScoreSymbols
	.word	sBerryBlender
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	sText_Dot
	.word	gText_Space
	.word	gLinkPlayers+0x8
.L1438:
	ldr	r2, [r2]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	ble	.L1426	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L1426
.L1440:
	ldr	r0, .L1451
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1426	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1451+0x4
	ldr	r1, [r0]
.L1446:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1426
.L1452:
	.align	2, 0
.L1451:
	.word	gMain
	.word	sBerryBlender
.L1442:
	ldr	r1, [r2]
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L1445
.L1426:
	mov	r0, #0x0
.L1445:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe76:
	.size	 PrintBlendingRanking,.Lfe76-PrintBlendingRanking
	.align	2, 0
	.globl	ShowBerryBlenderRecordWindow
	.type	 ShowBerryBlenderRecordWindow,function
	.thumb_func
ShowBerryBlenderRecordWindow:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x34
	ldr	r0, .L1459
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x2c]
	str	r1, [sp, #0x30]
	ldr	r5, .L1459+0x4
	add	r0, sp, #0x2c
	bl	AddWindow
	strb	r0, [r5]
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r6, .L1459+0x8
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x90
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	ldrb	r0, [r5]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r2, r6, #0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r5]
	ldr	r2, .L1459+0xc
	mov	r1, #0x29
	str	r1, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x4
	bl	AddTextPrinterParameterized
	mov	r6, #0x0
	mov	r7, #0xa4
	lsl	r7, r7, #0x16
.L1457:
	ldr	r0, .L1459+0x10
	ldr	r0, [r0]
	lsl	r1, r6, #0x1
	ldr	r2, .L1459+0x14
	add	r0, r0, r2
	add	r0, r0, r1
	ldrh	r4, [r0]
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__udivsi3
	add	r1, r0, #0
	add	r0, sp, #0xc
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r5, r0, #0
	ldr	r1, .L1459+0x18
	bl	StringAppend
	add	r5, r0, #0
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__umodsi3
	add	r1, r0, #0
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r5, r0, #0
	ldr	r1, .L1459+0x1c
	bl	StringAppend
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0x8c
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	ldr	r4, .L1459+0x4
	ldrb	r0, [r4]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsr	r1, r7, #0x18
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	mov	r0, #0x80
	lsl	r0, r0, #0x15
	add	r7, r7, r0
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L1457	@cond_branch
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x34
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1460:
	.align	2, 0
.L1459:
	.word	sBlenderRecordWindowTemplate
	.word	gRecordsWindowId
	.word	gText_BlenderMaxSpeedRecord
	.word	gText_234Players
	.word	gSaveBlock1Ptr
	.word	0xf9c
	.word	sText_Dot
	.word	sText_RPM
.Lfe77:
	.size	 ShowBerryBlenderRecordWindow,.Lfe77-ShowBerryBlenderRecordWindow
	.align	2, 0
	.type	 Task_PlayPokeblockFanfare,function
	.thumb_func
Task_PlayPokeblockFanfare:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r1, .L1464
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1462	@cond_branch
	ldr	r0, .L1464+0x4
	bl	PlayFanfare
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L1462:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1463	@cond_branch
	ldr	r0, .L1464+0x8
	ldr	r0, [r0]
	mov	r1, #0xaa
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	PlayBGM
	add	r0, r5, #0
	bl	DestroyTask
.L1463:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1465:
	.align	2, 0
.L1464:
	.word	gTasks
	.word	0x16f
	.word	sBerryBlender
.Lfe78:
	.size	 Task_PlayPokeblockFanfare,.Lfe78-Task_PlayPokeblockFanfare
	.align	2, 0
	.type	 TryAddContestLinkTvShow,function
	.thumb_func
TryAddContestLinkTvShow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	add	r7, r1, #0
	bl	GetHighestPokeblocksFlavorLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	bl	GetPokeblocksFeel
	add	r1, r0, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	strb	r3, [r7, #0xd]
	ldrb	r0, [r6]
	strb	r0, [r7, #0xc]
	mov	r0, #0xff
	strb	r0, [r7]
	ldr	r0, .L1475
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1467	@cond_branch
	ldr	r0, .L1475+0x4
	ldr	r2, [r0]
	mov	r4, #0xd2
	lsl	r4, r4, #0x1
	add	r1, r2, r4
	ldrb	r1, [r1]
	mov	r8, r0
	cmp	r1, #0
	bne	.L1468	@cond_branch
	cmp	r3, #0x14
	bls	.L1468	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r1, [r0]
	sub	r1, r1, #0x1
	mov	r0, #0x9e
	lsl	r0, r0, #0x1
	mov	r9, r0
	add	r0, r2, r0
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r5, .L1475+0x8
	add	r1, r1, r5
	add	r0, r7, #0
	bl	StringCopy
	add	r0, r6, #0
	bl	GetPokeblocksFlavor
	strb	r0, [r7, #0xb]
	ldrb	r1, [r7, #0xb]
	ldrb	r2, [r7, #0xc]
	ldrb	r3, [r7, #0xd]
	mov	r6, r8
	ldr	r4, [r6]
	add	r0, r4, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r4, r4, r9
	add	r4, r4, r0
	ldrb	r4, [r4]
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r5, r5, r0
	ldrb	r0, [r5, #0x12]
	str	r0, [sp]
	add	r0, r7, #0
	bl	Put3CheersForPokeblocksOnTheAir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1474	@cond_branch
	b	.L1467
.L1476:
	.align	2, 0
.L1475:
	.word	gReceivedRemoteLinkPlayers
	.word	sBerryBlender
	.word	gLinkPlayers+0x8
.L1468:
	mov	r0, r8
	ldr	r2, [r0]
	mov	r1, #0xd2
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	ldrb	r1, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1467	@cond_branch
	cmp	r3, #0x14
	bhi	.L1467	@cond_branch
	mov	r4, #0x9e
	lsl	r4, r4, #0x1
	add	r0, r2, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r5, .L1477
	add	r1, r1, r5
	add	r0, r7, #0
	bl	StringCopy
	add	r0, r6, #0
	bl	GetPokeblocksFlavor
	strb	r0, [r7, #0xb]
	ldrb	r1, [r7, #0xb]
	ldrb	r2, [r7, #0xc]
	ldrb	r3, [r7, #0xd]
	mov	r6, r8
	ldr	r0, [r6]
	add	r0, r0, r4
	ldrb	r4, [r0]
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r5, r5, r0
	ldrb	r0, [r5, #0x12]
	str	r0, [sp]
	add	r0, r7, #0
	bl	Put3CheersForPokeblocksOnTheAir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1472	@cond_branch
.L1474:
	mov	r0, #0x1
	b	.L1473
.L1478:
	.align	2, 0
.L1477:
	.word	gLinkPlayers+0x8
.L1472:
.L1467:
	mov	r0, #0x0
.L1473:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 TryAddContestLinkTvShow,.Lfe79-TryAddContestLinkTvShow
	.align	2, 0
	.type	 Blender_AddTextPrinter,function
	.thumb_func
Blender_AddTextPrinter:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	mov	r9, r1
	ldr	r4, [sp, #0x38]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	mov	r5, #0x0
	cmp	r4, #0x1
	beq	.L1483	@cond_branch
	cmp	r4, #0x1
	bgt	.L1487	@cond_branch
	cmp	r4, #0
	beq	.L1482	@cond_branch
	b	.L1480
.L1487:
	cmp	r4, #0x2
	beq	.L1484	@cond_branch
	cmp	r4, #0x3
	bne	.L1489	@cond_branch
.L1482:
	add	r1, sp, #0x14
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	mov	r0, #0x3
	b	.L1490
.L1483:
	add	r0, sp, #0x14
	strb	r5, [r0]
	add	r1, r0, #0
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	mov	r0, #0x3
	b	.L1490
.L1484:
	add	r0, sp, #0x14
	strb	r5, [r0]
	add	r1, r0, #0
	mov	r0, #0x4
	strb	r0, [r1, #0x1]
	mov	r0, #0x5
.L1490:
	strb	r0, [r1, #0x2]
.L1480:
	cmp	r4, #0x3
	beq	.L1488	@cond_branch
.L1489:
	add	r0, sp, #0x14
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	orr	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	FillWindowPixelBuffer
.L1488:
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	add	r0, sp, #0x14
	str	r0, [sp, #0x8]
	ldr	r0, [sp, #0x34]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	str	r0, [sp, #0xc]
	mov	r0, r9
	str	r0, [sp, #0x10]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, r8
	add	r3, r7, #0
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 Blender_AddTextPrinter,.Lfe80-Blender_AddTextPrinter
	.align	2, 0
	.type	 Blender_PrintText,function
	.thumb_func
Blender_PrintText:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r7, r1, #0
	add	r6, r2, #0
	mov	r0, #0x0
	ldrsh	r4, [r5, r0]
	cmp	r4, #0
	beq	.L1493	@cond_branch
	cmp	r4, #0x1
	beq	.L1494	@cond_branch
	b	.L1492
.L1493:
	mov	r0, #0x4
	mov	r1, #0x0
	mov	r2, #0x14
	mov	r3, #0xf
	bl	DrawDialogFrameWithCustomTileAndPalette
	str	r6, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x4
	add	r1, r7, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x4
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L1492
.L1494:
	mov	r0, #0x4
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1492	@cond_branch
	strh	r0, [r5]
	mov	r0, #0x1
	b	.L1498
.L1492:
	mov	r0, #0x0
.L1498:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 Blender_PrintText,.Lfe81-Blender_PrintText
	.comm	gInGameOpponentsNo, 4	@ 1

	.lcomm	sPokeblockFlavors,12

	.lcomm	sPokeblockPresentFlavors,12

	.lcomm	sDebug_MaxRPMStage,2

	.lcomm	sDebug_GameTimeStage,2
.text
	.align	2, 0

