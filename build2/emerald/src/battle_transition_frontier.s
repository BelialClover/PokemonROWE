@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sLogoCenter_Gfx,object
sLogoCenter_Gfx:
	.word	0x56010
	.word	-0xfffffc4
	.word	-0xffe0fff
	.word	0x55012001
	.word	-0xfaa96ab
	.word	0x5001a014
	.word	0x55500bb0
	.word	0x557c0200
	.word	0x1503710
	.word	0xf801320
	.word	0x66650130
	.word	0x76665500
	.word	0x77776677
	.word	0x1ae08f77
	.word	0x10666666
	.word	-0xffeafe9
	.word	-0x3845f8e
	.word	0x60005f30
	.word	0x6007750
	.word	0x2006020
	.word	0x55285576
	.word	0x665f1076
	.word	0x55770200
	.word	0x77770365
	.word	0x77777665
	.word	0x1f00200
	.word	0x670170a0
	.word	0x77560200
	.word	0xa555677
	.word	0x55556777
	.word	0x30550600
	.word	0x66386616
	.word	0x450067
	.word	0x7501700e
	.word	0xfa7777
	.word	0x109f0002
	.word	0x7083807f
	.word	0x3006587
	.word	0x7710ff76
	.word	0x78000320
	.word	0x7f200600
	.word	0x7b5083f0
	.word	0xa00320
	.word	0x7700777f
	.word	0x57775567
	.word	0x555f55
	.word	-0x79ef8a7a
	.word	-0x72ef8ff0
	.word	0x78000320
	.word	0x409810ff
	.word	-0xefe0f64
	.word	0x502f513f
	.word	0x20d71103
	.word	-0x55ff20fd
	.word	0x652701
	.word	0x11031057
	.word	0x5003002f
	.word	0x77651fb3
	.word	0x10464057
	.word	0x7d3007
	.word	0x6b44193
	.word	-0x7aaaaa78
	.word	-0x4ff1ff78
	.word	0x581f8801
	.word	0x3808855
	.word	0x2b11a750
	.word	0x17500390
	.word	-0x6fc08e01
	.word	0x30371203
	.word	0x923003
	.word	0x41a50065
	.word	0x50856a80
	.word	-0x77f9ff85
	.word	0x880600
	.word	0xfd8806
	.word	0x2001f006
	.word	0x20871001
	.word	0x58035022
	.word	0x20fd0340
	.word	0x21875001
	.word	0x51031053
	.word	0x556f2163
	.word	0x70ff9f00
	.word	0x1003f08b
	.word	0x5083708d
	.word	-0xffc6f79
	.word	0x3f9dd001
	.word	-0x37ff8aab
	.word	-0x32efc9ef
	.word	-0x608fc8bf
	.word	0x21ff7c11
	.word	0x709b202f
	.word	0x202e0001
	.word	-0xe78cfd1
	.word	-0x20aebd
	.word	0xd18310
	.word	-0x48bffce0
	.word	0x1b922740
	.word	0x271002b4
	.word	0x319940e6
	.word	0x55031073
	.word	0x10db0288
	.word	0x24ff8503
	.word	-0x5f08addd
	.word	0x5057308b
	.word	0x518760c7
	.word	0x3f4f602f
	.word	-0x4cec7aab
	.word	0x43604760
	.word	0x3fa08b30
	.word	0x11ff3760
	.word	-0xe91bd01
	.word	0x10016052
	.word	0x7057701c
	.word	-0x11d4bad
	.word	-0x508b7ce0
	.word	0x1f40b354
	.word	-0x192db8b0
	.word	0x1b55
	.size	 sLogoCenter_Gfx,476
	.align	2, 0
	.type	 sLogoCenter_Tilemap,object
sLogoCenter_Tilemap:
	.word	0x80010
	.word	-0xf0fffc3
	.word	-0xffe0fff
	.word	0x12001
	.word	-0xf00ff00
	.word	-0xffe0feb
	.word	-0xfc00fff
	.word	-0xffe0fff
	.word	-0x78c00fc1
	.word	-0xffefe80
	.word	0x15f0f401
	.word	0x1f03ff0
	.word	0x3f00200
	.word	0x5f004f0
	.word	-0xbfafe10
	.word	-0xbfc0bfc
	.word	-0x3fba0ffe
	.word	0x1803ff0
	.word	-0xff80ffa
	.word	0x900f008
	.word	0xaf00af0
	.word	0x7f409f4
	.word	-0xbf80bf8
	.word	-0xfbe0ffa
	.word	0x1603f
	.word	-0xff30ff5
	.word	-0xff10ff3
	.word	0x1000f40
	.word	-0xbf20bf2
	.word	0xb70f40c
	.word	0x3ff03ff0
	.word	-0xfeffec0
	.word	0x1204f011
	.word	0x14f013f0
	.word	-0xbebc0e0
	.word	0x12f41301
	.word	0x10f411f4
	.word	-0xf3fbe10
	.word	0x1501203f
	.word	0x17f016f0
	.word	-0xfe7ef10
	.word	0x193f2019
	.word	0x7f418f4
	.word	-0xbe90be9
	.word	-0xfc00feb
	.word	0x401203f
	.word	-0xfe40fe6
	.word	0x1d01001c
	.word	-0xfe1fd10
	.word	-0xbe20be2
	.word	0x381b0b10
	.word	0x3ff01af4
	.word	0x1203ff0
	.word	-0x38df0fe1
	.word	0x1903f20
	.word	-0xfe00be0
	.word	0x203ff03f
	.word	-0xfdeeeff
	.word	0x223fe022
	.word	0x3ff021f4
	.word	0x403ff0c4
	.word	0x24f02301
	.word	-0xbdbc260
	.word	0x3df02370
	.word	0x1803ff0
	.word	-0xfd90fdb
	.word	0x3b202741
	.word	-0xbd90bd9
	.word	-0x3fc20fdb
	.word	0x1c03ff0
	.word	-0xfd60fd8
	.word	0x2a07f02a
	.word	0x28f429f4
	.word	0x3ff03df0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fc1
	.word	-0xfc00fff
	.word	-0xfe0fff
	.word	0x3ff001f0
	.word	0x1f001f0
	.word	0x1f03ff0
	.word	0x1f001f0
	.word	-0xfc0af01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0f001
	.word	0x1f001f0
	.word	0x180
	.size	 sLogoCenter_Tilemap,428
	.align	2, 0
	.type	 sLogoCircles_Gfx,object
sLogoCircles_Gfx:
	.word	0x180010
	.word	-0xfffffc8
	.word	-0x1ffe0fff
	.word	0x5501
	.word	0x55503c
	.word	0x50070002
	.word	0x550b000f
	.word	0x1408155
	.word	0x65557665
	.word	0x2007777
	.word	0x13707763
	.word	0x66661610
	.word	-0x6fecff9a
	.word	0x1500c301
	.word	0x66662260
	.word	0x12005556
	.word	0x40f122a0
	.word	0x105d105c
	.word	0x672b2027
	.word	0x27005556
	.word	0x562b20b7
	.word	0x2f409af0
	.word	0x2f1005
	.word	-0x20fe0ffc
	.word	0x17001f0
	.word	0x30034050
	.word	0x310df
	.word	0xde600b5
	.word	0x75555576
	.word	-0x50ff5500
	.word	-0x21fcff8b
	.word	-0x24ef8800
	.word	-0xf343f8a
	.word	0x7001f001
	.word	0x557f5701
	.word	0x17f0fc10
	.word	0x67101741
	.word	0x1e01ef0
	.word	0x3f0a01
	.word	0xe80067
	.word	0x9d104e
	.word	0x30570003
	.word	0x565fa2
	.word	-0x236f98fd
	.word	0x3100d11
	.word	0x1e211f61
	.word	0x655921ab
	.word	0x75ea00
	.word	0xe007603
	.word	0x651fb301
	.word	0x3205077
	.word	0x1f08400
	.word	0x740001f0
	.word	0x107330f1
	.word	0x1087407b
	.word	0x7555578f
	.word	0x1fffc71
	.word	-0x2fb1ffc1
	.word	0x301d5051
	.word	0x10bb20bf
	.word	-0x8fe5fb5
	.word	-0x2bdfccf0
	.word	0x3501321
	.word	-0xfa1ef8b
	.word	0x155fe089
	.word	0x560000
	.word	-0x13ffa8fd
	.word	-0x8fcff99
	.word	0x34011010
	.word	0x33110310
	.word	0xf20005
	.word	-0xfccf19
	.word	-0x27fea8e0
	.word	0x1f00390
	.word	0x1842c6e1
	.word	-0x5f0ffc10
	.word	-0xffe0f01
	.word	-0xfa10fff
	.word	-0xf9daea5
	.word	0x1e05e
	.word	0x360fff4
	.word	0x37133820
	.word	-0x102ffc90
	.word	0x13912110
	.word	-0xf00af10
	.word	-0x5d848d60
	.word	0x61c7f17f
	.word	0x413211c3
	.word	-0xb81d09
	.word	0x4f003f00
	.word	0x5e310150
	.word	0x7f436281
	.word	0x1f0f9f0
	.word	-0x4fdeac01
	.word	-0x7ebafffd
	.word	0x12e31213
	.word	0x22f312eb
	.word	0x313fffb
	.word	0x13130b13
	.word	0x50f01010
	.word	0x1f001f0
	.word	0x41ffe0a2
	.word	0x4001f013
	.word	-0xf390ee2
	.word	-0xffe0fff
	.word	-0x44fe0fff
	.word	0x22059f21
	.word	0x24f312eb
	.word	0xb23052b
	.word	0x35ff1313
	.word	0x34e744bd
	.word	0x60ff5416
	.word	0x13011201
	.word	-0x804cfa
	.word	0x2b243311
	.word	0x1f021f3
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x4201f0ff
	.word	0x74eb44e1
	.word	0x153f027f
	.word	0x541b1513
	.word	-0x23ef0019
	.word	0x1f0ff54
	.word	0x117601f0
	.word	0x1f612511
	.word	0x16bf01e0
	.word	0x40055ac
	.word	0x2306bd06
	.word	-0x5be9ccfe
	.word	0x20ff5931
	.word	0x20a8902f
	.word	0x5203072b
	.word	-0x3fd4ef25
	.word	-0xedff835
	.word	0x170b500
	.word	0x36003f10
	.word	0x675566
	.word	0x1940ff35
	.word	-0x14a94ecb
	.word	-0x20af2400
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0x8fe0fff
	.word	-0x800089e
	.word	-0x8000801
	.word	-0x801
	.word	-0x80009
	.word	-0x80009
	.word	0x1f0fff7
	.word	-0x8120f
	.word	-0x8000801
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x800ff
	.word	-0x80009
	.word	-0x80009
	.word	-0x670b0009
	.word	-0xf00fe10
	.word	0x20c76501
	.word	-0x6f0f0e71
	.word	-0x59c50fff
	.word	-0xe30fdd
	.word	0x1f001f0
	.word	-0x80009
	.word	-0x80009
	.word	-0x180f220c
	.word	0x267711ff
	.word	-0x970c859
	.word	-0x3ecb0f55
	.word	0x51e8400e
	.word	-0x409e0045
	.word	-0x76eebc59
	.word	-0x707af897
	.word	-0x8fe10
	.word	-0x8000009
	.word	0x67fff7ff
	.word	-0x2f7cef01
	.word	-0x2f544efd
	.word	-0x5c76fd
	.word	0x43f190f0
	.word	-0x1daffc10
	.word	0x5ff05501
	.word	0x1f003a1
	.word	-0x8de0c01
	.word	-0x8000801
	.word	-0xf000801
	.word	0x4afea801
	.word	-0x3805003d
	.word	-0x13dd49f
	.word	0xb301b78
	.word	0x16300b12
	.word	-0x6e00d4c5
	.word	-0xffe0f09
	.word	-0x8fe0fff
	.word	-0x8000801
	.word	-0x801
	.word	-0x80009
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x8000801
	.word	-0x8000801
	.word	-0x9fe0f01
	.word	-0x80008ef
	.word	-0x80001
	.word	-0x80009
	.word	-0x80009
	.word	-0x80009
	.word	-0xf000009
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x80008ff
	.word	-0x801
	.word	-0x80009
	.word	-0x80009
	.word	-0x650f0009
	.word	0x1f0fff7
	.word	-0x8fe0f01
	.word	-0x8000801
	.word	-0xf730d01
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	-0x80009
	.word	-0x80009
	.word	-0x8000009
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	0x57945401
	.word	-0xf008c9
	.word	0x1ff80a55
	.word	0x1bf047fe
	.word	-0x8b010
	.word	-0x80009
	.word	-0xf000801
	.word	-0x693809ff
	.word	0x4e8f34bb
	.word	-0x79c48d36
	.word	0x5d41ffbf
	.word	-0x405f3a10
	.word	0x68161e68
	.word	0x32f06bff
	.word	-0x800d85f
	.word	-0x8000801
	.word	-0xf000001
	.word	-0x1f347eff
	.word	-0x5d47fd
	.word	-0x4007fc30
	.word	0x5ff001f0
	.word	-0xbffc70
	.word	0x5fe01e38
	.word	-0x8000801
	.word	-0x8000801
	.word	-0xf000801
	.word	-0x5ec06ff
	.word	0x1e88ffcb
	.word	-0x3cde0cce
	.word	0x1dfbbbf1
	.word	0x542a2620
	.word	0x42ff1768
	.word	-0xf180fb9
	.word	-0x80008ff
	.word	-0x8000801
	.word	-0x801
	.word	0x1f0fff7
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x8fe10
	.word	-0x8000801
	.word	-0xf000801
	.word	-0x8fe0fff
	.word	-0x8000801
	.word	-0x80001
	.word	-0x80009
	.word	-0x80009
	.word	-0x80009
	.word	-0xf3ffe10
	.word	0x15001
	.size	 sLogoCircles_Gfx,1120
	.align	1, 0
	.type	 sLogo_Pal,object
sLogo_Pal:
	.short	0x4b0c
	.short	0x7fff
	.short	0x7f56
	.short	0x7e25
	.short	0x41ee
	.short	0x7fff
	.short	0x7f56
	.short	0x7e25
	.short	0x7fff
	.short	0x481e
	.short	0x48d8
	.short	0x4992
	.short	0x4a4c
	.short	0x4b06
	.short	0x4bc0
	.short	0x0
	.size	 sLogo_Pal,32
	.type	 sFiller,object
	.size	 sFiller,448
sFiller:
	.byte	0x0
	.space	447
	.align	2, 0
	.type	 sOamData_LogoCircles,object
	.size	 sOamData_LogoCircles,8
sOamData_LogoCircles:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteSheet_LogoCircles,object
	.size	 sSpriteSheet_LogoCircles,8
sSpriteSheet_LogoCircles:
	.word	sLogoCircles_Gfx
	.short	0x1800
	.short	0x2e90
	.align	2, 0
	.type	 sSpritePalette_LogoCircles,object
	.size	 sSpritePalette_LogoCircles,8
sSpritePalette_LogoCircles:
	.word	sLogo_Pal
	.short	0x2e90
	.space	2
	.align	2, 0
	.type	 sAnim_LogoCircle_Top,object
sAnim_LogoCircle_Top:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_LogoCircle_Top,8
	.align	2, 0
	.type	 sAnim_LogoCircle_Left,object
sAnim_LogoCircle_Left:
	.short	0x40
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_LogoCircle_Left,8
	.align	2, 0
	.type	 sAnim_LogoCircle_Right,object
sAnim_LogoCircle_Right:
	.short	0x80
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_LogoCircle_Right,8
	.align	2, 0
	.type	 sAnimTable_LogoCircles,object
sAnimTable_LogoCircles:
	.word	sAnim_LogoCircle_Top
	.word	sAnim_LogoCircle_Left
	.word	sAnim_LogoCircle_Right
	.size	 sAnimTable_LogoCircles,12
	.align	2, 0
	.type	 sSpriteTemplate_LogoCircles,object
	.size	 sSpriteTemplate_LogoCircles,24
sSpriteTemplate_LogoCircles:
	.short	0x2e90
	.short	0x2e90
	.word	sOamData_LogoCircles
	.word	sAnimTable_LogoCircles
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sPhase2_FrontierCirclesMeet_Funcs,object
sPhase2_FrontierCirclesMeet_Funcs:
	.word	Circles_Init
	.word	CirclesMeet_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesMeet_End
	.size	 sPhase2_FrontierCirclesMeet_Funcs,20
	.align	2, 0
	.type	 sPhase2_FrontierCirclesCross_Funcs,object
sPhase2_FrontierCirclesCross_Funcs:
	.word	Circles_Init
	.word	CirclesCross_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesCross_End
	.size	 sPhase2_FrontierCirclesCross_Funcs,20
	.align	2, 0
	.type	 sPhase2_FrontierCirclesAsymmetricSpiral_Funcs,object
sPhase2_FrontierCirclesAsymmetricSpiral_Funcs:
	.word	Circles_Init
	.word	CirclesAsymmetricSpiral_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesAsymmetricSpiral_End
	.size	 sPhase2_FrontierCirclesAsymmetricSpiral_Funcs,20
	.align	2, 0
	.type	 sPhase2_FrontierCirclesSymmetricSpiral_Funcs,object
sPhase2_FrontierCirclesSymmetricSpiral_Funcs:
	.word	Circles_Init
	.word	CirclesSymmetricSpiral_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesSymmetricSpiral_End
	.size	 sPhase2_FrontierCirclesSymmetricSpiral_Funcs,20
	.align	2, 0
	.type	 sPhase2_FrontierCirclesMeetInSeq_Funcs,object
sPhase2_FrontierCirclesMeetInSeq_Funcs:
	.word	Circles_Init
	.word	CirclesMeetInSeq_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesMeetInSeq_End
	.size	 sPhase2_FrontierCirclesMeetInSeq_Funcs,20
	.align	2, 0
	.type	 sPhase2_FrontierCirclesCrossInSeq_Funcs,object
sPhase2_FrontierCirclesCrossInSeq_Funcs:
	.word	Circles_Init
	.word	CirclesCrossInSeq_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesCrossInSeq_End
	.size	 sPhase2_FrontierCirclesCrossInSeq_Funcs,20
	.align	2, 0
	.type	 sPhase2_FrontierCirclesAsymmetricSpiralInSeq_Funcs,object
sPhase2_FrontierCirclesAsymmetricSpiralInSeq_Funcs:
	.word	Circles_Init
	.word	CirclesAsymmetricSpiralInSeq_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesAsymmetricSpiralInSeq_End
	.size	 sPhase2_FrontierCirclesAsymmetricSpiralInSeq_Funcs,20
	.align	2, 0
	.type	 sPhase2_FrontierCirclesSymmetricSpiralInSeq_Funcs,object
sPhase2_FrontierCirclesSymmetricSpiralInSeq_Funcs:
	.word	Circles_Init
	.word	CirclesSymmetricSpiralInSeq_CreateSprites
	.word	WaitForLogoCirclesAnim
	.word	FadeInCenterLogoCircle
	.word	CirclesSymmetricSpiralInSeq_End
	.size	 sPhase2_FrontierCirclesSymmetricSpiralInSeq_Funcs,20
.text
	.align	2, 0
	.type	 LoadLogoGfx,function
	.thumb_func
LoadLogoGfx:
	push	{lr}
	add	sp, sp, #-0x8
	add	r1, sp, #0x4
	mov	r0, sp
	bl	GetBg0TilesDst
	ldr	r0, .L3
	ldr	r1, [sp, #0x4]
	bl	LZ77UnCompVram
	ldr	r0, .L3+0x4
	ldr	r1, [sp]
	bl	LZ77UnCompVram
	ldr	r0, .L3+0x8
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L3+0xc
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L3+0x10
	bl	LoadSpritePalette
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	sLogoCenter_Gfx
	.word	sLogoCenter_Tilemap
	.word	sLogo_Pal
	.word	sSpriteSheet_LogoCircles
	.word	sSpritePalette_LogoCircles
.Lfe1:
	.size	 LoadLogoGfx,.Lfe1-LoadLogoGfx
	.align	2, 0
	.type	 CreateSlidingLogoCircleSprite,function
	.thumb_func
CreateSlidingLogoCircleSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	add	r6, r1, #0
	ldr	r0, [sp, #0x24]
	ldr	r1, [sp, #0x28]
	ldr	r4, [sp, #0x2c]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	lsl	r4, r4, #0x18
	lsr	r7, r4, #0x18
	ldr	r0, .L16
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r6, r6, #0x10
	asr	r6, r6, #0x10
	add	r1, r5, #0
	add	r2, r6, #0
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r7, #0x1
	beq	.L8	@cond_branch
	cmp	r7, #0x1
	bgt	.L12	@cond_branch
	cmp	r7, #0
	beq	.L7	@cond_branch
	b	.L13
.L17:
	.align	2, 0
.L16:
	.word	sSpriteTemplate_LogoCircles
.L12:
	cmp	r7, #0x2
	beq	.L9	@cond_branch
.L13:
	ldr	r6, .L18
	lsl	r3, r5, #0x4
	b	.L6
.L19:
	.align	2, 0
.L18:
	.word	gSprites
.L7:
	ldr	r2, .L20
	lsl	r3, r5, #0x4
	add	r0, r3, r5
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x78
	strh	r1, [r0, #0x2e]
	mov	r1, #0x2d
	b	.L14
.L21:
	.align	2, 0
.L20:
	.word	gSprites
.L8:
	ldr	r2, .L22
	lsl	r3, r5, #0x4
	add	r0, r3, r5
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x59
	b	.L15
.L23:
	.align	2, 0
.L22:
	.word	gSprites
.L9:
	ldr	r2, .L24
	lsl	r3, r5, #0x4
	add	r0, r3, r5
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x97
.L15:
	strh	r1, [r0, #0x2e]
	mov	r1, #0x61
.L14:
	strh	r1, [r0, #0x30]
	add	r6, r2, #0
.L6:
	add	r4, r3, r5
	lsl	r4, r4, #0x2
	add	r0, r4, r6
	mov	r2, r8
	lsl	r1, r2, #0x18
	asr	r1, r1, #0x18
	mov	r2, #0x0
	strh	r1, [r0, #0x32]
	mov	r3, r9
	lsl	r1, r3, #0x18
	asr	r1, r1, #0x18
	strh	r1, [r0, #0x34]
	mov	r1, sp
	ldrh	r1, [r1]
	strh	r1, [r0, #0x3a]
	mov	r3, sl
	strh	r3, [r0, #0x3c]
	strh	r2, [r0, #0x36]
	strh	r2, [r0, #0x38]
	add	r1, r7, #0
	bl	StartSpriteAnim
	add	r0, r6, #0
	add	r0, r0, #0x1c
	add	r4, r4, r0
	ldr	r0, .L24+0x4
	str	r0, [r4]
	add	r0, r5, #0
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L25:
	.align	2, 0
.L24:
	.word	gSprites
	.word	SpriteCB_LogoCircleSlide
.Lfe2:
	.size	 CreateSlidingLogoCircleSprite,.Lfe2-CreateSlidingLogoCircleSprite
	.align	2, 0
	.type	 SpriteCB_LogoCircleSlide,function
	.thumb_func
SpriteCB_LogoCircleSlide:
	push	{r4, r5, lr}
	add	r3, r0, #0
	add	r2, r3, #0
	add	r2, r2, #0x2e
	mov	r0, #0x20
	ldrsh	r1, [r3, r0]
	mov	r4, #0x2e
	ldrsh	r0, [r3, r4]
	cmp	r1, r0
	bne	.L27	@cond_branch
	mov	r5, #0x22
	ldrsh	r1, [r3, r5]
	mov	r4, #0x2
	ldrsh	r0, [r2, r4]
	cmp	r1, r0
	bne	.L27	@cond_branch
	ldr	r0, .L33
	str	r0, [r3, #0x1c]
	b	.L28
.L34:
	.align	2, 0
.L33:
	.word	SpriteCallbackDummy
.L27:
	ldrh	r4, [r2, #0x8]
	mov	r5, #0x8
	ldrsh	r1, [r2, r5]
	mov	r5, #0xc
	ldrsh	r0, [r2, r5]
	cmp	r1, r0
	bne	.L29	@cond_branch
	ldrh	r0, [r2, #0x4]
	ldrh	r1, [r3, #0x20]
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r3, #0x20]
	strh	r1, [r2, #0x8]
	b	.L30
.L29:
	add	r0, r4, #0x1
	strh	r0, [r2, #0x8]
.L30:
	ldrh	r4, [r2, #0xa]
	mov	r5, #0xa
	ldrsh	r1, [r2, r5]
	mov	r5, #0xe
	ldrsh	r0, [r2, r5]
	cmp	r1, r0
	bne	.L31	@cond_branch
	ldrh	r0, [r2, #0x6]
	ldrh	r1, [r3, #0x22]
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r3, #0x22]
	strh	r1, [r2, #0xa]
	b	.L28
.L31:
	add	r0, r4, #0x1
	strh	r0, [r2, #0xa]
.L28:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 SpriteCB_LogoCircleSlide,.Lfe3-SpriteCB_LogoCircleSlide
	.align	2, 0
	.type	 CreateSpiralingLogoCircleSprite,function
	.thumb_func
CreateSpiralingLogoCircleSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	mov	r8, r1
	ldr	r0, [sp, #0x2c]
	ldr	r1, [sp, #0x30]
	ldr	r4, [sp, #0x34]
	ldr	r5, [sp, #0x38]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	str	r2, [sp]
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	str	r3, [sp, #0x4]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsl	r4, r4, #0x10
	lsr	r7, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L46
	lsl	r6, r6, #0x10
	asr	r6, r6, #0x10
	mov	r1, r8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r8, r1
	add	r1, r6, #0
	mov	r2, r8
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r5, #0x1
	beq	.L38	@cond_branch
	cmp	r5, #0x1
	bgt	.L42	@cond_branch
	cmp	r5, #0
	beq	.L37	@cond_branch
	b	.L43
.L47:
	.align	2, 0
.L46:
	.word	sSpriteTemplate_LogoCircles
.L42:
	cmp	r5, #0x2
	beq	.L39	@cond_branch
.L43:
	ldr	r2, .L48
	lsl	r3, r6, #0x4
	b	.L36
.L49:
	.align	2, 0
.L48:
	.word	gSprites
.L37:
	ldr	r2, .L50
	lsl	r3, r6, #0x4
	add	r0, r3, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x78
	strh	r1, [r0, #0x2e]
	mov	r1, #0x2d
	b	.L44
.L51:
	.align	2, 0
.L50:
	.word	gSprites
.L38:
	ldr	r2, .L52
	lsl	r3, r6, #0x4
	add	r0, r3, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x59
	b	.L45
.L53:
	.align	2, 0
.L52:
	.word	gSprites
.L39:
	ldr	r2, .L54
	lsl	r3, r6, #0x4
	add	r0, r3, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x97
.L45:
	strh	r1, [r0, #0x2e]
	mov	r1, #0x61
.L44:
	strh	r1, [r0, #0x30]
.L36:
	add	r4, r3, r6
	lsl	r4, r4, #0x2
	add	r0, r4, r2
	mov	r3, sp
	ldrh	r3, [r3]
	strh	r3, [r0, #0x32]
	mov	r1, sp
	ldrh	r1, [r1, #0x4]
	strh	r1, [r0, #0x34]
	mov	r3, sl
	strh	r3, [r0, #0x36]
	mov	r1, r9
	strh	r1, [r0, #0x38]
	strh	r7, [r0, #0x3a]
	add	r1, r5, #0
	str	r2, [sp, #0x8]
	bl	StartSpriteAnim
	ldr	r2, [sp, #0x8]
	add	r0, r2, #0
	add	r0, r0, #0x1c
	add	r4, r4, r0
	ldr	r0, .L54+0x4
	str	r0, [r4]
	add	r0, r6, #0
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L55:
	.align	2, 0
.L54:
	.word	gSprites
	.word	SpriteCB_LogoCircleSpiral
.Lfe4:
	.size	 CreateSpiralingLogoCircleSprite,.Lfe4-CreateSpiralingLogoCircleSprite
	.align	2, 0
	.type	 SpriteCB_LogoCircleSpiral,function
	.thumb_func
SpriteCB_LogoCircleSpiral:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x32]
	bl	Sin2
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	mul	r0, r0, r1
	asr	r0, r0, #0xc
	strh	r0, [r4, #0x24]
	ldrh	r0, [r4, #0x32]
	bl	Cos2
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x36
	ldrsh	r1, [r4, r3]
	mul	r0, r0, r1
	asr	r0, r0, #0xc
	strh	r0, [r4, #0x26]
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	mov	r2, #0x34
	ldrsh	r1, [r4, r2]
	add	r0, r0, r1
	mov	r1, #0xb4
	lsl	r1, r1, #0x1
	bl	__modsi3
	strh	r0, [r4, #0x32]
	ldrh	r2, [r4, #0x36]
	mov	r3, #0x36
	ldrsh	r1, [r4, r3]
	mov	r3, #0x38
	ldrsh	r0, [r4, r3]
	cmp	r1, r0
	beq	.L57	@cond_branch
	ldrh	r0, [r4, #0x3a]
	add	r0, r2, r0
	strh	r0, [r4, #0x36]
	b	.L58
.L57:
	ldr	r0, .L59
	str	r0, [r4, #0x1c]
.L58:
	pop	{r4}
	pop	{r0}
	bx	r0
.L60:
	.align	2, 0
.L59:
	.word	SpriteCallbackDummy
.Lfe5:
	.size	 SpriteCB_LogoCircleSpiral,.Lfe5-SpriteCB_LogoCircleSpiral
	.align	2, 0
	.type	 DestroyLogoCirclesGfx,function
	.thumb_func
DestroyLogoCirclesGfx:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L62
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	mov	r0, #0x10
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L62+0x4
	add	r0, r0, r4
	bl	DestroySprite
	mov	r0, #0x12
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	mov	r0, #0x14
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	0x2e90
	.word	gSprites
.Lfe6:
	.size	 DestroyLogoCirclesGfx,.Lfe6-DestroyLogoCirclesGfx
	.align	2, 0
	.type	 IsLogoCirclesAnimFinished,function
	.thumb_func
IsLogoCirclesAnimFinished:
	push	{r4, r5, lr}
	add	r3, r0, #0
	ldr	r2, .L68
	mov	r0, #0x10
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r2, #0
	add	r5, r5, #0x1c
	add	r0, r0, r5
	ldr	r4, [r0]
	ldr	r0, .L68+0x4
	cmp	r4, r0
	bne	.L65	@cond_branch
	mov	r0, #0x12
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r2, [r0]
	cmp	r2, r4
	bne	.L65	@cond_branch
	mov	r1, #0x14
	ldrsh	r0, [r3, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldr	r0, [r1]
	cmp	r0, r2
	bne	.L65	@cond_branch
	mov	r0, #0x1
	b	.L67
.L69:
	.align	2, 0
.L68:
	.word	gSprites
	.word	SpriteCallbackDummy
.L65:
	mov	r0, #0x0
.L67:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 IsLogoCirclesAnimFinished,.Lfe7-IsLogoCirclesAnimFinished
	.align	2, 0
	.type	 Circles_Init,function
	.thumb_func
Circles_Init:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L71	@cond_branch
	bl	LoadLogoGfx
	ldr	r1, .L74
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r1, #0xa0
	lsl	r1, r1, #0x3
	mov	r0, #0x0
	mov	r2, #0x2
	bl	ChangeBgY
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	b	.L73
.L75:
	.align	2, 0
.L74:
	.word	0x3f41
.L71:
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	ClearGpuRegBits
	mov	r1, #0x80
	lsl	r1, r1, #0x7
	mov	r0, #0x0
	bl	ClearGpuRegBits
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	mov	r0, #0x0
	bl	ClearGpuRegBits
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
.L73:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 Circles_Init,.Lfe8-Circles_Init
	.align	2, 0
	.type	 FadeInCenterLogoCircle,function
	.thumb_func
FadeInCenterLogoCircle:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L77	@cond_branch
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	mov	r0, #0x0
	bl	SetGpuRegBits
.L77:
	ldrh	r1, [r4, #0xc]
	mov	r2, #0xc
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x10
	bne	.L78	@cond_branch
	ldrh	r1, [r4, #0xe]
	mov	r2, #0xe
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1f
	bne	.L79	@cond_branch
	mov	r1, #0x1
	neg	r1, r1
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r1, #0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L81
.L79:
	add	r0, r1, #0x1
	strh	r0, [r4, #0xe]
	b	.L81
.L78:
	add	r0, r1, #0x1
	strh	r0, [r4, #0xc]
	ldrh	r1, [r4, #0xc]
	mov	r0, #0x10
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
.L81:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 FadeInCenterLogoCircle,.Lfe9-FadeInCenterLogoCircle
	.align	2, 0
	.type	 WaitForLogoCirclesAnim,function
	.thumb_func
WaitForLogoCirclesAnim:
	push	{r4, lr}
	add	r4, r0, #0
	bl	IsLogoCirclesAnimFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L83	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L83:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 WaitForLogoCirclesAnim,.Lfe10-WaitForLogoCirclesAnim
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesMeet
	.type	 Phase2Task_FrontierCirclesMeet,function
	.thumb_func
Phase2Task_FrontierCirclesMeet:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L89
	ldr	r2, .L89+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L85:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L85	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	sPhase2_FrontierCirclesMeet_Funcs
	.word	gTasks
.Lfe11:
	.size	 Phase2Task_FrontierCirclesMeet,.Lfe11-Phase2Task_FrontierCirclesMeet
	.align	2, 0
	.type	 CirclesMeet_CreateSprites,function
	.thumb_func
CirclesMeet_CreateSprites:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	mov	r1, #0x33
	neg	r1, r1
	mov	r0, #0x0
	str	r0, [sp]
	mov	r5, #0x2
	str	r5, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x78
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0x10]
	mov	r0, #0x7
	neg	r0, r0
	str	r5, [sp]
	mov	r4, #0x2
	neg	r4, r4
	str	r4, [sp, #0x4]
	mov	r1, #0x1
	str	r1, [sp, #0x8]
	mov	r1, #0xc1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0x12]
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0xf7
	mov	r1, #0xc1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0x14]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 CirclesMeet_CreateSprites,.Lfe12-CirclesMeet_CreateSprites
	.align	2, 0
	.type	 CirclesMeet_End,function
	.thumb_func
CirclesMeet_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L94
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L93	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L94+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L93:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L95:
	.align	2, 0
.L94:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesMeet
.Lfe13:
	.size	 CirclesMeet_End,.Lfe13-CirclesMeet_End
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesCross
	.type	 Phase2Task_FrontierCirclesCross,function
	.thumb_func
Phase2Task_FrontierCirclesCross:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L101
	ldr	r2, .L101+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L97:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L97	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	sPhase2_FrontierCirclesCross_Funcs
	.word	gTasks
.Lfe14:
	.size	 Phase2Task_FrontierCirclesCross,.Lfe14-Phase2Task_FrontierCirclesCross
	.align	2, 0
	.type	 CirclesCross_CreateSprites,function
	.thumb_func
CirclesCross_CreateSprites:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	mov	r0, #0x0
	str	r0, [sp]
	mov	r4, #0x4
	neg	r4, r4
	str	r4, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x78
	mov	r1, #0xc5
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x10]
	str	r4, [sp]
	mov	r4, #0x2
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0xf1
	mov	r1, #0x3b
	mov	r2, #0x0
	mov	r3, #0x1
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x12]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x4
	str	r1, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x3b
	mov	r2, #0x0
	mov	r3, #0x1
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x14]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 CirclesCross_CreateSprites,.Lfe15-CirclesCross_CreateSprites
	.align	2, 0
	.type	 CirclesCross_End,function
	.thumb_func
CirclesCross_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L106
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L105	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L106+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L105:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L107:
	.align	2, 0
.L106:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesCross
.Lfe16:
	.size	 CirclesCross_End,.Lfe16-CirclesCross_End
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesAsymmetricSpiral
	.type	 Phase2Task_FrontierCirclesAsymmetricSpiral,function
	.thumb_func
Phase2Task_FrontierCirclesAsymmetricSpiral:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L113
	ldr	r2, .L113+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L109:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L109	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	sPhase2_FrontierCirclesAsymmetricSpiral_Funcs
	.word	gTasks
.Lfe17:
	.size	 Phase2Task_FrontierCirclesAsymmetricSpiral,.Lfe17-Phase2Task_FrontierCirclesAsymmetricSpiral
	.align	2, 0
	.type	 CirclesAsymmetricSpiral_CreateSprites,function
	.thumb_func
CirclesAsymmetricSpiral_CreateSprites:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x10
	mov	r8, r0
	mov	r6, #0x80
	str	r6, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	mov	r5, #0x4
	neg	r5, r5
	str	r5, [sp, #0x8]
	str	r4, [sp, #0xc]
	mov	r0, #0x78
	mov	r1, #0x2d
	mov	r2, #0xc
	mov	r3, #0x4
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1, #0x10]
	str	r6, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x59
	mov	r1, #0x61
	mov	r2, #0xfc
	mov	r3, #0x4
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1, #0x12]
	str	r6, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x2
	str	r0, [sp, #0xc]
	mov	r0, #0x97
	mov	r1, #0x61
	mov	r2, #0x84
	mov	r3, #0x4
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1, #0x14]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 CirclesAsymmetricSpiral_CreateSprites,.Lfe18-CirclesAsymmetricSpiral_CreateSprites
	.align	2, 0
	.type	 CirclesAsymmetricSpiral_End,function
	.thumb_func
CirclesAsymmetricSpiral_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L118
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L117	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L118+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L117:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L119:
	.align	2, 0
.L118:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesAsymmetricSpiral
.Lfe19:
	.size	 CirclesAsymmetricSpiral_End,.Lfe19-CirclesAsymmetricSpiral_End
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesSymmetricSpiral
	.type	 Phase2Task_FrontierCirclesSymmetricSpiral,function
	.thumb_func
Phase2Task_FrontierCirclesSymmetricSpiral:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L125
	ldr	r2, .L125+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L121:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L121	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	sPhase2_FrontierCirclesSymmetricSpiral_Funcs
	.word	gTasks
.Lfe20:
	.size	 Phase2Task_FrontierCirclesSymmetricSpiral,.Lfe20-Phase2Task_FrontierCirclesSymmetricSpiral
	.align	2, 0
	.type	 CirclesSymmetricSpiral_CreateSprites,function
	.thumb_func
CirclesSymmetricSpiral_CreateSprites:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x10
	mov	r8, r0
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	mov	r6, #0x83
	str	r6, [sp]
	mov	r5, #0x23
	str	r5, [sp, #0x4]
	mov	r4, #0x3
	neg	r4, r4
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	str	r0, [sp, #0xc]
	mov	r0, #0x78
	mov	r1, #0x50
	mov	r3, #0x8
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1, #0x10]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x78
	mov	r1, #0x50
	mov	r2, #0x2c
	mov	r3, #0x8
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1, #0x12]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x2
	str	r0, [sp, #0xc]
	mov	r0, #0x79
	mov	r1, #0x50
	mov	r2, #0xa4
	mov	r3, #0x8
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1, #0x14]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 CirclesSymmetricSpiral_CreateSprites,.Lfe21-CirclesSymmetricSpiral_CreateSprites
	.align	2, 0
	.type	 CirclesSymmetricSpiral_End,function
	.thumb_func
CirclesSymmetricSpiral_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L130
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L129	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L130+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L129:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L131:
	.align	2, 0
.L130:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesSymmetricSpiral
.Lfe22:
	.size	 CirclesSymmetricSpiral_End,.Lfe22-CirclesSymmetricSpiral_End
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesMeetInSeq
	.type	 Phase2Task_FrontierCirclesMeetInSeq,function
	.thumb_func
Phase2Task_FrontierCirclesMeetInSeq:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L137
	ldr	r2, .L137+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L133:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L133	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L138:
	.align	2, 0
.L137:
	.word	sPhase2_FrontierCirclesMeetInSeq_Funcs
	.word	gTasks
.Lfe23:
	.size	 Phase2Task_FrontierCirclesMeetInSeq,.Lfe23-Phase2Task_FrontierCirclesMeetInSeq
	.align	2, 0
	.type	 CirclesMeetInSeq_CreateSprites,function
	.thumb_func
CirclesMeetInSeq_CreateSprites:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0xa
	ldrsh	r2, [r4, r0]
	cmp	r2, #0
	bne	.L140	@cond_branch
	mov	r1, #0x33
	neg	r1, r1
	str	r2, [sp]
	mov	r0, #0x4
	str	r0, [sp, #0x4]
	str	r2, [sp, #0x8]
	mov	r0, #0x78
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x10]
	b	.L141
.L140:
	cmp	r2, #0x10
	bne	.L142	@cond_branch
	mov	r0, #0x7
	neg	r0, r0
	mov	r1, #0x4
	str	r1, [sp]
	sub	r1, r1, #0x8
	str	r1, [sp, #0x4]
	mov	r1, #0x1
	str	r1, [sp, #0x8]
	mov	r1, #0xc1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x12]
	b	.L141
.L142:
	cmp	r2, #0x20
	bne	.L141	@cond_branch
	mov	r0, #0x4
	neg	r0, r0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	str	r0, [sp, #0x8]
	mov	r0, #0xf7
	mov	r1, #0xc1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x14]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L141:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 CirclesMeetInSeq_CreateSprites,.Lfe24-CirclesMeetInSeq_CreateSprites
	.align	2, 0
	.type	 CirclesMeetInSeq_End,function
	.thumb_func
CirclesMeetInSeq_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L147
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L146	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L147+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L146:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L148:
	.align	2, 0
.L147:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesMeetInSeq
.Lfe25:
	.size	 CirclesMeetInSeq_End,.Lfe25-CirclesMeetInSeq_End
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesCrossInSeq
	.type	 Phase2Task_FrontierCirclesCrossInSeq,function
	.thumb_func
Phase2Task_FrontierCirclesCrossInSeq:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L154
	ldr	r2, .L154+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L150:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L150	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	sPhase2_FrontierCirclesCrossInSeq_Funcs
	.word	gTasks
.Lfe26:
	.size	 Phase2Task_FrontierCirclesCrossInSeq,.Lfe26-Phase2Task_FrontierCirclesCrossInSeq
	.align	2, 0
	.type	 CirclesCrossInSeq_CreateSprites,function
	.thumb_func
CirclesCrossInSeq_CreateSprites:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	bne	.L157	@cond_branch
	str	r1, [sp]
	mov	r0, #0x8
	neg	r0, r0
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r0, #0x78
	mov	r1, #0xc5
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x10]
	b	.L158
.L157:
	cmp	r1, #0x10
	bne	.L159	@cond_branch
	mov	r0, #0x8
	neg	r0, r0
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0xf1
	mov	r1, #0x4e
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x12]
	b	.L158
.L159:
	cmp	r1, #0x20
	bne	.L158	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x8
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	mov	r1, #0x2
	str	r1, [sp, #0x8]
	mov	r1, #0x4e
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSlidingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x14]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L158:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 CirclesCrossInSeq_CreateSprites,.Lfe27-CirclesCrossInSeq_CreateSprites
	.align	2, 0
	.type	 CirclesCrossInSeq_End,function
	.thumb_func
CirclesCrossInSeq_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L164
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L163	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L164+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L163:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L165:
	.align	2, 0
.L164:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesCrossInSeq
.Lfe28:
	.size	 CirclesCrossInSeq_End,.Lfe28-CirclesCrossInSeq_End
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesAsymmetricSpiralInSeq
	.type	 Phase2Task_FrontierCirclesAsymmetricSpiralInSeq,function
	.thumb_func
Phase2Task_FrontierCirclesAsymmetricSpiralInSeq:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L171
	ldr	r2, .L171+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L167:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L167	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L172:
	.align	2, 0
.L171:
	.word	sPhase2_FrontierCirclesAsymmetricSpiralInSeq_Funcs
	.word	gTasks
.Lfe29:
	.size	 Phase2Task_FrontierCirclesAsymmetricSpiralInSeq,.Lfe29-Phase2Task_FrontierCirclesAsymmetricSpiralInSeq
	.align	2, 0
	.type	 CirclesAsymmetricSpiralInSeq_CreateSprites,function
	.thumb_func
CirclesAsymmetricSpiralInSeq_CreateSprites:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	bne	.L174	@cond_branch
	mov	r0, #0x80
	str	r0, [sp]
	str	r1, [sp, #0x4]
	sub	r0, r0, #0x84
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	mov	r0, #0x78
	mov	r1, #0x2d
	mov	r2, #0xc
	mov	r3, #0x4
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x10]
	b	.L175
.L174:
	cmp	r1, #0x10
	bne	.L176	@cond_branch
	mov	r0, #0x80
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	sub	r0, r0, #0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x59
	mov	r1, #0x61
	mov	r2, #0xfc
	mov	r3, #0x4
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x12]
	b	.L175
.L176:
	cmp	r1, #0x20
	bne	.L175	@cond_branch
	mov	r0, #0x80
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	sub	r0, r0, #0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	str	r0, [sp, #0xc]
	mov	r0, #0x97
	mov	r1, #0x61
	mov	r2, #0x84
	mov	r3, #0x4
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x14]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L175:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 CirclesAsymmetricSpiralInSeq_CreateSprites,.Lfe30-CirclesAsymmetricSpiralInSeq_CreateSprites
	.align	2, 0
	.type	 CirclesAsymmetricSpiralInSeq_End,function
	.thumb_func
CirclesAsymmetricSpiralInSeq_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L181
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L180	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L181+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L180:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L182:
	.align	2, 0
.L181:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesAsymmetricSpiralInSeq
.Lfe31:
	.size	 CirclesAsymmetricSpiralInSeq_End,.Lfe31-CirclesAsymmetricSpiralInSeq_End
	.align	2, 0
	.globl	Phase2Task_FrontierCirclesSymmetricSpiralInSeq
	.type	 Phase2Task_FrontierCirclesSymmetricSpiralInSeq,function
	.thumb_func
Phase2Task_FrontierCirclesSymmetricSpiralInSeq:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L188
	ldr	r2, .L188+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L184:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L184	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L189:
	.align	2, 0
.L188:
	.word	sPhase2_FrontierCirclesSymmetricSpiralInSeq_Funcs
	.word	gTasks
.Lfe32:
	.size	 Phase2Task_FrontierCirclesSymmetricSpiralInSeq,.Lfe32-Phase2Task_FrontierCirclesSymmetricSpiralInSeq
	.align	2, 0
	.type	 CirclesSymmetricSpiralInSeq_CreateSprites,function
	.thumb_func
CirclesSymmetricSpiralInSeq_CreateSprites:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	bne	.L191	@cond_branch
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	mov	r0, #0x83
	str	r0, [sp]
	mov	r0, #0x23
	str	r0, [sp, #0x4]
	sub	r0, r0, #0x26
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	mov	r0, #0x78
	mov	r1, #0x50
	mov	r3, #0x8
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x10]
	b	.L192
.L191:
	cmp	r1, #0x10
	bne	.L193	@cond_branch
	mov	r0, #0x83
	str	r0, [sp]
	mov	r0, #0x23
	str	r0, [sp, #0x4]
	sub	r0, r0, #0x26
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x78
	mov	r1, #0x50
	mov	r2, #0x2c
	mov	r3, #0x8
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x12]
	b	.L192
.L193:
	cmp	r1, #0x20
	bne	.L192	@cond_branch
	mov	r0, #0x83
	str	r0, [sp]
	mov	r0, #0x23
	str	r0, [sp, #0x4]
	sub	r0, r0, #0x26
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	str	r0, [sp, #0xc]
	mov	r0, #0x79
	mov	r1, #0x50
	mov	r2, #0xa4
	mov	r3, #0x8
	bl	CreateSpiralingLogoCircleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x14]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L192:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 CirclesSymmetricSpiralInSeq_CreateSprites,.Lfe33-CirclesSymmetricSpiralInSeq_CreateSprites
	.align	2, 0
	.type	 CirclesSymmetricSpiralInSeq_End,function
	.thumb_func
CirclesSymmetricSpiralInSeq_End:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L198
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L197	@cond_branch
	add	r0, r2, #0
	bl	DestroyLogoCirclesGfx
	ldr	r0, .L198+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L197:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L199:
	.align	2, 0
.L198:
	.word	gPaletteFade
	.word	Phase2Task_FrontierCirclesSymmetricSpiralInSeq
.Lfe34:
	.size	 CirclesSymmetricSpiralInSeq_End,.Lfe34-CirclesSymmetricSpiralInSeq_End
.text
	.align	2, 0

