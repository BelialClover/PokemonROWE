@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 sFlashLevelPixelRadii,object
sFlashLevelPixelRadii:
	.short	0xc8
	.short	0x48
	.short	0x40
	.short	0x38
	.short	0x30
	.short	0x28
	.short	0x20
	.short	0x18
	.short	0x0
	.size	 sFlashLevelPixelRadii,18
	.globl	gMaxFlashLevel
	.align	2, 0
	.type	 gMaxFlashLevel,object
	.size	 gMaxFlashLevel,4
gMaxFlashLevel:
	.word	0x8
	.globl	sFlashEffectParams
	.align	2, 0
	.type	 sFlashEffectParams,object
	.size	 sFlashEffectParams,12
sFlashEffectParams:
	.word	0x4000040
	.word	-0x5d9fffff
	.byte	0x1
	.space	3
.text
	.align	2, 0
	.type	 FillPalBufferWhite,function
	.thumb_func
FillPalBufferWhite:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L3
	str	r0, [sp]
	ldr	r1, .L3+0x4
	ldr	r2, .L3+0x8
	mov	r0, sp
	bl	CpuFastSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x7fff7fff
	.word	gPlttBufferFaded
	.word	0x1000100
.Lfe1:
	.size	 FillPalBufferWhite,.Lfe1-FillPalBufferWhite
	.align	2, 0
	.type	 FillPalBufferBlack,function
	.thumb_func
FillPalBufferBlack:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, .L6
	ldr	r2, .L6+0x4
	mov	r0, sp
	bl	CpuFastSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gPlttBufferFaded
	.word	0x1000100
.Lfe2:
	.size	 FillPalBufferBlack,.Lfe2-FillPalBufferBlack
	.align	2, 0
	.globl	WarpFadeInScreen
	.type	 WarpFadeInScreen,function
	.thumb_func
WarpFadeInScreen:
	push	{r4, lr}
	bl	GetLastUsedWarpMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCurrentMapType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetMapPairFadeFromType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L10	@cond_branch
	cmp	r0, #0x1
	beq	.L11	@cond_branch
	b	.L9
.L10:
	bl	FillPalBufferBlack
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FadeScreen
	b	.L9
.L11:
	bl	FillPalBufferWhite
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FadeScreen
.L9:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 WarpFadeInScreen,.Lfe3-WarpFadeInScreen
	.align	2, 0
	.globl	FadeInFromWhite
	.type	 FadeInFromWhite,function
	.thumb_func
FadeInFromWhite:
	push	{lr}
	bl	FillPalBufferWhite
	mov	r0, #0x2
	mov	r1, #0x8
	bl	FadeScreen
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 FadeInFromWhite,.Lfe4-FadeInFromWhite
	.align	2, 0
	.globl	FadeInFromBlack
	.type	 FadeInFromBlack,function
	.thumb_func
FadeInFromBlack:
	push	{lr}
	bl	FillPalBufferBlack
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FadeScreen
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 FadeInFromBlack,.Lfe5-FadeInFromBlack
	.align	2, 0
	.globl	WarpFadeOutScreen
	.type	 WarpFadeOutScreen,function
	.thumb_func
WarpFadeOutScreen:
	push	{r4, lr}
	bl	GetCurrentMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetDestinationWarpMapHeader
	ldrb	r1, [r0, #0x17]
	add	r0, r4, #0
	bl	GetMapPairFadeToType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L18	@cond_branch
	cmp	r0, #0x1
	beq	.L19	@cond_branch
	b	.L17
.L18:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	b	.L17
.L19:
	mov	r0, #0x3
	mov	r1, #0x0
	bl	FadeScreen
.L17:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 WarpFadeOutScreen,.Lfe6-WarpFadeOutScreen
	.align	2, 0
	.type	 SetPlayerVisibility,function
	.thumb_func
SetPlayerVisibility:
	push	{lr}
	lsl	r0, r0, #0x18
	mov	r1, #0x0
	cmp	r0, #0
	bne	.L23	@cond_branch
	mov	r1, #0x1
.L23:
	add	r0, r1, #0
	bl	SetPlayerInvisibility
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 SetPlayerVisibility,.Lfe7-SetPlayerVisibility
	.align	2, 0
	.type	 Task_WaitForUnionRoomFade,function
	.thumb_func
Task_WaitForUnionRoomFade:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	WaitForWeatherFadeIn
	cmp	r0, #0x1
	bne	.L25	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L25:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 Task_WaitForUnionRoomFade,.Lfe8-Task_WaitForUnionRoomFade
	.align	2, 0
	.globl	FieldCB_ContinueScriptUnionRoom
	.type	 FieldCB_ContinueScriptUnionRoom,function
	.thumb_func
FieldCB_ContinueScriptUnionRoom:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L27
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	Task_WaitForUnionRoomFade
.Lfe9:
	.size	 FieldCB_ContinueScriptUnionRoom,.Lfe9-FieldCB_ContinueScriptUnionRoom
	.align	2, 0
	.type	 Task_WaitForFadeAndEnableScriptCtx,function
	.thumb_func
Task_WaitForFadeAndEnableScriptCtx:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	WaitForWeatherFadeIn
	cmp	r0, #0x1
	bne	.L30	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L30:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 Task_WaitForFadeAndEnableScriptCtx,.Lfe10-Task_WaitForFadeAndEnableScriptCtx
	.align	2, 0
	.globl	FieldCB_ContinueScriptHandleMusic
	.type	 FieldCB_ContinueScriptHandleMusic,function
	.thumb_func
FieldCB_ContinueScriptHandleMusic:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L32
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	Task_WaitForFadeAndEnableScriptCtx
.Lfe11:
	.size	 FieldCB_ContinueScriptHandleMusic,.Lfe11-FieldCB_ContinueScriptHandleMusic
	.align	2, 0
	.globl	FieldCB_ContinueScript
	.type	 FieldCB_ContinueScript,function
	.thumb_func
FieldCB_ContinueScript:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FadeInFromBlack
	ldr	r0, .L35
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	Task_WaitForFadeAndEnableScriptCtx
.Lfe12:
	.size	 FieldCB_ContinueScript,.Lfe12-FieldCB_ContinueScript
	.align	2, 0
	.type	 Task_ReturnToFieldCableLink,function
	.thumb_func
Task_ReturnToFieldCableLink:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r2, .L48
	add	r4, r0, r2
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L40	@cond_branch
	cmp	r0, #0x1
	bgt	.L46	@cond_branch
	cmp	r0, #0
	beq	.L39	@cond_branch
	b	.L38
.L49:
	.align	2, 0
.L48:
	.word	gTasks
.L46:
	cmp	r0, #0x2
	beq	.L42	@cond_branch
	b	.L38
.L39:
	bl	CreateTask_ReestablishCableClubLink
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	b	.L47
.L40:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L38	@cond_branch
	bl	WarpFadeInScreen
.L47:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L38
.L42:
	bl	WaitForWeatherFadeIn
	cmp	r0, #0x1
	bne	.L38	@cond_branch
	bl	ScriptContext2_Disable
	add	r0, r5, #0
	bl	DestroyTask
.L38:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 Task_ReturnToFieldCableLink,.Lfe13-Task_ReturnToFieldCableLink
	.align	2, 0
	.globl	FieldCB_ReturnToFieldCableLink
	.type	 FieldCB_ReturnToFieldCableLink,function
	.thumb_func
FieldCB_ReturnToFieldCableLink:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	Overworld_PlaySpecialMapMusic
	bl	FillPalBufferBlack
	ldr	r0, .L51
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	Task_ReturnToFieldCableLink
.Lfe14:
	.size	 FieldCB_ReturnToFieldCableLink,.Lfe14-FieldCB_ReturnToFieldCableLink
	.align	2, 0
	.type	 Task_ReturnToFieldWirelessLink,function
	.thumb_func
Task_ReturnToFieldWirelessLink:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L66
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L56	@cond_branch
	cmp	r0, #0x1
	bgt	.L64	@cond_branch
	cmp	r0, #0
	beq	.L55	@cond_branch
	b	.L54
.L67:
	.align	2, 0
.L66:
	.word	gTasks
.L64:
	cmp	r0, #0x2
	beq	.L60	@cond_branch
	b	.L54
.L55:
	bl	SetLinkStandbyCallback
	b	.L65
.L56:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L57	@cond_branch
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	mov	r1, #0xe1
	lsl	r1, r1, #0x13
	cmp	r0, r1
	ble	.L54	@cond_branch
	mov	r0, #0xc0
	lsl	r0, r0, #0x7
	bl	GetLinkmanErrorParams
	b	.L54
.L57:
	bl	WarpFadeInScreen
.L65:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L54
.L60:
	bl	WaitForWeatherFadeIn
	cmp	r0, #0x1
	bne	.L54	@cond_branch
	bl	StartSendingKeysToLink
	bl	ScriptContext2_Disable
	add	r0, r5, #0
	bl	DestroyTask
.L54:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 Task_ReturnToFieldWirelessLink,.Lfe15-Task_ReturnToFieldWirelessLink
	.align	2, 0
	.globl	Task_ReturnToFieldRecordMixing
	.type	 Task_ReturnToFieldRecordMixing,function
	.thumb_func
Task_ReturnToFieldRecordMixing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L78
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L71	@cond_branch
	cmp	r0, #0x1
	bgt	.L76	@cond_branch
	cmp	r0, #0
	beq	.L70	@cond_branch
	b	.L69
.L79:
	.align	2, 0
.L78:
	.word	gTasks
.L76:
	cmp	r0, #0x2
	beq	.L73	@cond_branch
	b	.L69
.L70:
	bl	SetLinkStandbyCallback
	b	.L77
.L71:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L69	@cond_branch
.L77:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L69
.L73:
	bl	StartSendingKeysToLink
	bl	ResetAllMultiplayerState
	bl	ScriptContext2_Disable
	add	r0, r5, #0
	bl	DestroyTask
.L69:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 Task_ReturnToFieldRecordMixing,.Lfe16-Task_ReturnToFieldRecordMixing
	.align	2, 0
	.globl	FieldCB_ReturnToFieldWirelessLink
	.type	 FieldCB_ReturnToFieldWirelessLink,function
	.thumb_func
FieldCB_ReturnToFieldWirelessLink:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	Overworld_PlaySpecialMapMusic
	bl	FillPalBufferBlack
	ldr	r0, .L81
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L82:
	.align	2, 0
.L81:
	.word	Task_ReturnToFieldWirelessLink
.Lfe17:
	.size	 FieldCB_ReturnToFieldWirelessLink,.Lfe17-FieldCB_ReturnToFieldWirelessLink
	.align	2, 0
	.type	 SetUpWarpExitTask,function
	.thumb_func
SetUpWarpExitTask:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L84	@cond_branch
	ldr	r1, .L88
	b	.L85
.L89:
	.align	2, 0
.L88:
	.word	Task_ExitDoor
.L84:
	add	r0, r4, #0
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L90
	cmp	r0, #0x1
	bne	.L85	@cond_branch
	ldr	r1, .L90+0x4
.L85:
	add	r0, r1, #0
	mov	r1, #0xa
	bl	CreateTask
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L91:
	.align	2, 0
.L90:
	.word	Task_ExitNonDoor
	.word	Task_ExitNonAnimDoor
.Lfe18:
	.size	 SetUpWarpExitTask,.Lfe18-SetUpWarpExitTask
	.align	2, 0
	.globl	FieldCB_DefaultWarpExit
	.type	 FieldCB_DefaultWarpExit,function
	.thumb_func
FieldCB_DefaultWarpExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	SetUpWarpExitTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 FieldCB_DefaultWarpExit,.Lfe19-FieldCB_DefaultWarpExit
	.align	2, 0
	.globl	FieldCB_WarpExitFadeFromWhite
	.type	 FieldCB_WarpExitFadeFromWhite,function
	.thumb_func
FieldCB_WarpExitFadeFromWhite:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromWhite
	bl	SetUpWarpExitTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 FieldCB_WarpExitFadeFromWhite,.Lfe20-FieldCB_WarpExitFadeFromWhite
	.align	2, 0
	.globl	FieldCB_WarpExitFadeFromBlack
	.type	 FieldCB_WarpExitFadeFromBlack,function
	.thumb_func
FieldCB_WarpExitFadeFromBlack:
	push	{lr}
	bl	OnTrainerHillEReaderChallengeFloor
	cmp	r0, #0
	bne	.L95	@cond_branch
	bl	Overworld_PlaySpecialMapMusic
.L95:
	bl	FadeInFromBlack
	bl	SetUpWarpExitTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 FieldCB_WarpExitFadeFromBlack,.Lfe21-FieldCB_WarpExitFadeFromBlack
	.align	2, 0
	.type	 FieldCB_TeleportTileWarpExit,function
	.thumb_func
FieldCB_TeleportTileWarpExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	mov	r0, #0x2e
	bl	PlaySE
	ldr	r0, .L97
	mov	r1, #0xa
	bl	CreateTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L98:
	.align	2, 0
.L97:
	.word	Task_TeleportTileWarpExit
.Lfe22:
	.size	 FieldCB_TeleportTileWarpExit,.Lfe22-FieldCB_TeleportTileWarpExit
	.align	2, 0
	.type	 FieldCB_MossdeepGymWarpExit,function
	.thumb_func
FieldCB_MossdeepGymWarpExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	mov	r0, #0x2e
	bl	PlaySE
	ldr	r0, .L100
	mov	r1, #0xa
	bl	CreateTask
	bl	ScriptContext2_Enable
	mov	r0, #0xe
	bl	SetObjectEventLoadFlag
	pop	{r0}
	bx	r0
.L101:
	.align	2, 0
.L100:
	.word	Task_ExitNonDoor
.Lfe23:
	.size	 FieldCB_MossdeepGymWarpExit,.Lfe23-FieldCB_MossdeepGymWarpExit
	.align	2, 0
	.type	 Task_ExitDoor,function
	.thumb_func
Task_ExitDoor:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L115
	add	r5, r0, r1
	add	r6, r5, #0
	add	r6, r6, #0xc
	add	r7, r5, #0
	add	r7, r7, #0xe
	mov	r2, #0x8
	ldrsh	r0, [r5, r2]
	add	r2, r1, #0
	cmp	r0, #0x4
	bhi	.L103	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L115+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L116:
	.align	2, 0
.L115:
	.word	gTasks
	.word	.L113
	.align	2, 0
	.align	2, 0
.L113:
	.word	.L104
	.word	.L105
	.word	.L107
	.word	.L109
	.word	.L112
.L104:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldSetDoorOpened
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L103
.L105:
	bl	WaitForWeatherFadeIn
	cmp	r0, #0
	beq	.L103	@cond_branch
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L117
	add	r0, r0, r1
	mov	r1, #0x8
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L103
.L118:
	.align	2, 0
.L117:
	.word	gObjectEvents
.L107:
	bl	IsPlayerStandingStill
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L103	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldAnimateDoorClose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L119
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L103
.L120:
	.align	2, 0
.L119:
	.word	gObjectEvents
.L109:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L111	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L103	@cond_branch
.L111:
	bl	UnfreezeObjectEvents
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	b	.L103
.L112:
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
.L103:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 Task_ExitDoor,.Lfe24-Task_ExitDoor
	.align	2, 0
	.type	 Task_ExitNonAnimDoor,function
	.thumb_func
Task_ExitNonAnimDoor:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L132
	add	r5, r0, r1
	add	r6, r5, #0
	add	r6, r6, #0xc
	add	r7, r5, #0
	add	r7, r7, #0xe
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L124	@cond_branch
	cmp	r0, #0x1
	bgt	.L131	@cond_branch
	cmp	r0, #0
	beq	.L123	@cond_branch
	b	.L122
.L133:
	.align	2, 0
.L132:
	.word	gTasks
.L131:
	cmp	r0, #0x2
	beq	.L126	@cond_branch
	cmp	r0, #0x3
	beq	.L128	@cond_branch
	b	.L122
.L123:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L122
.L124:
	bl	WaitForWeatherFadeIn
	cmp	r0, #0
	beq	.L122	@cond_branch
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L134
	add	r4, r4, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L122
.L135:
	.align	2, 0
.L134:
	.word	gObjectEvents
.L126:
	bl	IsPlayerStandingStill
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L122	@cond_branch
	bl	UnfreezeObjectEvents
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L122
.L128:
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
.L122:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 Task_ExitNonAnimDoor,.Lfe25-Task_ExitNonAnimDoor
	.align	2, 0
	.type	 Task_ExitNonDoor,function
	.thumb_func
Task_ExitNonDoor:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L143
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L138	@cond_branch
	cmp	r0, #0x1
	beq	.L139	@cond_branch
	b	.L137
.L144:
	.align	2, 0
.L143:
	.word	gTasks
.L138:
	bl	FreezeObjectEvents
	bl	ScriptContext2_Enable
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L137
.L139:
	bl	WaitForWeatherFadeIn
	cmp	r0, #0
	beq	.L137	@cond_branch
	bl	UnfreezeObjectEvents
	bl	ScriptContext2_Disable
	add	r0, r5, #0
	bl	DestroyTask
.L137:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 Task_ExitNonDoor,.Lfe26-Task_ExitNonDoor
	.align	2, 0
	.type	 Task_WaitForFadeShowStartMenu,function
	.thumb_func
Task_WaitForFadeShowStartMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	WaitForWeatherFadeIn
	cmp	r0, #0x1
	bne	.L146	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L147
	mov	r1, #0x50
	bl	CreateTask
.L146:
	pop	{r4}
	pop	{r0}
	bx	r0
.L148:
	.align	2, 0
.L147:
	.word	Task_ShowStartMenu
.Lfe27:
	.size	 Task_WaitForFadeShowStartMenu,.Lfe27-Task_WaitForFadeShowStartMenu
	.align	2, 0
	.globl	ReturnToFieldOpenStartMenu
	.type	 ReturnToFieldOpenStartMenu,function
	.thumb_func
ReturnToFieldOpenStartMenu:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L150
	mov	r1, #0x50
	bl	CreateTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L151:
	.align	2, 0
.L150:
	.word	Task_WaitForFadeShowStartMenu
.Lfe28:
	.size	 ReturnToFieldOpenStartMenu,.Lfe28-ReturnToFieldOpenStartMenu
	.align	2, 0
	.globl	FieldCB_ReturnToFieldOpenStartMenu
	.type	 FieldCB_ReturnToFieldOpenStartMenu,function
	.thumb_func
FieldCB_ReturnToFieldOpenStartMenu:
	push	{lr}
	bl	ShowReturnToFieldStartMenu
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 FieldCB_ReturnToFieldOpenStartMenu,.Lfe29-FieldCB_ReturnToFieldOpenStartMenu
	.align	2, 0
	.type	 task_mpl_807E3C8,function
	.thumb_func
task_mpl_807E3C8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	WaitForWeatherFadeIn
	cmp	r0, #0x1
	bne	.L154	@cond_branch
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	bl	ScriptUnfreezeObjectEvents
.L154:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 task_mpl_807E3C8,.Lfe30-task_mpl_807E3C8
	.align	2, 0
	.globl	sub_80AF6D4
	.type	 sub_80AF6D4,function
	.thumb_func
sub_80AF6D4:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FadeInFromBlack
	ldr	r0, .L156
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L157:
	.align	2, 0
.L156:
	.word	task_mpl_807E3C8
.Lfe31:
	.size	 sub_80AF6D4,.Lfe31-sub_80AF6D4
	.align	2, 0
	.globl	sub_80AF6F0
	.type	 sub_80AF6F0,function
	.thumb_func
sub_80AF6F0:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L159
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L160:
	.align	2, 0
.L159:
	.word	task_mpl_807E3C8
.Lfe32:
	.size	 sub_80AF6F0,.Lfe32-sub_80AF6F0
	.align	2, 0
	.type	 PaletteFadeActive,function
	.thumb_func
PaletteFadeActive:
	ldr	r0, .L162
	ldrb	r0, [r0, #0x7]
	lsr	r0, r0, #0x7
	bx	lr
.L163:
	.align	2, 0
.L162:
	.word	gPaletteFade
.Lfe33:
	.size	 PaletteFadeActive,.Lfe33-PaletteFadeActive
	.align	2, 0
	.type	 WaitForWeatherFadeIn,function
	.thumb_func
WaitForWeatherFadeIn:
	push	{lr}
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L165	@cond_branch
	mov	r0, #0x0
	b	.L167
.L165:
	mov	r0, #0x1
.L167:
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 WaitForWeatherFadeIn,.Lfe34-WaitForWeatherFadeIn
	.align	2, 0
	.globl	DoWarp
	.type	 DoWarp,function
	.thumb_func
DoWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	mov	r0, #0x9
	bl	PlaySE
	ldr	r0, .L169
	ldr	r1, .L169+0x4
	str	r1, [r0]
	ldr	r0, .L169+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_WarpAndLoadMap
.Lfe35:
	.size	 DoWarp,.Lfe35-DoWarp
	.align	2, 0
	.globl	DoDiveWarp
	.type	 DoDiveWarp,function
	.thumb_func
DoDiveWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	ldr	r0, .L172
	ldr	r1, .L172+0x4
	str	r1, [r0]
	ldr	r0, .L172+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L173:
	.align	2, 0
.L172:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_WarpAndLoadMap
.Lfe36:
	.size	 DoDiveWarp,.Lfe36-DoDiveWarp
	.align	2, 0
	.globl	DoSootopolisLegendWarp
	.type	 DoSootopolisLegendWarp,function
	.thumb_func
DoSootopolisLegendWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	TryFadeOutOldMapMusic
	mov	r0, #0x3
	mov	r1, #0x8
	bl	FadeScreen
	bl	PlayRainStoppingSoundEffect
	ldr	r0, .L175
	ldr	r1, .L175+0x4
	str	r1, [r0]
	ldr	r0, .L175+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	gFieldCallback
	.word	FieldCB_WarpExitFadeFromWhite
	.word	Task_WarpAndLoadMap
.Lfe37:
	.size	 DoSootopolisLegendWarp,.Lfe37-DoSootopolisLegendWarp
	.align	2, 0
	.globl	DoDoorWarp
	.type	 DoDoorWarp,function
	.thumb_func
DoDoorWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r0, .L178
	ldr	r1, .L178+0x4
	str	r1, [r0]
	ldr	r0, .L178+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L179:
	.align	2, 0
.L178:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_DoDoorWarp
.Lfe38:
	.size	 DoDoorWarp,.Lfe38-DoDoorWarp
	.align	2, 0
	.globl	DoFallWarp
	.type	 DoFallWarp,function
	.thumb_func
DoFallWarp:
	push	{lr}
	bl	DoDiveWarp
	ldr	r1, .L181
	ldr	r0, .L181+0x4
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L182:
	.align	2, 0
.L181:
	.word	gFieldCallback
	.word	FieldCB_FallWarpExit
.Lfe39:
	.size	 DoFallWarp,.Lfe39-DoFallWarp
	.align	2, 0
	.globl	DoEscalatorWarp
	.type	 DoEscalatorWarp,function
	.thumb_func
DoEscalatorWarp:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	add	r0, r4, #0
	mov	r1, #0xa
	bl	StartEscalatorWarp
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 DoEscalatorWarp,.Lfe40-DoEscalatorWarp
	.align	2, 0
	.globl	DoLavaridgeGymB1FWarp
	.type	 DoLavaridgeGymB1FWarp,function
	.thumb_func
DoLavaridgeGymB1FWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	mov	r0, #0xa
	bl	StartLavaridgeGymB1FWarp
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 DoLavaridgeGymB1FWarp,.Lfe41-DoLavaridgeGymB1FWarp
	.align	2, 0
	.globl	DoLavaridgeGym1FWarp
	.type	 DoLavaridgeGym1FWarp,function
	.thumb_func
DoLavaridgeGym1FWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	mov	r0, #0xa
	bl	StartLavaridgeGym1FWarp
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 DoLavaridgeGym1FWarp,.Lfe42-DoLavaridgeGym1FWarp
	.align	2, 0
	.globl	DoTeleportTileWarp
	.type	 DoTeleportTileWarp,function
	.thumb_func
DoTeleportTileWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	mov	r0, #0x2d
	bl	PlaySE
	ldr	r0, .L187
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L187+0x4
	ldr	r0, .L187+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L188:
	.align	2, 0
.L187:
	.word	Task_WarpAndLoadMap
	.word	gFieldCallback
	.word	FieldCB_TeleportTileWarpExit
.Lfe43:
	.size	 DoTeleportTileWarp,.Lfe43-DoTeleportTileWarp
	.align	2, 0
	.globl	DoMossdeepGymWarp
	.type	 DoMossdeepGymWarp,function
	.thumb_func
DoMossdeepGymWarp:
	push	{lr}
	mov	r0, #0x1
	bl	SetObjectEventLoadFlag
	bl	ScriptContext2_Enable
	bl	SaveObjectEvents
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	mov	r0, #0x2d
	bl	PlaySE
	ldr	r0, .L190
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L190+0x4
	ldr	r0, .L190+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L191:
	.align	2, 0
.L190:
	.word	Task_WarpAndLoadMap
	.word	gFieldCallback
	.word	FieldCB_MossdeepGymWarpExit
.Lfe44:
	.size	 DoMossdeepGymWarp,.Lfe44-DoMossdeepGymWarp
	.align	2, 0
	.globl	DoPortholeWarp
	.type	 DoPortholeWarp,function
	.thumb_func
DoPortholeWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	WarpFadeOutScreen
	ldr	r0, .L193
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L193+0x4
	ldr	r0, .L193+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L194:
	.align	2, 0
.L193:
	.word	Task_WarpAndLoadMap
	.word	gFieldCallback
	.word	FieldCB_ShowPortholeView
.Lfe45:
	.size	 DoPortholeWarp,.Lfe45-DoPortholeWarp
	.align	2, 0
	.type	 Task_DoCableClubWarp,function
	.thumb_func
Task_DoCableClubWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L205
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L198	@cond_branch
	cmp	r0, #0x1
	bgt	.L203	@cond_branch
	cmp	r0, #0
	beq	.L197	@cond_branch
	b	.L196
.L206:
	.align	2, 0
.L205:
	.word	gTasks
.L203:
	cmp	r0, #0x2
	beq	.L200	@cond_branch
	b	.L196
.L197:
	bl	ScriptContext2_Enable
	b	.L204
.L198:
	bl	PaletteFadeActive
	cmp	r0, #0
	bne	.L196	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L196	@cond_branch
.L204:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L196
.L200:
	bl	WarpIntoMap
	ldr	r0, .L207
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L196:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L208:
	.align	2, 0
.L207:
	.word	CB2_ReturnToFieldCableClub
.Lfe46:
	.size	 Task_DoCableClubWarp,.Lfe46-Task_DoCableClubWarp
	.align	2, 0
	.globl	DoCableClubWarp
	.type	 DoCableClubWarp,function
	.thumb_func
DoCableClubWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	mov	r0, #0x9
	bl	PlaySE
	ldr	r0, .L210
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L211:
	.align	2, 0
.L210:
	.word	Task_DoCableClubWarp
.Lfe47:
	.size	 DoCableClubWarp,.Lfe47-DoCableClubWarp
	.align	2, 0
	.type	 Task_ReturnToWorldFromLinkRoom,function
	.thumb_func
Task_ReturnToWorldFromLinkRoom:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L223
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L215	@cond_branch
	cmp	r0, #0x1
	bgt	.L221	@cond_branch
	cmp	r0, #0
	beq	.L214	@cond_branch
	b	.L213
.L224:
	.align	2, 0
.L223:
	.word	gTasks+0x8
.L221:
	cmp	r0, #0x2
	beq	.L217	@cond_branch
	b	.L213
.L214:
	bl	ClearLinkCallback_2
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	TryFadeOutOldMapMusic
	mov	r0, #0x9
	bl	PlaySE
	b	.L222
.L215:
	bl	PaletteFadeActive
	cmp	r0, #0
	bne	.L213	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L213	@cond_branch
	bl	SetCloseLinkCallback
.L222:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L213
.L217:
	ldr	r0, .L225
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L213	@cond_branch
	bl	WarpIntoMap
	ldr	r0, .L225+0x4
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L213:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L226:
	.align	2, 0
.L225:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_LoadMap
.Lfe48:
	.size	 Task_ReturnToWorldFromLinkRoom,.Lfe48-Task_ReturnToWorldFromLinkRoom
	.align	2, 0
	.globl	ReturnFromLinkRoom
	.type	 ReturnFromLinkRoom,function
	.thumb_func
ReturnFromLinkRoom:
	push	{lr}
	ldr	r0, .L228
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	Task_ReturnToWorldFromLinkRoom
.Lfe49:
	.size	 ReturnFromLinkRoom,.Lfe49-ReturnFromLinkRoom
	.align	2, 0
	.type	 Task_WarpAndLoadMap,function
	.thumb_func
Task_WarpAndLoadMap:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L242
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r5, [r4, r0]
	cmp	r5, #0x1
	beq	.L233	@cond_branch
	cmp	r5, #0x1
	bgt	.L240	@cond_branch
	cmp	r5, #0
	beq	.L232	@cond_branch
	b	.L231
.L243:
	.align	2, 0
.L242:
	.word	gTasks
.L240:
	cmp	r5, #0x2
	beq	.L237	@cond_branch
	b	.L231
.L232:
	bl	FreezeObjectEvents
	bl	ScriptContext2_Enable
	b	.L241
.L233:
	bl	PaletteFadeActive
	cmp	r0, #0
	bne	.L231	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L235	@cond_branch
	bl	ClearMirageTowerPulseBlendEffect
	strh	r5, [r4, #0xa]
.L235:
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L231	@cond_branch
.L241:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L231
.L237:
	bl	WarpIntoMap
	ldr	r0, .L244
	bl	SetMainCallback2
	add	r0, r6, #0
	bl	DestroyTask
.L231:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L245:
	.align	2, 0
.L244:
	.word	CB2_LoadMap
.Lfe50:
	.size	 Task_WarpAndLoadMap,.Lfe50-Task_WarpAndLoadMap
	.align	2, 0
	.type	 Task_DoDoorWarp,function
	.thumb_func
Task_DoDoorWarp:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L260
	add	r5, r1, r0
	add	r4, r5, #0
	add	r4, r4, #0xc
	add	r6, r5, #0
	add	r6, r6, #0xe
	mov	r2, #0x8
	ldrsh	r1, [r5, r2]
	add	r2, r0, #0
	cmp	r1, #0x4
	bls	.LCB1844
	b	.L247	@long jump
.LCB1844:
	lsl	r0, r1, #0x2
	ldr	r1, .L260+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L261:
	.align	2, 0
.L260:
	.word	gTasks
	.word	.L258
	.align	2, 0
	.align	2, 0
.L258:
	.word	.L248
	.word	.L249
	.word	.L252
	.word	.L254
	.word	.L257
.L248:
	bl	FreezeObjectEvents
	add	r0, r4, #0
	add	r1, r6, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	GetDoorSoundEffect
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	PlaySE
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	FieldAnimateDoorOpen
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L247
.L249:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L251	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L247	@cond_branch
.L251:
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L262
	add	r0, r0, r4
	bl	ObjectEventClearHeldMovementIfActive
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x9
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L247
.L263:
	.align	2, 0
.L262:
	.word	gObjectEvents
.L252:
	bl	IsPlayerStandingStill
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L247	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	FieldAnimateDoorClose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L264
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	mov	r0, #0x0
	bl	SetPlayerVisibility
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L247
.L265:
	.align	2, 0
.L264:
	.word	gObjectEvents
.L254:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L256	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L247	@cond_branch
.L256:
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	b	.L247
.L257:
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	ldr	r0, .L266
	str	r0, [r5]
.L247:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L267:
	.align	2, 0
.L266:
	.word	Task_WarpAndLoadMap
.Lfe51:
	.size	 Task_DoDoorWarp,.Lfe51-Task_DoDoorWarp
	.align	2, 0
	.type	 Task_DoContestHallWarp,function
	.thumb_func
Task_DoContestHallWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L278
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L271	@cond_branch
	cmp	r0, #0x1
	bgt	.L276	@cond_branch
	cmp	r0, #0
	beq	.L270	@cond_branch
	b	.L269
.L279:
	.align	2, 0
.L278:
	.word	gTasks
.L276:
	cmp	r0, #0x2
	beq	.L273	@cond_branch
	b	.L269
.L270:
	bl	FreezeObjectEvents
	bl	ScriptContext2_Enable
	b	.L277
.L271:
	bl	PaletteFadeActive
	cmp	r0, #0
	bne	.L269	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L269	@cond_branch
.L277:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L269
.L273:
	bl	WarpIntoMap
	ldr	r0, .L280
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L269:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L281:
	.align	2, 0
.L280:
	.word	CB2_ReturnToFieldContestHall
.Lfe52:
	.size	 Task_DoContestHallWarp,.Lfe52-Task_DoContestHallWarp
	.align	2, 0
	.globl	DoContestHallWarp
	.type	 DoContestHallWarp,function
	.thumb_func
DoContestHallWarp:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	mov	r0, #0x9
	bl	PlaySE
	ldr	r0, .L283
	ldr	r1, .L283+0x4
	str	r1, [r0]
	ldr	r0, .L283+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L284:
	.align	2, 0
.L283:
	.word	gFieldCallback
	.word	FieldCB_WarpExitFadeFromBlack
	.word	Task_DoContestHallWarp
.Lfe53:
	.size	 DoContestHallWarp,.Lfe53-DoContestHallWarp
	.align	2, 0
	.type	 SetFlashScanlineEffectWindowBoundary,function
	.thumb_func
SetFlashScanlineEffectWindowBoundary:
	push	{lr}
	cmp	r1, #0xa0
	bhi	.L286	@cond_branch
	cmp	r2, #0
	bge	.L287	@cond_branch
	mov	r2, #0x0
.L287:
	cmp	r2, #0xff
	ble	.L288	@cond_branch
	mov	r2, #0xff
.L288:
	cmp	r3, #0
	bge	.L289	@cond_branch
	mov	r3, #0x0
.L289:
	cmp	r3, #0xff
	ble	.L290	@cond_branch
	mov	r3, #0xff
.L290:
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	lsl	r0, r2, #0x8
	orr	r0, r0, r3
	strh	r0, [r1]
.L286:
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 SetFlashScanlineEffectWindowBoundary,.Lfe54-SetFlashScanlineEffectWindowBoundary
	.align	2, 0
	.type	 SetFlashScanlineEffectWindowBoundaries,function
	.thumb_func
SetFlashScanlineEffectWindowBoundaries:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	str	r0, [sp]
	mov	sl, r1
	mov	r9, r2
	add	r6, r3, #0
	mov	r8, r6
	mov	r7, #0x0
	cmp	r6, #0
	blt	.L293	@cond_branch
.L294:
	mov	r0, r9
	sub	r1, r0, r7
	mov	r0, sl
	sub	r4, r0, r6
	add	r5, r0, r6
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetFlashScanlineEffectWindowBoundary
	mov	r0, r9
	add	r1, r0, r7
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetFlashScanlineEffectWindowBoundary
	mov	r0, r9
	sub	r1, r0, r6
	mov	r0, sl
	sub	r4, r0, r7
	add	r5, r0, r7
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetFlashScanlineEffectWindowBoundary
	mov	r0, r9
	add	r1, r0, r6
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetFlashScanlineEffectWindowBoundary
	mov	r1, r8
	add	r1, r1, #0x1
	lsl	r0, r7, #0x1
	sub	r1, r1, r0
	mov	r8, r1
	add	r7, r7, #0x1
	cmp	r1, #0
	bge	.L292	@cond_branch
	sub	r1, r6, #0x1
	lsl	r0, r1, #0x1
	add	r8, r8, r0
	add	r6, r1, #0
.L292:
	cmp	r6, r7
	bge	.L294	@cond_branch
.L293:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 SetFlashScanlineEffectWindowBoundaries,.Lfe55-SetFlashScanlineEffectWindowBoundaries
	.align	2, 0
	.type	 SetOrbFlashScanlineEffectWindowBoundary,function
	.thumb_func
SetOrbFlashScanlineEffectWindowBoundary:
	push	{lr}
	cmp	r1, #0xa0
	bhi	.L298	@cond_branch
	cmp	r2, #0
	bge	.L299	@cond_branch
	mov	r2, #0x0
.L299:
	cmp	r2, #0xf0
	ble	.L300	@cond_branch
	mov	r2, #0xf0
.L300:
	cmp	r3, #0
	bge	.L301	@cond_branch
	mov	r3, #0x0
.L301:
	cmp	r3, #0xf0
	ble	.L302	@cond_branch
	mov	r3, #0xf0
.L302:
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	lsl	r0, r2, #0x8
	orr	r0, r0, r3
	strh	r0, [r1]
.L298:
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 SetOrbFlashScanlineEffectWindowBoundary,.Lfe56-SetOrbFlashScanlineEffectWindowBoundary
	.align	2, 0
	.type	 SetOrbFlashScanlineEffectWindowBoundaries,function
	.thumb_func
SetOrbFlashScanlineEffectWindowBoundaries:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	str	r0, [sp]
	mov	sl, r1
	mov	r9, r2
	add	r6, r3, #0
	mov	r8, r6
	mov	r7, #0x0
	cmp	r6, #0
	blt	.L305	@cond_branch
.L306:
	mov	r0, r9
	sub	r1, r0, r7
	mov	r0, sl
	sub	r4, r0, r6
	add	r5, r0, r6
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetOrbFlashScanlineEffectWindowBoundary
	mov	r0, r9
	add	r1, r0, r7
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetOrbFlashScanlineEffectWindowBoundary
	mov	r0, r9
	sub	r1, r0, r6
	mov	r0, sl
	sub	r4, r0, r7
	add	r5, r0, r7
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetOrbFlashScanlineEffectWindowBoundary
	mov	r0, r9
	add	r1, r0, r6
	ldr	r0, [sp]
	add	r2, r4, #0
	add	r3, r5, #0
	bl	SetOrbFlashScanlineEffectWindowBoundary
	mov	r1, r8
	add	r1, r1, #0x1
	lsl	r0, r7, #0x1
	sub	r1, r1, r0
	mov	r8, r1
	add	r7, r7, #0x1
	cmp	r1, #0
	bge	.L304	@cond_branch
	sub	r1, r6, #0x1
	lsl	r0, r1, #0x1
	add	r8, r8, r0
	add	r6, r1, #0
.L304:
	cmp	r6, r7
	bge	.L306	@cond_branch
.L305:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe57:
	.size	 SetOrbFlashScanlineEffectWindowBoundaries,.Lfe57-SetOrbFlashScanlineEffectWindowBoundaries
	.align	2, 0
	.type	 UpdateFlashLevelEffect,function
	.thumb_func
UpdateFlashLevelEffect:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L320
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L312	@cond_branch
	cmp	r0, #0x1
	bgt	.L319	@cond_branch
	cmp	r0, #0
	beq	.L311	@cond_branch
	b	.L310
.L321:
	.align	2, 0
.L320:
	.word	gTasks+0x8
.L319:
	cmp	r0, #0x2
	beq	.L316	@cond_branch
	b	.L310
.L311:
	ldr	r0, .L322
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	ldr	r1, .L322+0x4
	add	r0, r0, r1
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r5, #0x6
	ldrsh	r3, [r4, r5]
	bl	SetFlashScanlineEffectWindowBoundaries
	mov	r0, #0x1
	strh	r0, [r4]
	b	.L310
.L323:
	.align	2, 0
.L322:
	.word	gScanlineEffect
	.word	gScanlineEffectRegBuffers
.L312:
	ldr	r0, .L324
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	ldr	r1, .L324+0x4
	add	r0, r0, r1
	mov	r6, #0x2
	ldrsh	r1, [r4, r6]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r6, #0x6
	ldrsh	r3, [r4, r6]
	bl	SetFlashScanlineEffectWindowBoundaries
	mov	r0, #0x0
	strh	r0, [r4]
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x6]
	add	r0, r0, r1
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x8
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	ble	.L310	@cond_branch
	mov	r3, #0xc
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	bne	.L314	@cond_branch
	bl	ScanlineEffect_Stop
	mov	r0, #0x2
	strh	r0, [r4]
	b	.L310
.L325:
	.align	2, 0
.L324:
	.word	gScanlineEffect
	.word	gScanlineEffectRegBuffers
.L314:
	add	r0, r5, #0
	bl	DestroyTask
	b	.L310
.L316:
	bl	ScanlineEffect_Clear
	add	r0, r5, #0
	bl	DestroyTask
.L310:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 UpdateFlashLevelEffect,.Lfe58-UpdateFlashLevelEffect
	.align	2, 0
	.type	 UpdateOrbFlashEffect,function
	.thumb_func
UpdateOrbFlashEffect:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L337
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L329	@cond_branch
	cmp	r0, #0x1
	bgt	.L336	@cond_branch
	cmp	r0, #0
	beq	.L328	@cond_branch
	b	.L327
.L338:
	.align	2, 0
.L337:
	.word	gTasks+0x8
.L336:
	cmp	r0, #0x2
	beq	.L333	@cond_branch
	b	.L327
.L328:
	ldr	r0, .L339
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	ldr	r1, .L339+0x4
	add	r0, r0, r1
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r5, #0x6
	ldrsh	r3, [r4, r5]
	bl	SetOrbFlashScanlineEffectWindowBoundaries
	mov	r0, #0x1
	strh	r0, [r4]
	b	.L327
.L340:
	.align	2, 0
.L339:
	.word	gScanlineEffect
	.word	gScanlineEffectRegBuffers
.L329:
	ldr	r0, .L341
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	ldr	r1, .L341+0x4
	add	r0, r0, r1
	mov	r6, #0x2
	ldrsh	r1, [r4, r6]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r6, #0x6
	ldrsh	r3, [r4, r6]
	bl	SetOrbFlashScanlineEffectWindowBoundaries
	mov	r0, #0x0
	strh	r0, [r4]
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x6]
	add	r0, r0, r1
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x8
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	ble	.L327	@cond_branch
	mov	r3, #0xc
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	bne	.L331	@cond_branch
	bl	ScanlineEffect_Stop
	mov	r0, #0x2
	strh	r0, [r4]
	b	.L327
.L342:
	.align	2, 0
.L341:
	.word	gScanlineEffect
	.word	gScanlineEffectRegBuffers
.L331:
	add	r0, r5, #0
	bl	DestroyTask
	b	.L327
.L333:
	bl	ScanlineEffect_Clear
	add	r0, r5, #0
	bl	DestroyTask
.L327:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe59:
	.size	 UpdateOrbFlashEffect,.Lfe59-UpdateOrbFlashEffect
	.align	2, 0
	.type	 sub_80AFF90,function
	.thumb_func
sub_80AFF90:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L345
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L344	@cond_branch
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
.L344:
	pop	{r4}
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	UpdateFlashLevelEffect
.Lfe60:
	.size	 sub_80AFF90,.Lfe60-sub_80AFF90
	.align	2, 0
	.type	 sub_80AFFB8,function
	.thumb_func
sub_80AFFB8:
	push	{r4, lr}
	ldr	r4, .L349
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L348	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
.L348:
	pop	{r4}
	pop	{r0}
	bx	r0
.L350:
	.align	2, 0
.L349:
	.word	sub_80AFF90
.Lfe61:
	.size	 sub_80AFFB8,.Lfe61-sub_80AFFB8
	.align	2, 0
	.type	 sub_80AFFDC,function
	.thumb_func
sub_80AFFDC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r8, r0
	mov	r9, r1
	add	r5, r2, #0
	add	r4, r3, #0
	ldr	r6, [sp, #0x1c]
	ldr	r0, [sp, #0x20]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L354
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L354+0x4
	add	r1, r0, r1
	strh	r5, [r1, #0x6]
	strh	r4, [r1, #0x8]
	mov	r0, r8
	strh	r0, [r1, #0x2]
	mov	r0, r9
	strh	r0, [r1, #0x4]
	strh	r6, [r1, #0xc]
	cmp	r5, r4
	bge	.L352	@cond_branch
	strh	r7, [r1, #0xa]
	b	.L353
.L355:
	.align	2, 0
.L354:
	.word	UpdateFlashLevelEffect
	.word	gTasks+0x8
.L352:
	neg	r0, r7
	strh	r0, [r1, #0xa]
.L353:
	add	r0, r2, #0
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 sub_80AFFDC,.Lfe62-sub_80AFFDC
	.align	2, 0
	.type	 sub_80B003C,function
	.thumb_func
sub_80B003C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r8, r0
	mov	r9, r1
	add	r5, r2, #0
	add	r4, r3, #0
	ldr	r6, [sp, #0x1c]
	ldr	r0, [sp, #0x20]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L359
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L359+0x4
	add	r1, r0, r1
	strh	r5, [r1, #0x6]
	strh	r4, [r1, #0x8]
	mov	r0, r8
	strh	r0, [r1, #0x2]
	mov	r0, r9
	strh	r0, [r1, #0x4]
	strh	r6, [r1, #0xc]
	cmp	r5, r4
	bge	.L357	@cond_branch
	strh	r7, [r1, #0xa]
	b	.L358
.L360:
	.align	2, 0
.L359:
	.word	UpdateOrbFlashEffect
	.word	gTasks+0x8
.L357:
	neg	r0, r7
	strh	r0, [r1, #0xa]
.L358:
	add	r0, r2, #0
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 sub_80B003C,.Lfe63-sub_80B003C
	.align	2, 0
	.globl	AnimateFlash
	.type	 AnimateFlash,function
	.thumb_func
AnimateFlash:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	bl	Overworld_GetFlashLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x0
	cmp	r4, #0
	bne	.L362	@cond_branch
	mov	r5, #0x1
.L362:
	ldr	r1, .L363
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r2, [r0]
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r3, [r0]
	str	r5, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x78
	mov	r1, #0x50
	bl	sub_80AFFDC
	bl	sub_80AFFB8
	bl	ScriptContext2_Enable
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L364:
	.align	2, 0
.L363:
	.word	sFlashLevelPixelRadii
.Lfe64:
	.size	 AnimateFlash,.Lfe64-AnimateFlash
	.align	2, 0
	.globl	WriteFlashScanlineEffectBuffer
	.type	 WriteFlashScanlineEffectBuffer,function
	.thumb_func
WriteFlashScanlineEffectBuffer:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L366	@cond_branch
	ldr	r4, .L367
	ldr	r1, .L367+0x4
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r3, [r0]
	add	r0, r4, #0
	mov	r1, #0x78
	mov	r2, #0x50
	bl	SetFlashScanlineEffectWindowBoundaries
	mov	r0, #0xf0
	lsl	r0, r0, #0x3
	add	r1, r4, r0
	mov	r2, #0xf0
	lsl	r2, r2, #0x1
	add	r0, r4, #0
	bl	CpuFastSet
.L366:
	pop	{r4}
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	gScanlineEffectRegBuffers
	.word	sFlashLevelPixelRadii
.Lfe65:
	.size	 WriteFlashScanlineEffectBuffer,.Lfe65-WriteFlashScanlineEffectBuffer
	.align	2, 0
	.globl	WriteBattlePyramidViewScanlineEffectBuffer
	.type	 WriteBattlePyramidViewScanlineEffectBuffer,function
	.thumb_func
WriteBattlePyramidViewScanlineEffectBuffer:
	push	{r4, lr}
	ldr	r4, .L370
	ldr	r0, .L370+0x4
	ldr	r0, [r0]
	mov	r1, #0xdf
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldrb	r3, [r0]
	add	r0, r4, #0
	mov	r1, #0x78
	mov	r2, #0x50
	bl	SetFlashScanlineEffectWindowBoundaries
	mov	r0, #0xf0
	lsl	r0, r0, #0x3
	add	r1, r4, r0
	mov	r2, #0xf0
	lsl	r2, r2, #0x1
	add	r0, r4, #0
	bl	CpuFastSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	gScanlineEffectRegBuffers
	.word	gSaveBlock2Ptr
.Lfe66:
	.size	 WriteBattlePyramidViewScanlineEffectBuffer,.Lfe66-WriteBattlePyramidViewScanlineEffectBuffer
	.align	2, 0
	.type	 Task_TeleportTileWarpExit,function
	.thumb_func
Task_TeleportTileWarpExit:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L379
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L374	@cond_branch
	cmp	r0, #0x1
	beq	.L375	@cond_branch
	b	.L373
.L380:
	.align	2, 0
.L379:
	.word	gTasks
.L374:
	bl	FreezeObjectEvents
	bl	ScriptContext2_Enable
	bl	sub_808D194
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L373
.L375:
	bl	WaitForWeatherFadeIn
	cmp	r0, #0
	beq	.L373	@cond_branch
	bl	sub_808D1B4
	cmp	r0, #0x1
	beq	.L373	@cond_branch
	bl	UnfreezeObjectEvents
	bl	ScriptContext2_Disable
	add	r0, r5, #0
	bl	DestroyTask
.L373:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 Task_TeleportTileWarpExit,.Lfe67-Task_TeleportTileWarpExit
	.align	2, 0
	.type	 sub_80B01BC,function
	.thumb_func
sub_80B01BC:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L393
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L384	@cond_branch
	cmp	r0, #0x1
	bgt	.L391	@cond_branch
	cmp	r0, #0
	beq	.L383	@cond_branch
	b	.L382
.L394:
	.align	2, 0
.L393:
	.word	gTasks
.L391:
	cmp	r0, #0x2
	beq	.L386	@cond_branch
	cmp	r0, #0x3
	beq	.L388	@cond_branch
	b	.L382
.L383:
	bl	FreezeObjectEvents
	bl	ScriptContext2_Enable
	mov	r0, #0x2d
	bl	PlaySE
	bl	sub_808D1C8
	b	.L392
.L384:
	bl	sub_808D1E8
	cmp	r0, #0
	bne	.L382	@cond_branch
	bl	WarpFadeOutScreen
	b	.L392
.L386:
	bl	PaletteFadeActive
	cmp	r0, #0
	bne	.L382	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L382	@cond_branch
.L392:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L382
.L388:
	bl	WarpIntoMap
	ldr	r0, .L395
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L382:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	CB2_LoadMap
.Lfe68:
	.size	 sub_80B01BC,.Lfe68-sub_80B01BC
	.align	2, 0
	.globl	sub_80B0244
	.type	 sub_80B0244,function
	.thumb_func
sub_80B0244:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r0, .L398
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L398+0x4
	ldr	r0, .L398+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L399:
	.align	2, 0
.L398:
	.word	Task_WarpAndLoadMap
	.word	gFieldCallback
	.word	FieldCB_TeleportTileWarpExit
.Lfe69:
	.size	 sub_80B0244,.Lfe69-sub_80B0244
	.align	2, 0
	.globl	sub_80B0268
	.type	 sub_80B0268,function
	.thumb_func
sub_80B0268:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r0, .L401
	ldr	r1, .L401+0x4
	str	r1, [r0]
	ldr	r0, .L401+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L402:
	.align	2, 0
.L401:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	sub_80B01BC
.Lfe70:
	.size	 sub_80B0268,.Lfe70-sub_80B0268
	.align	2, 0
	.type	 LoadOrbEffectPalette,function
	.thumb_func
LoadOrbEffectPalette:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L404	@cond_branch
	mov	r1, #0x1f
	b	.L411
.L404:
	mov	r0, #0xf8
	lsl	r0, r0, #0x7
	add	r1, r0, #0
.L411:
	mov	r0, sp
	strh	r1, [r0]
	mov	r5, #0x0
	mov	r4, #0xf0
	lsl	r4, r4, #0x10
.L409:
	lsr	r1, r4, #0x10
	mov	r0, sp
	mov	r2, #0x2
	bl	LoadPalette
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	add	r4, r4, r0
	add	r5, r5, #0x1
	cmp	r5, #0xf
	ble	.L409	@cond_branch
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 LoadOrbEffectPalette,.Lfe71-LoadOrbEffectPalette
	.align	2, 0
	.type	 sub_80B02C8,function
	.thumb_func
sub_80B02C8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	ldr	r2, .L420
	ldrh	r1, [r2]
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldrh	r1, [r2]
	lsr	r4, r1, #0x8
	cmp	r0, #0
	beq	.L413	@cond_branch
	cmp	r5, #0
	beq	.L415	@cond_branch
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	b	.L415
.L421:
	.align	2, 0
.L420:
	.word	0x4000052
.L413:
	cmp	r4, #0xf
	bhi	.L415	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L415:
	lsl	r1, r4, #0x8
	orr	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	cmp	r5, #0
	bne	.L417	@cond_branch
	cmp	r4, #0x10
	bne	.L417	@cond_branch
	mov	r0, #0x1
	b	.L419
.L417:
	mov	r0, #0x0
.L419:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 sub_80B02C8,.Lfe72-sub_80B02C8
	.align	2, 0
	.type	 Task_OrbEffect,function
	.thumb_func
Task_OrbEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L440
	add	r5, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x7
	bls	.LCB3283
	b	.L423	@long jump
.LCB3283:
	lsl	r0, r0, #0x2
	ldr	r1, .L440+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L441:
	.align	2, 0
.L440:
	.word	gTasks+0x8
	.word	.L438
	.align	2, 0
	.align	2, 0
.L438:
	.word	.L424
	.word	.L425
	.word	.L426
	.word	.L428
	.word	.L429
	.word	.L437
	.word	.L433
	.word	.L434
.L424:
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	ldrh	r0, [r0]
	strh	r0, [r5, #0xc]
	ldr	r0, .L442
	ldrh	r0, [r0]
	strh	r0, [r5, #0xe]
	ldr	r0, .L442+0x4
	ldrh	r0, [r0]
	strh	r0, [r5, #0x10]
	ldr	r0, .L442+0x8
	ldrh	r0, [r0]
	strh	r0, [r5, #0x12]
	ldr	r0, .L442+0xc
	ldrh	r0, [r0]
	strh	r0, [r5, #0x14]
	mov	r1, #0x80
	lsl	r1, r1, #0x7
	mov	r0, #0x0
	bl	ClearGpuRegBits
	ldr	r0, .L442+0x10
	ldrh	r1, [r0]
	mov	r0, #0x50
	bl	SetGpuRegBits
	ldr	r1, .L442+0x14
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x1e
	bl	SetGpuReg
	mov	r0, #0x14
	str	r0, [sp]
	mov	r0, #0xf
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1e
	bl	SetBgTilemapPalette
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r4, .L442+0x18
	mov	r2, #0x4
	ldrsh	r1, [r5, r2]
	mov	r0, #0x6
	ldrsh	r2, [r5, r0]
	add	r0, r4, #0
	mov	r3, #0x1
	bl	SetOrbFlashScanlineEffectWindowBoundaries
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r4, r2
	mov	r2, #0xf0
	lsl	r2, r2, #0x1
	add	r0, r4, #0
	bl	CpuFastSet
	ldr	r2, .L442+0x1c
	ldr	r0, [r2]
	ldr	r1, [r2, #0x4]
	ldr	r2, [r2, #0x8]
	bl	ScanlineEffect_SetParams
	mov	r0, #0x1
	strh	r0, [r5]
	b	.L423
.L443:
	.align	2, 0
.L442:
	.word	0x4000050
	.word	0x4000052
	.word	0x4000048
	.word	0x400004a
	.word	gOrbEffectBackgroundLayerFlags
	.word	0x70c
	.word	gScanlineEffectRegBuffers
	.word	sFlashEffectParams
.L425:
	mov	r0, #0x0
	mov	r1, #0x11
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_8199DF0
	ldrb	r0, [r5, #0x2]
	bl	LoadOrbEffectPalette
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	mov	r2, #0x6
	ldrsh	r1, [r5, r2]
	mov	r2, #0x1
	str	r2, [sp]
	mov	r4, #0x2
	str	r4, [sp, #0x4]
	mov	r3, #0xa0
	bl	sub_80B003C
	strh	r4, [r5]
	b	.L423
.L426:
	ldr	r0, .L444
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L423	@cond_branch
	bl	EnableBothScriptContexts
	mov	r0, #0x3
	strh	r0, [r5]
	b	.L423
.L445:
	.align	2, 0
.L444:
	.word	UpdateOrbFlashEffect
.L428:
	bl	InstallCameraPanAheadCallback
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	mov	r0, #0x0
	strh	r0, [r5, #0xa]
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	strh	r0, [r5]
	b	.L423
.L429:
	ldrh	r0, [r5, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L423	@cond_branch
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	ldrh	r0, [r5, #0xa]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r5, #0xa]
	mov	r1, #0x4
	neg	r1, r1
	cmp	r0, #0
	beq	.L431	@cond_branch
	mov	r1, #0x4
.L431:
	mov	r0, #0x0
	bl	SetCameraPanning
	b	.L423
.L433:
	bl	InstallCameraPanAheadCallback
	mov	r0, #0x8
	strh	r0, [r5, #0x8]
	mov	r0, #0x7
	strh	r0, [r5]
	b	.L423
.L434:
	ldrh	r0, [r5, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L423	@cond_branch
	mov	r0, #0x8
	strh	r0, [r5, #0x8]
	ldrh	r0, [r5, #0xa]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r5, #0xa]
	ldrh	r0, [r5, #0xa]
	bl	sub_80B02C8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L423	@cond_branch
	mov	r0, #0x5
	strh	r0, [r5]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_8199DF0
	b	.L423
.L437:
	mov	r0, #0x40
	mov	r1, #0xff
	bl	SetGpuReg
	ldrh	r1, [r5, #0xc]
	mov	r0, #0x0
	bl	SetGpuReg
	ldrh	r1, [r5, #0xe]
	mov	r0, #0x50
	bl	SetGpuReg
	ldrh	r1, [r5, #0x10]
	mov	r0, #0x52
	bl	SetGpuReg
	ldrh	r1, [r5, #0x12]
	mov	r0, #0x48
	bl	SetGpuReg
	ldrh	r1, [r5, #0x14]
	mov	r0, #0x4a
	bl	SetGpuReg
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
.L423:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 Task_OrbEffect,.Lfe73-Task_OrbEffect
	.align	2, 0
	.globl	DoOrbEffect
	.type	 DoOrbEffect,function
	.thumb_func
DoOrbEffect:
	push	{lr}
	ldr	r0, .L455
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L455+0x4
	add	r1, r1, r0
	ldr	r0, .L455+0x8
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L447	@cond_branch
	strh	r0, [r1, #0x2]
	mov	r0, #0x68
	b	.L453
.L456:
	.align	2, 0
.L455:
	.word	Task_OrbEffect
	.word	gTasks+0x8
	.word	gSpecialVar_Result
.L447:
	cmp	r0, #0x1
	bne	.L449	@cond_branch
	strh	r0, [r1, #0x2]
	mov	r0, #0x88
	b	.L453
.L449:
	cmp	r0, #0x2
	bne	.L451	@cond_branch
	mov	r0, #0x0
	b	.L454
.L451:
	mov	r0, #0x1
.L454:
	strh	r0, [r1, #0x2]
	mov	r0, #0x78
.L453:
	strh	r0, [r1, #0x4]
	mov	r0, #0x50
	strh	r0, [r1, #0x6]
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 DoOrbEffect,.Lfe74-DoOrbEffect
	.align	2, 0
	.globl	FadeOutOrbEffect
	.type	 FadeOutOrbEffect,function
	.thumb_func
FadeOutOrbEffect:
	push	{lr}
	ldr	r0, .L458
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L458+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x6
	strh	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L459:
	.align	2, 0
.L458:
	.word	Task_OrbEffect
	.word	gTasks
.Lfe75:
	.size	 FadeOutOrbEffect,.Lfe75-FadeOutOrbEffect
	.align	2, 0
	.globl	Script_FadeOutMapMusic
	.type	 Script_FadeOutMapMusic,function
	.thumb_func
Script_FadeOutMapMusic:
	push	{lr}
	bl	Overworld_FadeOutMapMusic
	ldr	r0, .L461
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	Task_EnableScriptAfterMusicFade
.Lfe76:
	.size	 Script_FadeOutMapMusic,.Lfe76-Script_FadeOutMapMusic
	.align	2, 0
	.type	 Task_EnableScriptAfterMusicFade,function
	.thumb_func
Task_EnableScriptAfterMusicFade:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L464	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L464:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 Task_EnableScriptAfterMusicFade,.Lfe77-Task_EnableScriptAfterMusicFade
.text
	.align	2, 0

