@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 gUnknown_08595A48,object
gUnknown_08595A48:
	.short	0x0
	.byte	0x45
	.space	1
	.short	0x1
	.byte	0x45
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gUnknown_08595A48,12
	.align	2, 0
	.type	 gUnknown_08595A54,object
gUnknown_08595A54:
	.word	gUnknown_08595A48
	.size	 gUnknown_08595A54,4
	.globl	gUnknown_08595A58
	.align	2, 0
	.type	 gUnknown_08595A58,object
	.size	 gUnknown_08595A58,24
gUnknown_08595A58:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineOff_ObjNormal_8x8
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_810B6C4
	.align	2, 0
	.type	 gUnknown_08595A70,object
gUnknown_08595A70:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595A70,8
	.align	2, 0
	.type	 sAnim_IceCrystalLarge,object
sAnim_IceCrystalLarge:
	.short	0x4
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_IceCrystalLarge,8
	.align	2, 0
	.type	 sAnim_IceCrystalSmall,object
sAnim_IceCrystalSmall:
	.short	0x6
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_IceCrystalSmall,8
	.align	2, 0
	.type	 sAnim_Snowball,object
sAnim_Snowball:
	.short	0x7
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Snowball,8
	.align	2, 0
	.type	 sAnim_BlizzardIceCrystal,object
sAnim_BlizzardIceCrystal:
	.short	0x8
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_BlizzardIceCrystal,8
	.align	2, 0
	.type	 sAnim_SmallBubblePair,object
sAnim_SmallBubblePair:
	.short	0xc
	.byte	0x6
	.space	1
	.short	0xd
	.byte	0x6
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_SmallBubblePair,12
	.align	2, 0
	.type	 gUnknown_08595AA4,object
gUnknown_08595AA4:
	.word	gUnknown_08595A70
	.size	 gUnknown_08595AA4,4
	.globl	gAnims_IceCrystalLarge
	.align	2, 0
	.type	 gAnims_IceCrystalLarge,object
gAnims_IceCrystalLarge:
	.word	sAnim_IceCrystalLarge
	.size	 gAnims_IceCrystalLarge,4
	.align	2, 0
	.type	 sAnims_IceCrystalSmall,object
sAnims_IceCrystalSmall:
	.word	sAnim_IceCrystalSmall
	.size	 sAnims_IceCrystalSmall,4
	.globl	gAnims_Snowball
	.align	2, 0
	.type	 gAnims_Snowball,object
gAnims_Snowball:
	.word	sAnim_Snowball
	.size	 gAnims_Snowball,4
	.globl	gAnims_BlizzardIceCrystal
	.align	2, 0
	.type	 gAnims_BlizzardIceCrystal,object
gAnims_BlizzardIceCrystal:
	.word	sAnim_BlizzardIceCrystal
	.size	 gAnims_BlizzardIceCrystal,4
	.globl	gAnims_SmallBubblePair
	.align	2, 0
	.type	 gAnims_SmallBubblePair,object
gAnims_SmallBubblePair:
	.word	sAnim_SmallBubblePair
	.size	 gAnims_SmallBubblePair,4
	.align	2, 0
	.type	 sAffineAnim_IceCrystalSpiralInwardLarge,object
sAffineAnim_IceCrystalSpiralInwardLarge:
	.short	0x0
	.short	0x0
	.byte	0x28
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 sAffineAnim_IceCrystalSpiralInwardLarge,16
	.align	2, 0
	.type	 sAffineAnims_IceCrystalSpiralInwardLarge,object
sAffineAnims_IceCrystalSpiralInwardLarge:
	.word	sAffineAnim_IceCrystalSpiralInwardLarge
	.size	 sAffineAnims_IceCrystalSpiralInwardLarge,4
	.globl	gIceCrystalSpiralInwardLarge
	.align	2, 0
	.type	 gIceCrystalSpiralInwardLarge,object
	.size	 gIceCrystalSpiralInwardLarge,24
gIceCrystalSpiralInwardLarge:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineDouble_ObjBlend_8x16
	.word	gAnims_IceCrystalLarge
	.word	0x0
	.word	sAffineAnims_IceCrystalSpiralInwardLarge
	.word	AnimIcePunchSwirlingParticle
	.globl	gIceCrystalSpiralInwardSmall
	.align	2, 0
	.type	 gIceCrystalSpiralInwardSmall,object
	.size	 gIceCrystalSpiralInwardSmall,24
gIceCrystalSpiralInwardSmall:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineOff_ObjBlend_8x8
	.word	sAnims_IceCrystalSmall
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimIcePunchSwirlingParticle
	.align	2, 0
	.type	 sAffineAnim_IceBeamInnerCrystal,object
sAffineAnim_IceBeamInnerCrystal:
	.short	0x0
	.short	0x0
	.byte	0xa
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 sAffineAnim_IceBeamInnerCrystal,16
	.align	2, 0
	.type	 sAffineAnims_IceBeamInnerCrystal,object
sAffineAnims_IceBeamInnerCrystal:
	.word	sAffineAnim_IceBeamInnerCrystal
	.size	 sAffineAnims_IceBeamInnerCrystal,4
	.globl	gIceBeamInnerCrystalSpriteTemplate
	.align	2, 0
	.type	 gIceBeamInnerCrystalSpriteTemplate,object
	.size	 gIceBeamInnerCrystalSpriteTemplate,24
gIceBeamInnerCrystalSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineNormal_ObjBlend_8x16
	.word	gAnims_IceCrystalLarge
	.word	0x0
	.word	sAffineAnims_IceBeamInnerCrystal
	.word	AnimIceBeamParticle
	.globl	gIceBeamOuterCrystalSpriteTemplate
	.align	2, 0
	.type	 gIceBeamOuterCrystalSpriteTemplate,object
	.size	 gIceBeamOuterCrystalSpriteTemplate,24
gIceBeamOuterCrystalSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineOff_ObjBlend_8x8
	.word	sAnims_IceCrystalSmall
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimIceBeamParticle
	.align	2, 0
	.type	 sAffineAnim_IceCrystalHit,object
sAffineAnim_IceCrystalHit:
	.short	0xce
	.short	0xce
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0xa
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x6
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_IceCrystalHit,32
	.globl	gAffineAnims_IceCrystalHit
	.align	2, 0
	.type	 gAffineAnims_IceCrystalHit,object
gAffineAnims_IceCrystalHit:
	.word	sAffineAnim_IceCrystalHit
	.size	 gAffineAnims_IceCrystalHit,4
	.globl	gIceCrystalHitLargeSpriteTemplate
	.align	2, 0
	.type	 gIceCrystalHitLargeSpriteTemplate,object
	.size	 gIceCrystalHitLargeSpriteTemplate,24
gIceCrystalHitLargeSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineNormal_ObjBlend_8x16
	.word	gAnims_IceCrystalLarge
	.word	0x0
	.word	gAffineAnims_IceCrystalHit
	.word	AnimIceEffectParticle
	.globl	gIceCrystalHitSmallSpriteTemplate
	.align	2, 0
	.type	 gIceCrystalHitSmallSpriteTemplate,object
	.size	 gIceCrystalHitSmallSpriteTemplate,24
gIceCrystalHitSmallSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineNormal_ObjBlend_8x8
	.word	sAnims_IceCrystalSmall
	.word	0x0
	.word	gAffineAnims_IceCrystalHit
	.word	AnimIceEffectParticle
	.globl	gSwirlingSnowballSpriteTemplate
	.align	2, 0
	.type	 gSwirlingSnowballSpriteTemplate,object
	.size	 gSwirlingSnowballSpriteTemplate,24
gSwirlingSnowballSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineOff_ObjNormal_8x8
	.word	gAnims_Snowball
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimSwirlingSnowball
	.globl	gBlizzardIceCrystalSpriteTemplate
	.align	2, 0
	.type	 gBlizzardIceCrystalSpriteTemplate,object
	.size	 gBlizzardIceCrystalSpriteTemplate,24
gBlizzardIceCrystalSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	gAnims_BlizzardIceCrystal
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimMoveParticleBeyondTarget
	.globl	gPowderSnowSnowballSpriteTemplate
	.align	2, 0
	.type	 gPowderSnowSnowballSpriteTemplate,object
	.size	 gPowderSnowSnowballSpriteTemplate,24
gPowderSnowSnowballSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineOff_ObjNormal_8x8
	.word	gAnims_Snowball
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimMoveParticleBeyondTarget
	.align	2, 0
	.type	 sAnim_IceGroundSpike,object
sAnim_IceGroundSpike:
	.short	0x0
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x6
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x5
	.space	1
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_IceGroundSpike,32
	.align	2, 0
	.type	 sAnims_IceGroundSpike,object
sAnims_IceGroundSpike:
	.word	sAnim_IceGroundSpike
	.size	 sAnims_IceGroundSpike,4
	.globl	gIceGroundSpikeSpriteTemplate
	.align	2, 0
	.type	 gIceGroundSpikeSpriteTemplate,object
	.size	 gIceGroundSpikeSpriteTemplate,24
gIceGroundSpikeSpriteTemplate:
	.short	0x279e
	.short	0x279e
	.word	gOamData_AffineOff_ObjBlend_8x16
	.word	sAnims_IceGroundSpike
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimWaveFromCenterOfTarget
	.align	2, 0
	.type	 sAnim_Cloud,object
sAnim_Cloud:
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x8
	.byte	0x8
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Cloud,12
	.align	2, 0
	.type	 sAnims_Cloud,object
sAnims_Cloud:
	.word	sAnim_Cloud
	.size	 sAnims_Cloud,4
	.globl	gMistCloudSpriteTemplate
	.align	2, 0
	.type	 gMistCloudSpriteTemplate,object
	.size	 gMistCloudSpriteTemplate,24
gMistCloudSpriteTemplate:
	.short	0x27a0
	.short	0x27a0
	.word	gOamData_AffineOff_ObjBlend_32x16
	.word	sAnims_Cloud
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitSwirlingFogAnim
	.globl	gSmogCloudSpriteTemplate
	.align	2, 0
	.type	 gSmogCloudSpriteTemplate,object
	.size	 gSmogCloudSpriteTemplate,24
gSmogCloudSpriteTemplate:
	.short	0x27bc
	.short	0x27bc
	.word	gOamData_AffineOff_ObjBlend_32x16
	.word	sAnims_Cloud
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitSwirlingFogAnim
	.type	 sUnknown_08595C5C,object
sUnknown_08595C5C:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x9
	.size	 sUnknown_08595C5C,20
	.globl	gMistBallSpriteTemplate
	.align	2, 0
	.type	 gMistBallSpriteTemplate,object
	.size	 gMistBallSpriteTemplate,24
gMistBallSpriteTemplate:
	.short	0x27ab
	.short	0x27ab
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimThrowMistBall
	.type	 sUnknown_08595C88,object
sUnknown_08595C88:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.size	 sUnknown_08595C88,20
	.globl	gPoisonGasCloudSpriteTemplate
	.align	2, 0
	.type	 gPoisonGasCloudSpriteTemplate,object
	.size	 gPoisonGasCloudSpriteTemplate,24
gPoisonGasCloudSpriteTemplate:
	.short	0x27bc
	.short	0x27bc
	.word	gOamData_AffineOff_ObjBlend_32x16
	.word	sAnims_Cloud
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitPoisonGasCloudAnim
	.align	2, 0
	.type	 sHailCoordData,object
	.size	 sHailCoordData,40
sHailCoordData:
	.byte	0x64
	.byte	0xe0
	.byte	0x1
	.byte	0x20
	.byte	0x55
	.byte	0xe0
	.byte	0x1
	.byte	0x0
	.byte	0xf2
	.byte	0xe0
	.byte	0x11
	.byte	0x10
	.byte	0x42
	.byte	0xe0
	.byte	0x21
	.byte	0x10
	.byte	0xb6
	.byte	0xe0
	.byte	0x31
	.byte	0x0
	.byte	0x3c
	.byte	0xe0
	.byte	0x1
	.byte	0x20
	.byte	0xd6
	.byte	0xe0
	.byte	0x11
	.byte	0x0
	.byte	0x71
	.byte	0xe0
	.byte	0x1
	.byte	0x10
	.byte	0xd2
	.byte	0xe0
	.byte	0x31
	.byte	0x10
	.byte	0x26
	.byte	0xe0
	.byte	0x21
	.byte	0x0
	.align	2, 0
	.type	 sAffineAnim_HailParticle_0,object
sAffineAnim_HailParticle_0:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_HailParticle_0,16
	.align	2, 0
	.type	 sAffineAnim_HailParticle_1,object
sAffineAnim_HailParticle_1:
	.short	0xf0
	.short	0xf0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_HailParticle_1,16
	.align	2, 0
	.type	 sAffineAnim_HailParticle_2,object
sAffineAnim_HailParticle_2:
	.short	0xe0
	.short	0xe0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_HailParticle_2,16
	.align	2, 0
	.type	 sAffineAnim_WeatherBallIceDown,object
sAffineAnim_WeatherBallIceDown:
	.short	0x150
	.short	0x150
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_WeatherBallIceDown,16
	.align	2, 0
	.type	 sAffineAnims_HailParticle,object
sAffineAnims_HailParticle:
	.word	sAffineAnim_HailParticle_0
	.word	sAffineAnim_HailParticle_1
	.word	sAffineAnim_HailParticle_2
	.size	 sAffineAnims_HailParticle,12
	.align	2, 0
	.type	 sAffineAnims_WeatherBallIceDown,object
sAffineAnims_WeatherBallIceDown:
	.word	sAffineAnim_WeatherBallIceDown
	.size	 sAffineAnims_WeatherBallIceDown,4
	.globl	gHailParticleSpriteTemplate
	.align	2, 0
	.type	 gHailParticleSpriteTemplate,object
	.size	 gHailParticleSpriteTemplate,24
gHailParticleSpriteTemplate:
	.short	0x2817
	.short	0x2817
	.word	gOamData_AffineNormal_ObjNormal_16x16
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	sAffineAnims_HailParticle
	.word	AnimHailBegin
	.globl	gWeatherBallIceDownSpriteTemplate
	.align	2, 0
	.type	 gWeatherBallIceDownSpriteTemplate,object
	.size	 gWeatherBallIceDownSpriteTemplate,24
gWeatherBallIceDownSpriteTemplate:
	.short	0x2817
	.short	0x2817
	.word	gOamData_AffineNormal_ObjNormal_16x16
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	sAffineAnims_WeatherBallIceDown
	.word	AnimWeatherBallDown
	.align	2, 0
	.type	 sAnim_IceBallChunk_0,object
sAnim_IceBallChunk_0:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_IceBallChunk_0,8
	.align	2, 0
	.type	 sAnim_IceBallChunk_1,object
sAnim_IceBallChunk_1:
	.short	0x10
	.byte	0x4
	.space	1
	.short	0x20
	.byte	0x4
	.space	1
	.short	0x30
	.byte	0x4
	.space	1
	.short	0x40
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_IceBallChunk_1,20
	.globl	gAnims_IceBallChunk
	.align	2, 0
	.type	 gAnims_IceBallChunk,object
gAnims_IceBallChunk:
	.word	sAnim_IceBallChunk_0
	.word	sAnim_IceBallChunk_1
	.size	 gAnims_IceBallChunk,8
	.align	2, 0
	.type	 sAffineAnim_IceBallChunk_0,object
sAffineAnim_IceBallChunk_0:
	.short	0xe0
	.short	0xe0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_IceBallChunk_0,16
	.align	2, 0
	.type	 sAffineAnim_IceBallChunk_1,object
sAffineAnim_IceBallChunk_1:
	.short	0x118
	.short	0x118
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_IceBallChunk_1,16
	.align	2, 0
	.type	 sAffineAnim_IceBallChunk_2,object
sAffineAnim_IceBallChunk_2:
	.short	0x150
	.short	0x150
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_IceBallChunk_2,16
	.align	2, 0
	.type	 sAffineAnim_IceBallChunk_3,object
sAffineAnim_IceBallChunk_3:
	.short	0x180
	.short	0x180
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_IceBallChunk_3,16
	.align	2, 0
	.type	 sAffineAnim_IceBallChunk_4,object
sAffineAnim_IceBallChunk_4:
	.short	0x1c0
	.short	0x1c0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_IceBallChunk_4,16
	.align	2, 0
	.type	 sAffineAnims_IceBallChunk,object
sAffineAnims_IceBallChunk:
	.word	sAffineAnim_IceBallChunk_0
	.word	sAffineAnim_IceBallChunk_1
	.word	sAffineAnim_IceBallChunk_2
	.word	sAffineAnim_IceBallChunk_3
	.word	sAffineAnim_IceBallChunk_4
	.size	 sAffineAnims_IceBallChunk,20
	.globl	gIceBallChunkSpriteTemplate
	.align	2, 0
	.type	 gIceBallChunkSpriteTemplate,object
	.size	 gIceBallChunkSpriteTemplate,24
gIceBallChunkSpriteTemplate:
	.short	0x273b
	.short	0x273b
	.word	gOamData_AffineDouble_ObjNormal_32x32
	.word	gAnims_IceBallChunk
	.word	0x0
	.word	sAffineAnims_IceBallChunk
	.word	InitIceBallAnim
	.globl	gIceBallImpactShardSpriteTemplate
	.align	2, 0
	.type	 gIceBallImpactShardSpriteTemplate,object
	.size	 gIceBallImpactShardSpriteTemplate,24
gIceBallImpactShardSpriteTemplate:
	.short	0x279d
	.short	0x279d
	.word	gOamData_AffineOff_ObjNormal_8x8
	.word	sAnims_IceCrystalSmall
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitIceBallParticle
	.globl	gAvalancheAnimTable_1
	.align	2, 0
	.type	 gAvalancheAnimTable_1,object
gAvalancheAnimTable_1:
	.short	0x20
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gAvalancheAnimTable_1,8
	.globl	gAvalancheAnimTable_2
	.align	2, 0
	.type	 gAvalancheAnimTable_2,object
gAvalancheAnimTable_2:
	.short	0x30
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gAvalancheAnimTable_2,8
	.globl	gAvalancheAnimTable_3
	.align	2, 0
	.type	 gAvalancheAnimTable_3,object
gAvalancheAnimTable_3:
	.short	0x40
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gAvalancheAnimTable_3,8
	.globl	gAvalancheAnimCmd
	.align	2, 0
	.type	 gAvalancheAnimCmd,object
gAvalancheAnimCmd:
	.word	gAvalancheAnimTable_1
	.word	gAvalancheAnimTable_2
	.word	gAvalancheAnimTable_3
	.size	 gAvalancheAnimCmd,12
	.globl	gAvalancheSpriteTemplate
	.align	2, 0
	.type	 gAvalancheSpriteTemplate,object
	.size	 gAvalancheSpriteTemplate,24
gAvalancheSpriteTemplate:
	.short	0x274a
	.short	0x273b
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	gAvalancheAnimCmd
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AvalancheAnim_Step
	.globl	gChatterSingNotesTemplate
	.align	2, 0
	.type	 gChatterSingNotesTemplate,object
	.size	 gChatterSingNotesTemplate,24
gChatterSingNotesTemplate:
	.short	0x2758
	.short	0x2758
	.word	gOamData_AffineDouble_ObjNormal_16x16
	.word	gMusicNotesAnimTable
	.word	0x0
	.word	gAffineAnims_IceCrystalHit
	.word	AnimIceEffectParticle
.text
	.align	2, 0
	.type	 AvalancheAnim_Step,function
	.thumb_func
AvalancheAnim_Step:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r6, .L4
	mov	r1, #0x6
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L3	@cond_branch
	ldr	r0, .L4+0x4
	ldrb	r0, [r0]
	add	r2, r5, #0
	add	r2, r2, #0x20
	add	r3, r5, #0
	add	r3, r3, #0x22
	mov	r1, #0x0
	bl	SetAverageBattlerPositions
.L3:
	ldrh	r0, [r6]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	mov	r4, #0x0
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x22]
	add	r0, r0, #0xe
	strh	r0, [r5, #0x22]
	ldrb	r1, [r6, #0x2]
	add	r0, r5, #0
	bl	StartSpriteAnim
	add	r0, r5, #0
	bl	AnimateSprite
	strh	r4, [r5, #0x2e]
	strh	r4, [r5, #0x30]
	mov	r0, #0x4
	strh	r0, [r5, #0x32]
	mov	r0, #0x10
	strh	r0, [r5, #0x34]
	ldr	r0, .L4+0x8
	strh	r0, [r5, #0x36]
	ldrh	r0, [r6, #0x4]
	strh	r0, [r5, #0x38]
	ldr	r1, .L4+0xc
	add	r0, r5, #0
	bl	StoreSpriteCallbackInData6
	ldr	r1, .L4+0x10
	str	r1, [r5, #0x1c]
	add	r0, r5, #0
	bl	_call_via_r1
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
	.word	0xffba
	.word	AvalancheAnim_Step2
	.word	TranslateSpriteInEllipseOverDuration
.Lfe1:
	.size	 AvalancheAnim_Step,.Lfe1-AvalancheAnim_Step
	.align	2, 0
	.type	 AvalancheAnim_Step2,function
	.thumb_func
AvalancheAnim_Step2:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x38]
	ldrh	r2, [r4, #0x20]
	add	r0, r1, r2
	strh	r0, [r4, #0x20]
	mov	r0, #0xc0
	strh	r0, [r4, #0x2e]
	strh	r1, [r4, #0x30]
	mov	r0, #0x4
	strh	r0, [r4, #0x32]
	mov	r0, #0x20
	strh	r0, [r4, #0x34]
	ldr	r0, .L7
	strh	r0, [r4, #0x36]
	ldr	r1, .L7+0x4
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
	ldr	r1, .L7+0x8
	str	r1, [r4, #0x1c]
	add	r0, r4, #0
	bl	_call_via_r1
	pop	{r4}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	0xffe8
	.word	DestroySpriteAndMatrix
	.word	TranslateSpriteInEllipseOverDuration
.Lfe2:
	.size	 AvalancheAnim_Step2,.Lfe2-AvalancheAnim_Step2
	.align	2, 0
	.type	 sub_810B6C4,function
	.thumb_func
sub_810B6C4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r2, [r5, #0x4]
	lsl	r1, r2, #0x16
	lsr	r1, r1, #0x16
	add	r1, r1, #0x7
	ldr	r3, .L23
	add	r0, r3, #0
	and	r1, r1, r0
	ldr	r0, .L23+0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r5, #0x4]
	ldr	r4, .L23+0x8
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r4, .L23+0xc
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldrb	r0, [r4]
	mov	r1, #0x3
	str	r3, [sp]
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L23+0x10
	ldrh	r0, [r1, #0x8]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r1]
	ldr	r3, [sp]
	add	r0, r0, r3
	strh	r0, [r5, #0x30]
	ldrh	r0, [r1, #0x4]
	mov	r4, r9
	add	r0, r4, r0
	strh	r0, [r5, #0x32]
	ldrh	r0, [r1, #0x2]
	add	r0, r0, r6
	strh	r0, [r5, #0x34]
	ldrh	r0, [r1, #0x6]
	mov	r7, r8
	add	r0, r7, r0
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	sub_80A64EC
	add	r4, r4, #0x20
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	mov	ip, r0
	ldr	r3, [sp]
	cmp	r4, ip
	bhi	.L11	@cond_branch
	add	r0, r7, #0
	add	r0, r0, #0x20
	ldrh	r1, [r5, #0x30]
	ldrh	r2, [r5, #0x32]
	cmp	r0, #0xe0
	bhi	.L11	@cond_branch
	add	r4, r1, #0
	mov	sl, ip
.L12:
	mov	r7, r9
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r4
	lsl	r1, r1, #0x10
	mov	r7, r8
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	lsr	r0, r1, #0x10
	mov	r9, r0
	mov	r7, #0x80
	lsl	r7, r7, #0xe
	add	r1, r1, r7
	lsr	r1, r1, #0x10
	cmp	r1, sl
	bhi	.L11	@cond_branch
	mov	r1, r8
	lsl	r0, r1, #0x10
	add	r0, r0, r7
	lsr	r0, r0, #0x10
	cmp	r0, #0xe0
	bls	.L12	@cond_branch
.L11:
	ldrh	r0, [r5, #0x30]
	neg	r7, r0
	strh	r7, [r5, #0x30]
	ldrh	r0, [r5, #0x32]
	neg	r4, r0
	strh	r4, [r5, #0x32]
	lsl	r0, r3, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	mov	ip, r2
	ldr	r1, .L23+0x10
	mov	sl, r1
	cmp	r0, ip
	bhi	.L17	@cond_branch
	lsl	r1, r6, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0xe
	add	r0, r1, r2
	b	.L22
.L24:
	.align	2, 0
.L23:
	.word	0x3ff
	.word	-0x400
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L18:
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r7
	lsl	r1, r1, #0x10
	asr	r0, r2, #0x10
	add	r0, r0, r4
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsr	r3, r1, #0x10
	mov	r0, #0x80
	lsl	r0, r0, #0xe
	add	r1, r1, r0
	lsr	r1, r1, #0x10
	cmp	r1, ip
	bhi	.L17	@cond_branch
	lsl	r1, r6, #0x10
	add	r0, r1, r0
.L22:
	lsr	r0, r0, #0x10
	add	r2, r1, #0
	cmp	r0, #0xe0
	bls	.L18	@cond_branch
.L17:
	strh	r3, [r5, #0x20]
	strh	r6, [r5, #0x22]
	mov	r1, sl
	ldrh	r0, [r1, #0x8]
	strh	r0, [r5, #0x2e]
	strh	r3, [r5, #0x30]
	mov	r2, r9
	strh	r2, [r5, #0x32]
	strh	r6, [r5, #0x34]
	mov	r3, r8
	strh	r3, [r5, #0x36]
	add	r0, r5, #0
	bl	sub_80A64EC
	mov	r7, sl
	ldrh	r0, [r7, #0xa]
	strh	r0, [r5, #0x34]
	ldrh	r0, [r7, #0xc]
	strh	r0, [r5, #0x36]
	ldr	r0, .L25
	str	r0, [r5, #0x1c]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	sub_810B848
.Lfe3:
	.size	 sub_810B6C4,.Lfe3-sub_810B6C4
	.align	2, 0
	.type	 sub_810B848,function
	.thumb_func
sub_810B848:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L28	@cond_branch
	ldrh	r1, [r4, #0x30]
	ldrh	r2, [r4, #0x38]
	add	r1, r1, r2
	strh	r1, [r4, #0x38]
	ldrh	r0, [r4, #0x32]
	ldrh	r2, [r4, #0x3a]
	add	r0, r0, r2
	strh	r0, [r4, #0x3a]
	strh	r1, [r4, #0x24]
	strh	r0, [r4, #0x26]
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	mov	r2, #0x34
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x24]
	add	r0, r0, r1
	strh	r0, [r4, #0x24]
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	mov	r2, #0x34
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x36]
	ldrh	r2, [r4, #0x3c]
	add	r0, r0, r2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x3c]
	ldrh	r0, [r4, #0x2e]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	b	.L29
.L28:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L29:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_810B848,.Lfe4-sub_810B848
	.align	2, 0
	.type	 AnimIcePunchSwirlingParticle,function
	.thumb_func
AnimIcePunchSwirlingParticle:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L31
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2e]
	mov	r0, #0x3c
	strh	r0, [r4, #0x30]
	mov	r0, #0x9
	strh	r0, [r4, #0x32]
	mov	r0, #0x1e
	strh	r0, [r4, #0x34]
	mov	r0, #0xfe
	lsl	r0, r0, #0x8
	strh	r0, [r4, #0x36]
	ldr	r1, .L31+0x4
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
	ldr	r1, .L31+0x8
	str	r1, [r4, #0x1c]
	add	r0, r4, #0
	bl	_call_via_r1
	pop	{r4}
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gBattleAnimArgs
	.word	DestroyAnimSprite
	.word	TranslateSpriteInGrowingCircleOverDuration
.Lfe5:
	.size	 AnimIcePunchSwirlingParticle,.Lfe5-AnimIcePunchSwirlingParticle
	.align	2, 0
	.type	 AnimIceBeamParticle,function
	.thumb_func
AnimIceBeamParticle:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r0, .L36
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x32]
	ldr	r0, .L36+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L34	@cond_branch
	ldr	r0, .L36+0x8
	ldrh	r1, [r4, #0x32]
	ldrh	r0, [r0, #0x4]
	sub	r1, r1, r0
	strh	r1, [r4, #0x32]
	b	.L35
.L37:
	.align	2, 0
.L36:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L34:
	ldr	r0, .L38
	ldrh	r0, [r0, #0x4]
	ldrh	r1, [r4, #0x32]
	add	r0, r0, r1
	strh	r0, [r4, #0x32]
.L35:
	ldr	r0, .L38+0x4
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	ldr	r1, .L38
	lsr	r0, r0, #0x18
	ldrh	r2, [r1, #0x6]
	add	r0, r0, r2
	strh	r0, [r4, #0x36]
	ldrh	r0, [r1, #0x8]
	strh	r0, [r4, #0x2e]
	ldr	r1, .L38+0x8
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
	ldr	r0, .L38+0xc
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
	.word	DestroyAnimSprite
	.word	StartAnimLinearTranslation
.Lfe6:
	.size	 AnimIceBeamParticle,.Lfe6-AnimIceBeamParticle
	.align	2, 0
	.globl	AnimIceEffectParticle
	.type	 AnimIceEffectParticle,function
	.thumb_func
AnimIceEffectParticle:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L44
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L41	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimTarget
	b	.L42
.L45:
	.align	2, 0
.L44:
	.word	gBattleAnimArgs
.L41:
	ldr	r0, .L46
	ldrb	r0, [r0]
	add	r2, r4, #0
	add	r2, r2, #0x20
	add	r3, r4, #0
	add	r3, r3, #0x22
	mov	r1, #0x1
	bl	SetAverageBattlerPositions
	ldr	r0, .L46+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L43	@cond_branch
	ldrh	r0, [r5]
	neg	r0, r0
	strh	r0, [r5]
.L43:
	ldrh	r0, [r5]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
.L42:
	ldr	r1, .L46+0x8
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
	ldr	r0, .L46+0xc
	str	r0, [r4, #0x1c]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	AnimFlickerIceEffectParticle
	.word	RunStoredCallbackWhenAffineAnimEnds
.Lfe7:
	.size	 AnimIceEffectParticle,.Lfe7-AnimIceEffectParticle
	.align	2, 0
	.type	 AnimFlickerIceEffectParticle,function
	.thumb_func
AnimFlickerIceEffectParticle:
	push	{lr}
	add	r3, r0, #0
	mov	r0, #0x3e
	add	r0, r0, r3
	mov	ip, r0
	ldrb	r2, [r0]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	bne	.L49	@cond_branch
	add	r0, r3, #0
	bl	DestroySpriteAndMatrix
.L49:
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 AnimFlickerIceEffectParticle,.Lfe8-AnimFlickerIceEffectParticle
	.align	2, 0
	.type	 AnimSwirlingSnowball,function
	.thumb_func
AnimSwirlingSnowball:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r6, .L71
	ldrh	r0, [r6, #0x8]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x22]
	strh	r0, [r5, #0x34]
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L51	@cond_branch
	ldr	r4, .L71+0x4
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x32]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r6, [r6, #0x6]
	add	r0, r0, r6
	strh	r0, [r5, #0x36]
	b	.L52
.L72:
	.align	2, 0
.L71:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
.L51:
	ldr	r0, .L73
	ldrb	r0, [r0]
	add	r2, r5, #0
	add	r2, r2, #0x32
	add	r3, r5, #0
	add	r3, r3, #0x36
	mov	r1, #0x1
	bl	SetAverageBattlerPositions
.L52:
	ldr	r0, .L73+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L53	@cond_branch
	ldr	r0, .L73+0x8
	ldrh	r1, [r5, #0x32]
	ldrh	r0, [r0, #0x4]
	sub	r1, r1, r0
	strh	r1, [r5, #0x32]
	b	.L54
.L74:
	.align	2, 0
.L73:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L53:
	ldr	r0, .L75
	ldrh	r0, [r0, #0x4]
	ldrh	r2, [r5, #0x32]
	add	r0, r0, r2
	strh	r0, [r5, #0x32]
.L54:
	add	r7, r5, #0
	add	r7, r7, #0x2e
	add	r2, r7, #0
	mov	r1, sp
	mov	r4, #0x7
.L58:
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L58	@cond_branch
	add	r0, r5, #0
	bl	InitAnimFastLinearTranslationWithSpeed
	ldrh	r0, [r5, #0x30]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x32]
	eor	r0, r0, r1
	strh	r0, [r5, #0x32]
.L62:
	mov	r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r5, #0
	bl	AnimFastTranslateLinear
	mov	r0, #0x20
	ldrsh	r1, [r5, r0]
	mov	r2, #0x24
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	add	r1, r1, #0x10
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bhi	.L61	@cond_branch
	mov	r0, #0x22
	ldrsh	r1, [r5, r0]
	mov	r2, #0x26
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	cmp	r1, #0xa0
	bgt	.L61	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L62	@cond_branch
.L61:
	ldrh	r0, [r5, #0x24]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x26]
	ldrh	r2, [r5, #0x22]
	add	r0, r0, r2
	strh	r0, [r5, #0x22]
	strh	r1, [r5, #0x26]
	strh	r1, [r5, #0x24]
	ldr	r6, .L75+0x4
	ldr	r1, .L75+0x8
	mov	r3, sp
	add	r2, r7, #0
	mov	r4, #0x7
.L69:
	ldrh	r0, [r3]
	strh	r0, [r2]
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L69	@cond_branch
	str	r6, [r5, #0x1c]
	add	r0, r5, #0
	bl	StoreSpriteCallbackInData6
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gBattleAnimArgs
	.word	sub_80A718C
	.word	AnimSwirlingSnowball_Step1
.Lfe9:
	.size	 AnimSwirlingSnowball,.Lfe9-AnimSwirlingSnowball
	.align	2, 0
	.globl	AnimSwirlingSnowball_Step1
	.type	 AnimSwirlingSnowball_Step1,function
	.thumb_func
AnimSwirlingSnowball_Step1:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x24]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	mov	r5, #0x0
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	strh	r5, [r4, #0x26]
	strh	r5, [r4, #0x24]
	mov	r0, #0x80
	strh	r0, [r4, #0x2e]
	ldr	r0, .L80
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	ldr	r1, .L80+0x4
	cmp	r0, #0
	beq	.L78	@cond_branch
	mov	r1, #0x14
.L78:
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	strh	r0, [r4, #0x34]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0xf
	bl	Cos
	strh	r0, [r4, #0x36]
	strh	r5, [r4, #0x38]
	ldr	r1, .L80+0x8
	str	r1, [r4, #0x1c]
	add	r0, r4, #0
	bl	_call_via_r1
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L81:
	.align	2, 0
.L80:
	.word	gBattleAnimAttacker
	.word	0xffec
	.word	AnimSwirlingSnowball_Step2
.Lfe10:
	.size	 AnimSwirlingSnowball_Step1,.Lfe10-AnimSwirlingSnowball_Step1
	.align	2, 0
	.type	 AnimSwirlingSnowball_Step2,function
	.thumb_func
AnimSwirlingSnowball_Step2:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L87
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	ldr	r1, .L87+0x4
	cmp	r0, #0
	beq	.L83	@cond_branch
	mov	r1, #0x14
.L83:
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1f
	bgt	.L85	@cond_branch
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	ldrh	r1, [r4, #0x34]
	sub	r0, r0, r1
	strh	r0, [r4, #0x24]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0xf
	bl	Cos
	ldrh	r1, [r4, #0x36]
	sub	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x10
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	b	.L86
.L88:
	.align	2, 0
.L87:
	.word	gBattleAnimAttacker
	.word	0xffec
.L85:
	ldrh	r0, [r4, #0x24]
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	mov	r1, #0x0
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	strh	r1, [r4, #0x26]
	strh	r1, [r4, #0x24]
	strh	r1, [r4, #0x36]
	strh	r1, [r4, #0x34]
	ldr	r0, .L89
	str	r0, [r4, #0x1c]
.L86:
	pop	{r4}
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	AnimSwirlingSnowball_End
.Lfe11:
	.size	 AnimSwirlingSnowball_Step2,.Lfe11-AnimSwirlingSnowball_Step2
	.align	2, 0
	.type	 AnimSwirlingSnowball_End,function
	.thumb_func
AnimSwirlingSnowball_End:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
	add	r0, r4, #0
	bl	AnimFastTranslateLinear
	mov	r1, #0x20
	ldrsh	r0, [r4, r1]
	mov	r2, #0x24
	ldrsh	r1, [r4, r2]
	add	r0, r0, r1
	add	r0, r0, #0x10
	mov	r1, #0x88
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bhi	.L93	@cond_branch
	mov	r1, #0x22
	ldrsh	r0, [r4, r1]
	mov	r2, #0x26
	ldrsh	r1, [r4, r2]
	add	r1, r0, r1
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bgt	.L93	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L92	@cond_branch
.L93:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L92:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 AnimSwirlingSnowball_End,.Lfe12-AnimSwirlingSnowball_End
	.align	2, 0
	.globl	AnimMoveParticleBeyondTarget
	.type	 AnimMoveParticleBeyondTarget,function
	.thumb_func
AnimMoveParticleBeyondTarget:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r1, .L115
	ldrh	r0, [r1, #0x8]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x22]
	strh	r0, [r5, #0x34]
	mov	r2, #0xe
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L95	@cond_branch
	ldr	r4, .L115+0x4
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x32]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x36]
	b	.L96
.L116:
	.align	2, 0
.L115:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
.L95:
	ldr	r0, .L117
	ldrb	r0, [r0]
	add	r2, r5, #0
	add	r2, r2, #0x32
	add	r3, r5, #0
	add	r3, r3, #0x36
	mov	r1, #0x1
	bl	SetAverageBattlerPositions
.L96:
	ldr	r0, .L117+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L97	@cond_branch
	ldr	r0, .L117+0x8
	ldrh	r1, [r5, #0x32]
	ldrh	r2, [r0, #0x4]
	sub	r1, r1, r2
	strh	r1, [r5, #0x32]
	add	r1, r0, #0
	b	.L98
.L118:
	.align	2, 0
.L117:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L97:
	ldr	r1, .L119
	ldrh	r0, [r1, #0x4]
	ldrh	r2, [r5, #0x32]
	add	r0, r0, r2
	strh	r0, [r5, #0x32]
.L98:
	ldrh	r0, [r1, #0x6]
	ldrh	r1, [r5, #0x36]
	add	r0, r0, r1
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	InitAnimFastLinearTranslationWithSpeed
	add	r7, r5, #0
	add	r7, r7, #0x2e
	add	r2, r7, #0
	mov	r1, sp
	mov	r4, #0x7
.L102:
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L102	@cond_branch
	ldrh	r0, [r5, #0x30]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x32]
	eor	r0, r0, r1
	strh	r0, [r5, #0x32]
.L106:
	mov	r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r5, #0
	bl	AnimFastTranslateLinear
	mov	r2, #0x20
	ldrsh	r1, [r5, r2]
	mov	r2, #0x24
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	add	r1, r1, #0x10
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bhi	.L105	@cond_branch
	mov	r0, #0x22
	ldrsh	r1, [r5, r0]
	mov	r2, #0x26
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	cmp	r1, #0xa0
	bgt	.L105	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L106	@cond_branch
.L105:
	ldrh	r0, [r5, #0x24]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x26]
	ldrh	r2, [r5, #0x22]
	add	r0, r0, r2
	strh	r0, [r5, #0x22]
	strh	r1, [r5, #0x26]
	strh	r1, [r5, #0x24]
	ldr	r1, .L119
	ldr	r6, .L119+0x4
	mov	r3, sp
	add	r2, r7, #0
	mov	r4, #0x7
.L113:
	ldrh	r0, [r3]
	strh	r0, [r2]
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L113	@cond_branch
	ldrh	r0, [r1, #0xa]
	strh	r0, [r5, #0x38]
	ldrh	r0, [r1, #0xc]
	strh	r0, [r5, #0x3a]
	str	r6, [r5, #0x1c]
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L120:
	.align	2, 0
.L119:
	.word	gBattleAnimArgs
	.word	AnimWiggleParticleTowardsTarget
.Lfe13:
	.size	 AnimMoveParticleBeyondTarget,.Lfe13-AnimMoveParticleBeyondTarget
	.align	2, 0
	.type	 AnimWiggleParticleTowardsTarget,function
	.thumb_func
AnimWiggleParticleTowardsTarget:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AnimFastTranslateLinear
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L122	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
.L122:
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x3a]
	ldrh	r2, [r4, #0x3c]
	add	r0, r0, r2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x3c]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	bne	.L123	@cond_branch
	mov	r2, #0x20
	ldrsh	r0, [r4, r2]
	mov	r2, #0x24
	ldrsh	r1, [r4, r2]
	add	r0, r0, r1
	add	r0, r0, #0x10
	mov	r1, #0x88
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bhi	.L125	@cond_branch
	mov	r0, #0x22
	ldrsh	r1, [r4, r0]
	mov	r2, #0x26
	ldrsh	r0, [r4, r2]
	add	r1, r1, r0
	cmp	r1, #0xa0
	bgt	.L125	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L123	@cond_branch
.L125:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L123:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 AnimWiggleParticleTowardsTarget,.Lfe14-AnimWiggleParticleTowardsTarget
	.align	2, 0
	.type	 AnimWaveFromCenterOfTarget,function
	.thumb_func
AnimWaveFromCenterOfTarget:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L127	@cond_branch
	ldr	r5, .L133
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L128	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	InitSpritePosToAnimTarget
	b	.L129
.L134:
	.align	2, 0
.L133:
	.word	gBattleAnimArgs
.L128:
	ldr	r0, .L135
	ldrb	r0, [r0]
	add	r2, r4, #0
	add	r2, r2, #0x20
	add	r3, r4, #0
	add	r3, r3, #0x22
	mov	r1, #0x0
	bl	SetAverageBattlerPositions
	ldr	r0, .L135+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L130	@cond_branch
	ldrh	r0, [r5]
	neg	r0, r0
	strh	r0, [r5]
.L130:
	ldrh	r0, [r5]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
.L129:
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	b	.L131
.L136:
	.align	2, 0
.L135:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
.L127:
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L131	@cond_branch
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L131:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 AnimWaveFromCenterOfTarget,.Lfe15-AnimWaveFromCenterOfTarget
	.align	2, 0
	.type	 InitSwirlingFogAnim,function
	.thumb_func
InitSwirlingFogAnim:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r6, .L155
	mov	r1, #0x8
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L138	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L139	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	InitSpritePosToAnimAttacker
	b	.L140
.L156:
	.align	2, 0
.L155:
	.word	gBattleAnimArgs
.L139:
	ldr	r4, .L157
	ldrb	r0, [r4]
	add	r2, r5, #0
	add	r2, r2, #0x20
	add	r3, r5, #0
	add	r3, r3, #0x22
	mov	r1, #0x0
	bl	SetAverageBattlerPositions
	ldrb	r0, [r4]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L141	@cond_branch
	ldrh	r0, [r5, #0x20]
	ldrh	r1, [r6]
	sub	r0, r0, r1
	b	.L152
.L158:
	.align	2, 0
.L157:
	.word	gBattleAnimAttacker
.L141:
	ldrh	r0, [r6]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
.L152:
	strh	r0, [r5, #0x20]
	ldr	r0, .L159
	ldrh	r0, [r0, #0x2]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
.L140:
	ldr	r0, .L159+0x4
	b	.L153
.L160:
	.align	2, 0
.L159:
	.word	gBattleAnimArgs
	.word	gBattleAnimAttacker
.L138:
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L144	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	InitSpritePosToAnimTarget
	b	.L145
.L144:
	ldr	r4, .L161
	ldrb	r0, [r4]
	add	r2, r5, #0
	add	r2, r2, #0x20
	add	r3, r5, #0
	add	r3, r3, #0x22
	mov	r1, #0x0
	bl	SetAverageBattlerPositions
	ldrb	r0, [r4]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L146	@cond_branch
	ldrh	r0, [r5, #0x20]
	ldrh	r1, [r6]
	sub	r0, r0, r1
	b	.L154
.L162:
	.align	2, 0
.L161:
	.word	gBattleAnimTarget
.L146:
	ldrh	r0, [r6]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
.L154:
	strh	r0, [r5, #0x20]
	ldr	r0, .L163
	ldrh	r0, [r0, #0x2]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
.L145:
	ldr	r0, .L163+0x4
.L153:
	ldrb	r0, [r0]
	strh	r0, [r5, #0x3c]
	ldr	r0, .L163
	mov	r1, #0xa
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.L149	@cond_branch
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L148	@cond_branch
.L149:
	mov	r0, #0x20
	b	.L150
.L164:
	.align	2, 0
.L163:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
.L148:
	mov	r0, #0x40
.L150:
	strh	r0, [r5, #0x3a]
	ldr	r0, .L165
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L151	@cond_branch
	ldrh	r0, [r5, #0x22]
	add	r0, r0, #0x8
	strh	r0, [r5, #0x22]
.L151:
	ldr	r1, .L165+0x4
	ldrh	r0, [r1, #0x6]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r5, #0x30]
	strh	r0, [r5, #0x32]
	ldrh	r0, [r5, #0x22]
	strh	r0, [r5, #0x34]
	ldrh	r1, [r1, #0x4]
	add	r0, r0, r1
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	InitAnimLinearTranslation
	mov	r0, #0x40
	strh	r0, [r5, #0x38]
	ldr	r1, .L165+0x8
	str	r1, [r5, #0x1c]
	add	r0, r5, #0
	bl	_call_via_r1
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L166:
	.align	2, 0
.L165:
	.word	gBattleAnimTarget
	.word	gBattleAnimArgs
	.word	AnimSwirlingFogAnim
.Lfe16:
	.size	 InitSwirlingFogAnim,.Lfe16-InitSwirlingFogAnim
	.align	2, 0
	.type	 AnimSwirlingFogAnim,function
	.thumb_func
AnimSwirlingFogAnim:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AnimTranslateLinear
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L168	@cond_branch
	mov	r1, #0x38
	ldrsh	r0, [r4, r1]
	mov	r2, #0x3a
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x24]
	add	r0, r0, r1
	strh	r0, [r4, #0x24]
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	mov	r1, #0x6
	neg	r1, r1
	bl	Cos
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x7f
	bhi	.L169	@cond_branch
	ldrh	r0, [r4, #0x3c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSpriteBGPriority
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	b	.L170
.L169:
	ldrh	r0, [r4, #0x3c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSpriteBGPriority
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x5]
.L170:
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x3
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x38]
	b	.L171
.L168:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L171:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 AnimSwirlingFogAnim,.Lfe17-AnimSwirlingFogAnim
	.align	2, 0
	.globl	AnimTask_HazeScrollingFog
	.type	 AnimTask_HazeScrollingFog,function
	.thumb_func
AnimTask_HazeScrollingFog:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L174
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetAnimBgAttribute
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L173	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x1
	bl	SetAnimBgAttribute
.L173:
	ldr	r0, .L174+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r4, .L174+0x8
	strh	r1, [r4]
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	ldrh	r1, [r4]
	mov	r0, #0x16
	bl	SetGpuReg
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, sp
	ldrb	r0, [r0, #0x9]
	ldr	r1, .L174+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r3, sp
	ldrh	r3, [r3, #0xa]
	bl	LoadBgTiles
	ldr	r1, .L174+0x10
	mov	r0, sp
	mov	r2, #0x0
	bl	AnimLoadCompressedBgTilemapHandleContest
	ldr	r0, .L174+0x14
	mov	r1, sp
	ldrb	r1, [r1, #0x8]
	lsl	r1, r1, #0x4
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L174+0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L174+0x1c
	str	r1, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L175:
	.align	2, 0
.L174:
	.word	0x3f42
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gWeatherFogHorizontalTiles
	.word	gBattleAnimFogTilemap
	.word	gUnknown_083970E8
	.word	gTasks
	.word	AnimTask_Haze2
.Lfe18:
	.size	 AnimTask_HazeScrollingFog,.Lfe18-AnimTask_HazeScrollingFog
	.align	2, 0
	.type	 AnimTask_Haze2,function
	.thumb_func
AnimTask_Haze2:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L191
	ldr	r2, .L191+0x4
	add	r0, r2, #0
	ldrh	r2, [r1]
	add	r0, r0, r2
	strh	r0, [r1]
	ldr	r1, .L191+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x20
	ldrsh	r0, [r0, r2]
	add	r2, r1, #0
	cmp	r0, #0x4
	bls	.LCB1924
	b	.L177	@long jump
.LCB1924:
	lsl	r0, r0, #0x2
	ldr	r1, .L191+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L192:
	.align	2, 0
.L191:
	.word	gBattle_BG1_X
	.word	0xffff
	.word	gTasks
	.word	.L189
	.align	2, 0
	.align	2, 0
.L189:
	.word	.L178
	.word	.L181
	.word	.L183
	.word	.L186
	.word	.L187
.L178:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r2
	ldrh	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strh	r0, [r4, #0x1c]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	beq	.LCB1958
	b	.L177	@long jump
.LCB1958:
	strh	r5, [r4, #0x1c]
	ldrh	r0, [r4, #0x1a]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1a]
	ldr	r1, .L193
	mov	r2, #0x1a
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r1, [r0]
	strh	r1, [r4, #0x1e]
	mov	r0, #0x10
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r1, #0x1e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	bne	.L177	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	strh	r5, [r4, #0x1e]
	b	.L177
.L194:
	.align	2, 0
.L193:
	.word	sUnknown_08595C5C
.L181:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r2
	ldrh	r0, [r1, #0x1e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x1e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x51
	bne	.L177	@cond_branch
	mov	r0, #0x9
	strh	r0, [r1, #0x1e]
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
	b	.L177
.L183:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r2
	ldrh	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1c]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bne	.L177	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x1c]
	ldrh	r1, [r4, #0x1e]
	sub	r1, r1, #0x1
	strh	r1, [r4, #0x1e]
	mov	r0, #0x10
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r2, #0x1e
	ldrsh	r1, [r4, r2]
	cmp	r1, #0
	bne	.L177	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	strh	r1, [r4, #0x1e]
	b	.L177
.L186:
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, #0x1
	bl	sub_80A6C68
	mov	r0, #0x2
	bl	sub_80A6C68
	ldr	r0, .L195
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
.L187:
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L188	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x0
	bl	SetAnimBgAttribute
.L188:
	ldr	r0, .L195+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L195+0x8
	strh	r1, [r0]
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
.L177:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L196:
	.align	2, 0
.L195:
	.word	gTasks
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
.Lfe19:
	.size	 AnimTask_Haze2,.Lfe19-AnimTask_Haze2
	.align	2, 0
	.globl	AnimThrowMistBall
	.type	 AnimThrowMistBall,function
	.thumb_func
AnimThrowMistBall:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L198
	ldrb	r0, [r5]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x20]
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x22]
	ldr	r0, .L198+0x4
	str	r0, [r4, #0x1c]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	gBattleAnimAttacker
	.word	TranslateAnimSpriteToTargetMonLocation
.Lfe20:
	.size	 AnimThrowMistBall,.Lfe20-AnimThrowMistBall
	.align	2, 0
	.globl	AnimTask_LoadMistTiles
	.type	 AnimTask_LoadMistTiles,function
	.thumb_func
AnimTask_LoadMistTiles:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L202
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetAnimBgAttribute
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L201	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x1
	bl	SetAnimBgAttribute
.L201:
	ldr	r0, .L202+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r4, .L202+0x8
	strh	r1, [r4]
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	ldrh	r1, [r4]
	mov	r0, #0x16
	bl	SetGpuReg
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, sp
	ldrb	r0, [r0, #0x9]
	ldr	r1, .L202+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r3, sp
	ldrh	r3, [r3, #0xa]
	bl	LoadBgTiles
	ldr	r1, .L202+0x10
	mov	r0, sp
	mov	r2, #0x0
	bl	AnimLoadCompressedBgTilemapHandleContest
	ldr	r0, .L202+0x14
	mov	r1, sp
	ldrb	r1, [r1, #0x8]
	lsl	r1, r1, #0x4
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L202+0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L202+0x1c
	strh	r1, [r0, #0x26]
	ldr	r1, .L202+0x20
	str	r1, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	0x3f42
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gWeatherFogHorizontalTiles
	.word	gBattleAnimFogTilemap
	.word	gUnknown_083970E8
	.word	gTasks
	.word	0xffff
	.word	AnimTask_OverlayFogTiles
.Lfe21:
	.size	 AnimTask_LoadMistTiles,.Lfe21-AnimTask_LoadMistTiles
	.align	2, 0
	.type	 AnimTask_OverlayFogTiles,function
	.thumb_func
AnimTask_OverlayFogTiles:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L218
	ldr	r3, .L218+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r3
	ldrh	r0, [r1, #0x26]
	ldrh	r5, [r2]
	add	r0, r0, r5
	strh	r0, [r2]
	mov	r2, #0x20
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x4
	bls	.LCB2296
	b	.L205	@long jump
.LCB2296:
	lsl	r0, r0, #0x2
	ldr	r1, .L218+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L219:
	.align	2, 0
.L218:
	.word	gBattle_BG1_X
	.word	gTasks
	.word	.L216
	.align	2, 0
	.align	2, 0
.L216:
	.word	.L206
	.word	.L208
	.word	.L210
	.word	.L213
	.word	.L214
.L206:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r3
	ldrh	r0, [r4, #0x1a]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1a]
	ldr	r1, .L220
	mov	r5, #0x1a
	ldrsh	r0, [r4, r5]
	add	r0, r0, r1
	ldrb	r1, [r0]
	strh	r1, [r4, #0x1e]
	mov	r0, #0x11
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r1, #0x1e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x5
	bne	.L205	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	mov	r0, #0x0
	strh	r0, [r4, #0x1e]
	b	.L205
.L221:
	.align	2, 0
.L220:
	.word	sUnknown_08595C88
.L208:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r3
	ldrh	r0, [r1, #0x1e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x1e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x51
	bne	.L205	@cond_branch
	mov	r0, #0x5
	strh	r0, [r1, #0x1e]
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
	b	.L205
.L210:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r3
	ldrh	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1c]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bne	.L205	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x1c]
	ldrh	r1, [r4, #0x1e]
	sub	r1, r1, #0x1
	strh	r1, [r4, #0x1e]
	mov	r0, #0x10
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r2, #0x1e
	ldrsh	r1, [r4, r2]
	cmp	r1, #0
	bne	.L205	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	strh	r1, [r4, #0x1e]
	b	.L205
.L213:
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, #0x1
	bl	sub_80A6C68
	mov	r0, #0x2
	bl	sub_80A6C68
	ldr	r0, .L222
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
.L214:
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L215	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x0
	bl	SetAnimBgAttribute
.L215:
	ldr	r0, .L222+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L222+0x8
	strh	r1, [r0]
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
.L205:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gTasks
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
.Lfe22:
	.size	 AnimTask_OverlayFogTiles,.Lfe22-AnimTask_OverlayFogTiles
	.align	2, 0
	.type	 InitPoisonGasCloudAnim,function
	.thumb_func
InitPoisonGasCloudAnim:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	ldr	r6, .L232
	ldrh	r0, [r6]
	strh	r0, [r5, #0x2e]
	ldr	r0, .L232+0x4
	mov	r8, r0
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	add	r4, r0, #0
	ldr	r7, .L232+0x8
	ldrb	r0, [r7]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bcs	.L225	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	strh	r0, [r5, #0x3c]
.L225:
	ldr	r3, .L232+0xc
	ldrb	r0, [r7]
	add	r0, r0, r3
	ldrb	r1, [r0]
	mov	r2, #0x1
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L226	@cond_branch
	ldrh	r0, [r6, #0x2]
	neg	r0, r0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x6]
	neg	r0, r0
	strh	r0, [r6, #0x6]
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L227	@cond_branch
	mov	r1, r8
	ldrb	r0, [r1]
	add	r0, r0, r3
	ldrb	r1, [r0]
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L227	@cond_branch
	mov	r0, #0x1
	bl	GetAnimBattlerSpriteId
	ldr	r2, .L232+0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x43
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	add	r1, r5, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
.L227:
	mov	r0, #0x1
	strh	r0, [r5, #0x3a]
.L226:
	ldr	r4, .L232+0x4
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x20]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x22]
	ldr	r6, .L232
	mov	r1, #0xe
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L228	@cond_branch
	ldrh	r0, [r6, #0x2]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r4, .L232+0x8
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x6]
	add	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrh	r0, [r6, #0x4]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x34]
	ldrb	r0, [r4]
	mov	r1, #0x3
	b	.L231
.L233:
	.align	2, 0
.L232:
	.word	gBattleAnimArgs
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	gBattlerPositions
	.word	gSprites
.L228:
	ldrh	r0, [r6, #0x2]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r4, .L234
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x6]
	add	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrh	r0, [r6, #0x4]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x34]
	ldrb	r0, [r4]
	mov	r1, #0x1
.L231:
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r6, [r6, #0x8]
	add	r0, r0, r6
	strh	r0, [r5, #0x36]
	ldrb	r0, [r4]
	bl	GetBattlerSpriteBGPriority
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldrh	r1, [r5, #0x3c]
	orr	r0, r0, r1
	strh	r0, [r5, #0x3c]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L230	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3a]
	add	r1, r5, #0
	add	r1, r1, #0x43
	mov	r0, #0x80
	strb	r0, [r1]
.L230:
	add	r0, r5, #0
	bl	InitAnimLinearTranslation
	ldr	r0, .L234+0x4
	str	r0, [r5, #0x1c]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L235:
	.align	2, 0
.L234:
	.word	gBattleAnimTarget
	.word	MovePoisonGasCloud
.Lfe23:
	.size	 InitPoisonGasCloudAnim,.Lfe23-InitPoisonGasCloudAnim
	.align	2, 0
	.type	 MovePoisonGasCloud,function
	.thumb_func
MovePoisonGasCloud:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x3c]
	mov	r5, #0xff
	mov	r1, #0xff
	and	r1, r1, r0
	cmp	r1, #0x1
	beq	.L246	@cond_branch
	cmp	r1, #0x1
	bgt	.L263	@cond_branch
	cmp	r1, #0
	beq	.L238	@cond_branch
	b	.L237
.L263:
	cmp	r1, #0x2
	bne	.LCB2732
	b	.L258	@long jump
.LCB2732:
	b	.L237
.L238:
	add	r0, r4, #0
	bl	AnimTranslateLinear
	ldr	r1, .L270
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	asr	r0, r0, #0x4
	ldrh	r2, [r4, #0x24]
	add	r0, r0, r2
	strh	r0, [r4, #0x24]
	mov	r1, #0x3a
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L239	@cond_branch
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x8
	b	.L264
.L271:
	.align	2, 0
.L270:
	.word	gSineTable
.L239:
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x8
.L264:
	and	r0, r0, r5
	strh	r0, [r4, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	ble	.LCB2775
	b	.L237	@long jump
.LCB2775:
	mov	r5, #0x50
	strh	r5, [r4, #0x2e]
	ldr	r6, .L272
	ldrb	r0, [r6]
	mov	r1, #0x0
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x20]
	strh	r0, [r4, #0x30]
	strh	r0, [r4, #0x32]
	ldrh	r0, [r4, #0x26]
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
	strh	r0, [r4, #0x34]
	add	r0, r0, #0x1d
	strh	r0, [r4, #0x36]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L244	@cond_branch
	ldr	r1, .L272+0x4
	ldrb	r0, [r6]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L244	@cond_branch
	mov	r0, #0xcc
	strh	r0, [r4, #0x38]
	b	.L243
.L273:
	.align	2, 0
.L272:
	.word	gBattleAnimTarget
	.word	gBattlerPositions
.L244:
	strh	r5, [r4, #0x38]
.L243:
	mov	r0, #0x0
	strh	r0, [r4, #0x26]
	ldr	r1, .L274
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	asr	r0, r0, #0x3
	strh	r0, [r4, #0x24]
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x38]
	add	r0, r4, #0
	bl	InitAnimLinearTranslation
	b	.L237
.L275:
	.align	2, 0
.L274:
	.word	gSineTable
.L246:
	add	r0, r4, #0
	bl	AnimTranslateLinear
	ldr	r1, .L276
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	asr	r0, r0, #0x3
	ldrh	r2, [r4, #0x24]
	add	r0, r0, r2
	strh	r0, [r4, #0x24]
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	add	r0, r0, #0x40
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	neg	r0, r0
	asr	r0, r0, #0x8
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L247	@cond_branch
	ldrh	r1, [r4, #0x38]
	add	r0, r1, #0
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r3, r1, #0
	cmp	r0, #0x7f
	bhi	.L248	@cond_branch
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	b	.L265
.L277:
	.align	2, 0
.L276:
	.word	gSineTable
.L248:
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	add	r1, r1, #0x1
.L265:
	mov	r0, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	add	r0, r3, #0x4
	b	.L266
.L247:
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x7f
	bhi	.L251	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x80
	b	.L267
.L251:
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x8c
.L267:
	strb	r0, [r1]
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x4
.L266:
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bgt	.L237	@cond_branch
	mov	r5, #0x0
	mov	r0, #0xc0
	lsl	r0, r0, #0x2
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x24]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	strh	r0, [r4, #0x34]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x36]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L256	@cond_branch
	ldr	r1, .L278
	ldr	r0, .L278+0x4
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L256	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	b	.L269
.L279:
	.align	2, 0
.L278:
	.word	gBattlerPositions
	.word	gBattleAnimTarget
.L256:
	ldr	r0, .L280
.L269:
	strh	r0, [r4, #0x32]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x3c]
	strh	r1, [r4, #0x26]
	strh	r1, [r4, #0x24]
	add	r0, r4, #0
	bl	sub_80A6FD4
	b	.L237
.L281:
	.align	2, 0
.L280:
	.word	0xfff0
.L258:
	add	r0, r4, #0
	bl	AnimTranslateLinear
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L237	@cond_branch
	ldrb	r0, [r4, #0x1]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L260	@cond_branch
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
.L260:
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r1, .L282
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L237:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L283:
	.align	2, 0
.L282:
	.word	gAnimVisualTaskCount
.Lfe24:
	.size	 MovePoisonGasCloud,.Lfe24-MovePoisonGasCloud
	.align	2, 0
	.globl	AnimTask_Hail
	.type	 AnimTask_Hail,function
	.thumb_func
AnimTask_Hail:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L285
	add	r1, r1, r0
	ldr	r0, .L285+0x4
	str	r0, [r1]
	bx	lr
.L286:
	.align	2, 0
.L285:
	.word	gTasks
	.word	AnimTask_Hail2
.Lfe25:
	.size	 AnimTask_Hail,.Lfe25-AnimTask_Hail
	.align	2, 0
	.type	 AnimTask_Hail2,function
	.thumb_func
AnimTask_Hail2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L305
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r5, [r4, r0]
	cmp	r5, #0x1
	beq	.L291	@cond_branch
	cmp	r5, #0x1
	bgt	.L303	@cond_branch
	cmp	r5, #0
	beq	.L289	@cond_branch
	b	.L288
.L306:
	.align	2, 0
.L305:
	.word	gTasks
.L303:
	cmp	r5, #0x2
	beq	.L299	@cond_branch
	b	.L288
.L289:
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L288	@cond_branch
	strh	r5, [r4, #0x10]
	strh	r5, [r4, #0x12]
	strh	r5, [r4, #0xc]
	b	.L304
.L291:
	ldrh	r1, [r4, #0x12]
	mov	r3, #0x12
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	bne	.L292	@cond_branch
	ldrb	r0, [r4, #0xe]
	ldrb	r1, [r4, #0xc]
	mov	r3, #0x1
	bl	GenerateHailParticle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L293	@cond_branch
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
.L293:
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L294	@cond_branch
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L295	@cond_branch
.L304:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L288
.L295:
	ldrh	r0, [r4, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L288
.L294:
	strh	r5, [r4, #0x12]
	b	.L288
.L292:
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x12]
	b	.L288
.L299:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L288	@cond_branch
	add	r0, r2, #0
	bl	DestroyAnimVisualTask
.L288:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 AnimTask_Hail2,.Lfe26-AnimTask_Hail2
	.align	2, 0
	.type	 GenerateHailParticle,function
	.thumb_func
GenerateHailParticle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	ldr	r1, .L321
	lsr	r0, r0, #0x16
	add	r4, r0, r1
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x1c
	mov	r8, r0
	cmp	r0, #0x2
	beq	.L308	@cond_branch
	ldrh	r0, [r4, #0x2]
	lsl	r0, r0, #0x14
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L309	@cond_branch
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r5, #0
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r1, r8
	cmp	r1, #0
	beq	.L311	@cond_branch
	cmp	r1, #0x1
	beq	.L312	@cond_branch
	b	.L316
.L322:
	.align	2, 0
.L321:
	.word	sHailCoordData
.L311:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	sub	r1, r1, r0
	b	.L320
.L312:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r0
.L320:
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	b	.L316
.L309:
.L308:
	ldrh	r0, [r4]
	lsl	r0, r0, #0x16
	asr	r0, r0, #0x6
	lsr	r7, r0, #0x10
	ldr	r0, [r4]
	lsl	r0, r0, #0xc
	asr	r0, r0, #0x16
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L316:
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r0, r0, #0x8
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	sub	r1, r1, r0
	ldr	r0, .L323
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x8
	neg	r2, r2
	mov	r3, #0x12
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x40
	beq	.L317	@cond_branch
	lsl	r4, r5, #0x4
	add	r4, r4, r5
	lsl	r4, r4, #0x2
	ldr	r0, .L323+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, r9
	bl	StartSpriteAffineAnim
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	strh	r0, [r4, #0x2e]
	strh	r7, [r4, #0x34]
	strh	r6, [r4, #0x36]
	mov	r1, r9
	strh	r1, [r4, #0x38]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x3a]
	mov	r1, sl
	strh	r1, [r4, #0x3c]
	mov	r0, #0x1
	b	.L319
.L324:
	.align	2, 0
.L323:
	.word	gHailParticleSpriteTemplate
	.word	gSprites
.L317:
	mov	r0, #0x0
.L319:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 GenerateHailParticle,.Lfe27-GenerateHailParticle
	.align	2, 0
	.type	 AnimHailBegin,function
	.thumb_func
AnimHailBegin:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x20]
	ldrh	r1, [r4, #0x22]
	add	r2, r1, #0
	add	r2, r2, #0x8
	strh	r2, [r4, #0x22]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x34
	ldrsh	r1, [r4, r3]
	cmp	r0, r1
	bge	.L326	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	blt	.L325	@cond_branch
.L326:
	mov	r3, #0x2e
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	bne	.L327	@cond_branch
	mov	r1, #0x38
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L327	@cond_branch
	ldr	r0, .L330
	mov	r2, #0x34
	ldrsh	r1, [r4, r2]
	mov	r3, #0x36
	ldrsh	r2, [r4, r3]
	add	r3, r4, #0
	add	r3, r3, #0x43
	ldrb	r3, [r3]
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x2e]
	cmp	r0, #0x40
	beq	.L328	@cond_branch
	ldr	r2, .L330+0x4
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r2, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L330+0x8
	str	r1, [r0]
	mov	r3, #0x2e
	ldrsh	r1, [r4, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r4, #0x3a]
	strh	r1, [r0, #0x3a]
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r4, #0x3c]
	strh	r1, [r0, #0x3c]
.L328:
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	b	.L325
.L331:
	.align	2, 0
.L330:
	.word	gIceCrystalHitLargeSpriteTemplate
	.word	gSprites
	.word	AnimHailContinue
.L327:
	ldr	r3, .L332
	mov	r2, #0x3c
	ldrsh	r1, [r4, r2]
	lsl	r1, r1, #0x1
	mov	r0, #0x3a
	ldrsh	r2, [r4, r0]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r3, r3, #0x8
	add	r1, r1, r3
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
.L325:
	pop	{r4}
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	gTasks
.Lfe28:
	.size	 AnimHailBegin,.Lfe28-AnimHailBegin
	.align	2, 0
	.type	 AnimHailContinue,function
	.thumb_func
AnimHailContinue:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	bne	.L335	@cond_branch
	ldr	r3, .L336
	mov	r0, #0x3c
	ldrsh	r1, [r4, r0]
	lsl	r1, r1, #0x1
	mov	r0, #0x3a
	ldrsh	r2, [r4, r0]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r3, r3, #0x8
	add	r1, r1, r3
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
.L335:
	pop	{r4}
	pop	{r0}
	bx	r0
.L337:
	.align	2, 0
.L336:
	.word	gTasks
.Lfe29:
	.size	 AnimHailContinue,.Lfe29-AnimHailContinue
	.align	2, 0
	.type	 InitIceBallAnim,function
	.thumb_func
InitIceBallAnim:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L341
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x14]
	lsr	r0, r1, #0x4
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	sub	r0, r0, r1
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L339	@cond_branch
	mov	r1, #0x4
.L339:
	add	r0, r5, #0
	bl	StartSpriteAffineAnim
	add	r0, r5, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r6, .L341+0x4
	ldrh	r0, [r6, #0x8]
	strh	r0, [r5, #0x2e]
	ldr	r0, .L341+0x8
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L340	@cond_branch
	ldrh	r0, [r6, #0x4]
	neg	r0, r0
	strh	r0, [r6, #0x4]
.L340:
	ldr	r4, .L341+0xc
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x4]
	add	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x6]
	add	r0, r0, r1
	strh	r0, [r5, #0x36]
	ldrh	r0, [r6, #0xa]
	strh	r0, [r5, #0x38]
	add	r0, r5, #0
	bl	InitAnimArcTranslation
	ldr	r0, .L341+0x10
	str	r0, [r5, #0x1c]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L342:
	.align	2, 0
.L341:
	.word	gAnimDisableStructPtr
	.word	gBattleAnimArgs
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	AnimThrowIceBall
.Lfe30:
	.size	 InitIceBallAnim,.Lfe30-InitIceBallAnim
	.align	2, 0
	.type	 AnimThrowIceBall,function
	.thumb_func
AnimThrowIceBall:
	push	{r4, lr}
	add	r4, r0, #0
	bl	TranslateAnimHorizontalArc
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L343	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r0, .L345
	str	r0, [r4, #0x1c]
	ldr	r1, .L345+0x4
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
.L343:
	pop	{r4}
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	RunStoredCallbackWhenAnimEnds
	.word	DestroyAnimSprite
.Lfe31:
	.size	 AnimThrowIceBall,.Lfe31-AnimThrowIceBall
	.align	2, 0
	.type	 InitIceBallParticle,function
	.thumb_func
InitIceBallParticle:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldrh	r2, [r4, #0x4]
	lsl	r1, r2, #0x16
	lsr	r1, r1, #0x16
	add	r1, r1, #0x8
	ldr	r3, .L349
	add	r0, r3, #0
	and	r1, r1, r0
	ldr	r0, .L349+0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r4, #0x4]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimTarget
	bl	Random2
	mov	r5, #0xff
	and	r5, r5, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r6, r0, #0
	orr	r5, r5, r6
	bl	Random2
	ldr	r1, .L349+0x8
	and	r1, r1, r0
	add	r0, r1, #0
	cmp	r0, #0xff
	ble	.L348	@cond_branch
	sub	r0, r6, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
.L348:
	strh	r5, [r4, #0x30]
	strh	r1, [r4, #0x32]
	ldr	r0, .L349+0xc
	str	r0, [r4, #0x1c]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L350:
	.align	2, 0
.L349:
	.word	0x3ff
	.word	-0x400
	.word	0x1ff
	.word	AnimIceBallParticle
.Lfe32:
	.size	 InitIceBallParticle,.Lfe32-InitIceBallParticle
	.align	2, 0
	.type	 AnimIceBallParticle,function
	.thumb_func
AnimIceBallParticle:
	push	{r4, lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	add	r3, r0, r1
	strh	r3, [r2, #0x34]
	ldrh	r1, [r2, #0x32]
	ldrh	r4, [r2, #0x36]
	add	r1, r1, r4
	strh	r1, [r2, #0x36]
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L352	@cond_branch
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x18
	neg	r0, r0
	b	.L355
.L352:
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x18
.L355:
	strh	r0, [r2, #0x24]
	ldrh	r0, [r2, #0x36]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	strh	r0, [r2, #0x26]
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x15
	bne	.L354	@cond_branch
	add	r0, r2, #0
	bl	DestroyAnimSprite
.L354:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 AnimIceBallParticle,.Lfe33-AnimIceBallParticle
	.align	2, 0
	.globl	AnimTask_GetIceBallCounter
	.type	 AnimTask_GetIceBallCounter,function
	.thumb_func
AnimTask_GetIceBallCounter:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L357
	ldrb	r3, [r1]
	lsl	r3, r3, #0x1
	add	r3, r3, r1
	ldr	r1, .L357+0x4
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x14]
	lsr	r2, r1, #0x4
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	sub	r2, r2, r1
	sub	r2, r2, #0x1
	strh	r2, [r3]
	bl	DestroyAnimVisualTask
	pop	{r0}
	bx	r0
.L358:
	.align	2, 0
.L357:
	.word	gBattleAnimArgs
	.word	gAnimDisableStructPtr
.Lfe34:
	.size	 AnimTask_GetIceBallCounter,.Lfe34-AnimTask_GetIceBallCounter
.text
	.align	2, 0

