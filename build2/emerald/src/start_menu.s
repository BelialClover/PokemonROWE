@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sSafariBallsWindowId,object
	.size	 sSafariBallsWindowId,1
sSafariBallsWindowId:
	.byte	0x0
	.type	 sBattlePyramidFloorWindowId,object
	.size	 sBattlePyramidFloorWindowId,1
sBattlePyramidFloorWindowId:
	.byte	0x0
	.type	 sStartMenuCursorPos,object
	.size	 sStartMenuCursorPos,1
sStartMenuCursorPos:
	.byte	0x0
	.type	 sNumStartMenuActions,object
	.size	 sNumStartMenuActions,1
sNumStartMenuActions:
	.byte	0x0
	.type	 sCurrentStartMenuActions,object
	.size	 sCurrentStartMenuActions,9
sCurrentStartMenuActions:
	.byte	0x0
	.space	8
	.type	 sInitStartMenuData,object
	.size	 sInitStartMenuData,2
sInitStartMenuData:
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sSaveDialogCallback,object
	.size	 sSaveDialogCallback,4
sSaveDialogCallback:
	.word	0x0
	.type	 sSaveDialogTimer,object
	.size	 sSaveDialogTimer,1
sSaveDialogTimer:
	.byte	0x0
	.type	 sSavingComplete,object
	.size	 sSavingComplete,1
sSavingComplete:
	.byte	0x0
	.type	 sSaveInfoWindowId,object
	.size	 sSaveInfoWindowId,1
sSaveInfoWindowId:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sSafariBallsWindowTemplate,object
	.size	 sSafariBallsWindowTemplate,8
sSafariBallsWindowTemplate:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x9
	.byte	0x4
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sPyramindFloorNames,object
sPyramindFloorNames:
	.word	gText_Floor1
	.word	gText_Floor2
	.word	gText_Floor3
	.word	gText_Floor4
	.word	gText_Floor5
	.word	gText_Floor6
	.word	gText_Floor7
	.word	gText_Peak
	.size	 sPyramindFloorNames,32
	.align	2, 0
	.type	 sPyramidFloorWindowTemplate_2,object
	.size	 sPyramidFloorWindowTemplate_2,8
sPyramidFloorWindowTemplate_2:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x4
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sPyramidFloorWindowTemplate_1,object
	.size	 sPyramidFloorWindowTemplate_1,8
sPyramidFloorWindowTemplate_1:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xc
	.byte	0x4
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sStartMenuItems,object
sStartMenuItems:
	.word	gText_MenuPokedex
	.word	StartMenuPokedexCallback
	.word	gText_MenuPokemon
	.word	StartMenuPokemonCallback
	.word	gText_MenuBag
	.word	StartMenuBagCallback
	.word	gText_MenuPokenav
	.word	StartMenuPokeNavCallback
	.word	gText_MenuPlayer
	.word	StartMenuPlayerNameCallback
	.word	gText_MenuSave
	.word	StartMenuSaveCallback
	.word	gText_MenuOption
	.word	StartMenuOptionCallback
	.word	gText_MenuExit
	.word	StartMenuExitCallback
	.word	gText_MenuRetire
	.word	StartMenuSafariZoneRetireCallback
	.word	gText_MenuPlayer
	.word	StartMenuLinkModePlayerNameCallback
	.word	gText_MenuRest
	.word	StartMenuSaveCallback
	.word	gText_MenuRetire
	.word	StartMenuBattlePyramidRetireCallback
	.word	gText_MenuBag
	.word	StartMenuBattlePyramidBagCallback
	.word	gText_MenuDexNav
	.word	StartMenuDexNavCallback
	.size	 sStartMenuItems,112
	.align	2, 0
	.type	 sUnknown_085105A8,object
	.size	 sUnknown_085105A8,4
sUnknown_085105A8:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sUnknown_085105AC,object
sUnknown_085105AC:
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x1a
	.byte	0x4
	.byte	0xf
	.short	0x194
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sUnknown_085105AC,16
	.align	2, 0
	.type	 sSaveInfoWindowTemplate,object
	.size	 sSaveInfoWindowTemplate,8
sSaveInfoWindowTemplate:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xe
	.byte	0xa
	.byte	0xf
	.short	0x8
.text
	.align	2, 0
	.globl	SetDexPokemonPokenavFlags
	.type	 SetDexPokemonPokenavFlags,function
	.thumb_func
SetDexPokemonPokenavFlags:
	push	{lr}
	ldr	r0, .L3
	bl	FlagSet
	mov	r0, #0x86
	lsl	r0, r0, #0x4
	bl	FlagSet
	ldr	r0, .L3+0x4
	bl	FlagSet
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x861
	.word	0x862
.Lfe1:
	.size	 SetDexPokemonPokenavFlags,.Lfe1-SetDexPokemonPokenavFlags
	.align	2, 0
	.type	 BuildStartMenuActions,function
	.thumb_func
BuildStartMenuActions:
	push	{lr}
	ldr	r0, .L18
	mov	r1, #0x0
	strb	r1, [r0]
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0x1
	bne	.L6	@cond_branch
	bl	BuildLinkModeStartMenu
	b	.L7
.L19:
	.align	2, 0
.L18:
	.word	sNumStartMenuActions
.L6:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L8	@cond_branch
	bl	BuildUnionRoomStartMenu
	b	.L7
.L8:
	bl	GetSafariZoneFlag
	cmp	r0, #0x1
	bne	.L10	@cond_branch
	bl	BuildSafariZoneStartMenu
	b	.L7
.L10:
	bl	InBattlePike
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L12	@cond_branch
	bl	BuildBattlePikeStartMenu
	b	.L7
.L12:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L14	@cond_branch
	bl	BuildBattlePyramidStartMenu
	b	.L7
.L14:
	bl	InMultiPartnerRoom
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L16	@cond_branch
	bl	BuildMultiPartnerRoomStartMenu
	b	.L7
.L16:
	bl	BuildNormalStartMenu
.L7:
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 BuildStartMenuActions,.Lfe2-BuildStartMenuActions
	.align	2, 0
	.type	 AddStartMenuAction,function
	.thumb_func
AddStartMenuAction:
	push	{lr}
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L21
	ldr	r1, .L21+0x4
	bl	AppendToList
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	sCurrentStartMenuActions
	.word	sNumStartMenuActions
.Lfe3:
	.size	 AddStartMenuAction,.Lfe3-AddStartMenuAction
	.align	2, 0
	.type	 BuildNormalStartMenu,function
	.thumb_func
BuildNormalStartMenu:
	push	{lr}
	ldr	r0, .L28
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L24	@cond_branch
	mov	r0, #0x0
	bl	AddStartMenuAction
.L24:
	ldr	r0, .L28+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L25	@cond_branch
	mov	r0, #0x55
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L25	@cond_branch
	mov	r0, #0xd
	bl	AddStartMenuAction
.L25:
	mov	r0, #0x86
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L26	@cond_branch
	mov	r0, #0x1
	bl	AddStartMenuAction
.L26:
	mov	r0, #0x2
	bl	AddStartMenuAction
	ldr	r0, .L28+0x8
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L27	@cond_branch
	mov	r0, #0x3
	bl	AddStartMenuAction
.L27:
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x5
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.L29:
	.align	2, 0
.L28:
	.word	0x861
	.word	0x88f
	.word	0x862
.Lfe4:
	.size	 BuildNormalStartMenu,.Lfe4-BuildNormalStartMenu
	.align	2, 0
	.type	 BuildSafariZoneStartMenu,function
	.thumb_func
BuildSafariZoneStartMenu:
	push	{lr}
	mov	r0, #0x8
	bl	AddStartMenuAction
	mov	r0, #0x0
	bl	AddStartMenuAction
	ldr	r0, .L32
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L31	@cond_branch
	mov	r0, #0x55
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L31	@cond_branch
	mov	r0, #0xd
	bl	AddStartMenuAction
.L31:
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x2
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	0x88f
.Lfe5:
	.size	 BuildSafariZoneStartMenu,.Lfe5-BuildSafariZoneStartMenu
	.align	2, 0
	.type	 BuildLinkModeStartMenu,function
	.thumb_func
BuildLinkModeStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x2
	bl	AddStartMenuAction
	ldr	r0, .L36
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L35	@cond_branch
	mov	r0, #0x3
	bl	AddStartMenuAction
.L35:
	mov	r0, #0x9
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	0x862
.Lfe6:
	.size	 BuildLinkModeStartMenu,.Lfe6-BuildLinkModeStartMenu
	.align	2, 0
	.type	 BuildUnionRoomStartMenu,function
	.thumb_func
BuildUnionRoomStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x2
	bl	AddStartMenuAction
	ldr	r0, .L40
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L39	@cond_branch
	mov	r0, #0x3
	bl	AddStartMenuAction
.L39:
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	0x862
.Lfe7:
	.size	 BuildUnionRoomStartMenu,.Lfe7-BuildUnionRoomStartMenu
	.align	2, 0
	.type	 BuildBattlePikeStartMenu,function
	.thumb_func
BuildBattlePikeStartMenu:
	push	{lr}
	mov	r0, #0x0
	bl	AddStartMenuAction
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 BuildBattlePikeStartMenu,.Lfe8-BuildBattlePikeStartMenu
	.align	2, 0
	.type	 BuildBattlePyramidStartMenu,function
	.thumb_func
BuildBattlePyramidStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0xc
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0xa
	bl	AddStartMenuAction
	mov	r0, #0xb
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 BuildBattlePyramidStartMenu,.Lfe9-BuildBattlePyramidStartMenu
	.align	2, 0
	.type	 BuildMultiPartnerRoomStartMenu,function
	.thumb_func
BuildMultiPartnerRoomStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 BuildMultiPartnerRoomStartMenu,.Lfe10-BuildMultiPartnerRoomStartMenu
	.align	2, 0
	.type	 ShowSafariBallsWindow,function
	.thumb_func
ShowSafariBallsWindow:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L46
	ldr	r0, .L46+0x4
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L46+0x8
	ldr	r1, .L46+0xc
	ldrb	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L46+0x10
	ldr	r1, .L46+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	sSafariBallsWindowId
	.word	sSafariBallsWindowTemplate
	.word	gStringVar1
	.word	gNumSafariBalls
	.word	gStringVar4
	.word	gText_SafariBallStock
.Lfe11:
	.size	 ShowSafariBallsWindow,.Lfe11-ShowSafariBallsWindow
	.align	2, 0
	.type	 ShowPyramidFloorWindow,function
	.thumb_func
ShowPyramidFloorWindow:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L52
	ldr	r0, [r0]
	ldr	r1, .L52+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0x7
	bne	.L49	@cond_branch
	ldr	r4, .L52+0x8
	ldr	r0, .L52+0xc
	b	.L51
.L53:
	.align	2, 0
.L52:
	.word	gSaveBlock2Ptr
	.word	0xc3a
	.word	sBattlePyramidFloorWindowId
	.word	sPyramidFloorWindowTemplate_1
.L49:
	ldr	r4, .L54
	ldr	r0, .L54+0x4
.L51:
	bl	AddWindow
	strb	r0, [r4]
	ldr	r4, .L54
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L54+0x8
	ldr	r2, .L54+0xc
	ldr	r1, .L54+0x10
	ldr	r1, [r1]
	ldr	r3, .L54+0x14
	add	r1, r1, r3
	ldrh	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L54+0x18
	ldr	r1, .L54+0x1c
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	sBattlePyramidFloorWindowId
	.word	sPyramidFloorWindowTemplate_2
	.word	gStringVar1
	.word	sPyramindFloorNames
	.word	gSaveBlock2Ptr
	.word	0xc3a
	.word	gStringVar4
	.word	gText_BattlePyramidFloor
.Lfe12:
	.size	 ShowPyramidFloorWindow,.Lfe12-ShowPyramidFloorWindow
	.align	2, 0
	.type	 RemoveExtraStartMenuWindows,function
	.thumb_func
RemoveExtraStartMenuWindows:
	push	{r4, lr}
	bl	GetSafariZoneFlag
	cmp	r0, #0
	beq	.L57	@cond_branch
	ldr	r4, .L59
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	RemoveWindow
.L57:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L58	@cond_branch
	ldr	r4, .L59+0x4
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
.L58:
	pop	{r4}
	pop	{r0}
	bx	r0
.L60:
	.align	2, 0
.L59:
	.word	sSafariBallsWindowId
	.word	sBattlePyramidFloorWindowId
.Lfe13:
	.size	 RemoveExtraStartMenuWindows,.Lfe13-RemoveExtraStartMenuWindows
	.align	2, 0
	.type	 PrintStartMenuActions,function
	.thumb_func
PrintStartMenuActions:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r8, r0
	add	r6, r1, #0
	ldrb	r2, [r0]
	ldr	r0, .L71
	mov	r9, r0
	ldr	r1, .L71+0x4
	mov	sl, r1
.L62:
	ldr	r0, .L71+0x8
	lsl	r2, r2, #0x18
	asr	r4, r2, #0x18
	add	r5, r4, r0
	ldrb	r0, [r5]
	lsl	r3, r0, #0x3
	mov	r0, r9
	add	r0, r0, #0x4
	add	r0, r3, r0
	ldr	r1, [r0]
	ldr	r0, .L71+0xc
	add	r7, r2, #0
	cmp	r1, r0
	bne	.L65	@cond_branch
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r5]
	lsl	r1, r1, #0x3
	add	r1, r1, r9
	ldr	r1, [r1]
	lsl	r3, r4, #0x4
	add	r3, r3, #0x9
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	r2, #0x8
	bl	PrintPlayerNameOnWindow
	b	.L66
.L72:
	.align	2, 0
.L71:
	.word	sStartMenuItems
	.word	gStringVar4
	.word	sCurrentStartMenuActions
	.word	StartMenuPlayerNameCallback
.L65:
	mov	r1, r9
	add	r0, r3, r1
	ldr	r1, [r0]
	mov	r0, sl
	bl	StringExpandPlaceholders
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x4
	add	r1, r1, #0x9
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r2, sl
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
.L66:
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r1, r7, r0
	lsr	r2, r1, #0x18
	asr	r1, r1, #0x18
	ldr	r0, .L73
	ldrb	r0, [r0]
	cmp	r1, r0
	bge	.L67	@cond_branch
	sub	r6, r6, #0x1
	cmp	r6, #0
	bne	.L62	@cond_branch
	mov	r1, r8
	strb	r2, [r1]
	mov	r0, #0x0
	b	.L70
.L74:
	.align	2, 0
.L73:
	.word	sNumStartMenuActions
.L67:
	mov	r0, r8
	strb	r2, [r0]
	mov	r0, #0x1
.L70:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 PrintStartMenuActions,.Lfe14-PrintStartMenuActions
	.align	2, 0
	.type	 InitStartMenuStep,function
	.thumb_func
InitStartMenuStep:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L90
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	add	r2, r0, #0
	cmp	r1, #0x5
	bhi	.L76	@cond_branch
	lsl	r0, r1, #0x2
	ldr	r1, .L90+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L91:
	.align	2, 0
.L90:
	.word	sInitStartMenuData
	.word	.L86
	.align	2, 0
	.align	2, 0
.L86:
	.word	.L77
	.word	.L78
	.word	.L79
	.word	.L80
	.word	.L83
	.word	.L85
.L77:
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L76
.L78:
	bl	BuildStartMenuActions
	ldr	r1, .L92
	b	.L89
.L93:
	.align	2, 0
.L92:
	.word	sInitStartMenuData
.L79:
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L94
	ldrb	r0, [r0]
	bl	sub_81979C4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r1, .L94+0x4
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	b	.L89
.L95:
	.align	2, 0
.L94:
	.word	sNumStartMenuActions
	.word	sInitStartMenuData
.L80:
	bl	GetSafariZoneFlag
	cmp	r0, #0
	beq	.L81	@cond_branch
	bl	ShowSafariBallsWindow
.L81:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L82	@cond_branch
	bl	ShowPyramidFloorWindow
.L82:
	ldr	r1, .L96
	b	.L89
.L97:
	.align	2, 0
.L96:
	.word	sInitStartMenuData
.L83:
	ldr	r4, .L98
	add	r0, r4, #0
	mov	r1, #0x2
	bl	PrintStartMenuActions
	cmp	r0, #0
	beq	.L76	@cond_branch
	sub	r1, r4, #0x1
.L89:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L76
.L99:
	.align	2, 0
.L98:
	.word	sInitStartMenuData+0x1
.L85:
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x10
	str	r1, [sp]
	ldr	r1, .L100
	ldrb	r1, [r1]
	str	r1, [sp, #0x4]
	ldr	r4, .L100+0x4
	ldrb	r1, [r4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x9
	bl	Menu_InitCursor
	strb	r0, [r4]
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	CopyWindowToVram
	mov	r0, #0x1
	b	.L88
.L101:
	.align	2, 0
.L100:
	.word	sNumStartMenuActions
	.word	sStartMenuCursorPos
.L76:
	mov	r0, #0x0
.L88:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 InitStartMenuStep,.Lfe15-InitStartMenuStep
	.align	2, 0
	.type	 InitStartMenu,function
	.thumb_func
InitStartMenu:
	push	{lr}
	ldr	r1, .L107
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
.L103:
	bl	InitStartMenuStep
	cmp	r0, #0
	beq	.L103	@cond_branch
	pop	{r0}
	bx	r0
.L108:
	.align	2, 0
.L107:
	.word	sInitStartMenuData
.Lfe16:
	.size	 InitStartMenu,.Lfe16-InitStartMenu
	.align	2, 0
	.type	 StartMenuTask,function
	.thumb_func
StartMenuTask:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	InitStartMenuStep
	cmp	r0, #0x1
	bne	.L110	@cond_branch
	add	r0, r4, #0
	bl	SwitchTaskToFollowupFunc
.L110:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 StartMenuTask,.Lfe17-StartMenuTask
	.align	2, 0
	.type	 CreateStartMenuTask,function
	.thumb_func
CreateStartMenuTask:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r1, .L112
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	ldr	r4, .L112+0x4
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	SetTaskFuncWithFollowupFunc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	sInitStartMenuData
	.word	StartMenuTask
.Lfe18:
	.size	 CreateStartMenuTask,.Lfe18-CreateStartMenuTask
	.align	2, 0
	.type	 FieldCB_ReturnToFieldStartMenu,function
	.thumb_func
FieldCB_ReturnToFieldStartMenu:
	push	{lr}
	bl	InitStartMenuStep
	cmp	r0, #0
	beq	.L115	@cond_branch
	bl	ReturnToFieldOpenStartMenu
	mov	r0, #0x1
	b	.L116
.L115:
	mov	r0, #0x0
.L116:
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 FieldCB_ReturnToFieldStartMenu,.Lfe19-FieldCB_ReturnToFieldStartMenu
	.align	2, 0
	.globl	ShowReturnToFieldStartMenu
	.type	 ShowReturnToFieldStartMenu,function
	.thumb_func
ShowReturnToFieldStartMenu:
	ldr	r1, .L118
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	ldr	r1, .L118+0x4
	ldr	r0, .L118+0x8
	str	r0, [r1]
	bx	lr
.L119:
	.align	2, 0
.L118:
	.word	sInitStartMenuData
	.word	gFieldCallback2
	.word	FieldCB_ReturnToFieldStartMenu
.Lfe20:
	.size	 ShowReturnToFieldStartMenu,.Lfe20-ShowReturnToFieldStartMenu
	.align	2, 0
	.globl	Task_ShowStartMenu
	.type	 Task_ShowStartMenu,function
	.thumb_func
Task_ShowStartMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L128
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L122	@cond_branch
	cmp	r0, #0x1
	beq	.L124	@cond_branch
	b	.L121
.L129:
	.align	2, 0
.L128:
	.word	gTasks
.L122:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L123	@cond_branch
	bl	SetUsingUnionRoomStartMenu
.L123:
	ldr	r1, .L130
	ldr	r0, .L130+0x4
	str	r0, [r1]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L121
.L131:
	.align	2, 0
.L130:
	.word	gMenuCallback
	.word	HandleStartMenuInput
.L124:
	ldr	r0, .L132
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L121	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L121:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	gMenuCallback
.Lfe21:
	.size	 Task_ShowStartMenu,.Lfe21-Task_ShowStartMenu
	.align	2, 0
	.globl	ShowStartMenu
	.type	 ShowStartMenu,function
	.thumb_func
ShowStartMenu:
	push	{lr}
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L135	@cond_branch
	bl	FreezeObjectEvents
	bl	sub_808B864
	bl	sub_808BCF4
.L135:
	ldr	r0, .L136
	bl	CreateStartMenuTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	Task_ShowStartMenu
.Lfe22:
	.size	 ShowStartMenu,.Lfe22-ShowStartMenu
	.align	2, 0
	.type	 HandleStartMenuInput,function
	.thumb_func
HandleStartMenuInput:
	push	{r4, lr}
	ldr	r4, .L148
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L139	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	bl	Menu_MoveCursor
	ldr	r1, .L148+0x4
	strb	r0, [r1]
.L139:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L140	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	Menu_MoveCursor
	ldr	r1, .L148+0x4
	strb	r0, [r1]
.L140:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L141	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L148+0x8
	ldr	r2, .L148+0xc
	ldr	r0, .L148+0x4
	ldrb	r0, [r0]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, .L148+0x10
	cmp	r1, r0
	bne	.L142	@cond_branch
	mov	r0, #0x0
	bl	GetNationalPokedexCount
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L147	@cond_branch
.L142:
	ldr	r3, .L148+0x14
	ldr	r1, .L148+0x8
	ldr	r2, .L148+0xc
	ldr	r0, .L148+0x4
	ldrb	r0, [r0]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	str	r1, [r3]
	ldr	r0, .L148+0x18
	cmp	r1, r0
	beq	.L147	@cond_branch
	ldr	r0, .L148+0x1c
	cmp	r1, r0
	beq	.L147	@cond_branch
	ldr	r0, .L148+0x20
	cmp	r1, r0
	beq	.L147	@cond_branch
	ldr	r0, .L148+0x24
	cmp	r1, r0
	beq	.L147	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	b	.L147
.L149:
	.align	2, 0
.L148:
	.word	gMain
	.word	sStartMenuCursorPos
	.word	sStartMenuItems
	.word	sCurrentStartMenuActions
	.word	StartMenuPokedexCallback
	.word	gMenuCallback
	.word	StartMenuSaveCallback
	.word	StartMenuExitCallback
	.word	StartMenuSafariZoneRetireCallback
	.word	StartMenuBattlePyramidRetireCallback
.L141:
	mov	r0, #0xa
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L145	@cond_branch
.L147:
	mov	r0, #0x0
	b	.L146
.L145:
	bl	RemoveExtraStartMenuWindows
	bl	HideStartMenu
	mov	r0, #0x1
.L146:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 HandleStartMenuInput,.Lfe23-HandleStartMenuInput
	.align	2, 0
	.type	 StartMenuPokedexCallback,function
	.thumb_func
StartMenuPokedexCallback:
	push	{lr}
	ldr	r0, .L153
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L151	@cond_branch
	mov	r0, #0x0
	b	.L152
.L154:
	.align	2, 0
.L153:
	.word	gPaletteFade
.L151:
	mov	r0, #0x29
	bl	IncrementGameStat
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L155
	bl	SetMainCallback2
	mov	r0, #0x1
.L152:
	pop	{r1}
	bx	r1
.L156:
	.align	2, 0
.L155:
	.word	CB2_OpenPokedex
.Lfe24:
	.size	 StartMenuPokedexCallback,.Lfe24-StartMenuPokedexCallback
	.align	2, 0
	.type	 StartMenuPokemonCallback,function
	.thumb_func
StartMenuPokemonCallback:
	push	{lr}
	ldr	r0, .L160
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L158	@cond_branch
	mov	r0, #0x0
	b	.L159
.L161:
	.align	2, 0
.L160:
	.word	gPaletteFade
.L158:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L162
	bl	SetMainCallback2
	mov	r0, #0x1
.L159:
	pop	{r1}
	bx	r1
.L163:
	.align	2, 0
.L162:
	.word	CB2_PartyMenuFromStartMenu
.Lfe25:
	.size	 StartMenuPokemonCallback,.Lfe25-StartMenuPokemonCallback
	.align	2, 0
	.type	 StartMenuBagCallback,function
	.thumb_func
StartMenuBagCallback:
	push	{lr}
	ldr	r0, .L167
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L165	@cond_branch
	mov	r0, #0x0
	b	.L166
.L168:
	.align	2, 0
.L167:
	.word	gPaletteFade
.L165:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L169
	bl	SetMainCallback2
	mov	r0, #0x1
.L166:
	pop	{r1}
	bx	r1
.L170:
	.align	2, 0
.L169:
	.word	CB2_BagMenuFromStartMenu
.Lfe26:
	.size	 StartMenuBagCallback,.Lfe26-StartMenuBagCallback
	.align	2, 0
	.type	 StartMenuPokeNavCallback,function
	.thumb_func
StartMenuPokeNavCallback:
	push	{lr}
	ldr	r0, .L174
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L172	@cond_branch
	mov	r0, #0x0
	b	.L173
.L175:
	.align	2, 0
.L174:
	.word	gPaletteFade
.L172:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L176
	bl	SetMainCallback2
	mov	r0, #0x1
.L173:
	pop	{r1}
	bx	r1
.L177:
	.align	2, 0
.L176:
	.word	CB2_InitPokeNav
.Lfe27:
	.size	 StartMenuPokeNavCallback,.Lfe27-StartMenuPokeNavCallback
	.align	2, 0
	.type	 StartMenuPlayerNameCallback,function
	.thumb_func
StartMenuPlayerNameCallback:
	push	{lr}
	ldr	r0, .L186
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L179	@cond_branch
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L181	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0
	beq	.L180	@cond_branch
.L181:
	ldr	r0, .L186+0x4
	bl	ShowPlayerTrainerCard
	b	.L182
.L187:
	.align	2, 0
.L186:
	.word	gPaletteFade
	.word	CB2_ReturnToFieldWithOpenMenu
.L180:
	ldr	r0, .L188
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L183	@cond_branch
	ldr	r0, .L188+0x4
	bl	ShowFrontierPass
	b	.L182
.L189:
	.align	2, 0
.L188:
	.word	0x8d2
	.word	CB2_ReturnToFieldWithOpenMenu
.L183:
	ldr	r0, .L190
	bl	ShowPlayerTrainerCard
.L182:
	mov	r0, #0x1
	b	.L185
.L191:
	.align	2, 0
.L190:
	.word	CB2_ReturnToFieldWithOpenMenu
.L179:
	mov	r0, #0x0
.L185:
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 StartMenuPlayerNameCallback,.Lfe28-StartMenuPlayerNameCallback
	.align	2, 0
	.type	 StartMenuSaveCallback,function
	.thumb_func
StartMenuSaveCallback:
	push	{lr}
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L193	@cond_branch
	bl	RemoveExtraStartMenuWindows
.L193:
	ldr	r1, .L194
	ldr	r0, .L194+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L195:
	.align	2, 0
.L194:
	.word	gMenuCallback
	.word	SaveStartCallback
.Lfe29:
	.size	 StartMenuSaveCallback,.Lfe29-StartMenuSaveCallback
	.align	2, 0
	.type	 StartMenuOptionCallback,function
	.thumb_func
StartMenuOptionCallback:
	push	{lr}
	ldr	r0, .L199
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L197	@cond_branch
	mov	r0, #0x0
	b	.L198
.L200:
	.align	2, 0
.L199:
	.word	gPaletteFade
.L197:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L201
	bl	SetMainCallback2
	ldr	r1, .L201+0x4
	ldr	r0, .L201+0x8
	str	r0, [r1, #0x8]
	mov	r0, #0x1
.L198:
	pop	{r1}
	bx	r1
.L202:
	.align	2, 0
.L201:
	.word	CB2_InitOptionMenu
	.word	gMain
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe30:
	.size	 StartMenuOptionCallback,.Lfe30-StartMenuOptionCallback
	.align	2, 0
	.type	 StartMenuExitCallback,function
	.thumb_func
StartMenuExitCallback:
	push	{lr}
	bl	RemoveExtraStartMenuWindows
	bl	HideStartMenu
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 StartMenuExitCallback,.Lfe31-StartMenuExitCallback
	.align	2, 0
	.type	 StartMenuSafariZoneRetireCallback,function
	.thumb_func
StartMenuSafariZoneRetireCallback:
	push	{lr}
	bl	RemoveExtraStartMenuWindows
	bl	HideStartMenu
	bl	SafariZoneRetirePrompt
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 StartMenuSafariZoneRetireCallback,.Lfe32-StartMenuSafariZoneRetireCallback
	.align	2, 0
	.type	 StartMenuLinkModePlayerNameCallback,function
	.thumb_func
StartMenuLinkModePlayerNameCallback:
	push	{lr}
	ldr	r0, .L208
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L206	@cond_branch
	mov	r0, #0x0
	b	.L207
.L209:
	.align	2, 0
.L208:
	.word	gPaletteFade
.L206:
	bl	PlayRainStoppingSoundEffect
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L210
	ldrb	r0, [r0]
	ldr	r1, .L210+0x4
	bl	ShowTrainerCardInLink
	mov	r0, #0x1
.L207:
	pop	{r1}
	bx	r1
.L211:
	.align	2, 0
.L210:
	.word	gLocalLinkPlayerId
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe33:
	.size	 StartMenuLinkModePlayerNameCallback,.Lfe33-StartMenuLinkModePlayerNameCallback
	.align	2, 0
	.type	 StartMenuBattlePyramidRetireCallback,function
	.thumb_func
StartMenuBattlePyramidRetireCallback:
	ldr	r1, .L213
	ldr	r0, .L213+0x4
	str	r0, [r1]
	mov	r0, #0x0
	bx	lr
.L214:
	.align	2, 0
.L213:
	.word	gMenuCallback
	.word	BattlePyramidRetireStartCallback
.Lfe34:
	.size	 StartMenuBattlePyramidRetireCallback,.Lfe34-StartMenuBattlePyramidRetireCallback
	.align	2, 0
	.globl	ShowBattlePyramidStartMenu
	.type	 ShowBattlePyramidStartMenu,function
	.thumb_func
ShowBattlePyramidStartMenu:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	bl	ScriptUnfreezeObjectEvents
	ldr	r0, .L216
	bl	CreateStartMenuTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L217:
	.align	2, 0
.L216:
	.word	Task_ShowStartMenu
.Lfe35:
	.size	 ShowBattlePyramidStartMenu,.Lfe35-ShowBattlePyramidStartMenu
	.align	2, 0
	.type	 StartMenuBattlePyramidBagCallback,function
	.thumb_func
StartMenuBattlePyramidBagCallback:
	push	{lr}
	ldr	r0, .L221
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L219	@cond_branch
	mov	r0, #0x0
	b	.L220
.L222:
	.align	2, 0
.L221:
	.word	gPaletteFade
.L219:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L223
	bl	SetMainCallback2
	mov	r0, #0x1
.L220:
	pop	{r1}
	bx	r1
.L224:
	.align	2, 0
.L223:
	.word	CB2_PyramidBagMenuFromStartMenu
.Lfe36:
	.size	 StartMenuBattlePyramidBagCallback,.Lfe36-StartMenuBattlePyramidBagCallback
	.align	2, 0
	.type	 SaveStartCallback,function
	.thumb_func
SaveStartCallback:
	push	{lr}
	bl	InitSave
	ldr	r1, .L226
	ldr	r0, .L226+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L227:
	.align	2, 0
.L226:
	.word	gMenuCallback
	.word	SaveCallback
.Lfe37:
	.size	 SaveStartCallback,.Lfe37-SaveStartCallback
	.align	2, 0
	.type	 SaveCallback,function
	.thumb_func
SaveCallback:
	push	{lr}
	bl	RunSaveCallback
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L233	@cond_branch
	cmp	r0, #0x1
	ble	.L229	@cond_branch
	cmp	r0, #0x2
	beq	.L231	@cond_branch
	cmp	r0, #0x3
	beq	.L233	@cond_branch
	b	.L229
.L231:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	bl	InitStartMenu
	ldr	r1, .L238
	ldr	r0, .L238+0x4
	str	r0, [r1]
	b	.L229
.L239:
	.align	2, 0
.L238:
	.word	gMenuCallback
	.word	HandleStartMenuInput
.L233:
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrameToTransparent
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	bl	SoftResetInBattlePyramid
	mov	r0, #0x1
	b	.L237
.L229:
	mov	r0, #0x0
.L237:
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 SaveCallback,.Lfe38-SaveCallback
	.align	2, 0
	.type	 BattlePyramidRetireStartCallback,function
	.thumb_func
BattlePyramidRetireStartCallback:
	push	{lr}
	bl	InitBattlePyramidRetire
	ldr	r1, .L241
	ldr	r0, .L241+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L242:
	.align	2, 0
.L241:
	.word	gMenuCallback
	.word	BattlePyramidRetireCallback
.Lfe39:
	.size	 BattlePyramidRetireStartCallback,.Lfe39-BattlePyramidRetireStartCallback
	.align	2, 0
	.type	 BattlePyramidRetireReturnCallback,function
	.thumb_func
BattlePyramidRetireReturnCallback:
	push	{lr}
	bl	InitStartMenu
	ldr	r1, .L244
	ldr	r0, .L244+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L245:
	.align	2, 0
.L244:
	.word	gMenuCallback
	.word	HandleStartMenuInput
.Lfe40:
	.size	 BattlePyramidRetireReturnCallback,.Lfe40-BattlePyramidRetireReturnCallback
	.align	2, 0
	.type	 BattlePyramidRetireCallback,function
	.thumb_func
BattlePyramidRetireCallback:
	push	{lr}
	bl	RunSaveCallback
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L248	@cond_branch
	cmp	r0, #0x1
	ble	.L247	@cond_branch
	cmp	r0, #0x2
	beq	.L250	@cond_branch
	b	.L247
.L248:
	bl	RemoveExtraStartMenuWindows
	ldr	r1, .L255
	ldr	r0, .L255+0x4
	str	r0, [r1]
	b	.L247
.L256:
	.align	2, 0
.L255:
	.word	gMenuCallback
	.word	BattlePyramidRetireReturnCallback
.L250:
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrameToTransparent
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	ldr	r0, .L257
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
	b	.L254
.L258:
	.align	2, 0
.L257:
	.word	BattlePyramid_Retire
.L247:
	mov	r0, #0x0
.L254:
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 BattlePyramidRetireCallback,.Lfe41-BattlePyramidRetireCallback
	.align	2, 0
	.type	 InitSave,function
	.thumb_func
InitSave:
	push	{lr}
	bl	save_serialize_map
	ldr	r1, .L260
	ldr	r0, .L260+0x4
	str	r0, [r1]
	ldr	r1, .L260+0x8
	mov	r0, #0x0
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L261:
	.align	2, 0
.L260:
	.word	sSaveDialogCallback
	.word	SaveConfirmSaveCallback
	.word	sSavingComplete
.Lfe42:
	.size	 InitSave,.Lfe42-InitSave
	.align	2, 0
	.type	 RunSaveCallback,function
	.thumb_func
RunSaveCallback:
	push	{lr}
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L263	@cond_branch
	ldr	r1, .L265
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L265+0x4
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L264
.L266:
	.align	2, 0
.L265:
	.word	sSavingComplete
	.word	sSaveDialogCallback
.L263:
	mov	r0, #0x0
.L264:
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 RunSaveCallback,.Lfe43-RunSaveCallback
	.align	2, 0
	.globl	SaveGame
	.type	 SaveGame,function
	.thumb_func
SaveGame:
	push	{lr}
	bl	InitSave
	ldr	r0, .L268
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L269:
	.align	2, 0
.L268:
	.word	SaveGameTask
.Lfe44:
	.size	 SaveGame,.Lfe44-SaveGame
	.align	2, 0
	.type	 ShowSaveMessage,function
	.thumb_func
ShowSaveMessage:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	ldr	r0, .L271
	add	r1, r2, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_819786C
	mov	r0, #0x1
	bl	AddTextPrinterForMessage_2
	ldr	r1, .L271+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L271+0x8
	str	r4, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L272:
	.align	2, 0
.L271:
	.word	gStringVar4
	.word	sSavingComplete
	.word	sSaveDialogCallback
.Lfe45:
	.size	 ShowSaveMessage,.Lfe45-ShowSaveMessage
	.align	2, 0
	.type	 SaveGameTask,function
	.thumb_func
SaveGameTask:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunSaveCallback
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L277	@cond_branch
	cmp	r1, #0x1
	bgt	.L281	@cond_branch
	cmp	r1, #0
	beq	.L273	@cond_branch
	b	.L274
.L281:
	cmp	r1, #0x3
	bgt	.L274	@cond_branch
	ldr	r1, .L282
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L274
.L283:
	.align	2, 0
.L282:
	.word	gSpecialVar_Result
.L277:
	ldr	r0, .L284
	strh	r1, [r0]
.L274:
	add	r0, r4, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L273:
	pop	{r4}
	pop	{r0}
	bx	r0
.L285:
	.align	2, 0
.L284:
	.word	gSpecialVar_Result
.Lfe46:
	.size	 SaveGameTask,.Lfe46-SaveGameTask
	.align	2, 0
	.type	 sub_80A0014,function
	.thumb_func
sub_80A0014:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 sub_80A0014,.Lfe47-sub_80A0014
	.align	2, 0
	.type	 HideSaveInfoWindow,function
	.thumb_func
HideSaveInfoWindow:
	push	{lr}
	bl	RemoveSaveInfoWindow
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 HideSaveInfoWindow,.Lfe48-HideSaveInfoWindow
	.align	2, 0
	.type	 SaveStartTimer,function
	.thumb_func
SaveStartTimer:
	ldr	r1, .L289
	mov	r0, #0x3c
	strb	r0, [r1]
	bx	lr
.L290:
	.align	2, 0
.L289:
	.word	sSaveDialogTimer
.Lfe49:
	.size	 SaveStartTimer,.Lfe49-SaveStartTimer
	.align	2, 0
	.type	 SaveSuccesTimer,function
	.thumb_func
SaveSuccesTimer:
	push	{lr}
	ldr	r1, .L295
	ldrb	r0, [r1]
	sub	r2, r0, #0x1
	strb	r2, [r1]
	ldr	r0, .L295+0x4
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L292	@cond_branch
	lsl	r0, r2, #0x18
	cmp	r0, #0
	beq	.L293	@cond_branch
	mov	r0, #0x0
	b	.L294
.L296:
	.align	2, 0
.L295:
	.word	sSaveDialogTimer
	.word	gMain
.L292:
	mov	r0, #0x5
	bl	PlaySE
.L293:
	mov	r0, #0x1
.L294:
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 SaveSuccesTimer,.Lfe50-SaveSuccesTimer
	.align	2, 0
	.type	 SaveErrorTimer,function
	.thumb_func
SaveErrorTimer:
	push	{lr}
	ldr	r1, .L302
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L298	@cond_branch
	ldr	r0, .L302+0x4
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L299	@cond_branch
	mov	r0, #0x1
	b	.L301
.L303:
	.align	2, 0
.L302:
	.word	sSaveDialogTimer
	.word	gMain
.L298:
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L299:
	mov	r0, #0x0
.L301:
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 SaveErrorTimer,.Lfe51-SaveErrorTimer
	.align	2, 0
	.type	 SaveConfirmSaveCallback,function
	.thumb_func
SaveConfirmSaveCallback:
	push	{lr}
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	bl	RemoveStartMenuWindow
	bl	ShowSaveInfoWindow
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L305	@cond_branch
	ldr	r0, .L307
	ldr	r1, .L307+0x4
	bl	ShowSaveMessage
	b	.L306
.L308:
	.align	2, 0
.L307:
	.word	gText_BattlePyramidConfirmRest
	.word	SaveYesNoCallback
.L305:
	ldr	r0, .L309
	ldr	r1, .L309+0x4
	bl	ShowSaveMessage
.L306:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L310:
	.align	2, 0
.L309:
	.word	gText_ConfirmSave
	.word	SaveYesNoCallback
.Lfe52:
	.size	 SaveConfirmSaveCallback,.Lfe52-SaveConfirmSaveCallback
	.align	2, 0
	.type	 SaveYesNoCallback,function
	.thumb_func
SaveYesNoCallback:
	push	{lr}
	bl	DisplayYesNoMenuDefaultYes
	ldr	r1, .L312
	ldr	r0, .L312+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L313:
	.align	2, 0
.L312:
	.word	sSaveDialogCallback
	.word	SaveConfirmInputCallback
.Lfe53:
	.size	 SaveYesNoCallback,.Lfe53-SaveYesNoCallback
	.align	2, 0
	.type	 SaveConfirmInputCallback,function
	.thumb_func
SaveConfirmInputCallback:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L316	@cond_branch
	cmp	r1, #0
	bgt	.L327	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L324	@cond_branch
	b	.L315
.L327:
	cmp	r1, #0x1
	beq	.L324	@cond_branch
	b	.L315
.L316:
	ldr	r0, .L330
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L319	@cond_branch
	cmp	r0, #0x2
	bne	.L329	@cond_branch
.L319:
	ldr	r0, .L330+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L320	@cond_branch
.L329:
	ldr	r1, .L330+0x8
	ldr	r0, .L330+0xc
	str	r0, [r1]
	b	.L315
.L331:
	.align	2, 0
.L330:
	.word	gSaveFileStatus
	.word	gDifferentSaveFile
	.word	sSaveDialogCallback
	.word	SaveFileExistsCallback
.L320:
	ldr	r1, .L332
	ldr	r0, .L332+0x4
	str	r0, [r1]
	b	.L315
.L333:
	.align	2, 0
.L332:
	.word	sSaveDialogCallback
	.word	SaveSavingMessageCallback
.L324:
	bl	HideSaveInfoWindow
	bl	sub_80A0014
	mov	r0, #0x2
	b	.L328
.L315:
	mov	r0, #0x0
.L328:
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 SaveConfirmInputCallback,.Lfe54-SaveConfirmInputCallback
	.align	2, 0
	.type	 SaveFileExistsCallback,function
	.thumb_func
SaveFileExistsCallback:
	push	{lr}
	ldr	r0, .L337
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L335	@cond_branch
	ldr	r0, .L337+0x4
	ldr	r1, .L337+0x8
	bl	ShowSaveMessage
	b	.L336
.L338:
	.align	2, 0
.L337:
	.word	gDifferentSaveFile
	.word	gText_DifferentSaveFile
	.word	SaveConfirmOverwriteDefaultNoCallback
.L335:
	ldr	r1, .L339
	ldr	r0, .L339+0x4
	str	r0, [r1]
.L336:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L340:
	.align	2, 0
.L339:
	.word	sSaveDialogCallback
	.word	SaveSavingMessageCallback
.Lfe55:
	.size	 SaveFileExistsCallback,.Lfe55-SaveFileExistsCallback
	.align	2, 0
	.type	 SaveConfirmOverwriteDefaultNoCallback,function
	.thumb_func
SaveConfirmOverwriteDefaultNoCallback:
	push	{lr}
	mov	r0, #0x1
	bl	DisplayYesNoMenuWithDefault
	ldr	r1, .L342
	ldr	r0, .L342+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L343:
	.align	2, 0
.L342:
	.word	sSaveDialogCallback
	.word	SaveOverwriteInputCallback
.Lfe56:
	.size	 SaveConfirmOverwriteDefaultNoCallback,.Lfe56-SaveConfirmOverwriteDefaultNoCallback
	.align	2, 0
	.type	 SaveConfirmOverwriteCallback,function
	.thumb_func
SaveConfirmOverwriteCallback:
	push	{lr}
	bl	DisplayYesNoMenuDefaultYes
	ldr	r1, .L345
	ldr	r0, .L345+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L346:
	.align	2, 0
.L345:
	.word	sSaveDialogCallback
	.word	SaveOverwriteInputCallback
.Lfe57:
	.size	 SaveConfirmOverwriteCallback,.Lfe57-SaveConfirmOverwriteCallback
	.align	2, 0
	.type	 SaveOverwriteInputCallback,function
	.thumb_func
SaveOverwriteInputCallback:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L349	@cond_branch
	cmp	r1, #0
	bgt	.L354	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L351	@cond_branch
	b	.L348
.L354:
	cmp	r1, #0x1
	beq	.L351	@cond_branch
	b	.L348
.L349:
	ldr	r1, .L356
	ldr	r0, .L356+0x4
	str	r0, [r1]
	b	.L348
.L357:
	.align	2, 0
.L356:
	.word	sSaveDialogCallback
	.word	SaveSavingMessageCallback
.L351:
	bl	HideSaveInfoWindow
	bl	sub_80A0014
	mov	r0, #0x2
	b	.L355
.L348:
	mov	r0, #0x0
.L355:
	pop	{r1}
	bx	r1
.Lfe58:
	.size	 SaveOverwriteInputCallback,.Lfe58-SaveOverwriteInputCallback
	.align	2, 0
	.type	 SaveSavingMessageCallback,function
	.thumb_func
SaveSavingMessageCallback:
	push	{lr}
	ldr	r0, .L359
	ldr	r1, .L359+0x4
	bl	ShowSaveMessage
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L360:
	.align	2, 0
.L359:
	.word	gText_SavingDontTurnOff
	.word	SaveDoSaveCallback
.Lfe59:
	.size	 SaveSavingMessageCallback,.Lfe59-SaveSavingMessageCallback
	.align	2, 0
	.type	 SaveDoSaveCallback,function
	.thumb_func
SaveDoSaveCallback:
	push	{r4, lr}
	mov	r0, #0x0
	bl	IncrementGameStat
	bl	PausePyramidChallenge
	ldr	r4, .L366
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L362	@cond_branch
	mov	r0, #0x4
	bl	TrySavingData
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r0, #0x0
	strb	r0, [r4]
	b	.L363
.L367:
	.align	2, 0
.L366:
	.word	gDifferentSaveFile
.L362:
	mov	r0, #0x0
	bl	TrySavingData
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
.L363:
	cmp	r1, #0x1
	bne	.L364	@cond_branch
	ldr	r0, .L368
	ldr	r1, .L368+0x4
	bl	ShowSaveMessage
	b	.L365
.L369:
	.align	2, 0
.L368:
	.word	gText_PlayerSavedGame
	.word	SaveSuccessCallback
.L364:
	ldr	r0, .L370
	ldr	r1, .L370+0x4
	bl	ShowSaveMessage
.L365:
	bl	SaveStartTimer
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L371:
	.align	2, 0
.L370:
	.word	gText_SaveError
	.word	SaveErrorCallback
.Lfe60:
	.size	 SaveDoSaveCallback,.Lfe60-SaveDoSaveCallback
	.align	2, 0
	.type	 SaveSuccessCallback,function
	.thumb_func
SaveSuccessCallback:
	push	{lr}
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L373	@cond_branch
	mov	r0, #0x37
	bl	PlaySE
	ldr	r1, .L374
	ldr	r0, .L374+0x4
	str	r0, [r1]
.L373:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L375:
	.align	2, 0
.L374:
	.word	sSaveDialogCallback
	.word	SaveReturnSuccessCallback
.Lfe61:
	.size	 SaveSuccessCallback,.Lfe61-SaveSuccessCallback
	.align	2, 0
	.type	 SaveReturnSuccessCallback,function
	.thumb_func
SaveReturnSuccessCallback:
	push	{lr}
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L377	@cond_branch
	bl	SaveSuccesTimer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L377	@cond_branch
	bl	HideSaveInfoWindow
	mov	r0, #0x1
	b	.L379
.L377:
	mov	r0, #0x0
.L379:
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 SaveReturnSuccessCallback,.Lfe62-SaveReturnSuccessCallback
	.align	2, 0
	.type	 SaveErrorCallback,function
	.thumb_func
SaveErrorCallback:
	push	{lr}
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L381	@cond_branch
	mov	r0, #0x16
	bl	PlaySE
	ldr	r1, .L382
	ldr	r0, .L382+0x4
	str	r0, [r1]
.L381:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L383:
	.align	2, 0
.L382:
	.word	sSaveDialogCallback
	.word	SaveReturnErrorCallback
.Lfe63:
	.size	 SaveErrorCallback,.Lfe63-SaveErrorCallback
	.align	2, 0
	.type	 SaveReturnErrorCallback,function
	.thumb_func
SaveReturnErrorCallback:
	push	{lr}
	bl	SaveErrorTimer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L385	@cond_branch
	bl	HideSaveInfoWindow
	mov	r0, #0x3
	b	.L387
.L385:
	mov	r0, #0x0
.L387:
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 SaveReturnErrorCallback,.Lfe64-SaveReturnErrorCallback
	.align	2, 0
	.type	 InitBattlePyramidRetire,function
	.thumb_func
InitBattlePyramidRetire:
	ldr	r1, .L389
	ldr	r0, .L389+0x4
	str	r0, [r1]
	ldr	r1, .L389+0x8
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L390:
	.align	2, 0
.L389:
	.word	sSaveDialogCallback
	.word	BattlePyramidConfirmRetireCallback
	.word	sSavingComplete
.Lfe65:
	.size	 InitBattlePyramidRetire,.Lfe65-InitBattlePyramidRetire
	.align	2, 0
	.type	 BattlePyramidConfirmRetireCallback,function
	.thumb_func
BattlePyramidConfirmRetireCallback:
	push	{lr}
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	bl	RemoveStartMenuWindow
	ldr	r0, .L392
	ldr	r1, .L392+0x4
	bl	ShowSaveMessage
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L393:
	.align	2, 0
.L392:
	.word	gText_BattlePyramidConfirmRetire
	.word	BattlePyramidRetireYesNoCallback
.Lfe66:
	.size	 BattlePyramidConfirmRetireCallback,.Lfe66-BattlePyramidConfirmRetireCallback
	.align	2, 0
	.type	 BattlePyramidRetireYesNoCallback,function
	.thumb_func
BattlePyramidRetireYesNoCallback:
	push	{lr}
	mov	r0, #0x1
	bl	DisplayYesNoMenuWithDefault
	ldr	r1, .L395
	ldr	r0, .L395+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L396:
	.align	2, 0
.L395:
	.word	sSaveDialogCallback
	.word	BattlePyramidRetireInputCallback
.Lfe67:
	.size	 BattlePyramidRetireYesNoCallback,.Lfe67-BattlePyramidRetireYesNoCallback
	.align	2, 0
	.type	 BattlePyramidRetireInputCallback,function
	.thumb_func
BattlePyramidRetireInputCallback:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L399	@cond_branch
	cmp	r1, #0
	bgt	.L404	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L401	@cond_branch
	b	.L398
.L404:
	cmp	r1, #0x1
	beq	.L401	@cond_branch
	b	.L398
.L399:
	mov	r0, #0x2
	b	.L405
.L401:
	bl	sub_80A0014
	mov	r0, #0x1
	b	.L405
.L398:
	mov	r0, #0x0
.L405:
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 BattlePyramidRetireInputCallback,.Lfe68-BattlePyramidRetireInputCallback
	.align	2, 0
	.type	 sub_80A03D8,function
	.thumb_func
sub_80A03D8:
	push	{lr}
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe69:
	.size	 sub_80A03D8,.Lfe69-sub_80A03D8
	.align	2, 0
	.type	 InitSaveWindowAfterLinkBattle,function
	.thumb_func
InitSaveWindowAfterLinkBattle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r8, r0
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.LCB2992
	b	.L408	@long jump
.LCB2992:
	lsl	r0, r0, #0x2
	ldr	r1, .L422
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L423:
	.align	2, 0
.L422:
	.word	.L419
	.align	2, 0
	.align	2, 0
.L419:
	.word	.L409
	.word	.L415
	.word	.L416
	.word	.L417
	.word	.L418
.L409:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	mov	r2, #0xa0
	lsl	r2, r2, #0x13
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L424
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	ldr	r0, .L424+0x4
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	mov	r3, #0xc0
	lsl	r3, r3, #0x9
	mov	r4, sp
	mov	r6, #0x0
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L424+0x8
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L412:
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r2, r2, r5
	sub	r3, r3, r5
	cmp	r3, r5
	bhi	.L412	@cond_branch
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	lsr	r0, r3, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	b	.L408
.L425:
	.align	2, 0
.L424:
	.word	0x40000d4
	.word	-0x7efffe00
	.word	-0x7efff800
.L415:
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ResetPaletteFade
	bl	ScanlineEffect_Clear
	b	.L408
.L416:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L426
	mov	r0, #0x0
	mov	r2, #0x1
	bl	InitBgsFromTemplates
	ldr	r0, .L426+0x4
	bl	InitWindows
	mov	r0, #0x0
	mov	r1, #0x8
	mov	r2, #0xe0
	bl	LoadUserWindowBorderGfx_
	mov	r0, #0xf0
	bl	Menu_LoadStdPalAt
	b	.L408
.L427:
	.align	2, 0
.L426:
	.word	sUnknown_085105A8
	.word	sUnknown_085105AC
.L417:
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r0, .L428
	bl	SetVBlankCallback
	mov	r0, #0x1
	bl	EnableInterrupts
	b	.L408
.L429:
	.align	2, 0
.L428:
	.word	sub_80A03D8
.L418:
	mov	r0, #0x1
	b	.L421
.L408:
	mov	r1, r8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
.L421:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 InitSaveWindowAfterLinkBattle,.Lfe70-InitSaveWindowAfterLinkBattle
	.align	2, 0
	.globl	CB2_SetUpSaveAfterLinkBattle
	.type	 CB2_SetUpSaveAfterLinkBattle,function
	.thumb_func
CB2_SetUpSaveAfterLinkBattle:
	push	{lr}
	ldr	r0, .L432
	bl	InitSaveWindowAfterLinkBattle
	cmp	r0, #0
	beq	.L431	@cond_branch
	ldr	r0, .L432+0x4
	mov	r1, #0x50
	bl	CreateTask
	ldr	r0, .L432+0x8
	bl	SetMainCallback2
.L431:
	pop	{r0}
	bx	r0
.L433:
	.align	2, 0
.L432:
	.word	gMain+0x438
	.word	Task_SaveAfterLinkBattle
	.word	CB2_SaveAfterLinkBattle
.Lfe71:
	.size	 CB2_SetUpSaveAfterLinkBattle,.Lfe71-CB2_SetUpSaveAfterLinkBattle
	.align	2, 0
	.type	 CB2_SaveAfterLinkBattle,function
	.thumb_func
CB2_SaveAfterLinkBattle:
	push	{lr}
	bl	RunTasks
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 CB2_SaveAfterLinkBattle,.Lfe72-CB2_SaveAfterLinkBattle
	.align	2, 0
	.type	 Task_SaveAfterLinkBattle,function
	.thumb_func
Task_SaveAfterLinkBattle:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L454
	add	r5, r0, r1
	ldr	r0, .L454+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB3237
	b	.L436	@long jump
.LCB3237:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x6
	bls	.LCB3241
	b	.L436	@long jump
.LCB3241:
	lsl	r0, r0, #0x2
	ldr	r1, .L454+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L455:
	.align	2, 0
.L454:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	.L451
	.align	2, 0
	.align	2, 0
.L451:
	.word	.L438
	.word	.L443
	.word	.L444
	.word	.L446
	.word	.L447
	.word	.L448
	.word	.L449
.L438:
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L456
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r6, #0x1
	str	r6, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0xff
	bl	AddTextPrinterParameterized2
	mov	r0, #0x0
	mov	r1, #0x8
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L456+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L439	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0
	beq	.L439	@cond_branch
	bl	Link_AnyPartnersPlayingFRLG_JP
	cmp	r0, #0
	beq	.L440	@cond_branch
	strh	r6, [r5]
	b	.L436
.L457:
	.align	2, 0
.L456:
	.word	gText_SavingDontTurnOffPower
	.word	gWirelessCommType
.L440:
	mov	r0, #0x5
	b	.L453
.L439:
	ldr	r0, .L458
	mov	r1, #0x1
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L453
.L459:
	.align	2, 0
.L458:
	.word	gSoftResetDisabled
.L443:
	bl	SetContinueGameWarpStatusToDynamicWarp
	bl	FullSaveGame
	mov	r0, #0x2
	b	.L453
.L444:
	bl	CheckSaveFile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L436	@cond_branch
	bl	ClearContinueGameWarpStatus2
	mov	r0, #0x3
	strh	r0, [r5]
	ldr	r1, .L460
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L436
.L461:
	.align	2, 0
.L460:
	.word	gSoftResetDisabled
.L446:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x4
	b	.L453
.L447:
	bl	FreeAllWindowBuffers
	ldr	r0, .L462
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
	b	.L436
.L463:
	.align	2, 0
.L462:
	.word	gMain
.L448:
	ldr	r0, .L464
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x6
	b	.L453
.L465:
	.align	2, 0
.L464:
	.word	Task_LinkSave
.L449:
	ldr	r0, .L466
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L436	@cond_branch
	mov	r0, #0x3
.L453:
	strh	r0, [r5]
.L436:
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L467:
	.align	2, 0
.L466:
	.word	Task_LinkSave
.Lfe73:
	.size	 Task_SaveAfterLinkBattle,.Lfe73-Task_SaveAfterLinkBattle
	.align	2, 0
	.type	 ShowSaveInfoWindow,function
	.thumb_func
ShowSaveInfoWindow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	ldr	r0, .L472
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	ldr	r0, .L472+0x4
	mov	sl, r0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L469	@cond_branch
	add	r0, sp, #0xc
	ldrb	r1, [r0, #0x4]
	sub	r1, r1, #0x2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L472+0x8
	ldr	r0, [sp, #0x10]
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp, #0x10]
.L469:
	ldr	r6, .L472+0xc
	add	r0, sp, #0xc
	bl	AddWindow
	strb	r0, [r6]
	ldrb	r0, [r6]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L472+0x10
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x4
	mov	r9, r1
	cmp	r0, #0
	bne	.L470	@cond_branch
	mov	r0, #0x8
	mov	r9, r0
.L470:
	mov	r4, #0x1
	ldr	r5, .L472+0x14
	mov	r0, #0x3
	add	r1, r5, #0
	mov	r2, #0x6
	bl	BufferSaveMenuText
	ldrb	r0, [r6]
	str	r4, [sp]
	mov	r1, #0xff
	mov	r8, r1
	str	r1, [sp, #0x4]
	mov	r7, #0x0
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r4, #0x11
	ldrb	r0, [r6]
	ldr	r2, .L472+0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	add	r1, r5, #0
	mov	r3, #0x11
	bl	PrintPlayerNameOnWindow
	mov	r4, #0x21
	ldrb	r0, [r6]
	ldr	r2, .L472+0x1c
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x4
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r3, r2, #0x18
	lsr	r3, r3, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	mov	r0, sl
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L471	@cond_branch
	mov	r4, #0x31
	ldrb	r0, [r6]
	ldr	r2, .L472+0x20
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r3, r2, #0x18
	lsr	r3, r3, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
.L471:
	add	r4, r4, #0x10
	ldrb	r0, [r6]
	ldr	r2, .L472+0x24
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r3, r2, #0x18
	lsr	r3, r3, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r6]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L473:
	.align	2, 0
.L472:
	.word	sSaveInfoWindowTemplate
	.word	0x861
	.word	-0x100
	.word	sSaveInfoWindowId
	.word	gSaveBlock2Ptr
	.word	gStringVar4
	.word	gText_SavingPlayer
	.word	gText_SavingBadges
	.word	gText_SavingPokedex
	.word	gText_SavingTime
.Lfe74:
	.size	 ShowSaveInfoWindow,.Lfe74-ShowSaveInfoWindow
	.align	2, 0
	.type	 RemoveSaveInfoWindow,function
	.thumb_func
RemoveSaveInfoWindow:
	push	{r4, lr}
	ldr	r4, .L475
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L476:
	.align	2, 0
.L475:
	.word	sSaveInfoWindowId
.Lfe75:
	.size	 RemoveSaveInfoWindow,.Lfe75-RemoveSaveInfoWindow
	.align	2, 0
	.type	 Task_WaitForBattleTowerLinkSave,function
	.thumb_func
Task_WaitForBattleTowerLinkSave:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L479
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L478	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L478:
	pop	{r4}
	pop	{r0}
	bx	r0
.L480:
	.align	2, 0
.L479:
	.word	Task_LinkSave
.Lfe76:
	.size	 Task_WaitForBattleTowerLinkSave,.Lfe76-Task_WaitForBattleTowerLinkSave
	.align	2, 0
	.globl	SaveForBattleTowerLink
	.type	 SaveForBattleTowerLink,function
	.thumb_func
SaveForBattleTowerLink:
	push	{r4, r5, lr}
	ldr	r0, .L482
	mov	r1, #0x5
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L482+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	mov	r1, #0x1
	strh	r1, [r0, #0xc]
	ldr	r0, .L482+0x8
	mov	r1, #0x6
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r5
	strh	r4, [r1, #0xa]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L483:
	.align	2, 0
.L482:
	.word	Task_LinkSave
	.word	gTasks
	.word	Task_WaitForBattleTowerLinkSave
.Lfe77:
	.size	 SaveForBattleTowerLink,.Lfe77-SaveForBattleTowerLink
	.align	2, 0
	.type	 HideStartMenuWindow,function
	.thumb_func
HideStartMenuWindow:
	push	{lr}
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	bl	RemoveStartMenuWindow
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 HideStartMenuWindow,.Lfe78-HideStartMenuWindow
	.align	2, 0
	.globl	HideStartMenu
	.type	 HideStartMenu,function
	.thumb_func
HideStartMenu:
	push	{lr}
	mov	r0, #0x5
	bl	PlaySE
	bl	HideStartMenuWindow
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 HideStartMenu,.Lfe79-HideStartMenu
	.align	2, 0
	.globl	AppendToList
	.type	 AppendToList,function
	.thumb_func
AppendToList:
	ldrb	r3, [r1]
	add	r0, r0, r3
	strb	r2, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bx	lr
.Lfe80:
	.size	 AppendToList,.Lfe80-AppendToList
	.align	2, 0
	.type	 StartMenuDexNavCallback,function
	.thumb_func
StartMenuDexNavCallback:
	push	{lr}
	ldr	r0, .L488
	mov	r1, #0x0
	bl	CreateTask
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L489:
	.align	2, 0
.L488:
	.word	Task_OpenDexNavFromStartMenu
.Lfe81:
	.size	 StartMenuDexNavCallback,.Lfe81-StartMenuDexNavCallback
	.comm	gMenuCallback, 4	@ 4
.text
	.align	2, 0

