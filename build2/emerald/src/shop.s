@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gMartInfo
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gMartInfo,object
	.size	 gMartInfo,16
gMartInfo:
	.word	0x0
	.space	12
	.globl	gShopDataPtr
	.align	2, 0
	.type	 gShopDataPtr,object
	.size	 gShopDataPtr,4
gShopDataPtr:
	.word	0x0
	.globl	gUnknown_02039F74
	.align	2, 0
	.type	 gUnknown_02039F74,object
	.size	 gUnknown_02039F74,4
gUnknown_02039F74:
	.word	0x0
	.globl	gUnknown_02039F78
	.align	2, 0
	.type	 gUnknown_02039F78,object
	.size	 gUnknown_02039F78,4
gUnknown_02039F78:
	.word	0x0
	.globl	gMartPurchaseHistoryId
	.type	 gMartPurchaseHistoryId,object
	.size	 gMartPurchaseHistoryId,1
gMartPurchaseHistoryId:
	.byte	0x0
	.globl	gMartPurchaseHistory
	.align	2, 0
	.type	 gMartPurchaseHistory,object
	.size	 gMartPurchaseHistory,12
gMartPurchaseHistory:
	.short	0x0
	.space	2
	.space	8
	.section .rodata
	.align	1, 0
	.type	 sShopInventory_ZeroBadges,object
sShopInventory_ZeroBadges:
	.short	0x4
	.short	0x1c
	.short	0x1d
	.short	0x20
	.short	0x21
	.short	0x0
	.size	 sShopInventory_ZeroBadges,12
	.align	1, 0
	.type	 sShopInventory_OneBadge,object
sShopInventory_OneBadge:
	.short	0x4
	.short	0x1c
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x5a
	.short	0x2d1
	.short	0x59
	.short	0x0
	.size	 sShopInventory_OneBadge,22
	.align	1, 0
	.type	 sShopInventory_TwoBadges,object
sShopInventory_TwoBadges:
	.short	0x4
	.short	0x3
	.short	0x1c
	.short	0x25
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x5a
	.short	0x2d1
	.short	0x59
	.short	0x0
	.size	 sShopInventory_TwoBadges,26
	.align	1, 0
	.type	 sShopInventory_ThreeBadges,object
sShopInventory_ThreeBadges:
	.short	0x4
	.short	0x3
	.short	0x1c
	.short	0x25
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x5a
	.short	0x5b
	.short	0x2d1
	.short	0x2d2
	.short	0x59
	.short	0x0
	.size	 sShopInventory_ThreeBadges,30
	.align	1, 0
	.type	 sShopInventory_FourBadges,object
sShopInventory_FourBadges:
	.short	0x4
	.short	0x3
	.short	0x1c
	.short	0x25
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x27
	.short	0x5a
	.short	0x5b
	.short	0x2d1
	.short	0x2d2
	.short	0x59
	.short	0x0
	.size	 sShopInventory_FourBadges,32
	.align	1, 0
	.type	 sShopInventory_FiveBadges,object
sShopInventory_FiveBadges:
	.short	0x4
	.short	0x3
	.short	0x2
	.short	0x1c
	.short	0x25
	.short	0x24
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x27
	.short	0x5a
	.short	0x5b
	.short	0x2d1
	.short	0x2d2
	.short	0x59
	.short	0x0
	.size	 sShopInventory_FiveBadges,36
	.align	1, 0
	.type	 sShopInventory_SixBadges,object
sShopInventory_SixBadges:
	.short	0x4
	.short	0x3
	.short	0x2
	.short	0x1c
	.short	0x25
	.short	0x24
	.short	0x23
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x26
	.short	0x27
	.short	0x5a
	.short	0x5b
	.short	0x2d1
	.short	0x2d2
	.short	0x59
	.short	0x0
	.size	 sShopInventory_SixBadges,40
	.align	1, 0
	.type	 sShopInventory_SevenBadges,object
sShopInventory_SevenBadges:
	.short	0x4
	.short	0x3
	.short	0x2
	.short	0x1c
	.short	0x25
	.short	0x24
	.short	0x23
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x26
	.short	0x27
	.short	0x5a
	.short	0x5b
	.short	0x5c
	.short	0x2d1
	.short	0x2d2
	.short	0x2d3
	.short	0x59
	.short	0x0
	.size	 sShopInventory_SevenBadges,44
	.align	1, 0
	.type	 sShopInventory_EightBadges,object
sShopInventory_EightBadges:
	.short	0x4
	.short	0x3
	.short	0x2
	.short	0x1c
	.short	0x25
	.short	0x24
	.short	0x23
	.short	0x22
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x20
	.short	0x21
	.short	0x26
	.short	0x27
	.short	0x5a
	.short	0x5b
	.short	0x5c
	.short	0x2d1
	.short	0x2d2
	.short	0x2d3
	.short	0x59
	.short	0x0
	.size	 sShopInventory_EightBadges,46
	.align	2, 0
	.type	 sShopInventories,object
sShopInventories:
	.word	sShopInventory_ZeroBadges
	.word	sShopInventory_OneBadge
	.word	sShopInventory_TwoBadges
	.word	sShopInventory_ThreeBadges
	.word	sShopInventory_FourBadges
	.word	sShopInventory_FiveBadges
	.word	sShopInventory_SixBadges
	.word	sShopInventory_SevenBadges
	.word	sShopInventory_EightBadges
	.size	 sShopInventories,36
	.align	2, 0
	.type	 sShopPurchaseYesNoFuncs,object
	.size	 sShopPurchaseYesNoFuncs,8
sShopPurchaseYesNoFuncs:
	.word	BuyMenuTryMakePurchase
	.word	BuyMenuReturnToItemList
	.align	2, 0
	.type	 sShopMenuActions_BuySellQuit,object
sShopMenuActions_BuySellQuit:
	.word	gText_ShopBuy
	.word	Task_HandleShopMenuBuy
	.word	gText_ShopSell
	.word	Task_HandleShopMenuSell
	.word	gText_ShopQuit
	.word	Task_HandleShopMenuQuit
	.size	 sShopMenuActions_BuySellQuit,24
	.align	2, 0
	.type	 sShopMenuActions_BuyQuit,object
sShopMenuActions_BuyQuit:
	.word	gText_ShopBuy
	.word	Task_HandleShopMenuBuy
	.word	gText_ShopQuit
	.word	Task_HandleShopMenuQuit
	.size	 sShopMenuActions_BuyQuit,16
	.align	2, 0
	.type	 sShopMenuWindowTemplates,object
sShopMenuWindowTemplates:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x9
	.byte	0x6
	.byte	0xf
	.short	0x8
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x9
	.byte	0x4
	.byte	0xf
	.short	0x8
	.size	 sShopMenuWindowTemplates,16
	.align	2, 0
	.type	 sShopBuyMenuListTemplate,object
	.size	 sShopBuyMenuListTemplate,24
sShopBuyMenuListTemplate:
	.word	0x0
	.word	BuyMenuPrintItemDescriptionAndShowItemIcon
	.word	BuyMenuPrintPriceInList
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x30
	.byte	0x0
	.byte	0x7
	.align	2, 0
	.type	 sShopBuyMenuBgTemplates,object
	.size	 sShopBuyMenuBgTemplates,16
sShopBuyMenuBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xc3
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sShopBuyMenuWindowTemplates,object
sShopBuyMenuWindowTemplates:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0xf
	.short	0x1e
	.byte	0x0
	.byte	0xe
	.byte	0x2
	.byte	0xf
	.byte	0x10
	.byte	0xf
	.short	0x32
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0xe
	.byte	0x6
	.byte	0xf
	.short	0x122
	.byte	0x0
	.byte	0x1
	.byte	0xb
	.byte	0xc
	.byte	0x2
	.byte	0xf
	.short	0x176
	.byte	0x0
	.byte	0x12
	.byte	0xb
	.byte	0xa
	.byte	0x2
	.byte	0xf
	.short	0x18e
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x1b
	.byte	0x4
	.byte	0xf
	.short	0x1a2
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sShopBuyMenuWindowTemplates,56
	.align	2, 0
	.type	 sShopBuyMenuYesNoWindowTemplates,object
	.size	 sShopBuyMenuYesNoWindowTemplates,8
sShopBuyMenuYesNoWindowTemplates:
	.byte	0x0
	.byte	0x15
	.byte	0x9
	.byte	0x5
	.byte	0x4
	.byte	0xf
	.short	0x20e
	.type	 sShopBuyMenuTextColors,object
sShopBuyMenuTextColors:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.size	 sShopBuyMenuTextColors,9
.text
	.align	2, 0
	.type	 CreateShopMenu,function
	.thumb_func
CreateShopMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	ldr	r5, .L5
	strb	r4, [r5, #0xf]
	cmp	r4, #0
	bne	.L3	@cond_branch
	ldr	r0, .L5+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r4, .L5+0x8
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetMaxWidthInMenuTable
	lsl	r0, r0, #0x18
	ldr	r2, .L5+0xc
	ldr	r1, [sp]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xe]
	str	r4, [r5, #0x4]
	mov	r5, #0x3
	b	.L4
.L6:
	.align	2, 0
.L5:
	.word	gMartInfo
	.word	sShopMenuWindowTemplates
	.word	sShopMenuActions_BuySellQuit
	.word	0xffffff
.L3:
	ldr	r0, .L7
	ldr	r1, [r0, #0xc]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x8]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	ldr	r4, .L7+0x4
	add	r0, r4, #0
	mov	r1, #0x2
	bl	GetMaxWidthInMenuTable
	lsl	r0, r0, #0x18
	ldr	r2, .L7+0x8
	ldr	r1, [sp, #0x8]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x8]
	add	r0, sp, #0x8
	bl	AddWindow
	strb	r0, [r5, #0xe]
	str	r4, [r5, #0x4]
	mov	r5, #0x2
.L4:
	ldr	r4, .L7+0xc
	ldrb	r0, [r4, #0xe]
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	ldrb	r0, [r4, #0xe]
	ldr	r2, [r4, #0x4]
	add	r1, r5, #0
	bl	PrintMenuTable
	ldrb	r0, [r4, #0xe]
	add	r1, r5, #0
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	ldrb	r0, [r4, #0xe]
	bl	PutWindowTilemap
	ldrb	r0, [r4, #0xe]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldr	r0, .L7+0x10
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L8:
	.align	2, 0
.L7:
	.word	sShopMenuWindowTemplates
	.word	sShopMenuActions_BuyQuit
	.word	0xffffff
	.word	gMartInfo
	.word	Task_ShopMenu
.Lfe1:
	.size	 CreateShopMenu,.Lfe1-CreateShopMenu
	.align	2, 0
	.type	 SetShopMenuCallback,function
	.thumb_func
SetShopMenuCallback:
	ldr	r1, .L10
	str	r0, [r1]
	bx	lr
.L11:
	.align	2, 0
.L10:
	.word	gMartInfo
.Lfe2:
	.size	 SetShopMenuCallback,.Lfe2-SetShopMenuCallback
	.align	2, 0
	.type	 GetNumberOfBadges,function
	.thumb_func
GetNumberOfBadges:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r4, .L19
	ldr	r6, .L19+0x4
.L16:
	add	r0, r4, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L15	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L15:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r6
	bls	.L16	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L20:
	.align	2, 0
.L19:
	.word	0x867
	.word	0x86e
.Lfe3:
	.size	 GetNumberOfBadges,.Lfe3-GetNumberOfBadges
	.align	2, 0
	.type	 SetShopItemsForSale,function
	.thumb_func
SetShopItemsForSale:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r5, #0x0
	bl	GetNumberOfBadges
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, #0
	bne	.L22	@cond_branch
	ldr	r2, .L29
	ldr	r1, .L29+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2, #0x8]
	b	.L23
.L30:
	.align	2, 0
.L29:
	.word	gMartInfo
	.word	sShopInventories
.L22:
	ldr	r0, .L31
	str	r4, [r0, #0x8]
	add	r2, r0, #0
.L23:
	mov	r0, #0x0
	strh	r0, [r2, #0xc]
	ldr	r1, [r2, #0x8]
	b	.L28
.L32:
	.align	2, 0
.L31:
	.word	gMartInfo
.L26:
	ldrh	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L28:
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L26	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 SetShopItemsForSale,.Lfe4-SetShopItemsForSale
	.align	2, 0
	.type	 Task_ShopMenu,function
	.thumb_func
Task_ShopMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	Menu_ProcessInputNoWrap
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r2, r0
	beq	.L34	@cond_branch
	add	r0, r0, #0x1
	cmp	r2, r0
	bne	.L37	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	Task_HandleShopMenuQuit
	b	.L34
.L37:
	ldr	r0, .L39
	ldr	r1, [r0, #0x4]
	lsl	r0, r2, #0x3
	add	r0, r0, r1
	ldr	r1, [r0, #0x4]
	add	r0, r5, #0
	bl	_call_via_r1
.L34:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L40:
	.align	2, 0
.L39:
	.word	gMartInfo
.Lfe5:
	.size	 Task_ShopMenu,.Lfe5-Task_ShopMenu
	.align	2, 0
	.type	 Task_HandleShopMenuBuy,function
	.thumb_func
Task_HandleShopMenuBuy:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L42
	add	r4, r1, r2
	ldr	r3, .L42+0x4
	lsr	r0, r3, #0x10
	strh	r0, [r4, #0x10]
	strh	r3, [r4, #0x12]
	sub	r2, r2, #0x8
	add	r1, r1, r2
	ldr	r0, .L42+0x8
	str	r0, [r1]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	pop	{r4}
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	gTasks+0x8
	.word	CB2_InitBuyMenu
	.word	Task_GoToBuyOrSellMenu
.Lfe6:
	.size	 Task_HandleShopMenuBuy,.Lfe6-Task_HandleShopMenuBuy
	.align	2, 0
	.type	 Task_HandleShopMenuSell,function
	.thumb_func
Task_HandleShopMenuSell:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L45
	add	r4, r1, r2
	ldr	r3, .L45+0x4
	lsr	r0, r3, #0x10
	strh	r0, [r4, #0x10]
	strh	r3, [r4, #0x12]
	sub	r2, r2, #0x8
	add	r1, r1, r2
	ldr	r0, .L45+0x8
	str	r0, [r1]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	pop	{r4}
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gTasks+0x8
	.word	CB2_GoToSellMenu
	.word	Task_GoToBuyOrSellMenu
.Lfe7:
	.size	 Task_HandleShopMenuSell,.Lfe7-Task_HandleShopMenuSell
	.align	2, 0
	.globl	CB2_ExitSellMenu
	.type	 CB2_ExitSellMenu,function
	.thumb_func
CB2_ExitSellMenu:
	push	{lr}
	ldr	r0, .L48
	ldr	r1, .L48+0x4
	str	r1, [r0]
	ldr	r0, .L48+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
	.word	CB2_ReturnToField
.Lfe8:
	.size	 CB2_ExitSellMenu,.Lfe8-CB2_ExitSellMenu
	.align	2, 0
	.type	 Task_HandleShopMenuQuit,function
	.thumb_func
Task_HandleShopMenuQuit:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L52
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x2
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r5, #0xe]
	bl	RemoveWindow
	bl	SaveRecordedItemPurchasesForTVShow
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r5, [r5]
	cmp	r5, #0
	beq	.L51	@cond_branch
	bl	_call_via_r5
.L51:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	gMartInfo
.Lfe9:
	.size	 Task_HandleShopMenuQuit,.Lfe9-Task_HandleShopMenuQuit
	.align	2, 0
	.type	 Task_GoToBuyOrSellMenu,function
	.thumb_func
Task_GoToBuyOrSellMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L56
	add	r4, r0, r1
	ldr	r0, .L56+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L55	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	ldrh	r0, [r4, #0x10]
	lsl	r0, r0, #0x10
	ldrh	r1, [r4, #0x12]
	orr	r0, r0, r1
	bl	SetMainCallback2
.L55:
	pop	{r4}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	gTasks+0x8
	.word	gPaletteFade
.Lfe10:
	.size	 Task_GoToBuyOrSellMenu,.Lfe10-Task_GoToBuyOrSellMenu
	.align	2, 0
	.type	 MapPostLoadHook_ReturnToShopMenu,function
	.thumb_func
MapPostLoadHook_ReturnToShopMenu:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L59
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L60:
	.align	2, 0
.L59:
	.word	Task_ReturnToShopMenu
.Lfe11:
	.size	 MapPostLoadHook_ReturnToShopMenu,.Lfe11-MapPostLoadHook_ReturnToShopMenu
	.align	2, 0
	.type	 Task_ReturnToShopMenu,function
	.thumb_func
Task_ReturnToShopMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L62	@cond_branch
	ldr	r0, .L65
	ldrb	r0, [r0, #0xf]
	cmp	r0, #0x2
	bne	.L63	@cond_branch
	ldr	r1, .L65+0x4
	ldr	r2, .L65+0x8
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
	b	.L62
.L66:
	.align	2, 0
.L65:
	.word	gMartInfo
	.word	gText_CanIHelpWithAnythingElse
	.word	ShowShopMenuAfterExitingBuyOrSellMenu
.L63:
	ldr	r1, .L67
	ldr	r2, .L67+0x4
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
.L62:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	gText_AnythingElseICanHelp
	.word	ShowShopMenuAfterExitingBuyOrSellMenu
.Lfe12:
	.size	 Task_ReturnToShopMenu,.Lfe12-Task_ReturnToShopMenu
	.align	2, 0
	.type	 ShowShopMenuAfterExitingBuyOrSellMenu,function
	.thumb_func
ShowShopMenuAfterExitingBuyOrSellMenu:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L70
	ldrb	r0, [r0, #0xf]
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	gMartInfo
.Lfe13:
	.size	 ShowShopMenuAfterExitingBuyOrSellMenu,.Lfe13-ShowShopMenuAfterExitingBuyOrSellMenu
	.align	2, 0
	.type	 CB2_BuyMenu,function
	.thumb_func
CB2_BuyMenu:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	DoScheduledBgTilemapCopiesToVram
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 CB2_BuyMenu,.Lfe14-CB2_BuyMenu
	.align	2, 0
	.type	 VBlankCB_BuyMenu,function
	.thumb_func
VBlankCB_BuyMenu:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 VBlankCB_BuyMenu,.Lfe15-VBlankCB_BuyMenu
	.align	2, 0
	.type	 CB2_InitBuyMenu,function
	.thumb_func
CB2_InitBuyMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L84
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r5, r0, r1
	ldrb	r4, [r5]
	cmp	r4, #0
	beq	.L76	@cond_branch
	cmp	r4, #0x1
	bne	.LCB644
	b	.L77	@long jump
.LCB644:
	bl	BuyMenuDrawGraphics
	bl	BuyMenuAddScrollIndicatorArrows
	ldr	r0, .L84+0x4
	mov	r1, #0x8
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L84+0x8
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	ldr	r2, .L84+0xc
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x0
	strh	r0, [r1, #0x16]
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	str	r5, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L84+0x10
	bl	SetVBlankCallback
	ldr	r0, .L84+0x14
	bl	SetMainCallback2
	b	.L75
.L85:
	.align	2, 0
.L84:
	.word	gMain
	.word	Task_BuyMenu
	.word	gMultiuseListMenuTemplate
	.word	gTasks
	.word	VBlankCB_BuyMenu
	.word	CB2_BuyMenu
.L76:
	bl	SetVBlankHBlankCallbacksToNull
	str	r4, [sp, #0x8]
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	ldr	r2, .L86
	add	r0, sp, #0x8
	bl	CpuFastSet
	bl	ScanlineEffect_Stop
	bl	ResetTempTileDataBuffers
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ClearScheduledBgCopiesToVram
	ldr	r4, .L86+0x4
	ldr	r0, .L86+0x8
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L86+0xc
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L86+0x10
	add	r0, r0, r1
	mov	r1, #0x1
	neg	r1, r1
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L86+0x14
	add	r0, r0, r1
	mov	r1, #0x1
	neg	r1, r1
	strb	r1, [r0]
	bl	BuyMenuBuildListMenuTemplate
	bl	BuyMenuInitBgs
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	bl	BuyMenuInitWindows
	bl	BuyMenuDecompressBgGraphics
	b	.L83
.L87:
	.align	2, 0
.L86:
	.word	0x1000100
	.word	gShopDataPtr
	.word	0x20b0
	.word	0x200b
	.word	0x200d
	.word	0x200e
.L77:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L75	@cond_branch
.L83:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
.L75:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 CB2_InitBuyMenu,.Lfe16-CB2_InitBuyMenu
	.align	2, 0
	.type	 BuyMenuFreeMemory,function
	.thumb_func
BuyMenuFreeMemory:
	push	{lr}
	ldr	r0, .L89
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L89+0x4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L89+0x8
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	gShopDataPtr
	.word	gUnknown_02039F74
	.word	gUnknown_02039F78
.Lfe17:
	.size	 BuyMenuFreeMemory,.Lfe17-BuyMenuFreeMemory
	.align	2, 0
	.type	 BuyMenuBuildListMenuTemplate,function
	.thumb_func
BuyMenuBuildListMenuTemplate:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L99
	ldr	r4, .L99+0x4
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x3
	bl	Alloc
	str	r0, [r7]
	ldr	r5, .L99+0x8
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x4
	bl	Alloc
	str	r0, [r5]
	mov	r6, #0x0
	ldrh	r0, [r4, #0xc]
	cmp	r6, r0
	bcs	.L93	@cond_branch
.L95:
	lsl	r1, r6, #0x3
	ldr	r0, [r7]
	add	r0, r0, r1
	ldr	r2, [r4, #0x8]
	lsl	r1, r6, #0x1
	add	r1, r1, r2
	ldrh	r1, [r1]
	lsl	r3, r6, #0x4
	ldr	r2, [r5]
	add	r2, r2, r3
	bl	BuyMenuSetListEntry
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldrh	r2, [r4, #0xc]
	cmp	r6, r2
	bcc	.L95	@cond_branch
.L93:
	ldr	r4, .L99+0x8
	lsl	r5, r6, #0x4
	ldr	r0, [r4]
	add	r0, r0, r5
	ldr	r1, .L99+0xc
	bl	StringCopy
	ldr	r2, .L99
	ldr	r0, [r2]
	lsl	r1, r6, #0x3
	add	r1, r1, r0
	ldr	r0, [r4]
	add	r0, r0, r5
	str	r0, [r1]
	mov	r0, #0x2
	neg	r0, r0
	str	r0, [r1, #0x4]
	ldr	r3, .L99+0x10
	add	r1, r3, #0
	ldr	r0, .L99+0x14
	ldmia	r0!, {r4, r5, r6}
	stmia	r1!, {r4, r5, r6}
	ldmia	r0!, {r4, r5, r6}
	stmia	r1!, {r4, r5, r6}
	ldr	r0, [r2]
	str	r0, [r3]
	ldr	r0, .L99+0x4
	ldrh	r0, [r0, #0xc]
	add	r1, r0, #0x1
	strh	r1, [r3, #0xc]
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x8
	bls	.L97	@cond_branch
	mov	r0, #0x8
	strh	r0, [r3, #0xe]
	b	.L98
.L100:
	.align	2, 0
.L99:
	.word	gUnknown_02039F74
	.word	gMartInfo
	.word	gUnknown_02039F78
	.word	gText_Cancel2
	.word	gMultiuseListMenuTemplate
	.word	sShopBuyMenuListTemplate
.L97:
	strh	r1, [r3, #0xe]
.L98:
	ldr	r0, .L101
	ldr	r0, [r0]
	ldr	r1, .L101+0x4
	ldrh	r1, [r1, #0xe]
	ldr	r2, .L101+0x8
	add	r0, r0, r2
	strh	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	gShopDataPtr
	.word	gMultiuseListMenuTemplate
	.word	0x2004
.Lfe18:
	.size	 BuyMenuBuildListMenuTemplate,.Lfe18-BuyMenuBuildListMenuTemplate
	.align	2, 0
	.type	 BuyMenuSetListEntry,function
	.thumb_func
BuyMenuSetListEntry:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r2, #0
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	ldr	r0, .L106
	ldrb	r0, [r0, #0xf]
	cmp	r0, #0
	bne	.L104	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	CopyItemName
	b	.L105
.L107:
	.align	2, 0
.L106:
	.word	gMartInfo
.L104:
	lsl	r1, r4, #0x5
	ldr	r0, .L108
	add	r1, r1, r0
	add	r0, r5, #0
	bl	StringCopy
.L105:
	str	r5, [r6]
	str	r4, [r6, #0x4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L109:
	.align	2, 0
.L108:
	.word	gDecorations+0x1
.Lfe19:
	.size	 BuyMenuSetListEntry,.Lfe19-BuyMenuSetListEntry
	.align	2, 0
	.type	 BuyMenuPrintItemDescriptionAndShowItemIcon,function
	.thumb_func
BuyMenuPrintItemDescriptionAndShowItemIcon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L111	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L111:
	mov	r0, #0x2
	neg	r0, r0
	cmp	r7, r0
	beq	.L112	@cond_branch
	lsl	r4, r7, #0x10
	lsr	r0, r4, #0x10
	ldr	r1, .L118
	ldr	r1, [r1]
	ldr	r2, .L118+0x4
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	BuyMenuAddItemIcon
	b	.L113
.L119:
	.align	2, 0
.L118:
	.word	gShopDataPtr
	.word	0x200c
.L112:
	ldr	r0, .L120
	ldr	r1, .L120+0x4
	ldr	r1, [r1]
	ldr	r2, .L120+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	BuyMenuAddItemIcon
	lsl	r4, r7, #0x10
.L113:
	lsr	r4, r4, #0x10
	mov	r8, r4
	ldr	r6, .L120+0x4
	ldr	r0, [r6]
	ldr	r5, .L120+0x8
	add	r0, r0, r5
	ldrb	r0, [r0]
	mov	r4, #0x1
	add	r1, r4, #0
	eor	r1, r1, r0
	mov	r0, r8
	bl	BuyMenuRemoveItemIcon
	ldr	r1, [r6]
	add	r1, r1, r5
	ldrb	r0, [r1]
	eor	r0, r0, r4
	strb	r0, [r1]
	mov	r0, #0x2
	neg	r0, r0
	cmp	r7, r0
	beq	.L114	@cond_branch
	ldr	r0, .L120+0xc
	ldrb	r0, [r0, #0xf]
	cmp	r0, #0
	bne	.L115	@cond_branch
	mov	r0, r8
	bl	ItemId_GetDescription
	add	r4, r0, #0
	b	.L117
.L121:
	.align	2, 0
.L120:
	.word	0xffff
	.word	gShopDataPtr
	.word	0x200c
	.word	gMartInfo
.L115:
	ldr	r0, .L122
	lsl	r1, r7, #0x5
	add	r0, r0, #0x18
	add	r1, r1, r0
	ldr	r4, [r1]
	b	.L117
.L123:
	.align	2, 0
.L122:
	.word	gDecorations
.L114:
	ldr	r4, .L124
.L117:
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	add	r1, r4, #0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	BuyMenuPrint
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	gText_QuitShopping
.Lfe20:
	.size	 BuyMenuPrintItemDescriptionAndShowItemIcon,.Lfe20-BuyMenuPrintItemDescriptionAndShowItemIcon
	.align	2, 0
	.type	 BuyMenuPrintPriceInList,function
	.thumb_func
BuyMenuPrintPriceInList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x14
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L127	@cond_branch
	ldr	r0, .L133
	ldrb	r0, [r0, #0xf]
	cmp	r0, #0
	bne	.L128	@cond_branch
	ldr	r6, .L133+0x4
	lsl	r5, r5, #0x10
	lsr	r0, r5, #0x10
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	add	r0, r6, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	b	.L129
.L134:
	.align	2, 0
.L133:
	.word	gMartInfo
	.word	gStringVar1
.L128:
	ldr	r0, .L135
	ldr	r2, .L135+0x4
	lsl	r1, r5, #0x5
	add	r1, r1, r2
	ldrh	r1, [r1, #0x14]
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	lsl	r5, r5, #0x10
.L129:
	lsr	r5, r5, #0x10
	add	r0, r5, #0
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bne	.L130	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L131	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	bl	CheckPCHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L130	@cond_branch
.L131:
	ldr	r0, .L135+0x8
	ldr	r1, .L135+0xc
	bl	StringCopy
	b	.L132
.L136:
	.align	2, 0
.L135:
	.word	gStringVar1
	.word	gDecorations
	.word	gStringVar4
	.word	gText_SoldOut2
.L130:
	ldr	r0, .L137
	ldr	r1, .L137+0x4
	bl	StringExpandPlaceholders
.L132:
	ldr	r4, .L137
	mov	r0, #0x7
	add	r1, r4, #0
	mov	r2, #0x78
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	ldr	r0, .L137+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0xc]
	str	r4, [sp, #0x10]
	add	r0, r7, #0
	mov	r1, #0x7
	mov	r3, r8
	bl	AddTextPrinterParameterized4
.L127:
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L138:
	.align	2, 0
.L137:
	.word	gStringVar4
	.word	gText_PokedollarVar1
	.word	sShopBuyMenuTextColors+0x3
.Lfe21:
	.size	 BuyMenuPrintPriceInList,.Lfe21-BuyMenuPrintPriceInList
	.align	2, 0
	.type	 BuyMenuAddScrollIndicatorArrows,function
	.thumb_func
BuyMenuAddScrollIndicatorArrows:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	ldr	r5, .L141
	ldr	r2, [r5]
	ldr	r4, .L141+0x4
	add	r0, r2, r4
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L140	@cond_branch
	ldr	r0, .L141+0x8
	ldrh	r1, [r0, #0xc]
	add	r0, r1, #0x1
	cmp	r0, #0x8
	ble	.L140	@cond_branch
	sub	r0, r1, #0x7
	str	r0, [sp]
	ldr	r0, .L141+0xc
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	ldr	r1, .L141+0x10
	add	r0, r2, r1
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xac
	mov	r2, #0xc
	mov	r3, #0x94
	bl	AddScrollIndicatorArrowPairParameterized
	ldr	r1, [r5]
	add	r1, r1, r4
	strb	r0, [r1]
.L140:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	gShopDataPtr
	.word	0x200b
	.word	gMartInfo
	.word	0x834
	.word	0x2008
.Lfe22:
	.size	 BuyMenuAddScrollIndicatorArrows,.Lfe22-BuyMenuAddScrollIndicatorArrows
	.align	2, 0
	.type	 BuyMenuRemoveScrollIndicatorArrows,function
	.thumb_func
BuyMenuRemoveScrollIndicatorArrows:
	push	{r4, lr}
	ldr	r4, .L145
	ldr	r0, [r4]
	ldr	r2, .L145+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L144	@cond_branch
	bl	RemoveScrollIndicatorArrowPair
	ldr	r0, [r4]
	ldr	r1, .L145+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
.L144:
	pop	{r4}
	pop	{r0}
	bx	r0
.L146:
	.align	2, 0
.L145:
	.word	gShopDataPtr
	.word	0x200b
.Lfe23:
	.size	 BuyMenuRemoveScrollIndicatorArrows,.Lfe23-BuyMenuRemoveScrollIndicatorArrows
	.align	2, 0
	.type	 BuyMenuPrintCursor,function
	.thumb_func
BuyMenuPrintCursor:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ListMenuGetYCoordForPrintingArrowCursor
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r1, .L148
	mov	r0, #0x0
	str	r0, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r2, #0x0
	bl	BuyMenuPrint
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L149:
	.align	2, 0
.L148:
	.word	gText_SelectorArrow2
.Lfe24:
	.size	 BuyMenuPrintCursor,.Lfe24-BuyMenuPrintCursor
	.align	2, 0
	.type	 BuyMenuAddItemIcon,function
	.thumb_func
BuyMenuAddItemIcon:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	ldr	r0, .L157
	ldr	r4, .L157+0x4
	add	r1, r3, r4
	ldr	r0, [r0]
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L150	@cond_branch
	ldr	r0, .L157+0x8
	ldrb	r0, [r0, #0xf]
	cmp	r0, #0
	beq	.L153	@cond_branch
	ldr	r0, .L157+0xc
	cmp	r2, r0
	bne	.L152	@cond_branch
.L153:
	ldr	r0, .L157+0x10
	add	r1, r3, r0
	add	r0, r1, #0
	bl	AddItemIconSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x40
	beq	.L150	@cond_branch
	strb	r2, [r4]
	ldr	r1, .L157+0x14
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r1, #0x18
	strh	r1, [r0, #0x24]
	mov	r1, #0x58
	strh	r1, [r0, #0x26]
	b	.L150
.L158:
	.align	2, 0
.L157:
	.word	gShopDataPtr
	.word	0x200d
	.word	gMartInfo
	.word	0xffff
	.word	0x83e
	.word	gSprites
.L152:
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L159
	add	r1, r3, r2
	str	r1, [sp]
	str	r1, [sp, #0x4]
	mov	r1, #0x14
	mov	r2, #0x54
	mov	r3, #0x1
	bl	AddDecorationIconObject
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x40
	beq	.L150	@cond_branch
	strb	r2, [r4]
.L150:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L160:
	.align	2, 0
.L159:
	.word	0x83e
.Lfe25:
	.size	 BuyMenuAddItemIcon,.Lfe25-BuyMenuAddItemIcon
	.align	2, 0
	.type	 BuyMenuRemoveItemIcon,function
	.thumb_func
BuyMenuRemoveItemIcon:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r0, .L163
	ldr	r2, .L163+0x4
	add	r1, r4, r2
	ldr	r0, [r0]
	add	r5, r0, r1
	ldrb	r0, [r5]
	cmp	r0, #0xff
	beq	.L161	@cond_branch
	ldr	r0, .L163+0x8
	add	r4, r4, r0
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L163+0xc
	add	r0, r0, r1
	bl	DestroySprite
	mov	r0, #0xff
	strb	r0, [r5]
.L161:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L164:
	.align	2, 0
.L163:
	.word	gShopDataPtr
	.word	0x200d
	.word	0x83e
	.word	gSprites
.Lfe26:
	.size	 BuyMenuRemoveItemIcon,.Lfe26-BuyMenuRemoveItemIcon
	.align	2, 0
	.type	 BuyMenuInitBgs,function
	.thumb_func
BuyMenuInitBgs:
	push	{r4, lr}
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L166
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r4, .L166+0x4
	ldr	r1, [r4]
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	mov	r0, #0xc0
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	pop	{r4}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	sShopBuyMenuBgTemplates
	.word	gShopDataPtr
.Lfe27:
	.size	 BuyMenuInitBgs,.Lfe27-BuyMenuInitBgs
	.align	2, 0
	.type	 BuyMenuDecompressBgGraphics,function
	.thumb_func
BuyMenuDecompressBgGraphics:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r1, .L169
	mov	r2, #0xe8
	lsl	r2, r2, #0x2
	ldr	r3, .L169+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L169+0x8
	ldr	r1, .L169+0xc
	ldr	r1, [r1]
	bl	LZDecompressWram
	ldr	r0, .L169+0x10
	mov	r1, #0xc0
	mov	r2, #0x20
	bl	LoadCompressedPalette
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gBuyMenuFrame_Gfx
	.word	0x3e3
	.word	gBuyMenuFrame_Tilemap
	.word	gShopDataPtr
	.word	gMenuMoneyPal
.Lfe28:
	.size	 BuyMenuDecompressBgGraphics,.Lfe28-BuyMenuDecompressBgGraphics
	.align	2, 0
	.type	 BuyMenuInitWindows,function
	.thumb_func
BuyMenuInitWindows:
	push	{lr}
	ldr	r0, .L172
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xe0
	bl	LoadMessageBoxGfx
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x2
	bl	PutWindowTilemap
	pop	{r0}
	bx	r0
.L173:
	.align	2, 0
.L172:
	.word	sShopBuyMenuWindowTemplates
.Lfe29:
	.size	 BuyMenuInitWindows,.Lfe29-BuyMenuInitWindows
	.align	2, 0
	.type	 BuyMenuPrint,function
	.thumb_func
BuyMenuPrint:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	ldr	r6, [sp, #0x24]
	ldr	r5, [sp, #0x28]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	ldr	r5, .L175
	add	r4, r4, r5
	str	r4, [sp, #0x8]
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	str	r6, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r1, #0x1
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	sShopBuyMenuTextColors
.Lfe30:
	.size	 BuyMenuPrint,.Lfe30-BuyMenuPrint
	.align	2, 0
	.type	 BuyMenuDisplayMessage,function
	.thumb_func
BuyMenuDisplayMessage:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetPlayerTextSpeedDelay
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	str	r6, [sp, #0xc]
	add	r0, r4, #0
	mov	r1, #0x5
	mov	r2, #0xa
	mov	r3, #0xe
	bl	DisplayMessageAndContinueTask
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 BuyMenuDisplayMessage,.Lfe31-BuyMenuDisplayMessage
	.align	2, 0
	.type	 BuyMenuDrawGraphics,function
	.thumb_func
BuyMenuDrawGraphics:
	push	{lr}
	bl	BuyMenuDrawMapGraphics
	bl	BuyMenuCopyMenuBgToBg1TilemapBuffer
	mov	r0, #0x13
	mov	r1, #0xb
	bl	AddMoneyLabelObject
	ldr	r0, .L179
	ldr	r0, [r0]
	mov	r1, #0x92
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	bl	GetMoney
	add	r3, r0, #0
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd
	bl	PrintMoneyAmountInMoneyBoxWithBorder
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x3
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.L180:
	.align	2, 0
.L179:
	.word	gSaveBlock1Ptr
.Lfe32:
	.size	 BuyMenuDrawGraphics,.Lfe32-BuyMenuDrawGraphics
	.align	2, 0
	.type	 BuyMenuDrawMapGraphics,function
	.thumb_func
BuyMenuDrawMapGraphics:
	push	{lr}
	bl	BuyMenuCollectObjectEventData
	bl	BuyMenuDrawObjectEvents
	bl	BuyMenuDrawMapBg
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 BuyMenuDrawMapGraphics,.Lfe33-BuyMenuDrawMapGraphics
	.align	2, 0
	.type	 BuyMenuDrawMapBg,function
	.thumb_func
BuyMenuDrawMapBg:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L197
	ldr	r0, [r0]
	mov	r9, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r1, sp
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x4
	strh	r0, [r1]
	ldrh	r0, [r4]
	sub	r0, r0, #0x4
	strh	r0, [r4]
	mov	r1, #0x0
	mov	sl, r4
.L186:
	mov	r4, #0x0
	lsl	r7, r1, #0x10
	asr	r0, r7, #0x10
	mov	r8, r0
.L190:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl	r4, r4, #0x10
	asr	r5, r4, #0x10
	add	r0, r0, r5
	mov	r2, sl
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	add	r1, r1, r8
	bl	MapGridGetMetatileIdAt
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r5, #0
	mov	r1, r8
	bl	BuyMenuCheckForOverlapWithMenuBg
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L191	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	add	r0, r0, r5
	mov	r2, sl
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	add	r1, r1, r8
	bl	MapGridGetMetatileLayerTypeAt
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	b	.L192
.L198:
	.align	2, 0
.L197:
	.word	gMapHeader
.L191:
	mov	r5, #0x1
.L192:
	ldr	r0, .L199
	cmp	r6, r0
	bhi	.L193	@cond_branch
	asr	r0, r4, #0x10
	mov	r2, r9
	ldr	r1, [r2, #0x10]
	lsl	r3, r6, #0x4
	ldr	r2, [r1, #0xc]
	add	r2, r2, r3
	asr	r1, r7, #0x10
	add	r3, r5, #0
	bl	BuyMenuDrawMapMetatile
	b	.L189
.L200:
	.align	2, 0
.L199:
	.word	0x1ff
.L193:
	asr	r0, r4, #0x10
	mov	r3, r9
	ldr	r2, [r3, #0x14]
	ldr	r3, .L201
	add	r1, r6, r3
	lsl	r1, r1, #0x4
	ldr	r2, [r2, #0xc]
	add	r2, r2, r1
	asr	r1, r7, #0x10
	add	r3, r5, #0
	bl	BuyMenuDrawMapMetatile
.L189:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r4, r1
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xe
	ble	.L190	@cond_branch
	add	r0, r7, r1
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9
	ble	.L186	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L202:
	.align	2, 0
.L201:
	.word	-0x200
.Lfe34:
	.size	 BuyMenuDrawMapBg,.Lfe34-BuyMenuDrawMapBg
	.align	2, 0
	.type	 BuyMenuDrawMapMetatile,function
	.thumb_func
BuyMenuDrawMapMetatile:
	push	{r4, r5, r6, r7, lr}
	add	r7, r2, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r2, r3, #0
	lsl	r0, r0, #0x11
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x10
	cmp	r3, #0x1
	beq	.L206	@cond_branch
	cmp	r3, #0x1
	bgt	.L210	@cond_branch
	cmp	r3, #0
	beq	.L205	@cond_branch
	b	.L204
.L210:
	cmp	r2, #0x2
	beq	.L207	@cond_branch
	b	.L204
.L205:
	ldr	r6, .L212
	ldr	r0, [r6]
	mov	r2, #0xc0
	lsl	r2, r2, #0x5
	add	r0, r0, r2
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r7, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, [r6]
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	b	.L211
.L213:
	.align	2, 0
.L212:
	.word	gShopDataPtr
.L206:
	ldr	r6, .L214
	ldr	r0, [r6]
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	add	r0, r0, r2
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r7, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, [r6]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
.L211:
	add	r0, r0, r1
	add	r3, r7, #0
	add	r3, r3, #0x8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
	b	.L204
.L215:
	.align	2, 0
.L214:
	.word	gShopDataPtr
.L207:
	ldr	r6, .L216
	ldr	r0, [r6]
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	add	r0, r0, r2
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r7, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, [r6]
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	add	r3, r7, #0
	add	r3, r3, #0x8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
.L204:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L217:
	.align	2, 0
.L216:
	.word	gShopDataPtr
.Lfe35:
	.size	 BuyMenuDrawMapMetatile,.Lfe35-BuyMenuDrawMapMetatile
	.align	2, 0
	.type	 BuyMenuDrawMapMetatileLayer,function
	.thumb_func
BuyMenuDrawMapMetatileLayer:
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r3]
	strh	r0, [r1]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r1, #0x2]
	add	r2, r1, #0
	add	r2, r2, #0x40
	ldrh	r0, [r3, #0x4]
	strh	r0, [r2]
	add	r1, r1, #0x42
	ldrh	r0, [r3, #0x6]
	strh	r0, [r1]
	bx	lr
.Lfe36:
	.size	 BuyMenuDrawMapMetatileLayer,.Lfe36-BuyMenuDrawMapMetatileLayer
	.align	2, 0
	.type	 BuyMenuCollectObjectEventData,function
	.thumb_func
BuyMenuCollectObjectEventData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x18
	mov	r0, #0x0
	mov	r8, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r7, #0x0
	ldr	r5, .L245
	ldr	r3, .L245+0x4
	mov	r2, #0x10
.L223:
	ldr	r1, [r5]
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x1
	add	r1, r1, r3
	add	r1, r1, r0
	strh	r2, [r1]
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xf
	bls	.L223	@cond_branch
	mov	r7, #0x0
	str	r4, [sp, #0x8]
	ldr	r1, .L245
	mov	r9, r1
	mov	r2, sp
	str	r2, [sp, #0x4]
.L228:
	mov	r3, #0x0
	add	r4, r7, #0x1
	str	r4, [sp, #0xc]
.L232:
	ldr	r1, .L245+0x8
	add	r0, r3, r1
	ldr	r2, [sp, #0x4]
	ldrh	r2, [r2]
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r4, .L245+0xc
	add	r1, r7, r4
	ldr	r2, [sp, #0x8]
	ldrh	r2, [r2]
	add	r1, r1, r2
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	str	r3, [sp, #0x10]
	bl	GetObjectEventIdByXY
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r3, [sp, #0x10]
	cmp	r6, #0x10
	beq	.L231	@cond_branch
	mov	r4, r9
	ldr	r1, [r4]
	mov	r0, r8
	lsl	r4, r0, #0x2
	add	r0, r4, r0
	lsl	r5, r0, #0x1
	ldr	r2, .L245+0x4
	add	r0, r1, r2
	add	r0, r0, r5
	mov	r2, #0x0
	mov	sl, r2
	strh	r6, [r0]
	ldr	r2, .L245+0x10
	add	r0, r1, r2
	add	r0, r0, r5
	strh	r3, [r0]
	ldr	r0, .L245+0x14
	add	r1, r1, r0
	add	r1, r1, r5
	strh	r7, [r1]
	ldr	r1, [sp, #0x4]
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	sub	r1, r3, #0x4
	add	r0, r0, r1
	ldr	r1, [sp, #0x8]
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	ip, r1
	sub	r1, r7, #0x2
	add	r1, r1, ip
	str	r3, [sp, #0x10]
	bl	MapGridGetMetatileLayerTypeAt
	mov	r1, r9
	ldr	r2, [r1]
	ldr	r1, .L245+0x18
	add	r1, r1, r2
	mov	ip, r1
	add	ip, ip, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, ip
	strh	r0, [r1]
	ldr	r1, .L245+0x1c
	lsl	r0, r6, #0x3
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldr	r3, [sp, #0x10]
	cmp	r0, #0x2
	beq	.L236	@cond_branch
	cmp	r0, #0x2
	bgt	.L241	@cond_branch
	cmp	r0, #0x1
	beq	.L235	@cond_branch
	b	.L239
.L246:
	.align	2, 0
.L245:
	.word	gShopDataPtr
	.word	0x2010
	.word	0xfffc
	.word	0xfffe
	.word	0x2012
	.word	0x2014
	.word	0x2018
	.word	gObjectEvents
.L241:
	cmp	r0, #0x3
	beq	.L237	@cond_branch
	b	.L239
.L235:
	ldr	r4, .L247
	add	r0, r2, r4
	add	r0, r0, r5
	mov	r1, sl
	b	.L244
.L248:
	.align	2, 0
.L247:
	.word	0x2016
.L236:
	ldr	r4, .L249
	add	r0, r2, r4
	add	r0, r0, r5
	mov	r1, #0x1
	b	.L244
.L250:
	.align	2, 0
.L249:
	.word	0x2016
.L237:
	ldr	r1, .L251
	add	r0, r2, r1
	add	r0, r0, r5
	mov	r1, #0x2
	b	.L244
.L252:
	.align	2, 0
.L251:
	.word	0x2016
.L239:
	mov	r2, r9
	ldr	r0, [r2]
	mov	r2, r8
	add	r1, r4, r2
	lsl	r1, r1, #0x1
	ldr	r4, .L253
	add	r0, r0, r4
	add	r0, r0, r1
	mov	r1, #0x3
.L244:
	strh	r1, [r0]
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
.L231:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x6
	bhi	.LCB2536
	b	.L232	@long jump
.LCB2536:
	ldr	r1, [sp, #0xc]
	lsl	r0, r1, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x4
	bhi	.LCB2545
	b	.L228	@long jump
.LCB2545:
	add	sp, sp, #0x18
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L254:
	.align	2, 0
.L253:
	.word	0x2016
.Lfe37:
	.size	 BuyMenuCollectObjectEventData,.Lfe37-BuyMenuCollectObjectEventData
	.align	2, 0
	.type	 BuyMenuDrawObjectEvents,function
	.thumb_func
BuyMenuDrawObjectEvents:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r7, #0x0
	ldr	r0, .L263
	mov	r8, r0
	ldr	r1, .L263+0x4
	mov	sl, r1
	ldr	r2, .L263+0x8
	mov	r9, r2
.L259:
	mov	r3, r8
	ldr	r0, [r3]
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r5, r1, #0x1
	ldr	r4, .L263+0xc
	add	r0, r0, r4
	add	r1, r0, r5
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x10
	beq	.L258	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r4, r8
	ldr	r3, [r4]
	ldr	r2, .L263+0xc
	add	r1, r3, r2
	add	r1, r1, r5
	mov	r4, #0x0
	ldrsh	r2, [r1, r4]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, sl
	ldrb	r4, [r1, #0x5]
	ldr	r2, .L263+0x10
	add	r1, r3, r2
	add	r1, r1, r5
	ldrh	r2, [r1]
	lsl	r2, r2, #0x4
	add	r2, r2, #0x8
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r1, .L263+0x14
	add	r3, r3, r1
	add	r3, r3, r5
	ldrh	r3, [r3]
	lsl	r3, r3, #0x4
	mov	r1, #0xa
	ldrsh	r0, [r0, r1]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	sub	r0, r0, #0x30
	sub	r3, r3, r0
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	r0, #0x2
	str	r0, [sp]
	add	r0, r4, #0
	ldr	r1, .L263+0x18
	bl	AddPseudoObjectEvent
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r2, .L263+0xc
	add	r1, r5, r2
	mov	r3, r8
	ldr	r0, [r3]
	add	r0, r0, r1
	bl	BuyMenuCheckIfObjectEventOverlapsMenuBg
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L261	@cond_branch
	lsl	r2, r4, #0x4
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r2, r9
	add	r2, r2, #0x42
	ldrb	r0, [r2]
	mov	r4, #0x40
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x3f
	and	r0, r0, r1
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2]
.L261:
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	mov	r2, r8
	ldr	r1, [r2]
	ldr	r3, .L263+0x1c
	add	r1, r1, r3
	add	r1, r1, r5
	ldrb	r1, [r1]
	bl	StartSpriteAnim
.L258:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xf
	bls	.L259	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L264:
	.align	2, 0
.L263:
	.word	gShopDataPtr
	.word	gObjectEvents
	.word	gSprites
	.word	0x2010
	.word	0x2012
	.word	0x2014
	.word	SpriteCallbackDummy
	.word	0x2016
.Lfe38:
	.size	 BuyMenuDrawObjectEvents,.Lfe38-BuyMenuDrawObjectEvents
	.align	2, 0
	.type	 BuyMenuCheckIfObjectEventOverlapsMenuBg,function
	.thumb_func
BuyMenuCheckIfObjectEventOverlapsMenuBg:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	mov	r2, #0x4
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x2
	bl	BuyMenuCheckForOverlapWithMenuBg
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L266	@cond_branch
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L266	@cond_branch
	mov	r0, #0x1
	b	.L268
.L266:
	mov	r0, #0x0
.L268:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 BuyMenuCheckIfObjectEventOverlapsMenuBg,.Lfe39-BuyMenuCheckIfObjectEventOverlapsMenuBg
	.align	2, 0
	.type	 BuyMenuCopyMenuBgToBg1TilemapBuffer,function
	.thumb_func
BuyMenuCopyMenuBgToBg1TilemapBuffer:
	push	{r4, r5, r6, lr}
	ldr	r0, .L276
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	add	r4, r0, r1
	add	r3, r0, #0
	mov	r1, #0x0
	ldr	r0, .L276+0x4
	add	r6, r0, #0
	ldr	r5, .L276+0x8
.L273:
	lsl	r0, r1, #0x10
	asr	r2, r0, #0x10
	lsl	r1, r2, #0x1
	add	r0, r1, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L272	@cond_branch
	add	r1, r1, r4
	add	r0, r0, r6
	strh	r0, [r1]
.L272:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r5
	ble	.L273	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gShopDataPtr
	.word	0xc3e3
	.word	0x3ff
.Lfe40:
	.size	 BuyMenuCopyMenuBgToBg1TilemapBuffer,.Lfe40-BuyMenuCopyMenuBgToBg1TilemapBuffer
	.align	2, 0
	.type	 BuyMenuCheckForOverlapWithMenuBg,function
	.thumb_func
BuyMenuCheckForOverlapWithMenuBg:
	push	{lr}
	ldr	r2, .L281
	ldr	r2, [r2]
	lsl	r0, r0, #0x1
	lsl	r1, r1, #0x6
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L279	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x40
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L279	@cond_branch
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0
	bne	.L279	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x42
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L279	@cond_branch
	mov	r0, #0x1
	b	.L280
.L282:
	.align	2, 0
.L281:
	.word	gShopDataPtr
.L279:
	mov	r0, #0x0
.L280:
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 BuyMenuCheckForOverlapWithMenuBg,.Lfe41-BuyMenuCheckForOverlapWithMenuBg
	.align	2, 0
	.type	 Task_BuyMenu,function
	.thumb_func
Task_BuyMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	ldr	r1, .L304
	add	r7, r0, r1
	ldr	r0, .L304+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB2901
	b	.L284	@long jump
.LCB2901:
	ldrb	r0, [r7, #0xe]
	bl	ListMenu_ProcessInput
	add	r6, r0, #0
	ldrb	r0, [r7, #0xe]
	ldr	r1, .L304+0x8
	mov	r9, r1
	ldr	r2, [r1]
	ldr	r3, .L304+0xc
	add	r1, r2, r3
	sub	r3, r3, #0x2
	add	r2, r2, r3
	bl	ListMenuGetScrollAndRow
	mov	r0, #0x2
	neg	r0, r0
	cmp	r6, r0
	beq	.L287	@cond_branch
	add	r0, r0, #0x1
	cmp	r6, r0
	bne	.L288	@cond_branch
	b	.L284
.L305:
	.align	2, 0
.L304:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gShopDataPtr
	.word	0x2008
.L287:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, r8
	bl	ExitBuyMenu
	b	.L284
.L288:
	mov	r0, #0x5
	bl	PlaySE
	strh	r6, [r7, #0xa]
	mov	r0, #0x2
	bl	ClearWindowTilemap
	bl	BuyMenuRemoveScrollIndicatorArrows
	ldrb	r0, [r7, #0xe]
	mov	r1, #0x2
	bl	BuyMenuPrintCursor
	ldr	r0, .L306
	ldrb	r0, [r0, #0xf]
	cmp	r0, #0
	bne	.L289	@cond_branch
	lsl	r5, r6, #0x10
	lsr	r0, r5, #0x10
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	mov	r2, r9
	ldr	r1, [r2]
	mov	r3, #0x80
	lsl	r3, r3, #0x6
	add	r1, r1, r3
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	str	r4, [r1]
	b	.L290
.L307:
	.align	2, 0
.L306:
	.word	gMartInfo
.L289:
	mov	r0, r9
	ldr	r1, [r0]
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	ldr	r2, .L308
	lsl	r0, r6, #0x5
	add	r0, r0, r2
	ldrh	r0, [r0, #0x14]
	str	r0, [r1]
	lsl	r5, r6, #0x10
.L290:
	lsr	r4, r5, #0x10
	add	r0, r4, #0
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bne	.L291	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L292	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	CheckPCHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L291	@cond_branch
.L292:
	ldr	r1, .L308+0x4
	ldr	r2, .L308+0x8
	b	.L303
.L309:
	.align	2, 0
.L308:
	.word	gDecorations
	.word	gText_SoldOut
	.word	BuyMenuReturnToItemList
.L291:
	ldr	r0, .L310
	ldr	r0, [r0]
	mov	r3, #0x92
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	ldr	r1, .L310+0x4
	mov	r9, r1
	ldr	r1, [r1]
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	mov	sl, r2
	add	r1, r1, sl
	ldr	r1, [r1]
	bl	IsEnoughMoney
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L294	@cond_branch
	ldr	r1, .L310+0x8
	ldr	r2, .L310+0xc
	b	.L303
.L311:
	.align	2, 0
.L310:
	.word	gSaveBlock1Ptr
	.word	gShopDataPtr
	.word	gText_YouDontHaveMoney
	.word	BuyMenuReturnToItemList
.L294:
	ldr	r4, .L312
	ldrb	r0, [r4, #0xf]
	cmp	r0, #0
	bne	.L296	@cond_branch
	lsr	r4, r5, #0x10
	ldr	r1, .L312+0x4
	add	r0, r4, #0
	bl	CopyItemName
	add	r0, r4, #0
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bne	.L297	@cond_branch
	ldr	r0, .L312+0x8
	mov	r3, r9
	ldr	r1, [r3]
	add	r1, r1, sl
	ldr	r1, [r1]
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L312+0xc
	ldr	r1, .L312+0x10
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	strh	r0, [r7, #0x2]
	ldrh	r0, [r7, #0xa]
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	mov	r2, r9
	ldr	r1, [r2]
	add	r1, r1, sl
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	mul	r0, r0, r4
	str	r0, [r1]
	ldr	r2, .L312+0x14
	mov	r0, r8
	add	r1, r5, #0
	bl	BuyMenuDisplayMessage
	b	.L284
.L313:
	.align	2, 0
.L312:
	.word	gMartInfo
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_YouWantedVar1ThatllBeVar2
	.word	BuyMenuConfirmPurchase
.L297:
	ldr	r1, .L314
	ldr	r2, .L314+0x4
.L303:
	mov	r0, r8
	bl	BuyMenuDisplayMessage
	b	.L284
.L315:
	.align	2, 0
.L314:
	.word	gText_Var1CertainlyHowMany
	.word	Task_BuyHowManyDialogueInit
.L296:
	ldr	r0, .L316
	lsl	r1, r6, #0x5
	ldr	r2, .L316+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L316+0x8
	mov	r2, r9
	ldr	r1, [r2]
	add	r1, r1, sl
	ldr	r1, [r1]
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldrb	r0, [r4, #0xf]
	cmp	r0, #0x1
	bne	.L300	@cond_branch
	ldr	r0, .L316+0xc
	ldr	r1, .L316+0x10
	bl	StringExpandPlaceholders
	b	.L301
.L317:
	.align	2, 0
.L316:
	.word	gStringVar1
	.word	gDecorations+0x1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_Var1IsItThatllBeVar2
.L300:
	ldr	r0, .L318
	ldr	r1, .L318+0x4
	bl	StringExpandPlaceholders
.L301:
	ldr	r1, .L318
	ldr	r2, .L318+0x8
	mov	r0, r8
	bl	BuyMenuDisplayMessage
.L284:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	gStringVar4
	.word	gText_YouWantedVar1ThatllBeVar2
	.word	BuyMenuConfirmPurchase
.Lfe42:
	.size	 Task_BuyMenu,.Lfe42-Task_BuyMenu
	.align	2, 0
	.type	 Task_BuyHowManyDialogueInit,function
	.thumb_func
Task_BuyHowManyDialogueInit:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	ldr	r0, .L323
	add	r5, r5, r0
	ldrh	r0, [r5, #0xa]
	bl	CountTotalItemQuantityInBag
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r0, .L323+0x4
	add	r1, r4, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L323+0x8
	ldr	r1, .L323+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	BuyMenuPrint
	mov	r0, #0x1
	strh	r0, [r5, #0x2]
	mov	r0, #0x4
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	add	r0, r6, #0
	bl	BuyMenuPrintItemQuantityAndPrice
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L323+0x10
	ldr	r0, [r0]
	mov	r1, #0x92
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	bl	GetMoney
	ldr	r1, .L323+0x14
	ldr	r4, [r1]
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r1, r4, r2
	ldr	r1, [r1]
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x63
	bls	.L321	@cond_branch
	ldr	r0, .L323+0x18
	add	r1, r4, r0
	mov	r0, #0x63
	strb	r0, [r1]
	b	.L322
.L324:
	.align	2, 0
.L323:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_InBagVar1
	.word	gSaveBlock1Ptr
	.word	gShopDataPtr
	.word	0x200a
.L321:
	ldr	r2, .L325
	add	r0, r4, r2
	strb	r1, [r0]
.L322:
	ldr	r0, .L325+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L325+0x8
	str	r0, [r1]
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L326:
	.align	2, 0
.L325:
	.word	0x200a
	.word	gTasks
	.word	Task_BuyHowManyDialogueHandleInput
.Lfe43:
	.size	 Task_BuyHowManyDialogueInit,.Lfe43-Task_BuyHowManyDialogueInit
	.align	2, 0
	.type	 Task_BuyHowManyDialogueHandleInput,function
	.thumb_func
Task_BuyHowManyDialogueHandleInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r4, r6, #0
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L333
	add	r5, r0, r1
	add	r0, r5, #0x2
	ldr	r7, .L333+0x4
	ldr	r1, [r7]
	ldr	r2, .L333+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	AdjustQuantityAccordingToDPadInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L328	@cond_branch
	ldrh	r0, [r5, #0xa]
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	ldr	r1, [r7]
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	mov	r2, #0x2
	ldrsh	r0, [r5, r2]
	mul	r0, r0, r4
	str	r0, [r1]
	add	r0, r6, #0
	bl	BuyMenuPrintItemQuantityAndPrice
	b	.L329
.L334:
	.align	2, 0
.L333:
	.word	gTasks+0x8
	.word	gShopDataPtr
	.word	0x200a
.L328:
	ldr	r0, .L335
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L330	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x4
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x4
	bl	ClearWindowTilemap
	mov	r0, #0x3
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	ldrh	r0, [r5, #0xa]
	ldr	r1, .L335+0x4
	bl	CopyItemName
	ldr	r0, .L335+0x8
	mov	r2, #0x2
	ldrsh	r1, [r5, r2]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L335+0xc
	ldr	r1, [r7]
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	ldr	r1, [r1]
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L335+0x10
	ldr	r2, .L335+0x14
	add	r0, r6, #0
	bl	BuyMenuDisplayMessage
	b	.L329
.L336:
	.align	2, 0
.L335:
	.word	gMain
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_Var1AndYouWantedVar2
	.word	BuyMenuConfirmPurchase
.L330:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L329	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x4
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x4
	bl	ClearWindowTilemap
	mov	r0, #0x3
	bl	ClearWindowTilemap
	add	r0, r4, #0
	bl	BuyMenuReturnToItemList
.L329:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 Task_BuyHowManyDialogueHandleInput,.Lfe44-Task_BuyHowManyDialogueHandleInput
	.align	2, 0
	.type	 BuyMenuConfirmPurchase,function
	.thumb_func
BuyMenuConfirmPurchase:
	push	{lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L338
	mov	r2, #0x0
	str	r2, [sp]
	mov	r2, #0x1
	str	r2, [sp, #0x4]
	mov	r2, #0xd
	str	r2, [sp, #0x8]
	ldr	r2, .L338+0x4
	str	r2, [sp, #0xc]
	mov	r2, #0x1
	mov	r3, #0x0
	bl	CreateYesNoMenuWithCallbacks
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L339:
	.align	2, 0
.L338:
	.word	sShopBuyMenuYesNoWindowTemplates
	.word	sShopPurchaseYesNoFuncs
.Lfe45:
	.size	 BuyMenuConfirmPurchase,.Lfe45-BuyMenuConfirmPurchase
	.align	2, 0
	.type	 BuyMenuTryMakePurchase,function
	.thumb_func
BuyMenuTryMakePurchase:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L351
	add	r4, r0, r1
	mov	r0, #0x1
	bl	PutWindowTilemap
	ldr	r6, .L351+0x4
	ldrb	r0, [r6, #0xf]
	cmp	r0, #0
	bne	.L341	@cond_branch
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x2]
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L342	@cond_branch
	ldrh	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	GetSetItemObtained
	ldrb	r0, [r4, #0xe]
	bl	RedrawListMenu
	add	r0, r5, #0
	bl	RecordItemPurchase
	ldr	r1, .L351+0x8
	b	.L349
.L352:
	.align	2, 0
.L351:
	.word	gTasks+0x8
	.word	gMartInfo
	.word	gText_HereYouGoThankYou
.L342:
	ldr	r1, .L353
	ldr	r2, .L353+0x4
	b	.L350
.L354:
	.align	2, 0
.L353:
	.word	gText_NoMoreRoomForThis
	.word	BuyMenuReturnToItemList
.L341:
	ldrb	r0, [r4, #0xa]
	bl	DecorationAdd
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L345	@cond_branch
	ldrb	r0, [r6, #0xf]
	cmp	r0, #0x1
	bne	.L346	@cond_branch
	ldr	r1, .L355
	b	.L349
.L356:
	.align	2, 0
.L355:
	.word	gText_ThankYouIllSendItHome
.L346:
	ldr	r1, .L357
.L349:
	ldr	r2, .L357+0x4
.L350:
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
	b	.L344
.L358:
	.align	2, 0
.L357:
	.word	gText_ThanksIllSendItHome
	.word	BuyMenuSubtractMoney
.L345:
	ldr	r1, .L359
	ldr	r2, .L359+0x4
	add	r0, r7, #0
	bl	BuyMenuDisplayMessage
.L344:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L360:
	.align	2, 0
.L359:
	.word	gText_SpaceForVar1Full
	.word	BuyMenuReturnToItemList
.Lfe46:
	.size	 BuyMenuTryMakePurchase,.Lfe46-BuyMenuTryMakePurchase
	.align	2, 0
	.type	 BuyMenuSubtractMoney,function
	.thumb_func
BuyMenuSubtractMoney:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, #0x26
	bl	IncrementGameStat
	ldr	r5, .L365
	ldr	r0, [r5]
	mov	r4, #0x92
	lsl	r4, r4, #0x3
	add	r0, r0, r4
	ldr	r1, .L365+0x4
	ldr	r1, [r1]
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	RemoveMoney
	mov	r0, #0x5f
	bl	PlaySE
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	GetMoney
	add	r1, r0, #0
	mov	r0, #0x0
	mov	r2, #0x0
	bl	PrintMoneyAmountInMoneyBox
	ldr	r0, .L365+0x8
	ldrb	r0, [r0, #0xf]
	cmp	r0, #0
	bne	.L362	@cond_branch
	ldr	r0, .L365+0xc
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L365+0x10
	b	.L364
.L366:
	.align	2, 0
.L365:
	.word	gSaveBlock1Ptr
	.word	gShopDataPtr
	.word	gMartInfo
	.word	gTasks
	.word	Task_ReturnToItemListAfterItemPurchase
.L362:
	ldr	r0, .L367
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L367+0x4
.L364:
	str	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	gTasks
	.word	Task_ReturnToItemListAfterDecorationPurchase
.Lfe47:
	.size	 BuyMenuSubtractMoney,.Lfe47-BuyMenuSubtractMoney
	.align	2, 0
	.type	 Task_ReturnToItemListAfterItemPurchase,function
	.thumb_func
Task_ReturnToItemListAfterItemPurchase:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L376
	add	r4, r0, r1
	ldr	r0, .L376+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L370	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r0, [r4, #0xa]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L371	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	ble	.L371	@cond_branch
	mov	r1, #0xa
	bl	__divsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0xc
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L371	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x13
	ble	.L372	@cond_branch
	ldr	r1, .L376+0x8
	b	.L375
.L377:
	.align	2, 0
.L376:
	.word	gTasks+0x8
	.word	gMain
	.word	gText_ThrowInPremierBalls
.L372:
	ldr	r1, .L378
.L375:
	ldr	r2, .L378+0x4
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
	b	.L370
.L379:
	.align	2, 0
.L378:
	.word	gText_ThrowInPremierBall
	.word	BuyMenuReturnToItemList
.L371:
	add	r0, r5, #0
	bl	BuyMenuReturnToItemList
.L370:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 Task_ReturnToItemListAfterItemPurchase,.Lfe48-Task_ReturnToItemListAfterItemPurchase
	.align	2, 0
	.type	 Task_ReturnToItemListAfterDecorationPurchase,function
	.thumb_func
Task_ReturnToItemListAfterDecorationPurchase:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L382
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L381	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	BuyMenuReturnToItemList
.L381:
	pop	{r4}
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	gMain
.Lfe49:
	.size	 Task_ReturnToItemListAfterDecorationPurchase,.Lfe49-Task_ReturnToItemListAfterDecorationPurchase
	.align	2, 0
	.type	 BuyMenuReturnToItemList,function
	.thumb_func
BuyMenuReturnToItemList:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r5, .L385
	add	r6, r4, r5
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	ldrb	r0, [r6, #0xe]
	mov	r1, #0x1
	bl	BuyMenuPrintCursor
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	bl	BuyMenuAddScrollIndicatorArrows
	sub	r5, r5, #0x8
	add	r4, r4, r5
	ldr	r0, .L385+0x4
	str	r0, [r4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L386:
	.align	2, 0
.L385:
	.word	gTasks+0x8
	.word	Task_BuyMenu
.Lfe50:
	.size	 BuyMenuReturnToItemList,.Lfe50-BuyMenuReturnToItemList
	.align	2, 0
	.type	 BuyMenuPrintItemQuantityAndPrice,function
	.thumb_func
BuyMenuPrintItemQuantityAndPrice:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L388
	add	r4, r4, r0
	mov	r0, #0x4
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L388+0x4
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldr	r3, [r0]
	mov	r0, #0xff
	str	r0, [sp]
	mov	r0, #0x4
	mov	r1, #0x20
	mov	r2, #0x1
	bl	PrintMoneyAmount
	ldr	r0, .L388+0x8
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L388+0xc
	ldr	r1, .L388+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x4
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	BuyMenuPrint
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L389:
	.align	2, 0
.L388:
	.word	gTasks+0x8
	.word	gShopDataPtr
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_xVar1
.Lfe51:
	.size	 BuyMenuPrintItemQuantityAndPrice,.Lfe51-BuyMenuPrintItemQuantityAndPrice
	.align	2, 0
	.type	 ExitBuyMenu,function
	.thumb_func
ExitBuyMenu:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L391
	ldr	r0, .L391+0x4
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L391+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L391+0xc
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L392:
	.align	2, 0
.L391:
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
	.word	gTasks
	.word	Task_ExitBuyMenu
.Lfe52:
	.size	 ExitBuyMenu,.Lfe52-ExitBuyMenu
	.align	2, 0
	.type	 Task_ExitBuyMenu,function
	.thumb_func
Task_ExitBuyMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L395
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L394	@cond_branch
	bl	RemoveMoneyLabelObject
	bl	BuyMenuFreeMemory
	ldr	r0, .L395+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L394:
	pop	{r4}
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	gPaletteFade
	.word	CB2_ReturnToField
.Lfe53:
	.size	 Task_ExitBuyMenu,.Lfe53-Task_ExitBuyMenu
	.align	2, 0
	.type	 ClearItemPurchases,function
	.thumb_func
ClearItemPurchases:
	push	{lr}
	ldr	r0, .L398
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L398+0x4
	mov	r1, #0x0
	mov	r2, #0xc
	bl	memset
	pop	{r0}
	bx	r0
.L399:
	.align	2, 0
.L398:
	.word	gMartPurchaseHistoryId
	.word	gMartPurchaseHistory
.Lfe54:
	.size	 ClearItemPurchases,.Lfe54-ClearItemPurchases
	.align	2, 0
	.type	 RecordItemPurchase,function
	.thumb_func
RecordItemPurchase:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L410
	add	r4, r1, r0
	mov	r3, #0x0
	ldr	r5, .L410+0x4
	add	r6, r5, #0
.L404:
	lsl	r0, r3, #0x2
	add	r2, r0, r6
	ldrh	r1, [r2]
	mov	r7, #0xa
	ldrsh	r0, [r4, r7]
	cmp	r1, r0
	bne	.L403	@cond_branch
	ldrh	r0, [r2, #0x2]
	cmp	r0, #0
	beq	.L403	@cond_branch
	add	r1, r0, #0
	mov	r3, #0x2
	ldrsh	r0, [r4, r3]
	add	r0, r1, r0
	cmp	r0, #0xff
	ble	.L406	@cond_branch
	mov	r0, #0xff
	strh	r0, [r2, #0x2]
	b	.L400
.L411:
	.align	2, 0
.L410:
	.word	gTasks+0x8
	.word	gMartPurchaseHistory
.L406:
	ldrh	r0, [r4, #0x2]
	add	r0, r1, r0
	strh	r0, [r2, #0x2]
	b	.L400
.L403:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x2
	bls	.L404	@cond_branch
	ldr	r2, .L412
	ldrb	r0, [r2]
	cmp	r0, #0x2
	bhi	.L400	@cond_branch
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r1, [r4, #0xa]
	strh	r1, [r0]
	ldrb	r0, [r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r1, [r4, #0x2]
	strh	r1, [r0, #0x2]
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
.L400:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L413:
	.align	2, 0
.L412:
	.word	gMartPurchaseHistoryId
.Lfe55:
	.size	 RecordItemPurchase,.Lfe55-RecordItemPurchase
	.align	2, 0
	.globl	CreatePokemartMenu
	.type	 CreatePokemartMenu,function
	.thumb_func
CreatePokemartMenu:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	SetShopItemsForSale
	bl	ClearItemPurchases
	ldr	r0, .L415
	bl	SetShopMenuCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L416:
	.align	2, 0
.L415:
	.word	EnableBothScriptContexts
.Lfe56:
	.size	 CreatePokemartMenu,.Lfe56-CreatePokemartMenu
	.align	2, 0
	.globl	CreateDecorationShop1Menu
	.type	 CreateDecorationShop1Menu,function
	.thumb_func
CreateDecorationShop1Menu:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x1
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	SetShopItemsForSale
	ldr	r0, .L418
	bl	SetShopMenuCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L419:
	.align	2, 0
.L418:
	.word	EnableBothScriptContexts
.Lfe57:
	.size	 CreateDecorationShop1Menu,.Lfe57-CreateDecorationShop1Menu
	.align	2, 0
	.globl	CreateDecorationShop2Menu
	.type	 CreateDecorationShop2Menu,function
	.thumb_func
CreateDecorationShop2Menu:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x2
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	SetShopItemsForSale
	ldr	r0, .L421
	bl	SetShopMenuCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L422:
	.align	2, 0
.L421:
	.word	EnableBothScriptContexts
.Lfe58:
	.size	 CreateDecorationShop2Menu,.Lfe58-CreateDecorationShop2Menu
.text
	.align	2, 0

