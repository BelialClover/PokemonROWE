@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sBattleAnimScriptPtr,object
	.size	 sBattleAnimScriptPtr,4
sBattleAnimScriptPtr:
	.word	0x0
	.align	2, 0
	.type	 sBattleAnimScriptRetAddr,object
	.size	 sBattleAnimScriptRetAddr,4
sBattleAnimScriptRetAddr:
	.word	0x0
	.globl	gAnimScriptCallback
	.align	2, 0
	.type	 gAnimScriptCallback,object
	.size	 gAnimScriptCallback,4
gAnimScriptCallback:
	.word	0x0
	.type	 gAnimFramesToWait,object
	.size	 gAnimFramesToWait,1
gAnimFramesToWait:
	.byte	0x0
	.globl	gAnimScriptActive
	.type	 gAnimScriptActive,object
	.size	 gAnimScriptActive,1
gAnimScriptActive:
	.byte	0x0
	.globl	gAnimVisualTaskCount
	.type	 gAnimVisualTaskCount,object
	.size	 gAnimVisualTaskCount,1
gAnimVisualTaskCount:
	.byte	0x0
	.globl	gAnimSoundTaskCount
	.type	 gAnimSoundTaskCount,object
	.size	 gAnimSoundTaskCount,1
gAnimSoundTaskCount:
	.byte	0x0
	.globl	gAnimDisableStructPtr
	.align	2, 0
	.type	 gAnimDisableStructPtr,object
	.size	 gAnimDisableStructPtr,4
gAnimDisableStructPtr:
	.word	0x0
	.globl	gAnimMoveDmg
	.align	2, 0
	.type	 gAnimMoveDmg,object
	.size	 gAnimMoveDmg,4
gAnimMoveDmg:
	.word	0x0
	.globl	gAnimMovePower
	.align	1, 0
	.type	 gAnimMovePower,object
	.size	 gAnimMovePower,2
gAnimMovePower:
	.short	0x0
	.align	1, 0
	.type	 sAnimSpriteIndexArray,object
	.size	 sAnimSpriteIndexArray,16
sAnimSpriteIndexArray:
	.short	0x0
	.space	14
	.globl	gAnimFriendship
	.type	 gAnimFriendship,object
	.size	 gAnimFriendship,1
gAnimFriendship:
	.byte	0x0
	.globl	gWeatherMoveAnim
	.align	1, 0
	.type	 gWeatherMoveAnim,object
	.size	 gWeatherMoveAnim,2
gWeatherMoveAnim:
	.short	0x0
	.globl	gBattleAnimArgs
	.align	1, 0
	.type	 gBattleAnimArgs,object
	.size	 gBattleAnimArgs,16
gBattleAnimArgs:
	.short	0x0
	.space	14
	.align	1, 0
	.type	 sSoundAnimFramesToWait,object
	.size	 sSoundAnimFramesToWait,2
sSoundAnimFramesToWait:
	.short	0x0
	.type	 sMonAnimTaskIdArray,object
	.size	 sMonAnimTaskIdArray,2
sMonAnimTaskIdArray:
	.byte	0x0
	.space	1
	.globl	gAnimMoveTurn
	.type	 gAnimMoveTurn,object
	.size	 gAnimMoveTurn,1
gAnimMoveTurn:
	.byte	0x0
	.type	 sAnimBackgroundFadeState,object
	.size	 sAnimBackgroundFadeState,1
sAnimBackgroundFadeState:
	.byte	0x0
	.globl	gAnimMoveIndex
	.align	1, 0
	.type	 gAnimMoveIndex,object
	.size	 gAnimMoveIndex,2
gAnimMoveIndex:
	.short	0x0
	.globl	gBattleAnimAttacker
	.type	 gBattleAnimAttacker,object
	.size	 gBattleAnimAttacker,1
gBattleAnimAttacker:
	.byte	0x0
	.globl	gBattleAnimTarget
	.type	 gBattleAnimTarget,object
	.size	 gBattleAnimTarget,1
gBattleAnimTarget:
	.byte	0x0
	.globl	gAnimBattlerSpecies
	.align	1, 0
	.type	 gAnimBattlerSpecies,object
	.size	 gAnimBattlerSpecies,8
gAnimBattlerSpecies:
	.short	0x0
	.space	6
	.globl	gAnimCustomPanning
	.type	 gAnimCustomPanning,object
	.size	 gAnimCustomPanning,1
gAnimCustomPanning:
	.byte	0x0
	.globl	gOamData_AffineOff_ObjNormal_8x8
	.section .rodata
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_8x8,object
	.size	 gOamData_AffineOff_ObjNormal_8x8,8
gOamData_AffineOff_ObjNormal_8x8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_16x16
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_16x16,object
	.size	 gOamData_AffineOff_ObjNormal_16x16,8
gOamData_AffineOff_ObjNormal_16x16:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_32x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_32x32,object
	.size	 gOamData_AffineOff_ObjNormal_32x32,8
gOamData_AffineOff_ObjNormal_32x32:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_64x64
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_64x64,object
	.size	 gOamData_AffineOff_ObjNormal_64x64,8
gOamData_AffineOff_ObjNormal_64x64:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_16x8
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_16x8,object
	.size	 gOamData_AffineOff_ObjNormal_16x8,8
gOamData_AffineOff_ObjNormal_16x8:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_32x8
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_32x8,object
	.size	 gOamData_AffineOff_ObjNormal_32x8,8
gOamData_AffineOff_ObjNormal_32x8:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_32x16
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_32x16,object
	.size	 gOamData_AffineOff_ObjNormal_32x16,8
gOamData_AffineOff_ObjNormal_32x16:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_64x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_64x32,object
	.size	 gOamData_AffineOff_ObjNormal_64x32,8
gOamData_AffineOff_ObjNormal_64x32:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_8x16
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_8x16,object
	.size	 gOamData_AffineOff_ObjNormal_8x16,8
gOamData_AffineOff_ObjNormal_8x16:
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_8x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_8x32,object
	.size	 gOamData_AffineOff_ObjNormal_8x32,8
gOamData_AffineOff_ObjNormal_8x32:
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_16x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_16x32,object
	.size	 gOamData_AffineOff_ObjNormal_16x32,8
gOamData_AffineOff_ObjNormal_16x32:
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjNormal_32x64
	.align	2, 0
	.type	 gOamData_AffineOff_ObjNormal_32x64,object
	.size	 gOamData_AffineOff_ObjNormal_32x64,8
gOamData_AffineOff_ObjNormal_32x64:
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_8x8
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_8x8,object
	.size	 gOamData_AffineNormal_ObjNormal_8x8,8
gOamData_AffineNormal_ObjNormal_8x8:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_16x16
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_16x16,object
	.size	 gOamData_AffineNormal_ObjNormal_16x16,8
gOamData_AffineNormal_ObjNormal_16x16:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_32x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_32x32,object
	.size	 gOamData_AffineNormal_ObjNormal_32x32,8
gOamData_AffineNormal_ObjNormal_32x32:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_64x64
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_64x64,object
	.size	 gOamData_AffineNormal_ObjNormal_64x64,8
gOamData_AffineNormal_ObjNormal_64x64:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_16x8
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_16x8,object
	.size	 gOamData_AffineNormal_ObjNormal_16x8,8
gOamData_AffineNormal_ObjNormal_16x8:
	.byte	0x0
	.byte	0x41
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_32x8
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_32x8,object
	.size	 gOamData_AffineNormal_ObjNormal_32x8,8
gOamData_AffineNormal_ObjNormal_32x8:
	.byte	0x0
	.byte	0x41
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_32x16
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_32x16,object
	.size	 gOamData_AffineNormal_ObjNormal_32x16,8
gOamData_AffineNormal_ObjNormal_32x16:
	.byte	0x0
	.byte	0x41
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_64x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_64x32,object
	.size	 gOamData_AffineNormal_ObjNormal_64x32,8
gOamData_AffineNormal_ObjNormal_64x32:
	.byte	0x0
	.byte	0x41
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_8x16
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_8x16,object
	.size	 gOamData_AffineNormal_ObjNormal_8x16,8
gOamData_AffineNormal_ObjNormal_8x16:
	.byte	0x0
	.byte	0x81
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_8x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_8x32,object
	.size	 gOamData_AffineNormal_ObjNormal_8x32,8
gOamData_AffineNormal_ObjNormal_8x32:
	.byte	0x0
	.byte	0x81
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_16x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_16x32,object
	.size	 gOamData_AffineNormal_ObjNormal_16x32,8
gOamData_AffineNormal_ObjNormal_16x32:
	.byte	0x0
	.byte	0x81
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjNormal_32x64
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjNormal_32x64,object
	.size	 gOamData_AffineNormal_ObjNormal_32x64,8
gOamData_AffineNormal_ObjNormal_32x64:
	.byte	0x0
	.byte	0x81
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_8x8
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_8x8,object
	.size	 gOamData_AffineDouble_ObjNormal_8x8,8
gOamData_AffineDouble_ObjNormal_8x8:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_16x16
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_16x16,object
	.size	 gOamData_AffineDouble_ObjNormal_16x16,8
gOamData_AffineDouble_ObjNormal_16x16:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_32x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_32x32,object
	.size	 gOamData_AffineDouble_ObjNormal_32x32,8
gOamData_AffineDouble_ObjNormal_32x32:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_64x64
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_64x64,object
	.size	 gOamData_AffineDouble_ObjNormal_64x64,8
gOamData_AffineDouble_ObjNormal_64x64:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_16x8
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_16x8,object
	.size	 gOamData_AffineDouble_ObjNormal_16x8,8
gOamData_AffineDouble_ObjNormal_16x8:
	.byte	0x0
	.byte	0x43
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_32x8
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_32x8,object
	.size	 gOamData_AffineDouble_ObjNormal_32x8,8
gOamData_AffineDouble_ObjNormal_32x8:
	.byte	0x0
	.byte	0x43
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_32x16
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_32x16,object
	.size	 gOamData_AffineDouble_ObjNormal_32x16,8
gOamData_AffineDouble_ObjNormal_32x16:
	.byte	0x0
	.byte	0x43
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_64x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_64x32,object
	.size	 gOamData_AffineDouble_ObjNormal_64x32,8
gOamData_AffineDouble_ObjNormal_64x32:
	.byte	0x0
	.byte	0x43
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_8x16
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_8x16,object
	.size	 gOamData_AffineDouble_ObjNormal_8x16,8
gOamData_AffineDouble_ObjNormal_8x16:
	.byte	0x0
	.byte	0x83
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_8x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_8x32,object
	.size	 gOamData_AffineDouble_ObjNormal_8x32,8
gOamData_AffineDouble_ObjNormal_8x32:
	.byte	0x0
	.byte	0x83
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_16x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_16x32,object
	.size	 gOamData_AffineDouble_ObjNormal_16x32,8
gOamData_AffineDouble_ObjNormal_16x32:
	.byte	0x0
	.byte	0x83
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjNormal_32x64
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjNormal_32x64,object
	.size	 gOamData_AffineDouble_ObjNormal_32x64,8
gOamData_AffineDouble_ObjNormal_32x64:
	.byte	0x0
	.byte	0x83
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_8x8
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_8x8,object
	.size	 gOamData_AffineOff_ObjBlend_8x8,8
gOamData_AffineOff_ObjBlend_8x8:
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_16x16
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_16x16,object
	.size	 gOamData_AffineOff_ObjBlend_16x16,8
gOamData_AffineOff_ObjBlend_16x16:
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_32x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_32x32,object
	.size	 gOamData_AffineOff_ObjBlend_32x32,8
gOamData_AffineOff_ObjBlend_32x32:
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_64x64
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_64x64,object
	.size	 gOamData_AffineOff_ObjBlend_64x64,8
gOamData_AffineOff_ObjBlend_64x64:
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_16x8
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_16x8,object
	.size	 gOamData_AffineOff_ObjBlend_16x8,8
gOamData_AffineOff_ObjBlend_16x8:
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_32x8
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_32x8,object
	.size	 gOamData_AffineOff_ObjBlend_32x8,8
gOamData_AffineOff_ObjBlend_32x8:
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_32x16
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_32x16,object
	.size	 gOamData_AffineOff_ObjBlend_32x16,8
gOamData_AffineOff_ObjBlend_32x16:
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_64x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_64x32,object
	.size	 gOamData_AffineOff_ObjBlend_64x32,8
gOamData_AffineOff_ObjBlend_64x32:
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_8x16
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_8x16,object
	.size	 gOamData_AffineOff_ObjBlend_8x16,8
gOamData_AffineOff_ObjBlend_8x16:
	.byte	0x0
	.byte	0x84
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_8x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_8x32,object
	.size	 gOamData_AffineOff_ObjBlend_8x32,8
gOamData_AffineOff_ObjBlend_8x32:
	.byte	0x0
	.byte	0x84
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_16x32
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_16x32,object
	.size	 gOamData_AffineOff_ObjBlend_16x32,8
gOamData_AffineOff_ObjBlend_16x32:
	.byte	0x0
	.byte	0x84
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineOff_ObjBlend_32x64
	.align	2, 0
	.type	 gOamData_AffineOff_ObjBlend_32x64,object
	.size	 gOamData_AffineOff_ObjBlend_32x64,8
gOamData_AffineOff_ObjBlend_32x64:
	.byte	0x0
	.byte	0x84
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_8x8
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_8x8,object
	.size	 gOamData_AffineNormal_ObjBlend_8x8,8
gOamData_AffineNormal_ObjBlend_8x8:
	.byte	0x0
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_16x16
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_16x16,object
	.size	 gOamData_AffineNormal_ObjBlend_16x16,8
gOamData_AffineNormal_ObjBlend_16x16:
	.byte	0x0
	.byte	0x5
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_32x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_32x32,object
	.size	 gOamData_AffineNormal_ObjBlend_32x32,8
gOamData_AffineNormal_ObjBlend_32x32:
	.byte	0x0
	.byte	0x5
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_64x64
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_64x64,object
	.size	 gOamData_AffineNormal_ObjBlend_64x64,8
gOamData_AffineNormal_ObjBlend_64x64:
	.byte	0x0
	.byte	0x5
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_16x8
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_16x8,object
	.size	 gOamData_AffineNormal_ObjBlend_16x8,8
gOamData_AffineNormal_ObjBlend_16x8:
	.byte	0x0
	.byte	0x45
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_32x8
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_32x8,object
	.size	 gOamData_AffineNormal_ObjBlend_32x8,8
gOamData_AffineNormal_ObjBlend_32x8:
	.byte	0x0
	.byte	0x45
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_32x16
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_32x16,object
	.size	 gOamData_AffineNormal_ObjBlend_32x16,8
gOamData_AffineNormal_ObjBlend_32x16:
	.byte	0x0
	.byte	0x45
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_64x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_64x32,object
	.size	 gOamData_AffineNormal_ObjBlend_64x32,8
gOamData_AffineNormal_ObjBlend_64x32:
	.byte	0x0
	.byte	0x45
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_8x16
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_8x16,object
	.size	 gOamData_AffineNormal_ObjBlend_8x16,8
gOamData_AffineNormal_ObjBlend_8x16:
	.byte	0x0
	.byte	0x85
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_8x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_8x32,object
	.size	 gOamData_AffineNormal_ObjBlend_8x32,8
gOamData_AffineNormal_ObjBlend_8x32:
	.byte	0x0
	.byte	0x85
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_16x32
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_16x32,object
	.size	 gOamData_AffineNormal_ObjBlend_16x32,8
gOamData_AffineNormal_ObjBlend_16x32:
	.byte	0x0
	.byte	0x85
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineNormal_ObjBlend_32x64
	.align	2, 0
	.type	 gOamData_AffineNormal_ObjBlend_32x64,object
	.size	 gOamData_AffineNormal_ObjBlend_32x64,8
gOamData_AffineNormal_ObjBlend_32x64:
	.byte	0x0
	.byte	0x85
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_8x8
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_8x8,object
	.size	 gOamData_AffineDouble_ObjBlend_8x8,8
gOamData_AffineDouble_ObjBlend_8x8:
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_16x16
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_16x16,object
	.size	 gOamData_AffineDouble_ObjBlend_16x16,8
gOamData_AffineDouble_ObjBlend_16x16:
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_32x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_32x32,object
	.size	 gOamData_AffineDouble_ObjBlend_32x32,8
gOamData_AffineDouble_ObjBlend_32x32:
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_64x64
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_64x64,object
	.size	 gOamData_AffineDouble_ObjBlend_64x64,8
gOamData_AffineDouble_ObjBlend_64x64:
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_16x8
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_16x8,object
	.size	 gOamData_AffineDouble_ObjBlend_16x8,8
gOamData_AffineDouble_ObjBlend_16x8:
	.byte	0x0
	.byte	0x47
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_32x8
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_32x8,object
	.size	 gOamData_AffineDouble_ObjBlend_32x8,8
gOamData_AffineDouble_ObjBlend_32x8:
	.byte	0x0
	.byte	0x47
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_32x16
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_32x16,object
	.size	 gOamData_AffineDouble_ObjBlend_32x16,8
gOamData_AffineDouble_ObjBlend_32x16:
	.byte	0x0
	.byte	0x47
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_64x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_64x32,object
	.size	 gOamData_AffineDouble_ObjBlend_64x32,8
gOamData_AffineDouble_ObjBlend_64x32:
	.byte	0x0
	.byte	0x47
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_8x16
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_8x16,object
	.size	 gOamData_AffineDouble_ObjBlend_8x16,8
gOamData_AffineDouble_ObjBlend_8x16:
	.byte	0x0
	.byte	0x87
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_8x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_8x32,object
	.size	 gOamData_AffineDouble_ObjBlend_8x32,8
gOamData_AffineDouble_ObjBlend_8x32:
	.byte	0x0
	.byte	0x87
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_16x32
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_16x32,object
	.size	 gOamData_AffineDouble_ObjBlend_16x32,8
gOamData_AffineDouble_ObjBlend_16x32:
	.byte	0x0
	.byte	0x87
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gOamData_AffineDouble_ObjBlend_32x64
	.align	2, 0
	.type	 gOamData_AffineDouble_ObjBlend_32x64,object
	.size	 gOamData_AffineDouble_ObjBlend_32x64,8
gOamData_AffineDouble_ObjBlend_32x64:
	.byte	0x0
	.byte	0x87
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.globl	gBattleAnimPicTable
	.align	2, 0
	.type	 gBattleAnimPicTable,object
gBattleAnimPicTable:
	.word	gBattleAnimSpriteGfx_Bone
	.short	0x200
	.short	0x2710
	.word	gBattleAnimSpriteGfx_Spark
	.short	0x300
	.short	0x2711
	.word	gBattleAnimSpriteGfx_Pencil
	.short	0x200
	.short	0x2712
	.word	gBattleAnimSpriteGfx_AirWave
	.short	0x100
	.short	0x2713
	.word	gBattleAnimSpriteGfx_Orb
	.short	0x200
	.short	0x2714
	.word	gBattleAnimSpriteGfx_NewSword
	.short	0x400
	.short	0x2715
	.word	gBattleAnimSpriteGfx_NewLeechSeed
	.short	0x180
	.short	0x2716
	.word	gBattleAnimSpriteGfx_Explosion6
	.short	0x800
	.short	0x2717
	.word	gBattleAnimSpriteGfx_PinkOrb
	.short	0x20
	.short	0x2718
	.word	gBattleAnimSpriteGfx_Gust
	.short	0x400
	.short	0x2719
	.word	gBattleAnimSpriteGfx_IceCube
	.short	0x1200
	.short	0x271a
	.word	gBattleAnimSpriteGfx_Spark2
	.short	0x180
	.short	0x271b
	.word	gBattleAnimSpriteGfx_Orange
	.short	0x80
	.short	0x271c
	.word	gBattleAnimSpriteGfx_YellowBall
	.short	0x80
	.short	0x271d
	.word	gBattleAnimSpriteGfx_LockOn
	.short	0x280
	.short	0x271e
	.word	gBattleAnimSpriteGfx_TiedBag
	.short	0x80
	.short	0x271f
	.word	gBattleAnimSpriteGfx_BlackSmoke
	.short	0x100
	.short	0x2720
	.word	gBattleAnimSpriteGfx_BlackBall
	.short	0x20
	.short	0x2721
	.word	gBattleAnimSpriteGfx_Conversion
	.short	0x80
	.short	0x2722
	.word	gBattleAnimSpriteGfx_Glass
	.short	0x400
	.short	0x2723
	.word	gBattleAnimSpriteGfx_HornHit
	.short	0x200
	.short	0x2724
	.word	gBattleAnimSpriteGfx_Hit
	.short	0xa00
	.short	0x2725
	.word	gBattleAnimSpriteGfx_Hit
	.short	0xa00
	.short	0x2726
	.word	gBattleAnimSpriteGfx_BlueShards
	.short	0x380
	.short	0x2727
	.word	gBattleAnimSpriteGfx_ClosingEye
	.short	0x300
	.short	0x2728
	.word	gBattleAnimSpriteGfx_WavingHand
	.short	0xa00
	.short	0x2729
	.word	gBattleAnimSpriteGfx_HitDuplicate
	.short	0xa00
	.short	0x272a
	.word	gBattleAnimSpriteGfx_Leer
	.short	0xa00
	.short	0x272b
	.word	gBattleAnimSpriteGfx_BlueBurst
	.short	0xa00
	.short	0x272c
	.word	gBattleAnimSpriteGfx_NewEmbers
	.short	0xa00
	.short	0x272d
	.word	gBattleAnimSpriteGfx_GraySmoke
	.short	0xa00
	.short	0x272e
	.word	gBattleAnimSpriteGfx_BlueStar
	.short	0xe00
	.short	0x272f
	.word	gBattleAnimSpriteGfx_BubbleBurst
	.short	0x380
	.short	0x2730
	.word	gBattleAnimSpriteGfx_Fire
	.short	0x1000
	.short	0x2731
	.word	gBattleAnimSpriteGfx_SpinningFire
	.short	0x800
	.short	0x2732
	.word	gBattleAnimSpriteGfx_FirePlume
	.short	0xa00
	.short	0x2733
	.word	gBattleAnimSpriteGfx_Lightning2
	.short	0x800
	.short	0x2734
	.word	gBattleAnimSpriteGfx_Lightning
	.short	0xa00
	.short	0x2735
	.word	gBattleAnimSpriteGfx_ClawSlash2
	.short	0xa00
	.short	0x2736
	.word	gBattleAnimSpriteGfx_ClawSlash
	.short	0xa00
	.short	0x2737
	.word	gBattleAnimSpriteGfx_Scratch3
	.short	0xa00
	.short	0x2738
	.word	gBattleAnimSpriteGfx_Scratch2
	.short	0xa00
	.short	0x2739
	.word	gBattleAnimSpriteGfx_BubbleBurst2
	.short	0xa00
	.short	0x273a
	.word	gBattleAnimSpriteGfx_IceChunk
	.short	0xa00
	.short	0x273b
	.word	gBattleAnimSpriteGfx_Glass2
	.short	0xa00
	.short	0x273c
	.word	gBattleAnimSpriteGfx_PinkHeart2
	.short	0xa00
	.short	0x273d
	.word	gBattleAnimSpriteGfx_SapDrip
	.short	0x1000
	.short	0x273e
	.word	gBattleAnimSpriteGfx_SapDrip
	.short	0x1000
	.short	0x273f
	.word	gBattleAnimSpriteGfx_Sparkle1
	.short	0x1000
	.short	0x2740
	.word	gBattleAnimSpriteGfx_Sparkle1
	.short	0x1000
	.short	0x2741
	.word	gBattleAnimSpriteGfx_HumanoidFoot
	.short	0x200
	.short	0x2742
	.word	gBattleAnimSpriteGfx_MonsterFoot
	.short	0x200
	.short	0x2743
	.word	gBattleAnimSpriteGfx_HumanoidHand
	.short	0x200
	.short	0x2744
	.word	gBattleAnimSpriteGfx_NoiseLine
	.short	0x800
	.short	0x2745
	.word	gBattleAnimSpriteGfx_YellowUnk
	.short	0x80
	.short	0x2746
	.word	gBattleAnimSpriteGfx_RedFist
	.short	0x200
	.short	0x2747
	.word	gBattleAnimSpriteGfx_SlamHit
	.short	0x1000
	.short	0x2748
	.word	gBattleAnimSpriteGfx_Ring
	.short	0x180
	.short	0x2749
	.word	gBattleAnimSpriteGfx_Rocks
	.short	0xc00
	.short	0x274a
	.word	gBattleAnimSpriteGfx_Z
	.short	0x100
	.short	0x274b
	.word	gBattleAnimSpriteGfx_YellowUnk2
	.short	0x40
	.short	0x274c
	.word	gBattleAnimSpriteGfx_AirSlash
	.short	0x180
	.short	0x274d
	.word	gBattleAnimSpriteGfx_SpinningGreenOrbs
	.short	0x800
	.short	0x274e
	.word	gBattleAnimSpriteGfx_NewLeaf
	.short	0x480
	.short	0x274f
	.word	gBattleAnimSpriteGfx_Finger
	.short	0x200
	.short	0x2750
	.word	gBattleAnimSpriteGfx_PoisonPowder
	.short	0x200
	.short	0x2751
	.word	gBattleAnimSpriteGfx_BrownTriangle
	.short	0x100
	.short	0x2752
	.word	gBattleAnimSpriteGfx_PoisonPowder
	.short	0x200
	.short	0x2753
	.word	gBattleAnimSpriteGfx_PoisonPowder
	.short	0x200
	.short	0x2754
	.word	gBattleAnimSpriteGfx_PoisonPowder
	.short	0x200
	.short	0x2755
	.word	gBattleAnimSpriteGfx_Sparkle3
	.short	0x200
	.short	0x2756
	.word	gBattleAnimSpriteGfx_Sparkle4
	.short	0xa00
	.short	0x2757
	.word	gBattleAnimSpriteGfx_MusicNotes
	.short	0x300
	.short	0x2758
	.word	gBattleAnimSpriteGfx_Duck
	.short	0x180
	.short	0x2759
	.word	gBattleAnimSpriteGfx_MudSand
	.short	0xa0
	.short	0x275a
	.word	gBattleAnimSpriteGfx_Alert
	.short	0x700
	.short	0x275b
	.word	gBattleAnimSpriteGfx_BlueFlames
	.short	0x400
	.short	0x275c
	.word	gBattleAnimSpriteGfx_BlueFlames2
	.short	0x200
	.short	0x275d
	.word	gBattleAnimSpriteGfx_Shock4
	.short	0x300
	.short	0x275e
	.word	gBattleAnimSpriteGfx_Shock
	.short	0xc00
	.short	0x275f
	.word	gBattleAnimSpriteGfx_Bell2
	.short	0xa00
	.short	0x2760
	.word	gBattleAnimSpriteGfx_PinkGlove
	.short	0x80
	.short	0x2761
	.word	gBattleAnimSpriteGfx_BlueLines
	.short	0x40
	.short	0x2762
	.word	gBattleAnimSpriteGfx_Impact3
	.short	0xe00
	.short	0x2763
	.word	gBattleAnimSpriteGfx_Impact2
	.short	0xe00
	.short	0x2764
	.word	gBattleAnimSpriteGfx_Reticle
	.short	0x280
	.short	0x2765
	.word	gBattleAnimSpriteGfx_Breath
	.short	0x200
	.short	0x2766
	.word	gBattleAnimSpriteGfx_Anger
	.short	0x80
	.short	0x2767
	.word	gBattleAnimSpriteGfx_Snowball
	.short	0xc0
	.short	0x2768
	.word	gBattleAnimSpriteGfx_Vine
	.short	0xa00
	.short	0x2769
	.word	gBattleAnimSpriteGfx_Sword2
	.short	0x200
	.short	0x276a
	.word	gBattleAnimSpriteGfx_Clapping
	.short	0x180
	.short	0x276b
	.word	gBattleAnimSpriteGfx_RedTube
	.short	0x80
	.short	0x276c
	.word	gBattleAnimSpriteGfx_Amnesia
	.short	0x1000
	.short	0x276d
	.word	gBattleAnimSpriteGfx_String2
	.short	0xa00
	.short	0x276e
	.word	gBattleAnimSpriteGfx_Pencil2
	.short	0x180
	.short	0x276f
	.word	gBattleAnimSpriteGfx_Petal
	.short	0x380
	.short	0x2770
	.word	gBattleAnimSpriteGfx_BentSpoon
	.short	0xc00
	.short	0x2771
	.word	gBattleAnimSpriteGfx_Web
	.short	0x200
	.short	0x2772
	.word	gBattleAnimSpriteGfx_MilkBottle
	.short	0x200
	.short	0x2773
	.word	gBattleAnimSpriteGfx_Coin
	.short	0x200
	.short	0x2774
	.word	gBattleAnimSpriteGfx_CrackedEgg
	.short	0x200
	.short	0x2775
	.word	gBattleAnimSpriteGfx_HatchedEgg
	.short	0x400
	.short	0x2776
	.word	gBattleAnimSpriteGfx_FreshEgg
	.short	0x80
	.short	0x2777
	.word	gBattleAnimSpriteGfx_Fangs
	.short	0x400
	.short	0x2778
	.word	gBattleAnimSpriteGfx_Explosion2
	.short	0xc00
	.short	0x2779
	.word	gBattleAnimSpriteGfx_Explosion3
	.short	0x200
	.short	0x277a
	.word	gBattleAnimSpriteGfx_WaterDroplet
	.short	0x1000
	.short	0x277b
	.word	gBattleAnimSpriteGfx_WaterDroplet2
	.short	0xa00
	.short	0x277c
	.word	gBattleAnimSpriteGfx_Seed2
	.short	0x20
	.short	0x277d
	.word	gBattleAnimSpriteGfx_Sprout
	.short	0xe00
	.short	0x277e
	.word	gBattleAnimSpriteGfx_RedWand
	.short	0x80
	.short	0x277f
	.word	gBattleAnimSpriteGfx_PurpleGreenUnk
	.short	0xa00
	.short	0x2780
	.word	gBattleAnimSpriteGfx_WaterColumn
	.short	0x400
	.short	0x2781
	.word	gBattleAnimSpriteGfx_MudUnk
	.short	0x200
	.short	0x2782
	.word	gBattleAnimSpriteGfx_RainDrops
	.short	0x700
	.short	0x2783
	.word	gBattleAnimSpriteGfx_FurySwipes
	.short	0x800
	.short	0x2784
	.word	gBattleAnimSpriteGfx_Vine2
	.short	0xa00
	.short	0x2785
	.word	gBattleAnimSpriteGfx_Teeth
	.short	0x600
	.short	0x2786
	.word	gBattleAnimSpriteGfx_Bone2
	.short	0x800
	.short	0x2787
	.word	gBattleAnimSpriteGfx_WhiteBag
	.short	0x200
	.short	0x2788
	.word	gBattleAnimSpriteGfx_Unknown
	.short	0x40
	.short	0x2789
	.word	gBattleAnimSpriteGfx_PurpleCoral
	.short	0x180
	.short	0x278a
	.word	gBattleAnimSpriteGfx_PurpleDroplet
	.short	0x600
	.short	0x278b
	.word	gBattleAnimSpriteGfx_Shock2
	.short	0x600
	.short	0x278c
	.word	gBattleAnimSpriteGfx_ClosingEye2
	.short	0x200
	.short	0x278d
	.word	gBattleAnimSpriteGfx_MetalBall
	.short	0x80
	.short	0x278e
	.word	gBattleAnimSpriteGfx_MonsterDoll
	.short	0x200
	.short	0x278f
	.word	gBattleAnimSpriteGfx_Whirlwind
	.short	0x800
	.short	0x2790
	.word	gBattleAnimSpriteGfx_Whirlwind2
	.short	0x80
	.short	0x2791
	.word	gBattleAnimSpriteGfx_Explosion4
	.short	0xa00
	.short	0x2792
	.word	gBattleAnimSpriteGfx_Explosion5
	.short	0x280
	.short	0x2793
	.word	gBattleAnimSpriteGfx_Tongue
	.short	0x280
	.short	0x2794
	.word	gBattleAnimSpriteGfx_Smoke
	.short	0x100
	.short	0x2795
	.word	gBattleAnimSpriteGfx_Smoke2
	.short	0x200
	.short	0x2796
	.word	gBattleAnimSpriteGfx_Impact
	.short	0x200
	.short	0x2797
	.word	gBattleAnimSpriteGfx_CircleImpact
	.short	0x20
	.short	0x2798
	.word	gBattleAnimSpriteGfx_Scratch
	.short	0xa00
	.short	0x2799
	.word	gBattleAnimSpriteGfx_Cut
	.short	0x800
	.short	0x279a
	.word	gBattleAnimSpriteGfx_NewTeeth
	.short	0x800
	.short	0x279b
	.word	gBattleAnimSpriteGfx_RainbowRings
	.short	0xc0
	.short	0x279c
	.word	gBattleAnimSpriteGfx_IceCrystals
	.short	0x1c0
	.short	0x279d
	.word	gBattleAnimSpriteGfx_IceSpikes
	.short	0x100
	.short	0x279e
	.word	gBattleAnimSpriteGfx_NewHandsAndFeet
	.short	0x800
	.short	0x279f
	.word	gBattleAnimSpriteGfx_MistCloud
	.short	0x200
	.short	0x27a0
	.word	gBattleAnimSpriteGfx_Clamp
	.short	0x800
	.short	0x27a1
	.word	gBattleAnimSpriteGfx_Bubble
	.short	0x180
	.short	0x27a2
	.word	gBattleAnimSpriteGfx_Orbs
	.short	0x180
	.short	0x27a3
	.word	gBattleAnimSpriteGfx_WaterImpact
	.short	0x200
	.short	0x27a4
	.word	gBattleAnimSpriteGfx_WaterOrb
	.short	0x200
	.short	0x27a5
	.word	gBattleAnimSpriteGfx_PoisonBubble
	.short	0x180
	.short	0x27a6
	.word	gBattleAnimSpriteGfx_ToxicBubble
	.short	0x400
	.short	0x27a7
	.word	gBattleAnimSpriteGfx_NewSpikes
	.short	0x80
	.short	0x27a8
	.word	gBattleAnimSpriteGfx_HornHit2
	.short	0x100
	.short	0x27a9
	.word	gBattleAnimSpriteGfx_AirWave2
	.short	0x100
	.short	0x27aa
	.word	gBattleAnimSpriteGfx_SmallBubbles
	.short	0x140
	.short	0x27ab
	.word	gBattleAnimSpriteGfx_NewFly
	.short	0x800
	.short	0x27ac
	.word	gBattleAnimSpriteGfx_Sunlight
	.short	0x200
	.short	0x27ad
	.word	gBattleAnimSpriteGfx_Spore
	.short	0x100
	.short	0x27ae
	.word	gBattleAnimSpriteGfx_Flower
	.short	0xa0
	.short	0x27af
	.word	gBattleAnimSpriteGfx_RazorLeaf
	.short	0x100
	.short	0x27b0
	.word	gBattleAnimSpriteGfx_Needle
	.short	0x80
	.short	0x27b1
	.word	gBattleAnimSpriteGfx_WhirlwindLines
	.short	0x300
	.short	0x27b2
	.word	gBattleAnimSpriteGfx_GoldRing
	.short	0x100
	.short	0x27b3
	.word	gBattleAnimSpriteGfx_GoldRing
	.short	0x100
	.short	0x27b4
	.word	gBattleAnimSpriteGfx_GoldRing
	.short	0x100
	.short	0x27b5
	.word	gBattleAnimSpriteGfx_GreenLightWall
	.short	0x800
	.short	0x27b6
	.word	gBattleAnimSpriteGfx_GreenLightWall
	.short	0x800
	.short	0x27b7
	.word	gBattleAnimSpriteGfx_GreenLightWall
	.short	0x800
	.short	0x27b8
	.word	gBattleAnimSpriteGfx_GreenLightWall
	.short	0x800
	.short	0x27b9
	.word	gBattleAnimSpriteGfx_GreenLightWall
	.short	0x800
	.short	0x27ba
	.word	gBattleAnimSpriteGfx_BlackBall2
	.short	0x80
	.short	0x27bb
	.word	gBattleAnimSpriteGfx_MistCloud
	.short	0x200
	.short	0x27bc
	.word	gBattleAnimSpriteGfx_SparkH
	.short	0x200
	.short	0x27bd
	.word	gBattleAnimSpriteGfx_YellowStar
	.short	0x200
	.short	0x27be
	.word	gBattleAnimSpriteGfx_LargeFreshEgg
	.short	0x80
	.short	0x27bf
	.word	gBattleAnimSpriteGfx_ShadowBall
	.short	0x200
	.short	0x27c0
	.word	gBattleAnimSpriteGfx_Lick
	.short	0x500
	.short	0x27c1
	.word	gBattleAnimSpriteGfx_VoidLines
	.short	0x800
	.short	0x27c2
	.word	gBattleAnimSpriteGfx_String
	.short	0x400
	.short	0x27c3
	.word	gBattleAnimSpriteGfx_WebThread
	.short	0x20
	.short	0x27c4
	.word	gBattleAnimSpriteGfx_SpiderWeb
	.short	0x800
	.short	0x27c5
	.word	gBattleAnimSpriteGfx_Lightbulb
	.short	0x100
	.short	0x27c6
	.word	gBattleAnimSpriteGfx_Slash
	.short	0x800
	.short	0x27c7
	.word	gBattleAnimSpriteGfx_FocusEnergy
	.short	0x400
	.short	0x27c8
	.word	gBattleAnimSpriteGfx_SphereToCube
	.short	0xa00
	.short	0x27c9
	.word	gBattleAnimSpriteGfx_Tendrils
	.short	0x1000
	.short	0x27ca
	.word	gBattleAnimSpriteGfx_NewEye
	.short	0x800
	.short	0x27cb
	.word	gBattleAnimSpriteGfx_WhiteShadow
	.short	0x400
	.short	0x27cc
	.word	gBattleAnimSpriteGfx_TealAlert
	.short	0x200
	.short	0x27cd
	.word	gBattleAnimSpriteGfx_OpeningEye
	.short	0x800
	.short	0x27ce
	.word	gBattleAnimSpriteGfx_RoundWhiteHalo
	.short	0x800
	.short	0x27cf
	.word	gBattleAnimSpriteGfx_FangAttack
	.short	0x800
	.short	0x27d0
	.word	gBattleAnimSpriteGfx_PurpleHandOutline
	.short	0x200
	.short	0x27d1
	.word	gBattleAnimSpriteGfx_Moon
	.short	0x800
	.short	0x27d2
	.word	gBattleAnimSpriteGfx_GreenSparkle
	.short	0x200
	.short	0x27d3
	.word	gBattleAnimSpriteGfx_Spiral
	.short	0x800
	.short	0x27d4
	.word	gBattleAnimSpriteGfx_SnoreZ
	.short	0x200
	.short	0x27d5
	.word	gBattleAnimSpriteGfx_Explosion
	.short	0x800
	.short	0x27d6
	.word	gBattleAnimSpriteGfx_NewNail
	.short	0x400
	.short	0x27d7
	.word	gBattleAnimSpriteGfx_GhostlySpirit
	.short	0x200
	.short	0x27d8
	.word	gBattleAnimSpriteGfx_WarmRock
	.short	0xa80
	.short	0x27d9
	.word	gBattleAnimSpriteGfx_BreakingEgg
	.short	0x600
	.short	0x27da
	.word	gBattleAnimSpriteGfx_ThinRing
	.short	0x800
	.short	0x27db
	.word	gBattleAnimSpriteGfx_PunchImpact
	.short	0x200
	.short	0x27dc
	.word	gBattleAnimSpriteGfx_Bell
	.short	0x600
	.short	0x27dd
	.word	gBattleAnimSpriteGfx_MusicNotes2
	.short	0x800
	.short	0x27de
	.word	gBattleAnimSpriteGfx_SpeedDust
	.short	0x180
	.short	0x27df
	.word	gBattleAnimSpriteGfx_TornMetal
	.short	0x800
	.short	0x27e0
	.word	gBattleAnimSpriteGfx_ThoughtBubble
	.short	0x800
	.short	0x27e1
	.word	gBattleAnimSpriteGfx_MagentaHeart
	.short	0x80
	.short	0x27e2
	.word	gBattleAnimSpriteGfx_ElectricOrbs
	.short	0x80
	.short	0x27e3
	.word	gBattleAnimSpriteGfx_CircleOfLight
	.short	0x800
	.short	0x27e4
	.word	gBattleAnimSpriteGfx_Electricity
	.short	0x800
	.short	0x27e5
	.word	gBattleAnimSpriteGfx_Finger2
	.short	0x600
	.short	0x27e6
	.word	gBattleAnimSpriteGfx_MovementWaves
	.short	0x600
	.short	0x27e7
	.word	gBattleAnimSpriteGfx_MagentaHeart
	.short	0x80
	.short	0x27e8
	.word	gBattleAnimSpriteGfx_RedOrb
	.short	0x80
	.short	0x27e9
	.word	gBattleAnimSpriteGfx_EyeSparkle
	.short	0x180
	.short	0x27ea
	.word	gBattleAnimSpriteGfx_MagentaHeart
	.short	0x80
	.short	0x27eb
	.word	gBattleAnimSpriteGfx_Angel
	.short	0x200
	.short	0x27ec
	.word	gBattleAnimSpriteGfx_Devil
	.short	0x400
	.short	0x27ed
	.word	gBattleAnimSpriteGfx_Swipe
	.short	0xa00
	.short	0x27ee
	.word	gBattleAnimSpriteGfx_Roots
	.short	0x800
	.short	0x27ef
	.word	gBattleAnimSpriteGfx_ItemBag
	.short	0x200
	.short	0x27f0
	.word	gBattleAnimSpriteGfx_JaggedMusicNote
	.short	0x400
	.short	0x27f1
	.word	gBattleAnimSpriteGfx_NewPokeball
	.short	0x80
	.short	0x27f2
	.word	gBattleAnimSpriteGfx_Spotlight
	.short	0x800
	.short	0x27f3
	.word	gBattleAnimSpriteGfx_LetterZ
	.short	0x200
	.short	0x27f4
	.word	gBattleAnimSpriteGfx_RapidSpin
	.short	0x300
	.short	0x27f5
	.word	gBattleAnimSpriteGfx_TriAttackTriangle
	.short	0x800
	.short	0x27f6
	.word	gBattleAnimSpriteGfx_WispOrb
	.short	0x380
	.short	0x27f7
	.word	gBattleAnimSpriteGfx_WispFire
	.short	0x800
	.short	0x27f8
	.word	gBattleAnimSpriteGfx_GoldStars
	.short	0xc0
	.short	0x27f9
	.word	gBattleAnimSpriteGfx_EclipsingOrb
	.short	0x800
	.short	0x27fa
	.word	gBattleAnimSpriteGfx_GrayOrb
	.short	0x60
	.short	0x27fb
	.word	gBattleAnimSpriteGfx_GrayOrb
	.short	0x60
	.short	0x27fc
	.word	gBattleAnimSpriteGfx_GrayOrb
	.short	0x60
	.short	0x27fd
	.word	gBattleAnimSpriteGfx_PinkPetal
	.short	0x80
	.short	0x27fe
	.word	gBattleAnimSpriteGfx_PainSplit
	.short	0x180
	.short	0x27ff
	.word	gBattleAnimSpriteGfx_Confetti
	.short	0x180
	.short	0x2800
	.word	gBattleAnimSpriteGfx_NewGreenStar
	.short	0x200
	.short	0x2801
	.word	gBattleAnimSpriteGfx_PinkCloud
	.short	0x200
	.short	0x2802
	.word	gBattleAnimSpriteGfx_SweatDrop
	.short	0x20
	.short	0x2803
	.word	gBattleAnimSpriteGfx_GuardRing
	.short	0x400
	.short	0x2804
	.word	gBattleAnimSpriteGfx_PurpleScratch
	.short	0x600
	.short	0x2805
	.word	gBattleAnimSpriteGfx_PurpleSwipe
	.short	0x1000
	.short	0x2806
	.word	gBattleAnimSpriteGfx_TagHand
	.short	0x400
	.short	0x2807
	.word	gBattleAnimSpriteGfx_SmallRedEye
	.short	0x20
	.short	0x2808
	.word	gBattleAnimSpriteGfx_HollowOrb
	.short	0x80
	.short	0x2809
	.word	gBattleAnimSpriteGfx_XSign
	.short	0x800
	.short	0x280a
	.word	gBattleAnimSpriteGfx_BluegreenOrb
	.short	0x80
	.short	0x280b
	.word	gBattleAnimSpriteGfx_PawPrint
	.short	0x200
	.short	0x280c
	.word	gBattleAnimSpriteGfx_PurpleFlame
	.short	0x400
	.short	0x280d
	.word	gBattleAnimSpriteGfx_RedBall
	.short	0x200
	.short	0x280e
	.word	gBattleAnimSpriteGfx_SmellingsaltEffect
	.short	0x200
	.short	0x280f
	.word	gBattleAnimSpriteGfx_Meteor
	.short	0x800
	.short	0x2810
	.word	gBattleAnimSpriteGfx_FlatRock
	.short	0x280
	.short	0x2811
	.word	gBattleAnimSpriteGfx_MagnifyingGlass
	.short	0x200
	.short	0x2812
	.word	gBattleAnimSpriteGfx_WaterOrb
	.short	0x200
	.short	0x2813
	.word	gBattleAnimSpriteGfx_MetalSoundWaves
	.short	0x400
	.short	0x2814
	.word	gBattleAnimSpriteGfx_FlyingDirt
	.short	0x200
	.short	0x2815
	.word	gBattleAnimSpriteGfx_IcicleSpear
	.short	0x200
	.short	0x2816
	.word	gBattleAnimSpriteGfx_Hail
	.short	0x80
	.short	0x2817
	.word	gBattleAnimSpriteGfx_GlowyRedOrb
	.short	0x20
	.short	0x2818
	.word	gBattleAnimSpriteGfx_GlowyRedOrb
	.short	0x20
	.short	0x2819
	.word	gBattleAnimSpriteGfx_GreenSpike
	.short	0x80
	.short	0x281a
	.word	gBattleAnimSpriteGfx_CircleOfLight
	.short	0x800
	.short	0x281b
	.word	gBattleAnimSpriteGfx_GlowyRedOrb
	.short	0x20
	.short	0x281c
	.word	gBattleAnimSpriteGfx_Pokeblock
	.short	0x80
	.short	0x281d
	.word	gBattleAnimSpriteGfx_WhiteFeather
	.short	0x400
	.short	0x281e
	.word	gBattleAnimSpriteGfx_Sparkle6
	.short	0x80
	.short	0x281f
	.word	gBattleAnimSpriteGfx_Splash
	.short	0x800
	.short	0x2820
	.word	gBattleAnimSpriteGfx_SweatBead
	.short	0x20
	.short	0x2821
	.word	gBattleAnimSpriteGfx_Gem1
	.short	0x800
	.short	0x2822
	.word	gBattleAnimSpriteGfx_Gem2
	.short	0x800
	.short	0x2823
	.word	gBattleAnimSpriteGfx_Gem3
	.short	0x800
	.short	0x2824
	.word	gBattleAnimSpriteGfx_SlamHit2
	.short	0x1000
	.short	0x2825
	.word	gBattleAnimSpriteGfx_Recycle
	.short	0x800
	.short	0x2826
	.word	gBattleAnimSpriteGfx_RedParticles
	.short	0xa0
	.short	0x2827
	.word	gBattleAnimSpriteGfx_Protect
	.short	0x800
	.short	0x2828
	.word	gBattleAnimSpriteGfx_DirtMound
	.short	0x200
	.short	0x2829
	.word	gBattleAnimSpriteGfx_Shock3
	.short	0x600
	.short	0x282a
	.word	gBattleAnimSpriteGfx_WeatherBall
	.short	0x200
	.short	0x282b
	.word	gBattleAnimSpriteGfx_Bird
	.short	0x800
	.short	0x282c
	.word	gBattleAnimSpriteGfx_CrossImpact
	.short	0x200
	.short	0x282d
	.word	gBattleAnimSpriteGfx_Slash
	.short	0x800
	.short	0x282e
	.word	gBattleAnimSpriteGfx_SlamHit
	.short	0x1000
	.short	0x282f
	.word	gBattleAnimSpriteGfx_GoldRing
	.short	0x100
	.short	0x2830
	.word	gBattleAnimSpriteGfx_WhiteStreak
	.short	0x200
	.short	0x2831
	.word	gBattleAnimSpriteGfx_PurpleJab
	.short	0x100
	.short	0x2832
	.word	gBattleAnimSpriteGfx_Spikes
	.short	0x80
	.short	0x2833
	.word	gBattleAnimSpriteGfx_EnergyBall
	.short	0x200
	.short	0x2834
	.word	gBattleAnimSpriteGfx_SeedBrown
	.short	0x80
	.short	0x2835
	.word	gBattleAnimSpriteGfx_Feint
	.short	0x800
	.short	0x2836
	.word	gBattleAnimSpriteGfx_MegaStone
	.short	0x800
	.short	0x2837
	.word	gBattleAnimSpriteGfx_MegaSymbol
	.short	0x200
	.short	0x2838
	.word	gBattleAnimSpriteGfx_MegaParticles
	.short	0x180
	.short	0x2839
	.word	gBattleAnimSpriteGfx_TrumpCard
	.short	0x180
	.short	0x283a
	.word	gBattleAnimSpriteGfx_TrumpCardParticles
	.short	0x60
	.short	0x283b
	.word	gBattleAnimSpriteGfx_Accupressure
	.short	0x200
	.short	0x283c
	.word	gBattleAnimSpriteGfx_WringOut
	.short	0x200
	.short	0x283d
	.word	gBattleAnimSpriteGfx_ColoredOrbs
	.short	0x300
	.short	0x283e
	.word	gBattleAnimSpriteGfx_WorrySeed
	.short	0x80
	.short	0x283f
	.word	gBattleAnimSpriteGfx_SmallCloud
	.short	0x80
	.short	0x2840
	.word	gBattleAnimSpriteGfx_AttackOrder
	.short	0x480
	.short	0x2841
	.word	gBattleAnimSpriteGfx_DragonPulse
	.short	0x100
	.short	0x2842
	.word	gBattleAnimSpriteGfx_WoodHammer
	.short	0xc00
	.short	0x2843
	.word	gBattleAnimSpriteGfx_PsychoCut
	.short	0x200
	.short	0x2844
	.word	gBattleAnimSpriteGfx_PowerGem
	.short	0x80
	.short	0x2845
	.word	gBattleAnimSpriteGfx_StoneEdge
	.short	0xa00
	.short	0x2846
	.word	gBattleAnimSpriteGfx_StealthRock
	.short	0x80
	.short	0x2847
	.word	gBattleAnimSpriteGfx_PoisonJab
	.short	0x80
	.short	0x2848
	.word	gBattleAnimSpriteGfx_PoisonBubble
	.short	0x180
	.short	0x2849
	.word	gBattleAnimSpriteGfx_FlashCannonBall
	.short	0x200
	.short	0x284a
	.word	gBattleAnimSpriteGfx_WaterGun
	.short	0x180
	.short	0x284b
	.word	gBattleAnimSpriteGfx_Punishment
	.short	0xa00
	.short	0x284c
	.word	gBattleAnimSpriteGfx_QuickGuard
	.short	0x200
	.short	0x284d
	.word	gBattleAnimSpriteGfx_ShellRight
	.short	0x800
	.short	0x284e
	.word	gBattleAnimSpriteGfx_ShellLeft
	.short	0x800
	.short	0x284f
	.word	gBattleAnimSpriteGfx_RazorShell
	.short	0x200
	.short	0x2850
	.word	gBattleAnimSpriteGfx_HydroPump
	.short	0x200
	.short	0x2851
	.word	gBattleAnimSpriteGfx_Brine
	.short	0xc00
	.short	0x2852
	.word	gBattleAnimSpriteGfx_Gear
	.short	0x200
	.short	0x2853
	.word	gBattleAnimSpriteGfx_AssuranceHand
	.short	0x200
	.short	0x2854
	.word	gBattleAnimSpriteGfx_AcupressureFinger
	.short	0x200
	.short	0x2855
	.word	gBattleAnimSpriteGfx_Fishies
	.short	0x480
	.short	0x2856
	.word	gBattleAnimSpriteGfx_ZygardeHexes
	.short	0x480
	.short	0x2857
	.word	gBattleAnimSpriteGfx_AuraSphere
	.short	0x200
	.short	0x2858
	.word	gBattleAnimSpriteGfx_OmegaStone
	.short	0x800
	.short	0x2859
	.word	gBattleAnimSpriteGfx_AlphaStone
	.short	0x800
	.short	0x285a
	.word	gBattleAnimSpriteGfx_BerryNormal
	.short	0x400
	.short	0x285b
	.word	gBattleAnimSpriteGfx_BerryEaten
	.short	0x200
	.short	0x285c
	.word	gBattleAnimSpriteGfx_PurpleDrake
	.short	0x800
	.short	0x285d
	.word	gBattleAnimSpriteGfx_PinkDiamond
	.short	0x40
	.short	0x285e
	.word	gBattleAnimSpriteGfx_SteamEruption
	.short	0xa00
	.short	0x285f
	.word	gBattleAnimSpriteGfx_Confide
	.short	0x800
	.short	0x2860
	.word	gBattleAnimSpriteGfx_Arrows
	.short	0x480
	.short	0x2861
	.word	0x0
	.short	0x0
	.short	0x2862
	.word	0x0
	.short	0x0
	.short	0x2863
	.word	gBattleAnimSpriteGfx_PowerTrick
	.short	0x800
	.short	0x2864
	.word	gBattleAnimSpriteGfx_ChainLink
	.short	0x200
	.short	0x2865
	.word	gBattleAnimSpriteGfx_Anchor
	.short	0x200
	.short	0x2866
	.word	gBattleAnimSpriteGfx_HorseshoeFist
	.short	0x800
	.short	0x2867
	.word	gBattleAnimSpriteGfx_PurpleDrake
	.short	0x800
	.short	0x2868
	.word	gBattleAnimSpriteGfx_CraftyShield
	.short	0x80
	.short	0x2869
	.word	gBattleAnimSpriteGfx_BlacephalonHead
	.short	0x200
	.short	0x286a
	.word	gBattleAnimSpriteGfx_FairyLockChains
	.short	0x400
	.short	0x286b
	.word	gBattleAnimSpriteGfx_LightningRain
	.short	0x700
	.short	0x286c
	.word	gBattleAnimSpriteGfx_Chop
	.short	0x200
	.short	0x286d
	.word	gBattleAnimSpriteGfx_HeartStamp
	.short	0x400
	.short	0x286e
	.word	gBattleAnimSpriteGfx_HornLeech
	.short	0x200
	.short	0x286f
	.word	gBattleAnimSpriteGfx_Steamroller
	.short	0x800
	.short	0x2870
	.word	gBattleAnimSpriteGfx_HoopaHand
	.short	0x80
	.short	0x2871
	.word	gBattleAnimSpriteGfx_HoopaRing
	.short	0x200
	.short	0x2872
	.word	gBattleAnimSpriteGfx_MetalBits
	.short	0x140
	.short	0x2873
	.word	gBattleAnimSpriteGfx_RocksSmall
	.short	0x140
	.short	0x2874
	.word	gBattleAnimSpriteGfx_SpiritShackleArrow
	.short	0x200
	.short	0x2875
	.word	gBattleAnimSpriteGfx_NecrozmaStar
	.short	0x200
	.short	0x2876
	.word	gBattleAnimSpriteGfx_ZMoveSymbol
	.short	0x800
	.short	0x2877
	.word	gBattleAnimSpriteGfx_BigRock
	.short	0x800
	.short	0x2878
	.word	gBattleAnimSpriteGfx_Cacoon
	.short	0x800
	.short	0x2879
	.word	gBattleAnimSpriteGfx_Drill
	.short	0x800
	.short	0x287a
	.word	gBattleAnimSpriteGfx_GigavoltHavocSpear
	.short	0x800
	.short	0x287b
	.word	gBattleAnimSpriteGfx_PurpleDrake
	.short	0x800
	.short	0x287c
	.word	gBattleAnimSpriteGfx_MudBomb
	.short	0x800
	.short	0x287d
	.word	gBattleAnimSpriteGfx_Branch
	.short	0x200
	.short	0x287e
	.word	gBattleAnimSpriteGfx_Apple
	.short	0x200
	.short	0x287f
	.word	gBattleAnimSpriteGfx_Obstruct
	.short	0x200
	.short	0x2880
	.word	gBattleAnimSpriteGfx_PoisonColumn
	.short	0x2000
	.short	0x2881
	.word	gBattleAnimSpriteGfx_PoisonColumn
	.short	0x2000
	.short	0x2882
	.word	gBattleAnimSpriteGfx_LargeSpike
	.short	0x1000
	.short	0x2883
	.word	gBattleAnimSpriteGfx_DragonPulseRing
	.short	0x200
	.short	0x2884
	.word	gBattleAnimSpriteGfx_StonePillar
	.short	0x2000
	.short	0x2885
	.word	gBattleAnimSpriteGfx_Mushroom
	.short	0x800
	.short	0x2886
	.word	gBattleAnimSpriteGfx_GoldenApple
	.short	0x800
	.short	0x2887
	.word	gBattleAnimSpriteGfx_IceRock
	.short	0x2800
	.short	0x2888
	.word	gBattleAnimSpriteGfx_Tornado
	.short	0x1800
	.short	0x2889
	.word	gBattleAnimSpriteGfx_StraightBeam
	.short	0x180
	.short	0x288a
	.word	gBattleAnimSpriteGfx_DreepyMissile
	.short	0x200
	.short	0x288b
	.word	gBattleAnimSpriteGfx_IceRock
	.short	0x1800
	.short	0x288c
	.word	gBattleAnimSpriteGfx_StonePillar
	.short	0x1800
	.short	0x288d
	.size	 gBattleAnimPicTable,3056
	.globl	gBattleAnimPaletteTable
	.align	2, 0
	.type	 gBattleAnimPaletteTable,object
gBattleAnimPaletteTable:
	.word	gBattleAnimSpritePal_Bone
	.short	0x2710
	.space	2
	.word	gBattleAnimSpritePal_Spark
	.short	0x2711
	.space	2
	.word	gBattleAnimSpritePal_Pencil
	.short	0x2712
	.space	2
	.word	gBattleAnimSpritePal_AirWave
	.short	0x2713
	.space	2
	.word	gBattleAnimSpritePal_Orb
	.short	0x2714
	.space	2
	.word	gBattleAnimSpritePal_NewSword
	.short	0x2715
	.space	2
	.word	gBattleAnimSpritePal_NewLeechSeed
	.short	0x2716
	.space	2
	.word	gBattleAnimSpritePal_Explosion6
	.short	0x2717
	.space	2
	.word	gBattleAnimSpritePal_PinkOrb
	.short	0x2718
	.space	2
	.word	gBattleAnimSpritePal_Gust
	.short	0x2719
	.space	2
	.word	gBattleAnimSpritePal_IceCube
	.short	0x271a
	.space	2
	.word	gBattleAnimSpritePal_Spark2
	.short	0x271b
	.space	2
	.word	gBattleAnimSpritePal_Orange
	.short	0x271c
	.space	2
	.word	gBattleAnimSpritePal_YellowBall
	.short	0x271d
	.space	2
	.word	gBattleAnimSpritePal_LockOn
	.short	0x271e
	.space	2
	.word	gBattleAnimSpritePal_TiedBag
	.short	0x271f
	.space	2
	.word	gBattleAnimSpritePal_BlackSmoke
	.short	0x2720
	.space	2
	.word	gBattleAnimSpritePal_BlackSmoke
	.short	0x2721
	.space	2
	.word	gBattleAnimSpritePal_Conversion
	.short	0x2722
	.space	2
	.word	gBattleAnimSpritePal_Glass
	.short	0x2723
	.space	2
	.word	gBattleAnimSpritePal_NewHornHit
	.short	0x2724
	.space	2
	.word	gBattleAnimSpritePal_Hit
	.short	0x2725
	.space	2
	.word	gBattleAnimSpritePal_Hit2
	.short	0x2726
	.space	2
	.word	gBattleAnimSpritePal_BlueShards
	.short	0x2727
	.space	2
	.word	gBattleAnimSpritePal_ClosingEye
	.short	0x2728
	.space	2
	.word	gBattleAnimSpritePal_WavingHand
	.short	0x2729
	.space	2
	.word	gBattleAnimSpritePal_HitDuplicate
	.short	0x272a
	.space	2
	.word	gBattleAnimSpritePal_Leer
	.short	0x272b
	.space	2
	.word	gBattleAnimSpritePal_BlueBurst
	.short	0x272c
	.space	2
	.word	gBattleAnimSpritePal_NewEmbers
	.short	0x272d
	.space	2
	.word	gBattleAnimSpritePal_GraySmoke
	.short	0x272e
	.space	2
	.word	gBattleAnimSpritePal_BlueStar
	.short	0x272f
	.space	2
	.word	gBattleAnimSpritePal_BubbleBurst
	.short	0x2730
	.space	2
	.word	gBattleAnimSpritePal_Fire
	.short	0x2731
	.space	2
	.word	gBattleAnimSpritePal_Fire
	.short	0x2732
	.space	2
	.word	gBattleAnimSpritePal_Fire
	.short	0x2733
	.space	2
	.word	gBattleAnimSpritePal_Lightning2
	.short	0x2734
	.space	2
	.word	gBattleAnimSpritePal_Lightning2
	.short	0x2735
	.space	2
	.word	gBattleAnimSpritePal_ClawSlash2
	.short	0x2736
	.space	2
	.word	gBattleAnimSpritePal_ClawSlash
	.short	0x2737
	.space	2
	.word	gBattleAnimSpritePal_ClawSlash2
	.short	0x2738
	.space	2
	.word	gBattleAnimSpritePal_ClawSlash2
	.short	0x2739
	.space	2
	.word	gBattleAnimSpritePal_BubbleBurst2
	.short	0x273a
	.space	2
	.word	gBattleAnimSpritePal_IceChunk
	.short	0x273b
	.space	2
	.word	gBattleAnimSpritePal_Glass2
	.short	0x273c
	.space	2
	.word	gBattleAnimSpritePal_PinkHeart2
	.short	0x273d
	.space	2
	.word	gBattleAnimSpritePal_SapDrip
	.short	0x273e
	.space	2
	.word	gBattleAnimSpritePal_SapDrip2
	.short	0x273e
	.space	2
	.word	gBattleAnimSpritePal_Sparkle1
	.short	0x2740
	.space	2
	.word	gBattleAnimSpritePal_Sparkle2
	.short	0x2741
	.space	2
	.word	gBattleAnimSpritePal_HumanoidFoot
	.short	0x2742
	.space	2
	.word	gBattleAnimSpritePal_HumanoidFoot
	.short	0x2743
	.space	2
	.word	gBattleAnimSpritePal_HumanoidFoot
	.short	0x2744
	.space	2
	.word	gBattleAnimSpritePal_HitDuplicate
	.short	0x2745
	.space	2
	.word	gBattleAnimSpritePal_YellowUnk
	.short	0x2746
	.space	2
	.word	gBattleAnimSpritePal_HumanoidFoot
	.short	0x2747
	.space	2
	.word	gBattleAnimSpritePal_SlamHit
	.short	0x2748
	.space	2
	.word	gBattleAnimSpritePal_Ring
	.short	0x2749
	.space	2
	.word	gBattleAnimSpritePal_Rocks
	.short	0x274a
	.space	2
	.word	gBattleAnimSpritePal_Z
	.short	0x274b
	.space	2
	.word	gBattleAnimSpritePal_YellowUnk2
	.short	0x274c
	.space	2
	.word	gBattleAnimSpritePal_AirSlash
	.short	0x274d
	.space	2
	.word	gBattleAnimSpritePal_SpinningGreenOrbs
	.short	0x274e
	.space	2
	.word	gBattleAnimSpritePal_NewLeaf
	.short	0x274f
	.space	2
	.word	gBattleAnimSpritePal_Finger
	.short	0x2750
	.space	2
	.word	gBattleAnimSpritePal_PoisonPowder
	.short	0x2751
	.space	2
	.word	gBattleAnimSpritePal_BrownTriangle
	.short	0x2752
	.space	2
	.word	gBattleAnimSpritePal_SleepPowder
	.short	0x2753
	.space	2
	.word	gBattleAnimSpritePal_StunSpore
	.short	0x2754
	.space	2
	.word	gBattleAnimSpritePal_PoisonPowder
	.short	0x2755
	.space	2
	.word	gBattleAnimSpritePal_Sparkle3
	.short	0x2756
	.space	2
	.word	gBattleAnimSpritePal_Sparkle3
	.short	0x2757
	.space	2
	.word	gBattleAnimSpritePal_MusicNotes
	.short	0x2758
	.space	2
	.word	gBattleAnimSpritePal_Duck
	.short	0x2759
	.space	2
	.word	gBattleAnimSpritePal_MudSand
	.short	0x275a
	.space	2
	.word	gBattleAnimSpritePal_Alert
	.short	0x275b
	.space	2
	.word	gBattleAnimSpritePal_BlueFlames
	.short	0x275c
	.space	2
	.word	gBattleAnimSpritePal_BlueFlames
	.short	0x275d
	.space	2
	.word	gBattleAnimSpritePal_Shock4
	.short	0x275e
	.space	2
	.word	gBattleAnimSpritePal_Shock4
	.short	0x275f
	.space	2
	.word	gBattleAnimSpritePal_Bell2
	.short	0x2760
	.space	2
	.word	gBattleAnimSpritePal_PinkGlove
	.short	0x2761
	.space	2
	.word	gBattleAnimSpritePal_BlueLines
	.short	0x2762
	.space	2
	.word	gBattleAnimSpritePal_Impact3
	.short	0x2763
	.space	2
	.word	gBattleAnimSpritePal_Impact2
	.short	0x2764
	.space	2
	.word	gBattleAnimSpritePal_Reticle
	.short	0x2765
	.space	2
	.word	gBattleAnimSpritePal_Breath
	.short	0x2766
	.space	2
	.word	gBattleAnimSpritePal_Anger
	.short	0x2767
	.space	2
	.word	gBattleAnimSpritePal_Snowball
	.short	0x2768
	.space	2
	.word	gBattleAnimSpritePal_Vine
	.short	0x2769
	.space	2
	.word	gBattleAnimSpritePal_Sword2
	.short	0x276a
	.space	2
	.word	gBattleAnimSpritePal_Clapping
	.short	0x276b
	.space	2
	.word	gBattleAnimSpritePal_RedTube
	.short	0x276c
	.space	2
	.word	gBattleAnimSpritePal_Amnesia
	.short	0x276d
	.space	2
	.word	gBattleAnimSpritePal_String2
	.short	0x276e
	.space	2
	.word	gBattleAnimSpritePal_Pencil2
	.short	0x276f
	.space	2
	.word	gBattleAnimSpritePal_Petal
	.short	0x2770
	.space	2
	.word	gBattleAnimSpritePal_BentSpoon
	.short	0x2771
	.space	2
	.word	gBattleAnimSpritePal_String2
	.short	0x2772
	.space	2
	.word	gBattleAnimSpritePal_MilkBottle
	.short	0x2773
	.space	2
	.word	gBattleAnimSpritePal_Coin
	.short	0x2774
	.space	2
	.word	gBattleAnimSpritePal_CrackedEgg
	.short	0x2775
	.space	2
	.word	gBattleAnimSpritePal_CrackedEgg
	.short	0x2776
	.space	2
	.word	gBattleAnimSpritePal_FreshEgg
	.short	0x2777
	.space	2
	.word	gBattleAnimSpritePal_Fangs
	.short	0x2778
	.space	2
	.word	gBattleAnimSpritePal_Explosion2
	.short	0x2779
	.space	2
	.word	gBattleAnimSpritePal_Explosion2
	.short	0x277a
	.space	2
	.word	gBattleAnimSpritePal_WaterDroplet
	.short	0x277b
	.space	2
	.word	gBattleAnimSpritePal_WaterDroplet
	.short	0x277c
	.space	2
	.word	gBattleAnimSpritePal_Seed2
	.short	0x277d
	.space	2
	.word	gBattleAnimSpritePal_Seed2
	.short	0x277e
	.space	2
	.word	gBattleAnimSpritePal_RedWand
	.short	0x277f
	.space	2
	.word	gBattleAnimSpritePal_PurpleGreenUnk
	.short	0x2780
	.space	2
	.word	gBattleAnimSpritePal_WaterColumn
	.short	0x2781
	.space	2
	.word	gBattleAnimSpritePal_MudUnk
	.short	0x2782
	.space	2
	.word	gBattleAnimSpritePal_RainDrops
	.short	0x2783
	.space	2
	.word	gBattleAnimSpritePal_FurySwipes
	.short	0x2784
	.space	2
	.word	gBattleAnimSpritePal_Vine2
	.short	0x2785
	.space	2
	.word	gBattleAnimSpritePal_Teeth
	.short	0x2786
	.space	2
	.word	gBattleAnimSpritePal_Bone2
	.short	0x2787
	.space	2
	.word	gBattleAnimSpritePal_WhiteBag
	.short	0x2788
	.space	2
	.word	gBattleAnimSpritePal_Unknown
	.short	0x2789
	.space	2
	.word	gBattleAnimSpritePal_PurpleCoral
	.short	0x278a
	.space	2
	.word	gBattleAnimSpritePal_PurpleCoral
	.short	0x278b
	.space	2
	.word	gBattleAnimSpritePal_Shock2
	.short	0x278c
	.space	2
	.word	gBattleAnimSpritePal_ClosingEye2
	.short	0x278d
	.space	2
	.word	gBattleAnimSpritePal_MetalBall
	.short	0x278e
	.space	2
	.word	gBattleAnimSpritePal_MonsterDoll
	.short	0x278f
	.space	2
	.word	gBattleAnimSpritePal_Whirlwind
	.short	0x2790
	.space	2
	.word	gBattleAnimSpritePal_Whirlwind
	.short	0x2791
	.space	2
	.word	gBattleAnimSpritePal_Explosion4
	.short	0x2792
	.space	2
	.word	gBattleAnimSpritePal_Explosion4
	.short	0x2793
	.space	2
	.word	gBattleAnimSpritePal_Tongue
	.short	0x2794
	.space	2
	.word	gBattleAnimSpritePal_Smoke
	.short	0x2795
	.space	2
	.word	gBattleAnimSpritePal_Smoke
	.short	0x2796
	.space	2
	.word	gBattleAnimSpritePal_NewImpact
	.short	0x2797
	.space	2
	.word	gBattleAnimSpritePal_CircleImpact
	.short	0x2798
	.space	2
	.word	gBattleAnimSpritePal_Impact
	.short	0x2799
	.space	2
	.word	gBattleAnimSpritePal_Impact
	.short	0x279a
	.space	2
	.word	gBattleAnimSpritePal_NewTeeth
	.short	0x279b
	.space	2
	.word	gBattleAnimSpritePal_RainbowRings
	.short	0x279c
	.space	2
	.word	gBattleAnimSpritePal_IceCrystals
	.short	0x279d
	.space	2
	.word	gBattleAnimSpritePal_IceCrystals
	.short	0x279e
	.space	2
	.word	gBattleAnimSpritePal_NewHandsAndFeet
	.short	0x279f
	.space	2
	.word	gBattleAnimSpritePal_MistCloud
	.short	0x27a0
	.space	2
	.word	gBattleAnimSpritePal_SharpTeeth
	.short	0x27a1
	.space	2
	.word	gBattleAnimSpritePal_RainDrops
	.short	0x27a2
	.space	2
	.word	gBattleAnimSpritePal_Orbs
	.short	0x27a3
	.space	2
	.word	gBattleAnimSpritePal_WaterImpact
	.short	0x27a4
	.space	2
	.word	gBattleAnimSpritePal_WaterImpact
	.short	0x27a5
	.space	2
	.word	gBattleAnimSpritePal_PoisonBubble
	.short	0x27a6
	.space	2
	.word	gBattleAnimSpritePal_PoisonBubble
	.short	0x27a7
	.space	2
	.word	gBattleAnimSpritePal_NewSpikes
	.short	0x27a8
	.space	2
	.word	gBattleAnimSpritePal_HornHit2
	.short	0x27a9
	.space	2
	.word	gBattleAnimSpritePal_AirWave2
	.short	0x27aa
	.space	2
	.word	gBattleAnimSpritePal_SmallBubbles
	.short	0x27ab
	.space	2
	.word	gBattleAnimSpritePal_NewFly
	.short	0x27ac
	.space	2
	.word	gBattleAnimSpritePal_Sunlight
	.short	0x27ad
	.space	2
	.word	gBattleAnimSpritePal_Spore
	.short	0x27ae
	.space	2
	.word	gBattleAnimSpritePal_Flower
	.short	0x27af
	.space	2
	.word	gBattleAnimSpritePal_RazorLeaf
	.short	0x27b0
	.space	2
	.word	gBattleAnimSpritePal_Needle
	.short	0x27b1
	.space	2
	.word	gBattleAnimSpritePal_WhirlwindLines
	.short	0x27b2
	.space	2
	.word	gBattleAnimSpritePal_GoldRing
	.short	0x27b3
	.space	2
	.word	gBattleAnimSpritePal_PurpleRing
	.short	0x27b4
	.space	2
	.word	gBattleAnimSpritePal_BlueRing
	.short	0x27b5
	.space	2
	.word	gBattleAnimSpritePal_GreenLightWall
	.short	0x27b6
	.space	2
	.word	gBattleAnimSpritePal_BlueLightWall
	.short	0x27b7
	.space	2
	.word	gBattleAnimSpritePal_RedLightWall
	.short	0x27b8
	.space	2
	.word	gBattleAnimSpritePal_GrayLightWall
	.short	0x27b9
	.space	2
	.word	gBattleAnimSpritePal_OrangeLightWall
	.short	0x27ba
	.space	2
	.word	gBattleAnimSpritePal_BlackBall2
	.short	0x27bb
	.space	2
	.word	gBattleAnimSpritePal_PurpleGasCloud
	.short	0x27bc
	.space	2
	.word	gBattleAnimSpritePal_Spark
	.short	0x27bd
	.space	2
	.word	gBattleAnimSpritePal_YellowStar
	.short	0x27be
	.space	2
	.word	gBattleAnimSpritePal_LargeFreshEgg
	.short	0x27bf
	.space	2
	.word	gBattleAnimSpritePal_ShadowBall
	.short	0x27c0
	.space	2
	.word	gBattleAnimSpritePal_Lick
	.short	0x27c1
	.space	2
	.word	gBattleAnimSpritePal_VoidLines
	.short	0x27c2
	.space	2
	.word	gBattleAnimSpritePal_String
	.short	0x27c3
	.space	2
	.word	gBattleAnimSpritePal_String
	.short	0x27c4
	.space	2
	.word	gBattleAnimSpritePal_String
	.short	0x27c5
	.space	2
	.word	gBattleAnimSpritePal_Lightbulb
	.short	0x27c6
	.space	2
	.word	gBattleAnimSpritePal_Slash
	.short	0x27c7
	.space	2
	.word	gBattleAnimSpritePal_FocusEnergy
	.short	0x27c8
	.space	2
	.word	gBattleAnimSpritePal_SphereToCube
	.short	0x27c9
	.space	2
	.word	gBattleAnimSpritePal_Tendrils
	.short	0x27ca
	.space	2
	.word	gBattleAnimSpritePal_NewEye
	.short	0x27cb
	.space	2
	.word	gBattleAnimSpritePal_WhiteShadow
	.short	0x27cc
	.space	2
	.word	gBattleAnimSpritePal_TealAlert
	.short	0x27cd
	.space	2
	.word	gBattleAnimSpritePal_OpeningEye
	.short	0x27ce
	.space	2
	.word	gBattleAnimSpritePal_RoundWhiteHalo
	.short	0x27cf
	.space	2
	.word	gBattleAnimSpritePal_FangAttack
	.short	0x27d0
	.space	2
	.word	gBattleAnimSpritePal_PurpleHandOutline
	.short	0x27d1
	.space	2
	.word	gBattleAnimSpritePal_Moon
	.short	0x27d2
	.space	2
	.word	gBattleAnimSpritePal_GreenSparkle
	.short	0x27d3
	.space	2
	.word	gBattleAnimSpritePal_Spiral
	.short	0x27d4
	.space	2
	.word	gBattleAnimSpritePal_SnoreZ
	.short	0x27d5
	.space	2
	.word	gBattleAnimSpritePal_Explosion
	.short	0x27d6
	.space	2
	.word	gBattleAnimSpritePal_Nail
	.short	0x27d7
	.space	2
	.word	gBattleAnimSpritePal_GhostlySpirit
	.short	0x27d8
	.space	2
	.word	gBattleAnimSpritePal_WarmRock
	.short	0x27d9
	.space	2
	.word	gBattleAnimSpritePal_BreakingEgg
	.short	0x27da
	.space	2
	.word	gBattleAnimSpritePal_ThinRing
	.short	0x27db
	.space	2
	.word	gBattleAnimSpritePal_PunchImpact
	.short	0x27dc
	.space	2
	.word	gBattleAnimSpritePal_Bell
	.short	0x27dd
	.space	2
	.word	gBattleAnimSpritePal_MusicNotes2
	.short	0x27de
	.space	2
	.word	gBattleAnimSpritePal_SpeedDust
	.short	0x27df
	.space	2
	.word	gBattleAnimSpritePal_BlueLightWall
	.short	0x27e0
	.space	2
	.word	gBattleAnimSpritePal_ThoughtBubble
	.short	0x27e1
	.space	2
	.word	gBattleAnimSpritePal_MagentaHeart
	.short	0x27e2
	.space	2
	.word	gBattleAnimSpritePal_ElectricOrbs
	.short	0x27e3
	.space	2
	.word	gBattleAnimSpritePal_ElectricOrbs
	.short	0x27e4
	.space	2
	.word	gBattleAnimSpritePal_ElectricOrbs
	.short	0x27e5
	.space	2
	.word	gBattleAnimSpritePal_Finger
	.short	0x27e6
	.space	2
	.word	gBattleAnimSpritePal_MovementWaves
	.short	0x27e7
	.space	2
	.word	gBattleAnimSpritePal_RedHeart
	.short	0x27e8
	.space	2
	.word	gBattleAnimSpritePal_RedOrb
	.short	0x27e9
	.space	2
	.word	gBattleAnimSpritePal_EyeSparkle
	.short	0x27ea
	.space	2
	.word	gBattleAnimSpritePal_PinkHeart
	.short	0x27eb
	.space	2
	.word	gBattleAnimSpritePal_Angel
	.short	0x27ec
	.space	2
	.word	gBattleAnimSpritePal_Devil
	.short	0x27ed
	.space	2
	.word	gBattleAnimSpritePal_Swipe
	.short	0x27ee
	.space	2
	.word	gBattleAnimSpritePal_Roots
	.short	0x27ef
	.space	2
	.word	gBattleAnimSpritePal_ItemBag
	.short	0x27f0
	.space	2
	.word	gBattleAnimSpritePal_JaggedMusicNote
	.short	0x27f1
	.space	2
	.word	gBattleAnimSpritePal_NewPokeball
	.short	0x27f2
	.space	2
	.word	gBattleAnimSpritePal_Pokeball
	.short	0x27f3
	.space	2
	.word	gBattleAnimSpritePal_LetterZ
	.short	0x27f4
	.space	2
	.word	gBattleAnimSpritePal_RapidSpin
	.short	0x27f5
	.space	2
	.word	gBattleAnimSpritePal_TriAttackTriangle
	.short	0x27f6
	.space	2
	.word	gBattleAnimSpritePal_WispOrb
	.short	0x27f7
	.space	2
	.word	gBattleAnimSpritePal_WispOrb
	.short	0x27f8
	.space	2
	.word	gBattleAnimSpritePal_GoldStars
	.short	0x27f9
	.space	2
	.word	gBattleAnimSpritePal_EclipsingOrb
	.short	0x27fa
	.space	2
	.word	gBattleAnimSpritePal_GrayOrb
	.short	0x27fb
	.space	2
	.word	gBattleAnimSpritePal_BlueOrb
	.short	0x27fc
	.space	2
	.word	gBattleAnimSpritePal_RedOrb2
	.short	0x27fd
	.space	2
	.word	gBattleAnimSpritePal_PinkPetal
	.short	0x27fe
	.space	2
	.word	gBattleAnimSpritePal_PainSplit
	.short	0x27ff
	.space	2
	.word	gBattleAnimSpritePal_Confetti
	.short	0x2800
	.space	2
	.word	gBattleAnimSpritePal_NewGreenStar
	.short	0x2801
	.space	2
	.word	gBattleAnimSpritePal_PinkCloud
	.short	0x2802
	.space	2
	.word	gBattleAnimSpritePal_SweatDrop
	.short	0x2803
	.space	2
	.word	gBattleAnimSpritePal_GuardRing
	.short	0x2804
	.space	2
	.word	gBattleAnimSpritePal_PurpleScratch
	.short	0x2805
	.space	2
	.word	gBattleAnimSpritePal_PurpleScratch
	.short	0x2806
	.space	2
	.word	gBattleAnimSpritePal_Finger
	.short	0x2807
	.space	2
	.word	gBattleAnimSpritePal_SmallRedEye
	.short	0x2808
	.space	2
	.word	gBattleAnimSpritePal_HollowOrb
	.short	0x2809
	.space	2
	.word	gBattleAnimSpritePal_HollowOrb
	.short	0x280a
	.space	2
	.word	gBattleAnimSpritePal_BluegreenOrb
	.short	0x280b
	.space	2
	.word	gBattleAnimSpritePal_PawPrint
	.short	0x280c
	.space	2
	.word	gBattleAnimSpritePal_PurpleFlame
	.short	0x280d
	.space	2
	.word	gBattleAnimSpritePal_RedBall
	.short	0x280e
	.space	2
	.word	gBattleAnimSpritePal_SmellingsaltEffect
	.short	0x280f
	.space	2
	.word	gBattleAnimSpritePal_Meteor
	.short	0x2810
	.space	2
	.word	gBattleAnimSpritePal_FlatRock
	.short	0x2811
	.space	2
	.word	gBattleAnimSpritePal_MagnifyingGlass
	.short	0x2812
	.space	2
	.word	gBattleAnimSpritePal_BrownOrb
	.short	0x2813
	.space	2
	.word	gBattleAnimSpritePal_MetalSoundWaves
	.short	0x2814
	.space	2
	.word	gBattleAnimSpritePal_FlyingDirt
	.short	0x2815
	.space	2
	.word	gBattleAnimSpritePal_IcicleSpear
	.short	0x2816
	.space	2
	.word	gBattleAnimSpritePal_Hail
	.short	0x2817
	.space	2
	.word	gBattleAnimSpritePal_GlowyRedOrb
	.short	0x2818
	.space	2
	.word	gBattleAnimSpritePal_GlowyGreenOrb
	.short	0x2819
	.space	2
	.word	gBattleAnimSpritePal_GreenSpike
	.short	0x281a
	.space	2
	.word	gBattleAnimSpritePal_WhiteCircleOfLight
	.short	0x281b
	.space	2
	.word	gBattleAnimSpritePal_GlowyBlueOrb
	.short	0x281c
	.space	2
	.word	gBattleAnimSpritePal_Pokeblock
	.short	0x281d
	.space	2
	.word	gBattleAnimSpritePal_WhiteFeather
	.short	0x281e
	.space	2
	.word	gBattleAnimSpritePal_Sparkle6
	.short	0x281f
	.space	2
	.word	gBattleAnimSpritePal_Splash
	.short	0x2820
	.space	2
	.word	gBattleAnimSpritePal_Splash
	.short	0x2821
	.space	2
	.word	gBattleAnimSpritePal_Gem1
	.short	0x2822
	.space	2
	.word	gBattleAnimSpritePal_Gem1
	.short	0x2823
	.space	2
	.word	gBattleAnimSpritePal_Gem1
	.short	0x2824
	.space	2
	.word	gBattleAnimSpritePal_SlamHit2
	.short	0x2825
	.space	2
	.word	gBattleAnimSpritePal_Recycle
	.short	0x2826
	.space	2
	.word	gBattleAnimSpritePal_RedParticles
	.short	0x2827
	.space	2
	.word	gBattleAnimSpritePal_Protect
	.short	0x2828
	.space	2
	.word	gBattleAnimSpritePal_DirtMound
	.short	0x2829
	.space	2
	.word	gBattleAnimSpritePal_Shock3
	.short	0x282a
	.space	2
	.word	gBattleAnimSpritePal_WeatherBall
	.short	0x282b
	.space	2
	.word	gBattleAnimSpritePal_Bird
	.short	0x282c
	.space	2
	.word	gBattleAnimSpritePal_CrossImpact
	.short	0x282d
	.space	2
	.word	gBattleAnimSpritePal_Slash2
	.short	0x282e
	.space	2
	.word	gBattleAnimSpritePal_WhipHit
	.short	0x282f
	.space	2
	.word	gBattleAnimSpritePal_BlueRing2
	.short	0x2830
	.space	2
	.word	gBattleAnimSpritePal_WhiteStreak
	.short	0x2831
	.space	2
	.word	gBattleAnimSpritePal_PurpleJab
	.short	0x2832
	.space	2
	.word	gBattleAnimSpritePal_ToxicSpikes
	.short	0x2833
	.space	2
	.word	gBattleAnimSpritePal_EnergyBall
	.short	0x2834
	.space	2
	.word	gBattleAnimSpritePal_SeedBrown
	.short	0x2835
	.space	2
	.word	gBattleAnimSpritePal_Feint
	.short	0x2836
	.space	2
	.word	gBattleAnimSpritePal_MegaStone
	.short	0x2837
	.space	2
	.word	gBattleAnimSpritePal_MegaSymbol
	.short	0x2838
	.space	2
	.word	gBattleAnimSpritePal_MegaParticles
	.short	0x2839
	.space	2
	.word	gBattleAnimSpritePal_TrumpCard
	.short	0x283a
	.space	2
	.word	gBattleAnimSpritePal_TrumpCardParticles
	.short	0x283b
	.space	2
	.word	gBattleAnimSpritePal_Accupressure
	.short	0x283c
	.space	2
	.word	gBattleAnimSpritePal_WringOut
	.short	0x283d
	.space	2
	.word	gBattleAnimSpritePal_ColoredOrbs
	.short	0x283e
	.space	2
	.word	gBattleAnimSpritePal_WorrySeed
	.short	0x283f
	.space	2
	.word	gBattleAnimSpritePal_SmallCloud
	.short	0x2840
	.space	2
	.word	gBattleAnimSpritePal_AttackOrder
	.short	0x2841
	.space	2
	.word	gBattleAnimSpritePal_DragonPulse
	.short	0x2842
	.space	2
	.word	gBattleAnimSpritePal_WoodHammer
	.short	0x2843
	.space	2
	.word	gBattleAnimSpritePal_PsychoCut
	.short	0x2844
	.space	2
	.word	gBattleAnimSpritePal_PowerGem
	.short	0x2845
	.space	2
	.word	gBattleAnimSpritePal_StoneEdge
	.short	0x2846
	.space	2
	.word	gBattleAnimSpritePal_StealthRock
	.short	0x2847
	.space	2
	.word	gBattleAnimSpritePal_PoisonJab
	.short	0x2848
	.space	2
	.word	gBattleAnimSpritePal_Vine
	.short	0x2849
	.space	2
	.word	gBattleAnimSpritePal_FlashCannonBall
	.short	0x284a
	.space	2
	.word	gBattleAnimSpritePal_WaterGun
	.short	0x284b
	.space	2
	.word	gBattleAnimSpritePal_Punishment
	.short	0x284c
	.space	2
	.word	gBattleAnimSpritePal_QuickGuard
	.short	0x284d
	.space	2
	.word	gBattleAnimSpritePal_ShellLeft
	.short	0x284e
	.space	2
	.word	gBattleAnimSpritePal_ShellLeft
	.short	0x284f
	.space	2
	.word	gBattleAnimSpritePal_RazorShell
	.short	0x2850
	.space	2
	.word	gBattleAnimSpritePal_HydroPump
	.short	0x2851
	.space	2
	.word	gBattleAnimSpritePal_Brine
	.short	0x2852
	.space	2
	.word	gBattleAnimSpritePal_Gear
	.short	0x2853
	.space	2
	.word	gBattleAnimSpritePal_AssuranceHand
	.short	0x2854
	.space	2
	.word	gBattleAnimSpritePal_AcupressureFinger
	.short	0x2855
	.space	2
	.word	gBattleAnimSpritePal_Fishies
	.short	0x2856
	.space	2
	.word	gBattleAnimSpritePal_ZygardeHexes
	.short	0x2857
	.space	2
	.word	gBattleAnimSpritePal_AuraSphere
	.short	0x2858
	.space	2
	.word	gBattleAnimSpritePal_OmegaStone
	.short	0x2859
	.space	2
	.word	gBattleAnimSpritePal_AlphaStone
	.short	0x285a
	.space	2
	.word	gBattleAnimSpritePal_BerryNormal
	.short	0x285b
	.space	2
	.word	gBattleAnimSpritePal_SpacialRendSlices
	.short	0x285c
	.space	2
	.word	gBattleAnimSpritePal_GreenDrake
	.short	0x285d
	.space	2
	.word	gBattleAnimSpritePal_PinkDiamond
	.short	0x285e
	.space	2
	.word	gBattleAnimSpritePal_SteamEruption
	.short	0x285f
	.space	2
	.word	gBattleAnimSpritePal_Confide
	.short	0x2860
	.space	2
	.word	gBattleAnimSpritePal_FusionFlare
	.short	0x2861
	.space	2
	.word	0x0
	.short	0x2862
	.space	2
	.word	0x0
	.short	0x2863
	.space	2
	.word	gBattleAnimSpritePal_PowerTrick
	.short	0x2864
	.space	2
	.word	gBattleAnimSpritePal_ChainLink
	.short	0x2865
	.space	2
	.word	gBattleAnimSpritePal_NaturalGiftRing
	.short	0x2866
	.space	2
	.word	gBattleAnimSpritePal_HorseshoeFist
	.short	0x2867
	.space	2
	.word	gBattleAnimSpritePal_AvalancheRocks
	.short	0x2868
	.space	2
	.word	gBattleAnimSpritePal_CraftyShield
	.short	0x2869
	.space	2
	.word	gBattleAnimSpritePal_BlacephalonHead
	.short	0x286a
	.space	2
	.word	gBattleAnimSpritePal_DracoMeteor
	.short	0x286b
	.space	2
	.word	gBattleAnimSpritePal_LightningRain
	.short	0x286c
	.space	2
	.word	gBattleAnimSpritePal_Chop
	.short	0x286d
	.space	2
	.word	gBattleAnimSpritePal_HeartStamp
	.short	0x286e
	.space	2
	.word	gBattleAnimSpritePal_HornLeech
	.short	0x286f
	.space	2
	.word	gBattleAnimSpritePal_Steamroller
	.short	0x2870
	.space	2
	.word	gBattleAnimSpritePal_HoopaHand
	.short	0x2871
	.space	2
	.word	gBattleAnimSpritePal_HoopaRing
	.short	0x2872
	.space	2
	.word	gBattleAnimSpritePal_BlueFlare
	.short	0x2873
	.space	2
	.word	gBattleAnimSpritePal_NewRocks
	.short	0x2874
	.space	2
	.word	gBattleAnimSpritePal_SpiritShackleArrow
	.short	0x2875
	.space	2
	.word	gBattleAnimSpritePal_NecrozmaStar
	.short	0x2876
	.space	2
	.word	gBattleAnimSpritePal_ZMoveSymbol
	.short	0x2877
	.space	2
	.word	gBattleAnimSpritePal_BigRock
	.short	0x2878
	.space	2
	.word	gBattleAnimSpritePal_Cacoon
	.short	0x2879
	.space	2
	.word	gBattleAnimSpritePal_Drill
	.short	0x287a
	.space	2
	.word	gBattleAnimSpritePal_GigavoltHavocSpear
	.short	0x287b
	.space	2
	.word	gBattleAnimSpritePal_PurpleDrake
	.short	0x287c
	.space	2
	.word	gBattleAnimSpritePal_MudBomb
	.short	0x287d
	.space	2
	.word	gBattleAnimSpritePal_Branch
	.short	0x287e
	.space	2
	.word	gBattleAnimSpritePal_Apple
	.short	0x287f
	.space	2
	.word	gBattleAnimSpritePal_Obstruct
	.short	0x2880
	.space	2
	.word	gBattleAnimSpritePal_PoisonColumn
	.short	0x2881
	.space	2
	.word	gBattleAnimSpritePal_GarbagePoisonPillar
	.short	0x2882
	.space	2
	.word	gBattleAnimSpritePal_LargeSpike
	.short	0x2883
	.space	2
	.word	gBattleAnimSpritePal_DragonPulseRing
	.short	0x2884
	.space	2
	.word	gBattleAnimSpritePal_StonePillar
	.short	0x2885
	.space	2
	.word	gBattleAnimSpritePal_Mushroom
	.short	0x2886
	.space	2
	.word	gBattleAnimSpritePal_GoldenApple
	.short	0x2887
	.space	2
	.word	gBattleAnimSpritePal_IceRock
	.short	0x2888
	.space	2
	.word	gBattleAnimSpritePal_Tornado
	.short	0x2889
	.space	2
	.word	gBattleAnimSpritePal_StraightBeam
	.short	0x288a
	.space	2
	.word	gBattleAnimSpritePal_DreepyMissile
	.short	0x288b
	.space	2
	.word	gBattleAnimSpritePal_IceRock
	.short	0x288c
	.space	2
	.word	gBattleAnimSpritePal_StonePillar
	.short	0x288d
	.space	2
	.size	 gBattleAnimPaletteTable,3056
	.globl	gBattleAnimBackgroundTable
	.align	2, 0
	.type	 gBattleAnimBackgroundTable,object
gBattleAnimBackgroundTable:
	.word	gBattleAnimBgImage_Dark
	.word	gBattleAnimBgPalette_Dark
	.word	gBattleAnimBgTilemap_Dark
	.word	gBattleAnimBgImage_Dark
	.word	gBattleAnimBgPalette_Dark
	.word	gBattleAnimBgTilemap_Dark
	.word	gBattleAnimBgImage_Ghost
	.word	gBattleAnimBgPalette_Ghost
	.word	gBattleAnimBgTilemap_Ghost
	.word	gBattleAnimBgImage_Psychic
	.word	gBattleAnimBgPalette_Psychic
	.word	gBattleAnimBgTilemap_Psychic
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_Impact
	.word	gBattleAnimBgTilemap_ImpactOpponent
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_Impact
	.word	gBattleAnimBgTilemap_ImpactPlayer
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_Impact
	.word	gBattleAnimBgTilemap_ImpactContests
	.word	gBattleAnimBgImage_Drill
	.word	gBattleAnimBgPalette_Drill
	.word	gBattleAnimBgTilemap_Drill
	.word	gBattleAnimBgImage_Drill
	.word	gBattleAnimBgPalette_Drill
	.word	gBattleAnimBgTilemap_DrillContests
	.word	gBattleAnimBgImage_Highspeed
	.word	gBattleAnimBgPalette_Highspeed
	.word	gBattleAnimBgTilemap_HighspeedOpponent
	.word	gBattleAnimBgImage_Highspeed
	.word	gBattleAnimBgPalette_Highspeed
	.word	gBattleAnimBgTilemap_HighspeedPlayer
	.word	gBattleAnimBgImage_Thunder
	.word	gBattleAnimBgPalette_Thunder
	.word	gBattleAnimBgTilemap_Thunder
	.word	gBattleAnimBgImage_Guillotine
	.word	gBattleAnimBgPalette_Guillotine
	.word	gBattleAnimBgTilemap_GuillotineOpponent
	.word	gBattleAnimBgImage_Guillotine
	.word	gBattleAnimBgPalette_Guillotine
	.word	gBattleAnimBgTilemap_GuillotinePlayer
	.word	gBattleAnimBgImage_Guillotine
	.word	gBattleAnimBgPalette_Guillotine
	.word	gBattleAnimBgTilemap_GuillotineContests
	.word	gBattleAnimBgImage_Ice
	.word	gBattleAnimBgPalette_Ice
	.word	gBattleAnimBgTilemap_Ice
	.word	gBattleAnimBgImage_Cosmic
	.word	gBattleAnimBgPalette_Cosmic
	.word	gBattleAnimBgTilemap_Cosmic
	.word	gBattleAnimBgImage_InAir
	.word	gBattleAnimBgPalette_InAir
	.word	gBattleAnimBgTilemap_InAir
	.word	gBattleAnimBgImage_Drill
	.word	gBattleAnimBgPalette_Sky
	.word	gBattleAnimBgTilemap_Drill
	.word	gBattleAnimBgImage_Drill
	.word	gBattleAnimBgPalette_Sky
	.word	gBattleAnimBgTilemap_DrillContests
	.word	gBattleAnimBgImage_Aurora
	.word	gBattleAnimBgPalette_Aurora
	.word	gBattleAnimBgTilemap_Aurora
	.word	gBattleAnimBgImage_Fissure
	.word	gBattleAnimBgPalette_Fissure
	.word	gBattleAnimBgTilemap_Fissure
	.word	gBattleAnimBgImage_Highspeed
	.word	gBattleAnimBgPalette_Bug
	.word	gBattleAnimBgTilemap_HighspeedOpponent
	.word	gBattleAnimBgImage_Highspeed
	.word	gBattleAnimBgPalette_Bug
	.word	gBattleAnimBgTilemap_HighspeedPlayer
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_Solarbeam
	.word	gBattleAnimBgTilemap_ImpactOpponent
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_Solarbeam
	.word	gBattleAnimBgTilemap_ImpactPlayer
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_Solarbeam
	.word	gBattleAnimBgTilemap_ImpactContests
	.word	gBattleAnimBgImage_InAir
	.word	gBattleAnimBgPalette_MagmaStorm
	.word	gBattleAnimBgTilemap_InAir
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_GigaImpact
	.word	gBattleAnimBgTilemap_ImpactOpponent
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_GigaImpact
	.word	gBattleAnimBgTilemap_ImpactPlayer
	.word	gBattleAnimBgImage_Impact
	.word	gBattleAnimBgPalette_GigaImpact
	.word	gBattleAnimBgTilemap_ImpactContests
	.word	gBattleAnimBgImage_TrickRoom
	.word	gBattleAnimBgPalette_TrickRoom
	.word	gBattleAnimBgTilemap_TrickRoom
	.word	gBattleAnimBgImage_RockWrecker
	.word	gBattleAnimBgPalette_RockWrecker
	.word	gBattleAnimBgTilemap_RockWrecker
	.word	gBattleAnimBgImage_SpacialRendOpponent
	.word	gBattleAnimBgPalette_SpacialRendOpponent
	.word	gBattleAnimBgTilemap_SpacialRendOpponent
	.word	gBattleAnimBgImage_SpacialRendPlayer
	.word	gBattleAnimBgPalette_SpacialRendPlayer
	.word	gBattleAnimBgTilemap_SpacialRendPlayer
	.word	gBattleAnimBgImage_DarkVoid
	.word	gBattleAnimBgPalette_DarkVoid
	.word	gBattleAnimBgTilemap_DarkVoid
	.word	gBattleAnimBgImage_HydroPump
	.word	gBattleAnimBgPalette_HydroPump
	.word	gBattleAnimBgTilemap_HydroPump
	.word	gBattleAnimBgImage_Nightmare
	.word	gBattleAnimBgPalette_Nightmare
	.word	gBattleAnimBgTilemap_Nightmare
	.word	gBattleAnimBgImage_LeafStorm
	.word	gBattleAnimBgPalette_LeafStorm
	.word	gBattleAnimBgTilemap_LeafStorm
	.word	gBattleAnimBgImage_Fire1
	.word	gBattleAnimBgPalette_Fire1
	.word	gBattleAnimBgTilemap_Fire1
	.word	gBattleAnimBgImage_Fire1
	.word	gBattleAnimBgPalette_Fire2
	.word	gBattleAnimBgTilemap_Fire1
	.word	gBattleAnimBgImage_Waterfall
	.word	gBattleAnimBgPalette_Waterfall
	.word	gBattleAnimBgTilemap_Waterfall
	.word	gBattleAnimBgImage_Waterfall
	.word	gBattleAnimBgPalette_PoisonFalls
	.word	gBattleAnimBgTilemap_Waterfall
	.word	gBattleAnimBgImage_Aeroblast
	.word	gBattleAnimBgPalette_Aeroblast
	.word	gBattleAnimBgTilemap_Aeroblast
	.word	gBattleAnimBgImage_HighSpeed
	.word	gBattleAnimBgPalette_HighSpeed
	.word	gBattleAnimBgTilemap_HighSpeed
	.word	gBattleAnimBgImage_ElectricTerrain
	.word	gBattleAnimBgPalette_ElectricTerrain
	.word	gBattleAnimBgTilemap_ElectricTerrain
	.word	gBattleAnimBgImage_GrassyTerrain
	.word	gBattleAnimBgPalette_GrassyTerrain
	.word	gBattleAnimBgTilemap_GrassyTerrain
	.word	gBattleAnimBgImage_MistyTerrain
	.word	gBattleAnimBgPalette_MistyTerrain
	.word	gBattleAnimBgTilemap_MistyTerrain
	.word	gBattleAnimBgImage_PsychicTerrain
	.word	gBattleAnimBgPalette_PsychicTerrain
	.word	gBattleAnimBgTilemap_PsychicTerrain
	.word	gBattleAnimBgImage_FocusBlast
	.word	gBattleAnimBgPalette_FocusBlast
	.word	gBattleAnimBgTilemap_FocusBlast
	.word	gBattleAnimBgImage_FocusBlast
	.word	gBattleAnimBgPalette_GunkShot
	.word	gBattleAnimBgTilemap_FocusBlast
	.word	gBattleAnimBgImage_HydroCannon
	.word	gBattleAnimBgPalette_HydroCannon
	.word	gBattleAnimBgTilemap_HydroCannon
	.word	gBattleAnimBgImage_TrickRoom
	.word	gBattleAnimBgPalette_WonderRoom
	.word	gBattleAnimBgTilemap_TrickRoom
	.word	gBattleAnimBgImage_TrickRoom
	.word	gBattleAnimBgPalette_MagicRoom
	.word	gBattleAnimBgTilemap_TrickRoom
	.word	gBattleAnimBgImage_Psychic
	.word	gBattleAnimBgPalette_HyperspaceFury
	.word	gBattleAnimBgTilemap_Psychic
	.word	gBattleAnimBgImage_BoltStrike
	.word	gBattleAnimBgPalette_BoltStrike
	.word	gBattleAnimBgTilemap_BoltStrike
	.word	gBattleAnimBgImage_ZMoveActivate
	.word	gBattleAnimBgPalette_ZMoveActivate
	.word	gBattleAnimBgTilemap_ZMoveActivate
	.word	gBattleAnimBgImage_InAir
	.word	gBattleAnimBgPalette_TectonicRage
	.word	gBattleAnimBgTilemap_InAir
	.word	gBattleAnimBgImage_SkyDay
	.word	gBattleAnimBgPalette_SkyDay
	.word	gBattleAnimBgTilemap_SkyDay
	.word	gBattleAnimBgImage_SkyDay
	.word	gBattleAnimBgPalette_SkyAfternoon
	.word	gBattleAnimBgTilemap_SkyDay
	.word	gBattleAnimBgImage_SkyDay
	.word	gBattleAnimBgPalette_SkyNight
	.word	gBattleAnimBgTilemap_SkyDay
	.word	gBattleAnimBgImage_ZMoveMountain
	.word	gBattleAnimBgPalette_ZMoveMountain
	.word	gBattleAnimBgTilemap_ZMoveMountain
	.word	gBattleAnimBgImage_NeverendingNightmare
	.word	gBattleAnimBgPalette_NeverendingNightmare
	.word	gBattleAnimBgTilemap_NeverendingNightmare
	.word	gBattleAnimBgImage_WaterPulse
	.word	gBattleAnimBgPalette_WaterPulse
	.word	gBattleAnimBgTilemap_WaterPulse
	.word	gBattleAnimBgImage_InfernoOverdrive
	.word	gBattleAnimBgPalette_InfernoOverdrive
	.word	gBattleAnimBgTilemap_InfernoOverdrive
	.word	gBattleAnimBgImage_BloomDoom
	.word	gBattleAnimBgPalette_BloomDoom
	.word	gBattleAnimBgTilemap_BloomDoom
	.word	gBattleAnimBgImage_ShatteredPsyche
	.word	gBattleAnimBgPalette_ShatteredPsyche
	.word	gBattleAnimBgTilemap_ShatteredPsyche
	.word	gBattleAnimBgImage_TwinkleTackle
	.word	gBattleAnimBgPalette_TwinkleTackle
	.word	gBattleAnimBgTilemap_TwinkleTackle
	.word	gBattleAnimBgImage_BlackholeEclipse
	.word	gBattleAnimBgPalette_BlackholeEclipse
	.word	gBattleAnimBgTilemap_BlackholeEclipse
	.word	gBattleAnimBgImage_SoulStealing7StarStrike
	.word	gBattleAnimBgPalette_SoulStealing7StarStrike
	.word	gBattleAnimBgTilemap_SoulStealing7StarStrike
	.word	gBattleAnimBgImage_MaliciousMoonsault
	.word	gBattleAnimBgPalette_MaliciousMoonsault
	.word	gBattleAnimBgTilemap_MaliciousMoonsault
	.word	gBattleAnimBgImage_ClangorousSoulblaze
	.word	gBattleAnimBgPalette_ClangorousSoulblaze
	.word	gBattleAnimBgTilemap_ClangorousSoulblaze
	.word	gBattleAnimBgImage_SnuggleForever
	.word	gBattleAnimBgPalette_SnuggleForever
	.word	gBattleAnimBgTilemap_SnuggleForever
	.word	gBattleAnimBgImage_MaxLightning
	.word	gBattleAnimBgPalette_MaxLightning
	.word	gBattleAnimBgTilemap_MaxLightning
	.word	gBattleAnimBgImage_Waterfall
	.word	gBattleAnimBgPalette_GarbageFalls
	.word	gBattleAnimBgTilemap_Waterfall
	.word	gBattleAnimBgImage_HydroCannon
	.word	gBattleAnimBgPalette_HyperBeam
	.word	gBattleAnimBgTilemap_HydroCannon
	.word	gBattleAnimBgImage_HydroCannon
	.word	gBattleAnimBgPalette_DynamaxCannon
	.word	gBattleAnimBgTilemap_HydroCannon
	.word	gBattleAnimBgImage_FocusBlast
	.word	gBattleAnimBgPalette_AuraSphere
	.word	gBattleAnimBgTilemap_FocusBlast
	.size	 gBattleAnimBackgroundTable,936
	.align	2, 0
	.type	 sScriptCmdTable,object
sScriptCmdTable:
	.word	ScriptCmd_loadspritegfx
	.word	ScriptCmd_unloadspritegfx
	.word	ScriptCmd_createsprite
	.word	ScriptCmd_createvisualtask
	.word	ScriptCmd_delay
	.word	ScriptCmd_waitforvisualfinish
	.word	ScriptCmd_hang1
	.word	ScriptCmd_hang2
	.word	ScriptCmd_end
	.word	ScriptCmd_playse
	.word	ScriptCmd_monbg
	.word	ScriptCmd_clearmonbg
	.word	ScriptCmd_setalpha
	.word	ScriptCmd_blendoff
	.word	ScriptCmd_call
	.word	ScriptCmd_return
	.word	ScriptCmd_setarg
	.word	ScriptCmd_choosetwoturnanim
	.word	ScriptCmd_jumpifmoveturn
	.word	ScriptCmd_goto
	.word	ScriptCmd_fadetobg
	.word	ScriptCmd_restorebg
	.word	ScriptCmd_waitbgfadeout
	.word	ScriptCmd_waitbgfadein
	.word	ScriptCmd_changebg
	.word	ScriptCmd_playsewithpan
	.word	ScriptCmd_setpan
	.word	ScriptCmd_panse_1B
	.word	ScriptCmd_loopsewithpan
	.word	ScriptCmd_waitplaysewithpan
	.word	ScriptCmd_setbldcnt
	.word	ScriptCmd_createsoundtask
	.word	ScriptCmd_waitsound
	.word	ScriptCmd_jumpargeq
	.word	ScriptCmd_monbg_22
	.word	ScriptCmd_clearmonbg_23
	.word	ScriptCmd_jumpifcontest
	.word	ScriptCmd_fadetobgfromset
	.word	ScriptCmd_panse_26
	.word	ScriptCmd_panse_27
	.word	ScriptCmd_monbgprio_28
	.word	ScriptCmd_monbgprio_29
	.word	ScriptCmd_monbgprio_2A
	.word	ScriptCmd_invisible
	.word	ScriptCmd_visible
	.word	ScriptCmd_doublebattle_2D
	.word	ScriptCmd_doublebattle_2E
	.word	ScriptCmd_stopsound
	.size	 sScriptCmdTable,192
.text
	.align	2, 0
	.globl	ClearBattleAnimationVars
	.type	 ClearBattleAnimationVars,function
	.thumb_func
ClearBattleAnimationVars:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r0, .L13
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L13+0x4
	strb	r1, [r0]
	ldr	r0, .L13+0x8
	strb	r1, [r0]
	ldr	r0, .L13+0xc
	strb	r1, [r0]
	ldr	r0, .L13+0x10
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L13+0x14
	str	r1, [r0]
	ldr	r0, .L13+0x18
	mov	r2, #0x0
	strh	r1, [r0]
	ldr	r0, .L13+0x1c
	strb	r2, [r0]
	ldr	r4, .L13+0x20
	ldr	r5, .L13+0x24
	ldr	r6, .L13+0x28
	ldr	r7, .L13+0x2c
	ldr	r0, .L13+0x30
	mov	ip, r0
	ldr	r1, .L13+0x34
	mov	r8, r1
	ldr	r0, .L13+0x38
	mov	r9, r0
	ldr	r1, .L13+0x3c
	add	r3, r1, #0
	ldr	r1, .L13+0x40
	mov	r2, #0x7
.L6:
	ldrh	r0, [r1]
	orr	r0, r0, r3
	strh	r0, [r1]
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L6	@cond_branch
	ldr	r1, .L13+0x44
	mov	r2, #0x0
	add	r0, r1, #0
	add	r0, r0, #0xe
.L11:
	strh	r2, [r0]
	sub	r0, r0, #0x2
	cmp	r0, r1
	bge	.L11	@cond_branch
	mov	r1, #0x0
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x1
	neg	r0, r0
	strb	r0, [r4, #0x1]
	strb	r1, [r5]
	strb	r1, [r6]
	mov	r0, #0x0
	strh	r1, [r7]
	mov	r1, ip
	strb	r0, [r1]
	mov	r1, r8
	strb	r0, [r1]
	mov	r1, r9
	strb	r0, [r1]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	gAnimFramesToWait
	.word	gAnimScriptActive
	.word	gAnimVisualTaskCount
	.word	gAnimSoundTaskCount
	.word	gAnimDisableStructPtr
	.word	gAnimMoveDmg
	.word	gAnimMovePower
	.word	gAnimFriendship
	.word	sMonAnimTaskIdArray
	.word	gAnimMoveTurn
	.word	sAnimBackgroundFadeState
	.word	gAnimMoveIndex
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	gAnimCustomPanning
	.word	0xffff
	.word	sAnimSpriteIndexArray
	.word	gBattleAnimArgs
.Lfe1:
	.size	 ClearBattleAnimationVars,.Lfe1-ClearBattleAnimationVars
	.align	2, 0
	.globl	DoMoveAnim
	.type	 DoMoveAnim,function
	.thumb_func
DoMoveAnim:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r1, .L22
	ldr	r0, .L22+0x4
	ldrb	r0, [r0]
	strb	r0, [r1]
	ldr	r4, .L22+0x8
	ldr	r0, .L22+0xc
	ldrb	r0, [r0]
	strb	r0, [r4]
	ldr	r1, .L22+0x10
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L16	@cond_branch
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L16	@cond_branch
	mov	r6, #0x1
	add	r5, r4, #0
	b	.L17
.L23:
	.align	2, 0
.L22:
	.word	gBattleAnimAttacker
	.word	gBattlerAttacker
	.word	gBattleAnimTarget
	.word	gBattlerTarget
	.word	gBattleMoves
.L19:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L17	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5]
.L17:
	ldr	r0, .L24
	ldrb	r0, [r0]
	bl	GetBattlerPosition
	add	r4, r6, #0
	and	r4, r4, r0
	ldrb	r0, [r5]
	bl	GetBattlerPosition
	add	r1, r6, #0
	and	r1, r1, r0
	cmp	r4, r1
	beq	.L19	@cond_branch
.L16:
	ldr	r0, .L24+0x4
	add	r1, r7, #0
	mov	r2, #0x1
	bl	LaunchBattleAnimation
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	gBattleAnimAttacker
	.word	gBattleAnims_Moves
.Lfe2:
	.size	 DoMoveAnim,.Lfe2-DoMoveAnim
	.align	2, 0
	.globl	LaunchBattleAnimation
	.type	 LaunchBattleAnimation,function
	.thumb_func
LaunchBattleAnimation:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	str	r0, [sp]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L27	@cond_branch
	bl	sub_80A8278
	mov	r0, #0x0
	bl	UpdateOamPriorityInAllHealthboxes
	mov	r4, #0x0
	mov	r0, r8
	lsl	r0, r0, #0x2
	mov	sl, r0
	ldr	r6, .L61
	mov	r7, #0x64
	ldr	r5, .L61+0x4
.L31:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L32	@cond_branch
	ldrh	r0, [r6]
	mul	r0, r0, r7
	ldr	r1, .L61+0x8
	b	.L60
.L62:
	.align	2, 0
.L61:
	.word	gBattlerPartyIndexes
	.word	gAnimBattlerSpecies
	.word	gEnemyParty
.L32:
	ldrh	r0, [r6]
	mul	r0, r0, r7
	ldr	r1, .L63
.L60:
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	strh	r0, [r5]
	add	r6, r6, #0x2
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L31	@cond_branch
	ldr	r3, .L63+0x4
	ldr	r5, .L63+0x8
	ldr	r1, .L63+0xc
	mov	ip, r1
	ldr	r7, .L63+0x10
	ldr	r6, .L63+0x14
	b	.L35
.L64:
	.align	2, 0
.L63:
	.word	gPlayerParty
	.word	gAnimMoveIndex
	.word	sMonAnimTaskIdArray
	.word	gAnimScriptActive
	.word	gAnimScriptCallback
	.word	RunAnimScriptCommand
.L27:
	ldr	r3, .L65
	ldr	r5, .L65+0x4
	mov	r0, r8
	lsl	r0, r0, #0x2
	mov	sl, r0
	ldr	r1, .L65+0x8
	mov	ip, r1
	ldr	r7, .L65+0xc
	ldr	r6, .L65+0x10
	ldr	r2, .L65+0x14
	ldr	r1, .L65+0x18
	mov	r4, #0x3
.L39:
	ldr	r0, [r2]
	ldr	r0, [r0, #0x18]
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L39	@cond_branch
.L35:
	mov	r0, r9
	cmp	r0, #0
	bne	.L41	@cond_branch
	strh	r0, [r3]
	b	.L42
.L66:
	.align	2, 0
.L65:
	.word	gAnimMoveIndex
	.word	sMonAnimTaskIdArray
	.word	gAnimScriptActive
	.word	gAnimScriptCallback
	.word	RunAnimScriptCommand
	.word	gContestResources
	.word	gAnimBattlerSpecies
.L41:
	mov	r1, r8
	strh	r1, [r3]
.L42:
	ldr	r1, .L67
	mov	r2, #0x0
	add	r0, r1, #0
	add	r0, r0, #0xe
.L46:
	strh	r2, [r0]
	sub	r0, r0, #0x2
	cmp	r0, r1
	bge	.L46	@cond_branch
	mov	r0, #0xff
	strb	r0, [r5]
	mov	r0, #0x1
	neg	r0, r0
	strb	r0, [r5, #0x1]
	ldr	r0, [sp]
	add	r0, r0, sl
	ldr	r0, [r0]
	ldr	r1, .L67+0x4
	str	r0, [r1]
	mov	r0, #0x1
	mov	r1, ip
	strb	r0, [r1]
	mov	r0, #0x0
	ldr	r1, .L67+0x8
	strb	r0, [r1]
	str	r6, [r7]
	ldr	r0, .L67+0xc
	add	r2, r0, #0
	ldr	r1, .L67+0x10
	mov	r4, #0x7
.L51:
	ldrh	r0, [r1]
	orr	r0, r0, r2
	strh	r0, [r1]
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L51	@cond_branch
	mov	r1, r9
	cmp	r1, #0
	beq	.L53	@cond_branch
	mov	r4, #0x0
	ldr	r2, .L67+0x14
	b	.L54
.L68:
	.align	2, 0
.L67:
	.word	gBattleAnimArgs
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
	.word	0xffff
	.word	sAnimSpriteIndexArray
	.word	gMovesWithQuietBGM
.L56:
	add	r4, r4, #0x1
.L54:
	lsl	r0, r4, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	ldr	r1, .L69
	cmp	r0, r1
	beq	.L53	@cond_branch
	cmp	r8, r0
	bne	.L56	@cond_branch
	ldr	r0, .L69+0x4
	mov	r2, #0x80
	bl	m4aMPlayVolumeControl
.L53:
	ldr	r0, .L69+0x8
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L69+0xc
	strh	r1, [r0]
	ldr	r0, .L69+0x10
	strh	r1, [r0]
	ldr	r0, .L69+0x14
	strh	r1, [r0]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L70:
	.align	2, 0
.L69:
	.word	0xffff
	.word	gMPlayInfo_BGM
	.word	gBattle_WIN0H
	.word	gBattle_WIN0V
	.word	gBattle_WIN1H
	.word	gBattle_WIN1V
.Lfe3:
	.size	 LaunchBattleAnimation,.Lfe3-LaunchBattleAnimation
	.align	2, 0
	.globl	DestroyAnimSprite
	.type	 DestroyAnimSprite,function
	.thumb_func
DestroyAnimSprite:
	push	{r4, lr}
	add	r4, r0, #0
	bl	FreeSpriteOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r1, .L72
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L73:
	.align	2, 0
.L72:
	.word	gAnimVisualTaskCount
.Lfe4:
	.size	 DestroyAnimSprite,.Lfe4-DestroyAnimSprite
	.align	2, 0
	.globl	DestroyAnimVisualTask
	.type	 DestroyAnimVisualTask,function
	.thumb_func
DestroyAnimVisualTask:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	ldr	r1, .L75
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gAnimVisualTaskCount
.Lfe5:
	.size	 DestroyAnimVisualTask,.Lfe5-DestroyAnimVisualTask
	.align	2, 0
	.globl	DestroyAnimSoundTask
	.type	 DestroyAnimSoundTask,function
	.thumb_func
DestroyAnimSoundTask:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	ldr	r1, .L78
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L79:
	.align	2, 0
.L78:
	.word	gAnimSoundTaskCount
.Lfe6:
	.size	 DestroyAnimSoundTask,.Lfe6-DestroyAnimSoundTask
	.align	2, 0
	.type	 AddSpriteIndex,function
	.thumb_func
AddSpriteIndex:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x0
	ldr	r4, .L87
	ldr	r1, .L87+0x4
.L84:
	ldrh	r0, [r1]
	cmp	r0, r4
	bne	.L83	@cond_branch
	strh	r3, [r1]
	b	.L80
.L88:
	.align	2, 0
.L87:
	.word	0xffff
	.word	sAnimSpriteIndexArray
.L83:
	add	r1, r1, #0x2
	add	r2, r2, #0x1
	cmp	r2, #0x7
	ble	.L84	@cond_branch
.L80:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 AddSpriteIndex,.Lfe7-AddSpriteIndex
	.align	2, 0
	.type	 ClearSpriteIndex,function
	.thumb_func
ClearSpriteIndex:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x0
	ldr	r0, .L96
	add	r4, r0, #0
	ldr	r1, .L96+0x4
.L93:
	ldrh	r0, [r1]
	cmp	r0, r3
	bne	.L92	@cond_branch
	orr	r0, r0, r4
	strh	r0, [r1]
	b	.L89
.L97:
	.align	2, 0
.L96:
	.word	0xffff
	.word	sAnimSpriteIndexArray
.L92:
	add	r1, r1, #0x2
	add	r2, r2, #0x1
	cmp	r2, #0x7
	ble	.L93	@cond_branch
.L89:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 ClearSpriteIndex,.Lfe8-ClearSpriteIndex
	.align	2, 0
	.type	 WaitAnimFrameCount,function
	.thumb_func
WaitAnimFrameCount:
	push	{lr}
	ldr	r2, .L102
	ldrb	r1, [r2]
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp	r0, #0
	bgt	.L99	@cond_branch
	ldr	r0, .L102+0x4
	ldr	r1, .L102+0x8
	str	r1, [r0]
	mov	r0, #0x0
	b	.L101
.L103:
	.align	2, 0
.L102:
	.word	gAnimFramesToWait
	.word	gAnimScriptCallback
	.word	RunAnimScriptCommand
.L99:
	sub	r0, r1, #0x1
.L101:
	strb	r0, [r2]
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 WaitAnimFrameCount,.Lfe9-WaitAnimFrameCount
	.align	2, 0
	.type	 RunAnimScriptCommand,function
	.thumb_func
RunAnimScriptCommand:
	push	{r4, lr}
	ldr	r4, .L111
.L105:
	ldr	r0, .L111+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	_call_via_r0
	ldr	r0, .L111+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0
	bne	.L106	@cond_branch
	ldr	r0, .L111+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L105	@cond_branch
.L106:
	pop	{r4}
	pop	{r0}
	bx	r0
.L112:
	.align	2, 0
.L111:
	.word	sScriptCmdTable
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
	.word	gAnimScriptActive
.Lfe10:
	.size	 RunAnimScriptCommand,.Lfe10-RunAnimScriptCommand
	.align	2, 0
	.type	 ScriptCmd_loadspritegfx,function
	.thumb_func
ScriptCmd_loadspritegfx:
	push	{r4, r5, r6, lr}
	ldr	r6, .L114
	ldr	r0, [r6]
	add	r1, r0, #0x1
	str	r1, [r6]
	ldrb	r4, [r0, #0x1]
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	orr	r4, r4, r0
	lsl	r5, r4, #0x3
	ldr	r0, .L114+0x4
	add	r0, r5, r0
	bl	LoadCompressedSpriteSheetUsingHeap
	ldr	r0, .L114+0x8
	add	r5, r5, r0
	add	r0, r5, #0
	bl	LoadCompressedSpritePaletteUsingHeap
	ldr	r0, [r6]
	add	r0, r0, #0x2
	str	r0, [r6]
	ldr	r0, .L114+0xc
	add	r4, r4, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r4, #0
	bl	AddSpriteIndex
	ldr	r1, .L114+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L114+0x14
	ldr	r0, .L114+0x18
	str	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L115:
	.align	2, 0
.L114:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimPicTable+-0x13880
	.word	gBattleAnimPaletteTable+-0x13880
	.word	-0x2710
	.word	gAnimFramesToWait
	.word	gAnimScriptCallback
	.word	WaitAnimFrameCount
.Lfe11:
	.size	 ScriptCmd_loadspritegfx,.Lfe11-ScriptCmd_loadspritegfx
	.align	2, 0
	.type	 ScriptCmd_unloadspritegfx,function
	.thumb_func
ScriptCmd_unloadspritegfx:
	push	{r4, r5, r6, lr}
	ldr	r6, .L117
	ldr	r0, [r6]
	add	r1, r0, #0x1
	str	r1, [r6]
	ldrb	r4, [r0, #0x1]
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	orr	r4, r4, r0
	ldr	r1, .L117+0x4
	ldr	r0, .L117+0x8
	add	r4, r4, r0
	lsl	r0, r4, #0x3
	add	r0, r0, r1
	ldrh	r5, [r0, #0x6]
	add	r0, r5, #0
	bl	FreeSpriteTilesByTag
	add	r0, r5, #0
	bl	FreeSpritePaletteByTag
	ldr	r0, [r6]
	add	r0, r0, #0x2
	str	r0, [r6]
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r4, #0
	bl	ClearSpriteIndex
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L118:
	.align	2, 0
.L117:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimPicTable
	.word	-0x2710
.Lfe12:
	.size	 ScriptCmd_unloadspritegfx,.Lfe12-ScriptCmd_unloadspritegfx
	.align	2, 0
	.type	 ScriptCmd_createsprite,function
	.thumb_func
ScriptCmd_createsprite:
	push	{r4, r5, r6, r7, lr}
	ldr	r5, .L135
	ldr	r1, [r5]
	add	r3, r1, #0x1
	str	r3, [r5]
	ldrb	r2, [r1, #0x1]
	ldrb	r0, [r3, #0x1]
	lsl	r0, r0, #0x8
	add	r2, r2, r0
	ldrb	r0, [r3, #0x2]
	lsl	r0, r0, #0x10
	add	r2, r2, r0
	ldrb	r0, [r3, #0x3]
	lsl	r0, r0, #0x18
	add	r7, r2, r0
	add	r0, r1, #0x5
	str	r0, [r5]
	ldrb	r4, [r1, #0x5]
	add	r0, r1, #0x6
	str	r0, [r5]
	ldrb	r0, [r1, #0x6]
	add	r1, r1, #0x7
	str	r1, [r5]
	cmp	r0, #0
	beq	.L121	@cond_branch
	add	r6, r5, #0
	ldr	r5, .L135+0x4
	add	r3, r0, #0
.L123:
	ldr	r2, [r6]
	ldrb	r1, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	strh	r1, [r5]
	add	r2, r2, #0x2
	str	r2, [r6]
	add	r5, r5, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L123	@cond_branch
.L121:
	mov	r0, #0x80
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L125	@cond_branch
	mov	r0, #0x80
	eor	r4, r4, r0
	cmp	r4, #0x3f
	bls	.L126	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0x40
	b	.L132
.L136:
	.align	2, 0
.L135:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimArgs
.L126:
	neg	r0, r4
.L132:
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L137
	b	.L133
.L138:
	.align	2, 0
.L137:
	.word	gBattleAnimTarget
.L125:
	cmp	r4, #0x3f
	bls	.L129	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0x40
	b	.L134
.L129:
	neg	r0, r4
.L134:
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L139
.L133:
	ldrb	r0, [r0]
	bl	GetBattlerSpriteSubpriority
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x18
	asr	r1, r1, #0x18
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	bgt	.L131	@cond_branch
	mov	r6, #0x3
.L131:
	ldr	r5, .L139+0x4
	ldrb	r0, [r5]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r6, #0x18
	lsr	r3, r3, #0x18
	add	r0, r7, #0
	add	r1, r4, #0
	bl	CreateSpriteAndAnimate
	ldr	r1, .L139+0x8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L140:
	.align	2, 0
.L139:
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	gAnimVisualTaskCount
.Lfe13:
	.size	 ScriptCmd_createsprite,.Lfe13-ScriptCmd_createsprite
	.align	2, 0
	.type	 ScriptCmd_createvisualtask,function
	.thumb_func
ScriptCmd_createvisualtask:
	push	{r4, r5, r6, r7, lr}
	ldr	r4, .L147
	ldr	r1, [r4]
	add	r3, r1, #0x1
	str	r3, [r4]
	ldrb	r2, [r1, #0x1]
	ldrb	r0, [r3, #0x1]
	lsl	r0, r0, #0x8
	add	r2, r2, r0
	ldrb	r0, [r3, #0x2]
	lsl	r0, r0, #0x10
	add	r2, r2, r0
	ldrb	r0, [r3, #0x3]
	lsl	r0, r0, #0x18
	add	r6, r2, r0
	add	r0, r1, #0x5
	str	r0, [r4]
	ldrb	r7, [r1, #0x5]
	add	r0, r1, #0x6
	str	r0, [r4]
	ldrb	r0, [r1, #0x6]
	add	r1, r1, #0x7
	str	r1, [r4]
	cmp	r0, #0
	beq	.L143	@cond_branch
	add	r5, r4, #0
	ldr	r4, .L147+0x4
	add	r3, r0, #0
.L145:
	ldr	r2, [r5]
	ldrb	r1, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	strh	r1, [r4]
	add	r2, r2, #0x2
	str	r2, [r5]
	add	r4, r4, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L145	@cond_branch
.L143:
	add	r0, r6, #0
	add	r1, r7, #0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r6
	ldr	r1, .L147+0x8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L148:
	.align	2, 0
.L147:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimArgs
	.word	gAnimVisualTaskCount
.Lfe14:
	.size	 ScriptCmd_createvisualtask,.Lfe14-ScriptCmd_createvisualtask
	.align	2, 0
	.type	 ScriptCmd_delay,function
	.thumb_func
ScriptCmd_delay:
	push	{r4, lr}
	ldr	r1, .L151
	ldr	r0, [r1]
	add	r2, r0, #0x1
	str	r2, [r1]
	ldr	r3, .L151+0x4
	ldrb	r0, [r0, #0x1]
	strb	r0, [r3]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L150	@cond_branch
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	strb	r0, [r3]
.L150:
	add	r0, r2, #0x1
	str	r0, [r1]
	ldr	r1, .L151+0x8
	ldr	r0, .L151+0xc
	str	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L152:
	.align	2, 0
.L151:
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
	.word	gAnimScriptCallback
	.word	WaitAnimFrameCount
.Lfe15:
	.size	 ScriptCmd_delay,.Lfe15-ScriptCmd_delay
	.align	2, 0
	.type	 ScriptCmd_waitforvisualfinish,function
	.thumb_func
ScriptCmd_waitforvisualfinish:
	push	{lr}
	ldr	r0, .L156
	ldrb	r2, [r0]
	cmp	r2, #0
	bne	.L154	@cond_branch
	ldr	r0, .L156+0x4
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	ldr	r0, .L156+0x8
	strb	r2, [r0]
	b	.L155
.L157:
	.align	2, 0
.L156:
	.word	gAnimVisualTaskCount
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
.L154:
	ldr	r1, .L158
	mov	r0, #0x1
	strb	r0, [r1]
.L155:
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	gAnimFramesToWait
.Lfe16:
	.size	 ScriptCmd_waitforvisualfinish,.Lfe16-ScriptCmd_waitforvisualfinish
	.align	2, 0
	.type	 ScriptCmd_hang1,function
	.thumb_func
ScriptCmd_hang1:
	bx	lr
.Lfe17:
	.size	 ScriptCmd_hang1,.Lfe17-ScriptCmd_hang1
	.align	2, 0
	.type	 ScriptCmd_hang2,function
	.thumb_func
ScriptCmd_hang2:
	bx	lr
.Lfe18:
	.size	 ScriptCmd_hang2,.Lfe18-ScriptCmd_hang2
	.align	2, 0
	.type	 ScriptCmd_end,function
	.thumb_func
ScriptCmd_end:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r0, #0x0
	mov	r8, r0
	ldr	r0, .L177
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L164	@cond_branch
	ldr	r0, .L177+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L164	@cond_branch
	ldr	r1, .L177+0x8
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L164	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0xff
	beq	.L163	@cond_branch
.L164:
	ldr	r1, .L177+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L176
.L178:
	.align	2, 0
.L177:
	.word	gAnimVisualTaskCount
	.word	gAnimSoundTaskCount
	.word	sMonAnimTaskIdArray
	.word	sSoundAnimFramesToWait
.L163:
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L165	@cond_branch
	ldr	r1, .L179
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x5a
	bhi	.L166	@cond_branch
.L176:
	ldr	r1, .L179+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L162
.L180:
	.align	2, 0
.L179:
	.word	sSoundAnimFramesToWait
	.word	gAnimFramesToWait
.L166:
	ldr	r0, .L181
	bl	m4aMPlayStop
	ldr	r0, .L181+0x4
	bl	m4aMPlayStop
.L165:
	ldr	r1, .L181+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r5, #0x0
	ldr	r7, .L181+0xc
	ldr	r6, .L181+0x10
	ldr	r4, .L181+0x14
.L171:
	ldrh	r0, [r4]
	cmp	r0, r7
	beq	.L170	@cond_branch
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	ldrh	r0, [r0, #0x6]
	bl	FreeSpriteTilesByTag
	ldrh	r0, [r4]
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	ldrh	r0, [r0, #0x6]
	bl	FreeSpritePaletteByTag
	ldrh	r1, [r4]
	add	r0, r7, #0
	orr	r0, r0, r1
	strh	r0, [r4]
.L170:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x7
	ble	.L171	@cond_branch
	mov	r1, r8
	cmp	r1, #0
	bne	.L162	@cond_branch
	ldr	r0, .L181+0x18
	ldr	r1, .L181+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	m4aMPlayVolumeControl
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L175	@cond_branch
	bl	sub_80A8278
	mov	r0, #0x1
	bl	UpdateOamPriorityInAllHealthboxes
.L175:
	ldr	r0, .L181+0x1c
	mov	r1, r8
	strb	r1, [r0]
.L162:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L182:
	.align	2, 0
.L181:
	.word	gMPlayInfo_SE1
	.word	gMPlayInfo_SE2
	.word	sSoundAnimFramesToWait
	.word	0xffff
	.word	gBattleAnimPicTable
	.word	sAnimSpriteIndexArray
	.word	gMPlayInfo_BGM
	.word	gAnimScriptActive
.Lfe19:
	.size	 ScriptCmd_end,.Lfe19-ScriptCmd_end
	.align	2, 0
	.type	 ScriptCmd_playse,function
	.thumb_func
ScriptCmd_playse:
	push	{r4, lr}
	ldr	r4, .L184
	ldr	r0, [r4]
	add	r1, r0, #0x1
	str	r1, [r4]
	ldrb	r0, [r0, #0x1]
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	bl	PlaySE
	ldr	r0, [r4]
	add	r0, r0, #0x2
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L185:
	.align	2, 0
.L184:
	.word	sBattleAnimScriptPtr
.Lfe20:
	.size	 ScriptCmd_playse,.Lfe20-ScriptCmd_playse
	.align	2, 0
	.type	 sub_80A40F4,function
	.thumb_func
sub_80A40F4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L191
	mov	r8, r1
	add	r6, r0, r1
	ldr	r1, .L191+0x4
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	add	r0, r0, r1
	ldrb	r5, [r0]
	ldr	r1, .L191+0x8
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r4, r0, r1
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r3, #0x4
	ldrsh	r0, [r6, r3]
	cmp	r0, #0
	bne	.L187	@cond_branch
	add	r0, r7, #0
	bl	DestroyAnimVisualTask
	b	.L186
.L192:
	.align	2, 0
.L191:
	.word	gTasks+0x8
	.word	gBattlerSpriteIds
	.word	gSprites
.L187:
	ldr	r0, .L193
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, r8
	sub	r1, r1, #0x8
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	strh	r5, [r1, #0x8]
	ldrh	r0, [r4, #0x24]
	ldrh	r3, [r4, #0x20]
	add	r0, r0, r3
	strh	r0, [r1, #0xa]
	ldrh	r0, [r4, #0x26]
	ldrh	r4, [r4, #0x22]
	add	r0, r0, r4
	strh	r0, [r1, #0xc]
	mov	r3, #0x2
	ldrsh	r0, [r6, r3]
	cmp	r0, #0
	bne	.L188	@cond_branch
	ldr	r0, .L193+0x4
	ldrh	r0, [r0]
	strh	r0, [r1, #0xe]
	ldr	r0, .L193+0x8
	b	.L190
.L194:
	.align	2, 0
.L193:
	.word	task_pA_ma0A_obj_to_bg_pal
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
.L188:
	ldr	r0, .L195
	ldrh	r0, [r0]
	strh	r0, [r1, #0xe]
	ldr	r0, .L195+0x4
.L190:
	ldrh	r0, [r0]
	strh	r0, [r1, #0x10]
	ldr	r1, .L195+0x8
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r6, #0x2]
	strh	r1, [r0, #0x12]
	ldrh	r1, [r6]
	strh	r1, [r0, #0x14]
	ldr	r1, .L195+0xc
	mov	r3, #0x6
	ldrsh	r0, [r6, r3]
	add	r0, r0, r1
	strb	r2, [r0]
	add	r0, r7, #0
	bl	DestroyAnimVisualTask
.L186:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L196:
	.align	2, 0
.L195:
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
	.word	gTasks
	.word	sMonAnimTaskIdArray
.Lfe21:
	.size	 sub_80A40F4,.Lfe21-sub_80A40F4
	.align	2, 0
	.type	 ScriptCmd_monbg,function
	.thumb_func
ScriptCmd_monbg:
	push	{r4, r5, lr}
	ldr	r1, .L209
	ldr	r2, [r1]
	add	r0, r2, #0x1
	str	r0, [r1]
	ldrb	r0, [r2, #0x1]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L198	@cond_branch
	ldr	r0, .L209+0x4
	b	.L208
.L210:
	.align	2, 0
.L209:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimTarget
.L198:
	ldr	r0, .L211
.L208:
	ldrb	r4, [r0]
	add	r0, r4, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L200	@cond_branch
	add	r0, r4, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L202	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L201	@cond_branch
.L202:
	mov	r5, #0x0
	b	.L203
.L212:
	.align	2, 0
.L211:
	.word	gBattleAnimAttacker
.L201:
	mov	r5, #0x1
.L203:
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x0
	bl	MoveBattlerSpriteToBG
	ldr	r0, .L213
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L213+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L213+0x8
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x0
	strh	r4, [r0, #0x8]
	strh	r5, [r0, #0xa]
	mov	r1, #0x1
	strh	r1, [r0, #0xc]
	strh	r2, [r0, #0xe]
.L200:
	mov	r0, #0x2
	eor	r4, r4, r0
	add	r0, r4, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L204	@cond_branch
	add	r0, r4, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L206	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L205	@cond_branch
.L206:
	mov	r5, #0x0
	b	.L207
.L214:
	.align	2, 0
.L213:
	.word	sub_80A40F4
	.word	gAnimVisualTaskCount
	.word	gTasks
.L205:
	mov	r5, #0x1
.L207:
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x0
	bl	MoveBattlerSpriteToBG
	ldr	r0, .L215
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L215+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L215+0x8
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r4, [r0, #0x8]
	strh	r5, [r0, #0xa]
	mov	r1, #0x1
	strh	r1, [r0, #0xc]
	strh	r1, [r0, #0xe]
.L204:
	ldr	r1, .L215+0xc
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r1, .L215+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L215+0x14
	ldr	r0, .L215+0x18
	str	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L216:
	.align	2, 0
.L215:
	.word	sub_80A40F4
	.word	gAnimVisualTaskCount
	.word	gTasks
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
	.word	gAnimScriptCallback
	.word	WaitAnimFrameCount
.Lfe22:
	.size	 ScriptCmd_monbg,.Lfe22-ScriptCmd_monbg
	.align	2, 0
	.globl	GetAnimBattlerId
	.type	 GetAnimBattlerId,function
	.thumb_func
GetAnimBattlerId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0
	bne	.L218	@cond_branch
	ldr	r0, .L227
	ldrb	r0, [r0]
	b	.L225
.L228:
	.align	2, 0
.L227:
	.word	gBattleAnimAttacker
.L218:
	cmp	r0, #0x1
	bne	.L220	@cond_branch
	ldr	r0, .L229
	ldrb	r0, [r0]
	b	.L225
.L230:
	.align	2, 0
.L229:
	.word	gBattleAnimTarget
.L220:
	cmp	r1, #0x2
	beq	.L222	@cond_branch
	ldr	r0, .L231
	b	.L226
.L232:
	.align	2, 0
.L231:
	.word	gBattleAnimTarget
.L222:
	ldr	r0, .L233
.L226:
	ldrb	r1, [r0]
	mov	r0, #0x2
	eor	r0, r0, r1
.L225:
	pop	{r1}
	bx	r1
.L234:
	.align	2, 0
.L233:
	.word	gBattleAnimAttacker
.Lfe23:
	.size	 GetAnimBattlerId,.Lfe23-GetAnimBattlerId
	.align	2, 0
	.globl	IsBattlerSpriteVisible
	.type	 IsBattlerSpriteVisible,function
	.thumb_func
IsBattlerSpriteVisible:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L236	@cond_branch
	ldr	r0, .L244
	ldrb	r0, [r0]
	cmp	r4, r0
	beq	.L242	@cond_branch
	b	.L241
.L245:
	.align	2, 0
.L244:
	.word	gBattleAnimAttacker
.L236:
	add	r0, r4, #0
	bl	IsBattlerSpritePresent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L241	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L242	@cond_branch
	ldr	r0, .L246
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L242	@cond_branch
	ldr	r2, .L246+0x4
	ldr	r0, .L246+0x8
	add	r0, r5, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	blt	.L241	@cond_branch
.L242:
	mov	r0, #0x1
	b	.L243
.L247:
	.align	2, 0
.L246:
	.word	gBattleSpritesDataPtr
	.word	gSprites
	.word	gBattlerSpriteIds
.L241:
	mov	r0, #0x0
.L243:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 IsBattlerSpriteVisible,.Lfe24-IsBattlerSpriteVisible
	.align	2, 0
	.globl	MoveBattlerSpriteToBG
	.type	 MoveBattlerSpriteToBG,function
	.thumb_func
MoveBattlerSpriteToBG:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	lsl	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	cmp	r1, #0
	beq	.LCB1953
	b	.L249	@long jump
.LCB1953:
	bl	IsContest
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L250	@cond_branch
	ldr	r1, .L259
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	mov	r0, #0x0
	mov	r3, #0x1
	bl	RequestDma3Fill
	ldr	r1, .L259+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	mov	r0, #0xff
	mov	r3, #0x0
	bl	RequestDma3Fill
	b	.L251
.L260:
	.align	2, 0
.L259:
	.word	0x6008000
	.word	0x600f000
.L250:
	ldr	r1, .L261
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	mov	r0, #0x0
	mov	r3, #0x1
	bl	RequestDma3Fill
	ldr	r1, .L261+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	mov	r0, #0xff
	mov	r3, #0x0
	bl	RequestDma3Fill
.L251:
	add	r0, sp, #0x10
	bl	sub_80A6B30
	add	r0, sp, #0x20
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r1, [sp, #0x10]
	ldr	r2, .L261+0x8
	bl	CpuSet
	mov	r0, sp
	add	r0, r0, #0x22
	mov	r1, #0xff
	strh	r1, [r0]
	ldr	r1, [sp, #0x14]
	ldr	r2, .L261+0xc
	bl	CpuSet
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x2
	bl	SetAnimBgAttribute
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	SetAnimBgAttribute
	ldr	r0, .L261+0x10
	add	r0, r6, r0
	ldrb	r4, [r0]
	ldr	r5, .L261+0x14
	ldr	r0, .L261+0x18
	lsl	r1, r4, #0x4
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x24]
	ldrh	r1, [r1, #0x20]
	add	r0, r0, r1
	neg	r0, r0
	add	r0, r0, #0x20
	strh	r0, [r5]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L252	@cond_branch
	ldr	r0, .L261+0x1c
	ldr	r0, [r0]
	ldr	r0, [r0, #0x18]
	ldrh	r0, [r0]
	bl	IsSpeciesNotUnown
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L252	@cond_branch
	ldrh	r0, [r5]
	sub	r0, r0, #0x1
	strh	r0, [r5]
.L252:
	ldr	r5, .L261+0x20
	ldr	r2, .L261+0x18
	lsl	r1, r4, #0x4
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r0, [r1, #0x26]
	ldrh	r1, [r1, #0x22]
	add	r0, r0, r1
	neg	r0, r0
	add	r0, r0, #0x20
	strh	r0, [r5]
	mov	r0, r9
	cmp	r0, #0
	beq	.L253	@cond_branch
	ldr	r0, .L261+0x10
	add	r0, r6, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L253:
	ldr	r0, .L261+0x14
	ldrh	r1, [r0]
	mov	r0, #0x14
	bl	SetGpuReg
	ldrh	r1, [r5]
	mov	r0, #0x16
	bl	SetGpuReg
	lsl	r4, r6, #0x5
	ldr	r0, .L261+0x24
	add	r4, r4, r0
	add	r0, sp, #0x10
	ldrb	r1, [r0, #0x8]
	lsl	r1, r1, #0x4
	add	r0, r4, #0
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, sp, #0x10
	ldrb	r1, [r0, #0x8]
	lsl	r1, r1, #0x5
	mov	r0, #0xa0
	lsl	r0, r0, #0x13
	add	r1, r1, r0
	ldr	r2, .L261+0x28
	add	r0, r4, #0
	bl	CpuSet
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L254	@cond_branch
	mov	r3, #0x0
	b	.L255
.L262:
	.align	2, 0
.L261:
	.word	0x6004000
	.word	0x600e000
	.word	0x1000800
	.word	0x1000400
	.word	gBattlerSpriteIds
	.word	gBattle_BG1_X
	.word	gSprites
	.word	gContestResources
	.word	gBattle_BG1_Y
	.word	gPlttBufferUnfaded+0x200
	.word	0x4000008
.L254:
	add	r0, r6, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L255:
	add	r0, sp, #0x10
	ldrb	r0, [r0, #0x8]
	str	r0, [sp]
	ldr	r0, [sp, #0x10]
	str	r0, [sp, #0x4]
	ldr	r0, [sp, #0x14]
	str	r0, [sp, #0x8]
	add	r0, sp, #0x10
	ldrh	r0, [r0, #0xa]
	str	r0, [sp, #0xc]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8118FBC
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2194
	b	.L257	@long jump
.LCB2194:
	bl	sub_80A46A0
	b	.L257
.L249:
	ldr	r1, .L263
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	mov	r0, #0x0
	mov	r3, #0x1
	bl	RequestDma3Fill
	ldr	r1, .L263+0x4
	mov	r7, #0x80
	lsl	r7, r7, #0x5
	mov	r0, #0x0
	add	r2, r7, #0
	mov	r3, #0x1
	bl	RequestDma3Fill
	add	r0, sp, #0x10
	mov	r1, #0x2
	bl	sub_80A6B90
	add	r0, sp, #0x24
	mov	r4, #0x0
	strh	r4, [r0]
	ldr	r1, [sp, #0x10]
	add	r1, r1, r7
	ldr	r2, .L263+0x8
	bl	CpuSet
	mov	r0, sp
	add	r0, r0, #0x26
	strh	r4, [r0]
	ldr	r1, [sp, #0x14]
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r8, r2
	add	r1, r1, r8
	ldr	r2, .L263+0xc
	bl	CpuSet
	mov	r0, #0x2
	mov	r1, #0x4
	mov	r2, #0x2
	bl	SetAnimBgAttribute
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	bl	SetAnimBgAttribute
	ldr	r0, .L263+0x10
	add	r2, r5, r0
	ldrb	r4, [r2]
	ldr	r5, .L263+0x14
	ldr	r3, .L263+0x18
	lsl	r1, r4, #0x4
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrh	r0, [r1, #0x24]
	ldrh	r4, [r1, #0x20]
	add	r0, r0, r4
	neg	r0, r0
	add	r0, r0, #0x20
	strh	r0, [r5]
	ldr	r4, .L263+0x1c
	ldrh	r0, [r1, #0x26]
	ldrh	r1, [r1, #0x22]
	add	r0, r0, r1
	neg	r0, r0
	add	r0, r0, #0x20
	strh	r0, [r4]
	mov	r0, r9
	cmp	r0, #0
	beq	.L258	@cond_branch
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L258:
	ldrh	r1, [r5]
	mov	r0, #0x18
	bl	SetGpuReg
	ldrh	r1, [r4]
	mov	r0, #0x1a
	bl	SetGpuReg
	lsl	r4, r6, #0x5
	ldr	r0, .L263+0x20
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x90
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L263+0x24
	ldr	r2, .L263+0x28
	add	r0, r4, #0
	bl	CpuSet
	add	r0, r6, #0
	bl	GetBattlerPosition
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, sp, #0x10
	ldrb	r0, [r0, #0x8]
	str	r0, [sp]
	ldr	r0, [sp, #0x10]
	add	r0, r0, r7
	str	r0, [sp, #0x4]
	ldr	r0, [sp, #0x14]
	add	r0, r0, r8
	str	r0, [sp, #0x8]
	add	r0, sp, #0x10
	ldrh	r0, [r0, #0xa]
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8118FBC
.L257:
	add	sp, sp, #0x28
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L264:
	.align	2, 0
.L263:
	.word	0x6006000
	.word	0x600f000
	.word	0x1000800
	.word	0x1000400
	.word	gBattlerSpriteIds
	.word	gBattle_BG2_X
	.word	gSprites
	.word	gBattle_BG2_Y
	.word	gPlttBufferUnfaded+0x200
	.word	0x5000120
	.word	0x4000008
.Lfe25:
	.size	 MoveBattlerSpriteToBG,.Lfe25-MoveBattlerSpriteToBG
	.align	2, 0
	.type	 sub_80A46A0,function
	.thumb_func
sub_80A46A0:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	ldr	r0, .L287
	ldr	r0, [r0]
	ldr	r0, [r0, #0x18]
	ldrh	r0, [r0]
	bl	IsSpeciesNotUnown
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L266	@cond_branch
	mov	r0, sp
	bl	sub_80A6B30
	ldr	r6, [sp, #0x4]
	mov	r5, #0x0
	mov	r0, #0x7
	mov	ip, r0
	mov	r7, #0x0
.L270:
	mov	r4, #0x0
	add	r3, r7, r6
	mov	r1, ip
	lsl	r0, r1, #0x1
	add	r2, r0, r6
.L274:
	ldrh	r1, [r3]
	ldrh	r0, [r2]
	strh	r0, [r3]
	strh	r1, [r2]
	add	r3, r3, #0x2
	sub	r2, r2, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L274	@cond_branch
	mov	r0, #0x20
	add	ip, ip, r0
	add	r7, r7, #0x40
	add	r5, r5, #0x1
	cmp	r5, #0x7
	ble	.L270	@cond_branch
	mov	r5, #0x0
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	add	r3, r1, #0
.L280:
	add	r2, r5, #0x1
	lsl	r0, r5, #0x6
	add	r1, r0, r6
	mov	r4, #0x7
.L284:
	ldrh	r0, [r1]
	eor	r0, r0, r3
	strh	r0, [r1]
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L284	@cond_branch
	add	r5, r2, #0
	cmp	r5, #0x7
	ble	.L280	@cond_branch
.L266:
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L288:
	.align	2, 0
.L287:
	.word	gContestResources
.Lfe26:
	.size	 sub_80A46A0,.Lfe26-sub_80A46A0
	.align	2, 0
	.globl	sub_80A4720
	.type	 sub_80A4720,function
	.thumb_func
sub_80A4720:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r1
	add	r6, r2, #0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r3, r3, #0x18
	mov	r0, #0x40
	mov	ip, r0
	cmp	r3, #0
	bne	.L290	@cond_branch
	mov	r1, #0x20
	mov	ip, r1
.L290:
	lsl	r0, r5, #0x1c
	lsr	r5, r0, #0x10
	mov	r0, #0x0
	cmp	r0, ip
	bge	.L293	@cond_branch
	ldr	r7, .L302
.L295:
	add	r4, r0, #0x1
	lsl	r0, r0, #0x6
	mov	r1, r8
	add	r3, r0, r1
	mov	r2, #0x1f
.L299:
	ldrh	r1, [r3]
	add	r0, r7, #0
	and	r0, r0, r1
	orr	r0, r0, r5
	add	r0, r0, r6
	strh	r0, [r3]
	add	r3, r3, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L299	@cond_branch
	add	r0, r4, #0
	cmp	r0, ip
	blt	.L295	@cond_branch
.L293:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L303:
	.align	2, 0
.L302:
	.word	0xfff
.Lfe27:
	.size	 sub_80A4720,.Lfe27-sub_80A4720
	.align	2, 0
	.globl	sub_80A477C
	.type	 sub_80A477C,function
	.thumb_func
sub_80A477C:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, sp
	bl	sub_80A6B30
	cmp	r4, #0
	beq	.L306	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L305	@cond_branch
.L306:
	mov	r0, #0x1
	bl	sub_80A6C68
	ldr	r0, .L308
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L308+0x4
	strh	r1, [r0]
	b	.L307
.L309:
	.align	2, 0
.L308:
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
.L305:
	mov	r0, #0x2
	bl	sub_80A6C68
	ldr	r0, .L310
	strh	r4, [r0]
	ldr	r0, .L310+0x4
	strh	r4, [r0]
.L307:
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L311:
	.align	2, 0
.L310:
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
.Lfe28:
	.size	 sub_80A477C,.Lfe28-sub_80A477C
	.align	2, 0
	.type	 task_pA_ma0A_obj_to_bg_pal,function
	.thumb_func
task_pA_ma0A_obj_to_bg_pal:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L315
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r5, r1, r2
	ldrb	r4, [r5, #0x8]
	ldrb	r6, [r5, #0x14]
	mov	r0, sp
	bl	sub_80A6B30
	ldr	r0, .L315+0x4
	lsl	r1, r4, #0x4
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r2, [r1, #0x24]
	ldrh	r0, [r1, #0x20]
	add	r2, r2, r0
	ldrh	r0, [r5, #0xa]
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldrh	r2, [r1, #0x26]
	ldrh	r1, [r1, #0x22]
	add	r2, r2, r1
	ldrh	r0, [r5, #0xc]
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r1, #0x12
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L313	@cond_branch
	ldr	r1, .L315+0x8
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	ldrh	r3, [r5, #0xe]
	add	r0, r0, r3
	strh	r0, [r1]
	ldr	r1, .L315+0xc
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	ldrh	r5, [r5, #0x10]
	add	r0, r0, r5
	strh	r0, [r1]
	lsl	r0, r6, #0x5
	ldr	r2, .L315+0x10
	add	r0, r0, r2
	mov	r1, sp
	ldrb	r1, [r1, #0x8]
	lsl	r1, r1, #0x5
	ldr	r3, .L315+0x14
	add	r2, r2, r3
	add	r1, r1, r2
	ldr	r2, .L315+0x18
	bl	CpuSet
	b	.L314
.L316:
	.align	2, 0
.L315:
	.word	gTasks
	.word	gSprites
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gPlttBufferFaded+0x200
	.word	-0x200
	.word	0x4000008
.L313:
	ldr	r1, .L317
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	ldrh	r3, [r5, #0xe]
	add	r0, r0, r3
	strh	r0, [r1]
	ldr	r1, .L317+0x4
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	ldrh	r5, [r5, #0x10]
	add	r0, r0, r5
	strh	r0, [r1]
	lsl	r0, r6, #0x5
	ldr	r1, .L317+0x8
	add	r0, r0, r1
	sub	r1, r1, #0xe0
	ldr	r2, .L317+0xc
	bl	CpuSet
.L314:
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
	.word	gPlttBufferFaded+0x200
	.word	0x4000008
.Lfe29:
	.size	 task_pA_ma0A_obj_to_bg_pal,.Lfe29-task_pA_ma0A_obj_to_bg_pal
	.align	2, 0
	.type	 ScriptCmd_clearmonbg,function
	.thumb_func
ScriptCmd_clearmonbg:
	push	{r4, r5, lr}
	ldr	r0, .L331
	ldr	r2, [r0]
	add	r1, r2, #0x1
	str	r1, [r0]
	ldrb	r4, [r2, #0x1]
	cmp	r4, #0
	bne	.L320	@cond_branch
	mov	r4, #0x2
	b	.L329
.L332:
	.align	2, 0
.L331:
	.word	sBattleAnimScriptPtr
.L320:
	cmp	r4, #0x1
	bne	.L321	@cond_branch
	mov	r4, #0x3
.L321:
	cmp	r4, #0
	beq	.L324	@cond_branch
.L329:
	cmp	r4, #0x2
	bne	.L323	@cond_branch
.L324:
	ldr	r0, .L333
	b	.L330
.L334:
	.align	2, 0
.L333:
	.word	gBattleAnimAttacker
.L323:
	ldr	r0, .L335
.L330:
	ldrb	r5, [r0]
	ldr	r3, .L335+0x4
	ldrb	r0, [r3]
	cmp	r0, #0xff
	beq	.L326	@cond_branch
	ldr	r2, .L335+0x8
	ldr	r0, .L335+0xc
	add	r0, r5, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L326:
	cmp	r4, #0x1
	bls	.L327	@cond_branch
	ldrb	r0, [r3, #0x1]
	cmp	r0, #0xff
	beq	.L327	@cond_branch
	ldr	r3, .L335+0x8
	ldr	r2, .L335+0xc
	mov	r1, #0x2
	add	r0, r5, #0
	eor	r0, r0, r1
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	b	.L328
.L336:
	.align	2, 0
.L335:
	.word	gBattleAnimTarget
	.word	sMonAnimTaskIdArray
	.word	gSprites
	.word	gBattlerSpriteIds
.L327:
	mov	r4, #0x0
.L328:
	ldr	r0, .L337
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L337+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	strh	r5, [r1, #0xc]
	ldr	r1, .L337+0x8
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	sub_80A4980
	.word	gTasks
	.word	sBattleAnimScriptPtr
.Lfe30:
	.size	 ScriptCmd_clearmonbg,.Lfe30-ScriptCmd_clearmonbg
	.align	2, 0
	.type	 sub_80A4980,function
	.thumb_func
sub_80A4980:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L346
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L340	@cond_branch
	ldrb	r0, [r1, #0xc]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L342	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L341	@cond_branch
.L342:
	mov	r4, #0x0
	b	.L343
.L347:
	.align	2, 0
.L346:
	.word	gTasks
.L341:
	mov	r4, #0x1
.L343:
	ldr	r6, .L348
	ldrb	r0, [r6]
	cmp	r0, #0xff
	beq	.L344	@cond_branch
	add	r0, r4, #0
	bl	sub_80A477C
	ldrb	r0, [r6]
	bl	DestroyTask
	mov	r0, #0xff
	strb	r0, [r6]
.L344:
	ldr	r0, .L348+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	ble	.L345	@cond_branch
	mov	r0, #0x1
	eor	r4, r4, r0
	add	r0, r4, #0
	bl	sub_80A477C
	ldrb	r0, [r6, #0x1]
	bl	DestroyTask
	mov	r0, #0xff
	strb	r0, [r6, #0x1]
.L345:
	add	r0, r5, #0
	bl	DestroyTask
.L340:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	sMonAnimTaskIdArray
	.word	gTasks
.Lfe31:
	.size	 sub_80A4980,.Lfe31-sub_80A4980
	.align	2, 0
	.type	 ScriptCmd_monbg_22,function
	.thumb_func
ScriptCmd_monbg_22:
	push	{r4, r5, lr}
	ldr	r0, .L367
	ldr	r2, [r0]
	add	r1, r2, #0x1
	str	r1, [r0]
	ldrb	r5, [r2, #0x1]
	cmp	r5, #0
	bne	.L351	@cond_branch
	mov	r5, #0x2
	b	.L365
.L368:
	.align	2, 0
.L367:
	.word	sBattleAnimScriptPtr
.L351:
	cmp	r5, #0x1
	bne	.L352	@cond_branch
	mov	r5, #0x3
.L352:
	cmp	r5, #0
	beq	.L355	@cond_branch
.L365:
	cmp	r5, #0x2
	bne	.L354	@cond_branch
.L355:
	ldr	r0, .L369
	b	.L366
.L370:
	.align	2, 0
.L369:
	.word	gBattleAnimAttacker
.L354:
	ldr	r0, .L371
.L366:
	ldrb	r4, [r0]
	add	r0, r4, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L357	@cond_branch
	add	r0, r4, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L359	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L358	@cond_branch
.L359:
	mov	r1, #0x0
	b	.L360
.L372:
	.align	2, 0
.L371:
	.word	gBattleAnimTarget
.L358:
	mov	r1, #0x1
.L360:
	add	r0, r4, #0
	mov	r2, #0x0
	bl	MoveBattlerSpriteToBG
.L357:
	mov	r0, #0x2
	eor	r4, r4, r0
	cmp	r5, #0x1
	bls	.L361	@cond_branch
	add	r0, r4, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L361	@cond_branch
	add	r0, r4, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L363	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L362	@cond_branch
.L363:
	mov	r1, #0x0
	b	.L364
.L362:
	mov	r1, #0x1
.L364:
	add	r0, r4, #0
	mov	r2, #0x0
	bl	MoveBattlerSpriteToBG
.L361:
	ldr	r1, .L373
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L374:
	.align	2, 0
.L373:
	.word	sBattleAnimScriptPtr
.Lfe32:
	.size	 ScriptCmd_monbg_22,.Lfe32-ScriptCmd_monbg_22
	.align	2, 0
	.type	 ScriptCmd_clearmonbg_23,function
	.thumb_func
ScriptCmd_clearmonbg_23:
	push	{r4, r5, r6, lr}
	ldr	r0, .L387
	ldr	r2, [r0]
	add	r1, r2, #0x1
	str	r1, [r0]
	ldrb	r5, [r2, #0x1]
	cmp	r5, #0
	bne	.L376	@cond_branch
	mov	r5, #0x2
	b	.L385
.L388:
	.align	2, 0
.L387:
	.word	sBattleAnimScriptPtr
.L376:
	cmp	r5, #0x1
	bne	.L377	@cond_branch
	mov	r5, #0x3
.L377:
	cmp	r5, #0
	beq	.L380	@cond_branch
.L385:
	cmp	r5, #0x2
	bne	.L379	@cond_branch
.L380:
	ldr	r0, .L389
	b	.L386
.L390:
	.align	2, 0
.L389:
	.word	gBattleAnimAttacker
.L379:
	ldr	r0, .L391
.L386:
	ldrb	r6, [r0]
	add	r0, r6, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L382	@cond_branch
	ldr	r2, .L391+0x4
	ldr	r0, .L391+0x8
	add	r0, r6, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L382:
	cmp	r5, #0x1
	bls	.L383	@cond_branch
	mov	r0, #0x2
	add	r4, r6, #0
	eor	r4, r4, r0
	add	r0, r4, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L383	@cond_branch
	ldr	r2, .L391+0x4
	ldr	r0, .L391+0x8
	add	r0, r4, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	b	.L384
.L392:
	.align	2, 0
.L391:
	.word	gBattleAnimTarget
	.word	gSprites
	.word	gBattlerSpriteIds
.L383:
	mov	r5, #0x0
.L384:
	ldr	r0, .L393
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L393+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r5, [r1, #0x8]
	strh	r6, [r1, #0xc]
	ldr	r1, .L393+0x8
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L394:
	.align	2, 0
.L393:
	.word	sub_80A4BB0
	.word	gTasks
	.word	sBattleAnimScriptPtr
.Lfe33:
	.size	 ScriptCmd_clearmonbg_23,.Lfe33-ScriptCmd_clearmonbg_23
	.align	2, 0
	.type	 sub_80A4BB0,function
	.thumb_func
sub_80A4BB0:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L402
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L396	@cond_branch
	ldrb	r4, [r1, #0xc]
	add	r0, r4, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L398	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L397	@cond_branch
.L398:
	mov	r5, #0x0
	b	.L399
.L403:
	.align	2, 0
.L402:
	.word	gTasks
.L397:
	mov	r5, #0x1
.L399:
	add	r0, r4, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L400	@cond_branch
	add	r0, r5, #0
	bl	sub_80A477C
.L400:
	ldr	r0, .L404
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	ble	.L401	@cond_branch
	mov	r0, #0x2
	eor	r4, r4, r0
	add	r0, r4, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L401	@cond_branch
	mov	r0, #0x1
	eor	r5, r5, r0
	add	r0, r5, #0
	bl	sub_80A477C
.L401:
	add	r0, r6, #0
	bl	DestroyTask
.L396:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L405:
	.align	2, 0
.L404:
	.word	gTasks
.Lfe34:
	.size	 sub_80A4BB0,.Lfe34-sub_80A4BB0
	.align	2, 0
	.type	 ScriptCmd_setalpha,function
	.thumb_func
ScriptCmd_setalpha:
	push	{r4, r5, lr}
	ldr	r2, .L407
	ldr	r0, [r2]
	add	r1, r0, #0x1
	str	r1, [r2]
	ldrb	r5, [r0, #0x1]
	add	r0, r1, #0x1
	str	r0, [r2]
	ldrb	r4, [r1, #0x1]
	lsl	r4, r4, #0x8
	add	r0, r0, #0x1
	str	r0, [r2]
	mov	r1, #0xfd
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	orr	r5, r5, r4
	mov	r0, #0x52
	add	r1, r5, #0
	bl	SetGpuReg
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L408:
	.align	2, 0
.L407:
	.word	sBattleAnimScriptPtr
.Lfe35:
	.size	 ScriptCmd_setalpha,.Lfe35-ScriptCmd_setalpha
	.align	2, 0
	.type	 ScriptCmd_setbldcnt,function
	.thumb_func
ScriptCmd_setbldcnt:
	push	{lr}
	ldr	r3, .L410
	ldr	r0, [r3]
	add	r2, r0, #0x1
	str	r2, [r3]
	ldrb	r1, [r0, #0x1]
	add	r0, r2, #0x1
	str	r0, [r3]
	ldrb	r2, [r2, #0x1]
	lsl	r2, r2, #0x8
	add	r0, r0, #0x1
	str	r0, [r3]
	orr	r1, r1, r2
	mov	r0, #0x50
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L411:
	.align	2, 0
.L410:
	.word	sBattleAnimScriptPtr
.Lfe36:
	.size	 ScriptCmd_setbldcnt,.Lfe36-ScriptCmd_setbldcnt
	.align	2, 0
	.type	 ScriptCmd_blendoff,function
	.thumb_func
ScriptCmd_blendoff:
	push	{lr}
	ldr	r1, .L413
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L414:
	.align	2, 0
.L413:
	.word	sBattleAnimScriptPtr
.Lfe37:
	.size	 ScriptCmd_blendoff,.Lfe37-ScriptCmd_blendoff
	.align	2, 0
	.type	 ScriptCmd_call,function
	.thumb_func
ScriptCmd_call:
	push	{r4, lr}
	ldr	r4, .L416
	ldr	r1, [r4]
	add	r3, r1, #0x1
	str	r3, [r4]
	ldr	r2, .L416+0x4
	add	r0, r1, #0x5
	str	r0, [r2]
	ldrb	r1, [r1, #0x1]
	ldrb	r0, [r3, #0x1]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	ldrb	r0, [r3, #0x2]
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	ldrb	r0, [r3, #0x3]
	lsl	r0, r0, #0x18
	add	r1, r1, r0
	str	r1, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L417:
	.align	2, 0
.L416:
	.word	sBattleAnimScriptPtr
	.word	sBattleAnimScriptRetAddr
.Lfe38:
	.size	 ScriptCmd_call,.Lfe38-ScriptCmd_call
	.align	2, 0
	.type	 ScriptCmd_return,function
	.thumb_func
ScriptCmd_return:
	ldr	r0, .L419
	ldr	r1, .L419+0x4
	ldr	r1, [r1]
	str	r1, [r0]
	bx	lr
.L420:
	.align	2, 0
.L419:
	.word	sBattleAnimScriptPtr
	.word	sBattleAnimScriptRetAddr
.Lfe39:
	.size	 ScriptCmd_return,.Lfe39-ScriptCmd_return
	.align	2, 0
	.type	 ScriptCmd_setarg,function
	.thumb_func
ScriptCmd_setarg:
	push	{r4, r5, lr}
	ldr	r5, .L422
	ldr	r1, [r5]
	add	r0, r1, #0x1
	str	r0, [r5]
	ldrb	r2, [r1, #0x1]
	add	r3, r0, #0x1
	str	r3, [r5]
	ldrb	r4, [r0, #0x1]
	ldrb	r0, [r3, #0x1]
	lsl	r0, r0, #0x8
	orr	r4, r4, r0
	add	r1, r1, #0x4
	str	r1, [r5]
	ldr	r0, .L422+0x4
	lsl	r2, r2, #0x1
	add	r2, r2, r0
	strh	r4, [r2]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L423:
	.align	2, 0
.L422:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimArgs
.Lfe40:
	.size	 ScriptCmd_setarg,.Lfe40-ScriptCmd_setarg
	.align	2, 0
	.type	 ScriptCmd_choosetwoturnanim,function
	.thumb_func
ScriptCmd_choosetwoturnanim:
	push	{lr}
	ldr	r3, .L426
	ldr	r2, [r3]
	add	r0, r2, #0x1
	str	r0, [r3]
	ldr	r0, .L426+0x4
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L425	@cond_branch
	add	r0, r2, #0x5
	str	r0, [r3]
.L425:
	ldr	r2, [r3]
	ldrb	r1, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	ldrb	r0, [r2, #0x2]
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	ldrb	r0, [r2, #0x3]
	lsl	r0, r0, #0x18
	add	r1, r1, r0
	str	r1, [r3]
	pop	{r0}
	bx	r0
.L427:
	.align	2, 0
.L426:
	.word	sBattleAnimScriptPtr
	.word	gAnimMoveTurn
.Lfe41:
	.size	 ScriptCmd_choosetwoturnanim,.Lfe41-ScriptCmd_choosetwoturnanim
	.align	2, 0
	.type	 ScriptCmd_jumpifmoveturn,function
	.thumb_func
ScriptCmd_jumpifmoveturn:
	push	{r4, r5, lr}
	ldr	r5, .L431
	ldr	r4, [r5]
	add	r2, r4, #0x1
	str	r2, [r5]
	ldrb	r1, [r4, #0x1]
	add	r3, r2, #0x1
	str	r3, [r5]
	ldr	r0, .L431+0x4
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L429	@cond_branch
	ldrb	r1, [r2, #0x1]
	ldrb	r0, [r3, #0x1]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	ldrb	r0, [r3, #0x2]
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	ldrb	r0, [r3, #0x3]
	lsl	r0, r0, #0x18
	add	r1, r1, r0
	str	r1, [r5]
	b	.L430
.L432:
	.align	2, 0
.L431:
	.word	sBattleAnimScriptPtr
	.word	gAnimMoveTurn
.L429:
	add	r0, r4, #0x6
	str	r0, [r5]
.L430:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 ScriptCmd_jumpifmoveturn,.Lfe42-ScriptCmd_jumpifmoveturn
	.align	2, 0
	.type	 ScriptCmd_goto,function
	.thumb_func
ScriptCmd_goto:
	ldr	r3, .L434
	ldr	r0, [r3]
	add	r2, r0, #0x1
	str	r2, [r3]
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	ldrb	r0, [r2, #0x2]
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	ldrb	r0, [r2, #0x3]
	lsl	r0, r0, #0x18
	add	r1, r1, r0
	str	r1, [r3]
	bx	lr
.L435:
	.align	2, 0
.L434:
	.word	sBattleAnimScriptPtr
.Lfe43:
	.size	 ScriptCmd_goto,.Lfe43-ScriptCmd_goto
	.align	2, 0
	.globl	IsContest
	.type	 IsContest,function
	.thumb_func
IsContest:
	push	{lr}
	ldr	r0, .L440
	ldr	r1, .L440+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L437	@cond_branch
	mov	r0, #0x0
	b	.L439
.L441:
	.align	2, 0
.L440:
	.word	gMain
	.word	0x439
.L437:
	mov	r0, #0x1
.L439:
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 IsContest,.Lfe44-IsContest
	.align	2, 0
	.type	 ScriptCmd_fadetobg,function
	.thumb_func
ScriptCmd_fadetobg:
	push	{r4, lr}
	ldr	r1, .L443
	ldr	r2, [r1]
	add	r0, r2, #0x1
	str	r0, [r1]
	ldrb	r4, [r2, #0x1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r0, .L443+0x4
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L443+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	ldr	r1, .L443+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L444:
	.align	2, 0
.L443:
	.word	sBattleAnimScriptPtr
	.word	Task_FadeToBg
	.word	gTasks
	.word	sAnimBackgroundFadeState
.Lfe45:
	.size	 ScriptCmd_fadetobg,.Lfe45-ScriptCmd_fadetobg
	.align	2, 0
	.type	 ScriptCmd_fadetobgfromset,function
	.thumb_func
ScriptCmd_fadetobgfromset:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r2, .L450
	ldr	r1, [r2]
	add	r0, r1, #0x1
	str	r0, [r2]
	ldrb	r3, [r1, #0x1]
	mov	r8, r3
	ldrb	r7, [r0, #0x1]
	ldrb	r6, [r0, #0x2]
	add	r1, r1, #0x4
	str	r1, [r2]
	ldr	r0, .L450+0x4
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L446	@cond_branch
	ldr	r1, .L450+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r6, [r0, #0x8]
	b	.L447
.L451:
	.align	2, 0
.L450:
	.word	sBattleAnimScriptPtr
	.word	Task_FadeToBg
	.word	gTasks
.L446:
	ldr	r0, .L452
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L448	@cond_branch
	ldr	r1, .L452+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r7, [r0, #0x8]
	b	.L447
.L453:
	.align	2, 0
.L452:
	.word	gBattleAnimTarget
	.word	gTasks
.L448:
	ldr	r1, .L454
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, r8
	strh	r1, [r0, #0x8]
.L447:
	ldr	r1, .L454+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L455:
	.align	2, 0
.L454:
	.word	gTasks
	.word	sAnimBackgroundFadeState
.Lfe46:
	.size	 ScriptCmd_fadetobgfromset,.Lfe46-ScriptCmd_fadetobgfromset
	.align	2, 0
	.type	 Task_FadeToBg,function
	.thumb_func
Task_FadeToBg:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L466
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r6, [r4, #0x1c]
	mov	r0, #0x1c
	ldrsh	r3, [r4, r0]
	add	r7, r1, #0
	cmp	r3, #0
	bne	.L457	@cond_branch
	str	r3, [sp]
	mov	r0, #0xe8
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginHardwarePaletteFade
	ldrh	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1c]
	b	.L456
.L467:
	.align	2, 0
.L466:
	.word	gTasks
.L457:
	ldr	r2, .L468
	ldrb	r1, [r2, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L456	@cond_branch
	cmp	r3, #0x1
	bne	.L459	@cond_branch
	add	r0, r6, #0x1
	strh	r0, [r4, #0x1c]
	ldr	r1, .L468+0x4
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L460
.L469:
	.align	2, 0
.L468:
	.word	gPaletteFade
	.word	sAnimBackgroundFadeState
.L459:
	cmp	r3, #0x2
	bne	.L460	@cond_branch
	ldrh	r0, [r4, #0x8]
	lsl	r2, r0, #0x10
	asr	r1, r2, #0x10
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	bne	.L462	@cond_branch
	bl	LoadDefaultBg
	b	.L463
.L462:
	lsr	r0, r2, #0x10
	bl	LoadMoveBg
.L463:
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xe8
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginHardwarePaletteFade
	ldr	r1, .L470
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x1c]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x1c]
	b	.L456
.L471:
	.align	2, 0
.L470:
	.word	gTasks
.L460:
	ldrb	r1, [r2, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L456	@cond_branch
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r7
	mov	r1, #0x1c
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x3
	bne	.L456	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	ldr	r0, .L472
	strb	r4, [r0]
.L456:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L473:
	.align	2, 0
.L472:
	.word	sAnimBackgroundFadeState
.Lfe47:
	.size	 Task_FadeToBg,.Lfe47-Task_FadeToBg
	.align	2, 0
	.globl	LoadMoveBg
	.type	 LoadMoveBg,function
	.thumb_func
LoadMoveBg:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L475	@cond_branch
	ldr	r6, .L477
	lsl	r4, r7, #0x1
	add	r4, r4, r7
	lsl	r4, r4, #0x2
	add	r0, r6, #0
	add	r0, r0, #0x8
	add	r0, r4, r0
	ldr	r0, [r0]
	ldr	r5, .L477+0x4
	add	r1, r5, #0
	bl	LZDecompressWram
	bl	GetBattleBgPaletteNum
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r5, #0
	mov	r3, #0x0
	bl	sub_80A4720
	ldr	r1, .L477+0x8
	ldr	r0, .L477+0xc
	str	r5, [r0]
	str	r1, [r0, #0x4]
	ldr	r1, .L477+0x10
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	add	r0, r4, r6
	ldr	r0, [r0]
	ldr	r1, .L477+0x14
	bl	LZDecompressVram
	add	r6, r6, #0x4
	add	r4, r4, r6
	ldr	r4, [r4]
	bl	GetBattleBgPaletteNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x14
	add	r0, r4, #0
	mov	r2, #0x20
	bl	LoadCompressedPalette
	b	.L476
.L478:
	.align	2, 0
.L477:
	.word	gBattleAnimBackgroundTable
	.word	gDecompressionBuffer
	.word	0x600d000
	.word	0x40000d4
	.word	-0x7bfffe00
	.word	0x6002000
.L475:
	ldr	r5, .L479
	lsl	r4, r7, #0x1
	add	r4, r4, r7
	lsl	r4, r4, #0x2
	add	r0, r5, #0
	add	r0, r0, #0x8
	add	r0, r4, r0
	ldr	r0, [r0]
	ldr	r1, .L479+0x4
	bl	LZDecompressVram
	add	r0, r4, r5
	ldr	r0, [r0]
	ldr	r1, .L479+0x8
	bl	LZDecompressVram
	add	r5, r5, #0x4
	add	r4, r4, r5
	ldr	r0, [r4]
	mov	r1, #0x20
	mov	r2, #0x20
	bl	LoadCompressedPalette
.L476:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L480:
	.align	2, 0
.L479:
	.word	gBattleAnimBackgroundTable
	.word	0x600d000
	.word	0x6008000
.Lfe48:
	.size	 LoadMoveBg,.Lfe48-LoadMoveBg
	.align	2, 0
	.type	 LoadDefaultBg,function
	.thumb_func
LoadDefaultBg:
	push	{lr}
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L482	@cond_branch
	bl	LoadContestBgAfterMoveAnim
	b	.L483
.L482:
	ldr	r0, .L486
	ldr	r0, [r0]
	mov	r1, #0xf0
	lsl	r1, r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L484	@cond_branch
	bl	DrawTerrainTypeBattleBackground
	b	.L483
.L487:
	.align	2, 0
.L486:
	.word	gFieldStatuses
.L484:
	bl	DrawMainBattleBackground
.L483:
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 LoadDefaultBg,.Lfe49-LoadDefaultBg
	.align	2, 0
	.type	 ScriptCmd_restorebg,function
	.thumb_func
ScriptCmd_restorebg:
	push	{lr}
	ldr	r1, .L489
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r0, .L489+0x4
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L489+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L489+0xc
	strh	r0, [r1, #0x8]
	ldr	r1, .L489+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L490:
	.align	2, 0
.L489:
	.word	sBattleAnimScriptPtr
	.word	Task_FadeToBg
	.word	gTasks
	.word	0xffff
	.word	sAnimBackgroundFadeState
.Lfe50:
	.size	 ScriptCmd_restorebg,.Lfe50-ScriptCmd_restorebg
	.align	2, 0
	.type	 ScriptCmd_waitbgfadeout,function
	.thumb_func
ScriptCmd_waitbgfadeout:
	push	{lr}
	ldr	r0, .L495
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L492	@cond_branch
	ldr	r1, .L495+0x4
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r1, .L495+0x8
	mov	r0, #0x0
	b	.L494
.L496:
	.align	2, 0
.L495:
	.word	sAnimBackgroundFadeState
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
.L492:
	ldr	r1, .L497
	mov	r0, #0x1
.L494:
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L498:
	.align	2, 0
.L497:
	.word	gAnimFramesToWait
.Lfe51:
	.size	 ScriptCmd_waitbgfadeout,.Lfe51-ScriptCmd_waitbgfadeout
	.align	2, 0
	.type	 ScriptCmd_waitbgfadein,function
	.thumb_func
ScriptCmd_waitbgfadein:
	push	{lr}
	ldr	r0, .L502
	ldrb	r2, [r0]
	cmp	r2, #0
	bne	.L500	@cond_branch
	ldr	r0, .L502+0x4
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	ldr	r0, .L502+0x8
	strb	r2, [r0]
	b	.L501
.L503:
	.align	2, 0
.L502:
	.word	sAnimBackgroundFadeState
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
.L500:
	ldr	r1, .L504
	mov	r0, #0x1
	strb	r0, [r1]
.L501:
	pop	{r0}
	bx	r0
.L505:
	.align	2, 0
.L504:
	.word	gAnimFramesToWait
.Lfe52:
	.size	 ScriptCmd_waitbgfadein,.Lfe52-ScriptCmd_waitbgfadein
	.align	2, 0
	.type	 ScriptCmd_changebg,function
	.thumb_func
ScriptCmd_changebg:
	push	{r4, lr}
	ldr	r4, .L507
	ldr	r1, [r4]
	add	r0, r1, #0x1
	str	r0, [r4]
	ldrb	r0, [r1, #0x1]
	bl	LoadMoveBg
	ldr	r0, [r4]
	add	r0, r0, #0x1
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L508:
	.align	2, 0
.L507:
	.word	sBattleAnimScriptPtr
.Lfe53:
	.size	 ScriptCmd_changebg,.Lfe53-ScriptCmd_changebg
	.align	2, 0
	.globl	BattleAnimAdjustPanning
	.type	 BattleAnimAdjustPanning,function
	.thumb_func
BattleAnimAdjustPanning:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L510	@cond_branch
	ldr	r0, .L531
	ldr	r1, [r0]
	ldr	r0, .L531+0x4
	ldrb	r2, [r0]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L510	@cond_branch
	add	r0, r2, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	mov	r4, #0xc0
	cmp	r0, #0
	beq	.L513	@cond_branch
	mov	r4, #0x3f
	b	.L513
.L532:
	.align	2, 0
.L531:
	.word	gBattleSpritesDataPtr
	.word	gBattleAnimAttacker
.L510:
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L514	@cond_branch
	ldr	r0, .L533
	ldr	r1, .L533+0x4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L524	@cond_branch
	cmp	r0, #0x2
	bne	.L524	@cond_branch
	cmp	r4, #0x3f
	beq	.L527	@cond_branch
	b	.L524
.L534:
	.align	2, 0
.L533:
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
.L514:
	ldr	r0, .L535
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L518	@cond_branch
	ldr	r0, .L535+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L513	@cond_branch
	lsl	r0, r4, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x3f
	bne	.L520	@cond_branch
	mov	r4, #0xc0
	b	.L513
.L536:
	.align	2, 0
.L535:
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
.L520:
	mov	r0, #0x40
	neg	r0, r0
	cmp	r1, r0
	beq	.L513	@cond_branch
	neg	r0, r1
	lsl	r0, r0, #0x18
	b	.L530
.L518:
	ldr	r0, .L537
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L524	@cond_branch
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x40
	neg	r1, r1
	cmp	r0, r1
	bne	.L513	@cond_branch
	mov	r4, #0x3f
	b	.L513
.L538:
	.align	2, 0
.L537:
	.word	gBattleAnimTarget
.L524:
	lsl	r0, r4, #0x18
	neg	r0, r0
.L530:
	lsr	r4, r0, #0x18
.L513:
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x3f
	ble	.L527	@cond_branch
	mov	r4, #0x3f
	b	.L528
.L527:
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x40
	neg	r1, r1
	cmp	r0, r1
	bge	.L528	@cond_branch
	mov	r4, #0xc0
.L528:
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 BattleAnimAdjustPanning,.Lfe54-BattleAnimAdjustPanning
	.align	2, 0
	.globl	BattleAnimAdjustPanning2
	.type	 BattleAnimAdjustPanning2,function
	.thumb_func
BattleAnimAdjustPanning2:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L540	@cond_branch
	ldr	r0, .L546
	ldr	r1, [r0]
	ldr	r0, .L546+0x4
	ldrb	r2, [r0]
	ldr	r1, [r1, #0x4]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L540	@cond_branch
	add	r0, r2, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	mov	r4, #0xc0
	cmp	r0, #0
	beq	.L543	@cond_branch
	mov	r4, #0x3f
	b	.L543
.L547:
	.align	2, 0
.L546:
	.word	gBattleSpritesDataPtr
	.word	gBattleAnimAttacker
.L540:
	ldr	r0, .L548
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L545	@cond_branch
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L543	@cond_branch
.L545:
	lsl	r0, r4, #0x18
	neg	r0, r0
	lsr	r4, r0, #0x18
.L543:
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L549:
	.align	2, 0
.L548:
	.word	gBattleAnimAttacker
.Lfe55:
	.size	 BattleAnimAdjustPanning2,.Lfe55-BattleAnimAdjustPanning2
	.align	2, 0
	.globl	KeepPanInRange
	.type	 KeepPanInRange,function
	.thumb_func
KeepPanInRange:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0x3f
	ble	.L551	@cond_branch
	mov	r1, #0x3f
	b	.L552
.L551:
	mov	r0, #0x40
	neg	r0, r0
	cmp	r2, r0
	bge	.L552	@cond_branch
	ldr	r1, .L554
.L552:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L555:
	.align	2, 0
.L554:
	.word	0xffc0
.Lfe56:
	.size	 KeepPanInRange,.Lfe56-KeepPanInRange
	.align	2, 0
	.globl	CalculatePanIncrement
	.type	 CalculatePanIncrement,function
	.thumb_func
CalculatePanIncrement:
	push	{lr}
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	add	r3, r2, #0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r0, r1
	bge	.L557	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L563	@cond_branch
	b	.L561
.L557:
	cmp	r0, r1
	ble	.L560	@cond_branch
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L561	@cond_branch
	neg	r0, r0
.L561:
	neg	r0, r0
.L563:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L559
.L560:
	mov	r0, #0x0
.L559:
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 CalculatePanIncrement,.Lfe57-CalculatePanIncrement
	.align	2, 0
	.type	 ScriptCmd_playsewithpan,function
	.thumb_func
ScriptCmd_playsewithpan:
	push	{r4, r5, lr}
	ldr	r5, .L565
	ldr	r0, [r5]
	add	r1, r0, #0x1
	str	r1, [r5]
	ldrb	r4, [r0, #0x1]
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	orr	r4, r4, r0
	mov	r0, #0x2
	ldrsb	r0, [r1, r0]
	bl	BattleAnimAdjustPanning
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	add	r0, r4, #0
	bl	PlaySE12WithPanning
	ldr	r0, [r5]
	add	r0, r0, #0x3
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L566:
	.align	2, 0
.L565:
	.word	sBattleAnimScriptPtr
.Lfe58:
	.size	 ScriptCmd_playsewithpan,.Lfe58-ScriptCmd_playsewithpan
	.align	2, 0
	.type	 ScriptCmd_setpan,function
	.thumb_func
ScriptCmd_setpan:
	push	{r4, lr}
	ldr	r4, .L568
	ldr	r1, [r4]
	add	r0, r1, #0x1
	str	r0, [r4]
	mov	r0, #0x1
	ldrsb	r0, [r1, r0]
	bl	BattleAnimAdjustPanning
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	bl	SE12PanpotControl
	ldr	r0, [r4]
	add	r0, r0, #0x1
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L569:
	.align	2, 0
.L568:
	.word	sBattleAnimScriptPtr
.Lfe59:
	.size	 ScriptCmd_setpan,.Lfe59-ScriptCmd_setpan
	.align	2, 0
	.type	 ScriptCmd_panse_1B,function
	.thumb_func
ScriptCmd_panse_1B:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L571
	mov	sl, r0
	ldr	r0, [r0]
	add	r1, r0, #0x1
	mov	r2, sl
	str	r1, [r2]
	ldrb	r0, [r0, #0x1]
	mov	r9, r0
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	mov	r2, r9
	orr	r2, r2, r0
	mov	r9, r2
	ldrb	r4, [r1, #0x3]
	ldrb	r6, [r1, #0x4]
	ldrb	r7, [r1, #0x5]
	mov	r0, #0x2
	ldrsb	r0, [r1, r0]
	bl	BattleAnimAdjustPanning
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r0, r4, #0
	bl	BattleAnimAdjustPanning
	mov	r8, r0
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	mov	r0, r8
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r8, r0
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	add	r0, r5, #0
	mov	r1, r8
	add	r2, r6, #0
	bl	CalculatePanIncrement
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L571+0x4
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L571+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r5, [r1, #0x8]
	mov	r2, r8
	strh	r2, [r1, #0xa]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r1, #0xc]
	strh	r7, [r1, #0xe]
	strh	r5, [r1, #0x10]
	mov	r0, r9
	add	r1, r5, #0
	bl	PlaySE12WithPanning
	ldr	r1, .L571+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r1, sl
	ldr	r0, [r1]
	add	r0, r0, #0x6
	str	r0, [r1]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L572:
	.align	2, 0
.L571:
	.word	sBattleAnimScriptPtr
	.word	Task_PanFromInitialToTarget
	.word	gTasks
	.word	gAnimSoundTaskCount
.Lfe60:
	.size	 ScriptCmd_panse_1B,.Lfe60-ScriptCmd_panse_1B
	.align	2, 0
	.type	 Task_PanFromInitialToTarget,function
	.thumb_func
Task_PanFromInitialToTarget:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r7, #0x0
	ldr	r1, .L583
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrh	r0, [r2, #0x18]
	add	r1, r0, #0x1
	strh	r1, [r2, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0xe
	ldrsh	r1, [r2, r3]
	cmp	r0, r1
	blt	.L574	@cond_branch
	strh	r7, [r2, #0x18]
	ldrh	r6, [r2, #0x8]
	ldrh	r3, [r2, #0xa]
	mov	r4, #0x10
	ldrsh	r0, [r2, r4]
	mov	r4, #0xc
	ldrsh	r1, [r2, r4]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	strh	r4, [r2, #0x10]
	cmp	r1, #0
	bne	.L575	@cond_branch
	lsl	r2, r3, #0x10
	b	.L582
.L584:
	.align	2, 0
.L583:
	.word	gTasks
.L575:
	lsl	r1, r6, #0x10
	lsl	r0, r3, #0x10
	asr	r3, r0, #0x10
	add	r2, r0, #0
	cmp	r1, r2
	bge	.L577	@cond_branch
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r3
	blt	.L576	@cond_branch
	b	.L582
.L577:
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r3
	bgt	.L576	@cond_branch
	mov	r7, #0x1
.L576:
	cmp	r7, #0
	beq	.L581	@cond_branch
.L582:
	lsr	r4, r2, #0x10
	add	r0, r5, #0
	bl	DestroyTask
	ldr	r1, .L585
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L581:
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	bl	SE12PanpotControl
.L574:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L586:
	.align	2, 0
.L585:
	.word	gAnimSoundTaskCount
.Lfe61:
	.size	 Task_PanFromInitialToTarget,.Lfe61-Task_PanFromInitialToTarget
	.align	2, 0
	.type	 ScriptCmd_panse_26,function
	.thumb_func
ScriptCmd_panse_26:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	ldr	r0, .L588
	mov	r9, r0
	ldr	r0, [r0]
	add	r1, r0, #0x1
	mov	r2, r9
	str	r1, [r2]
	ldrb	r0, [r0, #0x1]
	mov	r8, r0
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	mov	r2, r8
	orr	r2, r2, r0
	mov	r8, r2
	ldrb	r4, [r1, #0x2]
	ldrb	r5, [r1, #0x3]
	ldrb	r6, [r1, #0x4]
	ldrb	r1, [r1, #0x5]
	mov	sl, r1
	ldr	r0, .L588+0x4
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L588+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r1, #0x8]
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	strh	r5, [r1, #0xa]
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	strh	r6, [r1, #0xc]
	mov	r0, sl
	strh	r0, [r1, #0xe]
	strh	r4, [r1, #0x10]
	mov	r0, r8
	add	r1, r4, #0
	bl	PlaySE12WithPanning
	ldr	r1, .L588+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r1, r9
	ldr	r0, [r1]
	add	r0, r0, #0x6
	str	r0, [r1]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L589:
	.align	2, 0
.L588:
	.word	sBattleAnimScriptPtr
	.word	Task_PanFromInitialToTarget
	.word	gTasks
	.word	gAnimSoundTaskCount
.Lfe62:
	.size	 ScriptCmd_panse_26,.Lfe62-ScriptCmd_panse_26
	.align	2, 0
	.type	 ScriptCmd_panse_27,function
	.thumb_func
ScriptCmd_panse_27:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L591
	mov	sl, r0
	ldr	r0, [r0]
	add	r1, r0, #0x1
	mov	r2, sl
	str	r1, [r2]
	ldrb	r0, [r0, #0x1]
	mov	r9, r0
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	mov	r2, r9
	orr	r2, r2, r0
	mov	r9, r2
	ldrb	r4, [r1, #0x3]
	ldrb	r0, [r1, #0x4]
	mov	r8, r0
	ldrb	r7, [r1, #0x5]
	mov	r0, #0x2
	ldrsb	r0, [r1, r0]
	bl	BattleAnimAdjustPanning2
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r0, r4, #0
	bl	BattleAnimAdjustPanning2
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r1, r8
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	mov	r8, r1
	mov	r0, r8
	bl	BattleAnimAdjustPanning2
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L591+0x4
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L591+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	strh	r6, [r1, #0x8]
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	strh	r5, [r1, #0xa]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r1, #0xc]
	strh	r7, [r1, #0xe]
	strh	r6, [r1, #0x10]
	mov	r0, r9
	add	r1, r6, #0
	bl	PlaySE12WithPanning
	ldr	r1, .L591+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r2, sl
	ldr	r0, [r2]
	add	r0, r0, #0x6
	str	r0, [r2]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L592:
	.align	2, 0
.L591:
	.word	sBattleAnimScriptPtr
	.word	Task_PanFromInitialToTarget
	.word	gTasks
	.word	gAnimSoundTaskCount
.Lfe63:
	.size	 ScriptCmd_panse_27,.Lfe63-ScriptCmd_panse_27
	.align	2, 0
	.type	 ScriptCmd_loopsewithpan,function
	.thumb_func
ScriptCmd_loopsewithpan:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	ldr	r6, .L594
	ldr	r0, [r6]
	add	r1, r0, #0x1
	str	r1, [r6]
	ldrb	r5, [r0, #0x1]
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	orr	r5, r5, r0
	ldrb	r0, [r1, #0x3]
	mov	r8, r0
	ldrb	r2, [r1, #0x4]
	mov	r9, r2
	mov	r0, #0x2
	ldrsb	r0, [r1, r0]
	bl	BattleAnimAdjustPanning
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L594+0x4
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L594+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r5, [r1, #0x8]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r1, #0xa]
	mov	r2, r8
	strh	r2, [r1, #0xc]
	mov	r2, r9
	strh	r2, [r1, #0xe]
	mov	r2, r8
	strh	r2, [r1, #0x18]
	ldr	r1, [r1]
	bl	_call_via_r1
	ldr	r1, .L594+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x5
	str	r0, [r6]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L595:
	.align	2, 0
.L594:
	.word	sBattleAnimScriptPtr
	.word	Task_LoopAndPlaySE
	.word	gTasks
	.word	gAnimSoundTaskCount
.Lfe64:
	.size	 ScriptCmd_loopsewithpan,.Lfe64-ScriptCmd_loopsewithpan
	.align	2, 0
	.type	 Task_LoopAndPlaySE,function
	.thumb_func
Task_LoopAndPlaySE:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L599
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrh	r0, [r2, #0x18]
	add	r1, r0, #0x1
	strh	r1, [r2, #0x18]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0xc
	ldrsh	r1, [r2, r3]
	cmp	r0, r1
	blt	.L597	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0x18]
	ldrh	r0, [r2, #0x8]
	ldrb	r1, [r2, #0xa]
	ldrh	r4, [r2, #0xe]
	sub	r4, r4, #0x1
	strh	r4, [r2, #0xe]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	bl	PlaySE12WithPanning
	cmp	r4, #0
	bne	.L597	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	ldr	r1, .L599+0x4
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L597:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L600:
	.align	2, 0
.L599:
	.word	gTasks
	.word	gAnimSoundTaskCount
.Lfe65:
	.size	 Task_LoopAndPlaySE,.Lfe65-Task_LoopAndPlaySE
	.align	2, 0
	.type	 ScriptCmd_waitplaysewithpan,function
	.thumb_func
ScriptCmd_waitplaysewithpan:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r6, .L602
	ldr	r0, [r6]
	add	r1, r0, #0x1
	str	r1, [r6]
	ldrb	r5, [r0, #0x1]
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x8
	orr	r5, r5, r0
	ldrb	r0, [r1, #0x3]
	mov	r8, r0
	mov	r0, #0x2
	ldrsb	r0, [r1, r0]
	bl	BattleAnimAdjustPanning
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L602+0x4
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L602+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r5, [r1, #0x8]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r1, #0xa]
	mov	r0, r8
	strh	r0, [r1, #0xc]
	ldr	r1, .L602+0xc
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x4
	str	r0, [r6]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L603:
	.align	2, 0
.L602:
	.word	sBattleAnimScriptPtr
	.word	Task_WaitAndPlaySE
	.word	gTasks
	.word	gAnimSoundTaskCount
.Lfe66:
	.size	 ScriptCmd_waitplaysewithpan,.Lfe66-ScriptCmd_waitplaysewithpan
	.align	2, 0
	.type	 Task_WaitAndPlaySE,function
	.thumb_func
Task_WaitAndPlaySE:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L606
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrh	r0, [r2, #0xc]
	sub	r1, r0, #0x1
	strh	r1, [r2, #0xc]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L605	@cond_branch
	ldrh	r0, [r2, #0x8]
	mov	r1, #0xa
	ldrsb	r1, [r2, r1]
	bl	PlaySE12WithPanning
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L606+0x4
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L605:
	pop	{r4}
	pop	{r0}
	bx	r0
.L607:
	.align	2, 0
.L606:
	.word	gTasks
	.word	gAnimSoundTaskCount
.Lfe67:
	.size	 Task_WaitAndPlaySE,.Lfe67-Task_WaitAndPlaySE
	.align	2, 0
	.type	 ScriptCmd_createsoundtask,function
	.thumb_func
ScriptCmd_createsoundtask:
	push	{r4, r5, r6, lr}
	ldr	r4, .L614
	ldr	r1, [r4]
	add	r3, r1, #0x1
	str	r3, [r4]
	ldrb	r2, [r1, #0x1]
	ldrb	r0, [r3, #0x1]
	lsl	r0, r0, #0x8
	add	r2, r2, r0
	ldrb	r0, [r3, #0x2]
	lsl	r0, r0, #0x10
	add	r2, r2, r0
	ldrb	r0, [r3, #0x3]
	lsl	r0, r0, #0x18
	add	r6, r2, r0
	add	r0, r1, #0x5
	str	r0, [r4]
	ldrb	r0, [r1, #0x5]
	add	r1, r1, #0x6
	str	r1, [r4]
	cmp	r0, #0
	beq	.L610	@cond_branch
	add	r5, r4, #0
	ldr	r4, .L614+0x4
	add	r3, r0, #0
.L612:
	ldr	r2, [r5]
	ldrb	r1, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	strh	r1, [r4]
	add	r2, r2, #0x2
	str	r2, [r5]
	add	r4, r4, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L612	@cond_branch
.L610:
	add	r0, r6, #0
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r6
	ldr	r1, .L614+0x8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L615:
	.align	2, 0
.L614:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimArgs
	.word	gAnimSoundTaskCount
.Lfe68:
	.size	 ScriptCmd_createsoundtask,.Lfe68-ScriptCmd_createsoundtask
	.align	2, 0
	.type	 ScriptCmd_waitsound,function
	.thumb_func
ScriptCmd_waitsound:
	push	{r4, r5, lr}
	ldr	r0, .L623
	ldrb	r5, [r0]
	cmp	r5, #0
	bne	.L617	@cond_branch
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L619	@cond_branch
	ldr	r4, .L623+0x4
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x5a
	bls	.L620	@cond_branch
	ldr	r0, .L623+0x8
	bl	m4aMPlayStop
	ldr	r0, .L623+0xc
	bl	m4aMPlayStop
	strh	r5, [r4]
	b	.L618
.L624:
	.align	2, 0
.L623:
	.word	gAnimSoundTaskCount
	.word	sSoundAnimFramesToWait
	.word	gMPlayInfo_SE1
	.word	gMPlayInfo_SE2
.L617:
	ldr	r1, .L625
	mov	r0, #0x0
	strh	r0, [r1]
.L620:
	ldr	r1, .L625+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L618
.L626:
	.align	2, 0
.L625:
	.word	sSoundAnimFramesToWait
	.word	gAnimFramesToWait
.L619:
	ldr	r0, .L627
	mov	r2, #0x0
	strh	r1, [r0]
	ldr	r1, .L627+0x4
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r0, .L627+0x8
	strb	r2, [r0]
.L618:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L628:
	.align	2, 0
.L627:
	.word	sSoundAnimFramesToWait
	.word	sBattleAnimScriptPtr
	.word	gAnimFramesToWait
.Lfe69:
	.size	 ScriptCmd_waitsound,.Lfe69-ScriptCmd_waitsound
	.align	2, 0
	.type	 ScriptCmd_jumpargeq,function
	.thumb_func
ScriptCmd_jumpargeq:
	push	{r4, r5, r6, lr}
	ldr	r5, .L632
	ldr	r4, [r5]
	add	r3, r4, #0x1
	str	r3, [r5]
	ldrb	r2, [r4, #0x1]
	ldrb	r1, [r3, #0x1]
	ldrb	r0, [r3, #0x2]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	ldr	r0, .L632+0x4
	lsl	r2, r2, #0x1
	add	r2, r2, r0
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r6, #0x0
	ldrsh	r0, [r2, r6]
	cmp	r1, r0
	bne	.L630	@cond_branch
	ldrb	r1, [r3, #0x3]
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	ldrb	r0, [r3, #0x5]
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	ldrb	r0, [r3, #0x6]
	lsl	r0, r0, #0x18
	add	r1, r1, r0
	str	r1, [r5]
	b	.L631
.L633:
	.align	2, 0
.L632:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimArgs
.L630:
	add	r0, r4, #0
	add	r0, r0, #0x8
	str	r0, [r5]
.L631:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 ScriptCmd_jumpargeq,.Lfe70-ScriptCmd_jumpargeq
	.align	2, 0
	.type	 ScriptCmd_jumpifcontest,function
	.thumb_func
ScriptCmd_jumpifcontest:
	push	{r4, lr}
	ldr	r4, .L637
	ldr	r0, [r4]
	add	r0, r0, #0x1
	str	r0, [r4]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L635	@cond_branch
	ldr	r2, [r4]
	ldrb	r1, [r2]
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	ldrb	r0, [r2, #0x2]
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	ldrb	r0, [r2, #0x3]
	lsl	r0, r0, #0x18
	add	r1, r1, r0
	str	r1, [r4]
	b	.L636
.L638:
	.align	2, 0
.L637:
	.word	sBattleAnimScriptPtr
.L635:
	ldr	r0, [r4]
	add	r0, r0, #0x4
	str	r0, [r4]
.L636:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 ScriptCmd_jumpifcontest,.Lfe71-ScriptCmd_jumpifcontest
	.align	2, 0
	.type	 ScriptCmd_monbgprio_28,function
	.thumb_func
ScriptCmd_monbgprio_28:
	push	{r4, lr}
	ldr	r0, .L645
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x1]
	add	r1, r1, #0x2
	str	r1, [r0]
	cmp	r2, #0
	beq	.L640	@cond_branch
	ldr	r0, .L645+0x4
	b	.L644
.L646:
	.align	2, 0
.L645:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimTarget
.L640:
	ldr	r0, .L647
.L644:
	ldrb	r0, [r0]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L642	@cond_branch
	cmp	r4, #0
	beq	.L643	@cond_branch
	cmp	r4, #0x3
	bne	.L642	@cond_branch
.L643:
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x2
	mov	r1, #0x4
	mov	r2, #0x2
	bl	SetAnimBgAttribute
.L642:
	pop	{r4}
	pop	{r0}
	bx	r0
.L648:
	.align	2, 0
.L647:
	.word	gBattleAnimAttacker
.Lfe72:
	.size	 ScriptCmd_monbgprio_28,.Lfe72-ScriptCmd_monbgprio_28
	.align	2, 0
	.type	 ScriptCmd_monbgprio_29,function
	.thumb_func
ScriptCmd_monbgprio_29:
	push	{lr}
	ldr	r0, .L651
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L650	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x2
	mov	r1, #0x4
	mov	r2, #0x2
	bl	SetAnimBgAttribute
.L650:
	pop	{r0}
	bx	r0
.L652:
	.align	2, 0
.L651:
	.word	sBattleAnimScriptPtr
.Lfe73:
	.size	 ScriptCmd_monbgprio_29,.Lfe73-ScriptCmd_monbgprio_29
	.align	2, 0
	.type	 ScriptCmd_monbgprio_2A,function
	.thumb_func
ScriptCmd_monbgprio_2A:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L659
	ldr	r0, [r1]
	ldrb	r6, [r0, #0x1]
	add	r0, r0, #0x2
	str	r0, [r1]
	ldr	r7, .L659+0x4
	ldrb	r0, [r7]
	bl	GetBattlerSide
	add	r4, r0, #0
	ldr	r5, .L659+0x8
	ldrb	r0, [r5]
	bl	GetBattlerSide
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.L654	@cond_branch
	cmp	r6, #0
	beq	.L655	@cond_branch
	ldrb	r0, [r5]
	b	.L656
.L660:
	.align	2, 0
.L659:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
.L655:
	ldrb	r0, [r7]
.L656:
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L654	@cond_branch
	cmp	r4, #0
	beq	.L658	@cond_branch
	cmp	r4, #0x3
	bne	.L654	@cond_branch
.L658:
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x2
	mov	r1, #0x4
	mov	r2, #0x2
	bl	SetAnimBgAttribute
.L654:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 ScriptCmd_monbgprio_2A,.Lfe74-ScriptCmd_monbgprio_2A
	.align	2, 0
	.type	 ScriptCmd_invisible,function
	.thumb_func
ScriptCmd_invisible:
	push	{r4, lr}
	ldr	r4, .L663
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1]
	bl	GetAnimBattlerSpriteId
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	beq	.L662	@cond_branch
	ldr	r1, .L663+0x4
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L662:
	ldr	r0, [r4]
	add	r0, r0, #0x2
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L664:
	.align	2, 0
.L663:
	.word	sBattleAnimScriptPtr
	.word	gSprites
.Lfe75:
	.size	 ScriptCmd_invisible,.Lfe75-ScriptCmd_invisible
	.align	2, 0
	.type	 ScriptCmd_visible,function
	.thumb_func
ScriptCmd_visible:
	push	{r4, lr}
	ldr	r4, .L667
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1]
	bl	GetAnimBattlerSpriteId
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	beq	.L666	@cond_branch
	ldr	r1, .L667+0x4
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L666:
	ldr	r0, [r4]
	add	r0, r0, #0x2
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L668:
	.align	2, 0
.L667:
	.word	sBattleAnimScriptPtr
	.word	gSprites
.Lfe76:
	.size	 ScriptCmd_visible,.Lfe76-ScriptCmd_visible
	.align	2, 0
	.type	 ScriptCmd_doublebattle_2D,function
	.thumb_func
ScriptCmd_doublebattle_2D:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L678
	ldr	r0, [r1]
	ldrb	r7, [r0, #0x1]
	add	r0, r0, #0x2
	str	r0, [r1]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L670	@cond_branch
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L670	@cond_branch
	ldr	r6, .L678+0x4
	ldrb	r0, [r6]
	bl	GetBattlerSide
	add	r4, r0, #0
	ldr	r5, .L678+0x8
	ldrb	r0, [r5]
	bl	GetBattlerSide
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L670	@cond_branch
	cmp	r7, #0
	bne	.L671	@cond_branch
	ldrb	r0, [r6]
	bl	GetBattlerSpriteBGPriorityRank
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x0
	b	.L677
.L679:
	.align	2, 0
.L678:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
.L671:
	ldrb	r0, [r5]
	bl	GetBattlerSpriteBGPriorityRank
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x1
.L677:
	bl	GetAnimBattlerSpriteId
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	beq	.L670	@cond_branch
	ldr	r1, .L680
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r2, r0, r1
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	cmp	r4, #0x2
	bne	.L674	@cond_branch
	ldrb	r0, [r2, #0x5]
	mov	r1, #0xc
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
.L674:
	cmp	r4, #0x1
	bne	.L675	@cond_branch
	mov	r0, #0x0
	bl	sub_80A477C
	b	.L670
.L681:
	.align	2, 0
.L680:
	.word	gSprites
.L675:
	mov	r0, #0x1
	bl	sub_80A477C
.L670:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 ScriptCmd_doublebattle_2D,.Lfe77-ScriptCmd_doublebattle_2D
	.align	2, 0
	.type	 ScriptCmd_doublebattle_2E,function
	.thumb_func
ScriptCmd_doublebattle_2E:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L688
	ldr	r0, [r1]
	ldrb	r7, [r0, #0x1]
	add	r0, r0, #0x2
	str	r0, [r1]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L683	@cond_branch
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L683	@cond_branch
	ldr	r6, .L688+0x4
	ldrb	r0, [r6]
	bl	GetBattlerSide
	add	r4, r0, #0
	ldr	r5, .L688+0x8
	ldrb	r0, [r5]
	bl	GetBattlerSide
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L683	@cond_branch
	cmp	r7, #0
	bne	.L684	@cond_branch
	ldrb	r0, [r6]
	bl	GetBattlerSpriteBGPriorityRank
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x0
	b	.L687
.L689:
	.align	2, 0
.L688:
	.word	sBattleAnimScriptPtr
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
.L684:
	ldrb	r0, [r5]
	bl	GetBattlerSpriteBGPriorityRank
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x1
.L687:
	bl	GetAnimBattlerSpriteId
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	beq	.L683	@cond_branch
	cmp	r4, #0x2
	bne	.L683	@cond_branch
	ldr	r1, .L690
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
.L683:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L691:
	.align	2, 0
.L690:
	.word	gSprites
.Lfe78:
	.size	 ScriptCmd_doublebattle_2E,.Lfe78-ScriptCmd_doublebattle_2E
	.align	2, 0
	.type	 ScriptCmd_stopsound,function
	.thumb_func
ScriptCmd_stopsound:
	push	{lr}
	ldr	r0, .L693
	bl	m4aMPlayStop
	ldr	r0, .L693+0x4
	bl	m4aMPlayStop
	ldr	r1, .L693+0x8
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L694:
	.align	2, 0
.L693:
	.word	gMPlayInfo_SE1
	.word	gMPlayInfo_SE2
	.word	sBattleAnimScriptPtr
.Lfe79:
	.size	 ScriptCmd_stopsound,.Lfe79-ScriptCmd_stopsound
.text
	.align	2, 0

