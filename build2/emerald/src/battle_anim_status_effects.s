@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sSpriteAnim_853EDE4,object
sSpriteAnim_853EDE4:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x4
	.byte	0x3
	.space	1
	.short	0x8
	.byte	0x3
	.space	1
	.short	0xc
	.byte	0x3
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sSpriteAnim_853EDE4,20
	.align	2, 0
	.type	 sSpriteAnimTable_853EDF8,object
sSpriteAnimTable_853EDF8:
	.word	sSpriteAnim_853EDE4
	.size	 sSpriteAnimTable_853EDF8,4
	.globl	gUnknown_0853EDFC
	.align	2, 0
	.type	 gUnknown_0853EDFC,object
	.size	 gUnknown_0853EDFC,24
gUnknown_0853EDFC:
	.short	0x2714
	.short	0x2714
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	sSpriteAnimTable_853EDF8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80A8AEC
	.globl	gUnknown_0853EE14
	.align	2, 0
	.type	 gUnknown_0853EE14,object
	.size	 gUnknown_0853EE14,24
gUnknown_0853EE14:
	.short	0x2714
	.short	0x2714
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	sSpriteAnimTable_853EDF8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80A8A6C
	.align	2, 0
	.type	 sAnim_WeatherBallNormal,object
sAnim_WeatherBallNormal:
	.short	0x0
	.byte	0x3
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_WeatherBallNormal,8
	.align	2, 0
	.type	 sAnims_WeatherBallNormal,object
sAnims_WeatherBallNormal:
	.word	sAnim_WeatherBallNormal
	.size	 sAnims_WeatherBallNormal,4
	.globl	gWeatherBallUpSpriteTemplate
	.align	2, 0
	.type	 gWeatherBallUpSpriteTemplate,object
	.size	 gWeatherBallUpSpriteTemplate,24
gWeatherBallUpSpriteTemplate:
	.short	0x282b
	.short	0x282b
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sAnims_WeatherBallNormal
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimWeatherBallUp
	.globl	gWeatherBallNormalDownSpriteTemplate
	.align	2, 0
	.type	 gWeatherBallNormalDownSpriteTemplate,object
	.size	 gWeatherBallNormalDownSpriteTemplate,24
gWeatherBallNormalDownSpriteTemplate:
	.short	0x282b
	.short	0x282b
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sAnims_WeatherBallNormal
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimWeatherBallDown
	.align	2, 0
	.type	 sSpriteAnim_853EE68,object
sSpriteAnim_853EE68:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x10
	.byte	0x3
	.space	1
	.short	0x20
	.byte	0x3
	.space	1
	.short	0x30
	.byte	0x3
	.space	1
	.short	0x40
	.byte	0x3
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_853EE68,24
	.align	2, 0
	.type	 sSpriteAnimTable_853EE80,object
sSpriteAnimTable_853EE80:
	.word	sSpriteAnim_853EE68
	.size	 sSpriteAnimTable_853EE80,4
	.globl	gSpinningSparkleSpriteTemplate
	.align	2, 0
	.type	 gSpinningSparkleSpriteTemplate,object
	.size	 gSpinningSparkleSpriteTemplate,24
gSpinningSparkleSpriteTemplate:
	.short	0x2757
	.short	0x2757
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sSpriteAnimTable_853EE80
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimSpinningSparkle
	.globl	gUnknown_0853EE9C
	.align	2, 0
	.type	 gUnknown_0853EE9C,object
	.size	 gUnknown_0853EE9C,24
gUnknown_0853EE9C:
	.short	0x2743
	.short	0x2743
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80A8AEC
	.align	2, 0
	.type	 sSpriteAnim_853EEB4,object
sSpriteAnim_853EEB4:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sSpriteAnim_853EEB4,8
	.align	2, 0
	.type	 sSpriteAnim_853EEBC,object
sSpriteAnim_853EEBC:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sSpriteAnim_853EEBC,8
	.align	2, 0
	.type	 sSpriteAnim_853EEC4,object
sSpriteAnim_853EEC4:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sSpriteAnim_853EEC4,8
	.align	2, 0
	.type	 sSpriteAnimTable_853EECC,object
sSpriteAnimTable_853EECC:
	.word	sSpriteAnim_853EEB4
	.word	sSpriteAnim_853EEBC
	.word	sSpriteAnim_853EEC4
	.size	 sSpriteAnimTable_853EECC,12
	.globl	gUnknown_0853EED8
	.align	2, 0
	.type	 gUnknown_0853EED8,object
	.size	 gUnknown_0853EED8,24
gUnknown_0853EED8:
	.short	0x2797
	.short	0x2797
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sSpriteAnimTable_853EECC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80A8AEC
	.align	2, 0
	.type	 sSpriteAnim_853EEF0,object
sSpriteAnim_853EEF0:
	.short	0x0
	.byte	0xf
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sSpriteAnim_853EEF0,8
	.align	2, 0
	.type	 sSpriteAnimTable_853EEF8,object
sSpriteAnimTable_853EEF8:
	.word	sSpriteAnim_853EEF0
	.size	 sSpriteAnimTable_853EEF8,4
	.align	2, 0
	.type	 sSpriteAffineAnim_853EEFC,object
sSpriteAffineAnim_853EEFC:
	.short	0x60
	.short	0x60
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x2
	.short	0x2
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x1
	.space	4
	.size	 sSpriteAffineAnim_853EEFC,24
	.align	2, 0
	.type	 sSpriteAffineAnimTable_853EEF8,object
sSpriteAffineAnimTable_853EEF8:
	.word	sSpriteAffineAnim_853EEFC
	.size	 sSpriteAffineAnimTable_853EEF8,4
	.globl	gUnknown_0853EF18
	.align	2, 0
	.type	 gUnknown_0853EF18,object
	.size	 gUnknown_0853EF18,24
gUnknown_0853EF18:
	.short	0x2714
	.short	0x2714
	.word	gOamData_AffineDouble_ObjNormal_16x16
	.word	sSpriteAnimTable_853EEF8
	.word	0x0
	.word	sSpriteAffineAnimTable_853EEF8
	.word	sub_80A8A6C
	.align	2, 0
	.type	 sFrozenIceCubeSubsprites,object
	.size	 sFrozenIceCubeSubsprites,16
sFrozenIceCubeSubsprites:
	.byte	-0x10
	.byte	-0x10
	.byte	0xc
	.byte	0x80
	.byte	-0x10
	.byte	0x30
	.byte	0xd
	.byte	0x84
	.byte	0x30
	.byte	-0x10
	.byte	0xe
	.byte	0x86
	.byte	0x30
	.byte	0x30
	.byte	0x8
	.byte	0x88
	.align	2, 0
	.type	 sFrozenIceCubeSubspriteTable,object
sFrozenIceCubeSubspriteTable:
	.byte	0x4
	.space	3
	.word	sFrozenIceCubeSubsprites
	.size	 sFrozenIceCubeSubspriteTable,8
	.align	2, 0
	.type	 gFrozenIceCubeSpriteTemplate,object
	.size	 gFrozenIceCubeSpriteTemplate,24
gFrozenIceCubeSpriteTemplate:
	.short	0x271a
	.short	0x271a
	.word	gOamData_AffineOff_ObjBlend_64x64
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_0853EF60,object
	.size	 gUnknown_0853EF60,24
gUnknown_0853EF60:
	.short	0x2798
	.short	0x2798
	.word	gOamData_AffineOff_ObjNormal_8x8
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80A9E44
.text
	.align	2, 0
	.globl	sub_80A9C70
	.type	 sub_80A9C70,function
	.thumb_func
sub_80A9C70:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L17
	add	r0, r4, r0
	ldrb	r6, [r0]
	ldr	r0, .L17+0x4
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L17+0x8
	bl	LoadCompressedSpriteSheetUsingHeap
	ldr	r0, .L17+0xc
	bl	LoadCompressedSpritePaletteUsingHeap
	ldr	r1, .L17+0x10
	mov	r2, r8
	lsl	r0, r2, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	strh	r4, [r1, #0x8]
	cmp	r5, #0
	beq	.L3	@cond_branch
	mov	r0, #0x1f
	strh	r0, [r1, #0xa]
	mov	r5, #0x0
	lsl	r0, r6, #0x4
	ldr	r7, .L17+0x14
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r6, r0, r7
.L7:
	mov	r0, #0x20
	ldrsh	r1, [r6, r0]
	ldrh	r2, [r6, #0x22]
	add	r2, r2, #0x20
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r0, .L17+0x18
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r0, r7
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r1, r0, #0x4
	add	r0, r0, r1
	strh	r0, [r3, #0x2e]
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	strh	r0, [r3, #0x30]
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	cmp	r5, #0x4
	bls	.L6	@cond_branch
	mov	r0, #0x15
	strh	r0, [r3, #0x3a]
.L6:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x9
	bls	.L7	@cond_branch
	b	.L10
.L18:
	.align	2, 0
.L17:
	.word	gBattlerSpriteIds
	.word	sub_80A9DB4
	.word	gBattleAnimPicTable+0x440
	.word	gBattleAnimPaletteTable+0x440
	.word	gTasks
	.word	gSprites
	.word	gUnknown_0853EF60
.L3:
	mov	r0, #0xf8
	lsl	r0, r0, #0x7
	strh	r0, [r1, #0xa]
	mov	r5, #0x0
	lsl	r0, r6, #0x4
	ldr	r7, .L19
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r6, r0, r7
.L14:
	mov	r2, #0x20
	ldrsh	r1, [r6, r2]
	ldrh	r2, [r6, #0x22]
	sub	r2, r2, #0x20
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r0, .L19+0x4
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r0, r7
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r1, r0, #0x4
	add	r0, r0, r1
	strh	r0, [r3, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r3, #0x30]
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	cmp	r5, #0x4
	bls	.L13	@cond_branch
	mov	r0, #0x15
	strh	r0, [r3, #0x3a]
.L13:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x9
	bls	.L14	@cond_branch
.L10:
	ldr	r0, .L19
	lsl	r1, r4, #0x4
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x3c]
	mov	r0, r8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L20:
	.align	2, 0
.L19:
	.word	gSprites
	.word	gUnknown_0853EF60
.Lfe1:
	.size	 sub_80A9C70,.Lfe1-sub_80A9C70
	.align	2, 0
	.type	 sub_80A9DB4,function
	.thumb_func
sub_80A9DB4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L29
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r1, [r4, #0xc]
	mov	r2, #0xc
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x2
	bne	.L22	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xc]
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x14
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	ldrb	r2, [r4, #0x10]
	ldrh	r3, [r4, #0xa]
	mov	r1, #0x10
	bl	BlendPalette
	ldrh	r2, [r4, #0x12]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L23	@cond_branch
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L28	@cond_branch
	mov	r0, #0x1
	eor	r0, r0, r2
	strh	r0, [r4, #0x12]
	b	.L28
.L30:
	.align	2, 0
.L29:
	.word	gTasks
.L23:
	ldrh	r1, [r4, #0x10]
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x10]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L28	@cond_branch
	strh	r1, [r4, #0x10]
	mov	r0, #0x1
	eor	r0, r0, r2
	strh	r0, [r4, #0x12]
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	bne	.L28	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	b	.L28
.L22:
	add	r0, r1, #0x1
	strh	r0, [r4, #0xc]
.L28:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 sub_80A9DB4,.Lfe2-sub_80A9DB4
	.align	2, 0
	.type	 sub_80A9E44,function
	.thumb_func
sub_80A9E44:
	push	{lr}
	add	r2, r0, #0
	ldrh	r1, [r2, #0x3a]
	mov	r3, #0x3a
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	bne	.L32	@cond_branch
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r0
	strb	r1, [r3]
	ldr	r1, .L34
	str	r1, [r2, #0x1c]
	add	r0, r2, #0
	bl	_call_via_r1
	b	.L33
.L35:
	.align	2, 0
.L34:
	.word	sub_80A9E78
.L32:
	sub	r0, r1, #0x1
	strh	r0, [r2, #0x3a]
.L33:
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 sub_80A9E44,.Lfe3-sub_80A9E44
	.align	2, 0
	.type	 sub_80A9E78,function
	.thumb_func
sub_80A9E78:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0x20
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0x8
	bl	Sin
	strh	r0, [r4, #0x26]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7f
	bgt	.L37	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x1d
	b	.L42
.L37:
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x1f
.L42:
	strb	r0, [r1]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x8
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x30]
	ldrh	r1, [r4, #0x38]
	add	r0, r0, r1
	strh	r0, [r4, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x34
	bne	.L39	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L40	@cond_branch
	add	r0, r4, #0
	bl	DestroySpriteAndFreeResources
	b	.L39
.L40:
	add	r0, r4, #0
	bl	DestroySprite
.L39:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_80A9E78,.Lfe4-sub_80A9E78
	.align	2, 0
	.globl	AnimTask_FrozenIceCube
	.type	 AnimTask_FrozenIceCube,function
	.thumb_func
AnimTask_FrozenIceCube:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L46
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r1, .L46+0x4
	add	r0, r0, r1
	lsr	r5, r0, #0x10
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r1, .L46+0x8
	add	r0, r0, r1
	lsr	r4, r0, #0x10
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L44	@cond_branch
	lsl	r0, r5, #0x10
	ldr	r1, .L46+0xc
	add	r0, r0, r1
	lsr	r5, r0, #0x10
.L44:
	mov	r1, #0xfd
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	ldr	r0, .L46+0x10
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r4, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x4
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L46+0x14
	bl	GetSpriteTileStartByTag
	lsl	r0, r0, #0x10
	ldr	r1, .L46+0x18
	cmp	r0, r1
	bne	.L45	@cond_branch
	ldr	r1, .L46+0x1c
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L45:
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L46+0x1c
	add	r0, r0, r1
	ldr	r1, .L46+0x20
	bl	SetSubspriteTables
	ldr	r1, .L46+0x24
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r4, [r0, #0x26]
	ldr	r1, .L46+0x28
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	gBattleAnimTarget
	.word	-0x200000
	.word	-0x240000
	.word	-0x60000
	.word	gFrozenIceCubeSpriteTemplate
	.word	0x271a
	.word	-0x10000
	.word	gSprites
	.word	sFrozenIceCubeSubspriteTable
	.word	gTasks
	.word	AnimTask_FrozenIceCube_Step1
.Lfe5:
	.size	 AnimTask_FrozenIceCube,.Lfe5-AnimTask_FrozenIceCube
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step1,function
	.thumb_func
AnimTask_FrozenIceCube_Step1:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L51
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	add	r2, r0, #0
	strh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L49	@cond_branch
	ldr	r0, .L51+0x4
	str	r0, [r1]
	mov	r0, #0x0
	strh	r0, [r1, #0xa]
	b	.L50
.L52:
	.align	2, 0
.L51:
	.word	gTasks
	.word	AnimTask_FrozenIceCube_Step2
.L49:
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
.L50:
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 AnimTask_FrozenIceCube_Step1,.Lfe6-AnimTask_FrozenIceCube_Step1
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step2,function
	.thumb_func
AnimTask_FrozenIceCube_Step2:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L58
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L58+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldrh	r0, [r5, #0xa]
	add	r1, r0, #0x1
	strh	r1, [r5, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xd
	ble	.L54	@cond_branch
	ldrh	r0, [r5, #0xc]
	add	r0, r0, #0x1
	mov	r6, #0x0
	strh	r0, [r5, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L54	@cond_branch
	ldr	r3, .L58+0x8
	lsl	r2, r2, #0x4
	mov	ip, r2
	ldr	r1, .L58+0xc
	add	r1, r1, ip
	lsl	r1, r1, #0x1
	add	r1, r1, r3
	ldrh	r4, [r1]
	mov	r2, #0x87
	lsl	r2, r2, #0x1
	add	r2, r2, ip
	lsl	r2, r2, #0x1
	add	r2, r2, r3
	ldrh	r0, [r2]
	strh	r0, [r1]
	ldr	r0, .L58+0x10
	add	r0, r0, ip
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r1, [r0]
	strh	r1, [r2]
	strh	r4, [r0]
	strh	r6, [r5, #0xc]
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L54	@cond_branch
	strh	r6, [r5, #0xe]
	strh	r6, [r5, #0xa]
	ldrh	r0, [r5, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	bne	.L54	@cond_branch
	mov	r0, #0x9
	strh	r0, [r5, #0xa]
	ldr	r0, .L58+0x14
	str	r0, [r5]
.L54:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	0x271a
	.word	gTasks
	.word	gPlttBufferFaded
	.word	0x10d
	.word	0x10f
	.word	AnimTask_FrozenIceCube_Step3
.Lfe7:
	.size	 AnimTask_FrozenIceCube_Step2,.Lfe7-AnimTask_FrozenIceCube_Step2
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step3,function
	.thumb_func
AnimTask_FrozenIceCube_Step3:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L63
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r0, [r2, #0xa]
	sub	r0, r0, #0x1
	add	r3, r0, #0
	strh	r0, [r2, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L61	@cond_branch
	ldr	r0, .L63+0x4
	str	r0, [r2]
	mov	r0, #0x0
	strh	r0, [r2, #0xa]
	b	.L62
.L64:
	.align	2, 0
.L63:
	.word	gTasks
	.word	AnimTask_FrozenIceCube_Step4
.L61:
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
.L62:
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 AnimTask_FrozenIceCube_Step3,.Lfe8-AnimTask_FrozenIceCube_Step3
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step4,function
	.thumb_func
AnimTask_FrozenIceCube_Step4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	ldr	r1, .L69
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x25
	bne	.L66	@cond_branch
	ldrh	r0, [r1, #0x26]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L69+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	bl	FreeSpriteOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	b	.L67
.L70:
	.align	2, 0
.L69:
	.word	gTasks
	.word	gSprites
.L66:
	cmp	r0, #0x27
	bne	.L67	@cond_branch
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
.L67:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 AnimTask_FrozenIceCube_Step4,.Lfe9-AnimTask_FrozenIceCube_Step4
	.align	2, 0
	.globl	AnimTask_StatsChange
	.type	 AnimTask_StatsChange,function
	.thumb_func
AnimTask_StatsChange:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r3, #0x0
	ldr	r0, .L116
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrh	r0, [r0]
	sub	r0, r0, #0xf
	cmp	r0, #0x2b
	bls	.LCB854
	b	.L105	@long jump
.LCB854:
	lsl	r0, r0, #0x2
	ldr	r1, .L116+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L117:
	.align	2, 0
.L116:
	.word	gBattleSpritesDataPtr
	.word	.L106
	.align	2, 0
	.align	2, 0
.L106:
	.word	.L73
	.word	.L74
	.word	.L75
	.word	.L76
	.word	.L77
	.word	.L78
	.word	.L79
	.word	.L80
	.word	.L81
	.word	.L82
	.word	.L83
	.word	.L84
	.word	.L85
	.word	.L86
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L105
	.word	.L87
	.word	.L88
	.word	.L89
	.word	.L90
	.word	.L91
	.word	.L92
	.word	.L93
	.word	.L94
	.word	.L95
	.word	.L96
	.word	.L97
	.word	.L98
	.word	.L99
	.word	.L100
	.word	.L105
	.word	.L105
	.word	.L101
	.word	.L102
	.word	.L103
	.word	.L104
.L73:
	mov	r5, #0x0
	mov	r2, #0x0
	b	.L72
.L74:
	mov	r5, #0x0
	mov	r2, #0x1
	b	.L72
.L75:
	mov	r5, #0x0
	mov	r2, #0x3
	b	.L72
.L76:
	mov	r5, #0x0
	mov	r2, #0x5
	b	.L72
.L77:
	mov	r5, #0x0
	mov	r2, #0x6
	b	.L72
.L78:
	mov	r5, #0x0
	mov	r2, #0x2
	b	.L72
.L79:
	mov	r5, #0x0
	mov	r2, #0x4
	b	.L72
.L80:
	mov	r5, #0x1
	mov	r2, #0x0
	b	.L72
.L81:
	mov	r5, #0x1
	mov	r2, #0x1
	b	.L72
.L82:
	mov	r5, #0x1
	mov	r2, #0x3
	b	.L72
.L83:
	mov	r5, #0x1
	mov	r2, #0x5
	b	.L72
.L84:
	mov	r5, #0x1
	mov	r2, #0x6
	b	.L72
.L85:
	mov	r5, #0x1
	mov	r2, #0x2
	b	.L72
.L86:
	mov	r5, #0x1
	mov	r2, #0x4
	b	.L72
.L87:
	mov	r5, #0x0
	b	.L107
.L88:
	mov	r5, #0x0
	b	.L108
.L89:
	mov	r5, #0x0
	b	.L109
.L90:
	mov	r5, #0x0
	b	.L110
.L91:
	mov	r5, #0x0
	b	.L111
.L92:
	mov	r5, #0x0
	b	.L112
.L93:
	mov	r5, #0x0
	b	.L113
.L94:
	mov	r5, #0x1
.L107:
	mov	r2, #0x0
	mov	r3, #0x1
	b	.L72
.L95:
	mov	r5, #0x1
.L108:
	mov	r2, #0x1
	mov	r3, #0x1
	b	.L72
.L96:
	mov	r5, #0x1
.L109:
	mov	r2, #0x3
	mov	r3, #0x1
	b	.L72
.L97:
	mov	r5, #0x1
.L110:
	mov	r2, #0x5
	mov	r3, #0x1
	b	.L72
.L98:
	mov	r5, #0x1
.L111:
	mov	r2, #0x6
	mov	r3, #0x1
	b	.L72
.L99:
	mov	r5, #0x1
.L112:
	mov	r2, #0x2
	mov	r3, #0x1
	b	.L72
.L100:
	mov	r5, #0x1
.L113:
	mov	r2, #0x4
	mov	r3, #0x1
	b	.L72
.L101:
	mov	r5, #0x0
	b	.L114
.L102:
	mov	r5, #0x0
	b	.L115
.L103:
	mov	r5, #0x1
.L114:
	mov	r2, #0xff
	mov	r3, #0x0
	b	.L72
.L104:
	mov	r5, #0x1
.L115:
	mov	r2, #0xff
	mov	r3, #0x1
	b	.L72
.L105:
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
	b	.L71
.L72:
	ldr	r0, .L118
	mov	r1, #0x0
	strh	r5, [r0]
	strh	r2, [r0, #0x2]
	strh	r1, [r0, #0x4]
	strh	r1, [r0, #0x6]
	strh	r3, [r0, #0x8]
	ldr	r1, .L118+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L118+0x8
	str	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
.L71:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L119:
	.align	2, 0
.L118:
	.word	gBattleAnimArgs
	.word	gTasks
	.word	sub_8116EB4
.Lfe10:
	.size	 AnimTask_StatsChange,.Lfe10-AnimTask_StatsChange
	.align	2, 0
	.globl	LaunchStatusAnimation
	.type	 LaunchStatusAnimation,function
	.thumb_func
LaunchStatusAnimation:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L121
	strb	r4, [r0]
	ldr	r0, .L121+0x4
	strb	r4, [r0]
	ldr	r0, .L121+0x8
	mov	r2, #0x0
	bl	LaunchBattleAnimation
	ldr	r0, .L121+0xc
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L121+0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L122:
	.align	2, 0
.L121:
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	gBattleAnims_StatusConditions
	.word	Task_DoStatusAnimation
	.word	gTasks
.Lfe11:
	.size	 LaunchStatusAnimation,.Lfe11-LaunchStatusAnimation
	.align	2, 0
	.type	 Task_DoStatusAnimation,function
	.thumb_func
Task_DoStatusAnimation:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L125
	ldr	r0, [r0]
	bl	_call_via_r0
	ldr	r0, .L125+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L124	@cond_branch
	ldr	r0, .L125+0x8
	ldr	r2, [r0]
	ldr	r1, .L125+0xc
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r0, r1]
	ldr	r2, [r2, #0x4]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0
	bl	DestroyTask
.L124:
	pop	{r4}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	gAnimScriptCallback
	.word	gAnimScriptActive
	.word	gBattleSpritesDataPtr
	.word	gTasks
.Lfe12:
	.size	 Task_DoStatusAnimation,.Lfe12-Task_DoStatusAnimation
.text
	.align	2, 0

