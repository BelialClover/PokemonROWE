@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sRoulette,object
	.size	 sRoulette,4
sRoulette:
	.word	0x0
	.type	 sTextWindowId,object
	.size	 sTextWindowId,1
sTextWindowId:
	.byte	0x0
	.section .rodata
	.align	1, 0
	.type	 sWheel_Pal,object
sWheel_Pal:
	.short	0x1a6a
	.short	0x14a5
	.short	0x398c
	.short	0x62d5
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x3ff
	.short	0x4da9
	.short	0x14a5
	.short	0x398c
	.short	0x5273
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x4da9
	.short	0x14a5
	.short	0x41ef
	.short	0x62d5
	.short	0x7fff
	.short	0x4fbd
	.short	0x36d7
	.short	0x1170
	.short	0x2e1f
	.short	0x31b7
	.short	0x7f7c
	.short	0x4ee9
	.short	0x7fff
	.short	0x56cf
	.short	0x7fff
	.short	0x7fff
	.short	0x4da9
	.short	0x20e7
	.short	0x398c
	.short	0x5273
	.short	0x7fff
	.short	0x672d
	.short	0x2d9e
	.short	0x7e6d
	.short	0x7fff
	.short	0x37f3
	.short	0x279e
	.short	0x3f9f
	.short	0x7fff
	.short	0x4fff
	.short	0x4bf3
	.short	0x7e79
	.short	0x4da9
	.short	0x14a5
	.short	0x398c
	.short	0x6b39
	.short	0x7fff
	.short	0x47af
	.short	0x46bf
	.short	0x2662
	.short	0x7e98
	.short	0x11a6
	.short	0x430e
	.short	0x5e38
	.short	0x1d5f
	.short	0x2bbf
	.short	0x6d9
	.short	0x73f
	.short	0x4da9
	.short	0x722d
	.short	0x65ca
	.short	0x7fff
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x7fff
	.short	0x4da9
	.short	0x23df
	.short	0x53ff
	.short	0x23df
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x4da9
	.short	0x77f5
	.short	0x7ffb
	.short	0x77f2
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x1d08
	.short	0x4da9
	.short	0x7f3f
	.short	0x7f7f
	.short	0x7f1f
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x4da9
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x7fff
	.short	0x4da9
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x4da9
	.short	0x2bdf
	.short	0x6ff4
	.short	0x62d5
	.short	0x7fff
	.short	0x23df
	.short	0xf3e
	.short	0x331d
	.short	0x2eb9
	.short	0x2e14
	.short	0x6fd3
	.short	0x5b4b
	.short	0x5770
	.short	0x4eee
	.short	0x4a4c
	.short	0x1d08
	.short	0x4da9
	.short	0x76fd
	.short	0x4a53
	.short	0x62d5
	.short	0x7fff
	.short	0x7f3f
	.short	0x727b
	.short	0x6278
	.short	0x5635
	.short	0x49b1
	.short	0x7339
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x4da9
	.short	0x7b9d
	.short	0x7339
	.short	0x62d5
	.short	0x7fff
	.short	0x73ff
	.short	0x53ff
	.short	0x7fff
	.short	0x7ffb
	.short	0x7fdf
	.short	0x7f7f
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.size	 sWheel_Pal,512
	.align	2, 0
	.type	 sGrid_Tilemap,object
sGrid_Tilemap:
	.word	0x30010
	.word	0x0
	.word	0x2b0e000
	.word	-0x3ffcf340
	.word	0x5f0c004
	.word	0x1d10
	.word	0x12b0f000
	.word	0x14c013c0
	.word	0x5f080c0
	.word	-0x4f0e0000
	.word	-0x3b1e4f0f
	.word	0x1f601ff0
	.word	0x6b005
	.word	0x10b03001
	.word	-0xfcd4fcf
	.word	-0x3ff44ffb
	.word	0x16b02015
	.word	-0x4fbfff00
	.word	-0x7ebd4fbf
	.word	0x1bb005f0
	.word	0x26b025c0
	.word	0x50040100
	.word	0x52b051b0
	.word	0x2bb005f0
	.word	-0x4ff83ff8
	.word	0x33010008
	.word	-0x4fcecb50
	.word	0x5f035
	.word	0x18b0175f
	.word	0x43060100
	.word	0x45b044b0
	.word	0x5f0005f0
	.word	0x28b02027
	.word	-0x4facff00
	.word	-0x3baa4fac
	.word	0x5f0005f0
	.word	0xac009
	.word	0x10c03601
	.word	-0xfc73fc9
	.word	-0x3ff43ffb
	.word	0x1ac02019
	.word	-0x3fb9ff00
	.word	-0x7eb73fb9
	.word	0x1bc005f0
	.word	0x2ac029c0
	.word	0x56040100
	.word	0x58c057c0
	.word	0x2bc005f0
	.word	-0x1d9ede80
	.word	0x23b022b0
	.word	-0xf7fdb50
	.word	0xb005
	.word	-0x2f322f34
	.word	-0x232f31ff
	.word	-0x212f2230
	.word	-0x69fffac0
	.word	-0x672f6830
	.word	0xd0a6d0
	.word	-0x2f572f59
	.word	-0x2f482f4a
	.word	-0x662f4800
	.word	-0x642f6530
	.word	-0x2f56ff30
	.word	-0x2f542f56
	.word	-0x45ff2f47
	.word	-0x632f4430
	.word	0xd09dd0
	.word	-0x2f532f62
	.word	-0x2f512f53
	.word	-0x422f4400
	.word	-0x392f4130
	.word	0xc74460
	.word	-0x289f29ff
	.word	0x60e60100
	.word	0x100e744
	.word	0xc970c8
	.word	0x4470d801
	.word	-0x17feff27
	.word	0x100e970
	.word	-0x34bb7f36
	.word	-0x7f25ff00
	.word	-0x15feff25
	.word	0xeb4080
	.word	0xc000001
	.word	0x400d40
	.word	0x401c400e
	.word	0x401e401d
	.word	0x2d402c00
	.word	0x70402e40
	.word	0x40710040
	.word	0x40804072
	.word	-0x7d87bf7f
	.word	0x5f005f0
	.word	0x54005f0
	.word	0x3914090
	.word	0x73409240
	.word	0x1f07440
	.word	0x75060160
	.word	-0x7bbf7cc0
	.word	0x16001f0
	.word	-0x6cbff37b
	.word	0x1f09440
	.word	0x40950160
	.word	-0xf3ecd20
	.word	0x15001
	.size	 sGrid_Tilemap,420
	.align	2, 0
	.type	 sWheel_Tilemap,object
sWheel_Tilemap:
	.word	0x40010
	.word	-0xfffffc8
	.word	0x1001f001
	.word	0x3020101
	.word	0x6050403
	.word	-0xff6f7f9
	.word	0x1001a
	.word	0xd0c0b0a
	.word	0x11100f0e
	.word	0x14131204
	.word	0x1ef01615
	.word	0x19001817
	.word	0x1d1c1b1a
	.word	0x4201f1e
	.word	0x24232221
	.word	0x251ed0d8
	.word	0x28270026
	.word	0x2b2b2a29
	.word	0x2d012d2c
	.word	0x31302f2e
	.word	0x1fc0dad9
	.word	0x34333200
	.word	0x38373635
	.word	0x3b3a0039
	.word	0x3f3e3d3c
	.word	-0x23bf24c0
	.word	0x42411eb0
	.word	0x45364443
	.word	0x48474600
	.word	0x4c4b4a49
	.word	0x4e3e044d
	.word	-0x5f202123
	.word	0x8504f1f
	.word	0x54535251
	.word	0x56550c40
	.word	-0x1e1fefa9
	.word	0x581fa0e2
	.word	0x205b5a59
	.word	0xc405d5c
	.word	-0x1c9fa0a2
	.word	-0x5f1abf1c
	.word	0x6362611f
	.word	-0x7e9a9ba5
	.word	0x67660c40
	.word	-0x171819a0
	.word	0x68021fa0
	.word	0x6c6b6a69
	.word	0x6e0c406d
	.word	-0x168f90fc
	.word	0x1fa0ebea
	.word	0x73087271
	.word	0x40767574
	.word	0x7978770c
	.word	-0x111213f0
	.word	0x7b7a1fa0
	.word	0x7d20747c
	.word	0x7f0c407e
	.word	-0xf108680
	.word	0x1fa0f140
	.word	-0x7b7c7d7f
	.word	0x40818685
	.word	-0x767778f4
	.word	-0x5f0b0c0e
	.word	-0x7475ffe1
	.word	-0x70717274
	.word	-0x6dff6e70
	.word	-0x696a6b6d
	.word	0x10999897
	.word	-0x4e08090b
	.word	-0x636465e0
	.word	-0x6171ff63
	.word	-0x5d5e5f61
	.word	-0x67fb5b5d
	.word	-0x607595b
	.word	-0x5758a03f
	.word	-0x54555700
	.word	-0x51525254
	.word	-0x4f50fe51
	.word	-0x54c4d4f
	.word	0xa0d1fb
	.word	-0x48494a4c
	.word	-0x44454648
	.word	-0x414243ff
	.word	-0x33e3f41
	.word	-0x3dff1f0f
	.word	-0x393a3b3d
	.word	0x6c9c8c7
	.word	-0x32333436
	.word	0x1ef0ce
	.word	-0x2fff30ff
	.word	-0x2b2c2d2f
	.word	-0x28292b
	.word	0x1f01af0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0fc01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f0
	.size	 sWheel_Tilemap,416
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,12
sBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0x41
	.byte	0x12
	.byte	0x0
	.space	1
	.byte	0x66
	.byte	0x2a
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x3
	.byte	0xf
	.byte	0x18
	.byte	0x4
	.byte	0xf
	.short	0xc5
	.size	 sWindowTemplates,8
	.align	2, 0
	.type	 sGridSelections,object
	.size	 sGridSelections,400
sGridSelections:
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x0
	.word	0x0
	.short	0x0
	.space	2
	.byte	0xc
	.byte	0x14
	.byte	0x0
	.byte	0x11
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x2
	.word	0x10842
	.short	0xe000
	.space	2
	.byte	0xd
	.byte	0x24
	.byte	0x0
	.byte	0x14
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x4
	.word	0x21084
	.short	0xe000
	.space	2
	.byte	0xe
	.byte	0x34
	.byte	0x0
	.byte	0x17
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x8
	.word	0x42108
	.short	0xe000
	.space	2
	.byte	0xf
	.byte	0x44
	.byte	0x0
	.byte	0x1a
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x10
	.word	0x84210
	.short	0xe000
	.space	2
	.byte	0x10
	.byte	0x3
	.byte	0x1
	.byte	0xe
	.byte	0xa
	.byte	0x0
	.byte	0xc
	.space	1
	.word	0x20
	.word	0x3e0
	.short	0x249
	.space	2
	.byte	0x0
	.byte	0x1c
	.byte	0x1
	.byte	0x11
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x40
	.word	0x40
	.short	0x2001
	.space	2
	.byte	0x9
	.byte	0x2c
	.byte	0x1
	.byte	0x14
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x80
	.word	0x80
	.short	0x2200
	.space	2
	.byte	0x6
	.byte	0x3c
	.byte	0x1
	.byte	0x17
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x100
	.word	0x100
	.short	0x2040
	.space	2
	.byte	0x3
	.byte	0x4c
	.byte	0x1
	.byte	0x1a
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x200
	.word	0x200
	.short	0x2008
	.space	2
	.byte	0x11
	.byte	0x3
	.byte	0x2
	.byte	0xe
	.byte	0xd
	.byte	0x3
	.byte	0xf
	.space	1
	.word	0x400
	.word	0x7c00
	.short	0x492
	.space	2
	.byte	0x4
	.byte	0x1c
	.byte	0x2
	.byte	0x11
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x800
	.word	0x800
	.short	0x2010
	.space	2
	.byte	0x1
	.byte	0x2c
	.byte	0x2
	.byte	0x14
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x1000
	.word	0x1000
	.short	0x2002
	.space	2
	.byte	0xa
	.byte	0x3c
	.byte	0x2
	.byte	0x17
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x2000
	.word	0x2000
	.short	0x2400
	.space	2
	.byte	0x7
	.byte	0x4c
	.byte	0x2
	.byte	0x1a
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x4000
	.word	0x4000
	.short	0x2080
	.space	2
	.byte	0x12
	.byte	0x3
	.byte	0x3
	.byte	0xe
	.byte	0x10
	.byte	0x6
	.byte	0x12
	.space	1
	.word	0x8000
	.word	0xf8000
	.short	0x924
	.space	2
	.byte	0x8
	.byte	0x1c
	.byte	0x3
	.byte	0x11
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x10000
	.word	0x10000
	.short	0x2100
	.space	2
	.byte	0x5
	.byte	0x2c
	.byte	0x3
	.byte	0x14
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x20000
	.word	0x20000
	.short	0x2020
	.space	2
	.byte	0x2
	.byte	0x3c
	.byte	0x3
	.byte	0x17
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x40000
	.word	0x40000
	.short	0x2004
	.space	2
	.byte	0xb
	.byte	0x4c
	.byte	0x3
	.byte	0x1a
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x80000
	.word	0x80000
	.short	0x2800
	.space	2
	.align	2, 0
	.type	 sRouletteSlots,object
sRouletteSlots:
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.space	1
	.word	0x40
	.byte	0x1
	.byte	0x3
	.byte	0xc
	.space	1
	.word	0x1000
	.byte	0x2
	.byte	0x5
	.byte	0x12
	.space	1
	.word	0x40000
	.byte	0x3
	.byte	0x7
	.byte	0x9
	.space	1
	.word	0x200
	.byte	0x4
	.byte	0x9
	.byte	0xb
	.space	1
	.word	0x800
	.byte	0x5
	.byte	0xb
	.byte	0x11
	.space	1
	.word	0x20000
	.byte	0x6
	.byte	0xd
	.byte	0x8
	.space	1
	.word	0x100
	.byte	0x7
	.byte	0xf
	.byte	0xe
	.space	1
	.word	0x4000
	.byte	0x8
	.byte	0x11
	.byte	0x10
	.space	1
	.word	0x10000
	.byte	0x9
	.byte	0x13
	.byte	0x7
	.space	1
	.word	0x80
	.byte	0xa
	.byte	0x15
	.byte	0xd
	.space	1
	.word	0x2000
	.byte	0xb
	.byte	0x17
	.byte	0x13
	.space	1
	.word	0x80000
	.size	 sRouletteSlots,96
	.type	 sTableMinBets,object
sTableMinBets:
	.byte	0x1
	.byte	0x3
	.byte	0x1
	.byte	0x6
	.size	 sTableMinBets,4
	.align	2, 0
	.type	 sRouletteTables,object
sRouletteTables:
	.byte	0x1
	.byte	0x3c
	.byte	0x1e
	.byte	0x1
	.byte	0x1
	.space	3
	.short	0x2d
	.short	0x1e
	.short	0x1
	.space	2
	.short	0x4b
	.short	0x1b
	.short	0x18
	.space	2
	.short	0xa
	.short	0x168
	.word 0xbf000000	@ float -5.00000000000000000000e-1
	.byte	0x3
	.byte	0x1e
	.byte	0xf
	.byte	0x1
	.byte	0x0
	.space	3
	.short	0x4b
	.short	0x3c
	.short	0x2
	.space	2
	.short	0x0
	.short	0x36
	.short	0x30
	.space	2
	.short	0xa
	.short	0x10e
	.word 0xbf800000	@ float -1.00000000000000000000e0
	.size	 sRouletteTables,64
	.align	2, 0
	.type	 sFlashData_Colors,object
	.size	 sFlashData_Colors,104
sFlashData_Colors:
	.short	0x8000
	.short	0x5
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0xa
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x15
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x55
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x5a
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x65
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x75
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x7a
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x85
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x95
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0x9a
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x8000
	.short	0xa5
	.byte	0x1
	.byte	0x1
	.byte	-0x1
	.byte	0x48
	.short	0x77d6
	.short	0x28
	.byte	0x2
	.byte	0xa
	.byte	-0x1
	.byte	0x4e
	.align	2, 0
	.type	 sFlashData_PokeIcons,object
	.size	 sFlashData_PokeIcons,24
sFlashData_PokeIcons:
	.short	0x53ff
	.short	0x101
	.byte	0x5
	.byte	0x1e
	.byte	-0x1
	.byte	0x4e
	.short	0x7ffb
	.short	0x106
	.byte	0x5
	.byte	0x1e
	.byte	-0x1
	.byte	0x4e
	.short	0x7f7f
	.short	0x10b
	.byte	0x5
	.byte	0x1e
	.byte	-0x1
	.byte	0x4e
	.align	2, 0
	.type	 sYesNoTable_AcceptMinBet,object
	.size	 sYesNoTable_AcceptMinBet,8
sYesNoTable_AcceptMinBet:
	.word	Task_AcceptMinBet
	.word	Task_DeclineMinBet
	.align	2, 0
	.type	 sYesNoTable_KeepPlaying,object
	.size	 sYesNoTable_KeepPlaying,8
sYesNoTable_KeepPlaying:
	.word	Task_ContinuePlaying
	.word	Task_StopPlaying
.text
	.align	2, 0
	.type	 CB2_Roulette,function
	.thumb_func
CB2_Roulette:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	ldr	r0, .L4
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0xb8
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L3	@cond_branch
	add	r0, r1, #0
	bl	RouletteFlash_Run
.L3:
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	sRoulette
.Lfe1:
	.size	 CB2_Roulette,.Lfe1-CB2_Roulette
	.align	2, 0
	.type	 VBlankCB_Roulette,function
	.thumb_func
VBlankCB_Roulette:
	push	{r4, lr}
	add	sp, sp, #-0x4
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	bl	UpdateWheelPosition
	ldr	r4, .L17
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x26]
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r1, r2, #0
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x14
	bl	SetGpuReg
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	beq	.L7	@cond_branch
	ldrh	r1, [r1, #0x34]
	mov	r0, #0x52
	bl	SetGpuReg
.L7:
	ldr	r2, [r4]
	mov	r3, #0x2a
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	beq	.L8	@cond_branch
	ldr	r1, .L17+0x4
	ldr	r3, .L17+0x8
	add	r0, r2, r3
	str	r0, [r1]
	ldr	r0, .L17+0xc
	str	r0, [r1, #0x4]
	ldr	r0, .L17+0x10
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0x0
	strh	r0, [r2, #0x2a]
.L8:
	ldr	r0, [r4]
	mov	r2, #0x28
	ldrsh	r1, [r0, r2]
	cmp	r1, #0x1
	beq	.L10	@cond_branch
	cmp	r1, #0x1
	ble	.L9	@cond_branch
	cmp	r1, #0x2
	beq	.L11	@cond_branch
	cmp	r1, #0xff
	beq	.L12	@cond_branch
	b	.L9
.L18:
	.align	2, 0
.L17:
	.word	sRoulette
	.word	0x40000d4
	.word	0x133c
	.word	0x60021c0
	.word	-0x7ffffe60
.L10:
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	SetBgAttribute
	mov	r0, #0x0
	bl	ShowBg
	ldr	r1, .L19
	ldr	r2, [r4]
	mov	r3, #0xcf
	lsl	r3, r3, #0x2
	add	r0, r2, r3
	str	r0, [r1]
	ldr	r0, .L19+0x4
	str	r0, [r1, #0x4]
	ldr	r0, .L19+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0x2
	strh	r0, [r2, #0x28]
	b	.L9
.L20:
	.align	2, 0
.L19:
	.word	0x40000d4
	.word	0x600f9c0
	.word	-0x7ffffe60
.L11:
	ldr	r1, .L21
	mov	r2, #0xcf
	lsl	r2, r2, #0x2
	add	r0, r0, r2
	str	r0, [r1]
	ldr	r0, .L21+0x4
	str	r0, [r1, #0x4]
	ldr	r0, .L21+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	b	.L9
.L22:
	.align	2, 0
.L21:
	.word	0x40000d4
	.word	0x600f9c0
	.word	-0x7ffffe60
.L12:
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x2
	bl	SetBgAttribute
	mov	r0, #0x0
	bl	ShowBg
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L23
	mov	r3, sp
	str	r3, [r1]
	ldr	r0, .L23+0x4
	str	r0, [r1, #0x4]
	ldr	r0, .L23+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	ldr	r1, [r4]
	mov	r0, #0x0
	strh	r0, [r1, #0x28]
.L9:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	0x40000d4
	.word	0x600f9c0
	.word	-0x7efffe60
.Lfe2:
	.size	 VBlankCB_Roulette,.Lfe2-VBlankCB_Roulette
	.align	2, 0
	.type	 InitRouletteBgAndWindows,function
	.thumb_func
InitRouletteBgAndWindows:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r5, #0x0
	str	r5, [sp]
	ldr	r4, .L26
	mov	r0, #0xe6
	lsl	r0, r0, #0x6
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L26+0x4
	mov	r0, #0x1
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r1, [r4]
	mov	r0, #0xbe
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r2, .L26+0x8
	add	r1, r1, r2
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L26+0xc
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r0, .L26+0x10
	bl	InitWindows
	bl	InitTextBoxGfxAndPrinters
	ldr	r0, .L26+0x14
	strb	r5, [r0]
	ldr	r0, .L26+0x18
	mov	r1, sp
	bl	malloc_and_decompress
	ldr	r1, [r4]
	ldr	r2, .L26+0x1c
	add	r1, r1, r2
	str	r0, [r1]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	sRoulette
	.word	sBgTemplates
	.word	0x117c
	.word	0x317c
	.word	sWindowTemplates
	.word	sTextWindowId
	.word	sGrid_Tilemap
	.word	0x397c
.Lfe3:
	.size	 InitRouletteBgAndWindows,.Lfe3-InitRouletteBgAndWindows
	.align	2, 0
	.type	 FreeRoulette,function
	.thumb_func
FreeRoulette:
	push	{r4, r5, lr}
	ldr	r5, .L29
	ldr	r0, [r5]
	ldr	r4, .L29+0x4
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r4, #0x0
	str	r4, [r0]
	bl	FreeAllWindowBuffers
	mov	r0, #0x0
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r0, [r5]
	mov	r2, #0xe6
	lsl	r2, r2, #0x6
	mov	r1, #0x0
	bl	memset
	ldr	r0, [r5]
	bl	Free
	str	r4, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	sRoulette
	.word	0x397c
.Lfe4:
	.size	 FreeRoulette,.Lfe4-FreeRoulette
	.section .rodata
	.align	1, 0
.LC8:
	.short	0x2898
	.short	0x1a6a
	.short	0x2898
.text
	.align	2, 0
	.type	 InitRouletteTableData,function
	.thumb_func
InitRouletteTableData:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r1, .L52
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	ldr	r5, .L52+0x4
	ldr	r3, [r5]
	ldr	r4, .L52+0x8
	ldrb	r0, [r4]
	mov	r1, #0x1
	and	r1, r1, r0
	ldrb	r2, [r3, #0x4]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x4]
	ldrh	r1, [r4]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L32	@cond_branch
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x4]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0, #0x4]
.L32:
	ldr	r1, [r5]
	ldr	r2, .L52+0xc
	ldrb	r0, [r1, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r2
	ldrb	r0, [r0, #0x3]
	add	r1, r1, #0x22
	strb	r0, [r1]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r2
	ldrb	r0, [r0, #0x4]
	add	r1, r1, #0x23
	strb	r0, [r1]
	ldr	r2, [r5]
	ldr	r3, .L52+0x10
	ldrb	r1, [r2, #0x4]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	lsr	r1, r1, #0x7
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r3
	ldrb	r0, [r0]
	strb	r0, [r2, #0x19]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0xf
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x19]
	cmp	r0, #0x1
	bne	.L33	@cond_branch
	ldr	r4, .L52+0x14
	ldr	r3, .L52+0x18
	mov	r0, sp
	ldrh	r2, [r0]
	b	.L50
.L53:
	.align	2, 0
.L52:
	.word	.LC8
	.word	sRoulette
	.word	gSpecialVar_0x8004
	.word	sRouletteTables
	.word	sTableMinBets
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
.L33:
	ldr	r4, .L54
	ldr	r3, .L54+0x4
	mov	r0, sp
	ldrh	r2, [r0, #0x2]
.L50:
	add	r0, r3, #0
	add	r0, r0, #0xa2
	strh	r2, [r0]
	ldr	r1, .L54+0x8
	add	r0, r1, #0
	and	r0, r0, r2
	strh	r0, [r3]
	and	r0, r0, r1
	add	r2, r4, #0
	add	r2, r2, #0xa2
	strh	r0, [r2]
	and	r0, r0, r1
	strh	r0, [r4]
	ldr	r0, .L54+0xc
	ldr	r0, [r0]
	add	r0, r0, #0xb8
	bl	RouletteFlash_Reset
	mov	r4, #0x0
.L38:
	ldr	r5, .L54+0xc
	ldr	r0, [r5]
	add	r0, r0, #0xb8
	lsl	r2, r4, #0x3
	ldr	r1, .L54+0x10
	add	r2, r2, r1
	add	r1, r4, #0
	bl	RouletteFlash_Add
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xc
	bls	.L38	@cond_branch
	mov	r4, #0x0
.L43:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L54+0x14
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L46	@cond_branch
	add	r0, r0, #0x9
	cmp	r1, r0
	bne	.L42	@cond_branch
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	mov	r2, #0x1
	b	.L51
.L55:
	.align	2, 0
.L54:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
	.word	0xffff
	.word	sRoulette
	.word	sFlashData_Colors
	.word	gPlayerParty
.L46:
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	mov	r2, #0x2
.L51:
	orr	r1, r1, r2
	strb	r1, [r0, #0x2]
.L42:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L43	@cond_branch
	bl	RtcCalcLocalTime
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 InitRouletteTableData,.Lfe5-InitRouletteTableData
	.align	2, 0
	.type	 CB2_LoadRoulette,function
	.thumb_func
CB2_LoadRoulette:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L70
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bls	.LCB587
	b	.L57	@long jump
.LCB587:
	lsl	r0, r0, #0x2
	ldr	r1, .L70+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L71:
	.align	2, 0
.L70:
	.word	gMain
	.word	.L68
	.align	2, 0
	.align	2, 0
.L68:
	.word	.L58
	.word	.L59
	.word	.L60
	.word	.L61
	.word	.L62
	.word	.L64
	.word	.L65
	.word	.L66
	.word	.L67
.L58:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	bl	SetVBlankHBlankCallbacksToNull
	bl	ResetVramOamAndBgCntRegs
	bl	ResetAllBgsCoordinates
	b	.L57
.L59:
	bl	InitRouletteBgAndWindows
	bl	DeactivateAllTextPrinters
	mov	r1, #0x90
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L72
	mov	r0, #0x52
	bl	SetGpuReg
	b	.L57
.L73:
	.align	2, 0
.L72:
	.word	0x60a
.L60:
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ResetTempTileDataBuffers
	b	.L57
.L61:
	ldr	r0, .L74
	mov	r2, #0xe0
	lsl	r2, r2, #0x1
	mov	r1, #0x0
	bl	LoadPalette
	ldr	r1, .L74+0x4
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L74+0x8
	str	r4, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L57
.L75:
	.align	2, 0
.L74:
	.word	sWheel_Pal
	.word	gRouletteMenu_Gfx
	.word	gRouletteWheel_Gfx
.L62:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB681
	b	.L56	@long jump
.LCB681:
	bl	InitRouletteTableData
	ldr	r1, .L76
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L57
.L77:
	.align	2, 0
.L76:
	.word	sWheel_Tilemap
.L64:
	mov	r0, #0x0
	bl	LoadOrFreeMiscSpritePalettesAndSheets
	bl	CreateWheelBallSprites
	bl	CreateWheelCenterSprite
	bl	CreateInterfaceSprites
	bl	CreateGridSprites
	bl	CreateGridBallSprites
	bl	CreateWheelIconSprites
	b	.L57
.L65:
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	SetCreditDigits
	mov	r0, #0x6
	bl	SetBallCounterNumLeft
	mov	r0, #0x0
	bl	SetMultiplierSprite
	mov	r0, #0x0
	bl	DrawGridBackground
	ldr	r4, .L78
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L78+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L78+0x8
	mov	r2, #0x3c
	neg	r2, r2
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L78+0xc
	strh	r5, [r0]
	b	.L57
.L79:
	.align	2, 0
.L78:
	.word	sTextWindowId
	.word	Roulette_Text_ControlsInstruction
	.word	gSpriteCoordOffsetX
	.word	gSpriteCoordOffsetY
.L66:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	b	.L57
.L67:
	mov	r0, #0x1
	bl	EnableInterrupts
	ldr	r0, .L80
	bl	SetVBlankCallback
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginHardwarePaletteFade
	ldr	r0, .L80+0x4
	mov	r1, #0x0
	bl	CreateTask
	ldr	r5, .L80+0x8
	ldr	r1, [r5]
	add	r1, r1, #0xa4
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L80+0xc
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r0, #0x6
	strh	r0, [r4, #0x14]
	bl	GetCoins
	strh	r0, [r4, #0x22]
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	AlertTVThatPlayerPlayedRoulette
	ldr	r0, .L80+0x10
	mov	r1, #0x1
	bl	CreateTask
	ldr	r1, [r5]
	add	r1, r1, #0xa5
	strb	r0, [r1]
	ldr	r0, .L80+0x14
	bl	SetMainCallback2
	b	.L56
.L81:
	.align	2, 0
.L80:
	.word	VBlankCB_Roulette
	.word	Task_StartPlaying
	.word	sRoulette
	.word	gTasks
	.word	Task_SpinWheel
	.word	CB2_Roulette
.L57:
	ldr	r1, .L82
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L56:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	gMain
.Lfe6:
	.size	 CB2_LoadRoulette,.Lfe6-CB2_LoadRoulette
	.align	2, 0
	.type	 Task_SpinWheel,function
	.thumb_func
Task_SpinWheel:
	push	{r4, r5, r6, lr}
	ldr	r3, .L89
	ldr	r0, [r3]
	add	r0, r0, #0x21
	ldrb	r2, [r0]
	add	r1, r2, #0x1
	strb	r1, [r0]
	ldr	r1, [r3]
	add	r0, r1, #0
	add	r0, r0, #0x23
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r6, r3, #0
	ldrb	r0, [r0]
	cmp	r2, r0
	bne	.L85	@cond_branch
	add	r1, r1, #0x21
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r2, [r6]
	add	r3, r2, #0
	add	r3, r3, #0x22
	ldrb	r1, [r3]
	ldrh	r0, [r2, #0x24]
	sub	r0, r0, r1
	strh	r0, [r2, #0x24]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L85	@cond_branch
	ldrb	r1, [r3]
	mov	r3, #0xb4
	lsl	r3, r3, #0x1
	add	r0, r3, #0
	sub	r0, r0, r1
	strh	r0, [r2, #0x24]
.L85:
	add	r4, r6, #0
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x24]
	bl	Sin2
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x24]
	bl	Cos2
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L87	@cond_branch
	add	r0, r0, #0xf
.L87:
	lsl	r0, r0, #0xc
	lsr	r5, r0, #0x10
	ldr	r3, [r6]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L88	@cond_branch
	add	r0, r0, #0xf
.L88:
	asr	r0, r0, #0x4
	strh	r0, [r3, #0x32]
	strh	r0, [r3, #0x2c]
	strh	r5, [r3, #0x2e]
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	strh	r0, [r3, #0x30]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	sRoulette
.Lfe7:
	.size	 Task_SpinWheel,.Lfe7-Task_SpinWheel
	.align	2, 0
	.type	 Task_StartPlaying,function
	.thumb_func
Task_StartPlaying:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L92	@cond_branch
	mov	r1, #0x90
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L93
	mov	r0, #0x52
	bl	SetGpuReg
	ldr	r1, .L93+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r5, [r0, #0x14]
	add	r0, r4, #0
	bl	ResetBallDataForNewSpin
	bl	ResetHits
	bl	HideWheelBalls
	mov	r0, #0x0
	bl	DrawGridBackground
	mov	r0, #0x6
	bl	SetBallCounterNumLeft
	ldr	r1, .L93+0x8
	ldr	r2, .L93+0xc
	add	r0, r4, #0
	mov	r3, #0x3
	bl	StartTaskAfterDelayOrInput
.L92:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	0x808
	.word	gTasks
	.word	Task_ContinuePlaying
	.word	0xffff
.Lfe8:
	.size	 Task_StartPlaying,.Lfe8-Task_StartPlaying
	.align	2, 0
	.type	 Task_AskKeepPlaying,function
	.thumb_func
Task_AskKeepPlaying:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	DisplayYesNoMenuDefaultYes
	ldr	r5, .L96
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5]
	ldr	r2, .L96+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L96+0x8
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	sTextWindowId
	.word	Roulette_Text_KeepPlaying
	.word	sYesNoTable_KeepPlaying
.Lfe9:
	.size	 Task_AskKeepPlaying,.Lfe9-Task_AskKeepPlaying
	.align	2, 0
	.type	 Task_ContinuePlaying,function
	.thumb_func
Task_ContinuePlaying:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldr	r1, .L99
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L99+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	gTasks
	.word	Task_SelectFirstEmptySquare
.Lfe10:
	.size	 Task_ContinuePlaying,.Lfe10-Task_ContinuePlaying
	.align	2, 0
	.type	 Task_StopPlaying,function
	.thumb_func
Task_StopPlaying:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L102
	ldr	r0, [r0]
	add	r0, r0, #0xa5
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r4, #0
	bl	ExitRoulette
	pop	{r4}
	pop	{r0}
	bx	r0
.L103:
	.align	2, 0
.L102:
	.word	sRoulette
.Lfe11:
	.size	 Task_StopPlaying,.Lfe11-Task_StopPlaying
	.align	2, 0
	.type	 UpdateGridSelectionRect,function
	.thumb_func
UpdateGridSelectionRect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.LCB1143
	b	.L114	@long jump
.LCB1143:
	lsl	r0, r4, #0x2
	ldr	r1, .L116
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L117:
	.align	2, 0
.L116:
	.word	.L115
	.align	2, 0
	.align	2, 0
.L115:
	.word	.L106
	.word	.L110
	.word	.L110
	.word	.L110
	.word	.L110
	.word	.L113
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L113
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L113
.L106:
	ldr	r0, .L118
	ldr	r0, [r0]
	mov	r1, #0xbe
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x10
	str	r1, [sp]
	mov	r1, #0xd
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	ClearTilemapRect
	b	.L105
.L119:
	.align	2, 0
.L118:
	.word	sRoulette
.L110:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	add	r0, r0, #0xe
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r5, .L120
	ldr	r0, [r5]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	mov	r1, #0x10
	str	r1, [sp]
	mov	r6, #0xd
	str	r6, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	ClearTilemapRect
	ldr	r0, [r5]
	add	r4, r0, r4
	ldr	r1, .L120+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, .L120+0x8
	add	r1, r1, r0
	mov	r0, #0x3
	str	r0, [sp]
	str	r6, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, r8
	mov	r3, #0x7
	bl	SetTilemapRect
	b	.L105
.L121:
	.align	2, 0
.L120:
	.word	sRoulette
	.word	0x397c
	.word	0x232
.L113:
	sub	r0, r4, #0x1
	mov	r1, #0x5
	bl	__divsi3
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0xa
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r5, .L122
	ldr	r0, [r5]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	mov	r6, #0x10
	str	r6, [sp]
	mov	r1, #0xd
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	ClearTilemapRect
	ldr	r0, [r5]
	add	r4, r0, r4
	ldr	r1, .L122+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0xa0
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	str	r6, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, #0xe
	add	r3, r7, #0
	bl	SetTilemapRect
	b	.L105
.L123:
	.align	2, 0
.L122:
	.word	sRoulette
	.word	0x397c
.L114:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0xe
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	sub	r0, r4, #0x1
	mov	r1, #0x5
	bl	__divsi3
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0x7
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r5, .L124
	ldr	r0, [r5]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	mov	r1, #0x10
	str	r1, [sp]
	mov	r1, #0xd
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	ClearTilemapRect
	ldr	r0, [r5]
	add	r4, r0, r4
	ldr	r1, .L124+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x88
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	mov	r0, #0x3
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, r8
	add	r3, r7, #0
	bl	SetTilemapRect
.L105:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	sRoulette
	.word	0x397c
.Lfe12:
	.size	 UpdateGridSelectionRect,.Lfe12-UpdateGridSelectionRect
	.align	2, 0
	.type	 UpdateGridSelection,function
	.thumb_func
UpdateGridSelection:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L127
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r0, [r4, #0x10]
	bl	SetMultiplierSprite
	ldrb	r0, [r4, #0x10]
	bl	UpdateGridSelectionRect
	pop	{r4}
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	gTasks
.Lfe13:
	.size	 UpdateGridSelection,.Lfe13-UpdateGridSelection
	.align	2, 0
	.type	 Task_StartHandleBetGridInput,function
	.thumb_func
Task_StartHandleBetGridInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L130
	ldr	r2, [r5]
	mov	r6, #0x0
	mov	r1, #0x1
	strh	r1, [r2, #0x28]
	ldr	r1, .L130+0x4
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r0, [r4, #0x10]
	bl	UpdateGridSelectionRect
	ldr	r0, [r5]
	add	r0, r0, #0x23
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x21
	strb	r6, [r0]
	ldr	r0, .L130+0x8
	str	r0, [r4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	sRoulette
	.word	gTasks
	.word	Task_HandleBetGridInput
.Lfe14:
	.size	 Task_StartHandleBetGridInput,.Lfe14-Task_StartHandleBetGridInput
	.align	2, 0
	.type	 Task_SelectFirstEmptySquare,function
	.thumb_func
Task_SelectFirstEmptySquare:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L148
	ldr	r0, [r1]
	ldr	r2, [r0, #0x8]
	mov	r0, #0x20
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L133	@cond_branch
	mov	r3, #0xb
	ldr	r5, .L148+0x4
	add	r0, r5, #0
	add	r0, r0, #0xe4
	ldr	r0, [r0]
	and	r2, r2, r0
	ldr	r0, .L148+0x8
	mov	ip, r0
	lsl	r7, r6, #0x2
	cmp	r2, #0
	beq	.L140	@cond_branch
	add	r4, r1, #0
	add	r5, r5, #0x8
.L136:
	lsl	r0, r3, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r0, r1
	lsr	r3, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0xd
	bgt	.L140	@cond_branch
	ldr	r1, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L136	@cond_branch
	b	.L140
.L149:
	.align	2, 0
.L148:
	.word	sRoulette
	.word	sGridSelections
	.word	gTasks
.L133:
	mov	r3, #0x6
	ldr	r5, .L150
	add	r0, r5, #0
	add	r0, r0, #0x80
	ldr	r0, [r0]
	and	r2, r2, r0
	ldr	r0, .L150+0x4
	mov	ip, r0
	lsl	r7, r6, #0x2
	cmp	r2, #0
	beq	.L140	@cond_branch
	add	r4, r1, #0
	add	r5, r5, #0x8
.L143:
	lsl	r0, r3, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r0, r1
	lsr	r3, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0x9
	bgt	.L140	@cond_branch
	ldr	r1, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L143	@cond_branch
.L140:
	add	r4, r7, r6
	lsl	r4, r4, #0x3
	add	r4, r4, ip
	mov	r5, #0x0
	strh	r3, [r4, #0x10]
	add	r0, r6, #0
	bl	ResetBallDataForNewSpin
	ldrb	r0, [r4, #0x10]
	bl	DrawGridBackground
	ldrb	r0, [r4, #0x10]
	bl	SetMultiplierSprite
	ldrb	r0, [r4, #0x10]
	bl	FlashSelectionOnWheel
	strh	r5, [r4, #0xa]
	ldr	r0, .L150+0x8
	str	r0, [r4]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L151:
	.align	2, 0
.L150:
	.word	sGridSelections
	.word	gTasks
	.word	Task_StartHandleBetGridInput
.Lfe15:
	.size	 Task_SelectFirstEmptySquare,.Lfe15-Task_SelectFirstEmptySquare
	.section .rodata
.LC59:
	.byte	-0x5
	.byte	0x5
	.byte	-0x1
	.byte	0x1
.text
	.align	2, 0
	.type	 CanMoveSelectionInDir,function
	.thumb_func
CanMoveSelectionInDir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r6, #0x0
	mov	r7, #0x0
	ldr	r1, .L166
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	ldrb	r0, [r4]
	mov	r8, r0
	cmp	r5, #0
	blt	.L153	@cond_branch
	cmp	r5, #0x1
	bgt	.L155	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r1, #0x5
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r2, #0xf0
	lsl	r2, r2, #0x14
	add	r1, r0, r2
	lsr	r7, r1, #0x18
	cmp	r0, #0
	bne	.L153	@cond_branch
	mov	r6, #0x5
	b	.L153
.L167:
	.align	2, 0
.L166:
	.word	.LC59
.L155:
	cmp	r5, #0x3
	bgt	.L153	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r1, #0x5
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x13
	add	r0, r1, r2
	lsr	r7, r0, #0x18
	cmp	r1, #0
	bne	.L153	@cond_branch
	mov	r6, #0x1
.L153:
	mov	r1, sp
	add	r0, r1, r5
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r2, [r4]
	add	r0, r0, r2
	strh	r0, [r4]
	lsl	r1, r6, #0x18
	asr	r3, r1, #0x18
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r7, #0x18
	cmp	r0, r3
	bge	.L162	@cond_branch
	asr	r0, r2, #0x18
	strh	r0, [r4]
.L162:
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	asr	r0, r2, #0x18
	cmp	r1, r0
	ble	.L163	@cond_branch
	strh	r3, [r4]
.L163:
	mov	r1, r8
	lsl	r0, r1, #0x18
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	asr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L164	@cond_branch
	mov	r0, #0x0
	b	.L165
.L164:
	mov	r0, #0x1
.L165:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 CanMoveSelectionInDir,.Lfe16-CanMoveSelectionInDir
	.align	2, 0
	.type	 ProcessBetGridInput,function
	.thumb_func
ProcessBetGridInput:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, #0x0
	mov	r9, r0
	mov	r5, #0x0
	ldr	r4, .L180
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L170	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L180+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x0
	bl	CanMoveSelectionInDir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1769
	b	.L169	@long jump
.LCB1769:
.L170:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L171	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L180+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x1
	bl	CanMoveSelectionInDir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1795
	b	.L169	@long jump
.LCB1795:
.L171:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L172	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L180+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x2
	bl	CanMoveSelectionInDir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1821
	b	.L169	@long jump
.LCB1821:
.L172:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L173	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L180+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x3
	bl	CanMoveSelectionInDir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1847
	b	.L169	@long jump
.LCB1847:
.L173:
	cmp	r5, #0
	bne	.LCB1850
	b	.L169	@long jump
.LCB1850:
	ldr	r0, .L180+0x8
	lsl	r6, r7, #0x2
	add	r4, r6, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x10]
	bl	DrawGridBackground
	add	r0, r7, #0
	bl	UpdateGridSelection
	mov	r1, r9
	strh	r1, [r4, #0xa]
	mov	r0, #0x5
	bl	PlaySE
	ldr	r5, .L180+0xc
	ldr	r0, [r5]
	add	r0, r0, #0xb8
	ldr	r1, .L180+0x10
	bl	RouletteFlash_Stop
	ldr	r5, [r5]
	mov	r2, #0xb8
	lsl	r2, r2, #0x1
	add	r3, r5, r2
	ldrb	r2, [r3]
	mov	r1, #0x7f
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xb2
	lsl	r0, r0, #0x1
	add	r3, r5, r0
	ldrb	r2, [r3]
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xac
	lsl	r0, r0, #0x1
	add	r2, r5, r0
	ldrb	r0, [r2]
	and	r1, r1, r0
	strb	r1, [r2]
	ldrb	r0, [r4, #0x10]
	bl	FlashSelectionOnWheel
	mov	r4, #0x0
	mov	r9, r6
	ldr	r1, .L180+0x14
	mov	ip, r1
	mov	r2, #0x8
	add	r2, r2, ip
	mov	sl, r2
.L177:
	ldr	r0, .L180+0xc
	ldr	r5, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x29
	add	r6, r5, #0
	add	r6, r6, #0x3c
	add	r0, r6, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	mov	r1, ip
	add	r3, r0, r1
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, sl
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L180+0x18
	mov	r8, r2
	mov	r0, r8
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	ldr	r0, .L180+0x1c
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L177	@cond_branch
	ldr	r0, .L180+0x8
	mov	r2, r9
	add	r1, r2, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r3, [r1, #0x10]
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	bhi	.L169	@cond_branch
	ldr	r2, .L180+0x20
	mov	r0, #0x10
	ldrsh	r1, [r1, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r1, [r5, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L169	@cond_branch
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	add	r0, r0, #0x29
	add	r0, r6, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L180+0x14
	add	r3, r0, r1
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r1, r1, #0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldrh	r2, [r2]
	add	r1, r1, r2
	mov	r2, r8
	and	r1, r1, r2
	ldrh	r2, [r3, #0x4]
	ldr	r0, .L180+0x1c
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
.L169:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L181:
	.align	2, 0
.L180:
	.word	gMain
	.word	gTasks+0x8
	.word	gTasks
	.word	sRoulette
	.word	0xffff
	.word	gSprites
	.word	0x3ff
	.word	-0x400
	.word	sGridSelections
.Lfe17:
	.size	 ProcessBetGridInput,.Lfe17-ProcessBetGridInput
	.align	2, 0
	.type	 Task_StartSpin,function
	.thumb_func
Task_StartSpin:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IncrementDailyRouletteUses
	ldr	r0, .L185
	ldr	r1, [r0]
	mov	r0, #0xff
	strh	r0, [r1, #0x28]
	ldrb	r2, [r1, #0x19]
	cmp	r2, #0x1
	bne	.L183	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x23
	strb	r2, [r0]
	b	.L184
.L186:
	.align	2, 0
.L185:
	.word	sRoulette
.L183:
	add	r1, r1, #0x23
	mov	r0, #0x0
	strb	r0, [r1]
.L184:
	ldr	r0, .L187
	ldr	r0, [r0]
	add	r0, r0, #0x21
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r1, .L187+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x20
	strh	r1, [r0, #0xa]
	ldr	r1, .L187+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L188:
	.align	2, 0
.L187:
	.word	sRoulette
	.word	gTasks
	.word	Task_SlideGridOffscreen
.Lfe18:
	.size	 Task_StartSpin,.Lfe18-Task_StartSpin
	.align	2, 0
	.type	 Task_PlaceBet,function
	.thumb_func
Task_PlaceBet:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L191
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x1a]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r2, r2, #0x1b
	add	r2, r2, r1
	ldr	r3, .L191+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r5, r1, r3
	ldrh	r0, [r5, #0x10]
	strb	r0, [r2]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	GetMultiplier
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0xc]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	SetMultiplierSprite
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x19]
	ldrh	r0, [r5, #0x22]
	sub	r0, r0, r1
	strh	r0, [r5, #0x22]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L190	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x22]
.L190:
	ldrh	r0, [r5, #0x22]
	bl	SetCreditDigits
	ldr	r0, .L191+0x8
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	sRoulette
	.word	gTasks
	.word	Task_StartSpin
.Lfe19:
	.size	 Task_PlaceBet,.Lfe19-Task_PlaceBet
	.align	2, 0
	.type	 Task_HandleBetGridInput,function
	.thumb_func
Task_HandleBetGridInput:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	ProcessBetGridInput
	ldr	r1, .L205
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1e
	beq	.L196	@cond_branch
	cmp	r0, #0x1e
	bgt	.L200	@cond_branch
	cmp	r0, #0
	beq	.L195	@cond_branch
	b	.L198
.L206:
	.align	2, 0
.L205:
	.word	gTasks
.L200:
	cmp	r0, #0x3b
	beq	.L197	@cond_branch
	b	.L198
.L195:
	ldrb	r0, [r4, #0x10]
	b	.L204
.L196:
	mov	r0, #0x0
.L204:
	bl	UpdateGridSelectionRect
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	b	.L194
.L197:
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
	b	.L194
.L198:
	ldr	r0, .L207
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
.L194:
	ldr	r0, .L207+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L201	@cond_branch
	ldr	r0, .L207+0x8
	ldr	r3, [r0]
	ldr	r2, .L207+0xc
	ldr	r1, .L207
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x10
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r1, [r3, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L202	@cond_branch
	mov	r0, #0x16
	bl	PlaySE
	b	.L201
.L208:
	.align	2, 0
.L207:
	.word	gTasks
	.word	gMain
	.word	sRoulette
	.word	sGridSelections
.L202:
	mov	r0, #0x5f
	bl	m4aSongNumStart
	ldr	r0, .L209
	str	r0, [r4]
.L201:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L210:
	.align	2, 0
.L209:
	.word	Task_PlaceBet
.Lfe20:
	.size	 Task_HandleBetGridInput,.Lfe20-Task_HandleBetGridInput
	.align	2, 0
	.type	 Task_SlideGridOffscreen,function
	.thumb_func
Task_SlideGridOffscreen:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L216
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	ldrh	r0, [r4, #0xa]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L212	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L213	@cond_branch
	ldr	r1, .L216+0x4
	ldrh	r0, [r1]
	add	r0, r0, #0x2
	strh	r0, [r1]
.L213:
	ldr	r0, .L216+0x8
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x4
	strh	r0, [r1, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x68
	bne	.L215	@cond_branch
	ldr	r2, .L216+0xc
	add	r0, r1, #0
	add	r0, r0, #0x55
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L216+0x10
	str	r1, [r0]
	b	.L215
.L217:
	.align	2, 0
.L216:
	.word	gTasks
	.word	gSpriteCoordOffsetX
	.word	sRoulette
	.word	gSprites
	.word	SpriteCallbackDummy
.L212:
	mov	r0, #0x1
	mov	r1, #0xff
	bl	ShowHideGridIcons
	mov	r0, #0x1
	mov	r1, #0xff
	bl	ShowHideGridBalls
	ldr	r0, .L218
	str	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
.L215:
	pop	{r4}
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	Task_InitBallRoll
.Lfe21:
	.size	 Task_SlideGridOffscreen,.Lfe21-Task_SlideGridOffscreen
	.align	2, 0
	.type	 GetRandomForBallTravelDistance,function
	.thumb_func
GetRandomForBallTravelDistance:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L258
	ldr	r3, [r0]
	ldrb	r2, [r3, #0x2]
	add	r5, r0, #0
	cmp	r2, #0x2
	bgt	.L254	@cond_branch
	cmp	r2, #0x1
	bge	.L223	@cond_branch
	b	.L240
.L259:
	.align	2, 0
.L258:
	.word	sRoulette
.L254:
	cmp	r2, #0x3
	beq	.L231	@cond_branch
	b	.L240
.L223:
	ldr	r0, .L260
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bhi	.L224	@cond_branch
	cmp	r4, #0xb
	bls	.L226	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L257	@cond_branch
.L226:
	ldr	r0, .L260+0x4
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x1
	b	.L256
.L261:
	.align	2, 0
.L260:
	.word	gLocalTime
	.word	sRouletteTables
.L224:
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L229	@cond_branch
	ldr	r0, .L262
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x1
	b	.L256
.L263:
	.align	2, 0
.L262:
	.word	sRouletteTables
.L229:
	ldr	r0, .L264
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	b	.L256
.L265:
	.align	2, 0
.L264:
	.word	sRouletteTables
.L231:
	ldr	r0, .L266
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x6
	bhi	.L232	@cond_branch
	cmp	r4, #0x5
	bls	.L234	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L257	@cond_branch
.L234:
	ldr	r0, .L266+0x4
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x1
	b	.L256
.L267:
	.align	2, 0
.L266:
	.word	gLocalTime
	.word	sRouletteTables
.L232:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L237	@cond_branch
	cmp	r4, #0x6
	bls	.L237	@cond_branch
	ldr	r0, .L268
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x2
	b	.L256
.L269:
	.align	2, 0
.L268:
	.word	sRouletteTables
.L237:
	ldr	r1, .L270
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	lsr	r0, r0, #0x1
	b	.L256
.L271:
	.align	2, 0
.L270:
	.word	sRouletteTables
.L240:
	ldr	r0, .L272
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bhi	.L241	@cond_branch
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L242	@cond_branch
.L257:
	mov	r0, #0x1
	b	.L255
.L273:
	.align	2, 0
.L272:
	.word	gLocalTime
.L242:
	ldr	r1, .L274
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	lsr	r0, r0, #0x1
	b	.L256
.L275:
	.align	2, 0
.L274:
	.word	sRouletteTables
.L241:
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L245	@cond_branch
	cmp	r4, #0xc
	bls	.L246	@cond_branch
	ldr	r1, .L276
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	lsr	r0, r0, #0x1
	b	.L256
.L277:
	.align	2, 0
.L276:
	.word	sRouletteTables
.L246:
	ldr	r1, .L278
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	b	.L256
.L279:
	.align	2, 0
.L278:
	.word	sRouletteTables
.L245:
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L249	@cond_branch
	cmp	r4, #0xc
	bls	.L250	@cond_branch
	ldr	r1, .L280
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	b	.L256
.L281:
	.align	2, 0
.L280:
	.word	sRouletteTables
.L250:
	ldr	r1, .L282
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	b	.L256
.L283:
	.align	2, 0
.L282:
	.word	sRouletteTables
.L249:
	ldr	r1, .L284
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x18
.L256:
.L255:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L285:
	.align	2, 0
.L284:
	.word	sRouletteTables
.Lfe22:
	.size	 GetRandomForBallTravelDistance,.Lfe22-GetRandomForBallTravelDistance
	.section .rodata
	.align	1, 0
.LC94:
	.short	0x0
	.short	0xb4
	.short	0x5a
	.short	0x10e
.text
	.align	2, 0
	.type	 Task_InitBallRoll,function
	.thumb_func
Task_InitBallRoll:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	mov	r4, #0x0
	ldr	r1, .L297
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	add	r0, r7, #0
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r3, .L297+0x4
	ldr	r0, [r3]
	ldr	r2, .L297+0x8
	mov	r5, sl
	lsl	r1, r5, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r2, [r1, #0x14]
	add	r0, r0, #0x7c
	strb	r2, [r0]
	ldr	r0, [r3]
	add	r2, r0, #0
	add	r2, r2, #0x7f
	strb	r4, [r2]
	sub	r2, r2, #0x1
	strb	r4, [r2]
	add	r0, r0, #0x7d
	strb	r4, [r0]
	ldrh	r0, [r1, #0x18]
	add	r1, r7, #0
	bl	GetRandomForBallTravelDistance
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r1, r4, #0x18
	add	r0, r7, #0
	bl	__modsi3
	lsr	r4, r4, #0x19
	sub	r0, r0, r4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L297+0xc
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r5, #0x1
	cmp	r0, #0xc
	bgt	.L287	@cond_branch
	mov	r5, #0x0
.L287:
	cmp	r6, #0x4f
	bhi	.L289	@cond_branch
	lsl	r0, r5, #0x19
	b	.L296
.L298:
	.align	2, 0
.L297:
	.word	.LC94
	.word	sRoulette
	.word	gTasks
	.word	gLocalTime
.L289:
	lsl	r1, r5, #0x18
	asr	r1, r1, #0x18
	mov	r0, #0x1
	sub	r0, r0, r1
	lsl	r0, r0, #0x19
.L296:
	lsr	r5, r0, #0x18
	ldr	r0, .L299
	ldr	r6, [r0]
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	ldr	r1, .L299+0x4
	add	r0, r0, r1
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	ldrh	r0, [r0, #0x1a]
	add	r4, r4, r0
	add	r0, r6, #0
	add	r0, r0, #0x80
	strh	r4, [r0]
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L291	@cond_branch
	ldr	r1, .L299+0x8
	bl	__addsf3
.L291:
	ldr	r1, .L299+0xc
	bl	__divsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	mov	r2, #0x82
	add	r2, r2, r6
	mov	r8, r2
	strh	r0, [r2]
	add	r0, r6, #0
	add	r0, r0, #0x84
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	mov	r0, #0x88
	add	r0, r0, r6
	mov	r9, r0
	mov	r0, #0x1
	and	r0, r0, r7
	lsl	r1, r5, #0x18
	asr	r1, r1, #0x18
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	mov	r1, #0x0
	ldrsh	r4, [r0, r1]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L292	@cond_branch
	ldr	r1, .L299+0x8
	bl	__addsf3
.L292:
	mov	r2, r9
	str	r0, [r2]
	add	r7, r6, #0
	add	r7, r7, #0x8c
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	ldr	r5, .L299+0x4
	add	r0, r0, r5
	mov	r1, #0x18
	ldrsh	r4, [r0, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r5, r0, #0
	cmp	r4, #0
	bge	.L293	@cond_branch
	ldr	r1, .L299+0x8
	bl	__addsf3
	add	r5, r0, #0
.L293:
	str	r5, [r7]
	add	r7, r6, #0
	add	r7, r7, #0x90
	ldr	r1, .L299+0x10
	add	r0, r5, #0
	bl	__mulsf3
	add	r1, r5, #0
	bl	__subsf3
	add	r5, r0, #0
	mov	r2, r8
	mov	r0, #0x0
	ldrsh	r4, [r2, r0]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L294	@cond_branch
	ldr	r1, .L299+0x8
	bl	__addsf3
	add	r2, r0, #0
.L294:
	add	r0, r5, #0
	add	r1, r2, #0
	bl	__divsf3
	str	r0, [r7]
	add	r1, r6, #0
	add	r1, r1, #0x94
	ldr	r0, .L299+0x14
	str	r0, [r1]
	add	r1, r1, #0x8
	ldr	r0, .L299+0x18
	str	r0, [r1]
	add	r5, r6, #0
	add	r5, r5, #0x98
	mov	r1, r8
	mov	r2, #0x0
	ldrsh	r4, [r1, r2]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L295	@cond_branch
	ldr	r1, .L299+0x8
	bl	__addsf3
	add	r2, r0, #0
.L295:
	ldr	r0, .L299+0x1c
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	str	r0, [r5]
	add	r1, r6, #0
	add	r1, r1, #0xa0
	ldr	r0, .L299+0x20
	str	r0, [r1]
	ldr	r1, .L299+0x24
	mov	r5, sl
	lsl	r0, r5, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L299+0x28
	str	r1, [r0]
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L300:
	.align	2, 0
.L299:
	.word	sRoulette
	.word	sRouletteTables
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x40a00000	@ float 5.00000000000000000000e0
	.word 0x3f000000	@ float 5.00000000000000000000e-1
	.word 0x42880000	@ float 6.80000000000000000000e1
	.word 0x0	@ float 0.00000000000000000000e0
	.word 0x41000000	@ float 8.00000000000000000000e0
	.word 0x42100000	@ float 3.60000000000000000000e1
	.word	gTasks
	.word	Task_RollBall
.Lfe23:
	.size	 Task_InitBallRoll,.Lfe23-Task_InitBallRoll
	.align	2, 0
	.type	 Task_RollBall,function
	.thumb_func
Task_RollBall:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L302
	ldr	r3, [r4]
	ldrb	r1, [r3, #0x3]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r3, #0x3]
	ldr	r3, [r4]
	add	r2, r3, #0
	add	r2, r2, #0x7c
	add	r1, r3, #0
	add	r1, r1, #0x3c
	ldrb	r2, [r2]
	add	r1, r1, r2
	ldrb	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L302+0x4
	add	r1, r1, r2
	str	r1, [r3, #0x38]
	ldr	r2, .L302+0x8
	str	r2, [r1, #0x1c]
	ldr	r1, .L302+0xc
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrh	r1, [r4, #0x14]
	add	r1, r1, #0x1
	strh	r1, [r4, #0x14]
	ldrh	r0, [r4, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x18]
	mov	r0, #0x6
	sub	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	SetBallCounterNumLeft
	mov	r0, #0x5c
	bl	m4aSongNumStart
	ldr	r0, .L302+0x10
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L303:
	.align	2, 0
.L302:
	.word	sRoulette
	.word	gSprites
	.word	SpriteCB_RollBall_Start
	.word	gTasks
	.word	Task_RecordBallHit
.Lfe24:
	.size	 Task_RollBall,.Lfe24-Task_RollBall
	.align	2, 0
	.type	 Task_RecordBallHit,function
	.thumb_func
Task_RecordBallHit:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L314
	ldr	r3, [r6]
	add	r0, r3, #0
	add	r0, r0, #0x7d
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L305	@cond_branch
	ldrb	r1, [r3, #0x3]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L306	@cond_branch
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L305	@cond_branch
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3, #0x3]
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	b	.L305
.L315:
	.align	2, 0
.L314:
	.word	sRoulette
.L306:
	ldr	r2, .L316
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r2
	mov	r2, #0xa
	ldrsh	r0, [r5, r2]
	add	r7, r1, #0
	cmp	r0, #0
	bne	.L309	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x7e
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	RecordHit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x1a]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r2, r2, #0x1b
	add	r2, r2, r1
	ldrb	r1, [r2]
	bl	IsHitInBetSelection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x12]
	cmp	r0, #0x1
	bne	.L309	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0xb8
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	bl	RouletteFlash_Enable
.L309:
	ldr	r0, .L316
	add	r1, r7, r4
	lsl	r1, r1, #0x3
	add	r4, r1, r0
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3c
	bgt	.L311	@cond_branch
	ldr	r0, .L316+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L312	@cond_branch
	mov	r0, #0x3c
	strh	r0, [r4, #0xa]
.L312:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	b	.L305
.L317:
	.align	2, 0
.L316:
	.word	gTasks
	.word	gMain
.L311:
	ldr	r0, .L318
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	DrawGridBackground
	ldrh	r1, [r4, #0x20]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	ShowHideGridIcons
	ldrb	r1, [r4, #0x14]
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	ShowHideGridBalls
	mov	r0, #0x20
	strh	r0, [r4, #0xa]
	ldr	r0, .L318+0x4
	str	r0, [r4]
.L305:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	sRoulette
	.word	Task_SlideGridOnscreen
.Lfe25:
	.size	 Task_RecordBallHit,.Lfe25-Task_RecordBallHit
	.align	2, 0
	.type	 Task_SlideGridOnscreen,function
	.thumb_func
Task_SlideGridOnscreen:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L328
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r0, [r4, #0xa]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L321	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L322	@cond_branch
	ldr	r1, .L328+0x4
	ldrh	r0, [r1]
	sub	r0, r0, #0x2
	strh	r0, [r1]
.L322:
	ldr	r0, .L328+0x8
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x26]
	sub	r0, r0, #0x4
	strh	r0, [r1, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x68
	bne	.L324	@cond_branch
	ldr	r2, .L328+0xc
	add	r0, r1, #0
	add	r0, r0, #0x55
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L328+0x10
	str	r1, [r0]
	b	.L324
.L329:
	.align	2, 0
.L328:
	.word	gTasks
	.word	gSpriteCoordOffsetX
	.word	sRoulette
	.word	gSprites
	.word	SpriteCB_GridSquare
.L321:
	ldrh	r0, [r4, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ShowHideWinSlotCursor
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	bne	.L325	@cond_branch
	mov	r0, #0x79
	b	.L327
.L325:
	mov	r0, #0x3d
.L327:
	strh	r0, [r4, #0xa]
	ldr	r0, .L330
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L330+0x4
	str	r0, [r1]
.L324:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L331:
	.align	2, 0
.L330:
	.word	gTasks
	.word	Task_FlashBallOnWinningSquare
.Lfe26:
	.size	 Task_SlideGridOnscreen,.Lfe26-Task_SlideGridOnscreen
	.align	2, 0
	.type	 Task_FlashBallOnWinningSquare,function
	.thumb_func
Task_FlashBallOnWinningSquare:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L341
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r0, [r4, #0xa]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L333	@cond_branch
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L339	@cond_branch
	add	r0, r0, #0xf
.L339:
	asr	r0, r0, #0x4
	lsl	r0, r0, #0x4
	sub	r0, r1, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	beq	.L336	@cond_branch
	cmp	r0, #0x8
	bne	.L340	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xff
	bl	ShowHideGridIcons
	mov	r0, #0x0
	mov	r1, #0xff
	bl	ShowHideGridBalls
	b	.L340
.L342:
	.align	2, 0
.L341:
	.word	gTasks
.L336:
	ldrh	r1, [r4, #0x20]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	ShowHideGridIcons
	ldrb	r1, [r4, #0x14]
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	ShowHideGridBalls
	b	.L340
.L333:
	ldr	r1, .L343
	add	r0, r2, #0
	mov	r2, #0x1e
	mov	r3, #0x0
	bl	StartTaskAfterDelayOrInput
.L340:
	pop	{r4}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	Task_PrintSpinResult
.Lfe27:
	.size	 Task_FlashBallOnWinningSquare,.Lfe27-Task_FlashBallOnWinningSquare
	.align	2, 0
	.type	 Task_TryIncrementWins,function
	.thumb_func
Task_TryIncrementWins:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L355
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L352	@cond_branch
	cmp	r0, #0
	blt	.L352	@cond_branch
	cmp	r0, #0x2
	bgt	.L352	@cond_branch
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L346	@cond_branch
	mov	r0, #0x1d
	bl	GetGameStat
	ldrh	r1, [r4, #0x1e]
	add	r1, r1, #0x1
	strh	r1, [r4, #0x1e]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r0, r1
	bcs	.L350	@cond_branch
	mov	r0, #0x1e
	ldrsh	r1, [r4, r0]
	mov	r0, #0x1d
	bl	SetGameStat
.L350:
	ldr	r1, .L355+0x4
	ldr	r2, .L355+0x8
	add	r0, r5, #0
	mov	r3, #0x3
	bl	StartTaskAfterDelayOrInput
	b	.L346
.L356:
	.align	2, 0
.L355:
	.word	gTasks
	.word	Task_PrintPayout
	.word	0xffff
.L352:
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L346	@cond_branch
	ldr	r1, .L357
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r2, [r0, #0x1e]
	ldr	r1, .L357+0x4
	ldr	r2, .L357+0x8
	add	r0, r5, #0
	mov	r3, #0x3
	bl	StartTaskAfterDelayOrInput
.L346:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L358:
	.align	2, 0
.L357:
	.word	gTasks
	.word	Task_EndTurn
	.word	0xffff
.Lfe28:
	.size	 Task_TryIncrementWins,.Lfe28-Task_TryIncrementWins
	.align	2, 0
	.type	 Task_PrintSpinResult,function
	.thumb_func
Task_PrintSpinResult:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L369
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x12
	ldrsh	r1, [r0, r2]
	cmp	r1, #0
	beq	.L366	@cond_branch
	cmp	r1, #0
	blt	.L366	@cond_branch
	cmp	r1, #0x2
	bgt	.L366	@cond_branch
	mov	r1, #0xc
	ldrsh	r0, [r0, r1]
	cmp	r0, #0xc
	bne	.L363	@cond_branch
	ldr	r0, .L369+0x4
	bl	PlayFanfare
	ldr	r4, .L369+0x8
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L369+0xc
	b	.L368
.L370:
	.align	2, 0
.L369:
	.word	gTasks
	.word	0x185
	.word	sTextWindowId
	.word	Roulette_Text_Jackpot
.L363:
	mov	r0, #0xc3
	lsl	r0, r0, #0x1
	bl	PlayFanfare
	ldr	r4, .L371
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L371+0x4
.L368:
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	b	.L360
.L372:
	.align	2, 0
.L371:
	.word	sTextWindowId
	.word	Roulette_Text_ItsAHit
.L366:
	mov	r0, #0x20
	bl	m4aSongNumStart
	ldr	r4, .L373
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L373+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
.L360:
	ldr	r1, .L373+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	ldr	r1, .L373+0xc
	str	r1, [r0]
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L374:
	.align	2, 0
.L373:
	.word	sTextWindowId
	.word	Roulette_Text_NothingDoing
	.word	gTasks
	.word	Task_TryIncrementWins
.Lfe29:
	.size	 Task_PrintSpinResult,.Lfe29-Task_PrintSpinResult
	.align	2, 0
	.type	 Task_GivePayout,function
	.thumb_func
Task_GivePayout:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L385
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x16
	ldrsh	r5, [r4, r0]
	cmp	r5, #0
	beq	.L377	@cond_branch
	cmp	r5, #0x3
	beq	.L380	@cond_branch
	ldrh	r0, [r4, #0x16]
	add	r0, r0, #0x1
	b	.L384
.L386:
	.align	2, 0
.L385:
	.word	gTasks
.L377:
	ldrh	r0, [r4, #0x22]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x22]
	mov	r0, #0x15
	bl	m4aSongNumStart
	ldrh	r0, [r4, #0x22]
	bl	SetCreditDigits
	mov	r2, #0x22
	ldrsh	r1, [r4, r2]
	ldr	r0, .L387
	cmp	r1, r0
	ble	.L378	@cond_branch
	strh	r5, [r4, #0xa]
	b	.L376
.L388:
	.align	2, 0
.L387:
	.word	0x270e
.L378:
	ldrh	r0, [r4, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x16]
	add	r0, r0, #0x1
	b	.L384
.L380:
	mov	r0, #0x15
	bl	m4aSongNumStop
	mov	r0, #0x0
.L384:
	strh	r0, [r4, #0x16]
.L376:
	ldr	r0, .L389
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L383	@cond_branch
	ldr	r1, .L389+0x4
	ldr	r2, .L389+0x8
	add	r0, r6, #0
	mov	r3, #0x3
	bl	StartTaskAfterDelayOrInput
.L383:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L390:
	.align	2, 0
.L389:
	.word	gTasks
	.word	Task_EndTurn
	.word	0xffff
.Lfe30:
	.size	 Task_GivePayout,.Lfe30-Task_GivePayout
	.align	2, 0
	.type	 Task_PrintPayout,function
	.thumb_func
Task_PrintPayout:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L392
	ldr	r1, .L392+0x4
	mov	r9, r1
	ldr	r1, [r1]
	ldrb	r2, [r1, #0x19]
	ldr	r1, .L392+0x8
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	mov	r1, r2
	mul	r1, r1, r0
	add	r0, r3, #0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r2, .L392+0xc
	mov	r8, r2
	ldr	r1, .L392+0x10
	mov	r0, r8
	bl	StringExpandPlaceholders
	ldr	r5, .L392+0x14
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r6, #0x0
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	mov	r2, r8
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r1, r9
	ldr	r0, [r1]
	ldrb	r1, [r0, #0x19]
	mov	r2, #0xc
	ldrsh	r0, [r4, r2]
	mul	r0, r0, r1
	strh	r0, [r4, #0xa]
	strh	r6, [r4, #0x16]
	ldr	r0, .L392+0x18
	str	r0, [r4]
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L393:
	.align	2, 0
.L392:
	.word	gStringVar1
	.word	sRoulette
	.word	gTasks
	.word	gStringVar4
	.word	Roulette_Text_YouveWonXCoins
	.word	sTextWindowId
	.word	Task_GivePayout
.Lfe31:
	.size	 Task_PrintPayout,.Lfe31-Task_PrintPayout
	.align	2, 0
	.type	 Task_EndTurn,function
	.thumb_func
Task_EndTurn:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L395
	ldr	r0, [r5]
	add	r0, r0, #0xb8
	ldr	r1, .L395+0x4
	bl	RouletteFlash_Stop
	ldr	r6, [r5]
	mov	r0, #0xb8
	lsl	r0, r0, #0x1
	add	r3, r6, r0
	ldrb	r2, [r3]
	mov	r1, #0x7f
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xb2
	lsl	r0, r0, #0x1
	add	r3, r6, r0
	ldrb	r2, [r3]
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xac
	lsl	r0, r0, #0x1
	add	r2, r6, r0
	ldrb	r0, [r2]
	and	r1, r1, r0
	strb	r1, [r2]
	ldr	r6, .L395+0x8
	ldr	r2, [r5]
	ldr	r5, .L395+0xc
	ldr	r0, .L395+0x10
	lsl	r3, r4, #0x2
	add	r3, r3, r4
	lsl	r3, r3, #0x3
	add	r3, r3, r0
	mov	r0, #0x20
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r0, [r0]
	add	r2, r2, r0
	add	r2, r2, #0x43
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L395+0x14
	str	r0, [r3]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	sRoulette
	.word	0xffff
	.word	gSprites
	.word	sGridSelections
	.word	gTasks
	.word	Task_TryPrintEndTurnMsg
.Lfe32:
	.size	 Task_EndTurn,.Lfe32-Task_EndTurn
	.align	2, 0
	.type	 Task_TryPrintEndTurnMsg,function
	.thumb_func
Task_TryPrintEndTurnMsg:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	ldr	r1, .L410
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x0
	strh	r5, [r0, #0x10]
	ldr	r4, .L410+0x4
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	strb	r2, [r1]
	mov	r0, #0x0
	bl	DrawGridBackground
	ldr	r3, .L410+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r7, r3, #0
	mov	r0, #0x8
	add	r0, r0, r7
	mov	ip, r0
	ldr	r1, .L410+0xc
	mov	r8, r1
.L401:
	ldr	r0, .L410+0x4
	ldr	r4, [r0]
	add	r0, r4, r5
	add	r0, r0, #0x65
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r7
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, ip
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L410+0x10
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	mov	r0, r8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L401	@cond_branch
	ldr	r0, .L410
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r2, r1, r0
	mov	r1, #0x22
	ldrsh	r0, [r2, r1]
	ldrb	r4, [r4, #0x19]
	cmp	r0, r4
	blt	.L403	@cond_branch
	mov	r1, #0x14
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x6
	bne	.L404	@cond_branch
	ldr	r4, .L410+0x14
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L410+0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L410+0x1c
	b	.L409
.L411:
	.align	2, 0
.L410:
	.word	gTasks
	.word	sRoulette
	.word	gSprites
	.word	-0x400
	.word	0x3ff
	.word	sTextWindowId
	.word	Roulette_Text_BoardWillBeCleared
	.word	Task_ClearBoard
.L404:
	mov	r0, #0x22
	ldrsh	r1, [r2, r0]
	ldr	r0, .L412
	cmp	r1, r0
	bne	.L406	@cond_branch
	ldr	r4, .L412+0x4
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L412+0x8
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L412+0xc
.L409:
	ldr	r2, .L412+0x10
	add	r0, r6, #0
	mov	r3, #0x3
	bl	StartTaskAfterDelayOrInput
	b	.L408
.L413:
	.align	2, 0
.L412:
	.word	0x270f
	.word	sTextWindowId
	.word	Roulette_Text_CoinCaseIsFull
	.word	Task_AskKeepPlaying
	.word	0xffff
.L406:
	ldr	r0, .L414
	str	r0, [r2]
	b	.L408
.L415:
	.align	2, 0
.L414:
	.word	Task_AskKeepPlaying
.L403:
	ldr	r4, .L416
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L416+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L416+0x8
	add	r0, r6, #0
	mov	r2, #0x3c
	mov	r3, #0x3
	bl	StartTaskAfterDelayOrInput
.L408:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L417:
	.align	2, 0
.L416:
	.word	sTextWindowId
	.word	Roulette_Text_NoCoinsLeft
	.word	Task_StopPlaying
.Lfe33:
	.size	 Task_TryPrintEndTurnMsg,.Lfe33-Task_TryPrintEndTurnMsg
	.align	2, 0
	.type	 Task_ClearBoard,function
	.thumb_func
Task_ClearBoard:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r1, .L426
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r4, [r0, #0x14]
	add	r0, r5, #0
	bl	ResetBallDataForNewSpin
	bl	ResetHits
	bl	HideWheelBalls
	mov	r0, #0x0
	bl	DrawGridBackground
	mov	r0, #0x6
	bl	SetBallCounterNumLeft
	ldr	r7, .L426+0x4
	ldr	r3, .L426+0x8
	mov	r6, #0x5
	neg	r6, r6
.L422:
	ldr	r0, [r3]
	add	r0, r0, r4
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xb
	bls	.L422	@cond_branch
	ldr	r1, .L426
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	mov	r0, #0x22
	ldrsh	r1, [r2, r0]
	ldr	r0, .L426+0xc
	cmp	r1, r0
	bne	.L424	@cond_branch
	ldr	r4, .L426+0x10
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L426+0x14
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L426+0x18
	ldr	r2, .L426+0x1c
	add	r0, r5, #0
	mov	r3, #0x3
	bl	StartTaskAfterDelayOrInput
	b	.L425
.L427:
	.align	2, 0
.L426:
	.word	gTasks
	.word	gSprites
	.word	sRoulette
	.word	0x270f
	.word	sTextWindowId
	.word	Roulette_Text_CoinCaseIsFull
	.word	Task_AskKeepPlaying
	.word	0xffff
.L424:
	ldr	r0, .L428
	str	r0, [r2]
.L425:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L429:
	.align	2, 0
.L428:
	.word	Task_AskKeepPlaying
.Lfe34:
	.size	 Task_ClearBoard,.Lfe34-Task_ClearBoard
	.align	2, 0
	.type	 ExitRoulette,function
	.thumb_func
ExitRoulette:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L434
	ldr	r0, [r4]
	add	r0, r0, #0xb8
	ldr	r1, .L434+0x4
	bl	RouletteFlash_Stop
	ldr	r0, [r4]
	add	r0, r0, #0xb8
	bl	RouletteFlash_Reset
	ldr	r1, .L434+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x22]
	bl	SetCoins
	bl	GetCoins
	ldr	r1, [r4]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x19]
	cmp	r0, r1
	bcs	.L431	@cond_branch
	ldr	r1, .L434+0xc
	mov	r0, #0x1
	b	.L433
.L435:
	.align	2, 0
.L434:
	.word	sRoulette
	.word	0xffff
	.word	gTasks
	.word	gSpecialVar_0x8004
.L431:
	ldr	r1, .L436
	mov	r0, #0x0
.L433:
	strh	r0, [r1]
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	AlertTVOfNewCoinTotal
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginHardwarePaletteFade
	ldr	r1, .L436+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L436+0x8
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L437:
	.align	2, 0
.L436:
	.word	gSpecialVar_0x8004
	.word	gTasks
	.word	Task_ExitRoulette
.Lfe35:
	.size	 ExitRoulette,.Lfe35-ExitRoulette
	.align	2, 0
	.type	 Task_ExitRoulette,function
	.thumb_func
Task_ExitRoulette:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L439	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r1, .L440
	ldr	r0, .L440+0x4
	strh	r4, [r0]
	strh	r4, [r1]
	bl	ResetVramOamAndBgCntRegs
	bl	ResetAllBgsCoordinates
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	FreeRoulette
	ldr	r1, .L440+0x8
	ldr	r0, .L440+0xc
	str	r0, [r1]
	ldr	r0, .L440+0x10
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L439:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L441:
	.align	2, 0
.L440:
	.word	gSpriteCoordOffsetX
	.word	gSpriteCoordOffsetY
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptHandleMusic
	.word	CB2_ReturnToField
.Lfe36:
	.size	 Task_ExitRoulette,.Lfe36-Task_ExitRoulette
	.align	2, 0
	.type	 Task_WaitForNextTask,function
	.thumb_func
Task_WaitForNextTask:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L447
	ldr	r3, [r1]
	add	r0, r3, #0
	add	r0, r0, #0xa8
	ldrh	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0
	beq	.L444	@cond_branch
	ldr	r0, .L447+0x4
	add	r2, r3, #0
	add	r2, r2, #0xaa
	ldrh	r1, [r0, #0x2e]
	ldrh	r0, [r2]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L443	@cond_branch
.L444:
	ldr	r1, .L447+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0xac
	ldr	r1, [r1]
	str	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xaa
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L445	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L445:
	ldr	r2, [r5]
	add	r0, r2, #0
	add	r0, r0, #0xac
	mov	r1, #0x0
	str	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
.L443:
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0xa8
	ldrh	r2, [r1]
	ldr	r0, .L447+0xc
	cmp	r2, r0
	beq	.L446	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1]
.L446:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L448:
	.align	2, 0
.L447:
	.word	sRoulette
	.word	gMain
	.word	gTasks
	.word	0xffff
.Lfe37:
	.size	 Task_WaitForNextTask,.Lfe37-Task_WaitForNextTask
	.align	2, 0
	.type	 StartTaskAfterDelayOrInput,function
	.thumb_func
StartTaskAfterDelayOrInput:
	push	{r4, r5, r6, r7, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r7, r3, #0x10
	ldr	r2, .L453
	ldr	r0, [r2]
	mov	ip, r0
	mov	r3, ip
	add	r3, r3, #0xb4
	ldr	r1, .L453+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r3]
	add	r3, r1, #0
	cmp	r5, #0
	bne	.L450	@cond_branch
	add	r5, r0, #0
.L450:
	mov	r0, ip
	add	r0, r0, #0xac
	str	r5, [r0]
	sub	r0, r0, #0x4
	strh	r4, [r0]
	ldr	r0, .L453+0x8
	cmp	r4, r0
	bne	.L451	@cond_branch
	cmp	r7, #0
	bne	.L451	@cond_branch
	mov	r1, ip
	add	r1, r1, #0xaa
	ldrh	r0, [r1]
	orr	r4, r4, r0
	strh	r4, [r1]
	b	.L452
.L454:
	.align	2, 0
.L453:
	.word	sRoulette
	.word	gTasks
	.word	0xffff
.L451:
	ldr	r0, [r2]
	add	r0, r0, #0xaa
	strh	r7, [r0]
.L452:
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldr	r1, .L455
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L456:
	.align	2, 0
.L455:
	.word	Task_WaitForNextTask
.Lfe38:
	.size	 StartTaskAfterDelayOrInput,.Lfe38-StartTaskAfterDelayOrInput
	.align	2, 0
	.type	 ResetBallDataForNewSpin,function
	.thumb_func
ResetBallDataForNewSpin:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r3, .L463
	ldr	r0, [r3]
	strb	r4, [r0]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x20
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r6, .L463+0x4
	add	r2, r3, #0
	mov	r1, #0x0
.L461:
	ldr	r0, [r2]
	add	r0, r0, #0x1b
	add	r0, r0, r4
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L461	@cond_branch
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L464:
	.align	2, 0
.L463:
	.word	sRoulette
	.word	gTasks
.Lfe39:
	.size	 ResetBallDataForNewSpin,.Lfe39-ResetBallDataForNewSpin
	.align	2, 0
	.type	 ResetHits,function
	.thumb_func
ResetHits:
	push	{lr}
	ldr	r2, .L481
	ldr	r1, [r2]
	mov	r0, #0x0
	str	r0, [r1, #0x8]
	mov	r1, #0x0
	mov	r3, #0x0
.L469:
	ldr	r0, [r2]
	add	r0, r0, #0xc
	add	r0, r0, r1
	strb	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x5
	bls	.L469	@cond_branch
	mov	r1, #0x0
	ldr	r3, .L481
	mov	r2, #0x0
.L474:
	ldr	r0, [r3]
	add	r0, r0, #0x12
	add	r0, r0, r1
	strb	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bls	.L474	@cond_branch
	mov	r1, #0x0
	ldr	r3, .L481
	mov	r2, #0x0
.L479:
	ldr	r0, [r3]
	add	r0, r0, #0x16
	add	r0, r0, r1
	strb	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L479	@cond_branch
	mov	r0, #0x1
	mov	r1, #0xff
	bl	ShowHideGridBalls
	pop	{r0}
	bx	r0
.L482:
	.align	2, 0
.L481:
	.word	sRoulette
.Lfe40:
	.size	 ResetHits,.Lfe40-ResetHits
	.section .rodata
	.align	2, 0
.LC180:
	.word	0x10842
	.word	0x21084
	.word	0x42108
	.word	0x84210
	.align	2, 0
.LC182:
	.word	0x3e0
	.word	0x7c00
	.word	0xf8000
.text
	.align	2, 0
	.type	 RecordHit,function
	.thumb_func
RecordHit:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x1c
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r1, sp
	ldr	r0, .L500
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r2, sp, #0x10
	add	r1, r2, #0
	ldr	r0, .L500+0x4
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	mov	r8, r2
	cmp	r5, #0xb
	bls	.L484	@cond_branch
	mov	r0, #0x0
	b	.L499
.L501:
	.align	2, 0
.L500:
	.word	.LC180
	.word	.LC182
.L484:
	ldr	r6, .L502
	ldr	r3, [r6]
	ldr	r1, .L502+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r7, #0x14
	ldrsh	r1, [r0, r7]
	add	r3, r3, r1
	ldr	r4, .L502+0x8
	lsl	r5, r5, #0x3
	add	r2, r5, r4
	ldrb	r1, [r2, #0x2]
	strb	r1, [r3, #0xb]
	ldrb	r1, [r2, #0x2]
	strh	r1, [r0, #0x20]
	ldr	r2, [r6]
	add	r0, r4, #0x4
	add	r0, r5, r0
	ldr	r1, [r2, #0x8]
	ldr	r0, [r0]
	orr	r1, r1, r0
	str	r1, [r2, #0x8]
	mov	r3, #0x0
	mov	r9, r4
	mov	ip, r5
	add	r5, r0, #0
.L488:
	lsl	r0, r3, #0x2
	mov	r1, sp
	add	r4, r1, r0
	ldr	r0, [r4]
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L489	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, #0x12
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L489:
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x12
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bls	.L487	@cond_branch
	ldr	r0, [r2, #0x8]
	ldr	r1, [r4]
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
.L487:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x3
	bls	.L488	@cond_branch
	mov	r6, #0x0
	ldr	r0, .L502+0xc
	add	r0, r0, ip
	ldr	r7, [r0]
	ldr	r4, .L502
	mov	r5, r8
.L495:
	lsl	r0, r6, #0x2
	add	r2, r5, r0
	ldr	r0, [r2]
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L496	@cond_branch
	ldr	r1, [r4]
	add	r1, r1, #0x16
	add	r1, r1, r6
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L496:
	ldr	r3, [r4]
	add	r0, r3, #0
	add	r0, r0, #0x16
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bls	.L494	@cond_branch
	ldr	r0, [r3, #0x8]
	ldr	r1, [r2]
	orr	r0, r0, r1
	str	r0, [r3, #0x8]
.L494:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L495	@cond_branch
	mov	r0, ip
	add	r0, r0, r9
	ldrb	r0, [r0, #0x2]
.L499:
	add	sp, sp, #0x1c
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L503:
	.align	2, 0
.L502:
	.word	sRoulette
	.word	gTasks
	.word	sRouletteSlots
	.word	sRouletteSlots+0x4
.Lfe41:
	.size	 RecordHit,.Lfe41-RecordHit
	.align	2, 0
	.type	 IsHitInBetSelection,function
	.thumb_func
IsHitInBetSelection:
	push	{lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	lsr	r3, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x12
	bhi	.L505	@cond_branch
	cmp	r2, #0xf
	bhi	.L518	@cond_branch
	lsl	r0, r2, #0x2
	ldr	r1, .L524
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L525:
	.align	2, 0
.L524:
	.word	.L520
	.align	2, 0
	.align	2, 0
.L520:
	.word	.L507
	.word	.L511
	.word	.L511
	.word	.L511
	.word	.L511
	.word	.L516
	.word	.L518
	.word	.L518
	.word	.L518
	.word	.L518
	.word	.L516
	.word	.L518
	.word	.L518
	.word	.L518
	.word	.L518
	.word	.L516
.L507:
	mov	r0, #0x3
	b	.L521
.L511:
	add	r0, r2, #0x5
	cmp	r3, r0
	beq	.L523	@cond_branch
	add	r0, r0, #0x5
	cmp	r3, r0
	beq	.L523	@cond_branch
	add	r0, r0, #0x5
	cmp	r3, r0
	bne	.L505	@cond_branch
	b	.L523
.L516:
	add	r0, r2, #0x1
	cmp	r3, r0
	blt	.L505	@cond_branch
	add	r0, r2, #0x4
	cmp	r3, r0
	bgt	.L505	@cond_branch
.L523:
	mov	r0, #0x1
	b	.L521
.L518:
	cmp	r3, r2
	beq	.L523	@cond_branch
.L505:
	mov	r0, #0x0
.L521:
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 IsHitInBetSelection,.Lfe42-IsHitInBetSelection
	.align	2, 0
	.type	 FlashSelectionOnWheel,function
	.thumb_func
FlashSelectionOnWheel:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, #0x0
	str	r0, [sp, #0x18]
	cmp	r7, #0xa
	beq	.L530	@cond_branch
	cmp	r7, #0xa
	bgt	.L561	@cond_branch
	cmp	r7, #0x5
	beq	.L530	@cond_branch
	b	.L537
.L561:
	cmp	r7, #0xf
	bne	.L537	@cond_branch
.L530:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r2, r7, #0x5
	ldr	r1, .L563
	mov	ip, r1
	cmp	r4, r2
	bge	.L532	@cond_branch
	ldr	r0, [r1]
	ldr	r3, .L563+0x4
	ldr	r5, [r0, #0x8]
	add	r6, r3, #0
	add	r6, r6, #0x8
.L534:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r1, r0, #0x2
	add	r0, r1, r6
	ldr	r0, [r0]
	and	r0, r0, r5
	cmp	r0, #0
	bne	.L533	@cond_branch
	add	r0, r1, r3
	ldrh	r0, [r0, #0x10]
	ldr	r1, [sp, #0x18]
	orr	r1, r1, r0
	str	r1, [sp, #0x18]
.L533:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r2
	blt	.L534	@cond_branch
.L532:
	mov	r2, ip
	ldr	r0, [r2]
	add	r0, r0, #0xb8
	ldr	r1, .L563+0x8
	ldr	r3, [sp, #0x18]
	and	r3, r3, r1
	str	r3, [sp, #0x18]
	add	r1, r3, #0
	bl	RouletteFlash_Enable
	b	.L527
.L564:
	.align	2, 0
.L563:
	.word	sRoulette
	.word	sGridSelections
	.word	0xdfff
.L537:
	mov	r0, sp
	ldr	r1, .L565
	ldmia	r1!, {r2, r4, r5}
	stmia	r0!, {r2, r4, r5}
	ldmia	r1!, {r3, r4, r5}
	stmia	r0!, {r3, r4, r5}
	sub	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	mov	r9, r1
	cmp	r0, #0x3
	bhi	.L538	@cond_branch
	mov	r2, #0x3
	mov	r9, r2
.L538:
	add	r0, r7, #0
	mov	r1, #0x5
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r3, .L565+0x4
	add	r0, r0, r3
	lsr	r0, r0, #0x10
	mov	r8, r0
	add	r0, r7, #0
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L542	@cond_branch
	cmp	r0, #0x2
	bgt	.L547	@cond_branch
	cmp	r0, #0x1
	beq	.L541	@cond_branch
	ldr	r4, .L565+0x8
	mov	ip, r4
	b	.L540
.L566:
	.align	2, 0
.L565:
	.word	sFlashData_PokeIcons
	.word	-0x10000
	.word	sRoulette
.L547:
	cmp	r0, #0x3
	beq	.L543	@cond_branch
	cmp	r0, #0x4
	beq	.L544	@cond_branch
	ldr	r5, .L567
	mov	ip, r5
	b	.L540
.L568:
	.align	2, 0
.L567:
	.word	sRoulette
.L541:
	ldr	r3, .L569
	ldr	r2, .L569+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x43
	b	.L562
.L570:
	.align	2, 0
.L569:
	.word	gSprites
	.word	sRoulette
.L542:
	ldr	r3, .L571
	ldr	r2, .L571+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x44
	b	.L562
.L572:
	.align	2, 0
.L571:
	.word	gSprites
	.word	sRoulette
.L543:
	ldr	r3, .L573
	ldr	r2, .L573+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x45
	b	.L562
.L574:
	.align	2, 0
.L573:
	.word	gSprites
	.word	sRoulette
.L544:
	ldr	r3, .L575
	ldr	r2, .L575+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x46
.L562:
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	lsr	r0, r0, #0x4
	lsl	r0, r0, #0x4
	mov	r8, r0
	mov	ip, r2
.L540:
	mov	r0, r9
	cmp	r0, #0x1
	bne	.L548	@cond_branch
	mov	r1, ip
	ldr	r4, [r1]
	ldr	r1, .L575+0x8
	lsl	r2, r7, #0x2
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r1, r1, #0x8
	add	r0, r0, r1
	ldr	r1, [r4, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	str	r2, [sp, #0x1c]
	cmp	r1, #0
	bne	.L527	@cond_branch
	add	r0, r7, #0
	mov	r1, #0x5
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x3
	mov	r3, sp
	add	r2, r3, r1
	ldrh	r1, [r2, #0x2]
	add	r1, r1, r8
	strh	r1, [r2, #0x2]
	add	r1, r4, #0
	add	r1, r1, #0xb8
	lsl	r0, r0, #0x3
	sub	r0, r0, #0x8
	add	r2, r3, r0
	add	r0, r1, #0
	mov	r1, #0xd
	bl	RouletteFlash_Add
	b	.L551
.L576:
	.align	2, 0
.L575:
	.word	gSprites
	.word	sRoulette
	.word	sGridSelections
.L548:
	mov	r4, #0x0
	lsl	r5, r7, #0x2
	str	r5, [sp, #0x1c]
	ldr	r0, .L577
	mov	sl, r0
.L555:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	add	r0, r7, r0
	add	r0, r0, #0x5
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r1, ip
	ldr	r5, [r1]
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r6, r0, #0x2
	mov	r0, sl
	add	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, [r5, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L554	@cond_branch
	add	r0, r3, #0
	mov	r1, #0x5
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x3
	mov	r3, sp
	add	r2, r3, r1
	ldrh	r1, [r2, #0x2]
	add	r1, r1, r8
	strh	r1, [r2, #0x2]
	add	r3, r5, #0
	add	r3, r3, #0xb8
	add	r1, r4, #0
	add	r1, r1, #0xd
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r0, #0x3
	sub	r0, r0, #0x8
	mov	r5, sp
	add	r2, r5, r0
	add	r0, r3, #0
	bl	RouletteFlash_Add
	mov	r0, r9
	cmp	r0, #0x3
	bne	.L557	@cond_branch
	mov	r1, sl
	add	r0, r6, r1
	ldrh	r0, [r0, #0x10]
	str	r0, [sp, #0x18]
.L557:
	mov	r0, r9
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r2, .L577+0x4
	mov	ip, r2
.L554:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L555	@cond_branch
	mov	r3, r9
	cmp	r3, #0x2
	beq	.L551	@cond_branch
	mov	r4, #0x0
	str	r4, [sp, #0x18]
.L551:
	ldr	r0, .L577+0x4
	ldr	r0, [r0]
	add	r0, r0, #0xb8
	ldr	r2, .L577
	ldr	r5, [sp, #0x1c]
	add	r1, r5, r7
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1, #0x10]
	ldr	r2, [sp, #0x18]
	orr	r2, r2, r1
	str	r2, [sp, #0x18]
	add	r1, r2, #0
	bl	RouletteFlash_Enable
.L527:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L578:
	.align	2, 0
.L577:
	.word	sGridSelections
	.word	sRoulette
.Lfe43:
	.size	 FlashSelectionOnWheel,.Lfe43-FlashSelectionOnWheel
	.align	2, 0
	.type	 DrawGridBackground,function
	.thumb_func
DrawGridBackground:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x2c
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L611
	ldr	r1, [r4]
	mov	r0, #0x1
	strh	r0, [r1, #0x2a]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ShowHideGridIcons
	ldr	r1, [r4]
	ldr	r2, .L611+0x4
	add	r0, r1, r2
	ldr	r2, .L611+0x8
	add	r1, r1, r2
	ldr	r1, [r1]
	mov	r2, #0x10
	str	r2, [sp]
	mov	r2, #0xd
	str	r2, [sp, #0x4]
	mov	r2, #0xe
	mov	r3, #0x7
	bl	SetTilemapRect
	cmp	r5, #0xf
	bhi	.L599	@cond_branch
	lsl	r0, r5, #0x2
	ldr	r1, .L611+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L612:
	.align	2, 0
.L611:
	.word	sRoulette
	.word	0x117c
	.word	0x397c
	.word	.L600
	.align	2, 0
	.align	2, 0
.L600:
	.word	.L579
	.word	.L585
	.word	.L585
	.word	.L585
	.word	.L585
	.word	.L593
	.word	.L599
	.word	.L599
	.word	.L599
	.word	.L599
	.word	.L593
	.word	.L599
	.word	.L599
	.word	.L599
	.word	.L599
	.word	.L593
.L585:
	mov	r0, #0x4
	str	r0, [sp, #0x18]
	add	r1, sp, #0x8
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r1, #0
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bhi	.L580	@cond_branch
	add	r4, sp, #0x10
	add	r3, r1, #0
.L589:
	ldrb	r2, [r3]
	add	r2, r2, r4
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	add	r0, r5, r0
	strb	r0, [r2]
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	strb	r0, [r3]
	ldrb	r0, [r3]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcc	.L589	@cond_branch
	b	.L580
.L593:
	mov	r2, #0x5
	str	r2, [sp, #0x18]
	add	r1, sp, #0x8
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r1, #0
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bhi	.L580	@cond_branch
	add	r3, sp, #0x10
	add	r2, r1, #0
.L597:
	ldrb	r1, [r2]
	add	r1, r1, r3
	ldrb	r0, [r2]
	add	r0, r5, r0
	strb	r0, [r1]
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	ldrb	r0, [r2]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcc	.L597	@cond_branch
	b	.L580
.L599:
	mov	r2, #0x1
	str	r2, [sp, #0x18]
	add	r0, sp, #0x10
	strb	r5, [r0]
.L580:
	add	r1, sp, #0x8
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r1, #0
	ldrb	r0, [r0]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcc	.LCB5825
	b	.L579	@long jump
.LCB5825:
	mov	r2, sp
	add	r2, r2, #0xe
	str	r2, [sp, #0x1c]
	add	r0, sp, #0x10
	mov	sl, r0
	add	r1, sp, #0x8
	mov	r9, r1
	sub	r2, r2, #0x4
	str	r2, [sp, #0x20]
.L604:
	mov	r1, r9
	ldrb	r0, [r1]
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L613
	add	r0, r0, r2
	ldrb	r0, [r0, #0x6]
	ldr	r1, [sp, #0x1c]
	strb	r0, [r1]
	mov	r2, r9
	ldrb	r0, [r2]
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L613
	add	r0, r0, r1
	ldrb	r0, [r0, #0x3]
	ldr	r2, [sp, #0x20]
	strh	r0, [r2]
	mov	r7, sp
	add	r7, r7, #0x9
	mov	r0, #0x0
	strb	r0, [r7]
	ldrb	r0, [r7]
	cmp	r0, #0x2
	bhi	.L603	@cond_branch
	add	r6, sp, #0xc
	mov	r8, r2
	ldr	r0, [sp, #0x1c]
	mov	ip, r0
	ldr	r1, .L613+0x4
	str	r1, [sp, #0x28]
.L608:
	mov	r2, r9
	ldrb	r0, [r2]
	add	r0, r0, sl
	ldrb	r0, [r0]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L613
	add	r1, r1, r0
	str	r7, [sp, #0x24]
	ldrb	r0, [r7]
	ldrb	r1, [r1, #0x4]
	add	r0, r0, r1
	lsl	r0, r0, #0x5
	strh	r0, [r6]
	ldr	r1, [sp, #0x28]
	ldr	r4, [r1]
	mov	r2, r8
	ldrh	r0, [r2]
	ldrh	r2, [r6]
	add	r2, r2, r0
	lsl	r2, r2, #0x1
	ldr	r0, .L613+0x8
	add	r5, r4, r0
	add	r2, r5, r2
	mov	r1, ip
	ldrb	r0, [r1]
	ldrb	r1, [r7]
	add	r1, r1, r0
	ldr	r0, .L613+0xc
	add	r4, r4, r0
	ldr	r3, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	mov	r2, r8
	ldrh	r0, [r2]
	ldrh	r2, [r6]
	add	r2, r2, r0
	add	r2, r2, #0x1
	lsl	r2, r2, #0x1
	add	r2, r5, r2
	mov	r1, ip
	ldrb	r0, [r1]
	ldrb	r1, [r7]
	add	r1, r1, r0
	ldr	r3, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	mov	r1, #0xd1
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	mov	r2, r8
	ldrh	r1, [r2]
	ldrh	r0, [r6]
	add	r0, r0, r1
	add	r0, r0, #0x2
	lsl	r0, r0, #0x1
	add	r5, r5, r0
	mov	r1, ip
	ldrb	r0, [r1]
	ldrb	r1, [r7]
	add	r1, r1, r0
	ldr	r2, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	mov	r2, #0xd2
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r5]
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	ldr	r1, [sp, #0x24]
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bls	.L608	@cond_branch
.L603:
	mov	r2, r9
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	ldrb	r0, [r2]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcs	.LCB6033
	b	.L604	@long jump
.LCB6033:
.L579:
	add	sp, sp, #0x2c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L614:
	.align	2, 0
.L613:
	.word	sGridSelections
	.word	sRoulette
	.word	0x117c
	.word	0x397c
.Lfe44:
	.size	 DrawGridBackground,.Lfe44-DrawGridBackground
	.section .rodata
.LC203:
	.byte	0x0
	.byte	0x3
	.byte	0x4
	.byte	0x6
	.byte	0xc
.text
	.align	2, 0
	.type	 GetMultiplier,function
	.thumb_func
GetMultiplier:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L629
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	cmp	r4, #0x13
	bls	.L616	@cond_branch
	mov	r4, #0x0
.L616:
	ldr	r3, .L629+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r2, r0, #0x2
	add	r0, r2, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x4
	beq	.L620	@cond_branch
	cmp	r0, #0x4
	bgt	.L626	@cond_branch
	cmp	r0, #0x3
	beq	.L618	@cond_branch
	b	.L617
.L630:
	.align	2, 0
.L629:
	.word	.LC203
	.word	sGridSelections
.L626:
	cmp	r0, #0xc
	beq	.L622	@cond_branch
	b	.L617
.L618:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__udivsi3
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L631
	ldr	r0, [r0]
	add	r0, r0, #0x16
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bhi	.L617	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L628
.L632:
	.align	2, 0
.L631:
	.word	sRoulette
.L620:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L633
	ldr	r0, [r0]
	add	r0, r0, #0x12
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bhi	.L617	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x2
.L628:
	add	r0, r0, sp
	ldrb	r0, [r0]
	b	.L627
.L634:
	.align	2, 0
.L633:
	.word	sRoulette
.L622:
	ldr	r0, .L635
	ldr	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x8
	add	r0, r2, r0
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L617	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x4]
	b	.L627
.L636:
	.align	2, 0
.L635:
	.word	sRoulette
.L617:
	mov	r0, #0x0
.L627:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 GetMultiplier,.Lfe45-GetMultiplier
	.align	2, 0
	.type	 UpdateWheelPosition,function
	.thumb_func
UpdateWheelPosition:
	push	{r4, r5, r6, lr}
	ldr	r4, .L638
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x20
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x22
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x30]
	mov	r0, #0x24
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x32]
	mov	r0, #0x26
	bl	SetGpuReg
	ldr	r3, [r4]
	mov	r0, #0x2e
	ldrsh	r1, [r3, r0]
	ldr	r0, .L638+0x4
	mov	r4, #0x0
	ldrsh	r2, [r0, r4]
	add	r2, r2, #0x50
	mov	r0, r1
	mul	r0, r0, r2
	mov	r4, #0xe8
	lsl	r4, r4, #0x7
	sub	r4, r4, r0
	mov	r6, #0x2c
	ldrsh	r5, [r3, r6]
	ldr	r0, .L638+0x8
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	add	r1, r1, #0x74
	mov	r0, r5
	mul	r0, r0, r1
	sub	r4, r4, r0
	mov	r5, #0x32
	ldrsh	r0, [r3, r5]
	mul	r0, r0, r2
	mov	r5, #0xa8
	lsl	r5, r5, #0x7
	sub	r5, r5, r0
	mov	r6, #0x30
	ldrsh	r0, [r3, r6]
	mul	r0, r0, r1
	sub	r5, r5, r0
	lsl	r1, r4, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x28
	bl	SetGpuReg
	ldr	r6, .L638+0xc
	and	r4, r4, r6
	lsr	r4, r4, #0x10
	mov	r0, #0x2a
	add	r1, r4, #0
	bl	SetGpuReg
	lsl	r1, r5, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x2c
	bl	SetGpuReg
	and	r5, r5, r6
	lsr	r5, r5, #0x10
	mov	r0, #0x2e
	add	r1, r5, #0
	bl	SetGpuReg
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L639:
	.align	2, 0
.L638:
	.word	sRoulette
	.word	gSpriteCoordOffsetY
	.word	gSpriteCoordOffsetX
	.word	0xfff0000
.Lfe46:
	.size	 UpdateWheelPosition,.Lfe46-UpdateWheelPosition
	.section .rodata
	.type	 sFiller,object
	.size	 sFiller,3
sFiller:
	.space	3
	.align	1, 0
	.type	 sShadow_Pal,object
sShadow_Pal:
	.short	0x5d8c
	.short	0x0
	.short	0x2108
	.short	0x294a
	.short	0x318c
	.short	0x39ce
	.short	0x4210
	.short	0x4a52
	.short	0x5294
	.short	0x5ad6
	.short	0x6739
	.short	0x1f
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sShadow_Pal,32
	.align	1, 0
	.type	 sBall_Pal,object
sBall_Pal:
	.short	0x4da9
	.short	0x14a5
	.short	0x41ef
	.short	0x62d5
	.short	0x7fff
	.short	0x4fbd
	.short	0x36d7
	.short	0x1170
	.short	0x2e1f
	.short	0x31b7
	.short	0x7f7c
	.short	0x4ee9
	.short	0x7fff
	.short	0x4a6c
	.short	0x7fff
	.short	0x294a
	.size	 sBall_Pal,32
	.align	1, 0
	.type	 sBallCounter_Pal,object
sBallCounter_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x398c
	.short	0x5273
	.short	0x7fff
	.short	0x2b90
	.short	0x527f
	.short	0x7e6d
	.short	0x7fff
	.short	0x37f3
	.short	0x279e
	.short	0x3f9f
	.short	0x963
	.short	0x4fff
	.short	0x4bf3
	.short	0x7e79
	.size	 sBallCounter_Pal,32
	.align	1, 0
	.type	 sCursor_Pal,object
sCursor_Pal:
	.short	0x4da9
	.short	0x14a5
	.short	0x520f
	.short	0x6b39
	.short	0x7fff
	.short	0x76ef
	.short	0x1cff
	.short	0x2662
	.short	0x6a8c
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x4ff
	.short	0x2bbf
	.short	0x4da9
	.short	0x7e79
	.size	 sCursor_Pal,32
	.align	1, 0
	.type	 sCredit_Pal,object
sCredit_Pal:
	.short	0x4da9
	.short	0x14a5
	.short	0x398c
	.short	0x6b39
	.short	0x7fff
	.short	0x47af
	.short	0x46bf
	.short	0x2662
	.short	0x7e98
	.short	0x11a6
	.short	0x430e
	.short	0x5e38
	.short	0x1d5f
	.short	0x2bbf
	.short	0x6d9
	.short	0x73f
	.size	 sCredit_Pal,32
	.align	1, 0
	.type	 sShroomish_Pal,object
sShroomish_Pal:
	.short	0x4da9
	.short	0x2108
	.short	0x36bb
	.short	0x537e
	.short	0x36af
	.short	0x4b75
	.short	0x2593
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sShroomish_Pal,32
	.align	1, 0
	.type	 sTaillow_Pal,object
sTaillow_Pal:
	.short	0x4da9
	.short	0x2108
	.short	0x44e7
	.short	0x618b
	.short	0x7b37
	.short	0x2f9f
	.short	0x215f
	.short	0x20f5
	.short	0x7fff
	.short	0x2108
	.short	0x29f3
	.short	0x36f9
	.short	0x2154
	.short	0x1d2c
	.short	0x6b5a
	.short	0x7fff
	.size	 sTaillow_Pal,32
	.align	1, 0
	.type	 sGridIcons_Pal,object
sGridIcons_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x7e6d
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.short	0x3f9f
	.short	0x7fff
	.short	0x4fff
	.short	0x4bf3
	.short	0x7e79
	.size	 sGridIcons_Pal,32
	.align	1, 0
	.type	 sWynaut_Pal,object
sWynaut_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.size	 sWynaut_Pal,32
	.align	1, 0
	.type	 sAzurill_Pal,object
sAzurill_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7e6d
	.short	0x467f
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7e6d
	.short	0x467f
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7e6d
	.short	0x467f
	.size	 sAzurill_Pal,32
	.align	1, 0
	.type	 sSkitty_Pal,object
sSkitty_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.size	 sSkitty_Pal,32
	.align	1, 0
	.type	 sMakuhita_Pal,object
sMakuhita_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x3f9f
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x3f9f
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x3f9f
	.short	0x2d9e
	.size	 sMakuhita_Pal,32
	.align	1, 0
	.type	 sUnused1_Pal,object
sUnused1_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x7ffb
	.short	0x6f6d
	.short	0x2d9e
	.short	0x7f7f
	.short	0x6f6d
	.short	0x2d9e
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 sUnused1_Pal,32
	.align	1, 0
	.type	 sUnused2_Pal,object
sUnused2_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x7e6d
	.short	0x737b
	.short	0x7ffb
	.short	0x7e6d
	.short	0x737b
	.short	0x7f7f
	.short	0x7e6d
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 sUnused2_Pal,32
	.align	1, 0
	.type	 sUnused3_Pal,object
sUnused3_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x467f
	.short	0x4fde
	.short	0x7ffb
	.short	0x467f
	.short	0x4fde
	.short	0x7f7f
	.short	0x467f
	.short	0x4fde
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 sUnused3_Pal,32
	.align	1, 0
	.type	 sUnused4_Pal,object
sUnused4_Pal:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x3f9f
	.short	0x737b
	.short	0x7ffb
	.short	0x3f9f
	.short	0x737b
	.short	0x7f7f
	.short	0x3f9f
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 sUnused4_Pal,32
	.align	2, 0
	.type	 sBall_Gfx,object
sBall_Gfx:
	.word	0x40010
	.word	0x10000020
	.word	0x11f001
	.word	0x220021f0
	.word	0x3aa32100
	.word	0x4a32f0
	.word	0x4a331034
	.word	0x33332f33
	.word	0x213335
	.word	-0xee2effd
	.word	0x220300
	.word	0x23330104
	.word	0x33330001
	.word	0x480300f2
	.word	0x23030013
	.word	0x103000f
	.word	0xc03221
	.word	0x2f030027
	.word	0x10333222
	.word	0x22220022
	.word	0x2222fff0
	.word	0x1f48f100
	.word	0x11114f00
	.word	0x33335710
	.word	0x20014022
	.word	0xf222203
	.word	0x122222
	.word	-0xdde00
	.word	0x1ff1100
	.word	0x11003a
	.word	-0x3fa8efb1
	.word	0x7f00aa7f
	.word	0x7f00baa4
	.word	-0xf800fc6
	.word	0x227f607f
	.word	-0x3cdd80f0
	.word	0x7f507ff0
	.word	0x23012223
	.word	0x7ff07ff0
	.word	0x32ff50bd
	.word	-0x28bf0100
	.word	0x7f107ff0
	.word	0x4b030012
	.word	0x227f0022
	.word	0x217b1001
	.word	0x76007b00
	.word	0x7ff02270
	.word	0x7b307f00
	.word	-0xdddddff
	.word	0x607ff0c3
	.word	0x11107f
	.word	0x7f3010
	.word	0x7f21f37b
	.word	-0xaf04f0
	.word	0x22004800
	.word	0x7f300400
	.word	0x207b10f4
	.word	-0xea8fe01
	.word	0x7f20107f
	.word	0xfffff
	.word	0x10fff110
	.word	0x7f8157
	.word	0x177f1083
	.word	0xff001f
	.word	0x4f00ff7f
	.word	-0x400ea8f0
	.word	-0xec00e01
	.word	-0xf402f41
	.word	-0xffe0fff
	.word	-0xefeefff
	.word	0x7ff0ffbf
	.word	0x7ff0bff1
	.word	0x1f001f0
	.word	0x7f0001f0
	.word	-0xe00400f
	.word	-0xf400e41
	.word	-0xffe0f81
	.word	-0x1efe0fff
	.word	-0x3400e81
	.word	-0x406e400f
	.word	0x1f001f0
	.word	0x17001f0
	.size	 sBall_Gfx,328
	.align	2, 0
	.type	 sBallCounter_Gfx,object
sBallCounter_Gfx:
	.word	0x14010
	.word	0x11110000
	.word	0x23331000
	.word	0x34310001
	.word	0x33311233
	.word	0x21001233
	.word	0x21122333
	.word	0xf123222
	.word	0x1222210
	.word	0x1ff01b10
	.word	0x1ff01ff0
	.word	0x101f80c0
	.word	0x555501
	.word	0x7f555550
	.word	0x10039005
	.word	-0xfe3cfed
	.word	-0xfe00fe1
	.word	-0x3fe09fe1
	.word	0x7ff07ff0
	.word	0x60006666
	.word	0x67f6666
	.word	0x13100390
	.word	0x1ff05f60
	.word	0x1ff01ff0
	.word	0x1a20
	.size	 sBallCounter_Gfx,100
	.align	2, 0
	.type	 sShroomishTaillow_Gfx,object
sShroomishTaillow_Gfx:
	.word	0xe0010
	.word	-0xfffffc6
	.word	-0x5ffe0fff
	.word	0x2001001
	.word	0x2008231
	.word	0x21210062
	.word	0x11cd036
	.word	0x130300a8
	.word	0x260400
	.word	0x12126304
	.word	-0xfc20f0b
	.word	0x20578001
	.word	0x3302103
	.word	0x30010
	.word	0x62102621
	.word	0x53212622
	.word	0x32222500
	.word	0x32333553
	.word	0x20335033
	.word	0x3102203
	.word	0x22661662
	.word	0x22122214
	.word	0x11e00
	.word	0x1a33141c
	.word	0x455333
	.word	0x43031016
	.word	0x1661e10
	.word	0x22222661
	.word	-0x6fdddddf
	.word	0x310f597
	.word	0x3209110
	.word	0x20620c00
	.word	0x2300119e
	.word	0x233133
	.word	0x1007006b
	.word	0x60834011
	.word	0x24420001
	.word	0x44441622
	.word	0x46002612
	.word	0x52222244
	.word	0x226225
	.word	0x32112222
	.word	0x21441111
	.word	0x11110000
	.word	0x44410011
	.word	0x22610111
	.word	0x21622442
	.word	0x1d0044
	.word	0x26226444
	.word	0x11232552
	.word	0x449500b0
	.word	0x1e001c00
	.word	0x144411
	.word	0x51002241
	.word	0x1332
	.word	0x7f6b0022
	.word	0x10730011
	.word	-0xffe0f7d
	.word	0x10157101
	.word	-0xfe0f6e
	.word	0x54100160
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x10945080
	.word	0x21006631
	.word	-0x1f2fcc9f
	.word	0x3303008e
	.word	0x1165b11
	.word	0x137c3600
	.word	0x1f0fff1
	.word	-0x4be000f
	.word	0x46110300
	.word	0x62621000
	.word	0x22552122
	.word	0x55323422
	.word	0x310fb31
	.word	0x12030026
	.word	0x33321866
	.word	0x11e52112
	.word	0x331233ff
	.word	0x23553301
	.word	0x25555333
	.word	0x33270320
	.word	0x22220255
	.word	-0xefefdde
	.word	0x4a0380ff
	.word	0x313a2162
	.word	0x426b0046
	.word	-0x1e9e8d00
	.word	0x7f420c10
	.word	0x16220362
	.word	-0x7effdede
	.word	0x62490088
	.word	-0x1eedcde
	.word	0x2332141
	.word	0x22141111
	.word	-0x1ffebf00
	.word	0x41111110
	.word	0x42f90122
	.word	0x3202444
	.word	0x22446204
	.word	0x1e001226
	.word	0x222e1441
	.word	0x44ff1101
	.word	0x3106342
	.word	-0xddecef
	.word	-0x320efd00
	.word	0x17f101f0
	.word	0x6f9101f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xc000cff
	.word	-0xf000c01
	.word	0x1f0fe01
	.word	-0x78ee009f
	.word	-0x25fffcee
	.word	0x5503ff03
	.word	0x23353421
	.word	-0x48e1dff
	.word	0x22040062
	.word	0x33361c61
	.word	0x33960126
	.word	0x33ff11ff
	.word	0x55330123
	.word	0x55532333
	.word	0x5d031035
	.word	0x42020242
	.word	-0x28fe52ff
	.word	0x5014ffb1
	.word	0xc00b503
	.word	-0x1c000c9c
	.word	-0x1fbe9d01
	.word	0x14030026
	.word	0x73642332
	.word	-0x1ffeef01
	.word	0xe51000
	.word	0x1601c
	.word	0x7323328a
	.word	0x672001ff
	.word	-0xcdb81
	.word	0x1f001f0
	.word	0x1f0e2f1
	.word	0x1f0d760
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0x1dfe0fff
	.word	-0x5de40ffd
	.word	0x1df0ff03
	.word	0x3f201f0
	.word	0x63020382
	.word	0x37203f2
	.word	-0xd009cee
	.word	-0x2ffc8dfd
	.word	0x1203d297
	.word	0x7203f263
	.word	-0x69ccdfd
	.word	0x35603f2
	.word	0x3f26312
	.word	0x1440352
	.word	-0xd009cee
	.word	-0xf070ffd
	.word	-0xf000aff
	.word	-0xfe00fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	-0xefe10
	.word	-0xe000f
	.word	0x1f01df0
	.word	-0xe000e01
	.word	-0xe000e01
	.word	-0xe000e01
	.word	-0xe000e01
	.word	-0xe1101
	.word	-0xee000f
	.word	-0xe1cfef0
	.word	0x11ff91ff
	.word	-0xe9cdb01
	.word	-0xf070f01
	.word	-0xf2008ff
	.word	-0xfe00fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf2ffe10
	.word	0x71fb8101
	.word	0x670600
	.word	0x10a85100
	.word	0xb007703
	.word	0x11e23215
	.word	0x7ca3111
	.word	0x22de01ed
	.word	0x36030066
	.word	0x35220320
	.word	-0x20b87ede
	.word	0x12b011
	.word	0x78013304
	.word	0x21502ce
	.word	0x22207
	.word	0x668f1122
	.word	0x9d2080
	.word	0x31022229
	.word	0xb907b
	.word	0x63f75101
	.word	0x100170d2
	.word	-0xf8ae9d
	.word	0x1b024110
	.word	0x1f12c110
	.word	0x422203b0
	.word	0x2120114
	.word	0x4f1aff48
	.word	-0x18e8a8a8
	.word	0x1f00350
	.word	0x1f001f0
	.word	-0x5710e95f
	.word	0x1001d08f
	.word	0x30021e1
	.word	0x1f006f4
	.word	-0xf01fe10
	.word	-0xffe0fff
	.word	-0xffc5bff
	.word	0x2963217
	.word	0x337c33fb
	.word	0x1f0f402
	.word	-0xefe10
	.word	0x3331ff81
	.word	-0x2feef86
	.word	-0x21ec00ff
	.word	0x133ffe1
	.word	0x11c92378
	.word	0x2363137b
	.word	0x22060421
	.word	0x3e030012
	.word	-0xecdfe
	.word	-0xe000f
	.word	-0xde000f
	.word	0x10330712
	.word	0x333141
	.word	0x20ef0aee
	.word	0x1f7adaf3
	.word	0x323ff01
	.word	0x33831083
	.word	0x4f23e719
	.word	0x33b10011
	.word	-0xe4cfdff
	.word	-0xffe0f03
	.word	0x1f0fe01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x10001f0
	.size	 sShroomishTaillow_Gfx,1008
	.align	2, 0
	.type	 sGridIcons_Gfx,object
sGridIcons_Gfx:
	.word	0x20010
	.word	0x0
	.word	0x30000033
	.word	0x30000011
	.word	0x13005513
	.word	0x30005521
	.word	0x23555551
	.word	0x555115
	.word	0x55155123
	.word	0x55555513
	.word	0x20000354
	.word	0x15030031
	.word	0x11252500
	.word	0x55000300
	.word	0x55003155
	.word	0x3250011
	.word	0x3215515
	.word	0x15005555
	.word	0x25151303
	.word	0x651351
	.word	0x52131621
	.word	0x15136666
	.word	0x13666100
	.word	0x30111332
	.word	0x306003
	.word	0x2101302d
	.word	0x26031515
	.word	0x3156100
	.word	0x3125666
	.word	0x15110066
	.word	0x12331103
	.word	0x10c83303
	.word	0x33015072
	.word	0x317d0003
	.word	0x77001300
	.word	-0x68eccce9
	.word	0x2131117
	.word	0x30777277
	.word	0x3007771
	.word	0x13770471
	.word	-0x7f888e89
	.word	0x411031f
	.word	0x77031797
	.word	0x77030072
	.word	0x77001031
	.word	0x17031071
	.word	0x29331303
	.word	0x3007777
	.word	0x331017
	.word	0x182f0013
	.word	0x111330
	.word	0x776060cf
	.word	0x3761337
	.word	0x33100320
	.word	0x11bf00
	.word	0x7d8019
	.word	-0x1fffffc0
	.word	0x33130
	.word	0x31001913
	.word	0x19999133
	.word	0x991311
	.word	0x21309999
	.word	-0x5ecf6666
	.word	0x1399aa02
	.word	0x20aaa119
	.word	0x31003320
	.word	0x19113300
	.word	0x991103
	.word	-0x6666fe67
	.word	0x2a990319
	.word	-0x56ffceff
	.word	-0x55ffce56
	.word	0x13001300
	.word	0x13aa2aa9
	.word	0x2aaaa9
	.word	-0x55556ed0
	.word	-0x666eed00
	.word	0x2a7fd082
	.word	-0x55fce656
	.word	0x1c9a0310
	.word	-0xf66ffcf
	.word	0x2a007f
	.word	0x31135f
	.word	0x1bb13000
	.word	-0x44ecffcd
	.word	0x11870190
	.word	0x220700bb
	.word	0x6bbb130
	.word	-0x4ee4ec45
	.word	0x9d31bb
	.word	0x3101bb9f
	.word	0x31bb100
	.word	-0x73fee500
	.word	0x700b250
	.word	-0x44f0ff45
	.word	0x31b11
	.word	-0x44d449ed
	.word	-0x444e94ed
	.word	0x2b613003
	.word	0x130011
	.word	0x7fc02f
	.word	0x316bb2b
	.word	0x31b61bb
	.word	0x106b2130
	.word	0x7ff02f
	.size	 sGridIcons_Gfx,420
	.align	2, 0
	.type	 sWheelIcons_Gfx,object
sWheelIcons_Gfx:
	.word	0xc0010
	.word	0x0
	.word	0x30000033
	.word	0x30000011
	.word	0x13004413
	.word	0x30004421
	.word	0x23444441
	.word	0x444114
	.word	0x44144123
	.word	0x44444413
	.word	0x20000354
	.word	0x14030031
	.word	0x11242500
	.word	0x44000300
	.word	0x44003144
	.word	0x3240011
	.word	0x3214414
	.word	0x14004444
	.word	0x24141303
	.word	0x541341
	.word	0x42131521
	.word	0x14135555
	.word	0x13555100
	.word	0x30111332
	.word	0x306003
	.word	0x2101302d
	.word	0x25031414
	.word	0x3145100
	.word	0x3124555
	.word	0x14110055
	.word	0x12331103
	.word	0x10ff3303
	.word	-0xffe0f8e
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x7ffe0fff
	.word	0x880190
	.word	0x668000
	.word	-0x6697ff80
	.word	-0x66899800
	.word	-0x66ff6980
	.word	-0x69968767
	.word	0x1967899
	.word	-0x66976697
	.word	0x89999
	.word	0x865020
	.word	0x25006903
	.word	0x86679
	.word	-0x79666700
	.word	0x79669900
	.word	-0x6696fff8
	.word	-0x6666f78a
	.word	0x68000869
	.word	0x68967969
	.word	0x6a76a9
	.word	-0x55556898
	.word	-0x55599698
	.word	0x68876801
	.word	-0x7ff77f9a
	.word	0x30802d00
	.word	0x69697601
	.word	0x69a67a08
	.word	-0x6555f800
	.word	0x66aa0867
	.word	0x66080369
	.word	-0x77f79878
	.word	0x1f07210
	.word	-0xffe0f02
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x22fe6fff
	.word	-0x30000000
	.word	-0x422fff45
	.word	-0x42ffff12
	.word	-0x142f1135
	.word	-0x32ff1112
	.word	-0x32111442
	.word	0x5eebeeb
	.word	-0x11111143
	.word	-0x24dffff3
	.word	-0x41bffd00
	.word	-0x4431db00
	.word	-0x1111fff3
	.word	-0x11ff2500
	.word	-0x41f23145
	.word	0xdcb00ee
	.word	0xdbeeeee
	.word	-0x31ff4143
	.word	-0x34014215
	.word	0xecbdbf
	.word	-0x41420001
	.word	-0x23420005
	.word	-0x2f4442fa
	.word	0x2d00d00d
	.word	0xcb0130
	.word	-0x30f24142
	.word	-0xf24105
	.word	0xdbcef00
	.word	0xdbebbff
	.word	-0x4322f045
	.word	0x7210dd0d
	.word	0x1f001f0
	.word	-0xf06fe10
	.word	-0xffe0fff
	.word	0x7001f001
	.word	0x2033301
	.word	0x3100fd
	.word	0x33144413
	.word	0x14045413
	.word	0x42441311
	.word	0x41300323
	.word	-0xfdbeb8
	.word	0x1f804441
	.word	0xd541103
	.word	0x42440314
	.word	0x3130300
	.word	-0x75fcefbf
	.word	0x4433ff02
	.word	0x14030044
	.word	0x46003310
	.word	0x302f0013
	.word	0x4f031113
	.word	0x1844e062
	.word	0x20031334
	.word	0x3372303
	.word	0xff1100
	.word	-0xf020de7
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x5ffe0fff
	.word	0x208fdd2
	.word	0x680086fd
	.word	-0x77ff9667
	.word	0x6669a968
	.word	-0x76686698
	.word	-0x697ffcdd
	.word	-0x6900fd6a
	.word	0x11f8099
	.word	0x69a96608
	.word	0x979908
	.word	0x313b103
	.word	0x2031096
	.word	-0x66667701
	.word	0x69480300
	.word	0x68003310
	.word	0x68802f00
	.word	0x4f03c366
	.word	-0x76661f9e
	.word	0x3200868
	.word	0x81f3723
	.word	0x19006600
	.word	0x1f0fdf2
	.word	0x1f001f0
	.word	-0xffe0f0c
	.word	-0x2dfe0fff
	.word	-0x2fdf203
	.word	-0x42ffff25
	.word	-0x42224112
	.word	0x11bbbefe
	.word	0x23eceebd
	.word	-0x14142ffd
	.word	-0x14df00fe
	.word	0xd1f80ee
	.word	0xdbefebb
	.word	0xecee36
	.word	-0x14fcecfd
	.word	-0xfdfcf0
	.word	-0x1111d623
	.word	0x10be0300
	.word	0xbd0033
	.word	-0x422fe7d1
	.word	0x624f03bb
	.word	-0x42211120
	.word	0x3200d63
	.word	0xd3723
	.word	-0xde6ff45
	.word	0x1f0fffd
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1c001f0
	.word	0x3000e005
	.word	0x13000331
	.word	0x30333114
	.word	-0xedbbbf
	.word	0x4521fb02
	.word	0x51183044
	.word	-0x30eabbab
	.word	0x31332020
	.word	0x15334400
	.word	0x14444bb
	.word	0x2544f315
	.word	0x54003102
	.word	0x15003155
	.word	0x540013cf
	.word	0x54135525
	.word	0x10302555
	.word	-0xdaaaabf
	.word	0x250000ff
	.word	-0x4fa20ab
	.word	-0xdbafcf0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	0x1f0f801
	.word	0x1f001f0
	.word	-0x1ffafec0
	.word	0x1088680
	.word	-0x79969800
	.word	0x12999688
	.word	-0x4fd7f01
	.word	-0x7f66658a
	.word	-0x3d66555a
	.word	0x2020cf15
	.word	-0x77ff7978
	.word	0x2099bb15
	.word	-0xceaf967
	.word	0x867a99
	.word	-0x7955ef57
	.word	0x68cf1500
	.word	0xaa7aa9
	.word	0x7aaaa968
	.word	-0x55556980
	.word	0xfff286
	.word	0x5aa7a00
	.word	-0x65fcef05
	.word	-0xf000d01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x140c001
	.word	-0x242f1ffb
	.word	-0x4142fff3
	.word	-0x142224f4
	.word	0x2ff12ee
	.word	0x6efcbfb
	.word	-0x42f12
	.word	0x20cf15ee
	.word	-0x24ee22e0
	.word	-0x44ea2300
	.word	0x150beeee
	.word	-0x3011ff0d
	.word	-0x1ff25
	.word	0x158000db
	.word	-0x30014231
	.word	-0x14201
	.word	-0x142f30fc
	.word	-0xd0001
	.word	-0x30c90000
	.word	0x10fb05ff
	.word	-0xd10fd
	.word	0x1f001f0
	.word	-0xffe0f03
	.word	-0xffe0fff
	.word	0x4001f001
	.word	-0x20fdcfff
	.word	0x311304
	.word	-0x1ef7bed0
	.word	0x9a54413
	.word	-0x38faeef9
	.word	-0x30eaddbc
	.word	-0xcf8f6ed
	.word	0x1f031d39
	.word	-0x11fa40fb
	.word	0xc091400
	.word	0x49c00206
	.word	0x45ff0207
	.word	0x54134424
	.word	0x2f039841
	.word	-0xdeedc
	.word	0x15443309
	.word	0x8444f03
	.word	-0xdabde01
	.word	-0xffe0f01
	.word	-0x5fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x2800140
	.word	-0x79f69721
	.word	0x8968000
	.word	0x99968e1
	.word	0x5664b07
	.word	0x157799c7
	.word	0x70968cf
	.word	0x3e71d39
	.word	0x5bf051f
	.word	0x96900ee
	.word	0x4902060c
	.word	-0xfd7ef9
	.word	0x6899799a
	.word	0x2f0396a9
	.word	-0xd9986d0
	.word	-0x66ccf601
	.word	-0x6066f796
	.word	-0x568900f8
	.word	0x1f0fff2
	.word	0x1f001f0
	.word	-0xf0bfe10
	.word	-0xffe0fff
	.word	-0x2ffebfff
	.word	-0x244220fe
	.word	-0x142fffee
	.word	-0x11421ef8
	.word	-0x6844f8f7
	.word	-0x331138fb
	.word	0x9bdcf15
	.word	0x31d3907
	.word	-0x40fa30e1
	.word	-0x41ff11fb
	.word	0x2060c09
	.word	-0xfdf8b7
	.word	-0x113110fe
	.word	0x3ebfebd
	.word	-0x449e31d1
	.word	0x3309fff2
	.word	-0x11f24012
	.word	-0x34c000f8
	.word	-0xf000d02
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0e001
	.word	0x13001f0
	.size	 sWheelIcons_Gfx,1280
	.align	2, 0
	.type	 sShadow_Gfx,object
sShadow_Gfx:
	.word	0x18010
	.word	0x20000028
	.word	0x2009901
	.word	-0x406fff67
	.word	0x30990300
	.word	0x200a0003
	.word	0x101c4003
	.word	0x6f03001d
	.word	0x101e5009
	.word	0x3100903
	.word	0x3502760
	.word	0x20ff4310
	.word	0x6036202d
	.word	0x10227027
	.word	-0xfe3bfbd
	.word	0x11001
	.word	-0x7fffff79
	.word	-0x77ffff68
	.word	-0x78ddff5f
	.word	-0x788fd990
	.word	0x40008788
	.word	0x5001d0c5
	.word	0x778881e
	.word	-0xf87a0f0
	.word	0x1b0a51f
	.word	-0x76fcff88
	.word	-0x7780fff8
	.word	0x10ef0300
	.word	0x1063200c
	.word	0x2b10806b
	.word	0x1b07b00
	.word	0x10f74fd0
	.word	-0xf74ef7d
	.word	0x7801601f
	.word	0x1f608b10
	.word	0x10f06300
	.word	0x2073106b
	.word	0x1c06e
	.size	 sShadow_Gfx,152
	.align	2, 0
	.type	 sCursor_Gfx,object
sCursor_Gfx:
	.word	0x20010
	.word	-0x33333fef
	.word	0x130
	.word	-0x7fc1000
	.word	0x1e700300
	.word	0x1f3001f0
	.word	0xc0310
	.word	-0xf3f8100
	.word	-0xffcdffd
	.word	-0xfc05fff
	.word	-0xffc5ffd
	.word	0x1d0ff01
	.word	0x7ff073f0
	.word	0x7ff001f0
	.word	0x1711f3b0
	.word	0x60ff2df0
	.word	-0xfec7e0d
	.word	-0xff0ee8d
	.word	-0xffe0fc2
	.word	-0x3fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x13001f0
	.size	 sCursor_Gfx,92
	.align	2, 0
	.type	 sSpritePalettes,object
sSpritePalettes:
	.word	sShadow_Pal
	.short	0x1
	.space	2
	.word	sBall_Pal
	.short	0x2
	.space	2
	.word	sBallCounter_Pal
	.short	0x3
	.space	2
	.word	sCursor_Pal
	.short	0x4
	.space	2
	.word	sCredit_Pal
	.short	0x5
	.space	2
	.word	sShroomish_Pal
	.short	0x6
	.space	2
	.word	sTaillow_Pal
	.short	0x7
	.space	2
	.word	sGridIcons_Pal
	.short	0x8
	.space	2
	.word	sWynaut_Pal
	.short	0x9
	.space	2
	.word	sAzurill_Pal
	.short	0xa
	.space	2
	.word	sSkitty_Pal
	.short	0xb
	.space	2
	.word	sMakuhita_Pal
	.short	0xc
	.space	2
	.space	8
	.size	 sSpritePalettes,104
	.align	2, 0
	.type	 sOam_GridHeader,object
	.size	 sOam_GridHeader,8
sOam_GridHeader:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x80
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sOam_GridIcon,object
	.size	 sOam_GridIcon,8
sOam_GridIcon:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x40
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sOam_WheelIcon,object
	.size	 sOam_WheelIcon,8
sOam_WheelIcon:
	.byte	0x3c
	.byte	0x83
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sAffineAnim_Unused1,object
sAffineAnim_Unused1:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAffineAnim_Unused1,8
	.align	2, 0
	.type	 sAffineAnims_Unused1,object
sAffineAnims_Unused1:
	.word	sAffineAnim_Unused1
	.size	 sAffineAnims_Unused1,4
	.align	2, 0
	.type	 sAffineAnim_Unused2,object
sAffineAnim_Unused2:
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_Unused2,8
	.align	2, 0
	.type	 sAffineAnims_Unused2,object
sAffineAnims_Unused2:
	.word	sAffineAnim_Unused2
	.size	 sAffineAnims_Unused2,4
	.align	2, 0
	.type	 sSpriteSheet_WheelIcons,object
	.size	 sSpriteSheet_WheelIcons,8
sSpriteSheet_WheelIcons:
	.word	sWheelIcons_Gfx
	.short	0xc00
	.short	0x0
	.align	2, 0
	.type	 sAnim_WheelIcons,object
sAnim_WheelIcons:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x20
	.byte	0x0
	.space	1
	.short	0x40
	.byte	0x0
	.space	1
	.short	0x48
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0x28
	.byte	0x0
	.space	1
	.short	0x30
	.byte	0x0
	.space	1
	.short	0x50
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x18
	.byte	0x0
	.space	1
	.short	0x38
	.byte	0x0
	.space	1
	.short	0x58
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_WheelIcons,52
	.align	2, 0
	.type	 sAnim_WheelIcon_OrangeWynaut,object
sAnim_WheelIcon_OrangeWynaut:
	.word	sAnim_WheelIcons
	.size	 sAnim_WheelIcon_OrangeWynaut,4
	.align	2, 0
	.type	 sAnim_WheelIcon_GreenAzurill,object
sAnim_WheelIcon_GreenAzurill:
	.word	sAnim_WheelIcons+0x4
	.size	 sAnim_WheelIcon_GreenAzurill,4
	.align	2, 0
	.type	 sAnim_WheelIcon_PurpleSkitty,object
sAnim_WheelIcon_PurpleSkitty:
	.word	sAnim_WheelIcons+0x8
	.size	 sAnim_WheelIcon_PurpleSkitty,4
	.align	2, 0
	.type	 sAnim_WheelIcon_OrangeMakuhita,object
sAnim_WheelIcon_OrangeMakuhita:
	.word	sAnim_WheelIcons+0xc
	.size	 sAnim_WheelIcon_OrangeMakuhita,4
	.align	2, 0
	.type	 sAnim_WheelIcon_GreenWynaut,object
sAnim_WheelIcon_GreenWynaut:
	.word	sAnim_WheelIcons+0x10
	.size	 sAnim_WheelIcon_GreenWynaut,4
	.align	2, 0
	.type	 sAnim_WheelIcon_PurpleAzurill,object
sAnim_WheelIcon_PurpleAzurill:
	.word	sAnim_WheelIcons+0x14
	.size	 sAnim_WheelIcon_PurpleAzurill,4
	.align	2, 0
	.type	 sAnim_WheelIcon_OrangeSkitty,object
sAnim_WheelIcon_OrangeSkitty:
	.word	sAnim_WheelIcons+0x18
	.size	 sAnim_WheelIcon_OrangeSkitty,4
	.align	2, 0
	.type	 sAnim_WheelIcon_GreenMakuhita,object
sAnim_WheelIcon_GreenMakuhita:
	.word	sAnim_WheelIcons+0x1c
	.size	 sAnim_WheelIcon_GreenMakuhita,4
	.align	2, 0
	.type	 sAnim_WheelIcon_PurpleWynaut,object
sAnim_WheelIcon_PurpleWynaut:
	.word	sAnim_WheelIcons+0x20
	.size	 sAnim_WheelIcon_PurpleWynaut,4
	.align	2, 0
	.type	 sAnim_WheelIcon_OrangeAzurill,object
sAnim_WheelIcon_OrangeAzurill:
	.word	sAnim_WheelIcons+0x24
	.size	 sAnim_WheelIcon_OrangeAzurill,4
	.align	2, 0
	.type	 sAnim_WheelIcon_GreenSkitty,object
sAnim_WheelIcon_GreenSkitty:
	.word	sAnim_WheelIcons+0x28
	.size	 sAnim_WheelIcon_GreenSkitty,4
	.align	2, 0
	.type	 sAnim_WheelIcon_PurpleMakuhita,object
sAnim_WheelIcon_PurpleMakuhita:
	.word	sAnim_WheelIcons+0x2c
	.size	 sAnim_WheelIcon_PurpleMakuhita,4
	.align	2, 0
	.type	 sSpriteSheet_Headers,object
	.size	 sSpriteSheet_Headers,8
sSpriteSheet_Headers:
	.word	gRouletteHeaders_Gfx
	.short	0x1600
	.short	0x4
	.align	2, 0
	.type	 sSpriteSheet_GridIcons,object
	.size	 sSpriteSheet_GridIcons,8
sSpriteSheet_GridIcons:
	.word	sGridIcons_Gfx
	.short	0x400
	.short	0x5
	.align	2, 0
	.type	 sAnim_Headers,object
sAnim_Headers:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x20
	.byte	0x0
	.space	1
	.short	0x30
	.byte	0x0
	.space	1
	.short	0x40
	.byte	0x0
	.space	1
	.short	0x50
	.byte	0x0
	.space	1
	.short	0x60
	.byte	0x0
	.space	1
	.short	0x70
	.byte	0x0
	.space	1
	.short	0x80
	.byte	0x0
	.space	1
	.short	0x90
	.byte	0x0
	.space	1
	.short	0xa0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Headers,48
	.align	2, 0
	.type	 sAnim_GridIcons,object
sAnim_GridIcons:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x4
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0xc
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_GridIcons,20
	.align	2, 0
	.type	 sAnim_WynautHeader,object
sAnim_WynautHeader:
	.word	sAnim_Headers
	.size	 sAnim_WynautHeader,4
	.align	2, 0
	.type	 sAnim_AzurillHeader,object
sAnim_AzurillHeader:
	.word	sAnim_Headers+0x8
	.size	 sAnim_AzurillHeader,4
	.align	2, 0
	.type	 sAnim_SkittyHeader,object
sAnim_SkittyHeader:
	.word	sAnim_Headers+0x10
	.size	 sAnim_SkittyHeader,4
	.align	2, 0
	.type	 sAnim_MakuhitaHeader,object
sAnim_MakuhitaHeader:
	.word	sAnim_Headers+0x18
	.size	 sAnim_MakuhitaHeader,4
	.align	2, 0
	.type	 sAnim_OrangeHeader,object
sAnim_OrangeHeader:
	.word	sAnim_Headers+0x20
	.size	 sAnim_OrangeHeader,4
	.align	2, 0
	.type	 sAnim_GreenHeader,object
sAnim_GreenHeader:
	.word	sAnim_Headers+0x24
	.size	 sAnim_GreenHeader,4
	.align	2, 0
	.type	 sAnim_PurpleHeader,object
sAnim_PurpleHeader:
	.word	sAnim_Headers+0x28
	.size	 sAnim_PurpleHeader,4
	.align	2, 0
	.type	 sAnim_GridIcon_Wynaut,object
sAnim_GridIcon_Wynaut:
	.word	sAnim_GridIcons
	.size	 sAnim_GridIcon_Wynaut,4
	.align	2, 0
	.type	 sAnim_GridIcon_Azurill,object
sAnim_GridIcon_Azurill:
	.word	sAnim_GridIcons+0x4
	.size	 sAnim_GridIcon_Azurill,4
	.align	2, 0
	.type	 sAnim_GridIcon_Skitty,object
sAnim_GridIcon_Skitty:
	.word	sAnim_GridIcons+0x8
	.size	 sAnim_GridIcon_Skitty,4
	.align	2, 0
	.type	 sAnim_GridIcon_Makuhita,object
sAnim_GridIcon_Makuhita:
	.word	sAnim_GridIcons+0xc
	.size	 sAnim_GridIcon_Makuhita,4
	.align	2, 0
	.type	 sSpriteTemplates_PokeHeaders,object
	.size	 sSpriteTemplates_PokeHeaders,96
sSpriteTemplates_PokeHeaders:
	.short	0x4
	.short	0x8
	.word	sOam_GridHeader
	.word	sAnim_WynautHeader
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x4
	.short	0x8
	.word	sOam_GridHeader
	.word	sAnim_AzurillHeader
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x4
	.short	0x8
	.word	sOam_GridHeader
	.word	sAnim_SkittyHeader
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x4
	.short	0x8
	.word	sOam_GridHeader
	.word	sAnim_MakuhitaHeader
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.align	2, 0
	.type	 sSpriteTemplates_ColorHeaders,object
	.size	 sSpriteTemplates_ColorHeaders,72
sSpriteTemplates_ColorHeaders:
	.short	0x4
	.short	0x8
	.word	sOam_GridHeader
	.word	sAnim_OrangeHeader
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x4
	.short	0x8
	.word	sOam_GridHeader
	.word	sAnim_GreenHeader
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x4
	.short	0x8
	.word	sOam_GridHeader
	.word	sAnim_PurpleHeader
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.align	2, 0
	.type	 sSpriteTemplate_GridIcons,object
	.size	 sSpriteTemplate_GridIcons,96
sSpriteTemplate_GridIcons:
	.short	0x5
	.short	0x8
	.word	sOam_GridIcon
	.word	sAnim_GridIcon_Wynaut
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x5
	.short	0x8
	.word	sOam_GridIcon
	.word	sAnim_GridIcon_Azurill
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x5
	.short	0x8
	.word	sOam_GridIcon
	.word	sAnim_GridIcon_Skitty
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.short	0x5
	.short	0x8
	.word	sOam_GridIcon
	.word	sAnim_GridIcon_Makuhita
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.align	2, 0
	.type	 sSpriteTemplates_WheelIcons,object
	.size	 sSpriteTemplates_WheelIcons,288
sSpriteTemplates_WheelIcons:
	.short	0x0
	.short	0x9
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_OrangeWynaut
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xa
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_GreenAzurill
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xb
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_PurpleSkitty
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xc
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_OrangeMakuhita
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0x9
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_GreenWynaut
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xa
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_PurpleAzurill
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xb
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_OrangeSkitty
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xc
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_GreenMakuhita
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0x9
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_PurpleWynaut
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xa
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_OrangeAzurill
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xb
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_GreenSkitty
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.short	0x0
	.short	0xc
	.word	sOam_WheelIcon
	.word	sAnim_WheelIcon_PurpleMakuhita
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelIcon
	.align	2, 0
	.type	 sOam_Credit,object
	.size	 sOam_Credit,8
sOam_Credit:
	.space	1
	.byte	0x40
	.space	1
	.byte	0xc0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sOam_CreditDigit,object
	.size	 sOam_CreditDigit,8
sOam_CreditDigit:
	.space	1
	.byte	0x80
	.space	1
	.byte	0x0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sOam_Multiplier,object
	.size	 sOam_Multiplier,8
sOam_Multiplier:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x80
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sOam_BallCounter,object
	.size	 sOam_BallCounter,8
sOam_BallCounter:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sSpriteSheets_Interface,object
sSpriteSheets_Interface:
	.word	gRouletteCredit_Gfx
	.short	0x400
	.short	0x7
	.word	gRouletteNumbers_Gfx
	.short	0x280
	.short	0x8
	.word	gRouletteMultiplier_Gfx
	.short	0x500
	.short	0x9
	.word	sBallCounter_Gfx
	.short	0x140
	.short	0xa
	.word	sCursor_Gfx
	.short	0x200
	.short	0xb
	.space	8
	.size	 sSpriteSheets_Interface,48
	.align	2, 0
	.type	 sAnim_CreditDigit,object
sAnim_CreditDigit:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x2
	.byte	0x0
	.space	1
	.short	0x4
	.byte	0x0
	.space	1
	.short	0x6
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0xa
	.byte	0x0
	.space	1
	.short	0xc
	.byte	0x0
	.space	1
	.short	0xe
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x12
	.byte	0x0
	.space	1
	.size	 sAnim_CreditDigit,40
	.align	2, 0
	.type	 sAnims_CreditDigit,object
sAnims_CreditDigit:
	.word	sAnim_CreditDigit
	.size	 sAnims_CreditDigit,4
	.align	2, 0
	.type	 sAnim_Multiplier,object
sAnim_Multiplier:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x18
	.byte	0x0
	.space	1
	.short	0x20
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Multiplier,24
	.align	2, 0
	.type	 sAnims_Multiplier,object
sAnims_Multiplier:
	.word	sAnim_Multiplier
	.size	 sAnims_Multiplier,4
	.align	2, 0
	.type	 sAnim_BallCounter,object
sAnim_BallCounter:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x2
	.byte	0x0
	.space	1
	.short	0x4
	.byte	0x0
	.space	1
	.short	0x6
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_BallCounter,24
	.align	2, 0
	.type	 sAnims_BallCounter,object
sAnims_BallCounter:
	.word	sAnim_BallCounter
	.size	 sAnims_BallCounter,4
	.align	2, 0
	.type	 sSpriteTemplate_Credit,object
	.size	 sSpriteTemplate_Credit,24
sSpriteTemplate_Credit:
	.short	0x7
	.short	0x5
	.word	sOam_Credit
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_CreditDigit,object
	.size	 sSpriteTemplate_CreditDigit,24
sSpriteTemplate_CreditDigit:
	.short	0x8
	.short	0x5
	.word	sOam_CreditDigit
	.word	sAnims_CreditDigit
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Multiplier,object
	.size	 sSpriteTemplate_Multiplier,24
sSpriteTemplate_Multiplier:
	.short	0x9
	.short	0x5
	.word	sOam_Multiplier
	.word	sAnims_Multiplier
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_GridSquare
	.align	2, 0
	.type	 sSpriteTemplate_BallCounter,object
	.size	 sSpriteTemplate_BallCounter,24
sSpriteTemplate_BallCounter:
	.short	0xa
	.short	0x3
	.word	sOam_BallCounter
	.word	sAnims_BallCounter
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Cursor,object
	.size	 sSpriteTemplate_Cursor,24
sSpriteTemplate_Cursor:
	.short	0xb
	.short	0x5
	.word	sOam_GridHeader
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOam_Ball,object
	.size	 sOam_Ball,8
sOam_Ball:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x40
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sSpriteSheet_Ball,object
	.size	 sSpriteSheet_Ball,8
sSpriteSheet_Ball:
	.word	sBall_Gfx
	.short	0x200
	.short	0xc
	.align	2, 0
	.type	 sAnim_Ball_RollFast,object
sAnim_Ball_RollFast:
	.short	0x0
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x8
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Ball_RollFast,20
	.align	2, 0
	.type	 sAnim_Ball_RollMedium,object
sAnim_Ball_RollMedium:
	.short	0x0
	.byte	0xa
	.space	1
	.short	0x4
	.byte	0xa
	.space	1
	.short	0x8
	.byte	0xa
	.space	1
	.short	0x4
	.byte	0xa
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Ball_RollMedium,20
	.align	2, 0
	.type	 sAnim_Ball_RollSlow,object
sAnim_Ball_RollSlow:
	.short	0x0
	.byte	0xf
	.space	1
	.short	0x4
	.byte	0xf
	.space	1
	.short	0x8
	.byte	0xf
	.space	1
	.short	0x4
	.byte	0xf
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Ball_RollSlow,20
	.align	2, 0
	.type	 sAnim_Ball_StopOnFrame1,object
sAnim_Ball_StopOnFrame1:
	.short	0x4
	.byte	0x2
	.space	1
	.short	0x8
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0xc
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Ball_StopOnFrame1,20
	.align	2, 0
	.type	 sAnim_Ball_StopOnFrame3,object
sAnim_Ball_StopOnFrame3:
	.short	0x4
	.byte	0x2
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x4
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Ball_StopOnFrame3,24
	.align	2, 0
	.type	 sAnim_Ball_StopOnFrame4,object
sAnim_Ball_StopOnFrame4:
	.short	0x0
	.byte	0x2
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x8
	.byte	0x5
	.space	1
	.short	0xc
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Ball_StopOnFrame4,20
	.align	2, 0
	.type	 sAnim_Ball_Still,object
sAnim_Ball_Still:
	.short	0xc
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Ball_Still,8
	.align	2, 0
	.type	 sAnim_Ball_StopOnFrame2,object
sAnim_Ball_StopOnFrame2:
	.short	0x8
	.byte	0x2
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x0
	.byte	0x5
	.space	1
	.short	0xc
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Ball_StopOnFrame2,20
	.align	2, 0
	.type	 sAnims_Ball,object
sAnims_Ball:
	.word	sAnim_Ball_RollFast
	.word	sAnim_Ball_RollMedium
	.word	sAnim_Ball_RollSlow
	.word	sAnim_Ball_StopOnFrame1
	.word	sAnim_Ball_StopOnFrame2
	.word	sAnim_Ball_StopOnFrame3
	.word	sAnim_Ball_StopOnFrame4
	.word	sAnim_Ball_StopOnFrame4
	.word	sAnim_Ball_Still
	.size	 sAnims_Ball,36
	.align	2, 0
	.type	 sSpriteTemplate_Ball,object
	.size	 sSpriteTemplate_Ball,24
sSpriteTemplate_Ball:
	.short	0xc
	.short	0x2
	.word	sOam_Ball
	.word	sAnims_Ball
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOam_WheelCenter,object
	.size	 sOam_WheelCenter,8
sOam_WheelCenter:
	.byte	0x51
	.byte	0x3
	.space	1
	.byte	0xc0
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sSpriteSheet_WheelCenter,object
	.size	 sSpriteSheet_WheelCenter,8
sSpriteSheet_WheelCenter:
	.word	gRouletteCenter_Gfx
	.short	0x800
	.short	0x6
	.align	2, 0
	.type	 sSpriteTemplate_WheelCenter,object
	.size	 sSpriteTemplate_WheelCenter,24
sSpriteTemplate_WheelCenter:
	.short	0x6
	.short	0x2
	.word	sOam_WheelCenter
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_WheelCenter
	.align	2, 0
	.type	 sOam_Shroomish,object
	.size	 sOam_Shroomish,8
sOam_Shroomish:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sOam_Taillow,object
	.size	 sOam_Taillow,8
sOam_Taillow:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sSpriteSheet_ShroomishTaillow,object
	.size	 sSpriteSheet_ShroomishTaillow,8
sSpriteSheet_ShroomishTaillow:
	.word	sShroomishTaillow_Gfx
	.short	0xe00
	.short	0xd
	.align	2, 0
	.type	 sAnim_Shroomish,object
sAnim_Shroomish:
	.short	0x0
	.byte	0x6
	.space	1
	.short	0x10
	.byte	0x6
	.space	1
	.short	0x20
	.byte	0x6
	.space	1
	.short	0x30
	.byte	0x6
	.space	1
	.short	0x20
	.byte	0x6
	.space	1
	.short	0x40
	.byte	0x6
	.space	1
	.short	-0x2
	.byte	0x2
	.space	1
	.size	 sAnim_Shroomish,28
	.align	2, 0
	.type	 sAnim_Taillow_WingDown_Left,object
sAnim_Taillow_WingDown_Left:
	.short	0x50
	.byte	0xa
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Taillow_WingDown_Left,8
	.align	2, 0
	.type	 sAnim_Taillow_WingDown_Right,object
sAnim_Taillow_WingDown_Right:
	.short	0x50
	.byte	0x4a
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Taillow_WingDown_Right,8
	.align	2, 0
	.type	 sAnim_Taillow_FlapSlow_Left,object
sAnim_Taillow_FlapSlow_Left:
	.short	0x50
	.byte	0x14
	.space	1
	.short	0x60
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Taillow_FlapSlow_Left,12
	.align	2, 0
	.type	 sAnim_Taillow_FlapSlow_Right,object
sAnim_Taillow_FlapSlow_Right:
	.short	0x50
	.byte	0x54
	.space	1
	.short	0x60
	.byte	0x54
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Taillow_FlapSlow_Right,12
	.align	2, 0
	.type	 sAnim_Taillow_FlapFast_Left,object
sAnim_Taillow_FlapFast_Left:
	.short	0x50
	.byte	0xa
	.space	1
	.short	0x60
	.byte	0xa
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Taillow_FlapFast_Left,12
	.align	2, 0
	.type	 sAnim_Taillow_FlapFast_Right,object
sAnim_Taillow_FlapFast_Right:
	.short	0x50
	.byte	0x4a
	.space	1
	.short	0x60
	.byte	0x4a
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Taillow_FlapFast_Right,12
	.align	2, 0
	.type	 sAnims_Shroomish,object
sAnims_Shroomish:
	.word	sAnim_Shroomish
	.size	 sAnims_Shroomish,4
	.align	2, 0
	.type	 sAnims_Taillow,object
sAnims_Taillow:
	.word	sAnim_Taillow_WingDown_Left
	.word	sAnim_Taillow_WingDown_Right
	.word	sAnim_Taillow_FlapSlow_Left
	.word	sAnim_Taillow_FlapSlow_Right
	.word	sAnim_Taillow_FlapFast_Left
	.word	sAnim_Taillow_FlapFast_Right
	.size	 sAnims_Taillow,24
	.align	2, 0
	.type	 sSpriteTemplate_Shroomish,object
	.size	 sSpriteTemplate_Shroomish,24
sSpriteTemplate_Shroomish:
	.short	0xd
	.short	0x6
	.word	sOam_Shroomish
	.word	sAnims_Shroomish
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Taillow,object
	.size	 sSpriteTemplate_Taillow,24
sSpriteTemplate_Taillow:
	.short	0xd
	.short	0x7
	.word	sOam_Taillow
	.word	sAnims_Taillow
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_Taillow
	.align	2, 0
	.type	 sOam_ShroomishBallShadow,object
	.size	 sOam_ShroomishBallShadow,8
sOam_ShroomishBallShadow:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x40
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sOam_ShroomishShadow,object
	.size	 sOam_ShroomishShadow,8
sOam_ShroomishShadow:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sOam_TaillowShadow,object
	.size	 sOam_TaillowShadow,8
sOam_TaillowShadow:
	.space	1
	.byte	0x41
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sSpriteSheet_Shadow,object
	.size	 sSpriteSheet_Shadow,8
sSpriteSheet_Shadow:
	.word	sShadow_Gfx
	.short	0x180
	.short	0xe
	.align	2, 0
	.type	 sAffineAnim_Unused3,object
sAffineAnim_Unused3:
	.short	0x80
	.short	0x80
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x2
	.short	0x2
	.byte	0x0
	.byte	0x3c
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_Unused3,24
	.align	2, 0
	.type	 sAffineAnim_TaillowShadow,object
sAffineAnim_TaillowShadow:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	-0x2
	.short	0x0
	.byte	0x0
	.byte	0xf
	.space	2
	.short	-0x1
	.short	-0x2
	.byte	0x0
	.byte	0xf
	.space	2
	.short	-0x1
	.short	-0x5
	.byte	0x0
	.byte	0x18
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_TaillowShadow,40
	.align	2, 0
	.type	 sAffineAnims_Unused3,object
sAffineAnims_Unused3:
	.word	sAffineAnim_Unused3
	.size	 sAffineAnims_Unused3,4
	.align	2, 0
	.type	 sAffineAnims_TaillowShadow,object
sAffineAnims_TaillowShadow:
	.word	sAffineAnim_TaillowShadow
	.size	 sAffineAnims_TaillowShadow,4
	.align	2, 0
	.type	 sAffineAnim_Unused4,object
sAffineAnim_Unused4:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_Unused4,16
	.align	2, 0
	.type	 sAffineAnims_Unused4,object
sAffineAnims_Unused4:
	.word	sAffineAnim_Unused4
	.size	 sAffineAnims_Unused4,4
	.align	2, 0
	.type	 sAnim_ShroomishBallShadow,object
sAnim_ShroomishBallShadow:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_ShroomishBallShadow,8
	.align	2, 0
	.type	 sAnim_UnstickMonShadow,object
sAnim_UnstickMonShadow:
	.short	0x4
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_UnstickMonShadow,8
	.align	2, 0
	.type	 sAnims_ShroomishBallShadow,object
sAnims_ShroomishBallShadow:
	.word	sAnim_ShroomishBallShadow
	.size	 sAnims_ShroomishBallShadow,4
	.align	2, 0
	.type	 sAnims_UnstickMonShadow,object
sAnims_UnstickMonShadow:
	.word	sAnim_UnstickMonShadow
	.size	 sAnims_UnstickMonShadow,4
	.align	2, 0
	.type	 sSpriteTemplate_ShroomishShadow,object
sSpriteTemplate_ShroomishShadow:
	.short	0xe
	.short	0x1
	.word	sOam_ShroomishBallShadow
	.word	sAnims_ShroomishBallShadow
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.short	0xe
	.short	0x1
	.word	sOam_ShroomishShadow
	.word	sAnims_UnstickMonShadow
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_Shroomish
	.size	 sSpriteTemplate_ShroomishShadow,48
	.align	2, 0
	.type	 sSpriteTemplate_TaillowShadow,object
	.size	 sSpriteTemplate_TaillowShadow,24
sSpriteTemplate_TaillowShadow:
	.short	0xe
	.short	0x1
	.word	sOam_TaillowShadow
	.word	sAnims_UnstickMonShadow
	.word	0x0
	.word	sAffineAnims_TaillowShadow
	.word	SpriteCB_Taillow
.text
	.align	2, 0
	.type	 Task_ShowMinBetYesNo,function
	.thumb_func
Task_ShowMinBetYesNo:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	DisplayYesNoMenuDefaultYes
	ldr	r1, .L641
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	pop	{r4}
	pop	{r0}
	bx	r0
.L642:
	.align	2, 0
.L641:
	.word	sYesNoTable_AcceptMinBet
.Lfe47:
	.size	 Task_ShowMinBetYesNo,.Lfe47-Task_ShowMinBetYesNo
	.align	2, 0
	.type	 Task_FadeToRouletteGame,function
	.thumb_func
Task_FadeToRouletteGame:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L645
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L644	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L645+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L644:
	pop	{r4}
	pop	{r0}
	bx	r0
.L646:
	.align	2, 0
.L645:
	.word	gPaletteFade
	.word	CB2_LoadRoulette
.Lfe48:
	.size	 Task_FadeToRouletteGame,.Lfe48-Task_FadeToRouletteGame
	.align	2, 0
	.type	 Task_AcceptMinBet,function
	.thumb_func
Task_AcceptMinBet:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	bl	HideCoinsWindow
	bl	FreeAllWindowBuffers
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r2, .L648
	ldrb	r1, [r2, #0x8]
	lsl	r1, r1, #0x1a
	lsr	r1, r1, #0x1a
	ldrb	r3, [r2, #0x4]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x4]
	bl	UpdatePaletteFade
	ldr	r1, .L648+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L648+0x8
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L649:
	.align	2, 0
.L648:
	.word	gPaletteFade
	.word	gTasks
	.word	Task_FadeToRouletteGame
.Lfe49:
	.size	 Task_AcceptMinBet,.Lfe49-Task_AcceptMinBet
	.align	2, 0
	.type	 Task_DeclineMinBet,function
	.thumb_func
Task_DeclineMinBet:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	bl	HideCoinsWindow
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 Task_DeclineMinBet,.Lfe50-Task_DeclineMinBet
	.align	2, 0
	.type	 Task_NotEnoughForMinBet,function
	.thumb_func
Task_NotEnoughForMinBet:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L653
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	ldr	r0, .L653+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L652	@cond_branch
	ldr	r1, .L653+0x8
	mov	r0, #0x1
	strh	r0, [r1]
	bl	HideCoinsWindow
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
.L652:
	pop	{r4}
	pop	{r0}
	bx	r0
.L654:
	.align	2, 0
.L653:
	.word	gTasks
	.word	gMain
	.word	gSpecialVar_0x8004
.Lfe51:
	.size	 Task_NotEnoughForMinBet,.Lfe51-Task_NotEnoughForMinBet
	.align	2, 0
	.type	 Task_PrintMinBet,function
	.thumb_func
Task_PrintMinBet:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L657
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L656	@cond_branch
	ldr	r2, .L657+0x4
	ldr	r0, .L657+0x8
	ldrh	r1, [r0]
	mov	r5, #0x1
	add	r0, r5, #0
	and	r0, r0, r1
	lsr	r1, r1, #0x7
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r2
	ldrb	r1, [r0]
	ldr	r0, .L657+0xc
	mov	r2, #0x2
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L657+0x10
	ldr	r1, .L657+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	str	r5, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L657+0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L657+0x1c
	str	r1, [r0]
.L656:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L658:
	.align	2, 0
.L657:
	.word	gMain
	.word	sTableMinBets
	.word	gSpecialVar_0x8004
	.word	gStringVar1
	.word	gStringVar4
	.word	Roulette_Text_PlayMinimumWagerIsX
	.word	gTasks
	.word	Task_ShowMinBetYesNo
.Lfe52:
	.size	 Task_PrintMinBet,.Lfe52-Task_PrintMinBet
	.align	2, 0
	.type	 Task_PrintRouletteEntryMsg,function
	.thumb_func
Task_PrintRouletteEntryMsg:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L664
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r1, #0x22
	ldrsh	r0, [r6, r1]
	bl	PrintCoinsString
	ldr	r2, .L664+0x4
	ldr	r0, .L664+0x8
	mov	r8, r0
	ldrh	r1, [r0]
	mov	r7, #0x1
	add	r0, r7, #0
	and	r0, r0, r1
	lsr	r1, r1, #0x7
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r2
	ldrb	r4, [r0]
	ldr	r0, .L664+0xc
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	mov	r1, #0x22
	ldrsh	r0, [r6, r1]
	cmp	r0, r4
	blt	.L660	@cond_branch
	mov	r0, r8
	ldrh	r1, [r0]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L661	@cond_branch
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L661	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r2, .L664+0x10
	str	r7, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L664+0x14
	str	r0, [r6]
	b	.L663
.L665:
	.align	2, 0
.L664:
	.word	gTasks
	.word	sTableMinBets
	.word	gSpecialVar_0x8004
	.word	gStringVar1
	.word	Roulette_Text_SpecialRateTable
	.word	Task_PrintMinBet
.L661:
	ldr	r4, .L666
	ldr	r1, .L666+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L666+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L666+0xc
	str	r1, [r0]
	b	.L663
.L667:
	.align	2, 0
.L666:
	.word	gStringVar4
	.word	Roulette_Text_PlayMinimumWagerIsX
	.word	gTasks
	.word	Task_ShowMinBetYesNo
.L660:
	ldr	r5, .L668
	ldr	r1, .L668+0x4
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	str	r7, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L668+0x8
	str	r0, [r6]
	strh	r4, [r6, #0x22]
	strh	r4, [r6, #0x8]
.L663:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L669:
	.align	2, 0
.L668:
	.word	gStringVar4
	.word	Roulette_Text_NotEnoughCoins
	.word	Task_NotEnoughForMinBet
.Lfe53:
	.size	 Task_PrintRouletteEntryMsg,.Lfe53-Task_PrintRouletteEntryMsg
	.align	2, 0
	.globl	PlayRoulette
	.type	 PlayRoulette,function
	.thumb_func
PlayRoulette:
	push	{r4, lr}
	bl	ScriptContext2_Enable
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	mov	r2, #0x1
	bl	ShowCoinsWindow
	ldr	r0, .L671
	mov	r1, #0x0
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCoins
	ldr	r2, .L671+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r0, [r1, #0x22]
	pop	{r4}
	pop	{r0}
	bx	r0
.L672:
	.align	2, 0
.L671:
	.word	Task_PrintRouletteEntryMsg
	.word	gTasks
.Lfe54:
	.size	 PlayRoulette,.Lfe54-PlayRoulette
	.align	2, 0
	.type	 LoadOrFreeMiscSpritePalettesAndSheets,function
	.thumb_func
LoadOrFreeMiscSpritePalettesAndSheets:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L674	@cond_branch
	bl	FreeAllSpritePalettes
	ldr	r0, .L676
	bl	LoadSpritePalettes
	ldr	r0, .L676+0x4
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L676+0x8
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L676+0xc
	bl	LoadCompressedSpriteSheet
	b	.L675
.L677:
	.align	2, 0
.L676:
	.word	sSpritePalettes
	.word	sSpriteSheet_Ball
	.word	sSpriteSheet_ShroomishTaillow
	.word	sSpriteSheet_Shadow
.L674:
	mov	r0, #0xe
	bl	FreeSpriteTilesByTag
	mov	r0, #0xd
	bl	FreeSpriteTilesByTag
	mov	r0, #0xc
	bl	FreeSpriteTilesByTag
	bl	FreeAllSpritePalettes
.L675:
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 LoadOrFreeMiscSpritePalettesAndSheets,.Lfe55-LoadOrFreeMiscSpritePalettesAndSheets
	.align	2, 0
	.type	 CreateWheelIconSprite,function
	.thumb_func
CreateWheelIconSprite:
	push	{r4, r5, r6, lr}
	add	r4, r1, #0
	add	r6, r2, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, [r0, #0x4]
	ldrb	r3, [r1]
	mov	r1, #0x74
	mov	r2, #0x50
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r0, .L680
	lsl	r1, r5, #0x4
	add	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r6]
	strh	r0, [r1, #0x2e]
	strh	r4, [r1, #0x30]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	add	r1, r1, #0x2c
	ldrb	r0, [r1]
	mov	r2, #0x40
	orr	r0, r0, r2
	mov	r2, #0x80
	orr	r0, r0, r2
	strb	r0, [r1]
	ldrh	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x1e
	strh	r0, [r6]
	lsl	r0, r0, #0x10
	ldr	r1, .L680+0x4
	cmp	r0, r1
	bls	.L679	@cond_branch
	ldr	r1, .L680+0x8
	add	r0, r2, r1
	strh	r0, [r6]
.L679:
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L681:
	.align	2, 0
.L680:
	.word	gSprites
	.word	0x1670000
	.word	-0x14a
.Lfe56:
	.size	 CreateWheelIconSprite,.Lfe56-CreateWheelIconSprite
	.align	2, 0
	.type	 CreateGridSprites,function
	.thumb_func
CreateGridSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	ldr	r4, .L704
	ldr	r0, [r4]
	ldr	r5, .L704+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp]
	mov	r6, sp
	ldrh	r1, [r4, #0x6]
	lsl	r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	LoadSpriteSheet
	ldr	r4, .L704+0x8
	ldr	r0, [r4]
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp]
	ldrh	r0, [r4, #0x4]
	strh	r0, [r6, #0x4]
	ldrh	r0, [r4, #0x6]
	strh	r0, [r6, #0x6]
	mov	r0, sp
	bl	LoadSpriteSheet
	mov	r6, #0x0
	ldr	r0, .L704+0xc
	mov	r8, r0
.L686:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x1b
	lsr	r4, r0, #0x18
	mov	r5, #0x0
	lsl	r7, r6, #0x2
.L690:
	lsl	r1, r5, #0x1
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	ldr	r0, .L704+0x10
	add	r0, r1, r0
	add	r1, r1, #0x94
	add	r2, r4, #0
	add	r2, r2, #0x5c
	mov	r3, #0x1e
	bl	CreateSprite
	ldr	r1, .L704+0x14
	ldr	r1, [r1]
	add	r2, r5, #0
	add	r2, r2, #0x1d
	add	r2, r7, r2
	add	r1, r1, #0x3c
	add	r1, r1, r2
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x18
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x47
	bls	.L689	@cond_branch
	mov	r4, #0x0
.L689:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L690	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L686	@cond_branch
	mov	r6, #0x0
	ldr	r4, .L704+0xc
.L697:
	lsl	r1, r6, #0x1
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	ldr	r0, .L704+0x18
	add	r0, r1, r0
	add	r1, r1, #0x94
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x46
	mov	r3, #0x1e
	bl	CreateSprite
	ldr	r1, .L704+0x14
	ldr	r1, [r1]
	add	r1, r1, r6
	add	r1, r1, #0x65
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bls	.L697	@cond_branch
	mov	r6, #0x0
	ldr	r4, .L704+0xc
.L702:
	lsl	r2, r6, #0x1
	add	r2, r2, r6
	lsl	r2, r2, #0x3
	ldr	r0, .L704+0x1c
	add	r0, r2, r0
	add	r2, r2, #0x5c
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r1, #0x7e
	mov	r3, #0x1e
	bl	CreateSprite
	ldr	r1, .L704+0x14
	ldr	r1, [r1]
	add	r1, r1, r6
	add	r1, r1, #0x69
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L702	@cond_branch
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L705:
	.align	2, 0
.L704:
	.word	sSpriteSheet_Headers
	.word	gDecompressionBuffer
	.word	sSpriteSheet_GridIcons
	.word	gSprites
	.word	sSpriteTemplate_GridIcons
	.word	sRoulette
	.word	sSpriteTemplates_PokeHeaders
	.word	sSpriteTemplates_ColorHeaders
.Lfe57:
	.size	 CreateGridSprites,.Lfe57-CreateGridSprites
	.align	2, 0
	.type	 DestroyGridSprites,function
	.thumb_func
DestroyGridSprites:
	push	{r4, lr}
	mov	r4, #0x0
.L710:
	ldr	r0, .L712
	ldr	r0, [r0]
	add	r0, r0, r4
	add	r0, r0, #0x59
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L712+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xb
	bls	.L710	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L713:
	.align	2, 0
.L712:
	.word	sRoulette
	.word	gSprites
.Lfe58:
	.size	 DestroyGridSprites,.Lfe58-DestroyGridSprites
	.align	2, 0
	.type	 ShowHideGridIcons,function
	.thumb_func
ShowHideGridIcons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	ip, r1
	cmp	r0, #0
	beq	.L722	@cond_branch
	cmp	r0, #0x1
	bne	.L715	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L739
	ldr	r3, .L739+0x4
	mov	r2, #0x4
.L720:
	ldr	r0, [r3]
	add	r0, r0, r4
	add	r0, r0, #0x59
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x12
	bls	.L720	@cond_branch
	b	.L715
.L740:
	.align	2, 0
.L739:
	.word	gSprites
	.word	sRoulette
.L722:
	mov	r4, #0x0
	ldr	r0, .L741
	mov	r9, r0
	ldr	r7, .L741+0x4
	add	r1, r7, #0x4
	mov	r8, r1
	ldr	r5, .L741+0x8
	mov	r6, #0x5
	neg	r6, r6
.L726:
	mov	r0, r9
	ldr	r2, [r0]
	lsl	r3, r4, #0x3
	mov	r1, r8
	add	r0, r3, r1
	ldr	r1, [r2, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L729	@cond_branch
	add	r0, r3, r7
	ldrb	r0, [r0, #0x2]
	cmp	r0, ip
	beq	.L729	@cond_branch
	add	r0, r2, r4
	add	r0, r0, #0x59
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L725
.L742:
	.align	2, 0
.L741:
	.word	sRoulette
	.word	sRouletteSlots
	.word	gSprites
.L729:
	add	r0, r2, r4
	add	r0, r0, #0x59
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
.L725:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xb
	bls	.L726	@cond_branch
	cmp	r4, #0x12
	bhi	.L715	@cond_branch
	ldr	r6, .L743
	ldr	r3, .L743+0x4
	mov	r5, #0x5
	neg	r5, r5
.L735:
	ldr	r0, [r3]
	add	r0, r0, r4
	add	r0, r0, #0x59
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x12
	bls	.L735	@cond_branch
.L715:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L744:
	.align	2, 0
.L743:
	.word	gSprites
	.word	sRoulette
.Lfe59:
	.size	 ShowHideGridIcons,.Lfe59-ShowHideGridIcons
	.align	2, 0
	.type	 CreateGridBallSprites,function
	.thumb_func
CreateGridBallSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r5, #0x0
	ldr	r6, .L751
	ldr	r4, .L751+0x4
	mov	r0, #0x4
	mov	r8, r0
.L749:
	ldr	r0, .L751+0x8
	mov	r1, #0x74
	mov	r2, #0x14
	mov	r3, #0xa
	bl	CreateSprite
	ldr	r1, [r6]
	add	r3, r5, #0
	add	r3, r3, #0x31
	add	r1, r1, #0x3c
	add	r1, r1, r3
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, r8
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r2, [r6]
	add	r2, r2, #0x3c
	add	r2, r2, r3
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x1
	strh	r1, [r0, #0x2e]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L751+0xc
	str	r1, [r0]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r1, [r0, #0x5]
	mov	r7, #0xd
	neg	r7, r7
	add	r2, r7, #0
	and	r1, r1, r2
	mov	r2, r8
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r0, [r6]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x8
	bl	StartSpriteAnim
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L749	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L752:
	.align	2, 0
.L751:
	.word	sRoulette
	.word	gSprites
	.word	sSpriteTemplate_Ball
	.word	SpriteCB_GridSquare
.Lfe60:
	.size	 CreateGridBallSprites,.Lfe60-CreateGridBallSprites
	.align	2, 0
	.type	 ShowHideGridBalls,function
	.thumb_func
ShowHideGridBalls:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	mov	r6, #0x0
	cmp	r0, #0
	beq	.L754	@cond_branch
	ldr	r4, .L769
	ldr	r3, .L769+0x4
	mov	r2, #0x4
.L758:
	ldr	r0, [r3]
	add	r0, r0, r6
	add	r0, r0, #0x6d
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L758	@cond_branch
	b	.L760
.L770:
	.align	2, 0
.L769:
	.word	gSprites
	.word	sRoulette
.L754:
	ldr	r0, .L771
	mov	r8, r0
	ldr	r7, .L771+0x4
	ldr	r0, .L771+0x8
	mov	ip, r0
	mov	r0, #0x5
	neg	r0, r0
	mov	sl, r0
.L764:
	mov	r0, r8
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xc
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L766	@cond_branch
	cmp	r6, r9
	bne	.L765	@cond_branch
.L766:
	add	r0, r1, r6
	add	r0, r0, #0x6d
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L763
.L772:
	.align	2, 0
.L771:
	.word	sRoulette
	.word	gSprites
	.word	sGridSelections
.L765:
	add	r5, r6, #0
	add	r5, r5, #0x31
	add	r0, r1, #0
	add	r0, r0, #0x3c
	add	r0, r0, r5
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, sl
	and	r0, r0, r2
	strb	r0, [r1]
	mov	r0, r8
	ldr	r3, [r0]
	add	r4, r3, #0
	add	r4, r4, #0x3c
	add	r4, r4, r5
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r7
	add	r3, r3, #0xc
	add	r3, r3, r6
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, ip
	ldrb	r0, [r0, #0x3]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0x4
	strh	r0, [r2, #0x20]
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r7
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, ip
	ldrb	r0, [r0, #0x4]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0x3
	strh	r0, [r2, #0x22]
.L763:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L764	@cond_branch
.L760:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe61:
	.size	 ShowHideGridBalls,.Lfe61-ShowHideGridBalls
	.align	2, 0
	.type	 ShowHideWinSlotCursor,function
	.thumb_func
ShowHideWinSlotCursor:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L774	@cond_branch
	ldr	r2, .L776
	ldr	r0, .L776+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L775
.L777:
	.align	2, 0
.L776:
	.word	gSprites
	.word	sRoulette
.L774:
	ldr	r4, .L778
	ldr	r3, .L778+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r3, [r3]
	add	r3, r3, #0x6c
	ldrb	r0, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldr	r0, .L778+0x8
	lsl	r2, r5, #0x2
	add	r2, r2, r5
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	ldrb	r0, [r2, #0x3]
	add	r0, r0, #0x2
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x20]
	ldrb	r0, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r0, [r2, #0x4]
	add	r0, r0, #0x2
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x22]
.L775:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L779:
	.align	2, 0
.L778:
	.word	gSprites
	.word	sRoulette
	.word	sGridSelections
.Lfe62:
	.size	 ShowHideWinSlotCursor,.Lfe62-ShowHideWinSlotCursor
	.align	2, 0
	.type	 CreateWheelIconSprites,function
	.thumb_func
CreateWheelIconSprites:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L791
	ldr	r0, [r4]
	ldr	r5, .L791+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp, #0x4]
	add	r0, sp, #0x4
	ldrh	r2, [r4, #0x6]
	lsl	r2, r2, #0x10
	ldrh	r1, [r4, #0x4]
	orr	r1, r1, r2
	str	r1, [r0, #0x4]
	bl	LoadSpriteSheet
	mov	r1, #0xf
	mov	r0, sp
	strh	r1, [r0]
	mov	r0, #0x0
	ldr	r7, .L791+0x8
.L784:
	mov	r4, #0x0
	add	r6, r0, #0x1
	lsl	r5, r0, #0x2
.L788:
	add	r1, r5, r4
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L791+0xc
	add	r0, r0, r1
	mov	r1, #0x28
	mov	r2, sp
	bl	CreateWheelIconSprite
	ldr	r1, .L791+0x10
	ldr	r1, [r1]
	add	r2, r4, #0x7
	add	r2, r5, r2
	add	r1, r1, #0x3c
	add	r1, r1, r2
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x2c
	ldrb	r0, [r1]
	mov	r2, #0x40
	orr	r0, r0, r2
	mov	r2, #0x80
	orr	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L788	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bls	.L784	@cond_branch
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L792:
	.align	2, 0
.L791:
	.word	sSpriteSheet_WheelIcons
	.word	gDecompressionBuffer
	.word	gSprites
	.word	sSpriteTemplates_WheelIcons
	.word	sRoulette
.Lfe63:
	.size	 CreateWheelIconSprites,.Lfe63-CreateWheelIconSprites
	.align	2, 0
	.type	 SpriteCB_WheelIcon,function
	.thumb_func
SpriteCB_WheelIcon:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r0, .L797
	ldr	r1, [r0]
	ldrh	r0, [r6, #0x2e]
	ldrh	r1, [r1, #0x24]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	asr	r1, r0, #0x10
	ldr	r0, .L797+0x4
	cmp	r1, r0
	ble	.L794	@cond_branch
	ldr	r2, .L797+0x8
	add	r0, r1, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L794:
	add	r0, r4, #0
	bl	Sin2
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	bl	Cos2
	lsl	r2, r5, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x30
	ldrsh	r1, [r6, r3]
	mul	r1, r1, r2
	asr	r1, r1, #0xc
	strh	r1, [r6, #0x24]
	lsl	r0, r0, #0x10
	asr	r4, r0, #0x10
	neg	r1, r4
	mov	r3, #0x30
	ldrsh	r0, [r6, r3]
	mul	r0, r0, r1
	asr	r0, r0, #0xc
	strh	r0, [r6, #0x26]
	ldrb	r0, [r6, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r3, r0, #0x1b
	cmp	r2, #0
	bge	.L795	@cond_branch
	add	r2, r2, #0xf
.L795:
	lsl	r0, r2, #0xc
	lsr	r5, r0, #0x10
	ldr	r1, .L797+0xc
	lsl	r0, r3, #0x3
	add	r1, r0, r1
	add	r0, r4, #0
	cmp	r0, #0
	bge	.L796	@cond_branch
	add	r0, r0, #0xf
.L796:
	asr	r0, r0, #0x4
	strh	r0, [r1, #0x6]
	strh	r0, [r1]
	strh	r5, [r1, #0x2]
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	strh	r0, [r1, #0x4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L798:
	.align	2, 0
.L797:
	.word	sRoulette
	.word	0x167
	.word	-0x168
	.word	gOamMatrices
.Lfe64:
	.size	 SpriteCB_WheelIcon,.Lfe64-SpriteCB_WheelIcon
	.align	2, 0
	.type	 CreateInterfaceSprites,function
	.thumb_func
CreateInterfaceSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r5, #0x0
	ldr	r7, .L815
	mov	r6, sp
.L803:
	ldr	r0, .L815+0x4
	lsl	r4, r5, #0x3
	add	r4, r4, r0
	ldr	r0, [r4]
	add	r1, r7, #0
	bl	LZ77UnCompWram
	str	r7, [sp]
	ldrh	r2, [r4, #0x4]
	ldr	r0, .L815+0x8
	ldr	r1, [r6, #0x4]
	and	r1, r1, r0
	orr	r1, r1, r2
	str	r1, [r6, #0x4]
	ldrh	r2, [r4, #0x6]
	lsl	r2, r2, #0x10
	ldr	r0, .L815+0xc
	and	r0, r0, r1
	orr	r0, r0, r2
	str	r0, [r6, #0x4]
	mov	r0, sp
	bl	LoadSpriteSheet
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L803	@cond_branch
	ldr	r0, .L815+0x10
	mov	r1, #0xd0
	mov	r2, #0x10
	mov	r3, #0x4
	bl	CreateSprite
	ldr	r3, .L815+0x14
	ldr	r1, [r3]
	add	r1, r1, #0x50
	strb	r0, [r1]
	ldr	r4, .L815+0x18
	ldr	r0, [r3]
	add	r0, r0, #0x50
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r5, #0x0
	add	r7, r3, #0
.L808:
	lsl	r1, r5, #0x13
	mov	r0, #0xc4
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	asr	r1, r1, #0x10
	ldr	r0, .L815+0x1c
	mov	r2, #0x18
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r3, r5, #0
	add	r3, r3, #0x15
	add	r1, r1, #0x3c
	add	r1, r1, r3
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r7]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r6, #0x40
	orr	r1, r1, r6
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L808	@cond_branch
	ldr	r0, .L815+0x20
	mov	r1, #0x78
	mov	r2, #0x44
	mov	r3, #0x4
	bl	CreateSprite
	ldr	r2, .L815+0x14
	ldr	r1, [r2]
	add	r1, r1, #0x55
	strb	r0, [r1]
	ldr	r3, .L815+0x18
	ldr	r0, [r2]
	add	r0, r0, #0x55
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	orr	r1, r1, r6
	strb	r1, [r0]
	mov	r5, #0x0
	add	r4, r2, #0
	add	r7, r3, #0
.L813:
	lsl	r1, r5, #0x14
	mov	r2, #0xc0
	lsl	r2, r2, #0x10
	add	r1, r1, r2
	asr	r1, r1, #0x10
	ldr	r0, .L815+0x24
	mov	r2, #0x24
	mov	r3, #0x4
	bl	CreateSprite
	ldr	r1, [r4]
	add	r2, r5, #0
	add	r2, r2, #0x1a
	add	r1, r1, #0x3c
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r4]
	add	r0, r0, #0x3c
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r3, #0x4
	mov	r8, r3
	mov	r3, r8
	orr	r1, r1, r3
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x3c
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r6, #0x40
	orr	r1, r1, r6
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L813	@cond_branch
	ldr	r0, .L815+0x28
	mov	r1, #0x98
	mov	r2, #0x60
	mov	r3, #0x9
	bl	CreateSprite
	ldr	r3, .L815+0x14
	ldr	r1, [r3]
	add	r1, r1, #0x6c
	strb	r0, [r1]
	ldr	r4, .L815+0x18
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, r8
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	orr	r1, r1, r6
	strb	r1, [r0]
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L816:
	.align	2, 0
.L815:
	.word	gDecompressionBuffer
	.word	sSpriteSheets_Interface
	.word	-0x10000
	.word	0xffff
	.word	sSpriteTemplate_Credit
	.word	sRoulette
	.word	gSprites
	.word	sSpriteTemplate_CreditDigit
	.word	sSpriteTemplate_Multiplier
	.word	sSpriteTemplate_BallCounter
	.word	sSpriteTemplate_Cursor
.Lfe65:
	.size	 CreateInterfaceSprites,.Lfe65-CreateInterfaceSprites
	.align	2, 0
	.type	 SetCreditDigits,function
	.thumb_func
SetCreditDigits:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	mov	r8, r0
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r1, .L825
	mov	r9, r1
	ldr	r0, .L825+0x4
	mov	sl, r0
.L821:
	add	r0, r7, #0
	mov	r1, r8
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L825+0x4
	ldr	r0, [r1]
	add	r3, r6, #0
	add	r3, r3, #0x15
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L825
	add	r0, r0, r1
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	cmp	r5, #0
	bne	.L823	@cond_branch
	cmp	r4, #0
	bne	.L823	@cond_branch
	cmp	r6, #0x3
	bne	.L822	@cond_branch
.L823:
	mov	r4, sl
	ldr	r0, [r4]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r4, #0x5
	neg	r4, r4
	add	r2, r4, #0
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r1, sl
	ldr	r0, [r1]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	mov	r4, r9
	add	r3, r0, r4
	add	r4, r3, #0
	add	r4, r4, #0x40
	ldr	r1, .L825+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrh	r2, [r0]
	ldrh	r4, [r4]
	add	r2, r2, r4
	ldr	r4, .L825+0xc
	add	r0, r4, #0
	and	r2, r2, r0
	ldrh	r0, [r3, #0x4]
	ldr	r4, .L825+0x10
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strh	r0, [r3, #0x4]
	mov	r4, #0x1
.L822:
	add	r0, r7, #0
	mov	r1, r8
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r0, r8
	mov	r1, #0xa
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bls	.L821	@cond_branch
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L826:
	.align	2, 0
.L825:
	.word	gSprites
	.word	sRoulette
	.word	gSprites+0x8
	.word	0x3ff
	.word	-0x400
.Lfe66:
	.size	 SetCreditDigits,.Lfe66-SetCreditDigits
	.section .rodata
.LC301:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
.text
	.align	2, 0
	.type	 GetMultiplierAnimId,function
	.thumb_func
GetMultiplierAnimId:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L841
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	cmp	r4, #0x13
	bls	.L828	@cond_branch
	mov	r4, #0x0
.L828:
	ldr	r3, .L841+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r2, r0, #0x2
	add	r0, r2, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x4
	beq	.L832	@cond_branch
	cmp	r0, #0x4
	bgt	.L838	@cond_branch
	cmp	r0, #0x3
	beq	.L830	@cond_branch
	b	.L829
.L842:
	.align	2, 0
.L841:
	.word	.LC301
	.word	sGridSelections
.L838:
	cmp	r0, #0xc
	beq	.L834	@cond_branch
	b	.L829
.L830:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__udivsi3
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L843
	ldr	r0, [r0]
	add	r0, r0, #0x16
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bhi	.L829	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L840
.L844:
	.align	2, 0
.L843:
	.word	sRoulette
.L832:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L845
	ldr	r0, [r0]
	add	r0, r0, #0x12
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bhi	.L829	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x2
.L840:
	add	r0, r0, sp
	ldrb	r0, [r0]
	b	.L839
.L846:
	.align	2, 0
.L845:
	.word	sRoulette
.L834:
	ldr	r0, .L847
	ldr	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x8
	add	r0, r2, r0
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L829	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x4]
	b	.L839
.L848:
	.align	2, 0
.L847:
	.word	sRoulette
.L829:
	mov	r0, #0x0
.L839:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 GetMultiplierAnimId,.Lfe67-GetMultiplierAnimId
	.align	2, 0
	.type	 SetMultiplierSprite,function
	.thumb_func
SetMultiplierSprite:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L850
	ldr	r1, [r1]
	add	r1, r1, #0x55
	ldrb	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L850+0x4
	add	r4, r1, r2
	bl	GetMultiplierAnimId
	add	r3, r4, #0
	add	r3, r3, #0x2b
	strb	r0, [r3]
	add	r2, r4, #0
	add	r2, r2, #0x40
	ldr	r1, [r4, #0x8]
	ldrb	r0, [r3]
	ldr	r1, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L850+0x8
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r4, #0x4]
	ldr	r0, .L850+0xc
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r4, #0x4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L851:
	.align	2, 0
.L850:
	.word	sRoulette
	.word	gSprites
	.word	0x3ff
	.word	-0x400
.Lfe68:
	.size	 SetMultiplierSprite,.Lfe68-SetMultiplierSprite
	.align	2, 0
	.type	 SetBallCounterNumLeft,function
	.thumb_func
SetBallCounterNumLeft:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r6, #0x0
	ldr	r1, .L876
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x19]
	add	r5, r1, #0
	cmp	r0, #0x1
	bne	.L853	@cond_branch
	mov	r6, #0x2
.L853:
	cmp	r2, #0x6
	bls	.LCB8636
	b	.L867	@long jump
.LCB8636:
	lsl	r0, r2, #0x2
	ldr	r1, .L876+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L877:
	.align	2, 0
.L876:
	.word	sRoulette
	.word	.L873
	.align	2, 0
	.align	2, 0
.L873:
	.word	.L867
	.word	.L865
	.word	.L864
	.word	.L863
	.word	.L862
	.word	.L861
	.word	.L855
.L855:
	mov	r4, #0x0
	ldr	r5, .L878
	ldr	r6, .L878+0x4
	mov	r0, #0x5
	neg	r0, r0
	mov	ip, r0
	add	r7, r5, #0
	add	r7, r7, #0x8
	ldr	r2, .L878+0x8
	mov	r8, r2
.L859:
	ldr	r0, [r6]
	add	r3, r4, #0
	add	r3, r3, #0x1a
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, ip
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r5
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, r7
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L878+0xc
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	mov	r0, r8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L859	@cond_branch
	b	.L854
.L879:
	.align	2, 0
.L878:
	.word	gSprites
	.word	sRoulette
	.word	-0x400
	.word	0x3ff
.L861:
	ldr	r2, .L880
	ldr	r0, [r5]
	add	r0, r0, #0x58
	b	.L874
.L881:
	.align	2, 0
.L880:
	.word	gSprites
.L862:
	ldr	r2, .L882
	ldr	r0, [r5]
	add	r0, r0, #0x58
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r2
	add	r4, r3, #0
	add	r4, r4, #0x40
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	b	.L875
.L883:
	.align	2, 0
.L882:
	.word	gSprites
.L863:
	ldr	r2, .L884
	ldr	r0, [r5]
	add	r0, r0, #0x57
	b	.L874
.L885:
	.align	2, 0
.L884:
	.word	gSprites
.L864:
	ldr	r2, .L886
	ldr	r0, [r5]
	add	r0, r0, #0x57
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r2
	add	r4, r3, #0
	add	r4, r4, #0x40
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	b	.L875
.L887:
	.align	2, 0
.L886:
	.word	gSprites
.L865:
	ldr	r2, .L888
	ldr	r0, [r5]
	add	r0, r0, #0x56
.L874:
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r2
	add	r4, r3, #0
	add	r4, r4, #0x40
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0, #0x4]
.L875:
	ldrh	r4, [r4]
	add	r1, r1, r4
	ldr	r2, .L888+0x4
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	ldr	r0, .L888+0x8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	b	.L854
.L889:
	.align	2, 0
.L888:
	.word	gSprites
	.word	0x3ff
	.word	-0x400
.L867:
	mov	r4, #0x0
	lsl	r7, r6, #0x2
	ldr	r6, .L890
	mov	r0, #0x8
	add	r0, r0, r6
	mov	ip, r0
	ldr	r2, .L890+0x4
	mov	r8, r2
.L871:
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r0, r0, #0x56
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r6
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, ip
	ldr	r0, [r0]
	ldr	r0, [r0]
	add	r0, r7, r0
	ldrh	r1, [r0, #0x8]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L890+0x8
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	mov	r0, r8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L871	@cond_branch
.L854:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L891:
	.align	2, 0
.L890:
	.word	gSprites
	.word	-0x400
	.word	0x3ff
.Lfe69:
	.size	 SetBallCounterNumLeft,.Lfe69-SetBallCounterNumLeft
	.align	2, 0
	.type	 SpriteCB_GridSquare,function
	.thumb_func
SpriteCB_GridSquare:
	ldr	r1, .L893
	ldr	r1, [r1]
	ldrh	r1, [r1, #0x26]
	strh	r1, [r0, #0x24]
	bx	lr
.L894:
	.align	2, 0
.L893:
	.word	sRoulette
.Lfe70:
	.size	 SpriteCB_GridSquare,.Lfe70-SpriteCB_GridSquare
	.align	2, 0
	.type	 CreateWheelCenterSprite,function
	.thumb_func
CreateWheelCenterSprite:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r4, .L896
	ldr	r0, [r4]
	ldr	r5, .L896+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp]
	ldrh	r1, [r4, #0x6]
	lsl	r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	LoadSpriteSheet
	ldr	r0, .L896+0x8
	mov	r1, #0x74
	mov	r2, #0x50
	mov	r3, #0x51
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L896+0xc
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r0, .L896+0x10
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x24]
	mov	r2, #0x0
	strh	r0, [r1, #0x2e]
	strh	r2, [r1, #0x30]
	add	r3, r1, #0
	add	r3, r3, #0x2c
	ldrb	r0, [r3]
	mov	r2, #0x40
	orr	r0, r0, r2
	mov	r2, #0x80
	orr	r0, r0, r2
	strb	r0, [r3]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L897:
	.align	2, 0
.L896:
	.word	sSpriteSheet_WheelCenter
	.word	gDecompressionBuffer
	.word	sSpriteTemplate_WheelCenter
	.word	gSprites
	.word	sRoulette
.Lfe71:
	.size	 CreateWheelCenterSprite,.Lfe71-CreateWheelCenterSprite
	.align	2, 0
	.type	 SpriteCB_WheelCenter,function
	.thumb_func
SpriteCB_WheelCenter:
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	ldr	r1, .L899
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L899+0x4
	ldr	r2, [r1]
	ldrh	r1, [r2, #0x2c]
	strh	r1, [r0, #0x6]
	ldrh	r1, [r2, #0x2c]
	strh	r1, [r0]
	ldrh	r1, [r2, #0x2e]
	strh	r1, [r0, #0x2]
	ldrh	r1, [r2, #0x30]
	strh	r1, [r0, #0x4]
	bx	lr
.L900:
	.align	2, 0
.L899:
	.word	gOamMatrices
	.word	sRoulette
.Lfe72:
	.size	 SpriteCB_WheelCenter,.Lfe72-SpriteCB_WheelCenter
	.align	2, 0
	.type	 CreateWheelBallSprites,function
	.thumb_func
CreateWheelBallSprites:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r5, .L908
	ldr	r6, .L908+0x4
.L905:
	mov	r3, #0x39
	sub	r3, r3, r4
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L908+0x8
	mov	r1, #0x74
	mov	r2, #0x50
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x3c
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L904	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r0]
.L904:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L905	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L909:
	.align	2, 0
.L908:
	.word	sRoulette
	.word	gSprites
	.word	sSpriteTemplate_Ball
.Lfe73:
	.size	 CreateWheelBallSprites,.Lfe73-CreateWheelBallSprites
	.align	2, 0
	.type	 HideWheelBalls,function
	.thumb_func
HideWheelBalls:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L921
	ldr	r0, [r0]
	add	r0, r0, #0x3c
	ldrb	r5, [r0]
	mov	r6, #0x0
	ldr	r7, .L921+0x4
	mov	r0, #0x1c
	add	r0, r0, r7
	mov	sl, r0
	mov	r1, #0x2e
	add	r1, r1, r7
	mov	r9, r1
	mov	r8, r6
.L914:
	lsl	r4, r5, #0x4
	add	r4, r4, r5
	lsl	r4, r4, #0x2
	add	r0, r4, r7
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, sl
	add	r2, r4, r1
	ldr	r1, .L921+0x8
	str	r1, [r2]
	mov	r1, #0x0
	bl	StartSpriteAnim
	mov	r1, #0x0
	add	r2, r5, #0x1
	add	r3, r6, #0x1
.L918:
	lsl	r0, r1, #0x1
	add	r0, r0, r4
	add	r0, r0, r9
	mov	r5, r8
	strh	r5, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x7
	bls	.L918	@cond_branch
	lsl	r0, r2, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r3, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L914	@cond_branch
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L922:
	.align	2, 0
.L921:
	.word	sRoulette
	.word	gSprites
	.word	SpriteCallbackDummy
.Lfe74:
	.size	 HideWheelBalls,.Lfe74-HideWheelBalls
	.align	2, 0
	.type	 UpdateBallRelativeWheelAngle,function
	.thumb_func
UpdateBallRelativeWheelAngle:
	push	{r4, r5, lr}
	add	r3, r0, #0
	ldr	r0, .L928
	ldr	r0, [r0]
	ldrh	r4, [r0, #0x24]
	mov	r2, #0x24
	ldrsh	r1, [r0, r2]
	ldrh	r2, [r3, #0x34]
	mov	r5, #0x34
	ldrsh	r0, [r3, r5]
	cmp	r1, r0
	ble	.L924	@cond_branch
	mov	r1, #0xb4
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	sub	r2, r0, r4
	strh	r2, [r3, #0x3a]
	lsl	r1, r2, #0x10
	ldr	r0, .L928+0x4
	cmp	r1, r0
	ble	.L926	@cond_branch
	ldr	r5, .L928+0x8
	add	r0, r2, r5
	b	.L927
.L929:
	.align	2, 0
.L928:
	.word	sRoulette
	.word	0x1670000
	.word	-0x168
.L924:
	sub	r0, r2, r4
.L927:
	strh	r0, [r3, #0x3a]
.L926:
	mov	r1, #0x3a
	ldrsh	r0, [r3, r1]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 UpdateBallRelativeWheelAngle,.Lfe75-UpdateBallRelativeWheelAngle
	.align	2, 0
	.type	 UpdateSlotBelowBall,function
	.thumb_func
UpdateSlotBelowBall:
	push	{r4, r5, lr}
	bl	UpdateBallRelativeWheelAngle
	ldr	r5, .L931
	ldr	r4, [r5]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	bl	__floatsisf
	ldr	r1, .L931+0x4
	bl	__divsf3
	bl	__fixunssfsi
	add	r4, r4, #0x7e
	strb	r0, [r4]
	ldr	r0, [r5]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L932:
	.align	2, 0
.L931:
	.word	sRoulette
	.word 0x41f00000	@ float 3.00000000000000000000e1
.Lfe76:
	.size	 UpdateSlotBelowBall,.Lfe76-UpdateSlotBelowBall
	.align	2, 0
	.type	 GetBallDistanceToSlotMidpoint,function
	.thumb_func
GetBallDistanceToSlotMidpoint:
	push	{r4, lr}
	add	r4, r0, #0
	bl	UpdateBallRelativeWheelAngle
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x1e
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0xe
	bne	.L934	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
	b	.L939
.L934:
	cmp	r1, #0xd
	bgt	.L936	@cond_branch
	mov	r0, #0xe
	b	.L940
.L936:
	mov	r0, #0x2b
.L940:
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
.L939:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe77:
	.size	 GetBallDistanceToSlotMidpoint,.Lfe77-GetBallDistanceToSlotMidpoint
	.align	2, 0
	.type	 UpdateBallPos,function
	.thumb_func
UpdateBallPos:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	ldr	r5, .L947
	ldr	r6, [r5]
	add	r4, r6, #0
	add	r4, r4, #0x8c
	add	r1, r6, #0
	add	r1, r1, #0x90
	ldr	r0, [r4]
	ldr	r1, [r1]
	bl	__addsf3
	add	r1, r0, #0
	str	r1, [r4]
	sub	r4, r4, #0x4
	ldr	r0, [r4]
	bl	__addsf3
	add	r6, r0, #0
	str	r6, [r4]
	ldr	r0, .L947+0x4
	mov	r8, r0
	add	r0, r6, #0
	mov	r1, r8
	bl	__gesf2
	cmp	r0, #0
	blt	.L942	@cond_branch
	add	r0, r6, #0
	mov	r1, r8
	bl	__subsf3
	b	.L946
.L948:
	.align	2, 0
.L947:
	.word	sRoulette
	.word 0x43b40000	@ float 3.60000000000000000000e2
.L942:
	ldr	r1, .L949
	add	r0, r6, #0
	bl	__ltsf2
	cmp	r0, #0
	bge	.L943	@cond_branch
	add	r0, r6, #0
	mov	r1, r8
	bl	__addsf3
.L946:
	str	r0, [r4]
.L943:
	ldr	r5, [r5]
	add	r0, r5, #0
	add	r0, r0, #0x88
	ldr	r0, [r0]
	bl	__fixsfsi
	strh	r0, [r7, #0x34]
	add	r4, r5, #0
	add	r4, r4, #0x98
	add	r1, r5, #0
	add	r1, r1, #0x9c
	ldr	r0, [r4]
	ldr	r1, [r1]
	bl	__addsf3
	add	r1, r0, #0
	str	r1, [r4]
	sub	r4, r4, #0x4
	ldr	r0, [r4]
	bl	__addsf3
	str	r0, [r4]
	bl	__fixsfsi
	strh	r0, [r7, #0x36]
	ldrh	r0, [r7, #0x34]
	bl	Sin2
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldrh	r0, [r7, #0x34]
	bl	Cos2
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r7, r2]
	mul	r1, r1, r4
	asr	r1, r1, #0xc
	strh	r1, [r7, #0x24]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	mov	r2, #0x36
	ldrsh	r1, [r7, r2]
	mul	r0, r0, r1
	asr	r0, r0, #0xc
	strh	r0, [r7, #0x26]
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L945	@cond_branch
	ldr	r0, .L949+0x4
	ldr	r4, .L949+0x8
	ldrh	r2, [r7, #0x24]
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	add	r1, r4, #0
	bl	m4aMPlayPanpotControl
	ldr	r0, .L949+0xc
	ldrh	r2, [r7, #0x24]
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	add	r1, r4, #0
	bl	m4aMPlayPanpotControl
.L945:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L950:
	.align	2, 0
.L949:
	.word 0x0	@ float 0.00000000000000000000e0
	.word	gMPlayInfo_SE1
	.word	0xffff
	.word	gMPlayInfo_SE2
.Lfe78:
	.size	 UpdateBallPos,.Lfe78-UpdateBallPos
	.align	2, 0
	.type	 SpriteCB_BallLandInSlot,function
	.thumb_func
SpriteCB_BallLandInSlot:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L953
	ldr	r1, [r0]
	ldrh	r0, [r5, #0x3a]
	ldrh	r1, [r1, #0x24]
	add	r2, r0, r1
	strh	r2, [r5, #0x34]
	lsl	r1, r2, #0x10
	ldr	r0, .L953+0x4
	cmp	r1, r0
	ble	.L952	@cond_branch
	ldr	r1, .L953+0x8
	add	r0, r2, r1
	strh	r0, [r5, #0x34]
.L952:
	ldrh	r0, [r5, #0x34]
	bl	Sin2
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldrh	r0, [r5, #0x34]
	bl	Cos2
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r5, r2]
	mul	r1, r1, r4
	asr	r1, r1, #0xc
	strh	r1, [r5, #0x24]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	mov	r2, #0x36
	ldrsh	r1, [r5, r2]
	mul	r0, r0, r1
	ldr	r1, .L953+0xc
	asr	r0, r0, #0xc
	ldrh	r1, [r1]
	add	r0, r0, r1
	strh	r0, [r5, #0x26]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L954:
	.align	2, 0
.L953:
	.word	sRoulette
	.word	0x1670000
	.word	-0x168
	.word	gSpriteCoordOffsetY
.Lfe79:
	.size	 SpriteCB_BallLandInSlot,.Lfe79-SpriteCB_BallLandInSlot
	.align	2, 0
	.type	 SpriteCB_UnstickBall_ShroomishBallFall,function
	.thumb_func
SpriteCB_UnstickBall_ShroomishBallFall:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	bl	UpdateBallPos
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	ldrh	r0, [r5, #0x36]
	add	r0, r0, #0x84
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xd4
	bls	.L956	@cond_branch
	add	r2, r5, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	b	.L963
.L956:
	add	r2, r5, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
.L963:
	strb	r0, [r2]
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1d
	ble	.L958	@cond_branch
	mov	r1, #0x2e
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L959	@cond_branch
	ldr	r7, .L966
	ldr	r6, [r7]
	add	r4, r6, #0
	add	r4, r4, #0x94
	add	r0, r6, #0
	add	r0, r0, #0xa0
	ldr	r0, [r0]
	ldr	r1, .L966+0x4
	bl	__subsf3
	add	r1, r0, #0
	ldr	r0, [r4]
	bl	__lesf2
	cmp	r0, #0
	bgt	.L958	@cond_branch
	b	.L965
.L967:
	.align	2, 0
.L966:
	.word	sRoulette
	.word 0x40000000	@ float 2.00000000000000000000e0
.L959:
	ldr	r7, .L968
	ldr	r6, [r7]
	add	r4, r6, #0
	add	r4, r4, #0x94
	add	r0, r6, #0
	add	r0, r0, #0xa0
	ldr	r0, [r0]
	ldr	r1, .L968+0x4
	bl	__subsf3
	add	r1, r0, #0
	ldr	r0, [r4]
	bl	__gesf2
	cmp	r0, #0
	blt	.L958	@cond_branch
.L965:
	add	r1, r6, #0
	add	r1, r1, #0x7d
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r2, [r7]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	add	r0, r5, #0
	bl	UpdateSlotBelowBall
	mov	r0, #0x1e
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	UpdateBallRelativeWheelAngle
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r5, #0x3a]
	ldr	r0, .L968+0x8
	str	r0, [r5, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	ldr	r3, [r7]
	add	r2, r3, #0
	add	r2, r2, #0x9c
	add	r1, r3, #0
	add	r1, r1, #0x98
	ldr	r0, .L968+0xc
	str	r0, [r1]
	str	r0, [r2]
	sub	r1, r1, #0xc
	ldr	r0, .L968+0x10
	str	r0, [r1]
.L958:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L969:
	.align	2, 0
.L968:
	.word	sRoulette
	.word 0x40000000	@ float 2.00000000000000000000e0
	.word	SpriteCB_BallLandInSlot
	.word 0x0	@ float 0.00000000000000000000e0
	.word 0xbf800000	@ float -1.00000000000000000000e0
.Lfe80:
	.size	 SpriteCB_UnstickBall_ShroomishBallFall,.Lfe80-SpriteCB_UnstickBall_ShroomishBallFall
	.align	2, 0
	.type	 SpriteCB_UnstickBall_Shroomish,function
	.thumb_func
SpriteCB_UnstickBall_Shroomish:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r7, r0, #0
	bl	UpdateBallPos
	mov	r1, #0x34
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L972	@cond_branch
	cmp	r0, #0xb4
	beq	.L975	@cond_branch
	b	.L970
.L972:
	mov	r1, #0x2e
	ldrsh	r0, [r7, r1]
	cmp	r0, #0x1
	bne	.LCB9821
	b	.L970	@long jump
.LCB9821:
	mov	r1, #0x3c
	ldrsh	r0, [r7, r1]
	bl	__floatsisf
	mov	r9, r0
	ldr	r0, .L981
	mov	sl, r0
	ldr	r1, .L981+0x4
	mov	r8, r1
	ldr	r0, [r1]
	ldrb	r4, [r0, #0x4]
	lsl	r4, r4, #0x1e
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x1]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__mulsf3
	add	r6, r0, #0
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x1
	bl	__floatsisf
	add	r1, r0, #0
	add	r0, r6, #0
	bl	__addsf3
	add	r5, r0, #0
	lsr	r4, r4, #0x19
	add	r4, r4, sl
	ldrh	r0, [r4, #0xc]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__divsf3
	b	.L980
.L982:
	.align	2, 0
.L981:
	.word	sRouletteTables
	.word	sRoulette
.L975:
	mov	r1, #0x2e
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L970	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r7, r1]
	bl	__floatsisf
	mov	r9, r0
	ldr	r0, .L983
	mov	sl, r0
	ldr	r1, .L983+0x4
	mov	r8, r1
	ldr	r0, [r1]
	ldrb	r4, [r0, #0x4]
	lsl	r4, r4, #0x1e
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x1]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__mulsf3
	add	r6, r0, #0
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x1
	bl	__floatsisf
	add	r1, r0, #0
	add	r0, r6, #0
	bl	__addsf3
	add	r5, r0, #0
	lsr	r4, r4, #0x19
	add	r4, r4, sl
	ldrh	r0, [r4, #0xc]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__divsf3
	bl	__negsf2
.L980:
	add	r2, r0, #0
	mov	r0, r8
	ldr	r6, [r0]
	add	r1, r6, #0
	add	r1, r1, #0xa0
	add	r0, r6, #0
	add	r0, r0, #0x94
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r6, #0
	add	r0, r0, #0x98
	str	r2, [r0]
	mov	r0, #0x9c
	add	r0, r0, r6
	mov	r8, r0
	add	r0, r2, #0
	add	r1, r2, #0
	bl	__addsf3
	add	r1, r5, #0
	bl	__divsf3
	add	r4, r0, #0
	add	r0, r5, #0
	add	r1, r5, #0
	bl	__mulsf3
	add	r1, r0, #0
	ldr	r0, .L983+0x8
	bl	__divsf3
	add	r1, r0, #0
	add	r0, r4, #0
	bl	__addsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	add	r1, r6, #0
	add	r1, r1, #0x8c
	ldr	r0, .L983+0xc
	str	r0, [r1]
	add	r2, r7, #0
	add	r2, r2, #0x2c
	ldrb	r1, [r2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	add	r0, r7, #0
	add	r0, r0, #0x2a
	mov	r2, #0x0
	strb	r2, [r0]
	add	r3, r7, #0
	add	r3, r3, #0x3f
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r3]
	ldr	r0, .L983+0x10
	str	r0, [r7, #0x1c]
	strh	r2, [r7, #0x32]
.L970:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L984:
	.align	2, 0
.L983:
	.word	sRouletteTables
	.word	sRoulette
	.word 0x40000000	@ float 2.00000000000000000000e0
	.word 0x0	@ float 0.00000000000000000000e0
	.word	SpriteCB_UnstickBall_ShroomishBallFall
.Lfe81:
	.size	 SpriteCB_UnstickBall_Shroomish,.Lfe81-SpriteCB_UnstickBall_Shroomish
	.align	2, 0
	.type	 SpriteCB_UnstickBall_TaillowDrop,function
	.thumb_func
SpriteCB_UnstickBall_TaillowDrop:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	bl	__floatsisf
	add	r4, r0, #0
	ldr	r1, .L987
	bl	__mulsf3
	add	r1, r4, #0
	bl	__mulsf3
	bl	__fixsfsi
	add	r1, r0, #0
	sub	r1, r1, #0x2d
	strh	r1, [r5, #0x26]
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1d
	ble	.L986	@cond_branch
	lsl	r0, r1, #0x10
	cmp	r0, #0
	blt	.L986	@cond_branch
	ldr	r4, .L987+0x4
	ldr	r0, [r4]
	add	r0, r0, #0x7d
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	add	r0, r5, #0
	bl	UpdateSlotBelowBall
	mov	r0, #0x1e
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	UpdateBallRelativeWheelAngle
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r5, #0x3a]
	ldr	r0, .L987+0x8
	str	r0, [r5, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x3]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
.L986:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L988:
	.align	2, 0
.L987:
	.word 0x3d4ccccd	@ float 5.00000007450580596924e-2
	.word	sRoulette
	.word	SpriteCB_BallLandInSlot
.Lfe82:
	.size	 SpriteCB_UnstickBall_TaillowDrop,.Lfe82-SpriteCB_UnstickBall_TaillowDrop
	.align	2, 0
	.type	 SpriteCB_UnstickBall_TaillowPickUp,function
	.thumb_func
SpriteCB_UnstickBall_TaillowPickUp:
	push	{r4, lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x32]
	add	r1, r0, #0x1
	strh	r1, [r3, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2c
	bgt	.L990	@cond_branch
	ldrh	r4, [r3, #0x26]
	sub	r0, r4, #0x1
	strh	r0, [r3, #0x26]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2d
	bne	.L993	@cond_branch
	ldr	r2, .L999
	ldr	r0, .L999+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L993	@cond_branch
	strh	r4, [r3, #0x26]
	b	.L993
.L1000:
	.align	2, 0
.L999:
	.word	gSprites
	.word	sRoulette
.L990:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x3c
	ldrsh	r1, [r3, r2]
	cmp	r0, r1
	bge	.L994	@cond_branch
	ldr	r2, .L1001
	ldr	r0, .L1001+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	add	r0, r1, #0
	add	r0, r0, #0x2c
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bne	.L993	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L996	@cond_branch
	ldrh	r0, [r3, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x26]
	b	.L993
.L1002:
	.align	2, 0
.L1001:
	.word	gSprites
	.word	sRoulette
.L996:
	ldrh	r0, [r3, #0x26]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x26]
	b	.L993
.L994:
	add	r2, r3, #0
	add	r2, r2, #0x2c
	ldrb	r1, [r2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	add	r1, r3, #0
	add	r1, r1, #0x2a
	mov	r2, #0x0
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x3f
	add	r0, r0, r3
	mov	ip, r0
	ldrb	r0, [r0]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	strh	r2, [r3, #0x32]
	ldr	r0, .L1003
	str	r0, [r3, #0x1c]
	mov	r0, #0x3d
	bl	m4aSongNumStart
.L993:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1004:
	.align	2, 0
.L1003:
	.word	SpriteCB_UnstickBall_TaillowDrop
.Lfe83:
	.size	 SpriteCB_UnstickBall_TaillowPickUp,.Lfe83-SpriteCB_UnstickBall_TaillowPickUp
	.align	2, 0
	.type	 SpriteCB_UnstickBall_Taillow,function
	.thumb_func
SpriteCB_UnstickBall_Taillow:
	push	{r4, lr}
	add	r4, r0, #0
	bl	UpdateBallPos
	mov	r0, #0x34
	ldrsh	r1, [r4, r0]
	cmp	r1, #0x5a
	beq	.L1007	@cond_branch
	mov	r0, #0x87
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1009	@cond_branch
	b	.L1006
.L1007:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1006	@cond_branch
	b	.L1013
.L1009:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L1006	@cond_branch
.L1013:
	ldr	r0, .L1014
	str	r0, [r4, #0x1c]
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
.L1006:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1015:
	.align	2, 0
.L1014:
	.word	SpriteCB_UnstickBall_TaillowPickUp
.Lfe84:
	.size	 SpriteCB_UnstickBall_Taillow,.Lfe84-SpriteCB_UnstickBall_Taillow
	.align	2, 0
	.type	 SpriteCB_UnstickBall,function
	.thumb_func
SpriteCB_UnstickBall:
	push	{r4, lr}
	add	r4, r0, #0
	bl	UpdateBallPos
	ldr	r0, .L1023
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	cmp	r0, #0
	beq	.L1019	@cond_branch
	cmp	r0, #0x1
	beq	.L1020	@cond_branch
.L1019:
	add	r0, r4, #0
	bl	CreateShroomishSprite
	ldr	r0, .L1023+0x4
	b	.L1022
.L1024:
	.align	2, 0
.L1023:
	.word	sRoulette
	.word	SpriteCB_UnstickBall_Shroomish
.L1020:
	add	r0, r4, #0
	bl	CreateTaillowSprite
	ldr	r0, .L1025
.L1022:
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1026:
	.align	2, 0
.L1025:
	.word	SpriteCB_UnstickBall_Taillow
.Lfe85:
	.size	 SpriteCB_UnstickBall,.Lfe85-SpriteCB_UnstickBall
	.align	2, 0
	.type	 SpriteCB_RollBall_TryLandAdjacent,function
	.thumb_func
SpriteCB_RollBall_TryLandAdjacent:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	UpdateBallPos
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xf
	bne	.L1028	@cond_branch
	ldr	r0, .L1032
	ldr	r4, [r0]
	add	r4, r4, #0x98
	ldr	r0, [r4]
	ldr	r1, .L1032+0x4
	bl	__mulsf3
	str	r0, [r4]
.L1028:
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L1029	@cond_branch
	mov	r1, #0x2e
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L1030	@cond_branch
	ldr	r2, .L1032
	ldr	r0, [r2]
	add	r0, r0, #0x7d
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r2, [r2]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	add	r0, r5, #0
	bl	UpdateSlotBelowBall
	mov	r0, #0x1e
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	UpdateBallRelativeWheelAngle
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r5, #0x3a]
	ldr	r0, .L1032+0x8
	str	r0, [r5, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	b	.L1029
.L1033:
	.align	2, 0
.L1032:
	.word	sRoulette
	.word 0xbf800000	@ float -1.00000000000000000000e0
	.word	SpriteCB_BallLandInSlot
.L1030:
	add	r0, r5, #0
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x38
	bl	m4aSongNumStart
	add	r0, r5, #0
	bl	SetBallStuck
.L1029:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe86:
	.size	 SpriteCB_RollBall_TryLandAdjacent,.Lfe86-SpriteCB_RollBall_TryLandAdjacent
	.align	2, 0
	.type	 SpriteCB_RollBall_TryLand,function
	.thumb_func
SpriteCB_RollBall_TryLand:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	UpdateBallPos
	mov	r0, #0x0
	strh	r0, [r6, #0x32]
	add	r0, r6, #0
	bl	UpdateSlotBelowBall
	ldr	r1, .L1046
	ldr	r4, .L1046+0x4
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, [r2, #0x8]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1035	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x7d
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r6, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	StartSpriteAnim
	add	r0, r6, #0
	bl	UpdateSlotBelowBall
	mov	r0, #0x1e
	strh	r0, [r6, #0x36]
	add	r0, r6, #0
	bl	UpdateBallRelativeWheelAngle
	mov	r1, #0x3a
	ldrsh	r0, [r6, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r6, #0x3a]
	ldr	r0, .L1046+0x8
	str	r0, [r6, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	b	.L1036
.L1047:
	.align	2, 0
.L1046:
	.word	sRouletteSlots
	.word	sRoulette
	.word	SpriteCB_BallLandInSlot
.L1035:
	mov	r0, #0x38
	bl	m4aSongNumStart
	bl	Random
	mov	r1, #0x1
	mov	r8, r1
	and	r1, r1, r0
	mov	r8, r1
	cmp	r1, #0
	beq	.L1037	@cond_branch
	ldr	r4, [r4]
	add	r1, r4, #0
	add	r1, r1, #0x8c
	ldr	r0, .L1048
	str	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	add	r0, r0, #0x1
	mov	r1, #0xc
	bl	__modsi3
	lsl	r1, r0, #0x18
	lsr	r2, r1, #0x18
	add	r1, r4, #0
	add	r1, r1, #0x7f
	strb	r0, [r1]
	ldr	r5, .L1048+0x4
	b	.L1038
.L1049:
	.align	2, 0
.L1048:
	.word 0x0	@ float 0.00000000000000000000e0
	.word	sRouletteTables
.L1037:
	ldr	r7, [r4]
	add	r4, r7, #0
	add	r4, r4, #0x8c
	ldr	r5, .L1050
	ldrb	r0, [r7, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r1, #0
	bl	__addsf3
	str	r0, [r4]
	add	r0, r7, #0
	add	r0, r0, #0x7e
	ldrb	r4, [r0]
	add	r0, r4, #0
	add	r0, r0, #0xb
	mov	r1, #0xc
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r7, #0
	add	r0, r0, #0x7f
	strb	r4, [r0]
.L1038:
	ldr	r0, .L1050+0x4
	lsl	r1, r2, #0x3
	add	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r2, .L1050+0x8
	ldr	r3, [r2]
	ldr	r1, [r1]
	ldr	r0, [r3, #0x8]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1039	@cond_branch
	mov	r0, #0x1
	strh	r0, [r6, #0x2e]
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r5
	ldrb	r0, [r0, #0x2]
	strh	r0, [r6, #0x32]
	b	.L1040
.L1051:
	.align	2, 0
.L1050:
	.word	sRouletteTables
	.word	sRouletteSlots
	.word	sRoulette
.L1039:
	strh	r1, [r6, #0x2e]
	ldrb	r1, [r3, #0x4]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1041	@cond_branch
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1]
	strh	r0, [r6, #0x32]
	b	.L1040
.L1041:
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r5
	ldrb	r0, [r0, #0x2]
	strh	r0, [r6, #0x32]
	mov	r0, r8
	cmp	r0, #0
	beq	.L1043	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x8c
	ldr	r0, .L1052
	b	.L1045
.L1053:
	.align	2, 0
.L1052:
	.word 0x3f000000	@ float 5.00000000000000000000e-1
.L1043:
	add	r1, r3, #0
	add	r1, r1, #0x8c
	ldr	r0, .L1054
.L1045:
	str	r0, [r1]
.L1040:
	ldr	r0, [r2]
	add	r0, r0, #0x98
	ldr	r1, .L1054+0x4
	str	r1, [r0]
	ldr	r0, .L1054+0x8
	str	r0, [r6, #0x1c]
	mov	r0, #0x5
	strh	r0, [r6, #0x30]
.L1036:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1055:
	.align	2, 0
.L1054:
	.word 0xbfc00000	@ float -1.50000000000000000000e0
	.word 0x3dae147b	@ float 8.50000008940696716309e-2
	.word	SpriteCB_RollBall_TryLandAdjacent
.Lfe87:
	.size	 SpriteCB_RollBall_TryLand,.Lfe87-SpriteCB_RollBall_TryLand
	.align	2, 0
	.type	 SpriteCB_RollBall_Slow,function
	.thumb_func
SpriteCB_RollBall_Slow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r6, r0, #0
	bl	UpdateBallPos
	ldr	r4, .L1063
	ldr	r0, [r4]
	add	r0, r0, #0x8c
	ldr	r0, [r0]
	ldr	r1, .L1063+0x4
	bl	__gtsf2
	cmp	r0, #0
	bgt	.L1056	@cond_branch
	add	r0, r6, #0
	bl	UpdateSlotBelowBall
	add	r0, r6, #0
	bl	GetBallDistanceToSlotMidpoint
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1058	@cond_branch
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x90
	ldr	r0, .L1063+0x8
	str	r0, [r1]
	mov	r0, #0x8c
	add	r0, r0, r2
	mov	r8, r0
	ldr	r1, .L1063+0xc
	mov	r9, r1
	ldrb	r0, [r2, #0x4]
	lsl	r7, r0, #0x1e
	lsr	r0, r7, #0x19
	add	r0, r0, r9
	mov	r4, #0x3
	ldrsb	r4, [r0, r4]
	add	r0, r4, #0
	bl	__floatsisf
	add	r5, r0, #0
	cmp	r4, #0
	bge	.L1059	@cond_branch
	ldr	r1, .L1063+0x10
	bl	__addsf3
	add	r5, r0, #0
.L1059:
	lsr	r0, r7, #0x19
	add	r0, r0, r9
	ldrb	r0, [r0, #0x4]
	add	r0, r0, #0x1
	bl	__floatsisf
	add	r1, r0, #0
	add	r0, r5, #0
	bl	__divsf3
	add	r1, r0, #0
	mov	r2, r8
	ldr	r0, [r2]
	bl	__subsf3
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x4
	strh	r0, [r6, #0x30]
	ldr	r0, .L1063+0x14
	str	r0, [r6, #0x1c]
	b	.L1056
.L1064:
	.align	2, 0
.L1063:
	.word	sRoulette
	.word 0x3f000000	@ float 5.00000000000000000000e-1
	.word 0x0	@ float 0.00000000000000000000e0
	.word	sRouletteTables
	.word 0x43800000	@ float 2.56000000000000000000e2
	.word	SpriteCB_RollBall_TryLand
.L1058:
	ldr	r4, [r4]
	add	r7, r4, #0
	add	r7, r7, #0x90
	ldr	r0, [r7]
	ldr	r6, .L1065
	add	r1, r6, #0
	bl	__nesf2
	cmp	r0, #0
	beq	.L1056	@cond_branch
	add	r5, r4, #0
	add	r5, r5, #0x8c
	ldr	r0, [r5]
	add	r1, r6, #0
	bl	__ltsf2
	cmp	r0, #0
	bge	.L1056	@cond_branch
	str	r6, [r7]
	str	r6, [r5]
	add	r4, r4, #0x98
	ldr	r0, [r4]
	bl	__extendsfdf2
	ldr	r2, .L1065+0x4		@ created by thumb_load_double_from_address
	ldr	r3, .L1065+0x8		@ created by thumb_load_double_from_address
	bl	__divdf3
	bl	__truncdfsf2
	str	r0, [r4]
.L1056:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1066:
	.align	2, 0
.L1065:
	.word 0x0	@ float 0.00000000000000000000e0
	.long 0x3ff33333, 0x33333333	@ double 1.19999999999999995559e0
.Lfe88:
	.size	 SpriteCB_RollBall_Slow,.Lfe88-SpriteCB_RollBall_Slow
	.align	2, 0
	.type	 SpriteCB_RollBall_Medium,function
	.thumb_func
SpriteCB_RollBall_Medium:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	UpdateBallPos
	ldr	r0, .L1071
	ldr	r5, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x94
	ldr	r0, [r0]
	ldr	r1, .L1071+0x4
	bl	__gtsf2
	cmp	r0, #0
	bgt	.L1067	@cond_branch
	mov	r0, #0x98
	add	r0, r0, r5
	mov	r8, r0
	add	r7, r5, #0
	add	r7, r7, #0x86
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1069	@cond_branch
	ldr	r1, .L1071+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1069:
	ldr	r0, .L1071+0xc
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x90
	add	r0, r0, r5
	mov	r8, r0
	add	r5, r5, #0x8c
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1070	@cond_branch
	ldr	r1, .L1071+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1070:
	ldr	r0, [r5]
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	add	r1, r6, #0
	add	r1, r1, #0x2a
	mov	r0, #0x2
	strb	r0, [r1]
	add	r2, r6, #0
	add	r2, r2, #0x3f
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x3
	strh	r0, [r6, #0x30]
	ldr	r0, .L1071+0x10
	str	r0, [r6, #0x1c]
.L1067:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1072:
	.align	2, 0
.L1071:
	.word	sRoulette
	.word 0x42200000	@ float 4.00000000000000000000e1
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x40800000	@ float 4.00000000000000000000e0
	.word	SpriteCB_RollBall_Slow
.Lfe89:
	.size	 SpriteCB_RollBall_Medium,.Lfe89-SpriteCB_RollBall_Medium
	.align	2, 0
	.type	 SpriteCB_RollBall_Fast,function
	.thumb_func
SpriteCB_RollBall_Fast:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	UpdateBallPos
	ldr	r4, .L1077
	ldr	r0, [r4]
	add	r0, r0, #0x94
	ldr	r0, [r0]
	ldr	r1, .L1077+0x4
	bl	__gtsf2
	cmp	r0, #0
	bgt	.L1073	@cond_branch
	mov	r0, #0x5d
	bl	m4aSongNumStartOrChange
	ldr	r5, [r4]
	mov	r0, #0x98
	add	r0, r0, r5
	mov	r8, r0
	add	r7, r5, #0
	add	r7, r7, #0x84
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1075	@cond_branch
	ldr	r1, .L1077+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1075:
	ldr	r0, .L1077+0xc
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x90
	add	r0, r0, r5
	mov	r8, r0
	add	r0, r5, #0
	add	r0, r0, #0x8c
	ldr	r1, [r0]
	ldr	r0, .L1077+0x10
	bl	__subsf3
	add	r5, r0, #0
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1076	@cond_branch
	ldr	r1, .L1077+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1076:
	add	r0, r5, #0
	add	r1, r2, #0
	bl	__divsf3
	mov	r1, r8
	str	r0, [r1]
	add	r1, r6, #0
	add	r1, r1, #0x2a
	mov	r0, #0x1
	strb	r0, [r1]
	add	r2, r6, #0
	add	r2, r2, #0x3f
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x2
	strh	r0, [r6, #0x30]
	ldr	r0, .L1077+0x14
	str	r0, [r6, #0x1c]
.L1073:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1078:
	.align	2, 0
.L1077:
	.word	sRoulette
	.word 0x42700000	@ float 6.00000000000000000000e1
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x41a00000	@ float 2.00000000000000000000e1
	.word 0x3f800000	@ float 1.00000000000000000000e0
	.word	SpriteCB_RollBall_Medium
.Lfe90:
	.size	 SpriteCB_RollBall_Fast,.Lfe90-SpriteCB_RollBall_Fast
	.align	2, 0
	.type	 SpriteCB_RollBall_Start,function
	.thumb_func
SpriteCB_RollBall_Start:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x0
	mov	r0, #0x1
	strh	r0, [r4, #0x30]
	strh	r1, [r4, #0x32]
	add	r0, r4, #0
	bl	UpdateBallPos
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L1080
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1081:
	.align	2, 0
.L1080:
	.word	SpriteCB_RollBall_Fast
.Lfe91:
	.size	 SpriteCB_RollBall_Start,.Lfe91-SpriteCB_RollBall_Start
	.section .rodata
	.align	1, 0
.LC368:
	.short	0x74
	.short	0x2c
	.short	0x74
	.short	0x70
.text
	.align	2, 0
	.type	 CreateShroomishSprite,function
	.thumb_func
CreateShroomishSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r8, r0
	ldr	r1, .L1088
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	mov	r1, r8
	ldrh	r0, [r1, #0x3c]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	ldr	r5, .L1088+0x4
	ldr	r0, .L1088+0x8
	mov	r2, #0xc
	neg	r2, r2
	mov	r1, #0x24
	mov	r3, #0x32
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x73
	strb	r0, [r1]
	ldr	r4, .L1088+0xc
	mov	r3, r8
	mov	r0, #0x2e
	ldrsh	r2, [r3, r0]
	lsl	r2, r2, #0x2
	mov	r1, sp
	add	r0, r1, r2
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	mov	r0, sp
	add	r0, r0, #0x2
	add	r0, r0, r2
	mov	r3, #0x0
	ldrsh	r2, [r0, r3]
	add	r0, r4, #0
	mov	r3, #0x3b
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x74
	strb	r0, [r1]
	add	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x24
	mov	r2, #0x8c
	mov	r3, #0x33
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x75
	strb	r0, [r1]
	ldr	r3, .L1088+0x10
	ldr	r0, [r5]
	add	r0, r0, #0x75
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r2, [r0, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	mov	r7, #0x0
	add	r6, r3, #0
	ldr	r0, .L1088+0x14
	mov	ip, r0
	mov	sl, r5
.L1086:
	ldr	r0, [r5]
	add	r3, r7, #0
	add	r3, r3, #0x37
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r4, [r5]
	add	r2, r4, #0
	add	r2, r2, #0x3c
	add	r2, r2, r3
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x73
	ldrb	r1, [r1]
	strh	r1, [r0, #0x36]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x74
	ldrb	r1, [r1]
	strh	r1, [r0, #0x38]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x75
	ldrb	r1, [r1]
	strh	r1, [r0, #0x3a]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, r9
	strh	r1, [r0, #0x32]
	ldrb	r0, [r2]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	mov	r0, r8
	mov	r1, #0x3c
	ldrsh	r3, [r0, r1]
	ldrb	r1, [r4, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r0, r1, #0x19
	add	r0, r0, ip
	ldrb	r0, [r0, #0x1]
	mul	r3, r3, r0
	lsr	r1, r1, #0x19
	add	r1, r1, ip
	ldrb	r0, [r1, #0x2]
	ldr	r1, .L1088+0x18
	add	r0, r0, r1
	add	r3, r3, r0
	strh	r3, [r2, #0x34]
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L1088+0x10
	cmp	r7, #0x2
	bls	.L1086	@cond_branch
	mov	r3, sl
	ldr	r0, [r3]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r3]
	mov	r1, r8
	str	r1, [r0, #0x38]
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1089:
	.align	2, 0
.L1088:
	.word	.LC368
	.word	sRoulette
	.word	sSpriteTemplate_Shroomish
	.word	sSpriteTemplate_ShroomishShadow
	.word	gSprites
	.word	sRouletteTables
	.word	0xffff
.Lfe92:
	.size	 CreateShroomishSprite,.Lfe92-CreateShroomishSprite
	.section .rodata
	.align	1, 0
.LC376:
	.short	0x100
	.short	0x54
	.short	-0x10
	.short	0x54
.text
	.align	2, 0
	.type	 CreateTaillowSprite,function
	.thumb_func
CreateTaillowSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	mov	r0, #0x0
	mov	r8, r0
	ldr	r1, .L1096
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	ldrh	r0, [r7, #0x3c]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	ldr	r0, .L1096+0x4
	mov	r1, #0x2e
	ldrsh	r2, [r7, r1]
	lsl	r2, r2, #0x2
	mov	r3, sp
	add	r1, r3, r2
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r4, sp
	add	r4, r4, #0x2
	add	r2, r4, r2
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r3, #0x32
	bl	CreateSprite
	ldr	r5, .L1096+0x8
	ldr	r1, [r5]
	add	r1, r1, #0x73
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L1096+0xc
	add	r0, r0, r6
	ldrh	r1, [r7, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	ldr	r0, .L1096+0x10
	mov	r1, #0x2e
	ldrsh	r2, [r7, r1]
	lsl	r2, r2, #0x2
	mov	r3, sp
	add	r1, r3, r2
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	add	r4, r4, r2
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x33
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x74
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, r9
	lsl	r2, r0, #0x10
	asr	r2, r2, #0x10
	ldr	r3, .L1096+0x14
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r0, r1, #0x19
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1]
	mul	r2, r2, r0
	lsr	r1, r1, #0x19
	add	r1, r1, r3
	ldrh	r0, [r1, #0x10]
	add	r0, r0, #0x2d
	add	r2, r2, r0
	strh	r2, [r7, #0x3c]
.L1094:
	ldr	r0, .L1096+0x8
	ldr	r4, [r0]
	mov	r1, r8
	add	r2, r4, r1
	add	r2, r2, #0x73
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x73
	ldrb	r1, [r1]
	strh	r1, [r0, #0x36]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r3, r4, #0
	add	r3, r3, #0x74
	ldrb	r1, [r3]
	strh	r1, [r0, #0x38]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r3]
	strh	r1, [r0, #0x3a]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r3, r9
	strh	r3, [r0, #0x32]
	ldrb	r0, [r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrh	r0, [r7, #0x3c]
	sub	r0, r0, #0x2d
	strh	r0, [r1, #0x34]
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0x1
	bls	.L1094	@cond_branch
	str	r7, [r4, #0x38]
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1097:
	.align	2, 0
.L1096:
	.word	.LC376
	.word	sSpriteTemplate_Taillow
	.word	sRoulette
	.word	gSprites
	.word	sSpriteTemplate_TaillowShadow
	.word	sRouletteTables
.Lfe93:
	.size	 CreateTaillowSprite,.Lfe93-CreateTaillowSprite
	.align	2, 0
	.type	 SetBallStuck,function
	.thumb_func
SetBallStuck:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	add	r7, r0, #0
	mov	r0, #0x0
	mov	r9, r0
	mov	r1, #0x5
	mov	r8, r1
	str	r0, [sp, #0xc]
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0xa
	bl	memset
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x10]
	ldr	r3, .L1127
	ldr	r0, [r3]
	add	r0, r0, #0x7d
	mov	r5, #0x1
	strb	r5, [r0]
	ldr	r2, [r3]
	ldrb	r0, [r2, #0x3]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r0, [r3]
	add	r0, r0, #0x7e
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r6, [r3]
	add	r4, r6, #0
	add	r4, r4, #0x88
	mov	r1, #0x34
	ldrsh	r0, [r7, r1]
	bl	__floatsisf
	str	r0, [r4]
	add	r1, r6, #0
	add	r1, r1, #0x98
	ldr	r0, .L1127+0x4
	str	r0, [r1]
	add	r2, r6, #0
	add	r2, r2, #0x8c
	ldr	r1, .L1127+0x8
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0x21
	ldrb	r0, [r6, #0x3]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	sub	r5, r5, r0
	lsl	r0, r5, #0x4
	sub	r0, r0, r5
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r5, r9
	mov	r0, #0x34
	ldrsh	r2, [r7, r0]
.L1102:
	cmp	r1, r2
	bge	.L1103	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x5a
	cmp	r2, r0
	ble	.L1123	@cond_branch
.L1103:
	cmp	r5, #0x3
	beq	.L1124	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x5a
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L1102	@cond_branch
.L1100:
	ldr	r0, .L1127
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x3]
	mov	r0, #0x1f
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1106	@cond_branch
	mov	r1, #0x2e
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L1107	@cond_branch
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	neg	r1, r1
	bl	PlayCry1
	b	.L1109
.L1128:
	.align	2, 0
.L1127:
	.word	sRoulette
	.word 0x0	@ float 0.00000000000000000000e0
	.word	sRouletteTables
.L1124:
	mov	r0, #0x1
	strh	r0, [r7, #0x2e]
	ldr	r0, .L1129
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x20
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	b	.L1100
.L1130:
	.align	2, 0
.L1129:
	.word	sRoulette
.L1123:
	lsr	r0, r5, #0x1
	strh	r0, [r7, #0x2e]
	ldr	r0, .L1131
	ldr	r3, [r0]
	mov	r1, #0x1
	and	r1, r1, r5
	ldrb	r2, [r3, #0x3]
	mov	r0, #0x20
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x3]
	b	.L1100
.L1132:
	.align	2, 0
.L1131:
	.word	sRoulette
.L1107:
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	bl	PlayCry1
	b	.L1109
.L1106:
	ldr	r0, .L1133
	mov	r1, #0x3f
	neg	r1, r1
	bl	PlayCry1
.L1109:
	mov	r0, #0x2
	mov	sl, r0
	ldr	r4, .L1133+0x4
	ldr	r5, [r4]
	add	r0, r5, #0
	add	r0, r0, #0x7f
	ldrb	r0, [r0]
	add	r0, r0, #0x2
	mov	r1, #0xc
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldrb	r1, [r5, #0x3]
	mov	r0, #0x1f
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1110	@cond_branch
	ldrb	r1, [r5, #0x4]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1110	@cond_branch
	mov	r0, r8
	add	r0, r0, #0x6
	b	.L1125
.L1134:
	.align	2, 0
.L1133:
	.word	0x11d
	.word	sRoulette
.L1110:
	mov	r0, r8
	add	r0, r0, sl
.L1125:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r5, sl
	cmp	r5, r8
	bcs	.L1113	@cond_branch
	ldr	r1, .L1135
	mov	sl, r1
.L1115:
	ldr	r3, [r4]
	lsl	r0, r6, #0x3
	ldr	r1, .L1135+0x4
	add	r0, r0, r1
	ldr	r1, [r3, #0x8]
	ldr	r2, [r0]
	and	r1, r1, r2
	cmp	r1, #0
	bne	.L1116	@cond_branch
	mov	r0, r9
	add	r1, r0, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	add	r0, r0, sp
	strb	r5, [r0]
	ldr	r0, [sp, #0xc]
	cmp	r0, #0
	bne	.L1116	@cond_branch
	ldrb	r1, [r3, #0x1a]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r3, #0
	add	r0, r0, #0x1b
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	ldr	r0, [r0]
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L1116	@cond_branch
	str	r5, [sp, #0xc]
.L1116:
	add	r0, r6, #0x1
	mov	r1, #0xc
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, r8
	bcc	.L1115	@cond_branch
.L1113:
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x3]
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x1b
	add	r1, r1, #0x1
	ldrb	r0, [r0, #0x2]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1119	@cond_branch
	ldr	r1, [sp, #0xc]
	cmp	r1, #0
	beq	.L1120	@cond_branch
	mov	r0, #0xff
	ldr	r1, [sp, #0x10]
	and	r0, r0, r1
	cmp	r0, #0xbf
	bhi	.L1120	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0, #0xc]
	b	.L1126
.L1136:
	.align	2, 0
.L1135:
	.word	sGridSelections+0xc
	.word	sRouletteSlots+0x4
.L1120:
.L1119:
	ldr	r0, [sp, #0x10]
	mov	r1, r9
	bl	__modsi3
	add	r0, r0, sp
	ldrb	r0, [r0]
.L1126:
	strh	r0, [r7, #0x3c]
	ldr	r1, .L1137
	str	r1, [r7, #0x1c]
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1138:
	.align	2, 0
.L1137:
	.word	SpriteCB_UnstickBall
.Lfe94:
	.size	 SetBallStuck,.Lfe94-SetBallStuck
	.section .rodata
	.align	1, 0
	.type	 sShroomishShadowAlphas,object
sShroomishShadowAlphas:
	.short	0x907
	.short	0x808
	.short	0x709
	.short	0x60a
	.short	0x50b
	.short	0x40c
	.short	0x30d
	.short	0x20e
	.short	0x10f
	.short	0x10
	.size	 sShroomishShadowAlphas,20
.text
	.align	2, 0
	.type	 SpriteCB_ShroomishExit,function
	.thumb_func
SpriteCB_ShroomishExit:
	push	{r4, lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	add	r1, r0, #0x1
	strh	r1, [r2, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x34
	ldrsh	r1, [r2, r3]
	cmp	r0, r1
	blt	.L1140	@cond_branch
	ldrh	r0, [r2, #0x20]
	sub	r0, r0, #0x2
	strh	r0, [r2, #0x20]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x10
	neg	r1, r1
	cmp	r0, r1
	bge	.L1140	@cond_branch
	ldr	r4, .L1143
	ldr	r3, [r4]
	ldrb	r1, [r3, #0x3]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1142	@cond_branch
	mov	r0, #0x40
	orr	r0, r0, r1
	strb	r0, [r3, #0x3]
.L1142:
	add	r0, r2, #0
	bl	DestroySprite
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	ldr	r1, [r4]
	ldr	r0, .L1143+0x4
	ldrh	r0, [r0]
	strh	r0, [r1, #0x34]
.L1140:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1144:
	.align	2, 0
.L1143:
	.word	sRoulette
	.word	sShroomishShadowAlphas
.Lfe95:
	.size	 SpriteCB_ShroomishExit,.Lfe95-SpriteCB_ShroomishExit
	.section .rodata
	.align	1, 0
.LC393:
	.short	0xffff
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0xfffe
	.short	0x0
	.short	0x2
	.short	0x0
	.short	0xfffd
	.short	0x0
	.short	0x3
	.short	0x0
.text
	.align	2, 0
	.type	 SpriteCB_ShroomishShakeScreen,function
	.thumb_func
SpriteCB_ShroomishShakeScreen:
	push	{r4, lr}
	add	sp, sp, #-0x18
	add	r4, r0, #0
	ldr	r1, .L1150
	mov	r0, sp
	mov	r2, #0x18
	bl	memcpy
	ldrh	r0, [r4, #0x30]
	add	r2, r0, #0x1
	strh	r2, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x34
	ldrsh	r1, [r4, r3]
	cmp	r0, r1
	bge	.L1146	@cond_branch
	mov	r0, #0x1
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L1147	@cond_branch
	ldr	r3, .L1150+0x4
	mov	r0, #0x3c
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x1
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r2, r2, r0
	mov	r1, sp
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r3]
	mov	r3, #0x3c
	ldrsh	r2, [r4, r3]
	add	r1, r2, #0x1
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L1148	@cond_branch
	add	r0, r2, #0x4
.L1148:
	asr	r0, r0, #0x2
	lsl	r0, r0, #0x2
	sub	r0, r1, r0
	strh	r0, [r4, #0x3c]
.L1147:
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	b	.L1149
.L1151:
	.align	2, 0
.L1150:
	.word	.LC393
	.word	gSpriteCoordOffsetY
.L1146:
	ldr	r1, .L1152
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r2, .L1152+0x4
	ldr	r0, .L1152+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x2c
	ldrb	r2, [r0]
	mov	r1, #0x41
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0
	bl	DestroySprite
.L1149:
	add	sp, sp, #0x18
	pop	{r4}
	pop	{r0}
	bx	r0
.L1153:
	.align	2, 0
.L1152:
	.word	gSpriteCoordOffsetY
	.word	gSprites
	.word	sRoulette
.Lfe96:
	.size	 SpriteCB_ShroomishShakeScreen,.Lfe96-SpriteCB_ShroomishShakeScreen
	.align	2, 0
	.type	 SpriteCB_ShroomishFall,function
	.thumb_func
SpriteCB_ShroomishFall:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrh	r0, [r5, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x30]
	mov	r1, #0x30
	ldrsh	r0, [r5, r1]
	bl	__floatsisf
	add	r4, r0, #0
	ldr	r1, .L1157
	bl	__mulsf3
	add	r1, r4, #0
	bl	__mulsf3
	bl	__fixsfsi
	strh	r0, [r5, #0x26]
	ldr	r0, .L1157+0x4
	ldr	r3, [r0]
	ldr	r2, .L1157+0x8
	ldrb	r0, [r3, #0x1]
	sub	r0, r0, #0x1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r3, #0x34]
	ldrb	r0, [r3, #0x1]
	cmp	r0, #0x12
	bhi	.L1155	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r3, #0x1]
.L1155:
	mov	r1, #0x30
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3c
	ble	.L1156	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x30]
	ldr	r3, .L1157+0xc
	str	r3, [r5, #0x1c]
	ldr	r2, .L1157+0x10
	mov	r0, #0x3a
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r2, #0
	add	r4, r4, #0x1c
	add	r0, r0, r4
	str	r3, [r0]
	mov	r0, #0x3a
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L1157+0x14
	strh	r1, [r0, #0x30]
	mov	r0, #0x38
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x38
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r1, .L1157+0x18
	str	r1, [r0]
	mov	r0, #0xd6
	bl	m4aSongNumStart
.L1156:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1158:
	.align	2, 0
.L1157:
	.word 0x3d1fbe77	@ float 3.90000008046627044678e-2
	.word	sRoulette
	.word	sShroomishShadowAlphas
	.word	SpriteCB_ShroomishExit
	.word	gSprites
	.word	0xfffe
	.word	SpriteCB_ShroomishShakeScreen
.Lfe97:
	.size	 SpriteCB_ShroomishFall,.Lfe97-SpriteCB_ShroomishFall
	.align	2, 0
	.type	 SpriteCB_Shroomish,function
	.thumb_func
SpriteCB_Shroomish:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1160	@cond_branch
	ldr	r0, .L1173
	ldr	r3, [r0]
	ldr	r1, [r3, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L1161	@cond_branch
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1173+0x4
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x8]
	b	.L1171
.L1174:
	.align	2, 0
.L1173:
	.word	sRoulette
	.word	sRouletteTables
.L1161:
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1175
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x8]
	add	r0, r0, #0xb4
.L1171:
	cmp	r2, r0
	bne	.L1159	@cond_branch
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	mov	r0, #0x2b
	bl	m4aSongNumStart
	ldr	r2, .L1175+0x4
	ldr	r1, [r2]
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	ldr	r1, [r2]
	ldr	r0, .L1175+0x8
	ldrh	r0, [r0]
	strh	r0, [r1, #0x34]
	b	.L1159
.L1176:
	.align	2, 0
.L1175:
	.word	sRouletteTables
	.word	sRoulette
	.word	sShroomishShadowAlphas
.L1160:
	ldr	r5, .L1177
	ldr	r3, [r5]
	ldr	r2, .L1177+0x4
	ldrb	r0, [r3, #0x1]
	sub	r0, r0, #0x1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r3, #0x34]
	ldrb	r0, [r3, #0x1]
	cmp	r0, #0x12
	bhi	.L1166	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r3, #0x1]
.L1166:
	ldr	r3, [r5]
	ldr	r1, [r3, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L1167	@cond_branch
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1177+0x8
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0xa]
	b	.L1172
.L1178:
	.align	2, 0
.L1177:
	.word	sRoulette
	.word	sShroomishShadowAlphas
	.word	sRouletteTables
.L1167:
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1179
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0xa]
	add	r0, r0, #0xb4
.L1172:
	cmp	r2, r0
	bne	.L1159	@cond_branch
	ldr	r2, .L1179+0x4
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r2, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L1179+0x8
	str	r1, [r0]
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L1179+0xc
	str	r0, [r4, #0x1c]
	mov	r0, #0x0
	strh	r0, [r4, #0x3c]
.L1159:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1180:
	.align	2, 0
.L1179:
	.word	sRouletteTables
	.word	gSprites
	.word	SpriteCB_ShroomishFall
	.word	SpriteCallbackDummy
.Lfe98:
	.size	 SpriteCB_Shroomish,.Lfe98-SpriteCB_Shroomish
	.align	2, 0
	.type	 SpriteCB_TaillowShadow_Flash,function
	.thumb_func
SpriteCB_TaillowShadow_Flash:
	add	r0, r0, #0x3e
	ldrb	r3, [r0]
	lsl	r1, r3, #0x1d
	lsr	r1, r1, #0x1f
	mov	r2, #0x1
	eor	r2, r2, r1
	lsl	r2, r2, #0x2
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0]
	bx	lr
.Lfe99:
	.size	 SpriteCB_TaillowShadow_Flash,.Lfe99-SpriteCB_TaillowShadow_Flash
	.align	2, 0
	.type	 SpriteCB_Taillow_FlyAway,function
	.thumb_func
SpriteCB_Taillow_FlyAway:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldrh	r2, [r4, #0x22]
	mov	r0, #0x22
	ldrsh	r1, [r4, r0]
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	ble	.L1183	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r4, #0x22]
	b	.L1184
.L1183:
	ldr	r0, .L1185
	str	r0, [r4, #0x1c]
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r0, [r2]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x5e
	bl	m4aSongNumStop
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r5, .L1185+0x4
	ldr	r4, .L1185+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r0, [r4]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
.L1184:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1186:
	.align	2, 0
.L1185:
	.word	SpriteCallbackDummy
	.word	gSprites
	.word	sRoulette
.Lfe100:
	.size	 SpriteCB_Taillow_FlyAway,.Lfe100-SpriteCB_Taillow_FlyAway
	.align	2, 0
	.type	 SpriteCB_Taillow_PickUpBall,function
	.thumb_func
SpriteCB_Taillow_PickUpBall:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x30]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	blt	.L1188	@cond_branch
	sub	r1, r1, #0x1
	strh	r1, [r4, #0x30]
	ldrh	r0, [r4, #0x22]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x22]
	lsl	r1, r1, #0x10
	cmp	r1, #0
	bne	.L1190	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1190	@cond_branch
	b	.L1196
.L1188:
	ldrh	r1, [r4, #0x34]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	blt	.L1191	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x34]
	add	r0, r4, #0
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r0, #0x3f
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1190	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1193	@cond_branch
.L1196:
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	b	.L1190
.L1193:
	ldrh	r0, [r4, #0x26]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	b	.L1190
.L1191:
	mov	r0, #0x2b
	bl	m4aSongNumStart
	ldr	r0, .L1197
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	ldr	r0, .L1197+0x4
	str	r0, [r4, #0x1c]
	ldr	r2, .L1197+0x8
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x2c
	ldrb	r2, [r0]
	mov	r1, #0x7f
	and	r1, r1, r2
	strb	r1, [r0]
.L1190:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1198:
	.align	2, 0
.L1197:
	.word	sRoulette
	.word	SpriteCB_Taillow_FlyAway
	.word	gSprites
.Lfe101:
	.size	 SpriteCB_Taillow_PickUpBall,.Lfe101-SpriteCB_Taillow_PickUpBall
	.section .rodata
.LC417:
	.byte	-0x1
	.byte	0x1
.LC419:
	.byte	0x2
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x2
	.byte	0x2
	.byte	-0x2
.text
	.align	2, 0
	.type	 SpriteCB_Taillow_FlyIn,function
	.thumb_func
SpriteCB_Taillow_FlyIn:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	ldr	r1, .L1207
	mov	r0, sp
	mov	r2, #0x2
	bl	memcpy
	add	r5, sp, #0x4
	ldr	r1, .L1207+0x4
	add	r0, r5, #0
	mov	r2, #0x10
	bl	memcpy
	ldrh	r0, [r4, #0x30]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L1200	@cond_branch
	ldr	r0, .L1207+0x8
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	add	r0, r0, sp
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x1
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r4, #0x20]
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1202	@cond_branch
	mov	r1, #0x20
	ldrsh	r0, [r4, r1]
	mov	r4, #0x74
	sub	r4, r4, r0
	lsr	r0, r4, #0x1f
	add	r4, r4, r0
	asr	r4, r4, #0x1
	neg	r4, r4
	ldr	r0, .L1207+0xc
	ldr	r5, .L1207+0x10
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r1, r5, #0
	add	r2, r4, #0
	bl	m4aMPlayPanpotControl
	ldr	r0, .L1207+0x14
	add	r1, r5, #0
	add	r2, r4, #0
	bl	m4aMPlayPanpotControl
	b	.L1202
.L1208:
	.align	2, 0
.L1207:
	.word	.LC417
	.word	.LC419
	.word	sRoulette
	.word	gMPlayInfo_SE1
	.word	0xffff
	.word	gMPlayInfo_SE2
.L1200:
	lsl	r0, r1, #0x10
	cmp	r0, #0
	blt	.L1203	@cond_branch
	ldr	r0, .L1209
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r0, r2]
	add	r0, r0, sp
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r1, #0x7
	sub	r0, r1, r0
	lsl	r0, r0, #0x1
	add	r0, r5, r0
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mul	r0, r0, r2
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r4, #0x20]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, sp
	add	r0, r0, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
	b	.L1202
.L1210:
	.align	2, 0
.L1209:
	.word	sRoulette
.L1203:
	mov	r0, #0x5e
	bl	m4aSongNumStartOrChange
	ldr	r0, .L1211
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bne	.L1205	@cond_branch
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	bl	PlayCry1
	b	.L1206
.L1212:
	.align	2, 0
.L1211:
	.word	sRoulette
.L1205:
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	neg	r1, r1
	bl	PlayCry1
.L1206:
	ldr	r0, .L1213
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	mov	r0, #0x2d
	strh	r0, [r4, #0x30]
	ldr	r0, .L1213+0x4
	str	r0, [r4, #0x1c]
.L1202:
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1214:
	.align	2, 0
.L1213:
	.word	sRoulette
	.word	SpriteCB_Taillow_PickUpBall
.Lfe102:
	.size	 SpriteCB_Taillow_FlyIn,.Lfe102-SpriteCB_Taillow_FlyIn
	.align	2, 0
	.type	 SpriteCB_TaillowShadow_FlyIn,function
	.thumb_func
SpriteCB_TaillowShadow_FlyIn:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldr	r1, .L1218
	mov	r0, sp
	mov	r2, #0x2
	bl	memcpy
	ldrh	r0, [r4, #0x30]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0x30]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	blt	.L1216	@cond_branch
	ldr	r0, .L1218+0x4
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	add	r0, r0, sp
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x1
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r4, #0x20]
	ldr	r1, .L1218+0x8
	mov	r2, #0x3a
	ldrsh	r0, [r4, r2]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	add	r2, r2, #0x3e
	ldrb	r3, [r2]
	lsl	r0, r3, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	b	.L1217
.L1219:
	.align	2, 0
.L1218:
	.word	.LC417
	.word	sRoulette
	.word	gSprites
.L1216:
	ldr	r0, .L1220
	str	r0, [r4, #0x1c]
.L1217:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1221:
	.align	2, 0
.L1220:
	.word	SpriteCB_TaillowShadow_Flash
.Lfe103:
	.size	 SpriteCB_TaillowShadow_FlyIn,.Lfe103-SpriteCB_TaillowShadow_FlyIn
	.align	2, 0
	.type	 SpriteCB_Taillow,function
	.thumb_func
SpriteCB_Taillow:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L1230
	ldr	r3, [r0]
	ldr	r1, [r3, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L1223	@cond_branch
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1230+0x4
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x12]
	add	r0, r0, #0x5a
	cmp	r2, r0
	bne	.L1222	@cond_branch
	ldr	r2, .L1230+0x8
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r3, #0x34
	b	.L1229
.L1231:
	.align	2, 0
.L1230:
	.word	sRoulette
	.word	sRouletteTables
	.word	gSprites
.L1223:
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1232
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x14]
	mov	r1, #0x87
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	cmp	r2, r0
	bne	.L1222	@cond_branch
	ldr	r2, .L1232+0x4
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r3, #0x2e
.L1229:
	strh	r3, [r0, #0x30]
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r3, [r0, #0x30]
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L1232+0x8
	str	r1, [r0]
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L1232+0xc
	str	r1, [r0]
	mov	r0, #0x2b
	bl	m4aSongNumStart
.L1222:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1233:
	.align	2, 0
.L1232:
	.word	sRouletteTables
	.word	gSprites
	.word	SpriteCB_TaillowShadow_FlyIn
	.word	SpriteCB_Taillow_FlyIn
.Lfe104:
	.size	 SpriteCB_Taillow,.Lfe104-SpriteCB_Taillow
.text
	.align	2, 0

