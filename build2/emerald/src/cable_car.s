@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sCableCar,object
	.size	 sCableCar,4
sCableCar:
	.word	0x0
	.type	 sGroundX_Up,object
	.size	 sGroundX_Up,1
sGroundX_Up:
	.byte	0x0
	.type	 sGroundY_Up,object
	.size	 sGroundY_Up,1
sGroundY_Up:
	.byte	0x0
	.type	 sGroundSegmentY_Up,object
	.size	 sGroundSegmentY_Up,1
sGroundSegmentY_Up:
	.byte	0x0
	.type	 sGroundX_Down,object
	.size	 sGroundX_Down,1
sGroundX_Down:
	.byte	0x0
	.type	 sGroundY_Down,object
	.size	 sGroundY_Down,1
sGroundY_Down:
	.byte	0x0
	.type	 sGroundSegmentY_Down,object
	.size	 sGroundSegmentY_Down,1
sGroundSegmentY_Down:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xc0
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xd1
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xe2
	.byte	0x31
	.byte	0x0
	.space	1
	.byte	0xf3
	.byte	0x1
	.byte	0x0
	.space	1
	.type	 sGround_Tilemap,object
sGround_Tilemap:
	.byte	0x10
	.byte	0x68
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x41
	.byte	0x0
	.byte	0x42
	.byte	0x0
	.byte	0x43
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x45
	.byte	0x0
	.byte	0x46
	.byte	0x0
	.byte	0x47
	.byte	0x0
	.byte	0x0
	.byte	0x48
	.byte	0x0
	.byte	0x49
	.byte	0x0
	.byte	0x4a
	.byte	0x0
	.byte	0x4b
	.byte	0x0
	.byte	0x0
	.byte	0x50
	.byte	0x0
	.byte	0x51
	.byte	0x0
	.byte	0x52
	.byte	0x0
	.byte	0x53
	.byte	0x0
	.byte	0x0
	.byte	0x54
	.byte	0x0
	.byte	0x55
	.byte	0x0
	.byte	0x56
	.byte	0x0
	.byte	0x57
	.byte	0x0
	.byte	0x0
	.byte	0x58
	.byte	0x0
	.byte	0x59
	.byte	0x0
	.byte	0x5a
	.byte	0x0
	.byte	0x5b
	.byte	0x0
	.byte	0x0
	.byte	0x60
	.byte	0x0
	.byte	0x61
	.byte	0x0
	.byte	0x62
	.byte	0x0
	.byte	0x63
	.byte	0x0
	.byte	0x0
	.byte	0x64
	.byte	0x0
	.byte	0x65
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x67
	.byte	0x0
	.byte	0x1
	.byte	0x68
	.byte	0x0
	.byte	0x69
	.byte	0x0
	.byte	0x6a
	.byte	0x0
	.byte	0x6b
	.byte	0x20
	.byte	0x17
	.byte	0xfe
	.byte	0x30
	.byte	0x1b
	.byte	0x50
	.byte	0x7
	.byte	0xd0
	.byte	0x5
	.byte	0x30
	.byte	0x9
	.byte	0xf0
	.byte	0x17
	.byte	0x70
	.byte	0x1d
	.byte	0x10
	.byte	0x3
	.byte	0x10
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0x0
	.byte	0x12
	.byte	0x0
	.byte	0x13
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x0
	.byte	0x15
	.byte	0x0
	.byte	0x16
	.byte	0x0
	.byte	0x17
	.byte	0x0
	.byte	0x18
	.byte	0x0
	.byte	0x0
	.byte	0x19
	.byte	0x0
	.byte	0x1a
	.byte	0x0
	.byte	0x1b
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x21
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x23
	.byte	0x0
	.byte	0x24
	.byte	0x0
	.byte	0x0
	.byte	0x25
	.byte	0x0
	.byte	0x26
	.byte	0x0
	.byte	0x27
	.byte	0x0
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x29
	.byte	0x0
	.byte	0x2a
	.byte	0x0
	.byte	0x2b
	.byte	0x0
	.byte	0x30
	.byte	0x0
	.byte	0x0
	.byte	0x31
	.byte	0x0
	.byte	0x32
	.byte	0x0
	.byte	0x33
	.byte	0x0
	.byte	0x34
	.byte	0x0
	.byte	0x0
	.byte	0x35
	.byte	0x0
	.byte	0x36
	.byte	0x0
	.byte	0x37
	.byte	0x0
	.byte	0x38
	.byte	0x0
	.byte	0x0
	.byte	0x39
	.byte	0x0
	.byte	0x3a
	.byte	0x0
	.byte	0x3b
	.byte	0x0
	.byte	0x70
	.byte	0x0
	.byte	0x0
	.byte	0x71
	.byte	0x0
	.byte	0x72
	.byte	0x0
	.byte	0x73
	.byte	0x0
	.byte	0x74
	.byte	0x0
	.byte	0x0
	.byte	0x75
	.byte	0x0
	.byte	0x76
	.byte	0x0
	.byte	0x77
	.byte	0x0
	.byte	0x78
	.byte	0x0
	.byte	0x0
	.byte	0x79
	.byte	0x0
	.byte	0x7a
	.byte	0x0
	.byte	0x7b
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.byte	0x81
	.byte	0x0
	.byte	0x82
	.byte	0x0
	.byte	0x83
	.byte	0x0
	.byte	0x84
	.byte	0x0
	.byte	0x0
	.byte	0x85
	.byte	0x0
	.byte	0x86
	.byte	0x0
	.byte	0x87
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x89
	.byte	0x0
	.byte	0x8a
	.byte	0x0
	.byte	0x8b
	.byte	0x0
	.byte	0x90
	.byte	0x0
	.byte	0x0
	.byte	0x91
	.byte	0x0
	.byte	0x92
	.byte	0x0
	.byte	0x93
	.byte	0x0
	.byte	0x94
	.byte	0x0
	.byte	0x0
	.byte	0x95
	.byte	0x0
	.byte	0x96
	.byte	0x0
	.byte	0x97
	.byte	0x0
	.byte	0x98
	.byte	0x0
	.byte	0x0
	.byte	0x99
	.byte	0x0
	.byte	0x9a
	.byte	0x0
	.byte	0x9b
	.byte	0x0
	.byte	0xa0
	.byte	0x0
	.byte	0x0
	.byte	0xa1
	.byte	0x0
	.byte	0xa2
	.byte	0x0
	.byte	0xa3
	.byte	0x0
	.byte	0xa4
	.byte	0x0
	.byte	0x0
	.byte	0xa5
	.byte	0x0
	.byte	0xa6
	.byte	0x0
	.byte	0xa7
	.byte	0x0
	.byte	0xa8
	.byte	0x0
	.byte	0x0
	.byte	0xa9
	.byte	0x0
	.byte	0xaa
	.byte	0x0
	.byte	0xab
	.byte	0x0
	.byte	0xb0
	.byte	0x0
	.byte	0x0
	.byte	0xb1
	.byte	0x0
	.byte	0xb2
	.byte	0x0
	.byte	0xb3
	.byte	0x0
	.byte	0xb4
	.byte	0x0
	.byte	0x0
	.byte	0xb5
	.byte	0x0
	.byte	0xb6
	.byte	0x0
	.byte	0xb7
	.byte	0x0
	.byte	0xb8
	.byte	0x0
	.byte	0x0
	.byte	0xb9
	.byte	0x0
	.byte	0xba
	.byte	0x0
	.byte	0xbb
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.byte	0xc1
	.byte	0x0
	.byte	0xc2
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xc4
	.byte	0x0
	.byte	0x0
	.byte	0xc5
	.byte	0x0
	.byte	0xc6
	.byte	0x0
	.byte	0xc7
	.byte	0x0
	.byte	0xc8
	.byte	0x0
	.byte	0x0
	.byte	0xc9
	.byte	0x0
	.byte	0xca
	.byte	0x0
	.byte	0xcb
	.byte	0x0
	.size	 sGround_Tilemap,344
	.type	 sTrees_Tilemap,object
sTrees_Tilemap:
	.byte	0x10
	.byte	0xc0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x56
	.byte	0x11
	.byte	0xd1
	.byte	0x10
	.byte	0xd2
	.byte	0x10
	.byte	0xd3
	.byte	0x10
	.byte	0x0
	.byte	0xd4
	.byte	0x10
	.byte	0xd5
	.byte	0x10
	.byte	0xd6
	.byte	0x10
	.byte	0xd7
	.byte	0x10
	.byte	0x0
	.byte	0xd8
	.byte	0x10
	.byte	0xd9
	.byte	0x10
	.byte	0xda
	.byte	0x10
	.byte	0xdb
	.byte	0x10
	.byte	0x0
	.byte	0xdc
	.byte	0x10
	.byte	0xdd
	.byte	0x10
	.byte	0xde
	.byte	0x10
	.byte	0xdf
	.byte	0x10
	.byte	0xc0
	.byte	0xf0
	.byte	0x1f
	.byte	0xb0
	.byte	0x1f
	.byte	0xe0
	.byte	0x10
	.byte	0xe1
	.byte	0x10
	.byte	0xe2
	.byte	0x10
	.byte	0x0
	.byte	0xe3
	.byte	0x10
	.byte	0xe4
	.byte	0x10
	.byte	0xe5
	.byte	0x10
	.byte	0xe6
	.byte	0x10
	.byte	0x0
	.byte	0xe7
	.byte	0x10
	.byte	0xe8
	.byte	0x10
	.byte	0xe9
	.byte	0x10
	.byte	0xea
	.byte	0x10
	.byte	0x0
	.byte	0xeb
	.byte	0x10
	.byte	0xec
	.byte	0x10
	.byte	0xed
	.byte	0x10
	.byte	0xee
	.byte	0x10
	.byte	0x60
	.byte	0xef
	.byte	0xf0
	.byte	0x1f
	.byte	0xc0
	.byte	0x1f
	.byte	0xf0
	.byte	0x10
	.byte	0xf1
	.byte	0x10
	.byte	0xf2
	.byte	0x0
	.byte	0x10
	.byte	0xf3
	.byte	0x10
	.byte	0xf4
	.byte	0x10
	.byte	0xf5
	.byte	0x10
	.byte	0xf6
	.byte	0x0
	.byte	0x10
	.byte	0xf7
	.byte	0x10
	.byte	0xf8
	.byte	0x10
	.byte	0xf9
	.byte	0x10
	.byte	0xfa
	.byte	0x0
	.byte	0x10
	.byte	0xfb
	.byte	0x10
	.byte	0xfc
	.byte	0x10
	.byte	0xfd
	.byte	0x10
	.byte	0xfe
	.byte	0x30
	.byte	0x10
	.byte	0xff
	.byte	0xf0
	.byte	0x1f
	.byte	0xc0
	.byte	0x1f
	.byte	0x0
	.byte	0x11
	.byte	0x1
	.byte	0x11
	.byte	0x0
	.byte	0x2
	.byte	0x11
	.byte	0x3
	.byte	0x11
	.byte	0x4
	.byte	0x11
	.byte	0x5
	.byte	0x11
	.byte	0x0
	.byte	0x6
	.byte	0x11
	.byte	0x7
	.byte	0x11
	.byte	0x8
	.byte	0x11
	.byte	0x9
	.byte	0x11
	.byte	0x0
	.byte	0xa
	.byte	0x11
	.byte	0xb
	.byte	0x11
	.byte	0xc
	.byte	0x11
	.byte	0xd
	.byte	0x11
	.byte	0xc
	.byte	0xe
	.byte	0x11
	.byte	0xf
	.byte	0x11
	.byte	0xf0
	.byte	0x1f
	.byte	0xb0
	.byte	0x1f
	.byte	0x10
	.byte	0x11
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0x12
	.byte	0x11
	.byte	0x13
	.byte	0x11
	.byte	0x14
	.byte	0x11
	.byte	0x0
	.byte	0x15
	.byte	0x11
	.byte	0x16
	.byte	0x11
	.byte	0x17
	.byte	0x11
	.byte	0x18
	.byte	0x11
	.byte	0x0
	.byte	0x19
	.byte	0x11
	.byte	0x1a
	.byte	0x11
	.byte	0x1b
	.byte	0x11
	.byte	0x1c
	.byte	0x11
	.byte	0x6
	.byte	0x1d
	.byte	0x11
	.byte	0x1e
	.byte	0x11
	.byte	0x1f
	.byte	0xf0
	.byte	0x1f
	.byte	0xc0
	.byte	0x1f
	.byte	0x20
	.byte	0x0
	.byte	0x11
	.byte	0x21
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x23
	.byte	0x11
	.byte	0x24
	.byte	0x0
	.byte	0x11
	.byte	0x25
	.byte	0x11
	.byte	0x26
	.byte	0x11
	.byte	0x27
	.byte	0x11
	.byte	0x28
	.byte	0x0
	.byte	0x11
	.byte	0x29
	.byte	0x11
	.byte	0x2a
	.byte	0x11
	.byte	0x2b
	.byte	0x11
	.byte	0x2c
	.byte	0x3
	.byte	0x11
	.byte	0x2d
	.byte	0x11
	.byte	0x2e
	.byte	0x11
	.byte	0x2f
	.byte	0xf0
	.byte	0x1f
	.byte	0xc0
	.byte	0x1f
	.byte	0x0
	.byte	0x30
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x32
	.byte	0x11
	.byte	0x33
	.byte	0x11
	.byte	0x0
	.byte	0x34
	.byte	0x11
	.byte	0x35
	.byte	0x11
	.byte	0x36
	.byte	0x11
	.byte	0x37
	.byte	0x11
	.byte	0x0
	.byte	0x38
	.byte	0x11
	.byte	0x39
	.byte	0x11
	.byte	0x3a
	.byte	0x11
	.byte	0x3b
	.byte	0x11
	.byte	0x1
	.byte	0x3c
	.byte	0x11
	.byte	0x3d
	.byte	0x11
	.byte	0x3e
	.byte	0x11
	.byte	0x3f
	.byte	0xf0
	.byte	0x1f
	.byte	0x80
	.byte	0xc0
	.byte	0x1f
	.byte	0x40
	.byte	0x11
	.byte	0x41
	.byte	0x11
	.byte	0x42
	.byte	0x11
	.byte	0x43
	.byte	0x0
	.byte	0x11
	.byte	0x44
	.byte	0x11
	.byte	0x45
	.byte	0x11
	.byte	0x46
	.byte	0x11
	.byte	0x47
	.byte	0x0
	.byte	0x11
	.byte	0x48
	.byte	0x11
	.byte	0x49
	.byte	0x11
	.byte	0x4a
	.byte	0x11
	.byte	0x4b
	.byte	0x0
	.byte	0x11
	.byte	0x4c
	.byte	0x11
	.byte	0x4d
	.byte	0x11
	.byte	0x4e
	.byte	0x11
	.byte	0x4f
	.byte	0xc7
	.byte	0xf0
	.byte	0x1f
	.byte	0xc0
	.byte	0x1f
	.byte	0x50
	.byte	0x11
	.byte	0x51
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xbc
	.byte	0x40
	.byte	0x3
	.byte	0x52
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x60
	.byte	0x1
	.byte	0x53
	.byte	0x11
	.byte	0x7b
	.byte	0x54
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x40
	.byte	0x3
	.byte	0x55
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf8
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.size	 sTrees_Tilemap,388
	.type	 sBgMountains_Tilemap,object
sBgMountains_Tilemap:
	.byte	0x10
	.byte	0xb0
	.byte	0x4
	.byte	0x0
	.byte	0x3f
	.byte	0xf0
	.byte	0x21
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xd0
	.byte	0x1
	.byte	0xf1
	.byte	0x21
	.byte	0xf2
	.byte	0xf0
	.byte	0x3
	.byte	0xe3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0xf3
	.byte	0x21
	.byte	0xf4
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xc7
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0xf5
	.byte	0x21
	.byte	0xf6
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x8f
	.byte	0x0
	.byte	0x3
	.byte	0xf7
	.byte	0x21
	.byte	0xf8
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0x78
	.byte	0xf9
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x20
	.byte	0x1
	.byte	0x61
	.byte	0x21
	.byte	0x62
	.byte	0x0
	.byte	0x21
	.byte	0x63
	.byte	0x21
	.byte	0x64
	.byte	0x21
	.byte	0x65
	.byte	0x21
	.byte	0x66
	.byte	0x0
	.byte	0x21
	.byte	0x67
	.byte	0x21
	.byte	0x68
	.byte	0x21
	.byte	0x69
	.byte	0x21
	.byte	0x6a
	.byte	0x0
	.byte	0x21
	.byte	0x6b
	.byte	0x21
	.byte	0x6c
	.byte	0x21
	.byte	0x6d
	.byte	0x21
	.byte	0x6e
	.byte	0x0
	.byte	0x21
	.byte	0x6f
	.byte	0x21
	.byte	0xa1
	.byte	0x21
	.byte	0xa2
	.byte	0x21
	.byte	0xa3
	.byte	0x0
	.byte	0x21
	.byte	0xa4
	.byte	0x21
	.byte	0xa5
	.byte	0x21
	.byte	0xa6
	.byte	0x21
	.byte	0xa7
	.byte	0x0
	.byte	0x21
	.byte	0xa8
	.byte	0x21
	.byte	0xa9
	.byte	0x21
	.byte	0xaa
	.byte	0x21
	.byte	0xab
	.byte	0x0
	.byte	0x21
	.byte	0xac
	.byte	0x21
	.byte	0xad
	.byte	0x21
	.byte	0xae
	.byte	0x21
	.byte	0xaf
	.byte	0x0
	.byte	0x21
	.byte	0x71
	.byte	0x21
	.byte	0x72
	.byte	0x21
	.byte	0x73
	.byte	0x21
	.byte	0x74
	.byte	0x0
	.byte	0x21
	.byte	0x75
	.byte	0x21
	.byte	0x76
	.byte	0x21
	.byte	0x77
	.byte	0x21
	.byte	0x78
	.byte	0x0
	.byte	0x21
	.byte	0x79
	.byte	0x21
	.byte	0x7a
	.byte	0x21
	.byte	0x7b
	.byte	0x21
	.byte	0x7c
	.byte	0x0
	.byte	0x21
	.byte	0x7d
	.byte	0x21
	.byte	0x7e
	.byte	0x21
	.byte	0x7f
	.byte	0x21
	.byte	0xb1
	.byte	0x0
	.byte	0x21
	.byte	0xb2
	.byte	0x21
	.byte	0xb3
	.byte	0x21
	.byte	0xb4
	.byte	0x21
	.byte	0xb5
	.byte	0x0
	.byte	0x21
	.byte	0xb6
	.byte	0x21
	.byte	0xb7
	.byte	0x21
	.byte	0xb8
	.byte	0x21
	.byte	0xb9
	.byte	0x0
	.byte	0x21
	.byte	0xba
	.byte	0x21
	.byte	0xbb
	.byte	0x21
	.byte	0xbc
	.byte	0x21
	.byte	0xbd
	.byte	0x0
	.byte	0x21
	.byte	0xbe
	.byte	0x21
	.byte	0xbf
	.byte	0x21
	.byte	0x81
	.byte	0x21
	.byte	0x82
	.byte	0x0
	.byte	0x21
	.byte	0x83
	.byte	0x21
	.byte	0x84
	.byte	0x21
	.byte	0x85
	.byte	0x21
	.byte	0x86
	.byte	0x0
	.byte	0x21
	.byte	0x87
	.byte	0x21
	.byte	0x88
	.byte	0x21
	.byte	0x89
	.byte	0x21
	.byte	0x8a
	.byte	0x0
	.byte	0x21
	.byte	0x8b
	.byte	0x21
	.byte	0x8c
	.byte	0x21
	.byte	0x8d
	.byte	0x21
	.byte	0x8e
	.byte	0x0
	.byte	0x21
	.byte	0x8f
	.byte	0x21
	.byte	0xc1
	.byte	0x21
	.byte	0xc2
	.byte	0x21
	.byte	0xc3
	.byte	0x0
	.byte	0x21
	.byte	0xc4
	.byte	0x21
	.byte	0xc5
	.byte	0x21
	.byte	0xc6
	.byte	0x21
	.byte	0xc7
	.byte	0x0
	.byte	0x21
	.byte	0xc8
	.byte	0x21
	.byte	0xc9
	.byte	0x21
	.byte	0xca
	.byte	0x21
	.byte	0xcb
	.byte	0x0
	.byte	0x21
	.byte	0xcc
	.byte	0x21
	.byte	0xcd
	.byte	0x21
	.byte	0xce
	.byte	0x21
	.byte	0xcf
	.byte	0x0
	.byte	0x21
	.byte	0x91
	.byte	0x21
	.byte	0x92
	.byte	0x21
	.byte	0x93
	.byte	0x21
	.byte	0x94
	.byte	0x0
	.byte	0x21
	.byte	0x95
	.byte	0x21
	.byte	0x96
	.byte	0x21
	.byte	0x97
	.byte	0x21
	.byte	0x98
	.byte	0x0
	.byte	0x21
	.byte	0x99
	.byte	0x21
	.byte	0x9a
	.byte	0x21
	.byte	0x9b
	.byte	0x21
	.byte	0x9c
	.byte	0x0
	.byte	0x21
	.byte	0x9d
	.byte	0x21
	.byte	0x9e
	.byte	0x21
	.byte	0x9f
	.byte	0x21
	.byte	0xd1
	.byte	0x0
	.byte	0x21
	.byte	0xd2
	.byte	0x21
	.byte	0xd3
	.byte	0x21
	.byte	0xd4
	.byte	0x21
	.byte	0xd5
	.byte	0x0
	.byte	0x21
	.byte	0xd6
	.byte	0x21
	.byte	0xd7
	.byte	0x21
	.byte	0xd8
	.byte	0x21
	.byte	0xd9
	.byte	0x0
	.byte	0x21
	.byte	0xda
	.byte	0x21
	.byte	0xdb
	.byte	0x21
	.byte	0xdc
	.byte	0x21
	.byte	0xdd
	.byte	0x0
	.byte	0x21
	.byte	0xde
	.byte	0x21
	.byte	0xdf
	.byte	0x21
	.byte	0xb0
	.byte	0x21
	.byte	0xc0
	.byte	0xf1
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0xd0
	.byte	0x21
	.byte	0xe0
	.byte	0xf0
	.byte	0x3
	.byte	0xe3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0xe1
	.byte	0x21
	.byte	0xe2
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xc7
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0xe3
	.byte	0x21
	.byte	0xe4
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x8f
	.byte	0x0
	.byte	0x3
	.byte	0xe5
	.byte	0x21
	.byte	0xe6
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0x1e
	.byte	0xe7
	.byte	0x21
	.byte	0xe8
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0xe9
	.byte	0x3c
	.byte	0x21
	.byte	0xea
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0xeb
	.byte	0x21
	.byte	0x78
	.byte	0xec
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.size	 sBgMountains_Tilemap,452
	.align	1, 0
	.type	 sPylonHook_TilemapEntries,object
sPylonHook_TilemapEntries:
	.short	0x3000
	.short	0x3001
	.short	0x3002
	.short	0x3003
	.short	0x3004
	.short	0x3005
	.short	0x3006
	.short	0x3007
	.short	0x3008
	.short	0x3009
	.size	 sPylonHook_TilemapEntries,20
	.type	 sPylonStems_Tilemap,object
sPylonStems_Tilemap:
	.byte	0x10
	.byte	0x78
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x30
	.byte	0xb
	.byte	0x30
	.byte	0xc
	.byte	0x30
	.byte	0xd
	.byte	0x30
	.byte	0x1
	.byte	0xe
	.byte	0x30
	.byte	0xf
	.byte	0x30
	.byte	0x1e
	.byte	0x30
	.byte	0x1f
	.byte	0xf0
	.byte	0x3
	.byte	0xfc
	.byte	0x0
	.byte	0x3
	.byte	0xf0
	.byte	0x1b
	.byte	0xf0
	.byte	0x1b
	.byte	0xf0
	.byte	0x3
	.byte	0xf0
	.byte	0x1b
	.byte	0x90
	.byte	0x3
	.size	 sPylonStems_Tilemap,36
	.align	2, 0
	.type	 sSpriteSheets,object
sSpriteSheets:
	.word	gCableCar_Gfx
	.short	0x800
	.short	0x1
	.word	gCableCarDoor_Gfx
	.short	0x40
	.short	0x2
	.word	gCableCarCable_Gfx
	.short	0x80
	.short	0x3
	.space	8
	.size	 sSpriteSheets,32
	.align	2, 0
	.type	 sSpritePalettes,object
sSpritePalettes:
	.word	gCableCar_Pal
	.short	0x1
	.space	2
	.space	8
	.size	 sSpritePalettes,16
	.align	2, 0
	.type	 sOam_CableCar,object
	.size	 sOam_CableCar,8
sOam_CableCar:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sOam_CableCarDoor,object
	.size	 sOam_CableCarDoor,8
sOam_CableCarDoor:
	.byte	0x0
	.byte	0x43
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sOam_Cable,object
	.size	 sOam_Cable,8
sOam_Cable:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 sSpriteTemplate_CableCar,object
sSpriteTemplate_CableCar:
	.short	0x1
	.short	0x1
	.word	sOam_CableCar
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_CableCar
	.short	0x2
	.short	0x1
	.word	sOam_CableCarDoor
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_CableCar
	.size	 sSpriteTemplate_CableCar,48
	.align	2, 0
	.type	 sSpriteTemplate_Cable,object
	.size	 sSpriteTemplate_Cable,24
sSpriteTemplate_Cable:
	.short	0x3
	.short	0x1
	.word	sOam_Cable
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_Cable
.text
	.align	2, 0
	.type	 Task_LoadCableCar,function
	.thumb_func
Task_LoadCableCar:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldr	r0, .L4+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L3:
	pop	{r4}
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gPaletteFade
	.word	CB2_LoadCableCar
.Lfe1:
	.size	 Task_LoadCableCar,.Lfe1-Task_LoadCableCar
	.align	2, 0
	.globl	CableCar
	.type	 CableCar,function
	.thumb_func
CableCar:
	push	{lr}
	add	sp, sp, #-0x4
	bl	ScriptContext2_Enable
	ldr	r0, .L7
	mov	r1, #0x1
	bl	CreateTask
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	Task_LoadCableCar
.Lfe2:
	.size	 CableCar,.Lfe2-CableCar
	.align	2, 0
	.type	 CB2_LoadCableCar,function
	.thumb_func
CB2_LoadCableCar:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	mov	r4, #0x0
	str	r4, [sp, #0x14]
	ldr	r1, .L52
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0x9
	bhi	.L12	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L52+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L53:
	.align	2, 0
.L52:
	.word	gMain
	.word	.L49
	.align	2, 0
	.align	2, 0
.L49:
	.word	.L12
	.word	.L18
	.word	.L24
	.word	.L30
	.word	.L32
	.word	.L33
	.word	.L43
	.word	.L44
	.word	.L45
	.word	.L46
.L12:
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetBgRegs
	bl	ScanlineEffect_Stop
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0x10
	mov	r9, r0
	add	r2, sp, #0xc
	mov	r6, #0x0
	ldr	r1, .L54
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L54+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	r8, r0
.L15:
	strh	r6, [r2]
	add	r0, sp, #0xc
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L15	@cond_branch
	strh	r6, [r2]
	add	r2, sp, #0xc
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r3, r8
	orr	r0, r0, r3
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x10]
	ldr	r2, .L54
	mov	r1, r9
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, sp, #0xc
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	ldr	r4, .L54+0x8
	ldr	r0, .L54+0xc
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L54+0x10
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L55:
	.align	2, 0
.L54:
	.word	0x40000d4
	.word	-0x7efff800
	.word	sCableCar
	.word	0x4110
	.word	gMain
.L18:
	bl	ResetSpriteData
	bl	ResetTasks
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetTempTileDataBuffers
	bl	StartWeather
	mov	r4, #0x0
	ldr	r0, .L56
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0xf0
	mov	r2, #0x0
.L22:
	lsl	r0, r4, #0x2
	add	r0, r1, r0
	str	r2, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x13
	bls	.L22	@cond_branch
	bl	InitMapMusic
	bl	ResetMapMusic
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L56+0x4
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r4, .L56+0x8
	ldr	r1, [r4]
	add	r1, r1, #0xfc
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r3, .L56+0xc
	add	r1, r1, r3
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L56+0x10
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r2, .L56+0x14
	add	r1, r1, r2
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	ldr	r2, .L56+0x18
	ldr	r1, .L56+0x1c
	mov	r0, #0x0
	strh	r0, [r1]
	strh	r0, [r2]
	ldr	r1, .L56+0x20
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L57:
	.align	2, 0
.L56:
	.word	gWeatherPtr
	.word	sBgTemplates
	.word	sCableCar
	.word	0x10fc
	.word	0x20fc
	.word	0x30fc
	.word	gSpriteCoordOffsetX
	.word	gSpriteCoordOffsetY
	.word	gMain
.L24:
	mov	r4, #0x0
	add	r5, sp, #0x14
	ldr	r6, .L58
.L28:
	lsl	r0, r4, #0x3
	add	r0, r0, r6
	bl	LoadCompressedSpriteSheet
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L28	@cond_branch
	ldr	r0, .L58+0x4
	bl	LoadSpritePalettes
	ldr	r0, .L58+0x8
	add	r1, r5, #0
	bl	malloc_and_decompress
	ldr	r4, .L58+0xc
	ldr	r1, [r4]
	ldr	r2, .L58+0x10
	add	r1, r1, r2
	str	r0, [r1]
	ldr	r0, .L58+0x14
	add	r1, r5, #0
	bl	malloc_and_decompress
	ldr	r1, [r4]
	mov	r3, #0x82
	lsl	r3, r3, #0x7
	add	r1, r1, r3
	str	r0, [r1]
	ldr	r0, .L58+0x18
	add	r1, r5, #0
	bl	malloc_and_decompress
	ldr	r1, [r4]
	ldr	r2, .L58+0x1c
	add	r1, r1, r2
	str	r0, [r1]
	ldr	r0, .L58+0x20
	add	r1, r5, #0
	bl	malloc_and_decompress
	ldr	r1, [r4]
	ldr	r3, .L58+0x24
	add	r2, r1, r3
	str	r0, [r2]
	ldr	r0, .L58+0x28
	add	r1, r1, r0
	ldr	r0, .L58+0x2c
	str	r0, [r1]
	ldr	r1, .L58+0x30
	mov	r0, #0x0
	str	r0, [sp]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L58+0x34
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L59:
	.align	2, 0
.L58:
	.word	sSpriteSheets
	.word	sSpritePalettes
	.word	sGround_Tilemap
	.word	sCableCar
	.word	0x40fc
	.word	sTrees_Tilemap
	.word	sBgMountains_Tilemap
	.word	0x4104
	.word	sPylonStems_Tilemap
	.word	0x410c
	.word	0x4108
	.word	sPylonHook_TilemapEntries
	.word	gCableCarBg_Gfx
	.word	gMain
.L30:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB432
	b	.L10	@long jump
.LCB432:
	ldr	r0, .L60
	mov	r1, #0x0
	mov	r2, #0x80
	bl	LoadPalette
	ldr	r1, .L60+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L61:
	.align	2, 0
.L60:
	.word	gCableCarBg_Pal
	.word	gMain
.L32:
	bl	CreateCableCarSprites
	bl	RunTasks
	ldr	r1, .L62
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L63:
	.align	2, 0
.L62:
	.word	gMain
.L33:
	ldr	r0, .L64
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x7
	bne	.L34	@cond_branch
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r6, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L65:
	.align	2, 0
.L64:
	.word	sCableCar
.L34:
	ldr	r0, .L66
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0xf0
	ldr	r0, [r1]
	cmp	r0, #0
	bne	.LCB504
	b	.L10	@long jump
.LCB504:
	mov	r4, #0x0
	add	r3, r1, #0
	mov	r5, #0xd
	neg	r5, r5
.L40:
	lsl	r0, r4, #0x2
	add	r0, r3, r0
	ldr	r2, [r0]
	cmp	r2, #0
	beq	.L39	@cond_branch
	ldrb	r1, [r2, #0x5]
	add	r0, r5, #0
	and	r0, r0, r1
	strb	r0, [r2, #0x5]
.L39:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x13
	bls	.L40	@cond_branch
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r6, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L67:
	.align	2, 0
.L66:
	.word	gWeatherPtr
.L43:
	ldr	r6, .L68
	ldr	r0, [r6]
	mov	r1, #0x82
	lsl	r1, r1, #0x7
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0xf
	str	r0, [sp, #0x4]
	mov	r5, #0x11
	str	r5, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x11
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r0, [r6]
	ldr	r2, .L68+0x4
	add	r0, r0, r2
	ldr	r1, [r0]
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r3, #0x14
	mov	r8, r3
	str	r3, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r0, [r6]
	ldr	r1, .L68+0x8
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x5
	str	r0, [sp]
	mov	r4, #0x2
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r0, [r6]
	ldr	r2, .L68+0xc
	add	r0, r0, r2
	ldr	r1, [r0]
	str	r4, [sp]
	mov	r3, r8
	str	r3, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r1, .L68+0x10
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L69:
	.align	2, 0
.L68:
	.word	sCableCar
	.word	0x4104
	.word	0x4108
	.word	0x410c
	.word	gMain
.L44:
	ldr	r0, .L70
	ldrb	r0, [r0]
	bl	InitGroundTilemapData
	ldr	r1, .L70+0x4
	mov	r9, r1
	ldr	r0, [r1]
	ldr	r2, .L70+0x8
	mov	r8, r2
	add	r0, r0, r8
	ldr	r1, [r0]
	add	r1, r1, #0x90
	mov	r6, #0xc
	str	r6, [sp]
	mov	r5, #0x3
	str	r5, [sp, #0x4]
	mov	r4, #0x11
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0x0
	mov	r3, #0xe
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r3, r9
	ldr	r0, [r3]
	add	r0, r0, r8
	ldr	r1, [r0]
	add	r1, r1, #0xd8
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0xc
	mov	r3, #0x11
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r1, r9
	ldr	r0, [r1]
	add	r0, r0, r8
	ldr	r1, [r0]
	mov	r2, #0x90
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0x18
	mov	r3, #0x14
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r3, r9
	ldr	r0, [r3]
	add	r0, r0, r8
	ldr	r1, [r0]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0x0
	mov	r3, #0x11
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r1, r9
	ldr	r0, [r1]
	add	r0, r0, r8
	ldr	r1, [r0]
	add	r1, r1, #0x48
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0x0
	mov	r3, #0x14
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r2, r9
	ldr	r0, [r2]
	add	r0, r0, r8
	ldr	r1, [r0]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0xc
	mov	r3, #0x14
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r3, r9
	ldr	r0, [r3]
	add	r0, r0, r8
	ldr	r1, [r0]
	add	r1, r1, #0x48
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0xc
	mov	r3, #0x17
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r1, r9
	ldr	r0, [r1]
	add	r0, r0, r8
	ldr	r1, [r0]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0x18
	mov	r3, #0x17
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r1, .L70+0xc
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L71:
	.align	2, 0
.L70:
	.word	gSpecialVar_0x8004
	.word	sCableCar
	.word	0x40fc
	.word	gMain
.L45:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r1, #0x3
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L72
	mov	r1, #0x1
	bl	FadeInNewBGM
	mov	r0, #0x1
	bl	SetBgRegs
	ldr	r1, .L72+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L50
.L73:
	.align	2, 0
.L72:
	.word	0x1a9
	.word	gMain
.L46:
	ldr	r3, .L74
	ldrh	r2, [r3]
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r4, .L74+0x4
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r0, .L74+0x8
	bl	SetVBlankCallback
	ldr	r0, .L74+0xc
	bl	SetMainCallback2
	ldr	r0, .L74+0x10
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L74+0x14
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L47	@cond_branch
	ldr	r0, .L74+0x18
	b	.L51
.L75:
	.align	2, 0
.L74:
	.word	0x4000208
	.word	0x4000200
	.word	VBlankCB_CableCar
	.word	CB2_CableCar
	.word	Task_CableCar
	.word	gSpecialVar_0x8004
	.word	Task_AnimateBgGoingUp
.L47:
	ldr	r0, .L76
.L51:
	mov	r1, #0x1
	bl	CreateTask
	ldr	r1, .L76+0x4
	ldr	r1, [r1]
.L50:
	strb	r0, [r1]
.L10:
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	Task_AnimateBgGoingDown
	.word	sCableCar
.Lfe3:
	.size	 CB2_LoadCableCar,.Lfe3-CB2_LoadCableCar
	.align	2, 0
	.type	 CB2_CableCar,function
	.thumb_func
CB2_CableCar:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	bl	MapMusicMain
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_CableCar,.Lfe4-CB2_CableCar
	.align	2, 0
	.type	 CB2_EndCableCar,function
	.thumb_func
CB2_EndCableCar:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r4, #0x0
	mov	r0, #0x0
	bl	HideBg
	mov	r0, #0x1
	bl	HideBg
	mov	r0, #0x2
	bl	HideBg
	mov	r0, #0x3
	bl	HideBg
	mov	r0, #0x0
	bl	SetBgRegs
	ldr	r0, .L90
	strh	r4, [r0]
	mov	r0, #0x0
	bl	SetCurrentAndNextWeatherNoDelay
	add	r0, sp, #0x4
	mov	r8, r0
	ldr	r0, .L90+0x4
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0xf0
	mov	r2, #0x0
.L83:
	lsl	r0, r4, #0x2
	add	r0, r1, r0
	str	r2, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x13
	bls	.L83	@cond_branch
	bl	ResetTasks
	bl	ResetSpriteData
	bl	ResetPaletteFade
	mov	r0, #0x0
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x3
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r6, .L90+0x8
	ldr	r0, [r6]
	ldr	r2, .L90+0xc
	add	r1, r0, r2
	mov	r5, #0x0
	str	r5, [r1]
	ldr	r4, .L90+0x10
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [r6]
	add	r4, r0, r4
	str	r5, [r4]
	ldr	r4, .L90+0x14
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [r6]
	add	r4, r0, r4
	str	r5, [r4]
	mov	r4, #0x82
	lsl	r4, r4, #0x7
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [r6]
	add	r4, r0, r4
	str	r5, [r4]
	ldr	r4, .L90+0x18
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [r6]
	add	r4, r0, r4
	str	r5, [r4]
	bl	Free
	str	r5, [r6]
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	mov	r3, #0xc0
	lsl	r3, r3, #0x9
	mov	r4, sp
	mov	r6, #0x0
	ldr	r1, .L90+0x1c
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L90+0x20
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L87:
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r2, r2, r5
	sub	r3, r3, r5
	cmp	r3, r5
	bhi	.L87	@cond_branch
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	lsr	r0, r3, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r2, .L90+0x1c
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	mov	r0, sp
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	bl	WarpIntoMap
	ldr	r0, .L90+0x24
	str	r4, [r0]
	ldr	r0, .L90+0x28
	bl	SetMainCallback2
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L91:
	.align	2, 0
.L90:
	.word	gSpriteCoordOffsetX
	.word	gWeatherPtr
	.word	sCableCar
	.word	0x4108
	.word	0x410c
	.word	0x4104
	.word	0x40fc
	.word	0x40000d4
	.word	-0x7efff800
	.word	gFieldCallback
	.word	CB2_LoadMap
.Lfe5:
	.size	 CB2_EndCableCar,.Lfe5-CB2_EndCableCar
	.align	2, 0
	.type	 Task_CableCar,function
	.thumb_func
Task_CableCar:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r4, #0x0
	ldr	r5, .L126
	ldr	r3, [r5]
	ldrh	r0, [r3, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x6]
	ldrb	r2, [r3, #0x1]
	add	r7, r5, #0
	cmp	r2, #0x2
	beq	.L118	@cond_branch
	cmp	r2, #0x2
	bgt	.L125	@cond_branch
	cmp	r2, #0
	beq	.L94	@cond_branch
	cmp	r2, #0x1
	beq	.L96	@cond_branch
	b	.L93
.L127:
	.align	2, 0
.L126:
	.word	sCableCar
.L125:
	cmp	r2, #0x3
	bne	.LCB1149
	b	.L120	@long jump
.LCB1149:
	cmp	r2, #0xff
	bne	.LCB1151
	b	.L122	@long jump
.LCB1151:
	b	.L93
.L94:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r3, #0x4]
	cmp	r0, r1
	beq	.LCB1164
	b	.L93	@long jump
.LCB1164:
	ldrb	r0, [r3, #0x2]
	bl	SetNextWeather
	ldr	r1, [r5]
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	b	.L93
.L96:
	ldrb	r0, [r3, #0x2]
	cmp	r0, #0x2
	beq	.L106	@cond_branch
	cmp	r0, #0x7
	beq	.LCB1180
	b	.L93	@long jump
.LCB1180:
	ldr	r0, .L128
	ldr	r0, [r0]
	add	r2, r0, #0
	add	r2, r2, #0xf0
	ldr	r0, [r2]
	cmp	r0, #0
	beq	.L93	@cond_branch
	ldrb	r1, [r0, #0x5]
	mov	r0, #0xc
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L93	@cond_branch
	add	r3, r2, #0
	mov	r5, #0xd
	neg	r5, r5
.L103:
	lsl	r0, r4, #0x2
	add	r0, r3, r0
	ldr	r2, [r0]
	cmp	r2, #0
	beq	.L102	@cond_branch
	ldrb	r1, [r2, #0x5]
	add	r0, r5, #0
	and	r0, r0, r1
	strb	r0, [r2, #0x5]
.L102:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x13
	bls	.L103	@cond_branch
	ldr	r1, [r7]
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	b	.L93
.L129:
	.align	2, 0
.L128:
	.word	gWeatherPtr
.L106:
	ldr	r0, .L130
	ldr	r2, [r0]
	mov	r1, #0xda
	lsl	r1, r1, #0x3
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L107	@cond_branch
	strb	r0, [r3, #0x1]
	b	.L93
.L131:
	.align	2, 0
.L130:
	.word	gWeatherPtr
.L107:
	ldrh	r1, [r3, #0x6]
	ldrh	r0, [r3, #0x4]
	add	r0, r0, #0x8
	cmp	r1, r0
	blt	.L93	@cond_branch
	add	r6, r2, #0
	add	r6, r6, #0xf0
	mov	r5, #0x1
	mov	r7, #0x5
	neg	r7, r7
.L113:
	lsl	r0, r4, #0x2
	add	r0, r6, r0
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L112	@cond_branch
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r1, r2, #0x1d
	lsr	r1, r1, #0x1f
	eor	r1, r1, r5
	and	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r0, r7, #0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
.L112:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x13
	bls	.L113	@cond_branch
	b	.L93
.L118:
	lsl	r1, r0, #0x10
	ldr	r0, .L132
	cmp	r1, r0
	bne	.L93	@cond_branch
	mov	r0, #0x3
	strb	r0, [r3, #0x1]
	sub	r0, r0, #0x4
	str	r4, [sp]
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x4
	bl	FadeOutBGM
	b	.L93
.L133:
	.align	2, 0
.L132:
	.word	0x23a0000
.L120:
	ldr	r0, .L134
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L93	@cond_branch
	mov	r0, #0xff
	strb	r0, [r3, #0x1]
	b	.L93
.L135:
	.align	2, 0
.L134:
	.word	gPaletteFade
.L122:
	mov	r0, #0x0
	bl	SetVBlankCallback
	add	r0, r6, #0
	bl	DestroyTask
	ldr	r0, [r5]
	ldrb	r0, [r0]
	bl	DestroyTask
	ldr	r0, .L136
	bl	SetMainCallback2
.L93:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	CB2_EndCableCar
.Lfe6:
	.size	 Task_CableCar,.Lfe6-Task_CableCar
	.align	2, 0
	.type	 Task_AnimateBgGoingUp,function
	.thumb_func
Task_AnimateBgGoingUp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L152
	ldr	r1, [r6]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0xff
	beq	.L139	@cond_branch
	ldrb	r0, [r1, #0x14]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x14]
	ldr	r1, [r6]
	ldrh	r0, [r1, #0x6]
	mov	r3, #0x1
	and	r0, r0, r3
	cmp	r0, #0
	bne	.L140	@cond_branch
	ldrb	r0, [r1, #0x15]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x15]
.L140:
	ldr	r2, [r6]
	ldrh	r0, [r2, #0x6]
	mov	r1, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L141	@cond_branch
	ldrb	r0, [r2, #0xc]
	sub	r0, r0, #0x1
	strb	r0, [r2, #0xc]
	ldr	r1, [r6]
	ldrb	r0, [r1, #0xd]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0xd]
.L141:
	ldr	r0, [r6]
	ldrb	r1, [r0, #0x14]
	cmp	r1, #0x20
	beq	.L145	@cond_branch
	cmp	r1, #0x20
	bgt	.L149	@cond_branch
	cmp	r1, #0x10
	beq	.L146	@cond_branch
	b	.L139
.L153:
	.align	2, 0
.L152:
	.word	sCableCar
.L149:
	cmp	r1, #0x28
	beq	.L144	@cond_branch
	cmp	r1, #0xaf
	bne	.L139	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0xa
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x16
	bl	FillBgTilemapBufferRect
	b	.L139
.L144:
	mov	r0, #0x2
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x3
	b	.L151
.L145:
	str	r3, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x2
.L151:
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	b	.L139
.L146:
	ldr	r1, .L154
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x5
	str	r0, [sp]
	mov	r4, #0x2
	str	r4, [sp, #0x4]
	mov	r5, #0x11
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r0, [r6]
	ldr	r1, .L154+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	str	r4, [sp]
	mov	r0, #0x1e
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r1, [r6]
	mov	r0, #0x40
	strb	r0, [r1, #0x15]
.L139:
	bl	AnimateGroundGoingUp
	ldr	r3, .L154+0x8
	mov	r0, #0x0
	ldrsh	r2, [r3, r0]
	add	r1, r2, #0x1
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L150	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x80
.L150:
	asr	r0, r0, #0x7
	lsl	r0, r0, #0x7
	sub	r0, r1, r0
	strh	r0, [r3]
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	0x4108
	.word	0x410c
	.word	gSpriteCoordOffsetX
.Lfe7:
	.size	 Task_AnimateBgGoingUp,.Lfe7-Task_AnimateBgGoingUp
	.align	2, 0
	.type	 Task_AnimateBgGoingDown,function
	.thumb_func
Task_AnimateBgGoingDown:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	ldr	r7, .L171
	ldr	r1, [r7]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0xff
	bne	.LCB1565
	b	.L157	@long jump
.LCB1565:
	ldrb	r0, [r1, #0x14]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x14]
	ldr	r1, [r7]
	ldrh	r0, [r1, #0x6]
	mov	r6, #0x1
	and	r0, r0, r6
	cmp	r0, #0
	bne	.L158	@cond_branch
	ldrb	r0, [r1, #0x15]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x15]
.L158:
	ldr	r2, [r7]
	ldrh	r0, [r2, #0x6]
	mov	r1, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L159	@cond_branch
	ldrb	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r2, #0xc]
	ldr	r1, [r7]
	ldrb	r0, [r1, #0xd]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xd]
.L159:
	ldr	r0, [r7]
	ldrb	r1, [r0, #0x14]
	cmp	r1, #0x20
	beq	.L163	@cond_branch
	cmp	r1, #0x20
	bgt	.L167	@cond_branch
	cmp	r1, #0x10
	beq	.L162	@cond_branch
	b	.L157
.L172:
	.align	2, 0
.L171:
	.word	sCableCar
.L167:
	cmp	r1, #0x28
	beq	.L164	@cond_branch
	cmp	r1, #0xb0
	bne	.L157	@cond_branch
	ldr	r1, .L173
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x1e
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CopyToBgTilemapBufferRect_ChangePalette
	b	.L157
.L174:
	.align	2, 0
.L173:
	.word	0x410c
.L162:
	mov	r0, #0x3
	str	r0, [sp]
	mov	r4, #0x2
	str	r4, [sp, #0x4]
	mov	r5, #0x11
	str	r5, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	mov	r0, #0xa
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x16
	bl	FillBgTilemapBufferRect
	ldr	r1, [r7]
	mov	r0, #0xc0
	strb	r0, [r1, #0x15]
	b	.L157
.L163:
	ldr	r5, .L175
	add	r0, r0, r5
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	str	r6, [sp]
	str	r6, [sp, #0x4]
	mov	r4, #0x11
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x2
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r0, [r7]
	add	r0, r0, r5
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x6]
	str	r6, [sp]
	str	r6, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x3
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r0, [r7]
	add	r0, r0, r5
	ldr	r0, [r0]
	ldrh	r1, [r0, #0xe]
	str	r6, [sp]
	str	r6, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x2
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r0, [r7]
	add	r0, r0, r5
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x10]
	str	r6, [sp]
	str	r6, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x3
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	b	.L157
.L176:
	.align	2, 0
.L175:
	.word	0x4108
.L164:
	ldr	r5, .L177
	add	r0, r0, r5
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x8]
	str	r6, [sp]
	str	r6, [sp, #0x4]
	mov	r4, #0x11
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x4
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r0, [r7]
	add	r0, r0, r5
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x12]
	str	r6, [sp]
	str	r6, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x4
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
.L157:
	bl	AnimateGroundGoingDown
	ldr	r0, .L177+0x4
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x6]
	ldrh	r1, [r1, #0x4]
	cmp	r0, r1
	bcs	.L168	@cond_branch
	ldr	r4, .L177+0x8
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	b	.L170
.L178:
	.align	2, 0
.L177:
	.word	0x4108
	.word	sCableCar
	.word	gSpriteCoordOffsetX
.L168:
	ldr	r0, .L179
	ldr	r4, [r0]
	ldr	r0, .L179+0x4
	add	r4, r4, r0
	ldrh	r0, [r4]
.L170:
	add	r0, r0, #0xf7
	mov	r1, #0xf8
	bl	__modsi3
	strh	r0, [r4]
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L180:
	.align	2, 0
.L179:
	.word	gWeatherPtr
	.word	0x6fc
.Lfe8:
	.size	 Task_AnimateBgGoingDown,.Lfe8-Task_AnimateBgGoingDown
	.align	2, 0
	.type	 VBlankCB_CableCar,function
	.thumb_func
VBlankCB_CableCar:
	push	{r4, lr}
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r4, .L182
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x14]
	mov	r0, #0x1c
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x1e
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xc]
	mov	r0, #0x14
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xd]
	mov	r0, #0x16
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x10
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x9]
	mov	r0, #0x12
	bl	SetGpuReg
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r4}
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	sCableCar
.Lfe9:
	.size	 VBlankCB_CableCar,.Lfe9-VBlankCB_CableCar
	.align	2, 0
	.type	 SpriteCB_Cable,function
	.thumb_func
SpriteCB_Cable:
	bx	lr
.Lfe10:
	.size	 SpriteCB_Cable,.Lfe10-SpriteCB_Cable
	.align	2, 0
	.type	 SpriteCB_CableCar,function
	.thumb_func
SpriteCB_CableCar:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L193
	ldr	r6, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0xff
	beq	.L186	@cond_branch
	ldr	r0, .L193+0x4
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L187	@cond_branch
	mov	r0, #0x6
	ldrsh	r4, [r6, r0]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L188	@cond_branch
	ldr	r1, .L193+0x8
	bl	__addsf3
.L188:
	ldr	r1, .L193+0xc
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x2e]
	sub	r1, r1, r0
	strh	r1, [r5, #0x20]
	mov	r1, #0x6
	ldrsh	r4, [r6, r1]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L189	@cond_branch
	ldr	r1, .L193+0x8
	bl	__addsf3
.L189:
	ldr	r1, .L193+0x10
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x30]
	sub	r1, r1, r0
	strh	r1, [r5, #0x22]
	b	.L186
.L194:
	.align	2, 0
.L193:
	.word	sCableCar
	.word	gSpecialVar_0x8004
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x3e0f5c29	@ float 1.40000000596046447754e-1
	.word 0x3d89374c	@ float 6.70000016689300537109e-2
.L187:
	mov	r0, #0x6
	ldrsh	r4, [r6, r0]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L191	@cond_branch
	ldr	r1, .L195
	bl	__addsf3
.L191:
	ldr	r1, .L195+0x4
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x2e]
	add	r0, r0, r1
	strh	r0, [r5, #0x20]
	mov	r0, #0x6
	ldrsh	r4, [r6, r0]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L192	@cond_branch
	ldr	r1, .L195
	bl	__addsf3
.L192:
	ldr	r1, .L195+0x8
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x30]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
.L186:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L196:
	.align	2, 0
.L195:
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x3e0f5c29	@ float 1.40000000596046447754e-1
	.word 0x3d89374c	@ float 6.70000016689300537109e-2
.Lfe11:
	.size	 SpriteCB_CableCar,.Lfe11-SpriteCB_CableCar
	.align	2, 0
	.type	 SpriteCB_Player,function
	.thumb_func
SpriteCB_Player:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L211
	ldr	r6, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0xff
	bne	.LCB2059
	b	.L198	@long jump
.LCB2059:
	ldr	r0, .L211+0x4
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L199	@cond_branch
	mov	r0, #0x6
	ldrsh	r4, [r6, r0]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L200	@cond_branch
	ldr	r1, .L211+0x8
	bl	__addsf3
.L200:
	ldr	r1, .L211+0xc
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x2e]
	sub	r1, r1, r0
	strh	r1, [r5, #0x20]
	mov	r1, #0x6
	ldrsh	r4, [r6, r1]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L201	@cond_branch
	ldr	r1, .L211+0x8
	bl	__addsf3
.L201:
	ldr	r1, .L211+0x10
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x30]
	sub	r1, r1, r0
	strh	r1, [r5, #0x22]
	b	.L202
.L212:
	.align	2, 0
.L211:
	.word	sCableCar
	.word	gSpecialVar_0x8004
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x3e0f5c29	@ float 1.40000000596046447754e-1
	.word 0x3d89374c	@ float 6.70000016689300537109e-2
.L199:
	mov	r0, #0x6
	ldrsh	r4, [r6, r0]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L203	@cond_branch
	ldr	r1, .L213
	bl	__addsf3
.L203:
	ldr	r1, .L213+0x4
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x2e]
	add	r0, r0, r1
	strh	r0, [r5, #0x20]
	mov	r0, #0x6
	ldrsh	r4, [r6, r0]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L204	@cond_branch
	ldr	r1, .L213
	bl	__addsf3
.L204:
	ldr	r1, .L213+0x8
	bl	__mulsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x30]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
.L202:
	mov	r0, #0x32
	ldrsh	r2, [r5, r0]
	cmp	r2, #0
	bne	.L208	@cond_branch
	mov	r0, #0x11
	strh	r0, [r5, #0x26]
	ldrh	r0, [r5, #0x34]
	add	r1, r0, #0x1
	strh	r1, [r5, #0x34]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9
	ble	.L198	@cond_branch
	strh	r2, [r5, #0x34]
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	b	.L198
.L214:
	.align	2, 0
.L213:
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x3e0f5c29	@ float 1.40000000596046447754e-1
	.word 0x3d89374c	@ float 6.70000016689300537109e-2
.L208:
	mov	r2, #0x0
	mov	r0, #0x10
	strh	r0, [r5, #0x26]
	ldrh	r0, [r5, #0x34]
	add	r1, r0, #0x1
	strh	r1, [r5, #0x34]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9
	ble	.L198	@cond_branch
	strh	r2, [r5, #0x34]
	strh	r2, [r5, #0x32]
.L198:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 SpriteCB_Player,.Lfe12-SpriteCB_Player
	.align	2, 0
	.type	 SpriteCB_HikerGoingUp,function
	.thumb_func
SpriteCB_HikerGoingUp:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L216	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x28
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x1
	ldrh	r3, [r2, #0x20]
	add	r0, r0, r3
	strh	r0, [r2, #0x20]
	ldrh	r1, [r2, #0x22]
	add	r1, r1, #0x10
	add	r0, r2, #0
	add	r0, r0, #0x29
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	strh	r0, [r2, #0x22]
.L216:
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x32
	ldrsh	r1, [r2, r3]
	cmp	r0, r1
	blt	.L217	@cond_branch
	mov	r0, #0x30
	ldrsh	r1, [r2, r0]
	cmp	r1, #0
	beq	.L219	@cond_branch
	cmp	r1, #0x1
	beq	.L221	@cond_branch
	b	.L218
.L219:
	ldrh	r0, [r2, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x20]
	ldrh	r0, [r2, #0x2e]
	b	.L227
.L221:
	ldrh	r0, [r2, #0x2e]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L218	@cond_branch
	ldrh	r0, [r2, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x20]
	ldrh	r0, [r2, #0x20]
.L227:
	mov	r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L218	@cond_branch
	ldrh	r0, [r2, #0x22]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x22]
.L218:
	mov	r1, #0x22
	ldrsh	r0, [r2, r1]
	cmp	r0, #0xa0
	ble	.L217	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L217:
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 SpriteCB_HikerGoingUp,.Lfe13-SpriteCB_HikerGoingUp
	.align	2, 0
	.type	 SpriteCB_HikerGoingDown,function
	.thumb_func
SpriteCB_HikerGoingDown:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L229	@cond_branch
	ldrh	r1, [r2, #0x22]
	add	r1, r1, #0x10
	add	r0, r2, #0
	add	r0, r0, #0x29
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	strh	r0, [r2, #0x22]
.L229:
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x32
	ldrsh	r1, [r2, r3]
	cmp	r0, r1
	blt	.L230	@cond_branch
	mov	r0, #0x30
	ldrsh	r1, [r2, r0]
	cmp	r1, #0
	beq	.L232	@cond_branch
	cmp	r1, #0x1
	beq	.L234	@cond_branch
	b	.L231
.L232:
	ldrh	r0, [r2, #0x20]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0x20]
	ldrh	r0, [r2, #0x2e]
	b	.L240
.L234:
	ldrh	r0, [r2, #0x2e]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L231	@cond_branch
	ldrh	r0, [r2, #0x20]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0x20]
	ldrh	r0, [r2, #0x20]
.L240:
	mov	r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L231	@cond_branch
	ldrh	r0, [r2, #0x22]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0x22]
.L231:
	mov	r1, #0x22
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x4f
	bgt	.L230	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L230:
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 SpriteCB_HikerGoingDown,.Lfe14-SpriteCB_HikerGoingDown
	.align	2, 0
	.type	 SetBgRegs,function
	.thumb_func
SetBgRegs:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L244	@cond_branch
	cmp	r0, #0x1
	beq	.L245	@cond_branch
.L244:
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x46
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xe
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xc
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	b	.L242
.L245:
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x46
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L250
	ldrh	r3, [r0]
	cmp	r3, #0
	bne	.L246	@cond_branch
	ldr	r1, .L250+0x4
	ldr	r2, [r1]
	mov	r0, #0xb0
	strb	r0, [r2, #0x14]
	ldr	r2, [r1]
	mov	r0, #0x10
	strb	r0, [r2, #0x15]
	ldr	r0, [r1]
	strb	r3, [r0, #0xc]
	ldr	r2, [r1]
	mov	r0, #0x50
	b	.L249
.L251:
	.align	2, 0
.L250:
	.word	gSpecialVar_0x8004
	.word	sCableCar
.L246:
	ldr	r1, .L252
	ldr	r2, [r1]
	mov	r3, #0x0
	mov	r0, #0x60
	strb	r0, [r2, #0x14]
	ldr	r2, [r1]
	mov	r0, #0xe8
	strb	r0, [r2, #0x15]
	ldr	r0, [r1]
	strb	r3, [r0, #0xc]
	ldr	r2, [r1]
	mov	r0, #0x4
.L249:
	strb	r0, [r2, #0xd]
	ldr	r0, [r1]
	strb	r3, [r0, #0x9]
	ldr	r0, [r1]
	strb	r3, [r0, #0x9]
	add	r4, r1, #0
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x14]
	mov	r0, #0x1c
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x15]
	mov	r0, #0x1e
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xc]
	mov	r0, #0x14
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xd]
	mov	r0, #0x16
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x10
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x9]
	mov	r0, #0x12
	bl	SetGpuReg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r1, #0xfc
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
.L242:
	pop	{r4}
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	sCableCar
.Lfe15:
	.size	 SetBgRegs,.Lfe15-SetBgRegs
	.section .rodata
.LC49:
	.byte	0x64
	.byte	0x69
.LC51:
	.byte	0x37
	.byte	0x1f
	.byte	0x20
	.byte	0x62
	.align	1, 0
.LC53:
	.short	0x0
	.short	0x50
	.short	0xf0
	.short	0x92
.LC55:
	.byte	0x0
	.byte	0x3c
	.byte	0x78
	.byte	0xaa
	.align	2, 0
.LC57:
	.word	SpriteCB_HikerGoingUp
	.word	SpriteCB_HikerGoingDown
.text
	.align	2, 0
	.type	 CreateCableCarSprites,function
	.thumb_func
CreateCableCarSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x28
	ldr	r1, .L277
	add	r0, sp, #0xc
	mov	r2, #0x2
	bl	memcpy
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	add	r6, sp, #0x10
	ldr	r1, .L277+0x4
	add	r0, r6, #0
	mov	r2, #0x4
	bl	memcpy
	add	r5, sp, #0x14
	ldr	r1, .L277+0x8
	add	r0, r5, #0
	mov	r2, #0x8
	bl	memcpy
	add	r4, sp, #0x1c
	ldr	r1, .L277+0xc
	add	r0, r4, #0
	mov	r2, #0x4
	bl	memcpy
	ldr	r0, .L277+0x10
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x20]
	str	r1, [sp, #0x24]
	ldr	r0, .L277+0x14
	ldrh	r0, [r0]
	mov	r8, r6
	mov	sl, r5
	cmp	r0, #0
	beq	.L257	@cond_branch
	cmp	r0, #0x1
	beq	.L259	@cond_branch
.L257:
	ldr	r0, .L277+0x18
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	add	r0, r0, sp
	add	r0, r0, #0xc
	ldrb	r0, [r0]
	ldr	r1, .L277+0x1c
	mov	r2, #0x66
	str	r2, [sp]
	mov	r2, #0xc8
	mov	r3, #0x49
	bl	AddPseudoObjectEvent
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x40
	beq	.L258	@cond_branch
	ldr	r0, .L277+0x20
	lsl	r1, r6, #0x4
	add	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x8
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	mov	r0, #0x8
	strh	r0, [r1, #0x24]
	mov	r0, #0x10
	strh	r0, [r1, #0x26]
	mov	r0, #0xc8
	strh	r0, [r1, #0x2e]
	mov	r0, #0x49
	strh	r0, [r1, #0x30]
.L258:
	ldr	r4, .L277+0x24
	add	r0, r4, #0
	mov	r1, #0xb0
	mov	r2, #0x2b
	mov	r3, #0x67
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L277+0x20
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x20
	strh	r1, [r0, #0x26]
	strh	r1, [r0, #0x24]
	mov	r1, #0xb0
	strh	r1, [r0, #0x2e]
	mov	r1, #0x2b
	strh	r1, [r0, #0x30]
	add	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0xc8
	mov	r2, #0x63
	mov	r3, #0x65
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x8
	strh	r1, [r0, #0x24]
	mov	r1, #0x4
	strh	r1, [r0, #0x26]
	mov	r1, #0xc8
	strh	r1, [r0, #0x2e]
	mov	r1, #0x63
	strh	r1, [r0, #0x30]
	ldr	r2, .L277+0x28
	ldr	r1, [r2]
	mov	r0, #0x7
	strb	r0, [r1, #0x2]
	ldr	r1, [r2]
	mov	r0, #0xaf
	lsl	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	mov	r0, #0x2
	bl	SetCurrentAndNextWeatherNoDelay
	b	.L255
.L278:
	.align	2, 0
.L277:
	.word	.LC49
	.word	.LC51
	.word	.LC53
	.word	.LC55
	.word	.LC57
	.word	gSpecialVar_0x8004
	.word	gSaveBlock2Ptr
	.word	SpriteCB_Player
	.word	gSprites
	.word	sSpriteTemplate_CableCar
	.word	sCableCar
.L259:
	ldr	r7, .L279
	ldr	r0, [r7]
	ldr	r1, .L279+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r1, r1, #0x48
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r2, #0x18
	mov	r3, #0x1a
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r0, .L279+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	add	r0, r0, sp
	add	r0, r0, #0xc
	ldrb	r0, [r0]
	ldr	r1, .L279+0xc
	mov	r2, #0x66
	str	r2, [sp]
	mov	r2, #0x80
	mov	r3, #0x27
	bl	AddPseudoObjectEvent
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x40
	beq	.L260	@cond_branch
	ldr	r0, .L279+0x10
	lsl	r1, r6, #0x4
	add	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x8
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	mov	r0, #0x8
	strh	r0, [r1, #0x24]
	mov	r0, #0x10
	strh	r0, [r1, #0x26]
	mov	r0, #0x80
	strh	r0, [r1, #0x2e]
	mov	r0, #0x27
	strh	r0, [r1, #0x30]
.L260:
	ldr	r4, .L279+0x14
	add	r0, r4, #0
	mov	r1, #0x68
	mov	r2, #0x9
	mov	r3, #0x67
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L279+0x10
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x20
	strh	r1, [r0, #0x26]
	strh	r1, [r0, #0x24]
	mov	r1, #0x68
	strh	r1, [r0, #0x2e]
	mov	r1, #0x9
	strh	r1, [r0, #0x30]
	add	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x80
	mov	r2, #0x41
	mov	r3, #0x65
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x8
	strh	r1, [r0, #0x24]
	mov	r1, #0x4
	strh	r1, [r0, #0x26]
	mov	r1, #0x80
	strh	r1, [r0, #0x2e]
	mov	r1, #0x41
	strh	r1, [r0, #0x30]
	ldr	r1, [r7]
	mov	r0, #0x2
	strb	r0, [r1, #0x2]
	ldr	r1, [r7]
	ldr	r0, .L279+0x18
	strh	r0, [r1, #0x4]
	mov	r0, #0x7
	bl	SetCurrentAndNextWeatherNoDelay
.L255:
	mov	r4, #0x0
	ldr	r5, .L279+0x10
.L265:
	lsl	r1, r4, #0x14
	mov	r2, #0xc0
	lsl	r2, r2, #0xf
	add	r1, r1, r2
	asr	r1, r1, #0x10
	lsl	r2, r4, #0x13
	ldr	r3, .L279+0x1c
	add	r2, r2, r3
	asr	r2, r2, #0x10
	ldr	r0, .L279+0x20
	mov	r3, #0x68
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x8
	strh	r1, [r0, #0x24]
	strh	r1, [r0, #0x26]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x8
	bls	.L265	@cond_branch
	mov	r0, #0x3f
	mov	r4, r9
	and	r0, r0, r4
	cmp	r0, #0
	bne	.L267	@cond_branch
	mov	r0, r9
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r0, r0, r8
	ldrb	r0, [r0]
	ldr	r5, .L279+0x24
	ldrh	r4, [r5]
	lsl	r4, r4, #0x2
	add	r1, sp, #0x20
	add	r1, r4, r1
	ldr	r1, [r1]
	mov	r3, sl
	add	r2, r3, r4
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r3, sp
	add	r3, r3, #0x16
	add	r3, r3, r4
	mov	r4, #0x0
	ldrsh	r3, [r3, r4]
	mov	r4, #0x6a
	str	r4, [sp]
	bl	AddPseudoObjectEvent
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x40
	beq	.L267	@cond_branch
	ldr	r1, .L279+0x10
	lsl	r2, r6, #0x4
	add	r0, r2, r6
	lsl	r0, r0, #0x2
	add	r4, r0, r1
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x8
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	add	r0, r4, #0
	add	r0, r0, #0x28
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	neg	r0, r0
	strh	r0, [r4, #0x24]
	add	r0, r4, #0
	add	r0, r0, #0x29
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	neg	r0, r0
	strh	r0, [r4, #0x26]
	ldrh	r0, [r5]
	mov	r8, r2
	cmp	r0, #0
	bne	.L269	@cond_branch
	mov	r7, #0x1
	mov	r5, r9
	and	r5, r5, r7
	cmp	r5, #0
	beq	.L270	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x6
	b	.L275
.L280:
	.align	2, 0
.L279:
	.word	sCableCar
	.word	0x40fc
	.word	gSaveBlock2Ptr
	.word	SpriteCB_Player
	.word	gSprites
	.word	sSpriteTemplate_CableCar
	.word	0x109
	.word	-0x80000
	.word	sSpriteTemplate_Cable
	.word	gSpecialVar_0x8004
.L270:
	add	r0, r4, #0
	mov	r1, #0x7
	b	.L276
.L269:
	mov	r7, #0x1
	mov	r5, r9
	and	r5, r5, r7
	cmp	r5, #0
	beq	.L273	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x7
.L275:
	bl	StartSpriteAnim
	strh	r7, [r4, #0x30]
	ldrh	r0, [r4, #0x22]
	add	r0, r0, #0x2
	strh	r0, [r4, #0x22]
	b	.L272
.L273:
	add	r0, r4, #0
	mov	r1, #0x6
.L276:
	bl	StartSpriteAnim
	strh	r5, [r4, #0x30]
.L272:
	ldr	r0, .L281
	mov	r2, r8
	add	r1, r2, r6
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0x3
	mov	r3, r9
	and	r0, r0, r3
	add	r0, r0, sp
	add	r0, r0, #0x1c
	ldrb	r0, [r0]
	strh	r0, [r1, #0x32]
.L267:
	add	sp, sp, #0x28
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gSprites
.Lfe16:
	.size	 CreateCableCarSprites,.Lfe16-CreateCableCarSprites
	.align	2, 0
	.type	 BufferNextGroundSegment,function
	.thumb_func
BufferNextGroundSegment:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r3, #0x0
	mov	r9, r3
	ldr	r2, .L294
	ldr	r0, [r2]
	ldrb	r1, [r0, #0x1b]
	add	r1, r1, #0x2
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x18
	mov	ip, r0
.L287:
	mov	r7, #0x0
	lsl	r0, r3, #0x1
	add	r1, r3, #0x3
	add	r2, r3, #0x6
	add	r4, r3, #0x1
	str	r4, [sp, #0x4]
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	str	r0, [sp]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	mov	sl, r0
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	mov	r8, r0
.L291:
	ldr	r0, .L294
	ldr	r6, [r0]
	lsl	r3, r7, #0x1
	ldr	r1, [sp]
	add	r2, r3, r1
	add	r4, r6, #0
	add	r4, r4, #0x22
	add	r2, r4, r2
	mov	r1, ip
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	ldr	r0, .L294+0x4
	add	r5, r6, r0
	ldr	r0, [r5]
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	strh	r0, [r2]
	mov	r1, sl
	add	r2, r3, r1
	add	r2, r4, r2
	str	r2, [sp, #0x8]
	ldr	r0, [r5]
	mov	r2, r9
	lsl	r1, r2, #0x1
	add	r0, r1, r0
	ldrh	r0, [r0]
	ldr	r2, [sp, #0x8]
	strh	r0, [r2]
	add	r3, r3, r8
	add	r4, r4, r3
	ldr	r0, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x48
	ldrh	r0, [r1]
	strh	r0, [r4]
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xb
	bls	.L291	@cond_branch
	ldr	r4, [sp, #0x4]
	lsl	r0, r4, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L287	@cond_branch
	ldrb	r0, [r6, #0x1b]
	add	r0, r0, #0x1
	mov	r1, #0x3
	bl	__modsi3
	strb	r0, [r6, #0x1b]
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	sCableCar
	.word	0x40fc
.Lfe17:
	.size	 BufferNextGroundSegment,.Lfe17-BufferNextGroundSegment
	.align	2, 0
	.type	 AnimateGroundGoingUp,function
	.thumb_func
AnimateGroundGoingUp:
	push	{r4, r5, lr}
	ldr	r5, .L299
	ldr	r4, [r5]
	ldrb	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	mov	r1, #0x60
	bl	__modsi3
	strb	r0, [r4, #0x1c]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x1f]
	ldrb	r2, [r1, #0x1d]
	sub	r0, r0, r2
	strb	r0, [r1, #0x8]
	ldr	r2, [r5]
	add	r0, r2, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	ldrb	r1, [r2, #0x1e]
	sub	r0, r0, r1
	strb	r0, [r2, #0x9]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x1d]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x1d]
	ldr	r2, [r5]
	ldrb	r0, [r2, #0x1d]
	mov	r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L297	@cond_branch
	ldrb	r0, [r2, #0x1e]
	add	r0, r0, #0x1
	strb	r0, [r2, #0x1e]
.L297:
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x1d]
	cmp	r0, #0x10
	bls	.L298	@cond_branch
	bl	DrawNextGroundSegmentGoingUp
.L298:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L300:
	.align	2, 0
.L299:
	.word	sCableCar
.Lfe18:
	.size	 AnimateGroundGoingUp,.Lfe18-AnimateGroundGoingUp
	.align	2, 0
	.type	 AnimateGroundGoingDown,function
	.thumb_func
AnimateGroundGoingDown:
	push	{r4, r5, lr}
	ldr	r5, .L304
	ldr	r4, [r5]
	ldrb	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	mov	r1, #0x60
	bl	__modsi3
	strb	r0, [r4, #0x1c]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x1d]
	ldrb	r2, [r1, #0x1f]
	add	r0, r0, r2
	strb	r0, [r1, #0x8]
	ldr	r1, [r5]
	add	r2, r1, #0
	add	r2, r2, #0x20
	ldrb	r0, [r1, #0x1e]
	ldrb	r2, [r2]
	add	r0, r0, r2
	strb	r0, [r1, #0x9]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x1d]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x1d]
	ldr	r2, [r5]
	ldrb	r0, [r2, #0x1d]
	mov	r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L302	@cond_branch
	ldrb	r0, [r2, #0x1e]
	add	r0, r0, #0x1
	strb	r0, [r2, #0x1e]
.L302:
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x1d]
	cmp	r0, #0x10
	bls	.L303	@cond_branch
	bl	DrawNextGroundSegmentGoingDown
.L303:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	sCableCar
.Lfe19:
	.size	 AnimateGroundGoingDown,.Lfe19-AnimateGroundGoingDown
	.align	2, 0
	.type	 DrawNextGroundSegmentGoingUp,function
	.thumb_func
DrawNextGroundSegmentGoingUp:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r7, #0x0
	ldr	r3, .L320
	ldr	r0, [r3]
	strb	r7, [r0, #0x1e]
	strb	r7, [r0, #0x1d]
	ldr	r1, [r3]
	ldrb	r0, [r1, #0x8]
	strb	r0, [r1, #0x1f]
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x9]
	add	r0, r0, #0x20
	strb	r1, [r0]
	ldr	r4, [r3]
	ldrb	r1, [r4, #0x19]
	add	r2, r1, #0
	add	r2, r2, #0x1e
	add	r0, r2, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r2, r0
	strb	r0, [r4, #0x19]
	ldr	r1, [r3]
	ldrb	r0, [r1, #0x18]
	sub	r0, r0, #0x2
	strb	r0, [r1, #0x18]
	ldr	r4, .L320+0x4
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x1a]
	add	r2, r1, #0
	add	r2, r2, #0x17
	add	r0, r2, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r2, r0
	strb	r0, [r4]
	ldr	r6, .L320+0x8
	mov	r9, r3
	ldr	r0, .L320+0xc
	mov	r8, r0
.L312:
	mov	r1, r9
	ldr	r2, [r1]
	ldrb	r0, [r2, #0x19]
	strb	r0, [r6]
	ldr	r0, .L320+0x4
	ldrb	r0, [r0]
	add	r1, r0, r7
	add	r0, r1, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r1, r0
	mov	r1, r8
	strb	r0, [r1]
	ldrb	r1, [r2, #0x18]
	lsl	r1, r1, #0x1
	lsl	r0, r7, #0x1
	add	r0, r0, r7
	lsl	r5, r0, #0x3
	add	r1, r1, r5
	add	r0, r2, #0
	add	r0, r0, #0x22
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldrb	r2, [r6]
	mov	r0, r8
	ldrb	r3, [r0]
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x11
	mov	sl, r0
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	bl	FillBgTilemapBufferRect
	ldrb	r1, [r6]
	add	r2, r1, #0x1
	add	r0, r2, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r2, r0
	strb	r0, [r6]
	mov	r0, r9
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x18]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	add	r1, r1, #0x22
	add	r1, r1, r0
	ldrh	r1, [r1]
	ldrb	r2, [r6]
	mov	r0, r8
	ldrb	r3, [r0]
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, sl
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	bl	FillBgTilemapBufferRect
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x8
	bls	.L312	@cond_branch
	ldr	r5, .L320+0x8
	ldr	r4, .L320
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x19]
	add	r2, r1, #0
	add	r2, r2, #0x1e
	add	r0, r2, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r2, r0
	strb	r0, [r5]
	ldrb	r2, [r5]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r6, #0x20
	str	r6, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x18]
	cmp	r0, #0
	bne	.L317	@cond_branch
	ldrb	r2, [r1, #0x1a]
	add	r3, r2, #0
	add	r3, r3, #0x1d
	add	r0, r3, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r3, r0
	strb	r0, [r1, #0x1a]
	ldr	r1, [r4]
	mov	r0, #0xc
	strb	r0, [r1, #0x18]
	bl	BufferNextGroundSegment
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x1a]
	add	r2, r1, #0x1
	add	r0, r2, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r2, r0
	strb	r0, [r5]
	ldrb	r3, [r5]
	str	r6, [sp]
	mov	r0, #0x9
	str	r0, [sp, #0x4]
	mov	r1, sl
	str	r1, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	FillBgTilemapBufferRect
.L317:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L321:
	.align	2, 0
.L320:
	.word	sCableCar
	.word	sGroundSegmentY_Up
	.word	sGroundX_Up
	.word	sGroundY_Up
.Lfe20:
	.size	 DrawNextGroundSegmentGoingUp,.Lfe20-DrawNextGroundSegmentGoingUp
	.align	2, 0
	.type	 DrawNextGroundSegmentGoingDown,function
	.thumb_func
DrawNextGroundSegmentGoingDown:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r7, #0x0
	ldr	r2, .L334
	ldr	r0, [r2]
	strb	r7, [r0, #0x1e]
	strb	r7, [r0, #0x1d]
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x8]
	strb	r0, [r1, #0x1f]
	ldr	r0, [r2]
	ldrb	r1, [r0, #0x9]
	add	r0, r0, #0x20
	strb	r1, [r0]
	ldr	r4, [r2]
	ldrb	r1, [r4, #0x19]
	add	r3, r1, #0x2
	add	r0, r3, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r3, r0
	strb	r0, [r4, #0x19]
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x18]
	add	r0, r0, #0x2
	strb	r0, [r1, #0x18]
	ldr	r1, .L334+0x4
	ldr	r0, [r2]
	ldrb	r0, [r0, #0x1a]
	strb	r0, [r1]
	ldr	r6, .L334+0x8
	mov	sl, r2
	ldr	r0, .L334+0xc
	mov	r9, r0
.L327:
	mov	r1, sl
	ldr	r2, [r1]
	ldrb	r0, [r2, #0x19]
	strb	r0, [r6]
	ldr	r0, .L334+0x4
	ldrb	r0, [r0]
	add	r1, r0, r7
	add	r0, r1, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r1, r0
	mov	r1, r9
	strb	r0, [r1]
	ldrb	r1, [r2, #0x18]
	lsl	r1, r1, #0x1
	lsl	r0, r7, #0x1
	add	r0, r0, r7
	lsl	r5, r0, #0x3
	add	r1, r1, r5
	add	r0, r2, #0
	add	r0, r0, #0x22
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldrb	r2, [r6]
	mov	r0, r9
	ldrb	r3, [r0]
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x11
	mov	r8, r0
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	bl	FillBgTilemapBufferRect
	ldrb	r1, [r6]
	add	r2, r1, #0x1
	add	r0, r2, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r2, r0
	strb	r0, [r6]
	mov	r0, sl
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x18]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	add	r1, r1, #0x22
	add	r1, r1, r0
	ldrh	r1, [r1]
	ldrb	r2, [r6]
	mov	r0, r9
	ldrb	r3, [r0]
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, r8
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	bl	FillBgTilemapBufferRect
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x8
	bls	.L327	@cond_branch
	ldr	r4, .L334+0xc
	ldr	r5, .L334
	ldr	r3, [r5]
	ldrb	r1, [r3, #0x1a]
	add	r2, r1, #0
	add	r2, r2, #0x17
	add	r0, r2, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r2, r0
	strb	r0, [r4]
	ldrb	r2, [r3, #0x19]
	ldrb	r3, [r4]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x9
	str	r0, [sp, #0x4]
	mov	r1, r8
	str	r1, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x18]
	cmp	r0, #0xa
	bne	.L332	@cond_branch
	ldrb	r2, [r1, #0x1a]
	add	r3, r2, #0x3
	add	r0, r3, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r3, r0
	strb	r0, [r1, #0x1a]
	ldr	r1, [r5]
	mov	r0, #0xfe
	strb	r0, [r1, #0x18]
	bl	BufferNextGroundSegment
.L332:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	sCableCar
	.word	sGroundSegmentY_Down
	.word	sGroundX_Down
	.word	sGroundY_Down
.Lfe21:
	.size	 DrawNextGroundSegmentGoingDown,.Lfe21-DrawNextGroundSegmentGoingDown
	.align	2, 0
	.type	 InitGroundTilemapData,function
	.thumb_func
InitGroundTilemapData:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L339	@cond_branch
	cmp	r0, #0x1
	beq	.L340	@cond_branch
.L339:
	ldr	r1, .L342
	ldr	r2, [r1]
	mov	r3, #0x0
	mov	r0, #0x2
	strb	r0, [r2, #0x1b]
	ldr	r0, [r1]
	strb	r3, [r0, #0x19]
	ldr	r2, [r1]
	mov	r0, #0x14
	strb	r0, [r2, #0x1a]
	ldr	r1, [r1]
	mov	r0, #0xc
	strb	r0, [r1, #0x18]
	bl	BufferNextGroundSegment
	bl	DrawNextGroundSegmentGoingUp
	b	.L337
.L343:
	.align	2, 0
.L342:
	.word	sCableCar
.L340:
	ldr	r1, .L344
	ldr	r2, [r1]
	mov	r0, #0x2
	strb	r0, [r2, #0x1b]
	ldr	r2, [r1]
	mov	r0, #0x1c
	strb	r0, [r2, #0x19]
	ldr	r2, [r1]
	mov	r0, #0x14
	strb	r0, [r2, #0x1a]
	ldr	r1, [r1]
	mov	r0, #0x4
	strb	r0, [r1, #0x18]
	bl	BufferNextGroundSegment
	bl	DrawNextGroundSegmentGoingDown
.L337:
	ldr	r0, .L344
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x1c]
	pop	{r0}
	bx	r0
.L345:
	.align	2, 0
.L344:
	.word	sCableCar
.Lfe22:
	.size	 InitGroundTilemapData,.Lfe22-InitGroundTilemapData
.text
	.align	2, 0

